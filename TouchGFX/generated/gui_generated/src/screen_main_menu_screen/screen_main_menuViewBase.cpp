/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_main_menu_screen/screen_main_menuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

screen_main_menuViewBase::screen_main_menuViewBase() :
    flexButtonCallback(this, &screen_main_menuViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SNAKE_LOGO_ID));
    scalableImage1.setPosition(160, 1, 160, 271);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TICTACTOE_LOGO_ID));
    scalableImage2.setPosition(320, 0, 154, 272);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);

    btn_tictactoe.setBoxWithBorderPosition(0, 0, 154, 271);
    btn_tictactoe.setBorderSize(5);
    btn_tictactoe.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_tictactoe.setAlpha(1);
    btn_tictactoe.setAction(flexButtonCallback);
    btn_tictactoe.setPosition(320, 1, 154, 271);
    add(btn_tictactoe);

    btn_snake.setBoxWithBorderPosition(0, 0, 160, 271);
    btn_snake.setBorderSize(5);
    btn_snake.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_snake.setAlpha(0);
    btn_snake.setAction(flexButtonCallback);
    btn_snake.setPosition(160, 1, 160, 271);
    add(btn_snake);

    btn_space_invaders.setBoxWithBorderPosition(0, 0, 160, 272);
    btn_space_invaders.setBorderSize(5);
    btn_space_invaders.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    btn_space_invaders.setAlpha(0);
    btn_space_invaders.setAction(flexButtonCallback);
    btn_space_invaders.setPosition(0, 0, 160, 272);
    add(btn_space_invaders);

    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ID));
    scalableImage3.setPosition(0, 0, 160, 272);
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage3);
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}

void screen_main_menuViewBase::setupScreen()
{

}

void screen_main_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &btn_snake)
    {
        //intr_snake_game
        //When btn_snake clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
    {
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with screen transition towards East
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
    }
    if (&src == &btn_space_invaders)
    {
        //intr_space_invaders_game
        //When btn_space_invaders clicked change screen to screen_space_invaders
        //Go to screen_space_invaders with screen transition towards East
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
    }
}
