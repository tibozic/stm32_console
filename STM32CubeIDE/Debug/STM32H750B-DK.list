
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a1a0  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003b04  9002a440  9002a440  0004a440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002df44  9002df44  0004df44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e04c  9002e04c  00551b54  2**0
                  CONTENTS
  6 .ARM          00000000  9002e04c  9002e04c  00551b54  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002e04c  9002e04c  00551b54  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000020  9002e04c  9002e04c  0004e04c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000010  9002e06c  9002e06c  0004e06c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000164  24000000  9002e07c  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000164  9002e1e0  00050164  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00034ba0  24005b68  90033be0  00055b68  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a708  90033be0  0005a708  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00551b54  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 00002210  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000134  90202210  90202210  00062210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 004ef810  90202344  90202344  00062344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00560000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00560000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00551b82  2**0
                  CONTENTS, READONLY
 21 .debug_line   00083360  00000000  00000000  00551c44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  005d4fa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   001418b2  00000000  00000000  005d5000  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001cc8c  00000000  00000000  007168b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 00003860  00000000  00000000  00733540  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a32b9  00000000  00000000  00736da0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 0000a15a  00000000  00000000  008da059  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0004a3c8  00000000  00000000  008e41b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000b200  00000000  00000000  0092e57c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003edca  00000000  00000000  0093977c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b68 	.word	0x24005b68
900002bc:	00000000 	.word	0x00000000
900002c0:	9002a428 	.word	0x9002a428

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b6c 	.word	0x24005b6c
900002dc:	9002a428 	.word	0x9002a428

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f00a f907 	bl	9000a5bc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f029 fb49 	bl	90029a44 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb55 	bl	90002a60 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002e07c 	.word	0x9002e07c
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000164 	.word	0x24000164
  ldr  r2, =_sbss
900003c8:	24005b68 	.word	0x24005b68
  ldr  r3, = _ebss
900003cc:	2403a708 	.word	0x2403a708

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed3 	bl	90002188 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be53 	b.w	90002090 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bece 	b.w	9000218c <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f028 ff8b 	bl	90029364 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f009 ff92 	bl	9000a3d8 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f00a f80b 	bl	9000a4f4 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f028 ff35 	bl	90029364 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f00a fd5b 	bl	9000afc0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f00a fd53 	bl	9000afc0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f00a fd4b 	bl	9000afc0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f00a fd43 	bl	9000afc0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b84 	.word	0x24005b84
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f00a bd2d 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f00a bd24 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f00a bd1b 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f00a bd12 	b.w	9000afcc <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b84 	.word	0x24005b84
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f00a bcf9 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f00a bcf0 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f00a bce7 	b.w	9000afcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f00a bcde 	b.w	9000afcc <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b84 	.word	0x24005b84
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f00a bcce 	b.w	9000afd4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f00a bcca 	b.w	9000afd4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f00a bcc6 	b.w	9000afd4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f00a bcc2 	b.w	9000afd4 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039acb 	.word	0x24039acb

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f028 fe7a 	bl	900293c0 <__assert_func>
900006cc:	24039ac0 	.word	0x24039ac0
900006d0:	24039ac2 	.word	0x24039ac2
900006d4:	24039ac6 	.word	0x24039ac6
900006d8:	24039ac8 	.word	0x24039ac8
900006dc:	9002a4c0 	.word	0x9002a4c0
900006e0:	9002a524 	.word	0x9002a524
900006e4:	9002a568 	.word	0x9002a568

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f013 f8e6 	bl	900138bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be3c 	b.w	9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be40 	b.w	90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff25 	bl	90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdea 	b.w	90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bff8 	b.w	90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe2 	b.w	9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdee 	b.w	90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f012 fc20 	bl	90012fb4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f012 baee 	b.w	90012d60 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f028 fdeb 	bl	90029364 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24039ac4 	.word	0x24039ac4
900007e4:	24039ac2 	.word	0x24039ac2
900007e8:	24039ac0 	.word	0x24039ac0

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f028 fdbf 	bl	900293c0 <__assert_func>
90000842:	bf00      	nop
90000844:	24039aca 	.word	0x24039aca
90000848:	90000675 	.word	0x90000675
9000084c:	24039acb 	.word	0x24039acb
90000850:	9002a5b0 	.word	0x9002a5b0
90000854:	9002a5e8 	.word	0x9002a5e8
90000858:	9002a568 	.word	0x9002a568

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f00a fba2 	bl	9000afcc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f00a fb9d 	bl	9000afcc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f00a fb98 	bl	9000afcc <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f013 f807 	bl	900138bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff48 	bl	90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f028 fd44 	bl	900293c0 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039aca 	.word	0x24039aca
90000944:	d0000000 	.word	0xd0000000
90000948:	24039acb 	.word	0x24039acb
9000094c:	9002a5b0 	.word	0x9002a5b0
90000950:	9002a5e8 	.word	0x9002a5e8
90000954:	9002a568 	.word	0x9002a568

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f012 ffc5 	bl	900138f0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f012 ffbf 	bl	900138f0 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039acc 	.word	0x24039acc

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f028 fcfe 	bl	900293c0 <__assert_func>
900009c4:	9002a714 	.word	0x9002a714
900009c8:	9002a710 	.word	0x9002a710
900009cc:	9002a770 	.word	0x9002a770

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f028 fcc5 	bl	90029364 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f00b fbd9 	bl	9000c22c <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00f f80d 	bl	9000faf8 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f00b fcdc 	bl	9000c4bc <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005ba0 	.word	0x24005ba0
90000b14:	24005bcc 	.word	0x24005bcc
90000b18:	24005b98 	.word	0x24005b98
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b9c 	.word	0x24005b9c
90000b24:	24005bbc 	.word	0x24005bbc
90000b28:	24005bc8 	.word	0x24005bc8
90000b2c:	24005bc4 	.word	0x24005bc4
90000b30:	24005bd0 	.word	0x24005bd0
90000b34:	24005bd4 	.word	0x24005bd4
90000b38:	24005bc0 	.word	0x24005bc0
90000b3c:	24009568 	.word	0x24009568
90000b40:	24005bdc 	.word	0x24005bdc
90000b44:	24005bd8 	.word	0x24005bd8
90000b48:	24005bb8 	.word	0x24005bb8
90000b4c:	24005b94 	.word	0x24005b94

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f028 fbe0 	bl	900293c0 <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	9002a7c0 	.word	0x9002a7c0
90000c08:	9002a7d4 	.word	0x9002a7d4
90000c0c:	9002a770 	.word	0x9002a770

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f00b fa93 	bl	9000c22c <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f00b fba1 	bl	9000c4bc <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f028 fb11 	bl	900293c0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bbc 	.word	0x24005bbc
90000db4:	24005bcc 	.word	0x24005bcc
90000db8:	24005ba0 	.word	0x24005ba0
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc8 	.word	0x24005bc8
90000dc4:	24005b9c 	.word	0x24005b9c
90000dc8:	24005bd0 	.word	0x24005bd0
90000dcc:	24009568 	.word	0x24009568
90000dd0:	24005bd4 	.word	0x24005bd4
90000dd4:	24005bc4 	.word	0x24005bc4
90000dd8:	24005bc0 	.word	0x24005bc0
90000ddc:	9002a7c0 	.word	0x9002a7c0
90000de0:	9002a7d4 	.word	0x9002a7d4
90000de4:	9002a770 	.word	0x9002a770
90000de8:	24005bd8 	.word	0x24005bd8
90000dec:	24005b98 	.word	0x24005b98
90000df0:	24005bb8 	.word	0x24005bb8
90000df4:	24005b94 	.word	0x24005b94

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f028 fa48 	bl	900293c0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f028 fa40 	bl	900293c0 <__assert_func>
90000f40:	9002a7c0 	.word	0x9002a7c0
90000f44:	9002a7d4 	.word	0x9002a7d4
90000f48:	9002a770 	.word	0x9002a770
90000f4c:	9002a818 	.word	0x9002a818
90000f50:	9002a864 	.word	0x9002a864

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f028 f98f 	bl	900293c0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f028 f986 	bl	900293c0 <__assert_func>
900010b4:	9002a818 	.word	0x9002a818
900010b8:	9002a898 	.word	0x9002a898
900010bc:	9002a770 	.word	0x9002a770
900010c0:	9002a7c0 	.word	0x9002a7c0
900010c4:	9002a7d4 	.word	0x9002a7d4

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00e fcae 	bl	9000fa58 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	9002a9bc 	.word	0x9002a9bc
9000110c:	24005bdc 	.word	0x24005bdc

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f028 fbba 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f028 fbaf 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f028 fba2 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f028 fb87 	bl	900298e0 <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f028 fb78 	bl	900298e0 <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f028 fb47 	bl	900298e0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f028 fb08 	bl	900298e0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f028 fa4d 	bl	900298e0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	9002a8f4 	.word	0x9002a8f4
90001460:	9002a9ac 	.word	0x9002a9ac
90001464:	9002a9a4 	.word	0x9002a9a4
90001468:	9002a99c 	.word	0x9002a99c
9000146c:	9002a984 	.word	0x9002a984
90001470:	9002a98c 	.word	0x9002a98c
90001474:	9002a994 	.word	0x9002a994
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f028 fa28 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f028 fa1e 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f028 fa12 	bl	900298e0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f028 fa05 	bl	900298e0 <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f027 ff3d 	bl	900293c0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f027 ff33 	bl	900293c0 <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f027 ff2c 	bl	900293c0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f027 ff22 	bl	900293c0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f027 ff18 	bl	900293c0 <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	9002a8f4 	.word	0x9002a8f4
9000159c:	9002a9ac 	.word	0x9002a9ac
900015a0:	9002a9a4 	.word	0x9002a9a4
900015a4:	9002a99c 	.word	0x9002a99c
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	9002a7c0 	.word	0x9002a7c0
900015b0:	9002a7d4 	.word	0x9002a7d4
900015b4:	9002a770 	.word	0x9002a770
900015b8:	9002a8fc 	.word	0x9002a8fc
900015bc:	9002a918 	.word	0x9002a918
900015c0:	9002a978 	.word	0x9002a978
900015c4:	9002a960 	.word	0x9002a960
900015c8:	9002a948 	.word	0x9002a948

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bb4 	.word	0x24005bb4

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f00a be40 	b.w	9000c320 <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc8 	.word	0x24005bc8
900016a4:	24005bd4 	.word	0x24005bd4
900016a8:	24005bd0 	.word	0x24005bd0

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f00a fe0f 	bl	9000c328 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f00a fdc8 	bl	9000c2b0 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00e ba15 	b.w	9000fb60 <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd8 	.word	0x24005bd8
9000173c:	24000008 	.word	0x24000008
90001740:	24005b9c 	.word	0x24005b9c
90001744:	24005ba0 	.word	0x24005ba0
90001748:	24005bb8 	.word	0x24005bb8
9000174c:	24005bcc 	.word	0x24005bcc
90001750:	24005bdc 	.word	0x24005bdc

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bc4 	.word	0x24005bc4

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005ba0 	.word	0x24005ba0
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bb4 	.word	0x24005bb4
900017e0:	24005bbc 	.word	0x24005bbc
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00e b9a0 	b.w	9000fb60 <osSemaphoreRelease>
90001820:	24005b98 	.word	0x24005b98
90001824:	24005bb4 	.word	0x24005bb4
90001828:	24005ba0 	.word	0x24005ba0
9000182c:	24005b94 	.word	0x24005b94
90001830:	24005bdc 	.word	0x24005bdc

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00e f90c 	bl	9000fa58 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00e f9b4 	bl	9000fbb8 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f027 fdae 	bl	900293c0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f027 fda8 	bl	900293c0 <__assert_func>
90001870:	24005be4 	.word	0x24005be4
90001874:	24005be0 	.word	0x24005be0
90001878:	9002a9f8 	.word	0x9002a9f8
9000187c:	9002aa44 	.word	0x9002aa44
90001880:	9002aa74 	.word	0x9002aa74
90001884:	9002aab8 	.word	0x9002aab8

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00e b932 	b.w	9000faf8 <osSemaphoreAcquire>
90001894:	24005be4 	.word	0x24005be4

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00e b960 	b.w	9000fb60 <osSemaphoreRelease>
900018a0:	24005be4 	.word	0x24005be4

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00e b925 	b.w	9000faf8 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005be4 	.word	0x24005be4

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00e b952 	b.w	9000fb60 <osSemaphoreRelease>
900018bc:	24005be4 	.word	0x24005be4

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00e b9b3 	b.w	9000fc34 <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005be0 	.word	0x24005be0
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00e f9e7 	bl	9000fcb8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00e f9e0 	bl	9000fcb8 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005be0 	.word	0x24005be0

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	9002ac58 	.word	0x9002ac58
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	24009500 	.word	0x24009500
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f027 fcdf 	bl	90029364 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	9002ac58 	.word	0x9002ac58
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00e f804 	bl	9000f9cc <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00e b814 	b.w	9000fa14 <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00e b805 	b.w	9000fa14 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b98 	.word	0x24005b98
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b98 	.word	0x24005b98
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b94 	.word	0x24005b94

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f027 fc37 	bl	900293c0 <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	9002aafc 	.word	0x9002aafc
90001b68:	9002ab18 	.word	0x9002ab18
90001b6c:	9002ab64 	.word	0x9002ab64

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f027 fb5a 	bl	900293c0 <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f027 fb54 	bl	900293c0 <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f027 fb4d 	bl	900293c0 <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	9002aafc 	.word	0x9002aafc
90001d44:	9002aba8 	.word	0x9002aba8
90001d48:	9002ab64 	.word	0x9002ab64
90001d4c:	9002ab18 	.word	0x9002ab18
90001d50:	9002abf4 	.word	0x9002abf4
90001d54:	9002ac10 	.word	0x9002ac10

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039acc 	.word	0x24039acc
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b98 	.word	0x24005b98
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b94 	.word	0x24005b94

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f011 feab 	bl	90013b78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00d fd87 	bl	9000f94c <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	9002ac58 	.word	0x9002ac58

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2040      	movs	r0, #64	; 0x40
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ec4:	3008      	adds	r0, #8
90001ec6:	4770      	bx	lr

90001ec8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ec8:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ecc:	3008      	adds	r0, #8
90001ece:	4770      	bx	lr

90001ed0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed0:	2001      	movs	r0, #1
90001ed2:	4770      	bx	lr

90001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ed4:	f242 70bc 	movw	r0, #10172	; 0x27bc
90001ed8:	4770      	bx	lr
90001eda:	bf00      	nop

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001edc:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001ee0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ee4:	3008      	adds	r0, #8
90001ee6:	4770      	bx	lr

90001ee8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee8:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001eec:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef0:	3008      	adds	r0, #8
90001ef2:	4770      	bx	lr

90001ef4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ef4:	2001      	movs	r0, #1
90001ef6:	4770      	bx	lr

90001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ef8:	2010      	movs	r0, #16
90001efa:	4770      	bx	lr

90001efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001efc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f00:	3008      	adds	r0, #8
90001f02:	4770      	bx	lr

90001f04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f0c:	4608      	mov	r0, r1
90001f0e:	f002 b973 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f12:	bf00      	nop

90001f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f14:	4b03      	ldr	r3, [pc, #12]	; (90001f24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f16:	b510      	push	{r4, lr}
90001f18:	4604      	mov	r4, r0
90001f1a:	6003      	str	r3, [r0, #0]
90001f1c:	f010 fc79 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f20:	4620      	mov	r0, r4
90001f22:	bd10      	pop	{r4, pc}
90001f24:	9002ad10 	.word	0x9002ad10

90001f28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f28:	4b05      	ldr	r3, [pc, #20]	; (90001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f2a:	b510      	push	{r4, lr}
90001f2c:	4604      	mov	r4, r0
90001f2e:	6003      	str	r3, [r0, #0]
90001f30:	f010 fc6f 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f34:	2148      	movs	r1, #72	; 0x48
90001f36:	4620      	mov	r0, r4
90001f38:	f027 fa14 	bl	90029364 <_ZdlPvj>
90001f3c:	4620      	mov	r0, r4
90001f3e:	bd10      	pop	{r4, pc}
90001f40:	9002ad10 	.word	0x9002ad10

90001f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f44:	4b03      	ldr	r3, [pc, #12]	; (90001f54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f46:	b510      	push	{r4, lr}
90001f48:	4604      	mov	r4, r0
90001f4a:	6003      	str	r3, [r0, #0]
90001f4c:	f010 fc61 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f50:	4620      	mov	r0, r4
90001f52:	bd10      	pop	{r4, pc}
90001f54:	9002acdc 	.word	0x9002acdc

90001f58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f58:	4b06      	ldr	r3, [pc, #24]	; (90001f74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f5a:	b510      	push	{r4, lr}
90001f5c:	4604      	mov	r4, r0
90001f5e:	6003      	str	r3, [r0, #0]
90001f60:	f010 fc57 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f64:	f242 71c4 	movw	r1, #10180	; 0x27c4
90001f68:	4620      	mov	r0, r4
90001f6a:	f027 f9fb 	bl	90029364 <_ZdlPvj>
90001f6e:	4620      	mov	r0, r4
90001f70:	bd10      	pop	{r4, pc}
90001f72:	bf00      	nop
90001f74:	9002acdc 	.word	0x9002acdc

90001f78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f78:	4b03      	ldr	r3, [pc, #12]	; (90001f88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f7a:	b510      	push	{r4, lr}
90001f7c:	4604      	mov	r4, r0
90001f7e:	6003      	str	r3, [r0, #0]
90001f80:	f010 fc47 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f84:	4620      	mov	r0, r4
90001f86:	bd10      	pop	{r4, pc}
90001f88:	9002aca8 	.word	0x9002aca8

90001f8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f8c:	4b05      	ldr	r3, [pc, #20]	; (90001fa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI26screen_snake_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f8e:	b510      	push	{r4, lr}
90001f90:	4604      	mov	r4, r0
90001f92:	6003      	str	r3, [r0, #0]
90001f94:	f010 fc3d 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f98:	2118      	movs	r1, #24
90001f9a:	4620      	mov	r0, r4
90001f9c:	f027 f9e2 	bl	90029364 <_ZdlPvj>
90001fa0:	4620      	mov	r0, r4
90001fa2:	bd10      	pop	{r4, pc}
90001fa4:	9002aca8 	.word	0x9002aca8

90001fa8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fa8:	b510      	push	{r4, lr}
90001faa:	4604      	mov	r4, r0
90001fac:	490c      	ldr	r1, [pc, #48]	; (90001fe0 <_ZN12FrontendHeapD1Ev+0x38>)
90001fae:	4a0d      	ldr	r2, [pc, #52]	; (90001fe4 <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb0:	f242 70f0 	movw	r0, #10224	; 0x27f0
90001fb4:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fb8:	6021      	str	r1, [r4, #0]
90001fba:	4420      	add	r0, r4
90001fbc:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90001fc0:	f010 fc27 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fc4:	4620      	mov	r0, r4
90001fc6:	4b08      	ldr	r3, [pc, #32]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x40>)
90001fc8:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fcc:	f010 fc21 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd0:	4620      	mov	r0, r4
90001fd2:	4b06      	ldr	r3, [pc, #24]	; (90001fec <_ZN12FrontendHeapD1Ev+0x44>)
90001fd4:	f840 3f14 	str.w	r3, [r0, #20]!
90001fd8:	f010 fc1b 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fdc:	4620      	mov	r0, r4
90001fde:	bd10      	pop	{r4, pc}
90001fe0:	9002ad44 	.word	0x9002ad44
90001fe4:	9002ad10 	.word	0x9002ad10
90001fe8:	9002acdc 	.word	0x9002acdc
90001fec:	9002aca8 	.word	0x9002aca8

90001ff0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ff2:	4c0c      	ldr	r4, [pc, #48]	; (90002024 <__tcf_0+0x34>)
90001ff4:	4a0c      	ldr	r2, [pc, #48]	; (90002028 <__tcf_0+0x38>)
90001ff6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001ffa:	490c      	ldr	r1, [pc, #48]	; (9000202c <__tcf_0+0x3c>)
90001ffc:	480c      	ldr	r0, [pc, #48]	; (90002030 <__tcf_0+0x40>)
90001ffe:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002002:	6021      	str	r1, [r4, #0]
90002004:	f010 fc05 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002008:	4620      	mov	r0, r4
9000200a:	4b0a      	ldr	r3, [pc, #40]	; (90002034 <__tcf_0+0x44>)
9000200c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002010:	f010 fbff 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002014:	4620      	mov	r0, r4
90002016:	4b08      	ldr	r3, [pc, #32]	; (90002038 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000201c:	f840 3f14 	str.w	r3, [r0, #20]!
90002020:	f010 bbf7 	b.w	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002024:	24005bec 	.word	0x24005bec
90002028:	9002ad10 	.word	0x9002ad10
9000202c:	9002ad44 	.word	0x9002ad44
90002030:	240083dc 	.word	0x240083dc
90002034:	9002acdc 	.word	0x9002acdc
90002038:	9002aca8 	.word	0x9002aca8

9000203c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
9000203c:	b510      	push	{r4, lr}
9000203e:	4604      	mov	r4, r0
90002040:	4a0f      	ldr	r2, [pc, #60]	; (90002080 <_ZN12FrontendHeapD0Ev+0x44>)
90002042:	4910      	ldr	r1, [pc, #64]	; (90002084 <_ZN12FrontendHeapD0Ev+0x48>)
90002044:	f242 70f0 	movw	r0, #10224	; 0x27f0
90002048:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000204c:	6021      	str	r1, [r4, #0]
9000204e:	4420      	add	r0, r4
90002050:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002054:	f010 fbdd 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002058:	4620      	mov	r0, r4
9000205a:	4b0b      	ldr	r3, [pc, #44]	; (90002088 <_ZN12FrontendHeapD0Ev+0x4c>)
9000205c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002060:	f010 fbd7 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002064:	4b09      	ldr	r3, [pc, #36]	; (9000208c <_ZN12FrontendHeapD0Ev+0x50>)
90002066:	4620      	mov	r0, r4
90002068:	f840 3f14 	str.w	r3, [r0, #20]!
9000206c:	f010 fbd1 	bl	90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002070:	4620      	mov	r0, r4
90002072:	f642 1198 	movw	r1, #10648	; 0x2998
90002076:	f027 f975 	bl	90029364 <_ZdlPvj>
9000207a:	4620      	mov	r0, r4
9000207c:	bd10      	pop	{r4, pc}
9000207e:	bf00      	nop
90002080:	9002ad10 	.word	0x9002ad10
90002084:	9002ad44 	.word	0x9002ad44
90002088:	9002acdc 	.word	0x9002acdc
9000208c:	9002aca8 	.word	0x9002aca8

90002090 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002094:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002096:	2400      	movs	r4, #0
90002098:	f001 fa76 	bl	90003588 <_ZN14BitmapDatabase11getInstanceEv>
9000209c:	4605      	mov	r5, r0
9000209e:	f001 fa77 	bl	90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020a2:	4623      	mov	r3, r4
900020a4:	4601      	mov	r1, r0
900020a6:	4622      	mov	r2, r4
900020a8:	4628      	mov	r0, r5
900020aa:	9400      	str	r4, [sp, #0]
900020ac:	f019 f9b2 	bl	9001b414 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b0:	4b29      	ldr	r3, [pc, #164]	; (90002158 <touchgfx_init+0xc8>)
900020b2:	4a2a      	ldr	r2, [pc, #168]	; (9000215c <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020b4:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020b6:	4c2a      	ldr	r4, [pc, #168]	; (90002160 <touchgfx_init+0xd0>)
900020b8:	601a      	str	r2, [r3, #0]
900020ba:	f002 fa87 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020be:	4829      	ldr	r0, [pc, #164]	; (90002164 <touchgfx_init+0xd4>)
900020c0:	f019 f910 	bl	9001b2e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020c4:	6823      	ldr	r3, [r4, #0]
900020c6:	f3bf 8f5b 	dmb	ish
900020ca:	07db      	lsls	r3, r3, #31
900020cc:	d505      	bpl.n	900020da <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020ce:	4826      	ldr	r0, [pc, #152]	; (90002168 <touchgfx_init+0xd8>)
}
900020d0:	b002      	add	sp, #8
900020d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020d6:	f7fe bbfb 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020da:	4620      	mov	r0, r4
900020dc:	f027 f944 	bl	90029368 <__cxa_guard_acquire>
900020e0:	2800      	cmp	r0, #0
900020e2:	d0f4      	beq.n	900020ce <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020e4:	4d21      	ldr	r5, [pc, #132]	; (9000216c <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020e6:	4f22      	ldr	r7, [pc, #136]	; (90002170 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020e8:	4b22      	ldr	r3, [pc, #136]	; (90002174 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020ea:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020ee:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
900020f2:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020f6:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
900020f8:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
900020fa:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
900020fc:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
900020fe:	f8c5 8008 	str.w	r8, [r5, #8]
90002102:	f010 fb87 	bl	90012814 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002106:	4b1c      	ldr	r3, [pc, #112]	; (90002178 <touchgfx_init+0xe8>)
90002108:	4640      	mov	r0, r8
9000210a:	616b      	str	r3, [r5, #20]
9000210c:	f010 fb82 	bl	90012814 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002110:	4b1a      	ldr	r3, [pc, #104]	; (9000217c <touchgfx_init+0xec>)
90002112:	4638      	mov	r0, r7
90002114:	62eb      	str	r3, [r5, #44]	; 0x2c
90002116:	f010 fb7d 	bl	90012814 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000211a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000211e:	4a18      	ldr	r2, [pc, #96]	; (90002180 <touchgfx_init+0xf0>)
90002120:	f603 0038 	addw	r0, r3, #2104	; 0x838
90002124:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002128:	f005 fb3c 	bl	900077a4 <_ZN5ModelC1Ev>
9000212c:	462a      	mov	r2, r5
9000212e:	f107 0148 	add.w	r1, r7, #72	; 0x48
90002132:	4630      	mov	r0, r6
90002134:	f005 fb2c 	bl	90007790 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002138:	4630      	mov	r0, r6
9000213a:	f002 f85d 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
9000213e:	4811      	ldr	r0, [pc, #68]	; (90002184 <touchgfx_init+0xf4>)
90002140:	f027 f95c 	bl	900293fc <atexit>
90002144:	4620      	mov	r0, r4
90002146:	f027 f91b 	bl	90029380 <__cxa_guard_release>
9000214a:	4807      	ldr	r0, [pc, #28]	; (90002168 <touchgfx_init+0xd8>)
}
9000214c:	b002      	add	sp, #8
9000214e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002152:	f7fe bbbd 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
90002156:	bf00      	nop
90002158:	24039b30 	.word	0x24039b30
9000215c:	240093b8 	.word	0x240093b8
90002160:	24005be8 	.word	0x24005be8
90002164:	2400002c 	.word	0x2400002c
90002168:	24009330 	.word	0x24009330
9000216c:	24005bec 	.word	0x24005bec
90002170:	240083dc 	.word	0x240083dc
90002174:	9002ad44 	.word	0x9002ad44
90002178:	9002aca8 	.word	0x9002aca8
9000217c:	9002acdc 	.word	0x9002acdc
90002180:	9002ad10 	.word	0x9002ad10
90002184:	90001ff1 	.word	0x90001ff1

90002188 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002188:	4770      	bx	lr
9000218a:	bf00      	nop

9000218c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
9000218c:	4801      	ldr	r0, [pc, #4]	; (90002194 <touchgfx_taskEntry+0x8>)
9000218e:	f7fe bb65 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002192:	bf00      	nop
90002194:	24009330 	.word	0x24009330

90002198 <_GLOBAL__sub_I_touchgfx_init>:
}
90002198:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000219a:	4b25      	ldr	r3, [pc, #148]	; (90002230 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000219c:	4c25      	ldr	r4, [pc, #148]	; (90002234 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000219e:	4e26      	ldr	r6, [pc, #152]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a0:	4d26      	ldr	r5, [pc, #152]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021a2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021a4:	4630      	mov	r0, r6
900021a6:	f7ff fe2d 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021aa:	4628      	mov	r0, r5
900021ac:	f01d fc0a 	bl	9001f9c4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b0:	4b23      	ldr	r3, [pc, #140]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021b2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021b4:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021b8:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021bc:	62da      	str	r2, [r3, #44]	; 0x2c
900021be:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c0:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021c2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021c6:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021c8:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021ca:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021ce:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021d2:	4c1c      	ldr	r4, [pc, #112]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021d4:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021d6:	4c1c      	ldr	r4, [pc, #112]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021d8:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021dc:	8020      	strh	r0, [r4, #0]
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e0:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021e4:	481c      	ldr	r0, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021e6:	8021      	strh	r1, [r4, #0]
900021e8:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021ec:	491c      	ldr	r1, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021ee:	481d      	ldr	r0, [pc, #116]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f0:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021f4:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
900021f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
900021fe:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002202:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002206:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000220a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000220e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002212:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002216:	7022      	strb	r2, [r4, #0]
90002218:	6019      	str	r1, [r3, #0]
9000221a:	4913      	ldr	r1, [pc, #76]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000221c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002220:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002224:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002228:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000222a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000222e:	bd70      	pop	{r4, r5, r6, pc}
90002230:	9002a4b0 	.word	0x9002a4b0
90002234:	24008584 	.word	0x24008584
90002238:	24008588 	.word	0x24008588
9000223c:	240093bc 	.word	0x240093bc
90002240:	24009330 	.word	0x24009330
90002244:	01000001 	.word	0x01000001
90002248:	24039acc 	.word	0x24039acc
9000224c:	24039ac0 	.word	0x24039ac0
90002250:	24039ac6 	.word	0x24039ac6
90002254:	24039ac2 	.word	0x24039ac2
90002258:	24039ac8 	.word	0x24039ac8
9000225c:	24039ac4 	.word	0x24039ac4
90002260:	9002a640 	.word	0x9002a640
90002264:	01010000 	.word	0x01010000
90002268:	9002a488 	.word	0x9002a488

9000226c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000226c:	4801      	ldr	r0, [pc, #4]	; (90002274 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000226e:	f7ff bb4d 	b.w	9000190c <_ZN8STM32DMAD1Ev>
90002272:	bf00      	nop
90002274:	24008588 	.word	0x24008588

90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002278:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9000227c:	b112      	cbz	r2, 90002284 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000227e:	6803      	ldr	r3, [r0, #0]
90002280:	695b      	ldr	r3, [r3, #20]
90002282:	4718      	bx	r3
        }
    }
90002284:	4770      	bx	lr
90002286:	bf00      	nop

90002288 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002288:	2000      	movs	r0, #0
9000228a:	4770      	bx	lr

9000228c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000228c:	8081      	strh	r1, [r0, #4]
    }
9000228e:	4770      	bx	lr

90002290 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002290:	80c1      	strh	r1, [r0, #6]
    }
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002294:	8101      	strh	r1, [r0, #8]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002298:	8141      	strh	r1, [r0, #10]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000229c:	4770      	bx	lr
9000229e:	bf00      	nop

900022a0 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a0:	4770      	bx	lr
900022a2:	bf00      	nop

900022a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b0:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022b4:	6803      	ldr	r3, [r0, #0]
900022b6:	eba2 020c 	sub.w	r2, r2, ip
900022ba:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c0:	eba1 010c 	sub.w	r1, r1, ip
900022c4:	b212      	sxth	r2, r2
900022c6:	b209      	sxth	r1, r1
900022c8:	4718      	bx	r3
900022ca:	bf00      	nop

900022cc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022cc:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022ce:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022d2:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022da:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022de:	6010      	str	r0, [r2, #0]
    }
900022e0:	4770      	bx	lr
900022e2:	bf00      	nop

900022e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022e4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022e8:	b11a      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022ea:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022ee:	b102      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f0:	6018      	str	r0, [r3, #0]
        }
    }
900022f2:	4770      	bx	lr

900022f4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022f4:	2000      	movs	r0, #0
900022f6:	4770      	bx	lr

900022f8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
900022f8:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
900022fa:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
900022fc:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
900022fe:	809a      	strh	r2, [r3, #4]
    }
90002300:	4770      	bx	lr
90002302:	bf00      	nop

90002304 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002304:	4770      	bx	lr
90002306:	bf00      	nop

90002308 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002308:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002310:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002318:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000231c:	688a      	ldr	r2, [r1, #8]
9000231e:	f8c0 c000 	str.w	ip, [r0]
90002322:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002324:	4770      	bx	lr
90002326:	bf00      	nop

90002328 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002328:	2200      	movs	r2, #0
9000232a:	6002      	str	r2, [r0, #0]
9000232c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000232e:	4770      	bx	lr

90002330 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002330:	2000      	movs	r0, #0
90002332:	4770      	bx	lr

90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002334:	4b03      	ldr	r3, [pc, #12]	; (90002344 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002336:	2290      	movs	r2, #144	; 0x90
90002338:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
9000233c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002340:	4770      	bx	lr
90002342:	bf00      	nop
90002344:	e000e100 	.word	0xe000e100

90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002348:	4a09      	ldr	r2, [pc, #36]	; (90002370 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
9000234a:	490a      	ldr	r1, [pc, #40]	; (90002374 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
9000234c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000234e:	480a      	ldr	r0, [pc, #40]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002354:	3b01      	subs	r3, #1
90002356:	b29b      	uxth	r3, r3
90002358:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000235a:	6911      	ldr	r1, [r2, #16]
9000235c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002360:	3901      	subs	r1, #1
90002362:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002364:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002366:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002368:	f043 0301 	orr.w	r3, r3, #1
9000236c:	6353      	str	r3, [r2, #52]	; 0x34
}
9000236e:	4770      	bx	lr
90002370:	50001000 	.word	0x50001000
90002374:	24009442 	.word	0x24009442
90002378:	24009440 	.word	0x24009440

9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000237c:	4b01      	ldr	r3, [pc, #4]	; (90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000237e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90002382:	4770      	bx	lr
90002384:	50001000 	.word	0x50001000

90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002388:	4b02      	ldr	r3, [pc, #8]	; (90002394 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000238a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000238c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002390:	625a      	str	r2, [r3, #36]	; 0x24
}
90002392:	4770      	bx	lr
90002394:	50001000 	.word	0x50001000

90002398 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002398:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000239c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000239e:	4770      	bx	lr

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a0:	4770      	bx	lr
900023a2:	bf00      	nop

900023a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023a4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023a8:	4611      	mov	r1, r2
900023aa:	6840      	ldr	r0, [r0, #4]
900023ac:	6803      	ldr	r3, [r0, #0]
900023ae:	68db      	ldr	r3, [r3, #12]
900023b0:	4718      	bx	r3
900023b2:	bf00      	nop

900023b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023b4:	b510      	push	{r4, lr}
900023b6:	4604      	mov	r4, r0
900023b8:	2148      	movs	r1, #72	; 0x48
900023ba:	f026 ffd3 	bl	90029364 <_ZdlPvj>
900023be:	4620      	mov	r0, r4
900023c0:	bd10      	pop	{r4, pc}
900023c2:	bf00      	nop

900023c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023c4:	b911      	cbnz	r1, 900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023c6:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023ca:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023cc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023ce:	4a03      	ldr	r2, [pc, #12]	; (900023dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d0:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023d4:	4b02      	ldr	r3, [pc, #8]	; (900023e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023d6:	4803      	ldr	r0, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023d8:	f026 fff2 	bl	900293c0 <__assert_func>
900023dc:	9002ad64 	.word	0x9002ad64
900023e0:	9002ad50 	.word	0x9002ad50
900023e4:	9002aef0 	.word	0x9002aef0

900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023e8:	b921      	cbnz	r1, 900023f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023ea:	6840      	ldr	r0, [r0, #4]
900023ec:	4611      	mov	r1, r2
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023f2:	4718      	bx	r3
        assert(handle < no_streams);
900023f4:	4b03      	ldr	r3, [pc, #12]	; (90002404 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023f6:	f44f 71b5 	mov.w	r1, #362	; 0x16a
900023fa:	4a03      	ldr	r2, [pc, #12]	; (90002408 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900023fc:	4803      	ldr	r0, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900023fe:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002400:	f026 ffde 	bl	900293c0 <__assert_func>
90002404:	9002ad50 	.word	0x9002ad50
90002408:	9002af34 	.word	0x9002af34
9000240c:	9002aef0 	.word	0x9002aef0

90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002410:	b909      	cbnz	r1, 90002416 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002412:	68c0      	ldr	r0, [r0, #12]
90002414:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002416:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002418:	4a02      	ldr	r2, [pc, #8]	; (90002424 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
9000241a:	2179      	movs	r1, #121	; 0x79
9000241c:	4b02      	ldr	r3, [pc, #8]	; (90002428 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000241e:	4803      	ldr	r0, [pc, #12]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002420:	f026 ffce 	bl	900293c0 <__assert_func>
90002424:	9002b0e4 	.word	0x9002b0e4
90002428:	9002ad50 	.word	0x9002ad50
9000242c:	9002aef0 	.word	0x9002aef0

90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002430:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002432:	460c      	mov	r4, r1
90002434:	b949      	cbnz	r1, 9000244a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
90002436:	4611      	mov	r1, r2
90002438:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243a:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
9000243c:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243e:	681c      	ldr	r4, [r3, #0]
90002440:	4618      	mov	r0, r3
90002442:	68a3      	ldr	r3, [r4, #8]
    }
90002444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002448:	4718      	bx	r3
        assert(handle < no_streams);
9000244a:	4b03      	ldr	r3, [pc, #12]	; (90002458 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
9000244c:	2190      	movs	r1, #144	; 0x90
9000244e:	4a03      	ldr	r2, [pc, #12]	; (9000245c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002450:	4803      	ldr	r0, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90002452:	f026 ffb5 	bl	900293c0 <__assert_func>
90002456:	bf00      	nop
90002458:	9002ad50 	.word	0x9002ad50
9000245c:	9002b298 	.word	0x9002b298
90002460:	9002aef0 	.word	0x9002aef0

90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002464:	b921      	cbnz	r1, 90002470 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
90002466:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000246a:	e9c0 3206 	strd	r3, r2, [r0, #24]
9000246e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002470:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002472:	4a03      	ldr	r2, [pc, #12]	; (90002480 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002474:	2182      	movs	r1, #130	; 0x82
90002476:	4b03      	ldr	r3, [pc, #12]	; (90002484 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002478:	4803      	ldr	r0, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000247a:	f026 ffa1 	bl	900293c0 <__assert_func>
9000247e:	bf00      	nop
90002480:	9002b474 	.word	0x9002b474
90002484:	9002ad50 	.word	0x9002ad50
90002488:	9002aef0 	.word	0x9002aef0

9000248c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000248c:	f010 bca4 	b.w	90012dd8 <_ZN8touchgfx3HAL10beginFrameEv>

90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002490:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002494:	b903      	cbnz	r3, 90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002496:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002498:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
9000249a:	f04f 31ff 	mov.w	r1, #4294967295
9000249e:	4604      	mov	r4, r0
900024a0:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024a2:	f00d fa93 	bl	9000f9cc <osMutexAcquire>
            firstDrawThisFrame = false;
900024a6:	f44f 7380 	mov.w	r3, #256	; 0x100
900024aa:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024ae:	bd10      	pop	{r4, pc}

900024b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b0:	b538      	push	{r3, r4, r5, lr}
900024b2:	460c      	mov	r4, r1
900024b4:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024b6:	f04f 31ff 	mov.w	r1, #4294967295
900024ba:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024bc:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c0:	f00d fa84 	bl	9000f9cc <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024c4:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024c6:	f00d faa5 	bl	9000fa14 <osMutexRelease>
        streams[handle].isActive = false;
900024ca:	2300      	movs	r3, #0
900024cc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024d4:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024d8:	b90b      	cbnz	r3, 900024de <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024dc:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024de:	bd38      	pop	{r3, r4, r5, pc}

900024e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e0:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024e2:	4c1c      	ldr	r4, [pc, #112]	; (90002554 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024e4:	4605      	mov	r5, r0
    HAL::endFrame();
900024e6:	f010 fc83 	bl	90012df0 <_ZN8touchgfx3HAL8endFrameEv>
900024ea:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024ee:	b98b      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f0:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024f4:	b973      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024f6:	2301      	movs	r3, #1
        SEM_POST(semDecode);
900024f8:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
900024fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
900024fe:	f00d fb2f 	bl	9000fb60 <osSemaphoreRelease>
        if (uiHasMutex)
90002502:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002506:	b9f3      	cbnz	r3, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002508:	6868      	ldr	r0, [r5, #4]
9000250a:	6803      	ldr	r3, [r0, #0]
}
9000250c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002510:	691b      	ldr	r3, [r3, #16]
90002512:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002514:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002518:	69e1      	ldr	r1, [r4, #28]
9000251a:	6922      	ldr	r2, [r4, #16]
9000251c:	fb00 f303 	mul.w	r3, r0, r3
90002520:	fb01 f202 	mul.w	r2, r1, r2
90002524:	4293      	cmp	r3, r2
90002526:	d3e6      	bcc.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002528:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
9000252c:	b138      	cbz	r0, 9000253e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000252e:	1a9b      	subs	r3, r3, r2
90002530:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90002534:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90002536:	bf98      	it	ls
90002538:	f102 32ff 	addls.w	r2, r2, #4294967295
9000253c:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
9000253e:	2301      	movs	r3, #1
90002540:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
90002544:	e7d7      	b.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
90002546:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002548:	f00d fa64 	bl	9000fa14 <osMutexRelease>
            uiHasMutex = false;
9000254c:	2300      	movs	r3, #0
9000254e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90002552:	e7d9      	b.n	90002508 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
90002554:	2400948c 	.word	0x2400948c

90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002558:	f010 bc08 	b.w	90012d6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

9000255c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
9000255c:	f010 bd69 	b.w	90013032 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002560 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002560:	4814      	ldr	r0, [pc, #80]	; (900025b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002562:	6943      	ldr	r3, [r0, #20]
90002564:	03d9      	lsls	r1, r3, #15
90002566:	d523      	bpl.n	900025b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002568:	2300      	movs	r3, #0
{
9000256a:	b510      	push	{r4, lr}
9000256c:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002570:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002574:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002578:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000257c:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002580:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002584:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002588:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000258c:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000258e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002592:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002594:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002598:	1c5a      	adds	r2, r3, #1
9000259a:	d1f8      	bne.n	9000258e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
9000259c:	f1ac 0c20 	sub.w	ip, ip, #32
900025a0:	f11c 0f20 	cmn.w	ip, #32
900025a4:	d1f0      	bne.n	90002588 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025aa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025ae:	bd10      	pop	{r4, pc}
900025b0:	4770      	bx	lr
900025b2:	bf00      	nop
900025b4:	e000ed00 	.word	0xe000ed00

900025b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025ba:	2900      	cmp	r1, #0
900025bc:	d133      	bne.n	90002626 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025be:	4604      	mov	r4, r0
        switch (cmd)
900025c0:	2a05      	cmp	r2, #5
900025c2:	d809      	bhi.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025c4:	e8df f002 	tbb	[pc, r2]
900025c8:	27221e0f 	.word	0x27221e0f
900025cc:	0903      	.short	0x0903
            stream.isPlaying = false;
900025ce:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d0:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025d2:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025d6:	6203      	str	r3, [r0, #32]
    }
900025d8:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025da:	3b00      	subs	r3, #0
900025dc:	bf18      	it	ne
900025de:	2301      	movne	r3, #1
900025e0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025e4:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025e6:	6840      	ldr	r0, [r0, #4]
900025e8:	6803      	ldr	r3, [r0, #0]
900025ea:	691b      	ldr	r3, [r3, #16]
900025ec:	4798      	blx	r3
900025ee:	2800      	cmp	r0, #0
900025f0:	d0f2      	beq.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025f2:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025f4:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025f6:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
900025fa:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
900025fe:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002602:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002604:	2300      	movs	r3, #0
90002606:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000260c:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000260e:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002610:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002614:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002616:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002618:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
9000261a:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
9000261c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002620:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002624:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002626:	4b03      	ldr	r3, [pc, #12]	; (90002634 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002628:	21a2      	movs	r1, #162	; 0xa2
9000262a:	4a03      	ldr	r2, [pc, #12]	; (90002638 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
9000262c:	4803      	ldr	r0, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
9000262e:	f026 fec7 	bl	900293c0 <__assert_func>
90002632:	bf00      	nop
90002634:	9002ad50 	.word	0x9002ad50
90002638:	9002b630 	.word	0x9002b630
9000263c:	9002aef0 	.word	0x9002aef0

90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002640:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002642:	bb39      	cbnz	r1, 90002694 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90002644:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002648:	4604      	mov	r4, r0
9000264a:	b923      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
9000264c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002650:	b963      	cbnz	r3, 9000266c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90002652:	2001      	movs	r0, #1
    }
90002654:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90002656:	4912      	ldr	r1, [pc, #72]	; (900026a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002658:	6943      	ldr	r3, [r0, #20]
9000265a:	6809      	ldr	r1, [r1, #0]
9000265c:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002660:	440b      	add	r3, r1
90002662:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90002664:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002668:	2b00      	cmp	r3, #0
9000266a:	d0f2      	beq.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
9000266c:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
9000266e:	4610      	mov	r0, r2
90002670:	6813      	ldr	r3, [r2, #0]
90002672:	695b      	ldr	r3, [r3, #20]
90002674:	6311      	str	r1, [r2, #48]	; 0x30
90002676:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002678:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
9000267a:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
9000267e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	2800      	cmp	r0, #0
90002684:	d1e5      	bne.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90002686:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
9000268a:	2b00      	cmp	r3, #0
9000268c:	d1e2      	bne.n	90002654 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
9000268e:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002692:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002694:	4b03      	ldr	r3, [pc, #12]	; (900026a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002696:	21d0      	movs	r1, #208	; 0xd0
90002698:	4a03      	ldr	r2, [pc, #12]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
9000269a:	4804      	ldr	r0, [pc, #16]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
9000269c:	f026 fe90 	bl	900293c0 <__assert_func>
900026a0:	24039acc 	.word	0x24039acc
900026a4:	9002ad50 	.word	0x9002ad50
900026a8:	9002b804 	.word	0x9002b804
900026ac:	9002aef0 	.word	0x9002aef0

900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026b4:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026b6:	b9fb      	cbnz	r3, 900026f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026b8:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ba:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026bc:	60c3      	str	r3, [r0, #12]
900026be:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026c6:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026ca:	6103      	str	r3, [r0, #16]
900026cc:	6143      	str	r3, [r0, #20]
900026ce:	6183      	str	r3, [r0, #24]
900026d0:	61c3      	str	r3, [r0, #28]
900026d2:	6203      	str	r3, [r0, #32]
900026d4:	6243      	str	r3, [r0, #36]	; 0x24
900026d6:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026da:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026de:	4432      	add	r2, r6
900026e0:	4294      	cmp	r4, r2
900026e2:	d810      	bhi.n	90002706 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026e4:	4a0b      	ldr	r2, [pc, #44]	; (90002714 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026e6:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026e8:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026ea:	4618      	mov	r0, r3
        format = bufferFormat;
900026ec:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f0:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026f4:	630b      	str	r3, [r1, #48]	; 0x30
900026f6:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900026f8:	4b07      	ldr	r3, [pc, #28]	; (90002718 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
900026fa:	f240 11c5 	movw	r1, #453	; 0x1c5
900026fe:	4a07      	ldr	r2, [pc, #28]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002700:	4807      	ldr	r0, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002702:	f026 fe5d 	bl	900293c0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002706:	4b07      	ldr	r3, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002708:	2152      	movs	r1, #82	; 0x52
9000270a:	4a07      	ldr	r2, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
9000270c:	4804      	ldr	r0, [pc, #16]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270e:	f026 fe57 	bl	900293c0 <__assert_func>
90002712:	bf00      	nop
90002714:	012001e0 	.word	0x012001e0
90002718:	9002b9a4 	.word	0x9002b9a4
9000271c:	9002b9d4 	.word	0x9002b9d4
90002720:	9002aef0 	.word	0x9002aef0
90002724:	9002bb5c 	.word	0x9002bb5c
90002728:	9002bb98 	.word	0x9002bb98

9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000272c:	4b08      	ldr	r3, [pc, #32]	; (90002750 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000272e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002732:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002736:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000273a:	f3bf 8f6f 	isb	sy
9000273e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002742:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002746:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000274a:	f3bf 8f6f 	isb	sy
}
9000274e:	4770      	bx	lr
90002750:	e000e100 	.word	0xe000e100

90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002754:	4b03      	ldr	r3, [pc, #12]	; (90002764 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90002756:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000275a:	609a      	str	r2, [r3, #8]
9000275c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002760:	609a      	str	r2, [r3, #8]
}
90002762:	4770      	bx	lr
90002764:	e000e100 	.word	0xe000e100

90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002768:	b538      	push	{r3, r4, r5, lr}
9000276a:	4604      	mov	r4, r0
    HAL::initialize();
9000276c:	f010 fb4d 	bl	90012e0a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002770:	6823      	ldr	r3, [r4, #0]
90002772:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90002774:	f015 fcb8 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90002778:	4601      	mov	r1, r0
9000277a:	4620      	mov	r0, r4
9000277c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000277e:	6823      	ldr	r3, [r4, #0]
90002780:	4a16      	ldr	r2, [pc, #88]	; (900027dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90002782:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002786:	4295      	cmp	r5, r2
90002788:	d11c      	bne.n	900027c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000278a:	4a15      	ldr	r2, [pc, #84]	; (900027e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000278c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000278e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002792:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002796:	4813      	ldr	r0, [pc, #76]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002798:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
9000279c:	4a12      	ldr	r2, [pc, #72]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	7005      	strb	r5, [r0, #0]
900027a0:	4293      	cmp	r3, r2
900027a2:	d116      	bne.n	900027d2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a4:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027a6:	4a11      	ldr	r2, [pc, #68]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a8:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027aa:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027ac:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027ae:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027b2:	4b0f      	ldr	r3, [pc, #60]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027b4:	490f      	ldr	r1, [pc, #60]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027b6:	4a10      	ldr	r2, [pc, #64]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027b8:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027ba:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027bc:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027be:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027c2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027c4:	4a0d      	ldr	r2, [pc, #52]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027c6:	2300      	movs	r3, #0
900027c8:	4620      	mov	r0, r4
900027ca:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027ce:	47a8      	blx	r5
900027d0:	e7ec      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027d2:	2100      	movs	r1, #0
900027d4:	4620      	mov	r0, r4
900027d6:	4798      	blx	r3
900027d8:	e7e8      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027da:	bf00      	nop
900027dc:	90000805 	.word	0x90000805
900027e0:	d003fc00 	.word	0xd003fc00
900027e4:	24039aca 	.word	0x24039aca
900027e8:	90000675 	.word	0x90000675
900027ec:	24039acb 	.word	0x24039acb
900027f0:	2400948c 	.word	0x2400948c
900027f4:	24009444 	.word	0x24009444
900027f8:	d00bf400 	.word	0xd00bf400
900027fc:	d007f800 	.word	0xd007f800

90002800 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002800:	b510      	push	{r4, lr}
        return instance;
90002802:	4c14      	ldr	r4, [pc, #80]	; (90002854 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002804:	6823      	ldr	r3, [r4, #0]
90002806:	b323      	cbz	r3, 90002852 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002808:	4b13      	ldr	r3, [pc, #76]	; (90002858 <HAL_LTDC_LineEventCallback+0x58>)
9000280a:	4a14      	ldr	r2, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x5c>)
9000280c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000280e:	8811      	ldrh	r1, [r2, #0]
90002810:	428b      	cmp	r3, r1
90002812:	d00a      	beq.n	9000282a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002814:	f00a fda6 	bl	9000d364 <HAL_LTDC_ProgramLineEvent>
90002818:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000281a:	6803      	ldr	r3, [r0, #0]
9000281c:	6a1b      	ldr	r3, [r3, #32]
9000281e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002820:	2000      	movs	r0, #0
        }
    }
90002822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002826:	f7fd bec9 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000282a:	4b0d      	ldr	r3, [pc, #52]	; (90002860 <HAL_LTDC_LineEventCallback+0x60>)
9000282c:	8819      	ldrh	r1, [r3, #0]
9000282e:	f00a fd99 	bl	9000d364 <HAL_LTDC_ProgramLineEvent>
        return instance;
90002832:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90002834:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002838:	3301      	adds	r3, #1
9000283a:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
9000283e:	f7ff f83f 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90002842:	6820      	ldr	r0, [r4, #0]
90002844:	f011 f83a 	bl	900138bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002848:	2000      	movs	r0, #0
    }
9000284a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000284e:	f7fd be81 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90002852:	bd10      	pop	{r4, pc}
90002854:	24039acc 	.word	0x24039acc
90002858:	50001000 	.word	0x50001000
9000285c:	24009442 	.word	0x24009442
90002860:	24009440 	.word	0x24009440

90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90002864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002868:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002924 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
9000286c:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
9000286e:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002870:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90002874:	4604      	mov	r4, r0
90002876:	e024      	b.n	900028c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002878:	682b      	ldr	r3, [r5, #0]
9000287a:	4628      	mov	r0, r5
9000287c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000287e:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002880:	2300      	movs	r3, #0
90002882:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002884:	6829      	ldr	r1, [r5, #0]
90002886:	f44f 7390 	mov.w	r3, #288	; 0x120
9000288a:	9700      	str	r7, [sp, #0]
9000288c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002890:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002894:	4628      	mov	r0, r5
90002896:	68a1      	ldr	r1, [r4, #8]
90002898:	47c8      	blx	r9
                    stream.frameCount++;
9000289a:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000289c:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a0:	3301      	adds	r3, #1
900028a2:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028a4:	2800      	cmp	r0, #0
900028a6:	d033      	beq.n	90002910 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028a8:	682b      	ldr	r3, [r5, #0]
900028aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028ac:	4543      	cmp	r3, r8
900028ae:	d131      	bne.n	90002914 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b0:	6968      	ldr	r0, [r5, #20]
900028b2:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028b4:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b6:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028b8:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028bc:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028be:	f00d f8a9 	bl	9000fa14 <osMutexRelease>
            SEM_WAIT(semDecode);
900028c2:	f04f 31ff 	mov.w	r1, #4294967295
900028c6:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028c8:	f00d f916 	bl	9000faf8 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028cc:	f04f 31ff 	mov.w	r1, #4294967295
900028d0:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028d2:	f00d f87b 	bl	9000f9cc <osMutexAcquire>
                if (stream.doDecode)
900028d6:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028da:	2b00      	cmp	r3, #0
900028dc:	d0ee      	beq.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028de:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e0:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028e2:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028e6:	2900      	cmp	r1, #0
900028e8:	d1c6      	bne.n	90002878 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028ec:	2b00      	cmp	r3, #0
900028ee:	d0c9      	beq.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f0:	682a      	ldr	r2, [r5, #0]
900028f2:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028f6:	4541      	cmp	r1, r8
900028f8:	d10f      	bne.n	9000291a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
900028fa:	6968      	ldr	r0, [r5, #20]
900028fc:	18c1      	adds	r1, r0, r3
900028fe:	4628      	mov	r0, r5
90002900:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002902:	6923      	ldr	r3, [r4, #16]
90002904:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002906:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002908:	440b      	add	r3, r1
                            stream.skip_frames = 0;
9000290a:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
9000290c:	6123      	str	r3, [r4, #16]
9000290e:	e7b9      	b.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002910:	2001      	movs	r0, #1
90002912:	e7cf      	b.n	900028b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002914:	4628      	mov	r0, r5
90002916:	4798      	blx	r3
90002918:	e7cb      	b.n	900028b2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000291a:	4628      	mov	r0, r5
9000291c:	4788      	blx	r1
9000291e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002920:	e7ec      	b.n	900028fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002922:	bf00      	nop
90002924:	9000097d 	.word	0x9000097d

90002928 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002928:	4801      	ldr	r0, [pc, #4]	; (90002930 <videoTaskFunc+0x8>)
{
9000292a:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
9000292c:	f7ff ff9a 	bl	90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002930:	2400948c 	.word	0x2400948c

90002934 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002934:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002936:	4815      	ldr	r0, [pc, #84]	; (9000298c <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002938:	2500      	movs	r5, #0
9000293a:	f7fe fbc5 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000293e:	4c14      	ldr	r4, [pc, #80]	; (90002990 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002940:	4914      	ldr	r1, [pc, #80]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002942:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002946:	462a      	mov	r2, r5
90002948:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000294a:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
9000294c:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294e:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002950:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002952:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002954:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000295a:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000295c:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002960:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002964:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002968:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000296c:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002970:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002974:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002978:	f00d f86e 	bl	9000fa58 <osSemaphoreNew>
9000297c:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
9000297e:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002982:	f00c ffe3 	bl	9000f94c <osMutexNew>
90002986:	6460      	str	r0, [r4, #68]	; 0x44
}
90002988:	bd38      	pop	{r3, r4, r5, pc}
9000298a:	bf00      	nop
9000298c:	24009444 	.word	0x24009444
90002990:	2400948c 	.word	0x2400948c
90002994:	9002bd64 	.word	0x9002bd64

90002998 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002998:	4901      	ldr	r1, [pc, #4]	; (900029a0 <vApplicationIdleHook+0x8>)
9000299a:	2000      	movs	r0, #0
9000299c:	f00f ba7c 	b.w	90011e98 <vTaskSetApplicationTaskTag>
900029a0:	90000959 	.word	0x90000959

900029a4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029a6:	2064      	movs	r0, #100	; 0x64
900029a8:	f00c ffc2 	bl	9000f930 <osDelay>
  for(;;)
900029ac:	e7fb      	b.n	900029a6 <StartDefaultTask+0x2>
900029ae:	bf00      	nop

900029b0 <SystemClock_Config>:
{
900029b0:	b570      	push	{r4, r5, r6, lr}
900029b2:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029b4:	224c      	movs	r2, #76	; 0x4c
900029b6:	2100      	movs	r1, #0
900029b8:	a80a      	add	r0, sp, #40	; 0x28
900029ba:	f026 ff89 	bl	900298d0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029be:	2220      	movs	r2, #32
900029c0:	2100      	movs	r1, #0
900029c2:	a802      	add	r0, sp, #8
900029c4:	f026 ff84 	bl	900298d0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029c8:	2002      	movs	r0, #2
900029ca:	f00a ff09 	bl	9000d7e0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029ce:	4b22      	ldr	r3, [pc, #136]	; (90002a58 <SystemClock_Config+0xa8>)
900029d0:	2100      	movs	r1, #0
900029d2:	4a22      	ldr	r2, [pc, #136]	; (90002a5c <SystemClock_Config+0xac>)
900029d4:	9101      	str	r1, [sp, #4]
900029d6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029d8:	f021 0101 	bic.w	r1, r1, #1
900029dc:	62d9      	str	r1, [r3, #44]	; 0x2c
900029de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e0:	f003 0301 	and.w	r3, r3, #1
900029e4:	9301      	str	r3, [sp, #4]
900029e6:	6993      	ldr	r3, [r2, #24]
900029e8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029ec:	6193      	str	r3, [r2, #24]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029f4:	9301      	str	r3, [sp, #4]
900029f6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900029f8:	6993      	ldr	r3, [r2, #24]
900029fa:	0499      	lsls	r1, r3, #18
900029fc:	d5fc      	bpl.n	900029f8 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900029fe:	2201      	movs	r2, #1
90002a00:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a04:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a06:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a08:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a0a:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a0c:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a0e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a12:	2205      	movs	r2, #5
90002a14:	23a0      	movs	r3, #160	; 0xa0
90002a16:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a1a:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a1c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a20:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a22:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a26:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a2a:	f00a ff81 	bl	9000d930 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a2e:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a30:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a32:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a34:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a36:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a3a:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a3c:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a3e:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a40:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a42:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a44:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a4c:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a4e:	f00b fb03 	bl	9000e058 <HAL_RCC_ClockConfig>
}
90002a52:	b01e      	add	sp, #120	; 0x78
90002a54:	bd70      	pop	{r4, r5, r6, pc}
90002a56:	bf00      	nop
90002a58:	58000400 	.word	0x58000400
90002a5c:	58024800 	.word	0x58024800

90002a60 <main>:
{
90002a60:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a62:	2400      	movs	r4, #0
{
90002a64:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a66:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a68:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a6a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a70:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a74:	f007 fe9c 	bl	9000a7b0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a78:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a7c:	49d3      	ldr	r1, [pc, #844]	; (90002dcc <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a7e:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a82:	4bd3      	ldr	r3, [pc, #844]	; (90002dd0 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a84:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a88:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a8c:	f007 feae 	bl	9000a7ec <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a90:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a96:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a9a:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002a9c:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa0:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aa4:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aa8:	f007 fea0 	bl	9000a7ec <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002aac:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aae:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab0:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ab8:	231a      	movs	r3, #26
90002aba:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002abe:	f240 1301 	movw	r3, #257	; 0x101
90002ac2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ac6:	f007 fe91 	bl	9000a7ec <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002aca:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ad4:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad6:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ada:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ade:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002ae4:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ae8:	f007 fe80 	bl	9000a7ec <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002aec:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aee:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002af8:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002afc:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b00:	f007 fe74 	bl	9000a7ec <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b04:	4620      	mov	r0, r4
90002b06:	f007 fe61 	bl	9000a7cc <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b0a:	4ab2      	ldr	r2, [pc, #712]	; (90002dd4 <main+0x374>)
90002b0c:	6953      	ldr	r3, [r2, #20]
90002b0e:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b12:	d111      	bne.n	90002b38 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b18:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b1c:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b20:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b24:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b28:	6953      	ldr	r3, [r2, #20]
90002b2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b2e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b34:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b38:	48a6      	ldr	r0, [pc, #664]	; (90002dd4 <main+0x374>)
90002b3a:	6943      	ldr	r3, [r0, #20]
90002b3c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b40:	d124      	bne.n	90002b8c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b42:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b46:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b4a:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b4e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b52:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b56:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b5a:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b5c:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b60:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b62:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b66:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b68:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b6c:	1c5a      	adds	r2, r3, #1
90002b6e:	d1f8      	bne.n	90002b62 <main+0x102>
    } while(sets-- != 0U);
90002b70:	3c20      	subs	r4, #32
90002b72:	f114 0f20 	cmn.w	r4, #32
90002b76:	d1f1      	bne.n	90002b5c <main+0xfc>
90002b78:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b7c:	6943      	ldr	r3, [r0, #20]
90002b7e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b82:	6143      	str	r3, [r0, #20]
90002b84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b88:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b8c:	f007 fd58 	bl	9000a640 <HAL_Init>
  SystemClock_Config();
90002b90:	f7ff ff0e 	bl	900029b0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b94:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b96:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002b98:	4d8f      	ldr	r5, [pc, #572]	; (90002dd8 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002b9a:	21c0      	movs	r1, #192	; 0xc0
90002b9c:	488f      	ldr	r0, [pc, #572]	; (90002ddc <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba0:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ba2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ba4:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ba8:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002baa:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bae:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bb2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bb6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bbe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bc2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bce:	9301      	str	r3, [sp, #4]
90002bd0:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002bda:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002be2:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002be6:	9302      	str	r3, [sp, #8]
90002be8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bf2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002bfe:	9303      	str	r3, [sp, #12]
90002c00:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c06:	f043 0310 	orr.w	r3, r3, #16
90002c0a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c12:	f003 0310 	and.w	r3, r3, #16
90002c16:	9304      	str	r3, [sp, #16]
90002c18:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1e:	f043 0302 	orr.w	r3, r3, #2
90002c22:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c2a:	f003 0302 	and.w	r3, r3, #2
90002c2e:	9305      	str	r3, [sp, #20]
90002c30:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c3a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c42:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c46:	9306      	str	r3, [sp, #24]
90002c48:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4e:	f043 0308 	orr.w	r3, r3, #8
90002c52:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c5a:	f003 0308 	and.w	r3, r3, #8
90002c5e:	9307      	str	r3, [sp, #28]
90002c60:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c66:	f043 0320 	orr.w	r3, r3, #32
90002c6a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c72:	f003 0320 	and.w	r3, r3, #32
90002c76:	9308      	str	r3, [sp, #32]
90002c78:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c82:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c8e:	9309      	str	r3, [sp, #36]	; 0x24
90002c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c96:	f043 0301 	orr.w	r3, r3, #1
90002c9a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002ca2:	f003 0301 	and.w	r3, r3, #1
90002ca6:	930a      	str	r3, [sp, #40]	; 0x28
90002ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002caa:	f008 f98f 	bl	9000afcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cae:	4622      	mov	r2, r4
90002cb0:	2180      	movs	r1, #128	; 0x80
90002cb2:	484b      	ldr	r0, [pc, #300]	; (90002de0 <main+0x380>)
90002cb4:	f008 f98a 	bl	9000afcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cb8:	4622      	mov	r2, r4
90002cba:	2108      	movs	r1, #8
90002cbc:	4849      	ldr	r0, [pc, #292]	; (90002de4 <main+0x384>)
90002cbe:	f008 f985 	bl	9000afcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cc2:	2201      	movs	r2, #1
90002cc4:	4848      	ldr	r0, [pc, #288]	; (90002de8 <main+0x388>)
90002cc6:	4611      	mov	r1, r2
90002cc8:	f008 f980 	bl	9000afcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002ccc:	4622      	mov	r2, r4
90002cce:	2144      	movs	r1, #68	; 0x44
90002cd0:	4846      	ldr	r0, [pc, #280]	; (90002dec <main+0x38c>)
90002cd2:	f008 f97b 	bl	9000afcc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cd6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cd8:	a90b      	add	r1, sp, #44	; 0x2c
90002cda:	4840      	ldr	r0, [pc, #256]	; (90002ddc <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002cdc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce4:	f007 ff72 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ce8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cea:	a90b      	add	r1, sp, #44	; 0x2c
90002cec:	483c      	ldr	r0, [pc, #240]	; (90002de0 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cee:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf0:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cf2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf6:	f007 ff69 	bl	9000abcc <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002cfa:	a90b      	add	r1, sp, #44	; 0x2c
90002cfc:	4839      	ldr	r0, [pc, #228]	; (90002de4 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002cfe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d02:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d04:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d08:	f007 ff60 	bl	9000abcc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d0c:	a90b      	add	r1, sp, #44	; 0x2c
90002d0e:	4836      	ldr	r0, [pc, #216]	; (90002de8 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d10:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d14:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d18:	f007 ff58 	bl	9000abcc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d1c:	a90b      	add	r1, sp, #44	; 0x2c
90002d1e:	4833      	ldr	r0, [pc, #204]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d20:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d28:	f007 ff50 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d2c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d30:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d34:	a90b      	add	r1, sp, #44	; 0x2c
90002d36:	482d      	ldr	r0, [pc, #180]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d3c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d40:	f007 ff44 	bl	9000abcc <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d44:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d48:	4622      	mov	r2, r4
90002d4a:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d4e:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d50:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d54:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d58:	4d25      	ldr	r5, [pc, #148]	; (90002df0 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d5a:	4033      	ands	r3, r6
90002d5c:	9300      	str	r3, [sp, #0]
90002d5e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d60:	f007 fcc8 	bl	9000a6f4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d64:	207a      	movs	r0, #122	; 0x7a
90002d66:	f007 fd03 	bl	9000a770 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d6a:	2234      	movs	r2, #52	; 0x34
90002d6c:	4621      	mov	r1, r4
90002d6e:	a80b      	add	r0, sp, #44	; 0x2c
90002d70:	f026 fdae 	bl	900298d0 <memset>
  hltdc.Instance = LTDC;
90002d74:	4b1f      	ldr	r3, [pc, #124]	; (90002df4 <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d76:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d78:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d7a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d7c:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d7e:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d82:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d86:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d88:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d8a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d8c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d94:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002d98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002d9a:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002d9e:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002da2:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002da4:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002da8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002dac:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db0:	f00a f932 	bl	9000d018 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002db4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002db8:	4622      	mov	r2, r4
90002dba:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dbc:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dbe:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dc2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dc6:	4d0c      	ldr	r5, [pc, #48]	; (90002df8 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dc8:	930e      	str	r3, [sp, #56]	; 0x38
90002dca:	e017      	b.n	90002dfc <main+0x39c>
90002dcc:	03000012 	.word	0x03000012
90002dd0:	01010001 	.word	0x01010001
90002dd4:	e000ed00 	.word	0xe000ed00
90002dd8:	58024400 	.word	0x58024400
90002ddc:	58020400 	.word	0x58020400
90002de0:	58020c00 	.word	0x58020c00
90002de4:	58021800 	.word	0x58021800
90002de8:	58022800 	.word	0x58022800
90002dec:	58020000 	.word	0x58020000
90002df0:	240095c0 	.word	0x240095c0
90002df4:	50001000 	.word	0x50001000
90002df8:	24009500 	.word	0x24009500
  pLayerCfg.ImageHeight = 272;
90002dfc:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002dfe:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e00:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e02:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e04:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e08:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0a:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e0e:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e10:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e14:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e18:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e1a:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e1e:	f00a f9cf 	bl	9000d1c0 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e22:	4b35      	ldr	r3, [pc, #212]	; (90002ef8 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e24:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e26:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e28:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e2a:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e2c:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e30:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e34:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e38:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e3c:	f007 fd7e 	bl	9000a93c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e40:	4631      	mov	r1, r6
90002e42:	4628      	mov	r0, r5
90002e44:	f007 fe52 	bl	9000aaec <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e48:	482c      	ldr	r0, [pc, #176]	; (90002efc <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e4a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e4e:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e50:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e54:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e56:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e5a:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e5e:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e62:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e64:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e6c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e72:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e74:	2307      	movs	r3, #7
90002e76:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e78:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e7a:	4b21      	ldr	r3, [pc, #132]	; (90002f00 <main+0x4a0>)
90002e7c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e7e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e80:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e84:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e86:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e8a:	f00c f9bd 	bl	9000f208 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e8e:	4620      	mov	r0, r4
90002e90:	f007 f968 	bl	9000a164 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e94:	4620      	mov	r0, r4
90002e96:	f007 f9af 	bl	9000a1f8 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002e9a:	f7fd fa9b 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002e9e:	4b19      	ldr	r3, [pc, #100]	; (90002f04 <main+0x4a4>)
90002ea0:	4819      	ldr	r0, [pc, #100]	; (90002f08 <main+0x4a8>)
90002ea2:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002ea4:	f009 f88c 	bl	9000bfc0 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002ea8:	4818      	ldr	r0, [pc, #96]	; (90002f0c <main+0x4ac>)
90002eaa:	4b19      	ldr	r3, [pc, #100]	; (90002f10 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eac:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eae:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb0:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eb2:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002eb6:	f007 fccb 	bl	9000a850 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002eba:	f7fd fa8f 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ebe:	f7fd fa8b 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002ec2:	f00c fcbf 	bl	9000f844 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ec6:	4a13      	ldr	r2, [pc, #76]	; (90002f14 <main+0x4b4>)
90002ec8:	4621      	mov	r1, r4
90002eca:	4813      	ldr	r0, [pc, #76]	; (90002f18 <main+0x4b8>)
90002ecc:	f00c fce6 	bl	9000f89c <osThreadNew>
90002ed0:	4b12      	ldr	r3, [pc, #72]	; (90002f1c <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed2:	4a13      	ldr	r2, [pc, #76]	; (90002f20 <main+0x4c0>)
90002ed4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ed6:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed8:	4812      	ldr	r0, [pc, #72]	; (90002f24 <main+0x4c4>)
90002eda:	f00c fcdf 	bl	9000f89c <osThreadNew>
90002ede:	4b12      	ldr	r3, [pc, #72]	; (90002f28 <main+0x4c8>)
90002ee0:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ee2:	4a12      	ldr	r2, [pc, #72]	; (90002f2c <main+0x4cc>)
90002ee4:	4621      	mov	r1, r4
90002ee6:	4812      	ldr	r0, [pc, #72]	; (90002f30 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee8:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	f00c fcd7 	bl	9000f89c <osThreadNew>
90002eee:	4b11      	ldr	r3, [pc, #68]	; (90002f34 <main+0x4d4>)
90002ef0:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002ef2:	f00c fcb9 	bl	9000f868 <osKernelStart>
  while (1)
90002ef6:	e7fe      	b.n	90002ef6 <main+0x496>
90002ef8:	52001000 	.word	0x52001000
90002efc:	24009740 	.word	0x24009740
90002f00:	52004140 	.word	0x52004140
90002f04:	52003000 	.word	0x52003000
90002f08:	24009568 	.word	0x24009568
90002f0c:	240094dc 	.word	0x240094dc
90002f10:	58024c00 	.word	0x58024c00
90002f14:	9002bde0 	.word	0x9002bde0
90002f18:	900029a5 	.word	0x900029a5
90002f1c:	240094d8 	.word	0x240094d8
90002f20:	9002bdbc 	.word	0x9002bdbc
90002f24:	900003ed 	.word	0x900003ed
90002f28:	240094d4 	.word	0x240094d4
90002f2c:	9002be04 	.word	0x9002be04
90002f30:	90002929 	.word	0x90002929
90002f34:	24009774 	.word	0x24009774

90002f38 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f38:	4b03      	ldr	r3, [pc, #12]	; (90002f48 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f3a:	6802      	ldr	r2, [r0, #0]
90002f3c:	429a      	cmp	r2, r3
90002f3e:	d000      	beq.n	90002f42 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f40:	4770      	bx	lr
    HAL_IncTick();
90002f42:	f007 bbad 	b.w	9000a6a0 <HAL_IncTick>
90002f46:	bf00      	nop
90002f48:	40001000 	.word	0x40001000

90002f4c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f50:	4b0b      	ldr	r3, [pc, #44]	; (90002f80 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f52:	2200      	movs	r2, #0
90002f54:	210f      	movs	r1, #15
90002f56:	f06f 0001 	mvn.w	r0, #1
{
90002f5a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f5c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f60:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f62:	f044 0402 	orr.w	r4, r4, #2
90002f66:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f6a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f6e:	f003 0302 	and.w	r3, r3, #2
90002f72:	9301      	str	r3, [sp, #4]
90002f74:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f76:	b003      	add	sp, #12
90002f78:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f7c:	f007 bbba 	b.w	9000a6f4 <HAL_NVIC_SetPriority>
90002f80:	58024400 	.word	0x58024400

90002f84 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f84:	4b0a      	ldr	r3, [pc, #40]	; (90002fb0 <HAL_CRC_MspInit+0x2c>)
90002f86:	6802      	ldr	r2, [r0, #0]
90002f88:	429a      	cmp	r2, r3
90002f8a:	d000      	beq.n	90002f8e <HAL_CRC_MspInit+0xa>
90002f8c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f8e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f92:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002f98:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002f9c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fa4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fa8:	9301      	str	r3, [sp, #4]
90002faa:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fac:	b002      	add	sp, #8
90002fae:	4770      	bx	lr
90002fb0:	58024c00 	.word	0x58024c00

90002fb4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fb4:	4b0f      	ldr	r3, [pc, #60]	; (90002ff4 <HAL_DMA2D_MspInit+0x40>)
90002fb6:	6802      	ldr	r2, [r0, #0]
90002fb8:	429a      	cmp	r2, r3
90002fba:	d000      	beq.n	90002fbe <HAL_DMA2D_MspInit+0xa>
90002fbc:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fbe:	4b0e      	ldr	r3, [pc, #56]	; (90002ff8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc0:	205a      	movs	r0, #90	; 0x5a
90002fc2:	2200      	movs	r2, #0
90002fc4:	2105      	movs	r1, #5
{
90002fc6:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc8:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fcc:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fce:	f044 0410 	orr.w	r4, r4, #16
90002fd2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fd6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fda:	f003 0310 	and.w	r3, r3, #16
90002fde:	9301      	str	r3, [sp, #4]
90002fe0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fe2:	f007 fb87 	bl	9000a6f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fe6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002fe8:	b002      	add	sp, #8
90002fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	f007 bbbf 	b.w	9000a770 <HAL_NVIC_EnableIRQ>
90002ff2:	bf00      	nop
90002ff4:	52001000 	.word	0x52001000
90002ff8:	58024400 	.word	0x58024400

90002ffc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90002ffc:	4b3f      	ldr	r3, [pc, #252]	; (900030fc <HAL_JPEG_MspInit+0x100>)
90002ffe:	6802      	ldr	r2, [r0, #0]
90003000:	429a      	cmp	r2, r3
90003002:	d000      	beq.n	90003006 <HAL_JPEG_MspInit+0xa>
90003004:	4770      	bx	lr
{
90003006:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003008:	4b3d      	ldr	r3, [pc, #244]	; (90003100 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000300a:	2211      	movs	r2, #17
9000300c:	4e3d      	ldr	r6, [pc, #244]	; (90003104 <HAL_JPEG_MspInit+0x108>)
{
9000300e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003010:	4d3d      	ldr	r5, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
90003012:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003014:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003016:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003018:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000301c:	493b      	ldr	r1, [pc, #236]	; (9000310c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000301e:	f042 0220 	orr.w	r2, r2, #32
90003022:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003026:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003028:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000302c:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000302e:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003032:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003034:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003036:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003038:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000303a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000303c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003040:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90003044:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003046:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003048:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
9000304c:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003050:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003052:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90003056:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
9000305a:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000305e:	2313      	movs	r3, #19
90003060:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003062:	2302      	movs	r3, #2
90003064:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003066:	f00a f99f 	bl	9000d3a8 <HAL_MDMA_Init>
9000306a:	2800      	cmp	r0, #0
9000306c:	d13a      	bne.n	900030e4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000306e:	2200      	movs	r2, #0
90003070:	4824      	ldr	r0, [pc, #144]	; (90003104 <HAL_JPEG_MspInit+0x108>)
90003072:	4611      	mov	r1, r2
90003074:	f00a fa36 	bl	9000d4e4 <HAL_MDMA_ConfigPostRequestMask>
90003078:	2800      	cmp	r0, #0
9000307a:	d13c      	bne.n	900030f6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000307c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000307e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003080:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003082:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003086:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003088:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000308c:	4920      	ldr	r1, [pc, #128]	; (90003110 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000308e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003090:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90003092:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003094:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003096:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000309a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000309e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a0:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030a2:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030a8:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030ac:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b0:	4815      	ldr	r0, [pc, #84]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b2:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030b4:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b6:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	f00a f976 	bl	9000d3a8 <HAL_MDMA_Init>
900030bc:	b9c0      	cbnz	r0, 900030f0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030be:	2200      	movs	r2, #0
900030c0:	4811      	ldr	r0, [pc, #68]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
900030c2:	4611      	mov	r1, r2
900030c4:	f00a fa0e 	bl	9000d4e4 <HAL_MDMA_ConfigPostRequestMask>
900030c8:	b978      	cbnz	r0, 900030ea <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030ca:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030cc:	2079      	movs	r0, #121	; 0x79
900030ce:	2200      	movs	r2, #0
900030d0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	f007 fb0e 	bl	9000a6f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030d8:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030da:	b002      	add	sp, #8
900030dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	f007 bb46 	b.w	9000a770 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030e4:	f7ff ff32 	bl	90002f4c <Error_Handler>
900030e8:	e7c1      	b.n	9000306e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030ea:	f7ff ff2f 	bl	90002f4c <Error_Handler>
900030ee:	e7ec      	b.n	900030ca <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f0:	f7ff ff2c 	bl	90002f4c <Error_Handler>
900030f4:	e7e3      	b.n	900030be <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030f6:	f7ff ff29 	bl	90002f4c <Error_Handler>
900030fa:	e7bf      	b.n	9000307c <HAL_JPEG_MspInit+0x80>
900030fc:	52003000 	.word	0x52003000
90003100:	58024400 	.word	0x58024400
90003104:	24009668 	.word	0x24009668
90003108:	240096d4 	.word	0x240096d4
9000310c:	52000200 	.word	0x52000200
90003110:	520001c0 	.word	0x520001c0

90003114 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003114:	b570      	push	{r4, r5, r6, lr}
90003116:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003118:	2100      	movs	r1, #0
{
9000311a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000311c:	22c0      	movs	r2, #192	; 0xc0
9000311e:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	9109      	str	r1, [sp, #36]	; 0x24
90003122:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003126:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000312a:	f026 fbd1 	bl	900298d0 <memset>
  if(hltdc->Instance==LTDC)
9000312e:	4b4a      	ldr	r3, [pc, #296]	; (90003258 <HAL_LTDC_MspInit+0x144>)
90003130:	6822      	ldr	r2, [r4, #0]
90003132:	429a      	cmp	r2, r3
90003134:	d001      	beq.n	9000313a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003136:	b03a      	add	sp, #232	; 0xe8
90003138:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000313a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000313c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000313e:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
90003142:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003144:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003146:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003148:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314a:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000314c:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314e:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003152:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003154:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003156:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000315a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315e:	f00b fa53 	bl	9000e608 <HAL_RCCEx_PeriphCLKConfig>
90003162:	2800      	cmp	r0, #0
90003164:	d174      	bne.n	90003250 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003166:	4b3d      	ldr	r3, [pc, #244]	; (9000325c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003168:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000316a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000316c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003172:	a905      	add	r1, sp, #20
90003174:	483a      	ldr	r0, [pc, #232]	; (90003260 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f042 0208 	orr.w	r2, r2, #8
9000317a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000317e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003182:	f002 0208 	and.w	r2, r2, #8
90003186:	9200      	str	r2, [sp, #0]
90003188:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000318a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000318e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003192:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003196:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000319a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000319e:	9201      	str	r2, [sp, #4]
900031a0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031b6:	9202      	str	r2, [sp, #8]
900031b8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031c2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ca:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031ce:	9203      	str	r2, [sp, #12]
900031d0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031da:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031e2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031e8:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ea:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031ec:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ee:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031f2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031f6:	f007 fce9 	bl	9000abcc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900031fa:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900031fe:	a905      	add	r1, sp, #20
90003200:	4818      	ldr	r0, [pc, #96]	; (90003264 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003204:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003208:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000320c:	f007 fcde 	bl	9000abcc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003210:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003214:	a905      	add	r1, sp, #20
90003216:	4814      	ldr	r0, [pc, #80]	; (90003268 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000321a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000321e:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003222:	f007 fcd3 	bl	9000abcc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003226:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000322a:	a905      	add	r1, sp, #20
9000322c:	480f      	ldr	r0, [pc, #60]	; (9000326c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000322e:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003230:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003234:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003238:	f007 fcc8 	bl	9000abcc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000323c:	462a      	mov	r2, r5
9000323e:	2105      	movs	r1, #5
90003240:	2058      	movs	r0, #88	; 0x58
90003242:	f007 fa57 	bl	9000a6f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003246:	2058      	movs	r0, #88	; 0x58
90003248:	f007 fa92 	bl	9000a770 <HAL_NVIC_EnableIRQ>
}
9000324c:	b03a      	add	sp, #232	; 0xe8
9000324e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003250:	f7ff fe7c 	bl	90002f4c <Error_Handler>
90003254:	e787      	b.n	90003166 <HAL_LTDC_MspInit+0x52>
90003256:	bf00      	nop
90003258:	50001000 	.word	0x50001000
9000325c:	58024400 	.word	0x58024400
90003260:	58022800 	.word	0x58022800
90003264:	58022000 	.word	0x58022000
90003268:	58022400 	.word	0x58022400
9000326c:	58021c00 	.word	0x58021c00

90003270 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003270:	4836      	ldr	r0, [pc, #216]	; (9000334c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003272:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003274:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003276:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003278:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000327e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003282:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003284:	b109      	cbz	r1, 9000328a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003286:	b038      	add	sp, #224	; 0xe0
90003288:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000328a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000328c:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000328e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003290:	a80a      	add	r0, sp, #40	; 0x28
90003292:	f026 fb1d 	bl	900298d0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003296:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000329a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000329c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a2:	f00b f9b1 	bl	9000e608 <HAL_RCCEx_PeriphCLKConfig>
900032a6:	2800      	cmp	r0, #0
900032a8:	d14c      	bne.n	90003344 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032aa:	4b29      	ldr	r3, [pc, #164]	; (90003350 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ac:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b0:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032b2:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032b4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b8:	2600      	movs	r6, #0
900032ba:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032c4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032c8:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032d4:	a902      	add	r1, sp, #8
900032d6:	481f      	ldr	r0, [pc, #124]	; (90003354 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032d8:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032da:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032de:	f007 fc75 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032e2:	f248 1233 	movw	r2, #33075	; 0x8133
900032e6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032e8:	a902      	add	r1, sp, #8
900032ea:	481b      	ldr	r0, [pc, #108]	; (90003358 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ec:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f6:	f007 fc69 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900032fa:	f24c 7203 	movw	r2, #50947	; 0xc703
900032fe:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003300:	a902      	add	r1, sp, #8
90003302:	4816      	ldr	r0, [pc, #88]	; (9000335c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003304:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003306:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000330a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000330e:	f007 fc5d 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003312:	f64f 023f 	movw	r2, #63551	; 0xf83f
90003316:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003318:	a902      	add	r1, sp, #8
9000331a:	4811      	ldr	r0, [pc, #68]	; (90003360 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000331c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003322:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003326:	f007 fc51 	bl	9000abcc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000332a:	22e0      	movs	r2, #224	; 0xe0
9000332c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000332e:	a902      	add	r1, sp, #8
90003330:	480c      	ldr	r0, [pc, #48]	; (90003364 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003332:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003334:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003338:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000333c:	f007 fc46 	bl	9000abcc <HAL_GPIO_Init>
}
90003340:	b038      	add	sp, #224	; 0xe0
90003342:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003344:	f7ff fe02 	bl	90002f4c <Error_Handler>
90003348:	e7af      	b.n	900032aa <HAL_SDRAM_MspInit+0x3a>
9000334a:	bf00      	nop
9000334c:	2400977c 	.word	0x2400977c
90003350:	58024400 	.word	0x58024400
90003354:	58021000 	.word	0x58021000
90003358:	58021800 	.word	0x58021800
9000335c:	58020c00 	.word	0x58020c00
90003360:	58021400 	.word	0x58021400
90003364:	58021c00 	.word	0x58021c00

90003368 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003368:	4b13      	ldr	r3, [pc, #76]	; (900033b8 <HAL_SDRAM_MspDeInit+0x50>)
9000336a:	681a      	ldr	r2, [r3, #0]
9000336c:	b102      	cbz	r2, 90003370 <HAL_SDRAM_MspDeInit+0x8>
9000336e:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003370:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003372:	4a12      	ldr	r2, [pc, #72]	; (900033bc <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003374:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003376:	f64f 7183 	movw	r1, #65411	; 0xff83
9000337a:	4811      	ldr	r0, [pc, #68]	; (900033c0 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000337c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000337e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90003382:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90003386:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000338a:	f007 fd51 	bl	9000ae30 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000338e:	f248 1133 	movw	r1, #33075	; 0x8133
90003392:	480c      	ldr	r0, [pc, #48]	; (900033c4 <HAL_SDRAM_MspDeInit+0x5c>)
90003394:	f007 fd4c 	bl	9000ae30 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003398:	f24c 7103 	movw	r1, #50947	; 0xc703
9000339c:	480a      	ldr	r0, [pc, #40]	; (900033c8 <HAL_SDRAM_MspDeInit+0x60>)
9000339e:	f007 fd47 	bl	9000ae30 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033a2:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033a6:	4809      	ldr	r0, [pc, #36]	; (900033cc <HAL_SDRAM_MspDeInit+0x64>)
900033a8:	f007 fd42 	bl	9000ae30 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033ac:	21e0      	movs	r1, #224	; 0xe0
900033ae:	4808      	ldr	r0, [pc, #32]	; (900033d0 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	f007 bd3c 	b.w	9000ae30 <HAL_GPIO_DeInit>
900033b8:	24009778 	.word	0x24009778
900033bc:	58024400 	.word	0x58024400
900033c0:	58021000 	.word	0x58021000
900033c4:	58021800 	.word	0x58021800
900033c8:	58020c00 	.word	0x58020c00
900033cc:	58021400 	.word	0x58021400
900033d0:	58021c00 	.word	0x58021c00

900033d4 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033d4:	280f      	cmp	r0, #15
900033d6:	d901      	bls.n	900033dc <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033d8:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033da:	4770      	bx	lr
{
900033dc:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033de:	4601      	mov	r1, r0
{
900033e0:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e2:	2200      	movs	r2, #0
900033e4:	4604      	mov	r4, r0
900033e6:	2036      	movs	r0, #54	; 0x36
900033e8:	f007 f984 	bl	9000a6f4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033ec:	2036      	movs	r0, #54	; 0x36
900033ee:	f007 f9bf 	bl	9000a770 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033f2:	4b1a      	ldr	r3, [pc, #104]	; (9000345c <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033f4:	4a1a      	ldr	r2, [pc, #104]	; (90003460 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033f6:	4669      	mov	r1, sp
900033f8:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
900033fa:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fc:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003400:	f042 0210 	orr.w	r2, r2, #16
90003404:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003408:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000340c:	f003 0310 	and.w	r3, r3, #16
90003410:	9301      	str	r3, [sp, #4]
90003412:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003414:	f00a ffd8 	bl	9000e3c8 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003418:	9b07      	ldr	r3, [sp, #28]
9000341a:	b9bb      	cbnz	r3, 9000344c <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000341c:	f00a ff44 	bl	9000e2a8 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003420:	4b10      	ldr	r3, [pc, #64]	; (90003464 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
90003422:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90003424:	4c10      	ldr	r4, [pc, #64]	; (90003468 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003426:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
9000342a:	4d10      	ldr	r5, [pc, #64]	; (9000346c <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000342c:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003430:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003432:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90003434:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90003436:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003438:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000343a:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000343e:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003440:	f00b ff54 	bl	9000f2ec <HAL_TIM_Base_Init>
90003444:	b130      	cbz	r0, 90003454 <HAL_InitTick+0x80>
    return HAL_ERROR;
90003446:	2001      	movs	r0, #1
}
90003448:	b00b      	add	sp, #44	; 0x2c
9000344a:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000344c:	f00a ff2c 	bl	9000e2a8 <HAL_RCC_GetPCLK1Freq>
90003450:	0040      	lsls	r0, r0, #1
90003452:	e7e5      	b.n	90003420 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90003454:	4620      	mov	r0, r4
90003456:	f00b ffff 	bl	9000f458 <HAL_TIM_Base_Start_IT>
9000345a:	e7f5      	b.n	90003448 <HAL_InitTick+0x74>
9000345c:	58024400 	.word	0x58024400
90003460:	2400007c 	.word	0x2400007c
90003464:	431bde83 	.word	0x431bde83
90003468:	24009780 	.word	0x24009780
9000346c:	40001000 	.word	0x40001000

90003470 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003470:	4770      	bx	lr
90003472:	bf00      	nop

90003474 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003474:	e7fe      	b.n	90003474 <HardFault_Handler>
90003476:	bf00      	nop

90003478 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003478:	e7fe      	b.n	90003478 <MemManage_Handler>
9000347a:	bf00      	nop

9000347c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <BusFault_Handler>
9000347e:	bf00      	nop

90003480 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <UsageFault_Handler>
90003482:	bf00      	nop

90003484 <DebugMon_Handler>:
90003484:	4770      	bx	lr
90003486:	bf00      	nop

90003488 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003488:	4801      	ldr	r0, [pc, #4]	; (90003490 <TIM6_DAC_IRQHandler+0x8>)
9000348a:	f00c b849 	b.w	9000f520 <HAL_TIM_IRQHandler>
9000348e:	bf00      	nop
90003490:	24009780 	.word	0x24009780

90003494 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90003494:	4801      	ldr	r0, [pc, #4]	; (9000349c <LTDC_IRQHandler+0x8>)
90003496:	f009 be31 	b.w	9000d0fc <HAL_LTDC_IRQHandler>
9000349a:	bf00      	nop
9000349c:	240095c0 	.word	0x240095c0

900034a0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a0:	4801      	ldr	r0, [pc, #4]	; (900034a8 <DMA2D_IRQHandler+0x8>)
900034a2:	f007 ba8f 	b.w	9000a9c4 <HAL_DMA2D_IRQHandler>
900034a6:	bf00      	nop
900034a8:	24009500 	.word	0x24009500

900034ac <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034ac:	4801      	ldr	r0, [pc, #4]	; (900034b4 <JPEG_IRQHandler+0x8>)
900034ae:	f009 bd11 	b.w	9000ced4 <HAL_JPEG_IRQHandler>
900034b2:	bf00      	nop
900034b4:	24009568 	.word	0x24009568

900034b8 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034b8:	4804      	ldr	r0, [pc, #16]	; (900034cc <MDMA_IRQHandler+0x14>)
{
900034ba:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034bc:	f00a f8d2 	bl	9000d664 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c0:	4803      	ldr	r0, [pc, #12]	; (900034d0 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c6:	f00a b8cd 	b.w	9000d664 <HAL_MDMA_IRQHandler>
900034ca:	bf00      	nop
900034cc:	240096d4 	.word	0x240096d4
900034d0:	24009668 	.word	0x24009668

900034d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034d4:	2001      	movs	r0, #1
900034d6:	4770      	bx	lr

900034d8 <_kill>:

int _kill(int pid, int sig)
{
900034d8:	b508      	push	{r3, lr}
	errno = EINVAL;
900034da:	f026 faad 	bl	90029a38 <__errno>
900034de:	2216      	movs	r2, #22
900034e0:	4603      	mov	r3, r0
	return -1;
}
900034e2:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034e6:	601a      	str	r2, [r3, #0]
}
900034e8:	bd08      	pop	{r3, pc}
900034ea:	bf00      	nop

900034ec <_exit>:

void _exit (int status)
{
900034ec:	b508      	push	{r3, lr}
	errno = EINVAL;
900034ee:	f026 faa3 	bl	90029a38 <__errno>
900034f2:	2316      	movs	r3, #22
900034f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034f6:	e7fe      	b.n	900034f6 <_exit+0xa>

900034f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900034f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900034fa:	1e16      	subs	r6, r2, #0
900034fc:	dd07      	ble.n	9000350e <_read+0x16>
900034fe:	460c      	mov	r4, r1
90003500:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90003502:	f3af 8000 	nop.w
90003506:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000350a:	42a5      	cmp	r5, r4
9000350c:	d1f9      	bne.n	90003502 <_read+0xa>
	}

return len;
}
9000350e:	4630      	mov	r0, r6
90003510:	bd70      	pop	{r4, r5, r6, pc}
90003512:	bf00      	nop

90003514 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003514:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003516:	1e16      	subs	r6, r2, #0
90003518:	dd07      	ble.n	9000352a <_write+0x16>
9000351a:	460c      	mov	r4, r1
9000351c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000351e:	f814 0b01 	ldrb.w	r0, [r4], #1
90003522:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003526:	42ac      	cmp	r4, r5
90003528:	d1f9      	bne.n	9000351e <_write+0xa>
	}
	return len;
}
9000352a:	4630      	mov	r0, r6
9000352c:	bd70      	pop	{r4, r5, r6, pc}
9000352e:	bf00      	nop

90003530 <_close>:

int _close(int file)
{
	return -1;
}
90003530:	f04f 30ff 	mov.w	r0, #4294967295
90003534:	4770      	bx	lr
90003536:	bf00      	nop

90003538 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003538:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
9000353c:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000353e:	604b      	str	r3, [r1, #4]
}
90003540:	4770      	bx	lr
90003542:	bf00      	nop

90003544 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90003544:	2001      	movs	r0, #1
90003546:	4770      	bx	lr

90003548 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003548:	2000      	movs	r0, #0
9000354a:	4770      	bx	lr

9000354c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000354c:	4770      	bx	lr
9000354e:	bf00      	nop

90003550 <_ZN23ApplicationFontProviderD0Ev>:
90003550:	b510      	push	{r4, lr}
90003552:	4604      	mov	r4, r0
90003554:	2104      	movs	r1, #4
90003556:	f025 ff05 	bl	90029364 <_ZdlPvj>
9000355a:	4620      	mov	r0, r4
9000355c:	bd10      	pop	{r4, pc}
9000355e:	bf00      	nop

90003560 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003560:	2901      	cmp	r1, #1
{
90003562:	b508      	push	{r3, lr}
    switch (typography)
90003564:	d004      	beq.n	90003570 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90003566:	2902      	cmp	r1, #2
90003568:	d00a      	beq.n	90003580 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000356a:	b129      	cbz	r1, 90003578 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000356c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000356e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003570:	f001 f87a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003574:	6840      	ldr	r0, [r0, #4]
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003578:	f001 f876 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6800      	ldr	r0, [r0, #0]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003580:	f001 f872 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6880      	ldr	r0, [r0, #8]
}
90003586:	bd08      	pop	{r3, pc}

90003588 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003588:	4800      	ldr	r0, [pc, #0]	; (9000358c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000358a:	4770      	bx	lr
9000358c:	9002be3c 	.word	0x9002be3c

90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003590:	2012      	movs	r0, #18
90003592:	4770      	bx	lr

90003594 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90003594:	b169      	cbz	r1, 900035b2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003596:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003598:	b530      	push	{r4, r5, lr}
9000359a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000359c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6895      	ldr	r5, [r2, #8]
900035a0:	f10d 0303 	add.w	r3, sp, #3
900035a4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035a6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035a8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035ac:	47a8      	blx	r5
        return glyph;
    }
900035ae:	b003      	add	sp, #12
900035b0:	bd30      	pop	{r4, r5, pc}
            return 0;
900035b2:	4608      	mov	r0, r1
    }
900035b4:	4770      	bx	lr
900035b6:	bf00      	nop

900035b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035b8:	89c0      	ldrh	r0, [r0, #14]
900035ba:	4770      	bx	lr

900035bc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035bc:	8a00      	ldrh	r0, [r0, #16]
900035be:	4770      	bx	lr

900035c0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c0:	88c0      	ldrh	r0, [r0, #6]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035c4:	8880      	ldrh	r0, [r0, #4]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035c8:	7a80      	ldrb	r0, [r0, #10]
    }
900035ca:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	09c0      	lsrs	r0, r0, #7
900035d4:	4770      	bx	lr
900035d6:	bf00      	nop

900035d8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035d8:	4770      	bx	lr
900035da:	bf00      	nop

900035dc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035dc:	b510      	push	{r4, lr}
900035de:	4604      	mov	r4, r0
    }
900035e0:	2108      	movs	r1, #8
900035e2:	f025 febf 	bl	90029364 <_ZdlPvj>
900035e6:	4620      	mov	r0, r4
900035e8:	bd10      	pop	{r4, pc}
900035ea:	bf00      	nop

900035ec <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035ec:	4770      	bx	lr
900035ee:	bf00      	nop

900035f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035f4:	6808      	ldr	r0, [r1, #0]
900035f6:	6849      	ldr	r1, [r1, #4]
900035f8:	c303      	stmia	r3!, {r0, r1}
    }
900035fa:	4770      	bx	lr

900035fc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900035fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
900035fe:	4770      	bx	lr

90003600 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003600:	4770      	bx	lr
90003602:	bf00      	nop

90003604 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003608:	6041      	str	r1, [r0, #4]
    }
9000360a:	4770      	bx	lr

9000360c <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000360c:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003610:	688a      	ldr	r2, [r1, #8]
90003612:	f8c0 c000 	str.w	ip, [r0]
90003616:	6042      	str	r2, [r0, #4]
        }
90003618:	4770      	bx	lr
9000361a:	bf00      	nop

9000361c <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003624:	4905      	ldr	r1, [pc, #20]	; (9000363c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90003626:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90003628:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000362c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003630:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003634:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
90003638:	4770      	bx	lr
9000363a:	bf00      	nop
9000363c:	90003b3d 	.word	0x90003b3d

90003640 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003640:	2301      	movs	r3, #1
90003642:	7203      	strb	r3, [r0, #8]
    }
90003644:	4770      	bx	lr
90003646:	bf00      	nop

90003648 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f025 fe55 	bl	90029364 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f025 fe4d 	bl	90029364 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f025 fe44 	bl	90029364 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f025 fe3d 	bl	90029364 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f025 fe35 	bl	90029364 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003700:	b510      	push	{r4, lr}
90003702:	4604      	mov	r4, r0
90003704:	2140      	movs	r1, #64	; 0x40
90003706:	f025 fe2d 	bl	90029364 <_ZdlPvj>
9000370a:	4620      	mov	r0, r4
9000370c:	bd10      	pop	{r4, pc}
9000370e:	bf00      	nop

90003710 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003710:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003712:	f014 fce9 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003716:	6803      	ldr	r3, [r0, #0]
    }
90003718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000371c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000371e:	4718      	bx	r3

90003720 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003720:	4b05      	ldr	r3, [pc, #20]	; (90003738 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003722:	781b      	ldrb	r3, [r3, #0]
90003724:	b13b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90003726:	6843      	ldr	r3, [r0, #4]
90003728:	b12b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000372a:	681a      	ldr	r2, [r3, #0]
9000372c:	f100 010c 	add.w	r1, r0, #12
90003730:	4618      	mov	r0, r3
90003732:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003734:	4718      	bx	r3
        }
    }
90003736:	4770      	bx	lr
90003738:	24039acb 	.word	0x24039acb

9000373c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000373c:	b510      	push	{r4, lr}
9000373e:	4604      	mov	r4, r0
        animationCounter++;
90003740:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003742:	b082      	sub	sp, #8
        animationCounter++;
90003744:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003746:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
90003748:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000374a:	4298      	cmp	r0, r3
        animationCounter++;
9000374c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
9000374e:	d905      	bls.n	9000375c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003750:	2201      	movs	r2, #1
            animationCounter = 0;
90003752:	2300      	movs	r3, #0
            done = true;
90003754:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
90003756:	72a3      	strb	r3, [r4, #10]
    }
90003758:	b002      	add	sp, #8
9000375a:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000375c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003760:	2100      	movs	r1, #0
90003762:	f016 faab 	bl	90019cbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003766:	f010 0201 	ands.w	r2, r0, #1
9000376a:	b283      	uxth	r3, r0
9000376c:	d127      	bne.n	900037be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000376e:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003770:	4a17      	ldr	r2, [pc, #92]	; (900037d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003772:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003774:	8810      	ldrh	r0, [r2, #0]
90003776:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003778:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000377a:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
9000377c:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000377e:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003780:	4669      	mov	r1, sp
        rect.width = width;
90003782:	8322      	strh	r2, [r4, #24]
90003784:	f8ad 2000 	strh.w	r2, [sp]
90003788:	2200      	movs	r2, #0
9000378a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000378e:	6803      	ldr	r3, [r0, #0]
90003790:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003794:	4a0f      	ldr	r2, [pc, #60]	; (900037d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
90003796:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003798:	f9b2 2000 	ldrsh.w	r2, [r2]
9000379c:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
900037a0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900037a2:	7aa3      	ldrb	r3, [r4, #10]
900037a4:	2b01      	cmp	r3, #1
900037a6:	d1d7      	bne.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
900037a8:	4b0b      	ldr	r3, [pc, #44]	; (900037d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
900037aa:	781b      	ldrb	r3, [r3, #0]
900037ac:	2b00      	cmp	r3, #0
900037ae:	d0d3      	beq.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037b0:	f014 fc9a 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
    }
900037b4:	b002      	add	sp, #8
900037b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037ba:	f014 bc9b 	b.w	900180f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900037be:	f64f 71ff 	movw	r1, #65535	; 0xffff
900037c2:	2800      	cmp	r0, #0
900037c4:	bfd8      	it	le
900037c6:	460a      	movle	r2, r1
900037c8:	4413      	add	r3, r2
900037ca:	b29b      	uxth	r3, r3
900037cc:	81e3      	strh	r3, [r4, #14]
900037ce:	e7cf      	b.n	90003770 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037d0:	24039ac0 	.word	0x24039ac0
900037d4:	24039ac2 	.word	0x24039ac2
900037d8:	24039aca 	.word	0x24039aca

900037dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900037dc:	b570      	push	{r4, r5, r6, lr}
900037de:	4605      	mov	r5, r0
        animationCounter++;
900037e0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900037e4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900037e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900037ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900037ec:	4298      	cmp	r0, r3
        animationCounter++;
900037ee:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900037f2:	d905      	bls.n	90003800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900037f4:	2201      	movs	r2, #1
            animationCounter = 0;
900037f6:	2300      	movs	r3, #0
            done = true;
900037f8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900037fa:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900037fe:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003800:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003804:	2100      	movs	r1, #0
90003806:	f016 fa59 	bl	90019cbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000380a:	f010 0201 	ands.w	r2, r0, #1
9000380e:	b283      	uxth	r3, r0
90003810:	d006      	beq.n	90003820 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003812:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003816:	2800      	cmp	r0, #0
90003818:	bfd8      	it	le
9000381a:	460a      	movle	r2, r1
9000381c:	4413      	add	r3, r2
9000381e:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003820:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003822:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003824:	6802      	ldr	r2, [r0, #0]
90003826:	4912      	ldr	r1, [pc, #72]	; (90003870 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003828:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
9000382a:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
9000382c:	87ab      	strh	r3, [r5, #60]	; 0x3c
9000382e:	428a      	cmp	r2, r1
90003830:	d11b      	bne.n	9000386a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003832:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003834:	b164      	cbz	r4, 90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003836:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003838:	4e0e      	ldr	r6, [pc, #56]	; (90003874 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
9000383a:	6823      	ldr	r3, [r4, #0]
9000383c:	88a1      	ldrh	r1, [r4, #4]
9000383e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003840:	4411      	add	r1, r2
90003842:	42b3      	cmp	r3, r6
90003844:	b209      	sxth	r1, r1
        rect.x = x;
90003846:	d109      	bne.n	9000385c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003848:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000384a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000384c:	2c00      	cmp	r4, #0
9000384e:	d1f4      	bne.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003850:	6868      	ldr	r0, [r5, #4]
90003852:	6803      	ldr	r3, [r0, #0]
    }
90003854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003858:	695b      	ldr	r3, [r3, #20]
9000385a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000385c:	4620      	mov	r0, r4
9000385e:	4798      	blx	r3
90003860:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003862:	2c00      	cmp	r4, #0
90003864:	d0f4      	beq.n	90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003866:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003868:	e7e7      	b.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
9000386a:	4790      	blx	r2
9000386c:	4604      	mov	r4, r0
9000386e:	e7e1      	b.n	90003834 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003870:	900035fd 	.word	0x900035fd
90003874:	9000228d 	.word	0x9000228d

90003878 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003878:	7a03      	ldrb	r3, [r0, #8]
9000387a:	bb2b      	cbnz	r3, 900038c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
9000387c:	4a14      	ldr	r2, [pc, #80]	; (900038d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
9000387e:	b570      	push	{r4, r5, r6, lr}
90003880:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003882:	6840      	ldr	r0, [r0, #4]
90003884:	6803      	ldr	r3, [r0, #0]
90003886:	69db      	ldr	r3, [r3, #28]
90003888:	4293      	cmp	r3, r2
9000388a:	d11e      	bne.n	900038ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
9000388c:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000388e:	b164      	cbz	r4, 900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003890:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003892:	4e10      	ldr	r6, [pc, #64]	; (900038d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003894:	6823      	ldr	r3, [r4, #0]
90003896:	88a1      	ldrh	r1, [r4, #4]
90003898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000389a:	1a89      	subs	r1, r1, r2
9000389c:	42b3      	cmp	r3, r6
9000389e:	b209      	sxth	r1, r1
        rect.x = x;
900038a0:	d10b      	bne.n	900038ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
900038a2:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900038a4:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038a6:	2c00      	cmp	r4, #0
900038a8:	d1f4      	bne.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	f105 010c 	add.w	r1, r5, #12
900038b0:	6803      	ldr	r3, [r0, #0]
    }
900038b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
900038b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900038b8:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
900038ba:	4620      	mov	r0, r4
900038bc:	4798      	blx	r3
900038be:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038c0:	2c00      	cmp	r4, #0
900038c2:	d0f2      	beq.n	900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
900038c4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900038c6:	e7e5      	b.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
900038c8:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
900038ca:	4798      	blx	r3
900038cc:	4604      	mov	r4, r0
900038ce:	e7de      	b.n	9000388e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
900038d0:	900035fd 	.word	0x900035fd
900038d4:	9000228d 	.word	0x9000228d

900038d8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900038d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038dc:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900038e0:	b083      	sub	sp, #12
900038e2:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900038e4:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038e6:	9301      	str	r3, [sp, #4]
900038e8:	6803      	ldr	r3, [r0, #0]
900038ea:	6a1b      	ldr	r3, [r3, #32]
900038ec:	4798      	blx	r3
900038ee:	f5b0 6f81 	cmp.w	r0, #1032	; 0x408
900038f2:	f0c0 80ba 	bcc.w	90003a6a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900038f6:	6868      	ldr	r0, [r5, #4]
900038f8:	6803      	ldr	r3, [r0, #0]
900038fa:	6a1b      	ldr	r3, [r3, #32]
900038fc:	4798      	blx	r3
900038fe:	280f      	cmp	r0, #15
90003900:	f240 80bf 	bls.w	90003a82 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003904:	68e8      	ldr	r0, [r5, #12]
90003906:	6803      	ldr	r3, [r0, #0]
90003908:	6a1b      	ldr	r3, [r3, #32]
9000390a:	4798      	blx	r3
9000390c:	2837      	cmp	r0, #55	; 0x37
9000390e:	f240 80b2 	bls.w	90003a76 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
90003912:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003abc <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
90003916:	f014 fbe7 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
9000391a:	3004      	adds	r0, #4
9000391c:	f014 fc31 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003920:	f8d9 0000 	ldr.w	r0, [r9]
90003924:	b140      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003926:	6803      	ldr	r3, [r0, #0]
90003928:	68db      	ldr	r3, [r3, #12]
9000392a:	4798      	blx	r3
    if (*currentTrans)
9000392c:	f8d9 0000 	ldr.w	r0, [r9]
90003930:	b110      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003932:	6803      	ldr	r3, [r0, #0]
90003934:	681b      	ldr	r3, [r3, #0]
90003936:	4798      	blx	r3
    if (*currentScreen)
90003938:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003ac0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
9000393c:	f8d8 0000 	ldr.w	r0, [r8]
90003940:	2800      	cmp	r0, #0
90003942:	d07f      	beq.n	90003a44 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
90003944:	6803      	ldr	r3, [r0, #0]
90003946:	695b      	ldr	r3, [r3, #20]
90003948:	4798      	blx	r3
    if (*currentPresenter)
9000394a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000394e:	2800      	cmp	r0, #0
90003950:	d073      	beq.n	90003a3a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
90003952:	6803      	ldr	r3, [r0, #0]
90003954:	685b      	ldr	r3, [r3, #4]
90003956:	4798      	blx	r3
    if (*currentScreen)
90003958:	f8d8 0000 	ldr.w	r0, [r8]
9000395c:	b110      	cbz	r0, 90003964 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
9000395e:	6803      	ldr	r3, [r0, #0]
90003960:	681b      	ldr	r3, [r3, #0]
90003962:	4798      	blx	r3
    if (*currentPresenter)
90003964:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003968:	b110      	cbz	r0, 90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
9000396a:	6803      	ldr	r3, [r0, #0]
9000396c:	689b      	ldr	r3, [r3, #8]
9000396e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003970:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003972:	2100      	movs	r1, #0
90003974:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
90003976:	468a      	mov	sl, r1
90003978:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000397a:	4790      	blx	r2
          solid()
9000397c:	4a44      	ldr	r2, [pc, #272]	; (90003a90 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
9000397e:	f100 0b10 	add.w	fp, r0, #16
90003982:	4604      	mov	r4, r0
90003984:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
90003986:	2214      	movs	r2, #20
          solid()
90003988:	4651      	mov	r1, sl
9000398a:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
9000398e:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
90003992:	2228      	movs	r2, #40	; 0x28
90003994:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003998:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
9000399c:	4658      	mov	r0, fp
9000399e:	f025 ff97 	bl	900298d0 <memset>
            targetValue = HAL::DISPLAY_WIDTH;
900039a2:	4a3c      	ldr	r2, [pc, #240]	; (90003a94 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900039a4:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
900039a6:	f44f 7180 	mov.w	r1, #256	; 0x100
900039aa:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
900039ae:	f8c4 a014 	str.w	sl, [r4, #20]
900039b2:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
900039b4:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900039b6:	4a38      	ldr	r2, [pc, #224]	; (90003a98 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
900039b8:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
900039bc:	8362      	strh	r2, [r4, #26]
900039be:	6802      	ldr	r2, [r0, #0]
900039c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
900039c2:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
900039c4:	4935      	ldr	r1, [pc, #212]	; (90003a9c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
900039c6:	6121      	str	r1, [r4, #16]
900039c8:	4651      	mov	r1, sl
900039ca:	4790      	blx	r2
900039cc:	4606      	mov	r6, r0
900039ce:	f003 ffd1 	bl	90007974 <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900039d2:	6868      	ldr	r0, [r5, #4]
900039d4:	4651      	mov	r1, sl
900039d6:	6803      	ldr	r3, [r0, #0]
900039d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900039da:	4798      	blx	r3
900039dc:	4605      	mov	r5, r0
900039de:	4631      	mov	r1, r6
900039e0:	f003 ff52 	bl	90007888 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900039e4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900039e8:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900039ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900039f0:	2d00      	cmp	r5, #0
900039f2:	d02c      	beq.n	90003a4e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900039f4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900039f6:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900039f8:	4630      	mov	r0, r6
900039fa:	6013      	str	r3, [r2, #0]
900039fc:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900039fe:	60aa      	str	r2, [r5, #8]
90003a00:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003a02:	63f5      	str	r5, [r6, #60]	; 0x3c
90003a04:	4798      	blx	r3
    newPresenter->activate();
90003a06:	682b      	ldr	r3, [r5, #0]
90003a08:	4628      	mov	r0, r5
90003a0a:	681b      	ldr	r3, [r3, #0]
90003a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a0e:	4621      	mov	r1, r4
90003a10:	4630      	mov	r0, r6
90003a12:	f016 f94d 	bl	90019cb0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003a16:	6823      	ldr	r3, [r4, #0]
90003a18:	4a21      	ldr	r2, [pc, #132]	; (90003aa0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
90003a1a:	691b      	ldr	r3, [r3, #16]
90003a1c:	4293      	cmp	r3, r2
90003a1e:	d118      	bne.n	90003a52 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
90003a20:	6860      	ldr	r0, [r4, #4]
90003a22:	4659      	mov	r1, fp
90003a24:	6803      	ldr	r3, [r0, #0]
90003a26:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003a28:	4798      	blx	r3
    newTransition->invalidate();
90003a2a:	6823      	ldr	r3, [r4, #0]
90003a2c:	4a1d      	ldr	r2, [pc, #116]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a2e:	695b      	ldr	r3, [r3, #20]
90003a30:	4293      	cmp	r3, r2
90003a32:	d115      	bne.n	90003a60 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
90003a34:	b003      	add	sp, #12
90003a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003a3a:	f8d8 0000 	ldr.w	r0, [r8]
90003a3e:	2800      	cmp	r0, #0
90003a40:	d18d      	bne.n	9000395e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
90003a42:	e795      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
90003a44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a48:	2800      	cmp	r0, #0
90003a4a:	d182      	bne.n	90003952 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003a4c:	e790      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003a4e:	462b      	mov	r3, r5
90003a50:	e7d1      	b.n	900039f6 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
90003a52:	4620      	mov	r0, r4
90003a54:	4798      	blx	r3
    newTransition->invalidate();
90003a56:	6823      	ldr	r3, [r4, #0]
90003a58:	4a12      	ldr	r2, [pc, #72]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a5a:	695b      	ldr	r3, [r3, #20]
90003a5c:	4293      	cmp	r3, r2
90003a5e:	d0e9      	beq.n	90003a34 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003a60:	4620      	mov	r0, r4
90003a62:	b003      	add	sp, #12
90003a64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003a68:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003a6a:	4b0f      	ldr	r3, [pc, #60]	; (90003aa8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003a6c:	21a3      	movs	r1, #163	; 0xa3
90003a6e:	4a0f      	ldr	r2, [pc, #60]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a70:	480f      	ldr	r0, [pc, #60]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a72:	f025 fca5 	bl	900293c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003a76:	4b0f      	ldr	r3, [pc, #60]	; (90003ab4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003a78:	21a5      	movs	r1, #165	; 0xa5
90003a7a:	4a0c      	ldr	r2, [pc, #48]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a7c:	480c      	ldr	r0, [pc, #48]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a7e:	f025 fc9f 	bl	900293c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003a82:	4b0d      	ldr	r3, [pc, #52]	; (90003ab8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
90003a84:	21a4      	movs	r1, #164	; 0xa4
90003a86:	4a09      	ldr	r2, [pc, #36]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a88:	4809      	ldr	r0, [pc, #36]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a8a:	f025 fc99 	bl	900293c0 <__assert_func>
90003a8e:	bf00      	nop
90003a90:	9002c780 	.word	0x9002c780
90003a94:	24039ac0 	.word	0x24039ac0
90003a98:	24039ac2 	.word	0x24039ac2
90003a9c:	9002c688 	.word	0x9002c688
90003aa0:	90003669 	.word	0x90003669
90003aa4:	90003675 	.word	0x90003675
90003aa8:	9002bfb4 	.word	0x9002bfb4
90003aac:	9002c044 	.word	0x9002c044
90003ab0:	9002c170 	.word	0x9002c170
90003ab4:	9002c25c 	.word	0x9002c25c
90003ab8:	9002c1b8 	.word	0x9002c1b8
90003abc:	24039b14 	.word	0x24039b14
90003ac0:	24039b10 	.word	0x24039b10

90003ac4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ac4:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003ac8:	b1d3      	cbz	r3, 90003b00 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003aca:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003acc:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ace:	68d1      	ldr	r1, [r2, #12]
90003ad0:	4604      	mov	r4, r0
90003ad2:	4818      	ldr	r0, [pc, #96]	; (90003b34 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003ad4:	4281      	cmp	r1, r0
90003ad6:	d118      	bne.n	90003b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003ad8:	6858      	ldr	r0, [r3, #4]
90003ada:	b180      	cbz	r0, 90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003adc:	6899      	ldr	r1, [r3, #8]
90003ade:	b1e1      	cbz	r1, 90003b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003ae0:	6892      	ldr	r2, [r2, #8]
90003ae2:	4915      	ldr	r1, [pc, #84]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003ae4:	428a      	cmp	r2, r1
90003ae6:	d122      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003ae8:	68da      	ldr	r2, [r3, #12]
90003aea:	6858      	ldr	r0, [r3, #4]
90003aec:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003af0:	07d2      	lsls	r2, r2, #31
90003af2:	d406      	bmi.n	90003b02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003af4:	689b      	ldr	r3, [r3, #8]
90003af6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003af8:	2300      	movs	r3, #0
90003afa:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003afe:	bd70      	pop	{r4, r5, r6, pc}
90003b00:	4770      	bx	lr
90003b02:	6899      	ldr	r1, [r3, #8]
90003b04:	6803      	ldr	r3, [r0, #0]
90003b06:	585b      	ldr	r3, [r3, r1]
90003b08:	e7f5      	b.n	90003af6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b0a:	4618      	mov	r0, r3
90003b0c:	4788      	blx	r1
90003b0e:	2800      	cmp	r0, #0
90003b10:	d0f5      	beq.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003b12:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003b16:	681a      	ldr	r2, [r3, #0]
90003b18:	e7e2      	b.n	90003ae0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003b1a:	68dd      	ldr	r5, [r3, #12]
90003b1c:	07ee      	lsls	r6, r5, #31
90003b1e:	d5ee      	bpl.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003b20:	6892      	ldr	r2, [r2, #8]
90003b22:	4e05      	ldr	r6, [pc, #20]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003b24:	42b2      	cmp	r2, r6
90003b26:	d102      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003b28:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003b2c:	e7ea      	b.n	90003b04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003b2e:	4618      	mov	r0, r3
90003b30:	4790      	blx	r2
90003b32:	e7e1      	b.n	90003af8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003b34:	90003699 	.word	0x90003699
90003b38:	90003679 	.word	0x90003679

90003b3c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b44:	4607      	mov	r7, r0
90003b46:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b48:	68a0      	ldr	r0, [r4, #8]
90003b4a:	6803      	ldr	r3, [r0, #0]
90003b4c:	6a1b      	ldr	r3, [r3, #32]
90003b4e:	4798      	blx	r3
90003b50:	f5b0 7f1a 	cmp.w	r0, #616	; 0x268
90003b54:	f0c0 809e 	bcc.w	90003c94 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b58:	6860      	ldr	r0, [r4, #4]
90003b5a:	6803      	ldr	r3, [r0, #0]
90003b5c:	6a1b      	ldr	r3, [r3, #32]
90003b5e:	4798      	blx	r3
90003b60:	280f      	cmp	r0, #15
90003b62:	f240 80a3 	bls.w	90003cac <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b66:	68e0      	ldr	r0, [r4, #12]
90003b68:	6803      	ldr	r3, [r0, #0]
90003b6a:	6a1b      	ldr	r3, [r3, #32]
90003b6c:	4798      	blx	r3
90003b6e:	280b      	cmp	r0, #11
90003b70:	f240 8096 	bls.w	90003ca0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b74:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b78:	f014 fab6 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003b7c:	3004      	adds	r0, #4
90003b7e:	f014 fb00 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b82:	f8d9 0000 	ldr.w	r0, [r9]
90003b86:	b140      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b88:	6803      	ldr	r3, [r0, #0]
90003b8a:	68db      	ldr	r3, [r3, #12]
90003b8c:	4798      	blx	r3
    if (*currentTrans)
90003b8e:	f8d9 0000 	ldr.w	r0, [r9]
90003b92:	b110      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b94:	6803      	ldr	r3, [r0, #0]
90003b96:	681b      	ldr	r3, [r3, #0]
90003b98:	4798      	blx	r3
    if (*currentScreen)
90003b9a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003b9e:	f8d8 0000 	ldr.w	r0, [r8]
90003ba2:	2800      	cmp	r0, #0
90003ba4:	d063      	beq.n	90003c6e <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003ba6:	6803      	ldr	r3, [r0, #0]
90003ba8:	695b      	ldr	r3, [r3, #20]
90003baa:	4798      	blx	r3
    if (*currentPresenter)
90003bac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb0:	2800      	cmp	r0, #0
90003bb2:	d057      	beq.n	90003c64 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bb4:	6803      	ldr	r3, [r0, #0]
90003bb6:	685b      	ldr	r3, [r3, #4]
90003bb8:	4798      	blx	r3
    if (*currentScreen)
90003bba:	f8d8 0000 	ldr.w	r0, [r8]
90003bbe:	b110      	cbz	r0, 90003bc6 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc0:	6803      	ldr	r3, [r0, #0]
90003bc2:	681b      	ldr	r3, [r3, #0]
90003bc4:	4798      	blx	r3
    if (*currentPresenter)
90003bc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bca:	b110      	cbz	r0, 90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bcc:	6803      	ldr	r3, [r0, #0]
90003bce:	689b      	ldr	r3, [r3, #8]
90003bd0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bd2:	68e0      	ldr	r0, [r4, #12]
90003bd4:	2100      	movs	r1, #0
90003bd6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003bd8:	468b      	mov	fp, r1
90003bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bdc:	4798      	blx	r3
90003bde:	4b36      	ldr	r3, [pc, #216]	; (90003cb8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be0:	4605      	mov	r5, r0
90003be2:	f8c0 b004 	str.w	fp, [r0, #4]
90003be6:	f880 b008 	strb.w	fp, [r0, #8]
90003bea:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bec:	68a0      	ldr	r0, [r4, #8]
90003bee:	602b      	str	r3, [r5, #0]
90003bf0:	6803      	ldr	r3, [r0, #0]
90003bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bf4:	4798      	blx	r3
90003bf6:	4606      	mov	r6, r0
90003bf8:	f003 fe20 	bl	9000783c <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003bfc:	6860      	ldr	r0, [r4, #4]
90003bfe:	4659      	mov	r1, fp
90003c00:	6803      	ldr	r3, [r0, #0]
90003c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c04:	4798      	blx	r3
90003c06:	4604      	mov	r4, r0
90003c08:	4631      	mov	r1, r6
90003c0a:	f003 fdeb 	bl	900077e4 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c0e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c12:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c16:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c1a:	2c00      	cmp	r4, #0
90003c1c:	d02c      	beq.n	90003c78 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c1e:	1d23      	adds	r3, r4, #4
90003c20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c24:	4630      	mov	r0, r6
90003c26:	6833      	ldr	r3, [r6, #0]
90003c28:	f8c4 a008 	str.w	sl, [r4, #8]
90003c2c:	68db      	ldr	r3, [r3, #12]
90003c2e:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c30:	4798      	blx	r3
    newPresenter->activate();
90003c32:	6823      	ldr	r3, [r4, #0]
90003c34:	4620      	mov	r0, r4
90003c36:	681b      	ldr	r3, [r3, #0]
90003c38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c3a:	4629      	mov	r1, r5
90003c3c:	4630      	mov	r0, r6
90003c3e:	f016 f837 	bl	90019cb0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c42:	682b      	ldr	r3, [r5, #0]
90003c44:	491d      	ldr	r1, [pc, #116]	; (90003cbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c46:	691a      	ldr	r2, [r3, #16]
90003c48:	428a      	cmp	r2, r1
90003c4a:	d117      	bne.n	90003c7c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c4c:	695b      	ldr	r3, [r3, #20]
90003c4e:	4a1c      	ldr	r2, [pc, #112]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c50:	4293      	cmp	r3, r2
90003c52:	d11a      	bne.n	90003c8a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c54:	f014 fa48 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003c58:	6803      	ldr	r3, [r0, #0]
90003c5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c5c:	b001      	add	sp, #4
90003c5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c62:	4718      	bx	r3
    if (*currentScreen)
90003c64:	f8d8 0000 	ldr.w	r0, [r8]
90003c68:	2800      	cmp	r0, #0
90003c6a:	d1a9      	bne.n	90003bc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c6c:	e7b1      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c72:	2800      	cmp	r0, #0
90003c74:	d19e      	bne.n	90003bb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c76:	e7ac      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c78:	4623      	mov	r3, r4
90003c7a:	e7d1      	b.n	90003c20 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c7c:	4628      	mov	r0, r5
90003c7e:	4790      	blx	r2
    newTransition->invalidate();
90003c80:	682b      	ldr	r3, [r5, #0]
90003c82:	4a0f      	ldr	r2, [pc, #60]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c84:	695b      	ldr	r3, [r3, #20]
90003c86:	4293      	cmp	r3, r2
90003c88:	d0e4      	beq.n	90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c8a:	4628      	mov	r0, r5
90003c8c:	b001      	add	sp, #4
90003c8e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c92:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c94:	4b0b      	ldr	r3, [pc, #44]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c96:	21a3      	movs	r1, #163	; 0xa3
90003c98:	4a0b      	ldr	r2, [pc, #44]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c9a:	480c      	ldr	r0, [pc, #48]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c9c:	f025 fb90 	bl	900293c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca0:	4b0b      	ldr	r3, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003ca2:	21a5      	movs	r1, #165	; 0xa5
90003ca4:	4a08      	ldr	r2, [pc, #32]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca6:	4809      	ldr	r0, [pc, #36]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca8:	f025 fb8a 	bl	900293c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cac:	4b09      	ldr	r3, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cae:	21a4      	movs	r1, #164	; 0xa4
90003cb0:	4a05      	ldr	r2, [pc, #20]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cb2:	4806      	ldr	r0, [pc, #24]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb4:	f025 fb84 	bl	900293c0 <__assert_func>
90003cb8:	9002c75c 	.word	0x9002c75c
90003cbc:	90003605 	.word	0x90003605
90003cc0:	90003711 	.word	0x90003711
90003cc4:	9002bfb4 	.word	0x9002bfb4
90003cc8:	9002c300 	.word	0x9002c300
90003ccc:	9002c170 	.word	0x9002c170
90003cd0:	9002c25c 	.word	0x9002c25c
90003cd4:	9002c1b8 	.word	0x9002c1b8
90003cd8:	24039b14 	.word	0x24039b14
90003cdc:	24039b10 	.word	0x24039b10

90003ce0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv>:
{
90003ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ce4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003ce8:	4680      	mov	r8, r0
90003cea:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003cec:	68a0      	ldr	r0, [r4, #8]
90003cee:	6803      	ldr	r3, [r0, #0]
90003cf0:	6a1b      	ldr	r3, [r3, #32]
90003cf2:	4798      	blx	r3
90003cf4:	f242 73bb 	movw	r3, #10171	; 0x27bb
90003cf8:	4298      	cmp	r0, r3
90003cfa:	f240 80e1 	bls.w	90003ec0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cfe:	6860      	ldr	r0, [r4, #4]
90003d00:	6803      	ldr	r3, [r0, #0]
90003d02:	6a1b      	ldr	r3, [r3, #32]
90003d04:	4798      	blx	r3
90003d06:	280f      	cmp	r0, #15
90003d08:	f240 80e6 	bls.w	90003ed8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d0c:	68e0      	ldr	r0, [r4, #12]
90003d0e:	6803      	ldr	r3, [r0, #0]
90003d10:	6a1b      	ldr	r3, [r3, #32]
90003d12:	4798      	blx	r3
90003d14:	283f      	cmp	r0, #63	; 0x3f
90003d16:	f240 80d9 	bls.w	90003ecc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003d1a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90003f18 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003d1e:	f014 f9e3 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003d22:	3004      	adds	r0, #4
90003d24:	f014 fa2d 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003d28:	f8da 0000 	ldr.w	r0, [sl]
90003d2c:	b140      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003d2e:	6803      	ldr	r3, [r0, #0]
90003d30:	68db      	ldr	r3, [r3, #12]
90003d32:	4798      	blx	r3
    if (*currentTrans)
90003d34:	f8da 0000 	ldr.w	r0, [sl]
90003d38:	b110      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003d3a:	6803      	ldr	r3, [r0, #0]
90003d3c:	681b      	ldr	r3, [r3, #0]
90003d3e:	4798      	blx	r3
    if (*currentScreen)
90003d40:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003f1c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x23c>
90003d44:	f8d9 0000 	ldr.w	r0, [r9]
90003d48:	2800      	cmp	r0, #0
90003d4a:	f000 80a5 	beq.w	90003e98 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003d4e:	6803      	ldr	r3, [r0, #0]
90003d50:	695b      	ldr	r3, [r3, #20]
90003d52:	4798      	blx	r3
    if (*currentPresenter)
90003d54:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d58:	2800      	cmp	r0, #0
90003d5a:	f000 8081 	beq.w	90003e60 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003d5e:	6803      	ldr	r3, [r0, #0]
90003d60:	685b      	ldr	r3, [r3, #4]
90003d62:	4798      	blx	r3
    if (*currentScreen)
90003d64:	f8d9 0000 	ldr.w	r0, [r9]
90003d68:	b110      	cbz	r0, 90003d70 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003d6a:	6803      	ldr	r3, [r0, #0]
90003d6c:	681b      	ldr	r3, [r3, #0]
90003d6e:	4798      	blx	r3
    if (*currentPresenter)
90003d70:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d74:	b110      	cbz	r0, 90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003d76:	6803      	ldr	r3, [r0, #0]
90003d78:	689b      	ldr	r3, [r3, #8]
90003d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003d7c:	68e0      	ldr	r0, [r4, #12]
90003d7e:	2100      	movs	r1, #0
90003d80:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003d82:	460f      	mov	r7, r1
90003d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003d86:	4798      	blx	r3
          relativeValue(0)
90003d88:	4b56      	ldr	r3, [pc, #344]	; (90003ee4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x204>)
90003d8a:	4606      	mov	r6, r0
90003d8c:	4605      	mov	r5, r0
90003d8e:	6047      	str	r7, [r0, #4]
90003d90:	7207      	strb	r7, [r0, #8]
90003d92:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003d96:	4630      	mov	r0, r6
90003d98:	f010 fc12 	bl	900145c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003d9c:	4b52      	ldr	r3, [pc, #328]	; (90003ee8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003d9e:	2214      	movs	r2, #20
          relativeValue(0)
90003da0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003da2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003da4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003da6:	2b00      	cmp	r3, #0
90003da8:	d166      	bne.n	90003e78 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003daa:	2301      	movs	r3, #1
90003dac:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003dae:	68a0      	ldr	r0, [r4, #8]
90003db0:	2100      	movs	r1, #0
90003db2:	6803      	ldr	r3, [r0, #0]
90003db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003db6:	4798      	blx	r3
90003db8:	4607      	mov	r7, r0
90003dba:	f004 fe93 	bl	90008ae4 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003dbe:	6860      	ldr	r0, [r4, #4]
90003dc0:	2100      	movs	r1, #0
90003dc2:	6803      	ldr	r3, [r0, #0]
90003dc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003dc6:	4798      	blx	r3
90003dc8:	4604      	mov	r4, r0
90003dca:	4639      	mov	r1, r7
90003dcc:	f004 fe12 	bl	900089f4 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003dd0:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003dd4:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003dd8:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003ddc:	2c00      	cmp	r4, #0
90003dde:	d061      	beq.n	90003ea4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c4>
90003de0:	1d23      	adds	r3, r4, #4
90003de2:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003de6:	4638      	mov	r0, r7
90003de8:	683b      	ldr	r3, [r7, #0]
90003dea:	f8c4 b008 	str.w	fp, [r4, #8]
90003dee:	68db      	ldr	r3, [r3, #12]
90003df0:	63fc      	str	r4, [r7, #60]	; 0x3c
90003df2:	4798      	blx	r3
    newPresenter->activate();
90003df4:	6823      	ldr	r3, [r4, #0]
90003df6:	4620      	mov	r0, r4
90003df8:	681b      	ldr	r3, [r3, #0]
90003dfa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003dfc:	4629      	mov	r1, r5
90003dfe:	4638      	mov	r0, r7
90003e00:	f015 ff56 	bl	90019cb0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003e04:	682b      	ldr	r3, [r5, #0]
90003e06:	4939      	ldr	r1, [pc, #228]	; (90003eec <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x20c>)
90003e08:	691a      	ldr	r2, [r3, #16]
90003e0a:	428a      	cmp	r2, r1
90003e0c:	d154      	bne.n	90003eb8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90003e0e:	7a2a      	ldrb	r2, [r5, #8]
90003e10:	b9d2      	cbnz	r2, 90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90003e12:	6868      	ldr	r0, [r5, #4]
90003e14:	4a36      	ldr	r2, [pc, #216]	; (90003ef0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x210>)
90003e16:	6803      	ldr	r3, [r0, #0]
90003e18:	69db      	ldr	r3, [r3, #28]
90003e1a:	4293      	cmp	r3, r2
90003e1c:	d144      	bne.n	90003ea8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c8>
90003e1e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003e20:	b164      	cbz	r4, 90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e22:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e24:	4f33      	ldr	r7, [pc, #204]	; (90003ef4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90003e26:	6823      	ldr	r3, [r4, #0]
90003e28:	88a1      	ldrh	r1, [r4, #4]
90003e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003e2c:	1a89      	subs	r1, r1, r2
90003e2e:	42bb      	cmp	r3, r7
90003e30:	b209      	sxth	r1, r1
90003e32:	d11a      	bne.n	90003e6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90003e34:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003e36:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e38:	2c00      	cmp	r4, #0
90003e3a:	d1f4      	bne.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90003e3c:	6868      	ldr	r0, [r5, #4]
90003e3e:	4631      	mov	r1, r6
90003e40:	6803      	ldr	r3, [r0, #0]
90003e42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003e44:	4798      	blx	r3
    newTransition->invalidate();
90003e46:	682b      	ldr	r3, [r5, #0]
90003e48:	695b      	ldr	r3, [r3, #20]
90003e4a:	4a2b      	ldr	r2, [pc, #172]	; (90003ef8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x218>)
90003e4c:	4293      	cmp	r3, r2
90003e4e:	d12e      	bne.n	90003eae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90003e50:	f014 f94a 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003e54:	6803      	ldr	r3, [r0, #0]
90003e56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003e58:	b001      	add	sp, #4
90003e5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003e5e:	4718      	bx	r3
    if (*currentScreen)
90003e60:	f8d9 0000 	ldr.w	r0, [r9]
90003e64:	2800      	cmp	r0, #0
90003e66:	d180      	bne.n	90003d6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x8a>
90003e68:	e788      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90003e6a:	4620      	mov	r0, r4
90003e6c:	4798      	blx	r3
90003e6e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e70:	2c00      	cmp	r4, #0
90003e72:	d0e3      	beq.n	90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e74:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e76:	e7d6      	b.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e78:	4b20      	ldr	r3, [pc, #128]	; (90003efc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90003e7a:	4630      	mov	r0, r6
        rect.x = x;
90003e7c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e7e:	f9b3 3000 	ldrsh.w	r3, [r3]
90003e82:	4f1f      	ldr	r7, [pc, #124]	; (90003f00 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90003e84:	82eb      	strh	r3, [r5, #22]
90003e86:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003e8a:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003e8c:	f010 fb13 	bl	900144b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90003e90:	883b      	ldrh	r3, [r7, #0]
90003e92:	425b      	negs	r3, r3
90003e94:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003e96:	e78a      	b.n	90003dae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
90003e98:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e9c:	2800      	cmp	r0, #0
90003e9e:	f47f af5e 	bne.w	90003d5e <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x7e>
90003ea2:	e76b      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
90003ea4:	4623      	mov	r3, r4
90003ea6:	e79c      	b.n	90003de2 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
90003ea8:	4798      	blx	r3
90003eaa:	4604      	mov	r4, r0
90003eac:	e7b8      	b.n	90003e20 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
90003eae:	4628      	mov	r0, r5
90003eb0:	b001      	add	sp, #4
90003eb2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003eb6:	4718      	bx	r3
    newTransition->init();
90003eb8:	4628      	mov	r0, r5
90003eba:	4790      	blx	r2
    newTransition->invalidate();
90003ebc:	682b      	ldr	r3, [r5, #0]
90003ebe:	e7c3      	b.n	90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ec0:	4b10      	ldr	r3, [pc, #64]	; (90003f04 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x224>)
90003ec2:	21a3      	movs	r1, #163	; 0xa3
90003ec4:	4a10      	ldr	r2, [pc, #64]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ec6:	4811      	ldr	r0, [pc, #68]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ec8:	f025 fa7a 	bl	900293c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ecc:	4b10      	ldr	r3, [pc, #64]	; (90003f10 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x230>)
90003ece:	21a5      	movs	r1, #165	; 0xa5
90003ed0:	4a0d      	ldr	r2, [pc, #52]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ed2:	480e      	ldr	r0, [pc, #56]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ed4:	f025 fa74 	bl	900293c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ed8:	4b0e      	ldr	r3, [pc, #56]	; (90003f14 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x234>)
90003eda:	21a4      	movs	r1, #164	; 0xa4
90003edc:	4a0a      	ldr	r2, [pc, #40]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ede:	480b      	ldr	r0, [pc, #44]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ee0:	f025 fa6e 	bl	900293c0 <__assert_func>
90003ee4:	9002c7a4 	.word	0x9002c7a4
90003ee8:	24039acb 	.word	0x24039acb
90003eec:	90003879 	.word	0x90003879
90003ef0:	900035fd 	.word	0x900035fd
90003ef4:	9000228d 	.word	0x9000228d
90003ef8:	90003711 	.word	0x90003711
90003efc:	24039ac2 	.word	0x24039ac2
90003f00:	24039ac0 	.word	0x24039ac0
90003f04:	9002bfb4 	.word	0x9002bfb4
90003f08:	9002c418 	.word	0x9002c418
90003f0c:	9002c170 	.word	0x9002c170
90003f10:	9002c25c 	.word	0x9002c25c
90003f14:	9002c1b8 	.word	0x9002c1b8
90003f18:	24039b14 	.word	0x24039b14
90003f1c:	24039b10 	.word	0x24039b10

90003f20 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv>:
{
90003f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_space_invadersView, screen_space_invadersPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003f24:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003f28:	4680      	mov	r8, r0
90003f2a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f2c:	68a0      	ldr	r0, [r4, #8]
90003f2e:	6803      	ldr	r3, [r0, #0]
90003f30:	6a1b      	ldr	r3, [r3, #32]
90003f32:	4798      	blx	r3
90003f34:	f641 73b3 	movw	r3, #8115	; 0x1fb3
90003f38:	4298      	cmp	r0, r3
90003f3a:	f240 80e1 	bls.w	90004100 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003f3e:	6860      	ldr	r0, [r4, #4]
90003f40:	6803      	ldr	r3, [r0, #0]
90003f42:	6a1b      	ldr	r3, [r3, #32]
90003f44:	4798      	blx	r3
90003f46:	280f      	cmp	r0, #15
90003f48:	f240 80e6 	bls.w	90004118 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003f4c:	68e0      	ldr	r0, [r4, #12]
90003f4e:	6803      	ldr	r3, [r0, #0]
90003f50:	6a1b      	ldr	r3, [r3, #32]
90003f52:	4798      	blx	r3
90003f54:	283f      	cmp	r0, #63	; 0x3f
90003f56:	f240 80d9 	bls.w	9000410c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003f5a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90004158 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003f5e:	f014 f8c3 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90003f62:	3004      	adds	r0, #4
90003f64:	f014 f90d 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003f68:	f8da 0000 	ldr.w	r0, [sl]
90003f6c:	b140      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003f6e:	6803      	ldr	r3, [r0, #0]
90003f70:	68db      	ldr	r3, [r3, #12]
90003f72:	4798      	blx	r3
    if (*currentTrans)
90003f74:	f8da 0000 	ldr.w	r0, [sl]
90003f78:	b110      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003f7a:	6803      	ldr	r3, [r0, #0]
90003f7c:	681b      	ldr	r3, [r3, #0]
90003f7e:	4798      	blx	r3
    if (*currentScreen)
90003f80:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 9000415c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x23c>
90003f84:	f8d9 0000 	ldr.w	r0, [r9]
90003f88:	2800      	cmp	r0, #0
90003f8a:	f000 80a5 	beq.w	900040d8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003f8e:	6803      	ldr	r3, [r0, #0]
90003f90:	695b      	ldr	r3, [r3, #20]
90003f92:	4798      	blx	r3
    if (*currentPresenter)
90003f94:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f98:	2800      	cmp	r0, #0
90003f9a:	f000 8081 	beq.w	900040a0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003f9e:	6803      	ldr	r3, [r0, #0]
90003fa0:	685b      	ldr	r3, [r3, #4]
90003fa2:	4798      	blx	r3
    if (*currentScreen)
90003fa4:	f8d9 0000 	ldr.w	r0, [r9]
90003fa8:	b110      	cbz	r0, 90003fb0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003faa:	6803      	ldr	r3, [r0, #0]
90003fac:	681b      	ldr	r3, [r3, #0]
90003fae:	4798      	blx	r3
    if (*currentPresenter)
90003fb0:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003fb4:	b110      	cbz	r0, 90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003fb6:	6803      	ldr	r3, [r0, #0]
90003fb8:	689b      	ldr	r3, [r3, #8]
90003fba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003fbc:	68e0      	ldr	r0, [r4, #12]
90003fbe:	2100      	movs	r1, #0
90003fc0:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003fc2:	460f      	mov	r7, r1
90003fc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003fc6:	4798      	blx	r3
          relativeValue(0)
90003fc8:	4b56      	ldr	r3, [pc, #344]	; (90004124 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x204>)
90003fca:	4606      	mov	r6, r0
90003fcc:	4605      	mov	r5, r0
90003fce:	6047      	str	r7, [r0, #4]
90003fd0:	7207      	strb	r7, [r0, #8]
90003fd2:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003fd6:	4630      	mov	r0, r6
90003fd8:	f010 faf2 	bl	900145c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003fdc:	4b52      	ldr	r3, [pc, #328]	; (90004128 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003fde:	2214      	movs	r2, #20
          relativeValue(0)
90003fe0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003fe4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe6:	2b00      	cmp	r3, #0
90003fe8:	d166      	bne.n	900040b8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003fea:	2301      	movs	r3, #1
90003fec:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003fee:	68a0      	ldr	r0, [r4, #8]
90003ff0:	2100      	movs	r1, #0
90003ff2:	6803      	ldr	r3, [r0, #0]
90003ff4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003ff6:	4798      	blx	r3
90003ff8:	4607      	mov	r7, r0
90003ffa:	f004 fc2f 	bl	9000885c <_ZN25screen_space_invadersViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ffe:	6860      	ldr	r0, [r4, #4]
90004000:	2100      	movs	r1, #0
90004002:	6803      	ldr	r3, [r0, #0]
90004004:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004006:	4798      	blx	r3
90004008:	4604      	mov	r4, r0
9000400a:	4639      	mov	r1, r7
9000400c:	f004 f950 	bl	900082b0 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>
    *currentTrans = newTransition;
90004010:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90004014:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90004018:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
9000401c:	2c00      	cmp	r4, #0
9000401e:	d061      	beq.n	900040e4 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c4>
90004020:	1d23      	adds	r3, r4, #4
90004022:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90004026:	4638      	mov	r0, r7
90004028:	683b      	ldr	r3, [r7, #0]
9000402a:	f8c4 b008 	str.w	fp, [r4, #8]
9000402e:	68db      	ldr	r3, [r3, #12]
90004030:	63fc      	str	r4, [r7, #60]	; 0x3c
90004032:	4798      	blx	r3
    newPresenter->activate();
90004034:	6823      	ldr	r3, [r4, #0]
90004036:	4620      	mov	r0, r4
90004038:	681b      	ldr	r3, [r3, #0]
9000403a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000403c:	4629      	mov	r1, r5
9000403e:	4638      	mov	r0, r7
90004040:	f015 fe36 	bl	90019cb0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004044:	682b      	ldr	r3, [r5, #0]
90004046:	4939      	ldr	r1, [pc, #228]	; (9000412c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x20c>)
90004048:	691a      	ldr	r2, [r3, #16]
9000404a:	428a      	cmp	r2, r1
9000404c:	d154      	bne.n	900040f8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
9000404e:	7a2a      	ldrb	r2, [r5, #8]
90004050:	b9d2      	cbnz	r2, 90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90004052:	6868      	ldr	r0, [r5, #4]
90004054:	4a36      	ldr	r2, [pc, #216]	; (90004130 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x210>)
90004056:	6803      	ldr	r3, [r0, #0]
90004058:	69db      	ldr	r3, [r3, #28]
9000405a:	4293      	cmp	r3, r2
9000405c:	d144      	bne.n	900040e8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c8>
9000405e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90004060:	b164      	cbz	r4, 9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
90004062:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004064:	4f33      	ldr	r7, [pc, #204]	; (90004134 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90004066:	6823      	ldr	r3, [r4, #0]
90004068:	88a1      	ldrh	r1, [r4, #4]
9000406a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000406c:	1a89      	subs	r1, r1, r2
9000406e:	42bb      	cmp	r3, r7
90004070:	b209      	sxth	r1, r1
90004072:	d11a      	bne.n	900040aa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004074:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004076:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004078:	2c00      	cmp	r4, #0
9000407a:	d1f4      	bne.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
9000407c:	6868      	ldr	r0, [r5, #4]
9000407e:	4631      	mov	r1, r6
90004080:	6803      	ldr	r3, [r0, #0]
90004082:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004084:	4798      	blx	r3
    newTransition->invalidate();
90004086:	682b      	ldr	r3, [r5, #0]
90004088:	695b      	ldr	r3, [r3, #20]
9000408a:	4a2b      	ldr	r2, [pc, #172]	; (90004138 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x218>)
9000408c:	4293      	cmp	r3, r2
9000408e:	d12e      	bne.n	900040ee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90004090:	f014 f82a 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90004094:	6803      	ldr	r3, [r0, #0]
90004096:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004098:	b001      	add	sp, #4
9000409a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000409e:	4718      	bx	r3
    if (*currentScreen)
900040a0:	f8d9 0000 	ldr.w	r0, [r9]
900040a4:	2800      	cmp	r0, #0
900040a6:	d180      	bne.n	90003faa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x8a>
900040a8:	e788      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
900040aa:	4620      	mov	r0, r4
900040ac:	4798      	blx	r3
900040ae:	69a4      	ldr	r4, [r4, #24]
        while (d)
900040b0:	2c00      	cmp	r4, #0
900040b2:	d0e3      	beq.n	9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
900040b4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900040b6:	e7d6      	b.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040b8:	4b20      	ldr	r3, [pc, #128]	; (9000413c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
900040ba:	4630      	mov	r0, r6
        rect.x = x;
900040bc:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040be:	f9b3 3000 	ldrsh.w	r3, [r3]
900040c2:	4f1f      	ldr	r7, [pc, #124]	; (90004140 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
900040c4:	82eb      	strh	r3, [r5, #22]
900040c6:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900040ca:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900040cc:	f010 f9f3 	bl	900144b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900040d0:	883b      	ldrh	r3, [r7, #0]
900040d2:	425b      	negs	r3, r3
900040d4:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900040d6:	e78a      	b.n	90003fee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900040d8:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900040dc:	2800      	cmp	r0, #0
900040de:	f47f af5e 	bne.w	90003f9e <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x7e>
900040e2:	e76b      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900040e4:	4623      	mov	r3, r4
900040e6:	e79c      	b.n	90004022 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900040e8:	4798      	blx	r3
900040ea:	4604      	mov	r4, r0
900040ec:	e7b8      	b.n	90004060 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900040ee:	4628      	mov	r0, r5
900040f0:	b001      	add	sp, #4
900040f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900040f6:	4718      	bx	r3
    newTransition->init();
900040f8:	4628      	mov	r0, r5
900040fa:	4790      	blx	r2
    newTransition->invalidate();
900040fc:	682b      	ldr	r3, [r5, #0]
900040fe:	e7c3      	b.n	90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004100:	4b10      	ldr	r3, [pc, #64]	; (90004144 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x224>)
90004102:	21a3      	movs	r1, #163	; 0xa3
90004104:	4a10      	ldr	r2, [pc, #64]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004106:	4811      	ldr	r0, [pc, #68]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004108:	f025 f95a 	bl	900293c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000410c:	4b10      	ldr	r3, [pc, #64]	; (90004150 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x230>)
9000410e:	21a5      	movs	r1, #165	; 0xa5
90004110:	4a0d      	ldr	r2, [pc, #52]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004112:	480e      	ldr	r0, [pc, #56]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004114:	f025 f954 	bl	900293c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004118:	4b0e      	ldr	r3, [pc, #56]	; (90004154 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x234>)
9000411a:	21a4      	movs	r1, #164	; 0xa4
9000411c:	4a0a      	ldr	r2, [pc, #40]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
9000411e:	480b      	ldr	r0, [pc, #44]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004120:	f025 f94e 	bl	900293c0 <__assert_func>
90004124:	9002c7a4 	.word	0x9002c7a4
90004128:	24039acb 	.word	0x24039acb
9000412c:	90003879 	.word	0x90003879
90004130:	900035fd 	.word	0x900035fd
90004134:	9000228d 	.word	0x9000228d
90004138:	90003711 	.word	0x90003711
9000413c:	24039ac2 	.word	0x24039ac2
90004140:	24039ac0 	.word	0x24039ac0
90004144:	9002bfb4 	.word	0x9002bfb4
90004148:	9002c54c 	.word	0x9002c54c
9000414c:	9002c170 	.word	0x9002c170
90004150:	9002c25c 	.word	0x9002c25c
90004154:	9002c1b8 	.word	0x9002c1b8
90004158:	24039b14 	.word	0x24039b14
9000415c:	24039b10 	.word	0x24039b10

90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004160:	b570      	push	{r4, r5, r6, lr}
90004162:	4604      	mov	r4, r0
90004164:	4615      	mov	r5, r2
90004166:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004168:	f014 f8ac 	bl	900182c4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
9000416c:	4a1d      	ldr	r2, [pc, #116]	; (900041e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000416e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004170:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004174:	6014      	str	r4, [r2, #0]
        return instance;
90004176:	4d1c      	ldr	r5, [pc, #112]	; (900041e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004178:	4a1c      	ldr	r2, [pc, #112]	; (900041ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
9000417a:	6828      	ldr	r0, [r5, #0]
9000417c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000417e:	4a1c      	ldr	r2, [pc, #112]	; (900041f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90004180:	491c      	ldr	r1, [pc, #112]	; (900041f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90004182:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90004186:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
9000418a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
9000418e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004192:	6802      	ldr	r2, [r0, #0]
90004194:	6892      	ldr	r2, [r2, #8]
90004196:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004198:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
9000419c:	d11f      	bne.n	900041de <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000419e:	f44f 7380 	mov.w	r3, #256	; 0x100
900041a2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
900041a6:	2000      	movs	r0, #0
900041a8:	f000 fa10 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900041ac:	682b      	ldr	r3, [r5, #0]
900041ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041b2:	b192      	cbz	r2, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
900041b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041b6:	b180      	cbz	r0, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900041b8:	f01d fa33 	bl	90021622 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900041bc:	682b      	ldr	r3, [r5, #0]
900041be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041c2:	b12a      	cbz	r2, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900041c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041c6:	b118      	cbz	r0, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041c8:	f01d faa6 	bl	90021718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041cc:	4620      	mov	r0, r4
900041ce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900041d0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041d2:	f01d faa1 	bl	90021718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041d6:	4620      	mov	r0, r4
900041d8:	bd70      	pop	{r4, r5, r6, pc}
900041da:	6898      	ldr	r0, [r3, #8]
900041dc:	e7ec      	b.n	900041b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900041de:	4619      	mov	r1, r3
900041e0:	4790      	blx	r2
900041e2:	e7e0      	b.n	900041a6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900041e4:	24039b20 	.word	0x24039b20
900041e8:	24039acc 	.word	0x24039acc
900041ec:	9002c708 	.word	0x9002c708
900041f0:	9002c6f0 	.word	0x9002c6f0
900041f4:	90000665 	.word	0x90000665

900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900041f8:	4905      	ldr	r1, [pc, #20]	; (90004210 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
900041fa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900041fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004200:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004204:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004208:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000420c:	4770      	bx	lr
9000420e:	bf00      	nop
90004210:	90003b3d 	.word	0x90003b3d

90004214 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>:
90004214:	4905      	ldr	r1, [pc, #20]	; (9000422c <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv+0x18>)
90004216:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004218:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000421c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004220:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004224:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004228:	4770      	bx	lr
9000422a:	bf00      	nop
9000422c:	90003ce1 	.word	0x90003ce1

90004230 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>:
90004230:	4905      	ldr	r1, [pc, #20]	; (90004248 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv+0x18>)
90004232:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004234:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004238:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
9000423c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004240:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004244:	4770      	bx	lr
90004246:	bf00      	nop
90004248:	90003f21 	.word	0x90003f21

9000424c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
9000424c:	4905      	ldr	r1, [pc, #20]	; (90004264 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
9000424e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004250:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004254:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004258:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000425c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004260:	4770      	bx	lr
90004262:	bf00      	nop
90004264:	900038d9 	.word	0x900038d9

90004268 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004268:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000426a:	4770      	bx	lr

9000426c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000426c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000426e:	4770      	bx	lr

90004270 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004274:	888b      	ldrh	r3, [r1, #4]
90004276:	69c0      	ldr	r0, [r0, #28]
90004278:	0adb      	lsrs	r3, r3, #11
9000427a:	680a      	ldr	r2, [r1, #0]
9000427c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004280:	4410      	add	r0, r2
90004282:	4770      	bx	lr

90004284 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004284:	b1da      	cbz	r2, 900042be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90004286:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004288:	7b14      	ldrb	r4, [r2, #12]
9000428a:	b1b4      	cbz	r4, 900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000428c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004290:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004294:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004298:	6a03      	ldr	r3, [r0, #32]
9000429a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000429e:	ea4e 0202 	orr.w	r2, lr, r2
900042a2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042a6:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
900042aa:	881a      	ldrh	r2, [r3, #0]
900042ac:	428a      	cmp	r2, r1
900042ae:	d008      	beq.n	900042c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b0:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900042b4:	d801      	bhi.n	900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b6:	4283      	cmp	r3, r0
900042b8:	d1f7      	bne.n	900042aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
900042ba:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
900042bc:	bd10      	pop	{r4, pc}
        return 0;
900042be:	4610      	mov	r0, r2
}
900042c0:	4770      	bx	lr
            return kerndata->distance;
900042c2:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
900042c6:	bd10      	pop	{r4, pc}

900042c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
900042c8:	b510      	push	{r4, lr}
900042ca:	4604      	mov	r4, r0
900042cc:	212c      	movs	r1, #44	; 0x2c
900042ce:	f025 f849 	bl	90029364 <_ZdlPvj>
900042d2:	4620      	mov	r0, r4
900042d4:	bd10      	pop	{r4, pc}
900042d6:	bf00      	nop

900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042d8:	b530      	push	{r4, r5, lr}
900042da:	b08b      	sub	sp, #44	; 0x2c
900042dc:	4604      	mov	r4, r0
900042de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
900042e2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042e4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900042e8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900042ee:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900042f4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900042fa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042fc:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90004300:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004302:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90004306:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004308:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
9000430c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000430e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90004312:	9508      	str	r5, [sp, #32]
90004314:	f015 f836 	bl	90019384 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004318:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
9000431a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
9000431c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000431e:	9b16      	ldr	r3, [sp, #88]	; 0x58
90004320:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004322:	9b19      	ldr	r3, [sp, #100]	; 0x64
90004324:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90004326:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004328:	62a3      	str	r3, [r4, #40]	; 0x28
9000432a:	4b02      	ldr	r3, [pc, #8]	; (90004334 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
9000432c:	6023      	str	r3, [r4, #0]
}
9000432e:	b00b      	add	sp, #44	; 0x2c
90004330:	bd30      	pop	{r4, r5, pc}
90004332:	bf00      	nop
90004334:	9002c7c8 	.word	0x9002c7c8

90004338 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004338:	4770      	bx	lr
9000433a:	bf00      	nop

9000433c <_Z23getFont_verdana_10_4bppv>:
{
9000433c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000433e:	4d18      	ldr	r5, [pc, #96]	; (900043a0 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90004340:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004342:	682c      	ldr	r4, [r5, #0]
90004344:	f3bf 8f5b 	dmb	ish
90004348:	f014 0401 	ands.w	r4, r4, #1
9000434c:	d002      	beq.n	90004354 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000434e:	4815      	ldr	r0, [pc, #84]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
90004350:	b00f      	add	sp, #60	; 0x3c
90004352:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004354:	4628      	mov	r0, r5
90004356:	f025 f807 	bl	90029368 <__cxa_guard_acquire>
9000435a:	2800      	cmp	r0, #0
9000435c:	d0f7      	beq.n	9000434e <_Z23getFont_verdana_10_4bppv+0x12>
9000435e:	213f      	movs	r1, #63	; 0x3f
90004360:	2201      	movs	r2, #1
90004362:	230a      	movs	r3, #10
90004364:	2004      	movs	r0, #4
90004366:	9204      	str	r2, [sp, #16]
90004368:	9300      	str	r3, [sp, #0]
9000436a:	9003      	str	r0, [sp, #12]
9000436c:	480d      	ldr	r0, [pc, #52]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000436e:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004372:	490d      	ldr	r1, [pc, #52]	; (900043a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004374:	9108      	str	r1, [sp, #32]
90004376:	490d      	ldr	r1, [pc, #52]	; (900043ac <_Z23getFont_verdana_10_4bppv+0x70>)
90004378:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000437c:	9107      	str	r1, [sp, #28]
9000437e:	490c      	ldr	r1, [pc, #48]	; (900043b0 <_Z23getFont_verdana_10_4bppv+0x74>)
90004380:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004384:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004388:	f7ff ffa6 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000438c:	4809      	ldr	r0, [pc, #36]	; (900043b4 <_Z23getFont_verdana_10_4bppv+0x78>)
9000438e:	f025 f835 	bl	900293fc <atexit>
90004392:	4628      	mov	r0, r5
90004394:	f024 fff4 	bl	90029380 <__cxa_guard_release>
}
90004398:	4802      	ldr	r0, [pc, #8]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000439a:	b00f      	add	sp, #60	; 0x3c
9000439c:	bd30      	pop	{r4, r5, pc}
9000439e:	bf00      	nop
900043a0:	240097cc 	.word	0x240097cc
900043a4:	240097d0 	.word	0x240097d0
900043a8:	9002df44 	.word	0x9002df44
900043ac:	9002e040 	.word	0x9002e040
900043b0:	90201dd8 	.word	0x90201dd8
900043b4:	90004339 	.word	0x90004339

900043b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043b8:	4770      	bx	lr
900043ba:	bf00      	nop

900043bc <_Z23getFont_verdana_20_4bppv>:
{
900043bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043be:	4d19      	ldr	r5, [pc, #100]	; (90004424 <_Z23getFont_verdana_20_4bppv+0x68>)
{
900043c0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043c2:	682c      	ldr	r4, [r5, #0]
900043c4:	f3bf 8f5b 	dmb	ish
900043c8:	f014 0401 	ands.w	r4, r4, #1
900043cc:	d002      	beq.n	900043d4 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900043ce:	4816      	ldr	r0, [pc, #88]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043d0:	b00f      	add	sp, #60	; 0x3c
900043d2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043d4:	4628      	mov	r0, r5
900043d6:	f024 ffc7 	bl	90029368 <__cxa_guard_acquire>
900043da:	2800      	cmp	r0, #0
900043dc:	d0f7      	beq.n	900043ce <_Z23getFont_verdana_20_4bppv+0x12>
900043de:	213f      	movs	r1, #63	; 0x3f
900043e0:	4a12      	ldr	r2, [pc, #72]	; (9000442c <_Z23getFont_verdana_20_4bppv+0x70>)
900043e2:	2301      	movs	r3, #1
900043e4:	2014      	movs	r0, #20
900043e6:	9208      	str	r2, [sp, #32]
900043e8:	2204      	movs	r2, #4
900043ea:	9304      	str	r3, [sp, #16]
900043ec:	9000      	str	r0, [sp, #0]
900043ee:	9401      	str	r4, [sp, #4]
900043f0:	480d      	ldr	r0, [pc, #52]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043f2:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900043f6:	490e      	ldr	r1, [pc, #56]	; (90004430 <_Z23getFont_verdana_20_4bppv+0x74>)
900043f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
900043fc:	9107      	str	r1, [sp, #28]
900043fe:	2318      	movs	r3, #24
90004400:	490c      	ldr	r1, [pc, #48]	; (90004434 <_Z23getFont_verdana_20_4bppv+0x78>)
90004402:	e9cd 4202 	strd	r4, r2, [sp, #8]
90004406:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000440a:	2242      	movs	r2, #66	; 0x42
9000440c:	f7ff ff64 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004410:	4809      	ldr	r0, [pc, #36]	; (90004438 <_Z23getFont_verdana_20_4bppv+0x7c>)
90004412:	f024 fff3 	bl	900293fc <atexit>
90004416:	4628      	mov	r0, r5
90004418:	f024 ffb2 	bl	90029380 <__cxa_guard_release>
}
9000441c:	4802      	ldr	r0, [pc, #8]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000441e:	b00f      	add	sp, #60	; 0x3c
90004420:	bd30      	pop	{r4, r5, pc}
90004422:	bf00      	nop
90004424:	240097fc 	.word	0x240097fc
90004428:	24009800 	.word	0x24009800
9000442c:	9002df48 	.word	0x9002df48
90004430:	9002e044 	.word	0x9002e044
90004434:	90201de8 	.word	0x90201de8
90004438:	900043b9 	.word	0x900043b9

9000443c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000443c:	4770      	bx	lr
9000443e:	bf00      	nop

90004440 <_Z23getFont_verdana_40_4bppv>:
{
90004440:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004442:	4d19      	ldr	r5, [pc, #100]	; (900044a8 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004444:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004446:	682c      	ldr	r4, [r5, #0]
90004448:	f3bf 8f5b 	dmb	ish
9000444c:	f014 0401 	ands.w	r4, r4, #1
90004450:	d002      	beq.n	90004458 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004452:	4816      	ldr	r0, [pc, #88]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004454:	b00f      	add	sp, #60	; 0x3c
90004456:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004458:	4628      	mov	r0, r5
9000445a:	f024 ff85 	bl	90029368 <__cxa_guard_acquire>
9000445e:	2800      	cmp	r0, #0
90004460:	d0f7      	beq.n	90004452 <_Z23getFont_verdana_40_4bppv+0x12>
90004462:	213f      	movs	r1, #63	; 0x3f
90004464:	4a12      	ldr	r2, [pc, #72]	; (900044b0 <_Z23getFont_verdana_40_4bppv+0x70>)
90004466:	2301      	movs	r3, #1
90004468:	2028      	movs	r0, #40	; 0x28
9000446a:	9208      	str	r2, [sp, #32]
9000446c:	2204      	movs	r2, #4
9000446e:	9304      	str	r3, [sp, #16]
90004470:	9000      	str	r0, [sp, #0]
90004472:	9401      	str	r4, [sp, #4]
90004474:	480d      	ldr	r0, [pc, #52]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004476:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000447a:	490e      	ldr	r1, [pc, #56]	; (900044b4 <_Z23getFont_verdana_40_4bppv+0x74>)
9000447c:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004480:	9107      	str	r1, [sp, #28]
90004482:	2329      	movs	r3, #41	; 0x29
90004484:	490c      	ldr	r1, [pc, #48]	; (900044b8 <_Z23getFont_verdana_40_4bppv+0x78>)
90004486:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000448a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000448e:	220a      	movs	r2, #10
90004490:	f7ff ff22 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004494:	4809      	ldr	r0, [pc, #36]	; (900044bc <_Z23getFont_verdana_40_4bppv+0x7c>)
90004496:	f024 ffb1 	bl	900293fc <atexit>
9000449a:	4628      	mov	r0, r5
9000449c:	f024 ff70 	bl	90029380 <__cxa_guard_release>
}
900044a0:	4802      	ldr	r0, [pc, #8]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
900044a2:	b00f      	add	sp, #60	; 0x3c
900044a4:	bd30      	pop	{r4, r5, pc}
900044a6:	bf00      	nop
900044a8:	2400982c 	.word	0x2400982c
900044ac:	24009830 	.word	0x24009830
900044b0:	9002e038 	.word	0x9002e038
900044b4:	9002e048 	.word	0x9002e048
900044b8:	90202184 	.word	0x90202184
900044bc:	9000443d 	.word	0x9000443d

900044c0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900044c0:	2000      	movs	r0, #0
900044c2:	4770      	bx	lr

900044c4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900044c4:	2000      	movs	r0, #0
900044c6:	4770      	bx	lr

900044c8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044c8:	b40e      	push	{r1, r2, r3}
900044ca:	b500      	push	{lr}
900044cc:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044ce:	2100      	movs	r1, #0
{
900044d0:	ab03      	add	r3, sp, #12
900044d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900044d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044d8:	f014 fd7c 	bl	90018fd4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044dc:	b002      	add	sp, #8
900044de:	f85d eb04 	ldr.w	lr, [sp], #4
900044e2:	b003      	add	sp, #12
900044e4:	4770      	bx	lr
900044e6:	bf00      	nop

900044e8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044e8:	b40c      	push	{r2, r3}
900044ea:	b500      	push	{lr}
900044ec:	b083      	sub	sp, #12
900044ee:	ab04      	add	r3, sp, #16
900044f0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900044f4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900044f6:	f014 fd6d 	bl	90018fd4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044fa:	b003      	add	sp, #12
900044fc:	f85d eb04 	ldr.w	lr, [sp], #4
90004500:	b002      	add	sp, #8
90004502:	4770      	bx	lr

90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90004504:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
90004506:	b510      	push	{r4, lr}
90004508:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000450a:	b133      	cbz	r3, 9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000450c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
9000450e:	b39b      	cbz	r3, 90004578 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90004510:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90004512:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90004516:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
90004518:	b923      	cbnz	r3, 90004524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000451a:	4620      	mov	r0, r4
}
9000451c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004520:	f016 b82c 	b.w	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004524:	f016 f928 	bl	9001a778 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90004528:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000452a:	2b01      	cmp	r3, #1
9000452c:	d92a      	bls.n	90004584 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000452e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004530:	1c53      	adds	r3, r2, #1
90004532:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004534:	2b09      	cmp	r3, #9
90004536:	d812      	bhi.n	9000455e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004538:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000453c:	f640 103f 	movw	r0, #2367	; 0x93f
90004540:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004542:	4281      	cmp	r1, r0
90004544:	d1e9      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004546:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000454a:	0052      	lsls	r2, r2, #1
9000454c:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000454e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004552:	4422      	add	r2, r4
90004554:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90004558:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000455a:	8450      	strh	r0, [r2, #34]	; 0x22
        }
9000455c:	e7dd      	b.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000455e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004562:	f640 113f 	movw	r1, #2367	; 0x93f
90004566:	89db      	ldrh	r3, [r3, #14]
90004568:	428b      	cmp	r3, r1
9000456a:	d1d6      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000456c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004570:	2300      	movs	r3, #0
90004572:	0052      	lsls	r2, r2, #1
90004574:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004576:	e7ea      	b.n	9000454e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004578:	4b05      	ldr	r3, [pc, #20]	; (90004590 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000457a:	21c5      	movs	r1, #197	; 0xc5
9000457c:	4a05      	ldr	r2, [pc, #20]	; (90004594 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000457e:	4806      	ldr	r0, [pc, #24]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004580:	f024 ff1e 	bl	900293c0 <__assert_func>
            assert(offset < used);
90004584:	4b05      	ldr	r3, [pc, #20]	; (9000459c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004586:	21cb      	movs	r1, #203	; 0xcb
90004588:	4a05      	ldr	r2, [pc, #20]	; (900045a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000458a:	4803      	ldr	r0, [pc, #12]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000458c:	f024 ff18 	bl	900293c0 <__assert_func>
90004590:	9002c820 	.word	0x9002c820
90004594:	9002c82c 	.word	0x9002c82c
90004598:	9002c8d8 	.word	0x9002c8d8
9000459c:	9002c924 	.word	0x9002c924
900045a0:	9002c934 	.word	0x9002c934

900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900045a4:	f015 bfb3 	b.w	9001a50e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900045a8:	b510      	push	{r4, lr}
900045aa:	b086      	sub	sp, #24
900045ac:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900045b0:	ac0a      	add	r4, sp, #40	; 0x28
{
900045b2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045b6:	461a      	mov	r2, r3
900045b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900045ba:	4661      	mov	r1, ip
900045bc:	9401      	str	r4, [sp, #4]
900045be:	9300      	str	r3, [sp, #0]
900045c0:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900045c2:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045c4:	f013 f910 	bl	900177e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900045c8:	b006      	add	sp, #24
900045ca:	bd10      	pop	{r4, pc}

900045cc <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900045cc:	b9e0      	cbnz	r0, 90004608 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900045ce:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900045d0:	4b13      	ldr	r3, [pc, #76]	; (90004620 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900045d2:	681b      	ldr	r3, [r3, #0]
900045d4:	b1cb      	cbz	r3, 9000460a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045d6:	4c13      	ldr	r4, [pc, #76]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045d8:	4813      	ldr	r0, [pc, #76]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900045da:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045de:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e0:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045e2:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e4:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e6:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e8:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900045ea:	4b10      	ldr	r3, [pc, #64]	; (9000462c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900045ec:	2200      	movs	r2, #0
900045ee:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900045f0:	f000 f83a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
900045f4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900045f6:	f000 f835 	bl	90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900045fa:	4b0d      	ldr	r3, [pc, #52]	; (90004630 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900045fc:	4a0d      	ldr	r2, [pc, #52]	; (90004634 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900045fe:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90004600:	4b0d      	ldr	r3, [pc, #52]	; (90004638 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90004602:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90004604:	8018      	strh	r0, [r3, #0]
    }
}
90004606:	bd38      	pop	{r3, r4, r5, pc}
90004608:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460a:	4c0c      	ldr	r4, [pc, #48]	; (9000463c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000460c:	4905      	ldr	r1, [pc, #20]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90004610:	480b      	ldr	r0, [pc, #44]	; (90004640 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90004612:	4b05      	ldr	r3, [pc, #20]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004614:	4a0b      	ldr	r2, [pc, #44]	; (90004644 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90004616:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90004618:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000461a:	2c00      	cmp	r4, #0
9000461c:	d1e5      	bne.n	900045ea <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000461e:	bd38      	pop	{r3, r4, r5, pc}
90004620:	2400985c 	.word	0x2400985c
90004624:	24009860 	.word	0x24009860
90004628:	24009864 	.word	0x24009864
9000462c:	24009868 	.word	0x24009868
90004630:	24039b24 	.word	0x24039b24
90004634:	24039b2c 	.word	0x24039b2c
90004638:	24039b28 	.word	0x24039b28
9000463c:	90202340 	.word	0x90202340
90004640:	90202250 	.word	0x90202250
90004644:	90202210 	.word	0x90202210

90004648 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90004648:	4a04      	ldr	r2, [pc, #16]	; (9000465c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000464a:	4b05      	ldr	r3, [pc, #20]	; (90004660 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
9000464c:	6812      	ldr	r2, [r2, #0]
9000464e:	681b      	ldr	r3, [r3, #0]
90004650:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004654:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004658:	4770      	bx	lr
9000465a:	bf00      	nop
9000465c:	24009864 	.word	0x24009864
90004660:	24009860 	.word	0x24009860

90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004664:	2010      	movs	r0, #16
90004666:	4770      	bx	lr

90004668 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004668:	4800      	ldr	r0, [pc, #0]	; (9000466c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000466a:	4770      	bx	lr
9000466c:	2400986c 	.word	0x2400986c

90004670 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004670:	b510      	push	{r4, lr}
};
90004672:	4c05      	ldr	r4, [pc, #20]	; (90004688 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004674:	f7ff fea2 	bl	900043bc <_Z23getFont_verdana_20_4bppv>
};
90004678:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000467a:	f7ff fee1 	bl	90004440 <_Z23getFont_verdana_40_4bppv>
};
9000467e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004680:	f7ff fe5c 	bl	9000433c <_Z23getFont_verdana_10_4bppv>
};
90004684:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90004686:	bd10      	pop	{r4, pc}
90004688:	2400986c 	.word	0x2400986c

9000468c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
9000468c:	4770      	bx	lr
9000468e:	bf00      	nop

90004690 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004690:	4770      	bx	lr
90004692:	bf00      	nop

90004694 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004694:	4770      	bx	lr
90004696:	bf00      	nop

90004698 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004698:	4770      	bx	lr
9000469a:	bf00      	nop

9000469c <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
9000469c:	4770      	bx	lr
9000469e:	bf00      	nop

900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
900046a0:	4770      	bx	lr
900046a2:	bf00      	nop

900046a4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
900046a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900046a8:	b133      	cbz	r3, 900046b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
900046aa:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ac:	f100 0374 	add.w	r3, r0, #116	; 0x74
900046b0:	65c2      	str	r2, [r0, #92]	; 0x5c
900046b2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
900046b4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
900046b6:	4770      	bx	lr
900046b8:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ba:	f100 0370 	add.w	r3, r0, #112	; 0x70
900046be:	65c2      	str	r2, [r0, #92]	; 0x5c
900046c0:	681b      	ldr	r3, [r3, #0]
900046c2:	6603      	str	r3, [r0, #96]	; 0x60
    }
900046c4:	4770      	bx	lr
900046c6:	bf00      	nop

900046c8 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900046c8:	4770      	bx	lr
900046ca:	bf00      	nop

900046cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
900046cc:	4770      	bx	lr
900046ce:	bf00      	nop

900046d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900046d0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900046d2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900046d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900046d6:	6844      	ldr	r4, [r0, #4]
900046d8:	f012 0f01 	tst.w	r2, #1
900046dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
900046e0:	d103      	bne.n	900046ea <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
900046e2:	689b      	ldr	r3, [r3, #8]
    }
900046e4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046e8:	4718      	bx	r3
900046ea:	ea4f 0c62 	mov.w	ip, r2, asr #1
900046ee:	689b      	ldr	r3, [r3, #8]
900046f0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900046f4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046f8:	58d3      	ldr	r3, [r2, r3]
900046fa:	4718      	bx	r3

900046fc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900046fc:	6843      	ldr	r3, [r0, #4]
900046fe:	b13b      	cbz	r3, 90004710 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004700:	6883      	ldr	r3, [r0, #8]
90004702:	b10b      	cbz	r3, 90004708 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004704:	2001      	movs	r0, #1
    }
90004706:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004708:	68c0      	ldr	r0, [r0, #12]
9000470a:	f000 0001 	and.w	r0, r0, #1
9000470e:	4770      	bx	lr
90004710:	4618      	mov	r0, r3
90004712:	4770      	bx	lr

90004714 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004714:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004718:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
9000471c:	4770      	bx	lr
9000471e:	bf00      	nop

90004720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004720:	b510      	push	{r4, lr}
90004722:	4604      	mov	r4, r0
90004724:	2178      	movs	r1, #120	; 0x78
90004726:	f024 fe1d 	bl	90029364 <_ZdlPvj>
9000472a:	4620      	mov	r0, r4
9000472c:	bd10      	pop	{r4, pc}
9000472e:	bf00      	nop

90004730 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004730:	b510      	push	{r4, lr}
90004732:	4604      	mov	r4, r0
90004734:	2110      	movs	r1, #16
90004736:	f024 fe15 	bl	90029364 <_ZdlPvj>
9000473a:	4620      	mov	r0, r4
9000473c:	bd10      	pop	{r4, pc}
9000473e:	bf00      	nop

90004740 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
90004740:	b510      	push	{r4, lr}
90004742:	4604      	mov	r4, r0
}
90004744:	f44f 711a 	mov.w	r1, #616	; 0x268
90004748:	f024 fe0c 	bl	90029364 <_ZdlPvj>
9000474c:	4620      	mov	r0, r4
9000474e:	bd10      	pop	{r4, pc}

90004750 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_main_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
90004750:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_snake)
90004752:	f500 739e 	add.w	r3, r0, #316	; 0x13c
{
90004756:	4604      	mov	r4, r0
90004758:	460d      	mov	r5, r1
    if (&src == &btn_snake)
9000475a:	4299      	cmp	r1, r3
9000475c:	d008      	beq.n	90004770 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
        //intr_snake_game
        //When btn_snake clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
9000475e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004762:	429d      	cmp	r5, r3
90004764:	d00c      	beq.n	90004780 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with screen transition towards East
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
    }
    if (&src == &btn_space_invaders)
90004766:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
9000476a:	42a5      	cmp	r5, r4
9000476c:	d010      	beq.n	90004790 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
        //intr_space_invaders_game
        //When btn_space_invaders clicked change screen to screen_space_invaders
        //Go to screen_space_invaders with screen transition towards East
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
    }
}
9000476e:	bd38      	pop	{r3, r4, r5, pc}
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004770:	f013 fcba 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
90004774:	f7ff fd6a 	bl	9000424c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004778:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
9000477c:	429d      	cmp	r5, r3
9000477e:	d1f2      	bne.n	90004766 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    if (&src == &btn_space_invaders)
90004780:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
90004784:	f013 fcb0 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
90004788:	f7ff fd44 	bl	90004214 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>
    if (&src == &btn_space_invaders)
9000478c:	42a5      	cmp	r5, r4
9000478e:	d1ee      	bne.n	9000476e <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90004790:	f013 fcaa 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
}
90004794:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
90004798:	f7ff bd4a 	b.w	90004230 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>

9000479c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
9000479c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000479e:	b30b      	cbz	r3, 900047e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900047a0:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900047a2:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900047a4:	68d1      	ldr	r1, [r2, #12]
900047a6:	4604      	mov	r4, r0
900047a8:	481a      	ldr	r0, [pc, #104]	; (90004814 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900047aa:	4281      	cmp	r1, r0
900047ac:	d11b      	bne.n	900047e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900047ae:	6858      	ldr	r0, [r3, #4]
900047b0:	b180      	cbz	r0, 900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047b2:	6899      	ldr	r1, [r3, #8]
900047b4:	b1f1      	cbz	r1, 900047f4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900047b6:	6892      	ldr	r2, [r2, #8]
900047b8:	4917      	ldr	r1, [pc, #92]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047ba:	428a      	cmp	r2, r1
900047bc:	d124      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900047be:	68da      	ldr	r2, [r3, #12]
900047c0:	6858      	ldr	r0, [r3, #4]
900047c2:	eb00 0062 	add.w	r0, r0, r2, asr #1
900047c6:	07d2      	lsls	r2, r2, #31
900047c8:	d405      	bmi.n	900047d6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900047ca:	4621      	mov	r1, r4
900047cc:	689b      	ldr	r3, [r3, #8]
        }
    }
900047ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047d2:	4718      	bx	r3
900047d4:	bd70      	pop	{r4, r5, r6, pc}
900047d6:	6899      	ldr	r1, [r3, #8]
900047d8:	6803      	ldr	r3, [r0, #0]
900047da:	585b      	ldr	r3, [r3, r1]
900047dc:	4621      	mov	r1, r4
900047de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047e2:	4718      	bx	r3
900047e4:	4770      	bx	lr
        if (action && action->isValid())
900047e6:	4618      	mov	r0, r3
900047e8:	4788      	blx	r1
900047ea:	2800      	cmp	r0, #0
900047ec:	d0f2      	beq.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
900047ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
900047f0:	681a      	ldr	r2, [r3, #0]
900047f2:	e7e0      	b.n	900047b6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900047f4:	68dd      	ldr	r5, [r3, #12]
900047f6:	07ee      	lsls	r6, r5, #31
900047f8:	d5ec      	bpl.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047fa:	6892      	ldr	r2, [r2, #8]
900047fc:	4e06      	ldr	r6, [pc, #24]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047fe:	42b2      	cmp	r2, r6
90004800:	d102      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004802:	eb00 0065 	add.w	r0, r0, r5, asr #1
90004806:	e7e7      	b.n	900047d8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90004808:	4621      	mov	r1, r4
9000480a:	4618      	mov	r0, r3
    }
9000480c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90004810:	4710      	bx	r2
90004812:	bf00      	nop
90004814:	900046fd 	.word	0x900046fd
90004818:	900046d1 	.word	0x900046d1

9000481c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000481c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000481e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90004820:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004822:	bf18      	it	ne
90004824:	2201      	movne	r2, #1
        return pressed;
90004826:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000482a:	460d      	mov	r5, r1
9000482c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000482e:	42b2      	cmp	r2, r6
90004830:	d004      	beq.n	9000483c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90004832:	b116      	cbz	r6, 9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004834:	792b      	ldrb	r3, [r5, #4]
90004836:	2b01      	cmp	r3, #1
90004838:	d00e      	beq.n	90004858 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000483a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000483c:	fab3 f383 	clz	r3, r3
90004840:	095b      	lsrs	r3, r3, #5
90004842:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90004846:	6803      	ldr	r3, [r0, #0]
90004848:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000484c:	4798      	blx	r3
            invalidate();
9000484e:	6823      	ldr	r3, [r4, #0]
90004850:	4620      	mov	r0, r4
90004852:	695b      	ldr	r3, [r3, #20]
90004854:	4798      	blx	r3
90004856:	e7ec      	b.n	90004832 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90004858:	6823      	ldr	r3, [r4, #0]
9000485a:	4a20      	ldr	r2, [pc, #128]	; (900048dc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000485c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90004860:	4293      	cmp	r3, r2
90004862:	d127      	bne.n	900048b4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90004864:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004866:	2b00      	cmp	r3, #0
90004868:	d0e7      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000486a:	6819      	ldr	r1, [r3, #0]
9000486c:	481c      	ldr	r0, [pc, #112]	; (900048e0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000486e:	68ca      	ldr	r2, [r1, #12]
90004870:	4282      	cmp	r2, r0
90004872:	d123      	bne.n	900048bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90004874:	685a      	ldr	r2, [r3, #4]
90004876:	2a00      	cmp	r2, #0
90004878:	d0df      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000487a:	689d      	ldr	r5, [r3, #8]
9000487c:	b175      	cbz	r5, 9000489c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
9000487e:	688e      	ldr	r6, [r1, #8]
90004880:	4a18      	ldr	r2, [pc, #96]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90004882:	4296      	cmp	r6, r2
90004884:	d123      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004886:	68d9      	ldr	r1, [r3, #12]
90004888:	685a      	ldr	r2, [r3, #4]
9000488a:	eb02 0061 	add.w	r0, r2, r1, asr #1
9000488e:	07ca      	lsls	r2, r1, #31
90004890:	d41b      	bmi.n	900048ca <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90004892:	689b      	ldr	r3, [r3, #8]
90004894:	4621      	mov	r1, r4
    }
90004896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000489a:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
9000489c:	68d8      	ldr	r0, [r3, #12]
9000489e:	07c6      	lsls	r6, r0, #31
900048a0:	d5cb      	bpl.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900048a2:	688e      	ldr	r6, [r1, #8]
900048a4:	490f      	ldr	r1, [pc, #60]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900048a6:	428e      	cmp	r6, r1
900048a8:	d111      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900048aa:	eb02 0060 	add.w	r0, r2, r0, asr #1
900048ae:	6803      	ldr	r3, [r0, #0]
900048b0:	595b      	ldr	r3, [r3, r5]
900048b2:	e7ef      	b.n	90004894 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900048b4:	4620      	mov	r0, r4
    }
900048b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900048ba:	4718      	bx	r3
        if (action && action->isValid())
900048bc:	4618      	mov	r0, r3
900048be:	4790      	blx	r2
900048c0:	2800      	cmp	r0, #0
900048c2:	d0ba      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900048c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
900048c6:	6819      	ldr	r1, [r3, #0]
900048c8:	e7d9      	b.n	9000487e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900048ca:	689d      	ldr	r5, [r3, #8]
900048cc:	e7ef      	b.n	900048ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900048ce:	4621      	mov	r1, r4
900048d0:	4618      	mov	r0, r3
900048d2:	4633      	mov	r3, r6
    }
900048d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900048d8:	4718      	bx	r3
900048da:	bf00      	nop
900048dc:	9000479d 	.word	0x9000479d
900048e0:	900046fd 	.word	0x900046fd
900048e4:	900046d1 	.word	0x900046d1

900048e8 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
900048e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048ec:	b085      	sub	sp, #20
900048ee:	4604      	mov	r4, r0
        : presenter(0)
900048f0:	f015 f832 	bl	90019958 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &screen_main_menuViewBase::flexButtonCallbackHandler)
900048f4:	4adf      	ldr	r2, [pc, #892]	; (90004c74 <_ZN24screen_main_menuViewBaseC1Ev+0x38c>)
900048f6:	2500      	movs	r5, #0
          touchable(false),
900048f8:	f44f 7680 	mov.w	r6, #256	; 0x100
900048fc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
        : Widget(), alpha(255), color(0)
90004900:	4bdd      	ldr	r3, [pc, #884]	; (90004c78 <_ZN24screen_main_menuViewBaseC1Ev+0x390>)
90004902:	6022      	str	r2, [r4, #0]
90004904:	22ff      	movs	r2, #255	; 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004906:	f64f 79ff 	movw	r9, #65535	; 0xffff
9000490a:	f104 0798 	add.w	r7, r4, #152	; 0x98
9000490e:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
90004912:	a903      	add	r1, sp, #12
90004914:	63e5      	str	r5, [r4, #60]	; 0x3c
90004916:	4640      	mov	r0, r8
        : x(0), y(0), width(0), height(0)
90004918:	6465      	str	r5, [r4, #68]	; 0x44
        : pressed(false), alpha(255), action(0)
9000491a:	f64f 7a00 	movw	sl, #65280	; 0xff00
          cachedAbsX(0),
9000491e:	6625      	str	r5, [r4, #96]	; 0x60
90004920:	f504 7b9e 	add.w	fp, r4, #316	; 0x13c
          touchable(false),
90004924:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90004928:	6423      	str	r3, [r4, #64]	; 0x40
        : color(col)
9000492a:	66a5      	str	r5, [r4, #104]	; 0x68
9000492c:	f8ad 900c 	strh.w	r9, [sp, #12]
        : x(0), y(0), width(0), height(0)
90004930:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004934:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90004938:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000493c:	f00f feaa 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004940:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004944:	a903      	add	r1, sp, #12
90004946:	4638      	mov	r0, r7
90004948:	f8ad 900c 	strh.w	r9, [sp, #12]
9000494c:	9301      	str	r3, [sp, #4]
9000494e:	f00f fea1 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        touchable = touch;
90004952:	f240 1301 	movw	r3, #257	; 0x101
        : Box(), borderColor(0), borderSize(0)
90004956:	4ac9      	ldr	r2, [pc, #804]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
        T::add(borderBox);
90004958:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
          firstChild(0)
9000495c:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
90004960:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90004964:	4bc6      	ldr	r3, [pc, #792]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004966:	f8a4 a0f0 	strh.w	sl, [r4, #240]	; 0xf0
9000496a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        T::add(borderBox);
9000496e:	9b01      	ldr	r3, [sp, #4]
90004970:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90004974:	4618      	mov	r0, r3
          touchable(false),
90004976:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
9000497a:	f884 911e 	strb.w	r9, [r4, #286]	; 0x11e
        : color(col)
9000497e:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
90004982:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
90004986:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
9000498a:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        : x(0), y(0), width(0), height(0)
9000498e:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90004992:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90004996:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
9000499a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
9000499e:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
900049a2:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(0)
900049a6:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900049aa:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900049ae:	e9c4 553f 	strd	r5, r5, [r4, #252]	; 0xfc
900049b2:	e9c4 5541 	strd	r5, r5, [r4, #260]	; 0x104
900049b6:	f00d ff3f 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900049ba:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
900049bc:	4bb0      	ldr	r3, [pc, #704]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
        touchable = touch;
900049be:	f240 1001 	movw	r0, #257	; 0x101
900049c2:	f884 2196 	strb.w	r2, [r4, #406]	; 0x196
        T::add(borderBox);
900049c6:	f504 71b8 	add.w	r1, r4, #368	; 0x170
900049ca:	4aac      	ldr	r2, [pc, #688]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
900049cc:	f8c4 5164 	str.w	r5, [r4, #356]	; 0x164
900049d0:	f8a4 a168 	strh.w	sl, [r4, #360]	; 0x168
900049d4:	f504 7ada 	add.w	sl, r4, #436	; 0x1b4
900049d8:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900049dc:	f8a4 0160 	strh.w	r0, [r4, #352]	; 0x160
900049e0:	4658      	mov	r0, fp
        : T(), up(), down()
900049e2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
          touchable(false),
900049e6:	f8a4 6194 	strh.w	r6, [r4, #404]	; 0x194
        : color(col)
900049ea:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
900049ee:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
900049f2:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
900049f6:	f8a4 51a0 	strh.w	r5, [r4, #416]	; 0x1a0
        : x(0), y(0), width(0), height(0)
900049fa:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
900049fe:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90004a02:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90004a06:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
          nextSibling(0),
90004a0a:	e9c4 5561 	strd	r5, r5, [r4, #388]	; 0x184
          cachedAbsX(0),
90004a0e:	e9c4 5563 	strd	r5, r5, [r4, #396]	; 0x18c
        : color(0)
90004a12:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004a16:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
        rect.x = x;
90004a1a:	e9c4 555d 	strd	r5, r5, [r4, #372]	; 0x174
90004a1e:	e9c4 555f 	strd	r5, r5, [r4, #380]	; 0x17c
        T::add(borderBox);
90004a22:	f00d ff09 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a26:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
90004a28:	4b95      	ldr	r3, [pc, #596]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004a2a:	f64f 7100 	movw	r1, #65280	; 0xff00
        touchable = touch;
90004a2e:	f240 1001 	movw	r0, #257	; 0x101
90004a32:	f884 220e 	strb.w	r2, [r4, #526]	; 0x20e
90004a36:	4a91      	ldr	r2, [pc, #580]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
          touchable(false),
90004a38:	f8a4 620c 	strh.w	r6, [r4, #524]	; 0x20c
90004a3c:	f504 760b 	add.w	r6, r4, #556	; 0x22c
90004a40:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004a44:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90004a48:	f8a4 11e0 	strh.w	r1, [r4, #480]	; 0x1e0
        T::add(borderBox);
90004a4c:	f504 71f4 	add.w	r1, r4, #488	; 0x1e8
        touchable = touch;
90004a50:	f8a4 01d8 	strh.w	r0, [r4, #472]	; 0x1d8
90004a54:	4650      	mov	r0, sl
90004a56:	f8c4 51dc 	str.w	r5, [r4, #476]	; 0x1dc
90004a5a:	f8c4 51e4 	str.w	r5, [r4, #484]	; 0x1e4
90004a5e:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
        : x(0), y(0), width(0), height(0)
90004a62:	e9c4 556e 	strd	r5, r5, [r4, #440]	; 0x1b8
90004a66:	e9c4 5570 	strd	r5, r5, [r4, #448]	; 0x1c0
          nextSibling(0),
90004a6a:	e9c4 5572 	strd	r5, r5, [r4, #456]	; 0x1c8
          cachedAbsX(0),
90004a6e:	e9c4 5574 	strd	r5, r5, [r4, #464]	; 0x1d0
          nextSibling(0),
90004a72:	e9c4 557f 	strd	r5, r5, [r4, #508]	; 0x1fc
          cachedAbsX(0),
90004a76:	e9c4 5581 	strd	r5, r5, [r4, #516]	; 0x204
        : color(col)
90004a7a:	e9c4 5584 	strd	r5, r5, [r4, #528]	; 0x210
        : color(0)
90004a7e:	e9c4 5587 	strd	r5, r5, [r4, #540]	; 0x21c
90004a82:	e9c4 5589 	strd	r5, r5, [r4, #548]	; 0x224
        rect.x = x;
90004a86:	e9c4 557b 	strd	r5, r5, [r4, #492]	; 0x1ec
90004a8a:	e9c4 557d 	strd	r5, r5, [r4, #500]	; 0x1f4
90004a8e:	f00d fed3 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a92:	a903      	add	r1, sp, #12
90004a94:	4630      	mov	r0, r6
90004a96:	f8ad 900c 	strh.w	r9, [sp, #12]
90004a9a:	f00f fdfb 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
90004a9e:	4a79      	ldr	r2, [pc, #484]	; (90004c84 <_ZN24screen_main_menuViewBaseC1Ev+0x39c>)
    __background.setPosition(0, 0, 480, 272);
90004aa0:	f104 0940 	add.w	r9, r4, #64	; 0x40
        setWidth(width);
90004aa4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90004aa8:	f8c4 2258 	str.w	r2, [r4, #600]	; 0x258
90004aac:	4a76      	ldr	r2, [pc, #472]	; (90004c88 <_ZN24screen_main_menuViewBaseC1Ev+0x3a0>)
90004aae:	4648      	mov	r0, r9
90004ab0:	f8c4 5264 	str.w	r5, [r4, #612]	; 0x264
90004ab4:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
        rect.x = x;
90004ab8:	6465      	str	r5, [r4, #68]	; 0x44
90004aba:	f8c4 425c 	str.w	r4, [r4, #604]	; 0x25c
        setWidth(width);
90004abe:	f7fd fbe9 	bl	90002294 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
90004ac2:	4648      	mov	r0, r9
90004ac4:	f44f 7188 	mov.w	r1, #272	; 0x110
90004ac8:	f7fd fbe6 	bl	90002298 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004acc:	4649      	mov	r1, r9
        color = newColor;
90004ace:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90004ad2:	f104 0904 	add.w	r9, r4, #4
90004ad6:	66a2      	str	r2, [r4, #104]	; 0x68
90004ad8:	4648      	mov	r0, r9
90004ada:	f00d fead 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ade:	220d      	movs	r2, #13
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SNAKE_LOGO_ID));
90004ae0:	a903      	add	r1, sp, #12
90004ae2:	4640      	mov	r0, r8
90004ae4:	f8ad 200c 	strh.w	r2, [sp, #12]
90004ae8:	f010 fe0f 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90004aec:	4a67      	ldr	r2, [pc, #412]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004aee:	4629      	mov	r1, r5
90004af0:	4640      	mov	r0, r8
90004af2:	6722      	str	r2, [r4, #112]	; 0x70
90004af4:	f102 7287 	add.w	r2, r2, #17694720	; 0x10e0000
90004af8:	6762      	str	r2, [r4, #116]	; 0x74
90004afa:	f00f fd86 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004afe:	4641      	mov	r1, r8
90004b00:	4648      	mov	r0, r9
90004b02:	f00d fe99 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b06:	2211      	movs	r2, #17
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TICTACTOE_LOGO_ID));
90004b08:	a903      	add	r1, sp, #12
90004b0a:	4638      	mov	r0, r7
90004b0c:	f8ad 200c 	strh.w	r2, [sp, #12]
90004b10:	f010 fdfb 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004b14:	4a5e      	ldr	r2, [pc, #376]	; (90004c90 <_ZN24screen_main_menuViewBaseC1Ev+0x3a8>)
90004b16:	f44f 7e94 	mov.w	lr, #296	; 0x128
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004b1a:	4629      	mov	r1, r5
90004b1c:	4638      	mov	r0, r7
90004b1e:	e9c4 e227 	strd	lr, r2, [r4, #156]	; 0x9c
90004b22:	f00f fd72 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004b26:	4639      	mov	r1, r7
90004b28:	4648      	mov	r0, r9
90004b2a:	f00d fe85 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b2e:	4a59      	ldr	r2, [pc, #356]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
        borderUp = borderColorReleased;
90004b30:	4859      	ldr	r0, [pc, #356]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004b32:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90004b36:	2205      	movs	r2, #5
90004b38:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90004b3c:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        down = colorPressed;
90004b40:	4956      	ldr	r1, [pc, #344]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderDown = borderColorPressed;
90004b42:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90004b46:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90004b4a:	f8a4 2128 	strh.w	r2, [r4, #296]	; 0x128
        borderBox.setColor(T::getPressed() ? down : up);
90004b4e:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
        down = colorPressed;
90004b52:	4a53      	ldr	r2, [pc, #332]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004b54:	f8c4 0138 	str.w	r0, [r4, #312]	; 0x138
        borderBox.setColor(T::getPressed() ? down : up);
90004b58:	9b01      	ldr	r3, [sp, #4]
        handlePressedUpdated();
90004b5a:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
        down = colorPressed;
90004b5e:	e9c4 214b 	strd	r2, r1, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90004b62:	2d00      	cmp	r5, #0
90004b64:	f000 80c7 	beq.w	90004cf6 <_ZN24screen_main_menuViewBaseC1Ev+0x40e>
90004b68:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004b6a:	f504 719c 	add.w	r1, r4, #312	; 0x138
90004b6e:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
90004b72:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90004b74:	4d4b      	ldr	r5, [pc, #300]	; (90004ca4 <_ZN24screen_main_menuViewBaseC1Ev+0x3bc>)
90004b76:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
        alpha = newAlpha;
90004b7a:	2201      	movs	r2, #1
90004b7c:	f884 20f1 	strb.w	r2, [r4, #241]	; 0xf1
        handleAlphaUpdated();
90004b80:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90004b84:	42a9      	cmp	r1, r5
90004b86:	f040 80bf 	bne.w	90004d08 <_ZN24screen_main_menuViewBaseC1Ev+0x420>
        alpha = newAlpha;
90004b8a:	f884 211e 	strb.w	r2, [r4, #286]	; 0x11e
90004b8e:	4619      	mov	r1, r3
90004b90:	4845      	ldr	r0, [pc, #276]	; (90004ca8 <_ZN24screen_main_menuViewBaseC1Ev+0x3c0>)
90004b92:	4b40      	ldr	r3, [pc, #256]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
    btn_tictactoe.setAction(flexButtonCallback);
90004b94:	f504 7716 	add.w	r7, r4, #600	; 0x258
90004b98:	e9c4 0332 	strd	r0, r3, [r4, #200]	; 0xc8
        action = &callback;
90004b9c:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
90004ba0:	4648      	mov	r0, r9
90004ba2:	f00d fe49 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba6:	4b41      	ldr	r3, [pc, #260]	; (90004cac <_ZN24screen_main_menuViewBaseC1Ev+0x3c4>)
        borderUp = borderColorReleased;
90004ba8:	493b      	ldr	r1, [pc, #236]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004baa:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90004bae:	4a3b      	ldr	r2, [pc, #236]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderUp = borderColorReleased;
90004bb0:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
        borderDown = borderColorPressed;
90004bb4:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90004bb8:	f894 0168 	ldrb.w	r0, [r4, #360]	; 0x168
        borderDown = borderColorPressed;
90004bbc:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90004bc0:	e9c4 c35d 	strd	ip, r3, [r4, #372]	; 0x174
        borderSize = size;
90004bc4:	2305      	movs	r3, #5
90004bc6:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
        handlePressedUpdated();
90004bca:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
90004bce:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
        down = colorPressed;
90004bd2:	4b33      	ldr	r3, [pc, #204]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
90004bd4:	e9c4 3269 	strd	r3, r2, [r4, #420]	; 0x1a4
        borderBox.setColor(T::getPressed() ? down : up);
90004bd8:	2800      	cmp	r0, #0
90004bda:	f000 8092 	beq.w	90004d02 <_ZN24screen_main_menuViewBaseC1Ev+0x41a>
        color = newColor;
90004bde:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004be0:	f504 72d8 	add.w	r2, r4, #432	; 0x1b0
90004be4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90004be8:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004bea:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        alpha = newAlpha;
90004bee:	2300      	movs	r3, #0
90004bf0:	f884 3169 	strb.w	r3, [r4, #361]	; 0x169
        handleAlphaUpdated();
90004bf4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004bf8:	42aa      	cmp	r2, r5
90004bfa:	f040 808d 	bne.w	90004d18 <_ZN24screen_main_menuViewBaseC1Ev+0x430>
        alpha = newAlpha;
90004bfe:	f884 3196 	strb.w	r3, [r4, #406]	; 0x196
90004c02:	4b22      	ldr	r3, [pc, #136]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
90004c04:	4659      	mov	r1, fp
90004c06:	4648      	mov	r0, r9
        action = &callback;
90004c08:	f8c4 716c 	str.w	r7, [r4, #364]	; 0x16c
90004c0c:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004c10:	f103 7387 	add.w	r3, r3, #17694720	; 0x10e0000
90004c14:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90004c18:	f00d fe0e 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c1c:	2200      	movs	r2, #0
90004c1e:	4b24      	ldr	r3, [pc, #144]	; (90004cb0 <_ZN24screen_main_menuViewBaseC1Ev+0x3c8>)
        borderUp = borderColorReleased;
90004c20:	491d      	ldr	r1, [pc, #116]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
        borderBox.setColor(T::getPressed() ? down : up);
90004c22:	f894 01e0 	ldrb.w	r0, [r4, #480]	; 0x1e0
        borderUp = borderColorReleased;
90004c26:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
        borderDown = borderColorPressed;
90004c2a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90004c2e:	e9c4 237b 	strd	r2, r3, [r4, #492]	; 0x1ec
        borderSize = size;
90004c32:	2305      	movs	r3, #5
90004c34:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90004c38:	4a18      	ldr	r2, [pc, #96]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
90004c3a:	f8a4 3218 	strh.w	r3, [r4, #536]	; 0x218
90004c3e:	4b18      	ldr	r3, [pc, #96]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004c40:	f8c4 1228 	str.w	r1, [r4, #552]	; 0x228
        handlePressedUpdated();
90004c44:	f8d4 11b4 	ldr.w	r1, [r4, #436]	; 0x1b4
        down = colorPressed;
90004c48:	e9c4 3287 	strd	r3, r2, [r4, #540]	; 0x21c
        borderBox.setColor(T::getPressed() ? down : up);
90004c4c:	2800      	cmp	r0, #0
90004c4e:	d055      	beq.n	90004cfc <_ZN24screen_main_menuViewBaseC1Ev+0x414>
        color = newColor;
90004c50:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004c52:	f504 720a 	add.w	r2, r4, #552	; 0x228
90004c56:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
90004c5a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004c5c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        alpha = newAlpha;
90004c60:	2300      	movs	r3, #0
90004c62:	f884 31e1 	strb.w	r3, [r4, #481]	; 0x1e1
        handleAlphaUpdated();
90004c66:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004c6a:	42aa      	cmp	r2, r5
90004c6c:	d151      	bne.n	90004d12 <_ZN24screen_main_menuViewBaseC1Ev+0x42a>
        alpha = newAlpha;
90004c6e:	f884 320e 	strb.w	r3, [r4, #526]	; 0x20e
90004c72:	e01f      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004c74:	9002cac4 	.word	0x9002cac4
90004c78:	9002d88c 	.word	0x9002d88c
90004c7c:	9002d8f4 	.word	0x9002d8f4
90004c80:	9002ca10 	.word	0x9002ca10
90004c84:	9002caac 	.word	0x9002caac
90004c88:	90004751 	.word	0x90004751
90004c8c:	000100a0 	.word	0x000100a0
90004c90:	011000b2 	.word	0x011000b2
90004c94:	010f009a 	.word	0x010f009a
90004c98:	ff003366 	.word	0xff003366
90004c9c:	ff0099cc 	.word	0xff0099cc
90004ca0:	ff006699 	.word	0xff006699
90004ca4:	90004715 	.word	0x90004715
90004ca8:	00010140 	.word	0x00010140
90004cac:	010f00a0 	.word	0x010f00a0
90004cb0:	011000a0 	.word	0x011000a0
90004cb4:	2500      	movs	r5, #0
        action = &callback;
90004cb6:	f8c4 71e4 	str.w	r7, [r4, #484]	; 0x1e4
90004cba:	4f19      	ldr	r7, [pc, #100]	; (90004d20 <_ZN24screen_main_menuViewBaseC1Ev+0x438>)
90004cbc:	4651      	mov	r1, sl
90004cbe:	4648      	mov	r0, r9
90004cc0:	e9c4 576e 	strd	r5, r7, [r4, #440]	; 0x1b8
90004cc4:	f00d fdb8 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004cc8:	230e      	movs	r3, #14
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ID));
90004cca:	a903      	add	r1, sp, #12
90004ccc:	4630      	mov	r0, r6
90004cce:	f8ad 300c 	strh.w	r3, [sp, #12]
90004cd2:	f010 fd1a 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004cd6:	4629      	mov	r1, r5
90004cd8:	4630      	mov	r0, r6
90004cda:	f8c4 5230 	str.w	r5, [r4, #560]	; 0x230
90004cde:	f8c4 7234 	str.w	r7, [r4, #564]	; 0x234
90004ce2:	f00f fc92 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004ce6:	4648      	mov	r0, r9
90004ce8:	4631      	mov	r1, r6
90004cea:	f00d fda5 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004cee:	4620      	mov	r0, r4
90004cf0:	b005      	add	sp, #20
90004cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004cf6:	f504 719a 	add.w	r1, r4, #308	; 0x134
90004cfa:	e738      	b.n	90004b6e <_ZN24screen_main_menuViewBaseC1Ev+0x286>
90004cfc:	f504 7209 	add.w	r2, r4, #548	; 0x224
90004d00:	e7a9      	b.n	90004c56 <_ZN24screen_main_menuViewBaseC1Ev+0x36e>
90004d02:	f504 72d6 	add.w	r2, r4, #428	; 0x1ac
90004d06:	e76d      	b.n	90004be4 <_ZN24screen_main_menuViewBaseC1Ev+0x2fc>
        handleAlphaUpdated();
90004d08:	4618      	mov	r0, r3
90004d0a:	9301      	str	r3, [sp, #4]
90004d0c:	4788      	blx	r1
90004d0e:	9b01      	ldr	r3, [sp, #4]
90004d10:	e73d      	b.n	90004b8e <_ZN24screen_main_menuViewBaseC1Ev+0x2a6>
90004d12:	4650      	mov	r0, sl
90004d14:	4790      	blx	r2
90004d16:	e7cd      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004d18:	4658      	mov	r0, fp
90004d1a:	4790      	blx	r2
90004d1c:	e771      	b.n	90004c02 <_ZN24screen_main_menuViewBaseC1Ev+0x31a>
90004d1e:	bf00      	nop
90004d20:	011000a0 	.word	0x011000a0

90004d24 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004d24:	b530      	push	{r4, r5, lr}
90004d26:	b085      	sub	sp, #20
90004d28:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004d2a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004d2c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d2e:	466d      	mov	r5, sp
90004d30:	4601      	mov	r1, r0
        rect.width = width;
90004d32:	8102      	strh	r2, [r0, #8]
90004d34:	343c      	adds	r4, #60	; 0x3c
90004d36:	4628      	mov	r0, r5
90004d38:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d3c:	4798      	blx	r3
90004d3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d42:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d46:	b005      	add	sp, #20
90004d48:	bd30      	pop	{r4, r5, pc}
90004d4a:	bf00      	nop

90004d4c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004d4c:	b530      	push	{r4, r5, lr}
90004d4e:	b085      	sub	sp, #20
90004d50:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004d52:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004d54:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d56:	466d      	mov	r5, sp
90004d58:	4601      	mov	r1, r0
        rect.height = height;
90004d5a:	8142      	strh	r2, [r0, #10]
90004d5c:	343c      	adds	r4, #60	; 0x3c
90004d5e:	4628      	mov	r0, r5
90004d60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d64:	4798      	blx	r3
90004d66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d6e:	b005      	add	sp, #20
90004d70:	bd30      	pop	{r4, r5, pc}
90004d72:	bf00      	nop

90004d74 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90004d74:	2200      	movs	r2, #0
90004d76:	6002      	str	r2, [r0, #0]
90004d78:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004d7a:	4770      	bx	lr

90004d7c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004d7c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004d80:	4770      	bx	lr
90004d82:	bf00      	nop

90004d84 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004d84:	2000      	movs	r0, #0
90004d86:	4770      	bx	lr

90004d88 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004d88:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004d8c:	b112      	cbz	r2, 90004d94 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004d8e:	6803      	ldr	r3, [r0, #0]
90004d90:	695b      	ldr	r3, [r3, #20]
90004d92:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004d94:	4770      	bx	lr
90004d96:	bf00      	nop

90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d98:	2200      	movs	r2, #0
90004d9a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004d9e:	6082      	str	r2, [r0, #8]
90004da0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004da4:	4770      	bx	lr
90004da6:	bf00      	nop

90004da8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004da8:	6c80      	ldr	r0, [r0, #72]	; 0x48
90004daa:	4770      	bx	lr

90004dac <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
     * Virtual Action Handlers
     */
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
90004dac:	4770      	bx	lr
90004dae:	bf00      	nop

90004db0 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
90004db0:	4770      	bx	lr
90004db2:	bf00      	nop

90004db4 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
90004db4:	4770      	bx	lr
90004db6:	bf00      	nop

90004db8 <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
90004db8:	4770      	bx	lr
90004dba:	bf00      	nop

90004dbc <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
90004dbc:	4770      	bx	lr
90004dbe:	bf00      	nop

90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
90004dc0:	4770      	bx	lr
90004dc2:	bf00      	nop

90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
90004dc4:	4770      	bx	lr
90004dc6:	bf00      	nop

90004dc8 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004dc8:	4770      	bx	lr
90004dca:	bf00      	nop

90004dcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004dcc:	4770      	bx	lr
90004dce:	bf00      	nop

90004dd0 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004dd0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004dd2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004dd4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004dd6:	6844      	ldr	r4, [r0, #4]
90004dd8:	f012 0f01 	tst.w	r2, #1
90004ddc:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004de0:	d103      	bne.n	90004dea <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004de2:	689b      	ldr	r3, [r3, #8]
    }
90004de4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004de8:	4718      	bx	r3
90004dea:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004dee:	689b      	ldr	r3, [r3, #8]
90004df0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004df4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004df8:	58d3      	ldr	r3, [r2, r3]
90004dfa:	4718      	bx	r3

90004dfc <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004dfc:	6843      	ldr	r3, [r0, #4]
90004dfe:	b13b      	cbz	r3, 90004e10 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004e00:	6883      	ldr	r3, [r0, #8]
90004e02:	b10b      	cbz	r3, 90004e08 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004e04:	2001      	movs	r0, #1
    }
90004e06:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004e08:	68c0      	ldr	r0, [r0, #12]
90004e0a:	f000 0001 	and.w	r0, r0, #1
90004e0e:	4770      	bx	lr
90004e10:	4618      	mov	r0, r3
90004e12:	4770      	bx	lr

90004e14 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004e14:	b510      	push	{r4, lr}
90004e16:	4604      	mov	r4, r0
90004e18:	214c      	movs	r1, #76	; 0x4c
90004e1a:	f024 faa3 	bl	90029364 <_ZdlPvj>
90004e1e:	4620      	mov	r0, r4
90004e20:	bd10      	pop	{r4, pc}
90004e22:	bf00      	nop

90004e24 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004e24:	b510      	push	{r4, lr}
90004e26:	4604      	mov	r4, r0
90004e28:	2110      	movs	r1, #16
90004e2a:	f024 fa9b 	bl	90029364 <_ZdlPvj>
90004e2e:	4620      	mov	r0, r4
90004e30:	bd10      	pop	{r4, pc}
90004e32:	bf00      	nop

90004e34 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004e34:	b510      	push	{r4, lr}
90004e36:	4604      	mov	r4, r0
}
90004e38:	f44f 6181 	mov.w	r1, #1032	; 0x408
90004e3c:	f024 fa92 	bl	90029364 <_ZdlPvj>
90004e40:	4620      	mov	r0, r4
90004e42:	bd10      	pop	{r4, pc}

90004e44 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_snake_start)
90004e44:	f500 73da 	add.w	r3, r0, #436	; 0x1b4
90004e48:	4299      	cmp	r1, r3
{
90004e4a:	b570      	push	{r4, r5, r6, lr}
90004e4c:	4604      	mov	r4, r0
90004e4e:	460d      	mov	r5, r1
    if (&src == &btn_snake_start)
90004e50:	d035      	beq.n	90004ebe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x7a>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
90004e52:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
90004e56:	429d      	cmp	r5, r3
90004e58:	d038      	beq.n	90004ecc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x88>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
    if (&src == &btn_up)
90004e5a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
90004e5e:	429d      	cmp	r5, r3
90004e60:	d025      	beq.n	90004eae <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x6a>
        //intr_btn_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
90004e62:	f104 0398 	add.w	r3, r4, #152	; 0x98
90004e66:	429d      	cmp	r5, r3
90004e68:	d019      	beq.n	90004e9e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x5a>
        //intr_btn_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_down)
90004e6a:	f504 7388 	add.w	r3, r4, #272	; 0x110
90004e6e:	429d      	cmp	r5, r3
90004e70:	d00d      	beq.n	90004e8e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4a>
        //intr_btn_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_right)
90004e72:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
90004e76:	429d      	cmp	r5, r3
90004e78:	d000      	beq.n	90004e7c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_btn_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
}
90004e7a:	bd70      	pop	{r4, r5, r6, pc}
        change_direction_right();
90004e7c:	6823      	ldr	r3, [r4, #0]
90004e7e:	4a16      	ldr	r2, [pc, #88]	; (90004ed8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
90004e80:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004e82:	4293      	cmp	r3, r2
90004e84:	d0f9      	beq.n	90004e7a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
90004e86:	4620      	mov	r0, r4
}
90004e88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        change_direction_right();
90004e8c:	4718      	bx	r3
        change_direction_down();
90004e8e:	6823      	ldr	r3, [r4, #0]
90004e90:	4a12      	ldr	r2, [pc, #72]	; (90004edc <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
90004e92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004e94:	4293      	cmp	r3, r2
90004e96:	d0ec      	beq.n	90004e72 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004e98:	4620      	mov	r0, r4
90004e9a:	4798      	blx	r3
90004e9c:	e7e9      	b.n	90004e72 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_left();
90004e9e:	6823      	ldr	r3, [r4, #0]
90004ea0:	4a0f      	ldr	r2, [pc, #60]	; (90004ee0 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
90004ea2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004ea4:	4293      	cmp	r3, r2
90004ea6:	d0e0      	beq.n	90004e6a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004ea8:	4620      	mov	r0, r4
90004eaa:	4798      	blx	r3
90004eac:	e7dd      	b.n	90004e6a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_up();
90004eae:	6823      	ldr	r3, [r4, #0]
90004eb0:	4a0c      	ldr	r2, [pc, #48]	; (90004ee4 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
90004eb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004eb4:	4293      	cmp	r3, r2
90004eb6:	d0d4      	beq.n	90004e62 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004eb8:	4620      	mov	r0, r4
90004eba:	4798      	blx	r3
90004ebc:	e7d1      	b.n	90004e62 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        game_snake_start();
90004ebe:	6803      	ldr	r3, [r0, #0]
90004ec0:	4a09      	ldr	r2, [pc, #36]	; (90004ee8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
90004ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004ec4:	4293      	cmp	r3, r2
90004ec6:	d0c4      	beq.n	90004e52 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004ec8:	4798      	blx	r3
90004eca:	e7c2      	b.n	90004e52 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004ecc:	f013 f90c 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_main_menuScreenNoTransition();
90004ed0:	f7ff f992 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90004ed4:	e7c1      	b.n	90004e5a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004ed6:	bf00      	nop
90004ed8:	90004dbd 	.word	0x90004dbd
90004edc:	90004db9 	.word	0x90004db9
90004ee0:	90004db5 	.word	0x90004db5
90004ee4:	90004db1 	.word	0x90004db1
90004ee8:	90004dad 	.word	0x90004dad

90004eec <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004eec:	4b1b      	ldr	r3, [pc, #108]	; (90004f5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004eee:	6802      	ldr	r2, [r0, #0]
90004ef0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004ef2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ef4:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004ef6:	b323      	cbz	r3, 90004f42 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004ef8:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004efa:	4919      	ldr	r1, [pc, #100]	; (90004f60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004efc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90004efe:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f00:	8809      	ldrh	r1, [r1, #0]
90004f02:	4291      	cmp	r1, r2
90004f04:	d923      	bls.n	90004f4e <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004f06:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004f0a:	4b16      	ldr	r3, [pc, #88]	; (90004f64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004f0c:	681b      	ldr	r3, [r3, #0]
90004f0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004f12:	4a15      	ldr	r2, [pc, #84]	; (90004f68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004f14:	6803      	ldr	r3, [r0, #0]
90004f16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004f18:	4293      	cmp	r3, r2
90004f1a:	d107      	bne.n	90004f2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004f1c:	88c0      	ldrh	r0, [r0, #6]
90004f1e:	4b13      	ldr	r3, [pc, #76]	; (90004f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004f20:	1a31      	subs	r1, r6, r0
90004f22:	429d      	cmp	r5, r3
90004f24:	b209      	sxth	r1, r1
90004f26:	d107      	bne.n	90004f38 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004f28:	80e1      	strh	r1, [r4, #6]
    }
90004f2a:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f2c:	4798      	blx	r3
90004f2e:	4b0f      	ldr	r3, [pc, #60]	; (90004f6c <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004f30:	1a31      	subs	r1, r6, r0
90004f32:	429d      	cmp	r5, r3
90004f34:	b209      	sxth	r1, r1
90004f36:	d0f7      	beq.n	90004f28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004f38:	4620      	mov	r0, r4
90004f3a:	462b      	mov	r3, r5
    }
90004f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f40:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f42:	4b0b      	ldr	r3, [pc, #44]	; (90004f70 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004f44:	216c      	movs	r1, #108	; 0x6c
90004f46:	4a0b      	ldr	r2, [pc, #44]	; (90004f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004f48:	480b      	ldr	r0, [pc, #44]	; (90004f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004f4a:	f024 fa39 	bl	900293c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f4e:	4b0b      	ldr	r3, [pc, #44]	; (90004f7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004f50:	216d      	movs	r1, #109	; 0x6d
90004f52:	4a08      	ldr	r2, [pc, #32]	; (90004f74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004f54:	4808      	ldr	r0, [pc, #32]	; (90004f78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004f56:	f024 fa33 	bl	900293c0 <__assert_func>
90004f5a:	bf00      	nop
90004f5c:	24039b24 	.word	0x24039b24
90004f60:	24039b28 	.word	0x24039b28
90004f64:	24039b2c 	.word	0x24039b2c
90004f68:	900035c1 	.word	0x900035c1
90004f6c:	90002291 	.word	0x90002291
90004f70:	9002caf0 	.word	0x9002caf0
90004f74:	9002cb34 	.word	0x9002cb34
90004f78:	9002cb70 	.word	0x9002cb70
90004f7c:	9002cbb8 	.word	0x9002cbb8

90004f80 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004f80:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004f82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004f86:	4f25      	ldr	r7, [pc, #148]	; (9000501c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004f88:	4605      	mov	r5, r0
        setX(x);
90004f8a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004f8c:	4690      	mov	r8, r2
90004f8e:	42be      	cmp	r6, r7
90004f90:	d125      	bne.n	90004fde <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004f92:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004f94:	80a9      	strh	r1, [r5, #4]
90004f96:	4922      	ldr	r1, [pc, #136]	; (90005020 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004f98:	428c      	cmp	r4, r1
90004f9a:	d126      	bne.n	90004fea <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f9c:	4921      	ldr	r1, [pc, #132]	; (90005024 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004f9e:	fa1f f888 	uxth.w	r8, r8
90004fa2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004fa4:	680b      	ldr	r3, [r1, #0]
90004fa6:	2b00      	cmp	r3, #0
90004fa8:	d032      	beq.n	90005010 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004faa:	491f      	ldr	r1, [pc, #124]	; (90005028 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004fac:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004fae:	8809      	ldrh	r1, [r1, #0]
90004fb0:	4291      	cmp	r1, r2
90004fb2:	d927      	bls.n	90005004 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004fb4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004fb8:	4b1c      	ldr	r3, [pc, #112]	; (9000502c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004fba:	681b      	ldr	r3, [r3, #0]
90004fbc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004fc0:	4a1b      	ldr	r2, [pc, #108]	; (90005030 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004fc2:	6803      	ldr	r3, [r0, #0]
90004fc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004fc6:	4293      	cmp	r3, r2
90004fc8:	d11a      	bne.n	90005000 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004fca:	88c0      	ldrh	r0, [r0, #6]
90004fcc:	4b19      	ldr	r3, [pc, #100]	; (90005034 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004fce:	eba8 0200 	sub.w	r2, r8, r0
90004fd2:	429e      	cmp	r6, r3
90004fd4:	b211      	sxth	r1, r2
90004fd6:	d10e      	bne.n	90004ff6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004fd8:	80e9      	strh	r1, [r5, #6]
    }
90004fda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004fde:	47b0      	blx	r6
        setBaselineY(baselineY);
90004fe0:	682b      	ldr	r3, [r5, #0]
90004fe2:	490f      	ldr	r1, [pc, #60]	; (90005020 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004fe4:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004fe6:	428c      	cmp	r4, r1
90004fe8:	d0d8      	beq.n	90004f9c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004fea:	4641      	mov	r1, r8
90004fec:	4628      	mov	r0, r5
90004fee:	4623      	mov	r3, r4
    }
90004ff0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004ff4:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ff6:	4628      	mov	r0, r5
90004ff8:	4633      	mov	r3, r6
    }
90004ffa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004ffe:	4718      	bx	r3
90005000:	4798      	blx	r3
90005002:	e7e3      	b.n	90004fcc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005004:	4b0c      	ldr	r3, [pc, #48]	; (90005038 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90005006:	216d      	movs	r1, #109	; 0x6d
90005008:	4a0c      	ldr	r2, [pc, #48]	; (9000503c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000500a:	480d      	ldr	r0, [pc, #52]	; (90005040 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
9000500c:	f024 f9d8 	bl	900293c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005010:	4b0c      	ldr	r3, [pc, #48]	; (90005044 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90005012:	216c      	movs	r1, #108	; 0x6c
90005014:	4a09      	ldr	r2, [pc, #36]	; (9000503c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90005016:	480a      	ldr	r0, [pc, #40]	; (90005040 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90005018:	f024 f9d2 	bl	900293c0 <__assert_func>
9000501c:	9000228d 	.word	0x9000228d
90005020:	90004eed 	.word	0x90004eed
90005024:	24039b24 	.word	0x24039b24
90005028:	24039b28 	.word	0x24039b28
9000502c:	24039b2c 	.word	0x24039b2c
90005030:	900035c1 	.word	0x900035c1
90005034:	90002291 	.word	0x90002291
90005038:	9002cbb8 	.word	0x9002cbb8
9000503c:	9002cb34 	.word	0x9002cb34
90005040:	9002cb70 	.word	0x9002cb70
90005044:	9002caf0 	.word	0x9002caf0

90005048 <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90005048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000504c:	ed2d 8b04 	vpush	{d8-d9}
90005050:	b093      	sub	sp, #76	; 0x4c
90005052:	4604      	mov	r4, r0
90005054:	f014 fc80 	bl	90019958 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005058:	4be0      	ldr	r3, [pc, #896]	; (900053dc <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
9000505a:	2500      	movs	r5, #0
          touchable(false),
9000505c:	f44f 7a80 	mov.w	sl, #256	; 0x100
90005060:	6023      	str	r3, [r4, #0]
        : Widget(), alpha(255), color(0)
90005062:	26ff      	movs	r6, #255	; 0xff
90005064:	4bde      	ldr	r3, [pc, #888]	; (900053e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
90005066:	f104 096c 	add.w	r9, r4, #108	; 0x6c
9000506a:	f104 0798 	add.w	r7, r4, #152	; 0x98
9000506e:	a910      	add	r1, sp, #64	; 0x40
90005070:	6423      	str	r3, [r4, #64]	; 0x40
90005072:	f64f 73ff 	movw	r3, #65535	; 0xffff
90005076:	4648      	mov	r0, r9
90005078:	f8a4 a064 	strh.w	sl, [r4, #100]	; 0x64
9000507c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
90005080:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
90005084:	63e5      	str	r5, [r4, #60]	; 0x3c
90005086:	f04f 38ff 	mov.w	r8, #4294967295
        : x(0), y(0), width(0), height(0)
9000508a:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
9000508c:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
9000508e:	66a5      	str	r5, [r4, #104]	; 0x68
90005090:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90005094:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90005098:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
9000509c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900050a0:	f00f faf8 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900050a4:	f504 7288 	add.w	r2, r4, #272	; 0x110
900050a8:	4638      	mov	r0, r7
900050aa:	9203      	str	r2, [sp, #12]
900050ac:	f010 fb06 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900050b0:	f504 71a6 	add.w	r1, r4, #332	; 0x14c
900050b4:	4658      	mov	r0, fp
900050b6:	9105      	str	r1, [sp, #20]
900050b8:	f010 fb00 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900050bc:	eddd 8a03 	vldr	s17, [sp, #12]
900050c0:	f504 72da 	add.w	r2, r4, #436	; 0x1b4
900050c4:	ee18 0a90 	vmov	r0, s17
900050c8:	9204      	str	r2, [sp, #16]
900050ca:	f010 faf7 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900050ce:	ed9d 8a05 	vldr	s16, [sp, #20]
900050d2:	ee18 0a10 	vmov	r0, s16
900050d6:	f010 faf1 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900050da:	4bc1      	ldr	r3, [pc, #772]	; (900053e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
900050dc:	ed9d 9a04 	vldr	s18, [sp, #16]
          touchable(false),
900050e0:	f8a4 a1ac 	strh.w	sl, [r4, #428]	; 0x1ac
900050e4:	f884 61ae 	strb.w	r6, [r4, #430]	; 0x1ae
900050e8:	ee19 0a10 	vmov	r0, s18
          cachedAbsX(0),
900050ec:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
        : color(col)
900050f0:	f8c4 51b0 	str.w	r5, [r4, #432]	; 0x1b0
        : x(0), y(0), width(0), height(0)
900050f4:	e9c4 3562 	strd	r3, r5, [r4, #392]	; 0x188
900050f8:	f504 7336 	add.w	r3, r4, #728	; 0x2d8
900050fc:	e9c4 5564 	strd	r5, r5, [r4, #400]	; 0x190
          parent(0),
90005100:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
          nextDrawChainElement(0),
90005104:	e9c4 5568 	strd	r5, r5, [r4, #416]	; 0x1a0
90005108:	9305      	str	r3, [sp, #20]
9000510a:	f010 fc35 	bl	90015978 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
9000510e:	4ab5      	ldr	r2, [pc, #724]	; (900053e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
90005110:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005114:	49b4      	ldr	r1, [pc, #720]	; (900053e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
        : TextAreaWithWildcardBase(), wc1(0)
90005116:	48b5      	ldr	r0, [pc, #724]	; (900053ec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
90005118:	f8c4 11fc 	str.w	r1, [r4, #508]	; 0x1fc
9000511c:	f8c4 2224 	str.w	r2, [r4, #548]	; 0x224
90005120:	f8a4 3228 	strh.w	r3, [r4, #552]	; 0x228
90005124:	f8c4 226c 	str.w	r2, [r4, #620]	; 0x26c
          touchable(false),
90005128:	f8a4 a220 	strh.w	sl, [r4, #544]	; 0x220
9000512c:	f8c4 6232 	str.w	r6, [r4, #562]	; 0x232
90005130:	f8a4 a268 	strh.w	sl, [r4, #616]	; 0x268
90005134:	f8a4 8270 	strh.w	r8, [r4, #624]	; 0x270
90005138:	f8c4 627a 	str.w	r6, [r4, #634]	; 0x27a
        : color(col)
9000513c:	f8c4 522c 	str.w	r5, [r4, #556]	; 0x22c
90005140:	f8a4 5230 	strh.w	r5, [r4, #560]	; 0x230
              text(0)
90005144:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
90005148:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000514c:	f8a4 5278 	strh.w	r5, [r4, #632]	; 0x278
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005150:	e9c4 588e 	strd	r5, r8, [r4, #568]	; 0x238
        : x(0), y(0), width(0), height(0)
90005154:	e9c4 5580 	strd	r5, r5, [r4, #512]	; 0x200
90005158:	e9c4 5582 	strd	r5, r5, [r4, #520]	; 0x208
          nextSibling(0),
9000515c:	e9c4 5584 	strd	r5, r5, [r4, #528]	; 0x210
          cachedAbsX(0),
90005160:	e9c4 5586 	strd	r5, r5, [r4, #536]	; 0x218
90005164:	e9c4 5592 	strd	r5, r5, [r4, #584]	; 0x248
90005168:	e9c4 5594 	strd	r5, r5, [r4, #592]	; 0x250
          nextSibling(0),
9000516c:	e9c4 5596 	strd	r5, r5, [r4, #600]	; 0x258
          cachedAbsX(0),
90005170:	e9c4 5598 	strd	r5, r5, [r4, #608]	; 0x260
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005174:	e9c4 58a0 	strd	r5, r8, [r4, #640]	; 0x280
90005178:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
          touchable(false),
9000517c:	f8a4 a2b4 	strh.w	sl, [r4, #692]	; 0x2b4
90005180:	f8c4 1290 	str.w	r1, [r4, #656]	; 0x290
90005184:	f8c4 22b8 	str.w	r2, [r4, #696]	; 0x2b8
90005188:	f8a4 32bc 	strh.w	r3, [r4, #700]	; 0x2bc
9000518c:	f8c4 62c6 	str.w	r6, [r4, #710]	; 0x2c6
90005190:	9805      	ldr	r0, [sp, #20]
              text(0)
90005192:	f8c4 5288 	str.w	r5, [r4, #648]	; 0x288
90005196:	f8c4 528c 	str.w	r5, [r4, #652]	; 0x28c
        : color(col)
9000519a:	f8c4 52c0 	str.w	r5, [r4, #704]	; 0x2c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000519e:	f8a4 52c4 	strh.w	r5, [r4, #708]	; 0x2c4
              text(0)
900051a2:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900051a6:	e9c4 58b3 	strd	r5, r8, [r4, #716]	; 0x2cc
        : x(0), y(0), width(0), height(0)
900051aa:	e9c4 55a5 	strd	r5, r5, [r4, #660]	; 0x294
900051ae:	e9c4 55a7 	strd	r5, r5, [r4, #668]	; 0x29c
          nextSibling(0),
900051b2:	e9c4 55a9 	strd	r5, r5, [r4, #676]	; 0x2a4
          cachedAbsX(0),
900051b6:	e9c4 55ab 	strd	r5, r5, [r4, #684]	; 0x2ac
900051ba:	f010 fa7f 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900051be:	f64f 73ff 	movw	r3, #65535	; 0xffff
900051c2:	4a88      	ldr	r2, [pc, #544]	; (900053e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900051c4:	4988      	ldr	r1, [pc, #544]	; (900053e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
900051c6:	f8a4 3340 	strh.w	r3, [r4, #832]	; 0x340
900051ca:	f8a4 3388 	strh.w	r3, [r4, #904]	; 0x388
900051ce:	4b87      	ldr	r3, [pc, #540]	; (900053ec <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
900051d0:	f8c4 233c 	str.w	r2, [r4, #828]	; 0x33c
900051d4:	f8c4 2384 	str.w	r2, [r4, #900]	; 0x384
          touchable(false),
900051d8:	f8a4 a338 	strh.w	sl, [r4, #824]	; 0x338
900051dc:	f8a4 a380 	strh.w	sl, [r4, #896]	; 0x380
900051e0:	f04f 0a01 	mov.w	sl, #1
900051e4:	f8c4 634a 	str.w	r6, [r4, #842]	; 0x34a
900051e8:	f8c4 6392 	str.w	r6, [r4, #914]	; 0x392
900051ec:	1d26      	adds	r6, r4, #4
          cachedAbsX(0),
900051ee:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
        : color(col)
900051f2:	f8c4 5344 	str.w	r5, [r4, #836]	; 0x344
900051f6:	4630      	mov	r0, r6
900051f8:	f8a4 5348 	strh.w	r5, [r4, #840]	; 0x348
              text(0)
900051fc:	f8c4 5358 	str.w	r5, [r4, #856]	; 0x358
90005200:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005204:	f8a4 5390 	strh.w	r5, [r4, #912]	; 0x390
        : x(0), y(0), width(0), height(0)
90005208:	e9c4 15c5 	strd	r1, r5, [r4, #788]	; 0x314
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000520c:	e9c4 58d4 	strd	r5, r8, [r4, #848]	; 0x350
        : x(0), y(0), width(0), height(0)
90005210:	e9c4 55c7 	strd	r5, r5, [r4, #796]	; 0x31c
          parent(0),
90005214:	e9c4 55c9 	strd	r5, r5, [r4, #804]	; 0x324
          nextDrawChainElement(0),
90005218:	e9c4 55cb 	strd	r5, r5, [r4, #812]	; 0x32c
9000521c:	e9c4 55d8 	strd	r5, r5, [r4, #864]	; 0x360
90005220:	e9c4 55da 	strd	r5, r5, [r4, #872]	; 0x368
          nextSibling(0),
90005224:	e9c4 55dc 	strd	r5, r5, [r4, #880]	; 0x370
          cachedAbsX(0),
90005228:	e9c4 55de 	strd	r5, r5, [r4, #888]	; 0x378
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000522c:	e9c4 58e6 	strd	r5, r8, [r4, #920]	; 0x398
90005230:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
90005234:	f104 0140 	add.w	r1, r4, #64	; 0x40
        : pobject(pObject), pmemfun(pmemfun_1)
90005238:	4b6d      	ldr	r3, [pc, #436]	; (900053f0 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
        rect.x = x;
9000523a:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90005410 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>
9000523e:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
90005242:	4b6c      	ldr	r3, [pc, #432]	; (900053f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90005244:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90005248:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        color = newColor;
9000524c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90005250:	f8c4 43fc 	str.w	r4, [r4, #1020]	; 0x3fc
90005254:	66a3      	str	r3, [r4, #104]	; 0x68
90005256:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
9000525a:	6465      	str	r5, [r4, #68]	; 0x44
9000525c:	e9c4 55e8 	strd	r5, r5, [r4, #928]	; 0x3a0
90005260:	f00d faea 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005264:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005266:	4648      	mov	r0, r9
90005268:	a910      	add	r1, sp, #64	; 0x40
9000526a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
9000526e:	f010 fa4c 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005272:	4648      	mov	r0, r9
90005274:	4629      	mov	r1, r5
90005276:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
9000527a:	f00f f9c6 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000527e:	4649      	mov	r1, r9
90005280:	4630      	mov	r0, r6
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90005282:	f06f 1906 	mvn.w	r9, #393222	; 0x60006
90005286:	f00d fad7 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
9000528a:	ab10      	add	r3, sp, #64	; 0x40
9000528c:	aa0e      	add	r2, sp, #56	; 0x38
9000528e:	4638      	mov	r0, r7
90005290:	9300      	str	r3, [sp, #0]
90005292:	a90d      	add	r1, sp, #52	; 0x34
90005294:	4b58      	ldr	r3, [pc, #352]	; (900053f8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005296:	f04f 085a 	mov.w	r8, #90	; 0x5a
9000529a:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
9000529e:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
    btn_left.setAction(buttonCallback);
900052a2:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
900052a6:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
900052aa:	9303      	str	r3, [sp, #12]
900052ac:	2308      	movs	r3, #8
900052ae:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900052b2:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
900052b6:	ab0f      	add	r3, sp, #60	; 0x3c
900052b8:	f010 f96a 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900052bc:	4639      	mov	r1, r7
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900052be:	9f03      	ldr	r7, [sp, #12]
900052c0:	4630      	mov	r0, r6
900052c2:	f8c4 90d0 	str.w	r9, [r4, #208]	; 0xd0
900052c6:	f884 80ca 	strb.w	r8, [r4, #202]	; 0xca
900052ca:	f8c4 70c0 	str.w	r7, [r4, #192]	; 0xc0
900052ce:	f00d fab3 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
900052d2:	ab10      	add	r3, sp, #64	; 0x40
900052d4:	aa0e      	add	r2, sp, #56	; 0x38
900052d6:	a90d      	add	r1, sp, #52	; 0x34
900052d8:	9300      	str	r3, [sp, #0]
900052da:	4658      	mov	r0, fp
900052dc:	4b47      	ldr	r3, [pc, #284]	; (900053fc <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
900052de:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
900052e2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
900052e6:	230a      	movs	r3, #10
900052e8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
900052ec:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900052f0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
900052f4:	ab0f      	add	r3, sp, #60	; 0x3c
900052f6:	f010 f94b 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900052fa:	4659      	mov	r1, fp
900052fc:	4630      	mov	r0, r6
900052fe:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
90005302:	f884 8106 	strb.w	r8, [r4, #262]	; 0x106
90005306:	f8c4 70fc 	str.w	r7, [r4, #252]	; 0xfc
9000530a:	9703      	str	r7, [sp, #12]
9000530c:	f00d fa94 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90005310:	a910      	add	r1, sp, #64	; 0x40
90005312:	4b3b      	ldr	r3, [pc, #236]	; (90005400 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90005314:	2707      	movs	r7, #7
90005316:	aa0e      	add	r2, sp, #56	; 0x38
90005318:	9100      	str	r1, [sp, #0]
9000531a:	ee18 0a90 	vmov	r0, s17
9000531e:	a90d      	add	r1, sp, #52	; 0x34
90005320:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
90005324:	ab0f      	add	r3, sp, #60	; 0x3c
90005326:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
9000532a:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
9000532e:	f8ad 703c 	strh.w	r7, [sp, #60]	; 0x3c
90005332:	f8ad 7040 	strh.w	r7, [sp, #64]	; 0x40
90005336:	f010 f92b 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000533a:	9b03      	ldr	r3, [sp, #12]
9000533c:	ee18 1a90 	vmov	r1, s17
90005340:	4630      	mov	r0, r6
90005342:	f8c4 9148 	str.w	r9, [r4, #328]	; 0x148
90005346:	f884 8142 	strb.w	r8, [r4, #322]	; 0x142
9000534a:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
9000534e:	f00d fa73 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005352:	aa10      	add	r2, sp, #64	; 0x40
90005354:	4b2b      	ldr	r3, [pc, #172]	; (90005404 <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90005356:	f10d 0c3c 	add.w	ip, sp, #60	; 0x3c
9000535a:	9200      	str	r2, [sp, #0]
9000535c:	a90d      	add	r1, sp, #52	; 0x34
9000535e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
90005362:	2309      	movs	r3, #9
90005364:	aa0e      	add	r2, sp, #56	; 0x38
90005366:	ee18 0a10 	vmov	r0, s16
9000536a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
9000536e:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90005372:	4663      	mov	r3, ip
90005374:	f8ad a038 	strh.w	sl, [sp, #56]	; 0x38
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005378:	f504 7afe 	add.w	sl, r4, #508	; 0x1fc
9000537c:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005380:	f010 f906 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005384:	9b03      	ldr	r3, [sp, #12]
90005386:	ee18 1a10 	vmov	r1, s16
9000538a:	4630      	mov	r0, r6
9000538c:	f8c4 9184 	str.w	r9, [r4, #388]	; 0x184
90005390:	f884 817e 	strb.w	r8, [r4, #382]	; 0x17e
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005394:	f504 7924 	add.w	r9, r4, #656	; 0x290
90005398:	f8c4 3174 	str.w	r3, [r4, #372]	; 0x174
9000539c:	f504 7845 	add.w	r8, r4, #788	; 0x314
900053a0:	f00d fa4a 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053a4:	f8df c06c 	ldr.w	ip, [pc, #108]	; 90005414 <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>
900053a8:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
900053ac:	f504 71c4 	add.w	r1, r4, #392	; 0x188
900053b0:	4630      	mov	r0, r6
900053b2:	e9c4 c363 	strd	ip, r3, [r4, #396]	; 0x18c
900053b6:	4b14      	ldr	r3, [pc, #80]	; (90005408 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
900053b8:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
900053bc:	f00d fa3c 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053c0:	4b12      	ldr	r3, [pc, #72]	; (9000540c <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
900053c2:	aa10      	add	r2, sp, #64	; 0x40
900053c4:	a90f      	add	r1, sp, #60	; 0x3c
900053c6:	f8c4 31b8 	str.w	r3, [r4, #440]	; 0x1b8
900053ca:	2302      	movs	r3, #2
900053cc:	ee19 0a10 	vmov	r0, s18
900053d0:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
900053d4:	2303      	movs	r3, #3
900053d6:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
900053da:	e01d      	b.n	90005418 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
900053dc:	9002cce4 	.word	0x9002cce4
900053e0:	9002d88c 	.word	0x9002d88c
900053e4:	9002bfac 	.word	0x9002bfac
900053e8:	9002d7fc 	.word	0x9002d7fc
900053ec:	9002cc3c 	.word	0x9002cc3c
900053f0:	9002cccc 	.word	0x9002cccc
900053f4:	90004e45 	.word	0x90004e45
900053f8:	00ac016a 	.word	0x00ac016a
900053fc:	0089018d 	.word	0x0089018d
90005400:	00d0018e 	.word	0x00d0018e
90005404:	00ac01b0 	.word	0x00ac01b0
90005408:	ffff0000 	.word	0xffff0000
9000540c:	006f0078 	.word	0x006f0078
90005410:	011001e0 	.word	0x011001e0
90005414:	001e0014 	.word	0x001e0014
90005418:	f00f feeb 	bl	900151f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
9000541c:	4bc9      	ldr	r3, [pc, #804]	; (90005744 <_ZN25screen_snake_gameViewBaseC1Ev+0x6fc>)
class TypedText
9000541e:	f8a4 71ec 	strh.w	r7, [r4, #492]	; 0x1ec
90005422:	881b      	ldrh	r3, [r3, #0]
90005424:	42bb      	cmp	r3, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005426:	4bc8      	ldr	r3, [pc, #800]	; (90005748 <_ZN25screen_snake_gameViewBaseC1Ev+0x700>)
90005428:	9306      	str	r3, [sp, #24]
9000542a:	d923      	bls.n	90005474 <_ZN25screen_snake_gameViewBaseC1Ev+0x42c>
9000542c:	681b      	ldr	r3, [r3, #0]
9000542e:	2b00      	cmp	r3, #0
90005430:	f000 8182 	beq.w	90005738 <_ZN25screen_snake_gameViewBaseC1Ev+0x6f0>
        return fonts[typedTexts[typedTextId].fontIdx];
90005434:	7b9a      	ldrb	r2, [r3, #14]
        return texts->getText(typedTextId);
90005436:	4639      	mov	r1, r7
        return fonts[typedTexts[typedTextId].fontIdx];
90005438:	4bc4      	ldr	r3, [pc, #784]	; (9000574c <_ZN25screen_snake_gameViewBaseC1Ev+0x704>)
9000543a:	681b      	ldr	r3, [r3, #0]
9000543c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005440:	4bc3      	ldr	r3, [pc, #780]	; (90005750 <_ZN25screen_snake_gameViewBaseC1Ev+0x708>)
90005442:	6818      	ldr	r0, [r3, #0]
90005444:	f7ff f900 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005448:	683a      	ldr	r2, [r7, #0]
9000544a:	4601      	mov	r1, r0
9000544c:	48c1      	ldr	r0, [pc, #772]	; (90005754 <_ZN25screen_snake_gameViewBaseC1Ev+0x70c>)
9000544e:	6b93      	ldr	r3, [r2, #56]	; 0x38
90005450:	4283      	cmp	r3, r0
90005452:	f040 816a 	bne.w	9000572a <_ZN25screen_snake_gameViewBaseC1Ev+0x6e2>
        return fontHeight;
90005456:	88bd      	ldrh	r5, [r7, #4]
90005458:	6c93      	ldr	r3, [r2, #72]	; 0x48
9000545a:	4638      	mov	r0, r7
9000545c:	9107      	str	r1, [sp, #28]
9000545e:	4798      	blx	r3
90005460:	fb15 f500 	smulbb	r5, r5, r0
90005464:	683b      	ldr	r3, [r7, #0]
90005466:	4638      	mov	r0, r7
90005468:	b2ad      	uxth	r5, r5
9000546a:	9907      	ldr	r1, [sp, #28]
9000546c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000546e:	4798      	blx	r3
90005470:	4405      	add	r5, r0
90005472:	b22d      	sxth	r5, r5
90005474:	4630      	mov	r0, r6
90005476:	f8a4 51fa 	strh.w	r5, [r4, #506]	; 0x1fa
        linespace = space;
9000547a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
9000547c:	ad08      	add	r5, sp, #32
    lbl_high_score.setXY(178, 126);
9000547e:	f504 7b11 	add.w	fp, r4, #580	; 0x244
90005482:	e9dd 3103 	ldrd	r3, r1, [sp, #12]
90005486:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        color = col;
9000548a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
9000548e:	e9c4 337c 	strd	r3, r3, [r4, #496]	; 0x1f0
90005492:	f00d f9d1 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005496:	4bb0      	ldr	r3, [pc, #704]	; (90005758 <_ZN25screen_snake_gameViewBaseC1Ev+0x710>)
90005498:	4651      	mov	r1, sl
9000549a:	4628      	mov	r0, r5
9000549c:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
        color = newColor;
900054a0:	4bae      	ldr	r3, [pc, #696]	; (9000575c <_ZN25screen_snake_gameViewBaseC1Ev+0x714>)
        linespace = space;
900054a2:	f8a4 7230 	strh.w	r7, [r4, #560]	; 0x230
        color = newColor;
900054a6:	f8c4 322c 	str.w	r3, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
900054aa:	f00f fb9d 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
900054ae:	4bac      	ldr	r3, [pc, #688]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
900054b0:	f10a 0c3c 	add.w	ip, sl, #60	; 0x3c
900054b4:	9310      	str	r3, [sp, #64]	; 0x40
900054b6:	2305      	movs	r3, #5
900054b8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900054bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900054c0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HGL4));
900054c4:	a910      	add	r1, sp, #64	; 0x40
900054c6:	4650      	mov	r0, sl
900054c8:	f00f fe36 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900054cc:	4651      	mov	r1, sl
900054ce:	4630      	mov	r0, r6
        visible = vis;
900054d0:	f884 7221 	strb.w	r7, [r4, #545]	; 0x221
900054d4:	f00d f9b0 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
900054d8:	f04f 33ff 	mov.w	r3, #4294967295
        setX(x);
900054dc:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
900054e0:	f8c4 3274 	str.w	r3, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
900054e4:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
900054e8:	4b9e      	ldr	r3, [pc, #632]	; (90005764 <_ZN25screen_snake_gameViewBaseC1Ev+0x71c>)
        rect.x = x;
900054ea:	499f      	ldr	r1, [pc, #636]	; (90005768 <_ZN25screen_snake_gameViewBaseC1Ev+0x720>)
900054ec:	429a      	cmp	r2, r3
        linespace = space;
900054ee:	f8a4 7278 	strh.w	r7, [r4, #632]	; 0x278
900054f2:	f8c4 1248 	str.w	r1, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
900054f6:	f040 8104 	bne.w	90005702 <_ZN25screen_snake_gameViewBaseC1Ev+0x6ba>
900054fa:	f04f 33ff 	mov.w	r3, #4294967295
900054fe:	f8c4 7288 	str.w	r7, [r4, #648]	; 0x288
90005502:	e9c4 73a0 	strd	r7, r3, [r4, #640]	; 0x280
    lbl_high_scoreBuffer[0] = 0;
90005506:	2700      	movs	r7, #0
    lbl_high_score.setWildcard(lbl_high_scoreBuffer);
90005508:	f504 726a 	add.w	r2, r4, #936	; 0x3a8
    lbl_high_score.resizeToCurrentText();
9000550c:	4658      	mov	r0, fp
    lbl_score_val.setPosition(426, 0, 54, 24);
9000550e:	f504 7a57 	add.w	sl, r4, #860	; 0x35c
        wc1 = value;
90005512:	f8c4 228c 	str.w	r2, [r4, #652]	; 0x28c
    lbl_high_scoreBuffer[0] = 0;
90005516:	f8a4 73a8 	strh.w	r7, [r4, #936]	; 0x3a8
    lbl_high_score.resizeToCurrentText();
9000551a:	f00f fded 	bl	900150f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9000551e:	2204      	movs	r2, #4
90005520:	4b8f      	ldr	r3, [pc, #572]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
    lbl_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A6NY));
90005522:	a910      	add	r1, sp, #64	; 0x40
90005524:	4658      	mov	r0, fp
90005526:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
9000552a:	9310      	str	r3, [sp, #64]	; 0x40
9000552c:	f00f fe04 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005530:	4659      	mov	r1, fp
90005532:	4630      	mov	r0, r6
        visible = vis;
90005534:	f884 7269 	strb.w	r7, [r4, #617]	; 0x269
90005538:	f00d f97e 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000553c:	4b8b      	ldr	r3, [pc, #556]	; (9000576c <_ZN25screen_snake_gameViewBaseC1Ev+0x724>)
9000553e:	4649      	mov	r1, r9
90005540:	4628      	mov	r0, r5
90005542:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        color = newColor;
90005546:	4b8a      	ldr	r3, [pc, #552]	; (90005770 <_ZN25screen_snake_gameViewBaseC1Ev+0x728>)
        linespace = space;
90005548:	f8a4 72c4 	strh.w	r7, [r4, #708]	; 0x2c4
        color = newColor;
9000554c:	f8c4 32c0 	str.w	r3, [r4, #704]	; 0x2c0
        boundingArea = calculateBoundingArea();
90005550:	f00f fb4a 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005554:	4b82      	ldr	r3, [pc, #520]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
90005556:	2203      	movs	r2, #3
90005558:	9310      	str	r3, [sp, #64]	; 0x40
9000555a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
9000555e:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90005562:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005566:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_new_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3L2));
9000556a:	4648      	mov	r0, r9
9000556c:	a910      	add	r1, sp, #64	; 0x40
9000556e:	f00f fde3 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005572:	4649      	mov	r1, r9
90005574:	4630      	mov	r0, r6
        visible = vis;
90005576:	f884 72b5 	strb.w	r7, [r4, #693]	; 0x2b5
9000557a:	f00d f95d 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
9000557e:	a810      	add	r0, sp, #64	; 0x40
90005580:	f8dd 9014 	ldr.w	r9, [sp, #20]
90005584:	aa0f      	add	r2, sp, #60	; 0x3c
90005586:	9000      	str	r0, [sp, #0]
        rect.x = x;
90005588:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
9000558c:	4613      	mov	r3, r2
9000558e:	a90d      	add	r1, sp, #52	; 0x34
90005590:	f8c4 02dc 	str.w	r0, [r4, #732]	; 0x2dc
90005594:	200b      	movs	r0, #11
90005596:	aa0e      	add	r2, sp, #56	; 0x38
90005598:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
9000559c:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
900055a0:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
900055a4:	2001      	movs	r0, #1
900055a6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
900055aa:	4648      	mov	r0, r9
900055ac:	f00f fff0 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900055b0:	9a03      	ldr	r2, [sp, #12]
900055b2:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
900055b6:	4649      	mov	r1, r9
900055b8:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
900055bc:	4630      	mov	r0, r6
900055be:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
        visible = vis;
900055c2:	f884 72fd 	strb.w	r7, [r4, #765]	; 0x2fd
900055c6:	f00d f937 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900055ca:	f44f 73b4 	mov.w	r3, #360	; 0x168
900055ce:	4641      	mov	r1, r8
900055d0:	4628      	mov	r0, r5
900055d2:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
        color = newColor;
900055d6:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
900055da:	f8a4 7348 	strh.w	r7, [r4, #840]	; 0x348
        color = newColor;
900055de:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
        boundingArea = calculateBoundingArea();
900055e2:	f00f fb01 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900055e6:	4b5e      	ldr	r3, [pc, #376]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
900055e8:	2202      	movs	r2, #2
900055ea:	9310      	str	r3, [sp, #64]	; 0x40
900055ec:	f108 033c 	add.w	r3, r8, #60	; 0x3c
900055f0:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
900055f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900055f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCGM));
900055fc:	a910      	add	r1, sp, #64	; 0x40
900055fe:	4640      	mov	r0, r8
90005600:	f00f fd9a 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90005604:	235f      	movs	r3, #95	; 0x5f
90005606:	4641      	mov	r1, r8
90005608:	4630      	mov	r0, r6
9000560a:	f884 334a 	strb.w	r3, [r4, #842]	; 0x34a
9000560e:	f00d f913 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005612:	f44f 72d5 	mov.w	r2, #426	; 0x1aa
        setX(x);
90005616:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
        setY(y);
9000561a:	4956      	ldr	r1, [pc, #344]	; (90005774 <_ZN25screen_snake_gameViewBaseC1Ev+0x72c>)
        rect.x = x;
9000561c:	f8c4 2360 	str.w	r2, [r4, #864]	; 0x360
        setWidth(width);
90005620:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90005622:	428a      	cmp	r2, r1
90005624:	d160      	bne.n	900056e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x6a0>
        rect.width = width;
90005626:	2236      	movs	r2, #54	; 0x36
        boundingArea = calculateBoundingArea();
90005628:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000562c:	4651      	mov	r1, sl
9000562e:	4628      	mov	r0, r5
90005630:	f8a4 2364 	strh.w	r2, [r4, #868]	; 0x364
90005634:	4798      	blx	r3
90005636:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000563a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000563e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005642:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
90005646:	494c      	ldr	r1, [pc, #304]	; (90005778 <_ZN25screen_snake_gameViewBaseC1Ev+0x730>)
90005648:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000564a:	428a      	cmp	r2, r1
9000564c:	d155      	bne.n	900056fa <_ZN25screen_snake_gameViewBaseC1Ev+0x6b2>
        rect.height = height;
9000564e:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90005650:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90005654:	4651      	mov	r1, sl
90005656:	4628      	mov	r0, r5
90005658:	f8a4 2366 	strh.w	r2, [r4, #870]	; 0x366
9000565c:	4798      	blx	r3
9000565e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005662:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005666:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
9000566a:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
        color = newColor;
9000566e:	f04f 31ff 	mov.w	r1, #4294967295
90005672:	483c      	ldr	r0, [pc, #240]	; (90005764 <_ZN25screen_snake_gameViewBaseC1Ev+0x71c>)
        boundingArea = calculateBoundingArea();
90005674:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90005678:	2300      	movs	r3, #0
        color = newColor;
9000567a:	f8c4 138c 	str.w	r1, [r4, #908]	; 0x38c
        linespace = space;
9000567e:	4282      	cmp	r2, r0
90005680:	f8a4 3390 	strh.w	r3, [r4, #912]	; 0x390
        boundingArea = calculateBoundingArea();
90005684:	d147      	bne.n	90005716 <_ZN25screen_snake_gameViewBaseC1Ev+0x6ce>
90005686:	f8c4 33a0 	str.w	r3, [r4, #928]	; 0x3a0
9000568a:	e9c4 31e6 	strd	r3, r1, [r4, #920]	; 0x398
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000568e:	9b06      	ldr	r3, [sp, #24]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFN7).getText());
90005690:	f504 7574 	add.w	r5, r4, #976	; 0x3d0
90005694:	681b      	ldr	r3, [r3, #0]
90005696:	2b00      	cmp	r3, #0
90005698:	d078      	beq.n	9000578c <_ZN25screen_snake_gameViewBaseC1Ev+0x744>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000569a:	4b2a      	ldr	r3, [pc, #168]	; (90005744 <_ZN25screen_snake_gameViewBaseC1Ev+0x6fc>)
9000569c:	881b      	ldrh	r3, [r3, #0]
9000569e:	2b00      	cmp	r3, #0
900056a0:	d07a      	beq.n	90005798 <_ZN25screen_snake_gameViewBaseC1Ev+0x750>
        return texts->getText(typedTextId);
900056a2:	4b2b      	ldr	r3, [pc, #172]	; (90005750 <_ZN25screen_snake_gameViewBaseC1Ev+0x708>)
900056a4:	2100      	movs	r1, #0
900056a6:	6818      	ldr	r0, [r3, #0]
900056a8:	f7fe ffce 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
900056ac:	4a33      	ldr	r2, [pc, #204]	; (9000577c <_ZN25screen_snake_gameViewBaseC1Ev+0x734>)
900056ae:	4603      	mov	r3, r0
900056b0:	2114      	movs	r1, #20
900056b2:	4628      	mov	r0, r5
900056b4:	f015 fe08 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900056b8:	4b29      	ldr	r3, [pc, #164]	; (90005760 <_ZN25screen_snake_gameViewBaseC1Ev+0x718>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPI7));
900056ba:	a910      	add	r1, sp, #64	; 0x40
900056bc:	4650      	mov	r0, sl
900056be:	9310      	str	r3, [sp, #64]	; 0x40
900056c0:	2301      	movs	r3, #1
900056c2:	f8c4 53a4 	str.w	r5, [r4, #932]	; 0x3a4
900056c6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900056ca:	f00f fd35 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
900056ce:	235f      	movs	r3, #95	; 0x5f
900056d0:	4630      	mov	r0, r6
900056d2:	4651      	mov	r1, sl
900056d4:	f884 3392 	strb.w	r3, [r4, #914]	; 0x392
900056d8:	f00d f8ae 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900056dc:	4620      	mov	r0, r4
900056de:	b013      	add	sp, #76	; 0x4c
900056e0:	ecbd 8b04 	vpop	{d8-d9}
900056e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setWidth(width);
900056e8:	2136      	movs	r1, #54	; 0x36
900056ea:	4650      	mov	r0, sl
900056ec:	4790      	blx	r2
        setHeight(height);
900056ee:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
900056f2:	4921      	ldr	r1, [pc, #132]	; (90005778 <_ZN25screen_snake_gameViewBaseC1Ev+0x730>)
900056f4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
900056f6:	428a      	cmp	r2, r1
900056f8:	d0a9      	beq.n	9000564e <_ZN25screen_snake_gameViewBaseC1Ev+0x606>
900056fa:	2118      	movs	r1, #24
900056fc:	4650      	mov	r0, sl
900056fe:	4790      	blx	r2
90005700:	e7b3      	b.n	9000566a <_ZN25screen_snake_gameViewBaseC1Ev+0x622>
        boundingArea = calculateBoundingArea();
90005702:	4659      	mov	r1, fp
90005704:	4628      	mov	r0, r5
90005706:	4790      	blx	r2
90005708:	f504 7720 	add.w	r7, r4, #640	; 0x280
9000570c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005710:	e887 0007 	stmia.w	r7, {r0, r1, r2}
90005714:	e6f7      	b.n	90005506 <_ZN25screen_snake_gameViewBaseC1Ev+0x4be>
90005716:	4651      	mov	r1, sl
90005718:	4628      	mov	r0, r5
9000571a:	4790      	blx	r2
9000571c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005720:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005724:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005728:	e7b1      	b.n	9000568e <_ZN25screen_snake_gameViewBaseC1Ev+0x646>
9000572a:	9107      	str	r1, [sp, #28]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000572c:	4638      	mov	r0, r7
9000572e:	4798      	blx	r3
90005730:	683a      	ldr	r2, [r7, #0]
90005732:	4605      	mov	r5, r0
90005734:	9907      	ldr	r1, [sp, #28]
90005736:	e68f      	b.n	90005458 <_ZN25screen_snake_gameViewBaseC1Ev+0x410>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005738:	4b11      	ldr	r3, [pc, #68]	; (90005780 <_ZN25screen_snake_gameViewBaseC1Ev+0x738>)
9000573a:	216c      	movs	r1, #108	; 0x6c
9000573c:	4a11      	ldr	r2, [pc, #68]	; (90005784 <_ZN25screen_snake_gameViewBaseC1Ev+0x73c>)
9000573e:	4812      	ldr	r0, [pc, #72]	; (90005788 <_ZN25screen_snake_gameViewBaseC1Ev+0x740>)
90005740:	f023 fe3e 	bl	900293c0 <__assert_func>
90005744:	24039b28 	.word	0x24039b28
90005748:	24039b24 	.word	0x24039b24
9000574c:	24039b2c 	.word	0x24039b2c
90005750:	24039b30 	.word	0x24039b30
90005754:	900035c5 	.word	0x900035c5
90005758:	00550076 	.word	0x00550076
9000575c:	ffff0000 	.word	0xffff0000
90005760:	9002bfac 	.word	0x9002bfac
90005764:	90004d99 	.word	0x90004d99
90005768:	007e00b2 	.word	0x007e00b2
9000576c:	0096009d 	.word	0x0096009d
90005770:	ff00ff11 	.word	0xff00ff11
90005774:	90004d25 	.word	0x90004d25
90005778:	90004d4d 	.word	0x90004d4d
9000577c:	9002cc30 	.word	0x9002cc30
90005780:	9002caf0 	.word	0x9002caf0
90005784:	9002cb34 	.word	0x9002cb34
90005788:	9002cb70 	.word	0x9002cb70
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000578c:	4b05      	ldr	r3, [pc, #20]	; (900057a4 <_ZN25screen_snake_gameViewBaseC1Ev+0x75c>)
9000578e:	2160      	movs	r1, #96	; 0x60
90005790:	4a05      	ldr	r2, [pc, #20]	; (900057a8 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
90005792:	4806      	ldr	r0, [pc, #24]	; (900057ac <_ZN25screen_snake_gameViewBaseC1Ev+0x764>)
90005794:	f023 fe14 	bl	900293c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005798:	4b05      	ldr	r3, [pc, #20]	; (900057b0 <_ZN25screen_snake_gameViewBaseC1Ev+0x768>)
9000579a:	2161      	movs	r1, #97	; 0x61
9000579c:	4a02      	ldr	r2, [pc, #8]	; (900057a8 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
9000579e:	4803      	ldr	r0, [pc, #12]	; (900057ac <_ZN25screen_snake_gameViewBaseC1Ev+0x764>)
900057a0:	f023 fe0e 	bl	900293c0 <__assert_func>
900057a4:	9002caf0 	.word	0x9002caf0
900057a8:	9002cbf8 	.word	0x9002cbf8
900057ac:	9002cb70 	.word	0x9002cb70
900057b0:	9002cbb8 	.word	0x9002cbb8

900057b4 <_ZN29screen_space_invadersViewBase11fire_bulletEv>:
     * Virtual Action Handlers
     */
    virtual void fire_bullet()
    {
        // Override and implement this function in screen_space_invaders
    }
900057b4:	4770      	bx	lr
900057b6:	bf00      	nop

900057b8 <_ZN29screen_space_invadersViewBase11setupScreenEv>:
}

void screen_space_invadersViewBase::setupScreen()
{

}
900057b8:	4770      	bx	lr
900057ba:	bf00      	nop

900057bc <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900057bc:	4770      	bx	lr
900057be:	bf00      	nop

900057c0 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900057c0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900057c2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900057c4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900057c6:	6844      	ldr	r4, [r0, #4]
900057c8:	f012 0f01 	tst.w	r2, #1
900057cc:	eb04 0062 	add.w	r0, r4, r2, asr #1
900057d0:	d103      	bne.n	900057da <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900057d2:	689b      	ldr	r3, [r3, #8]
    }
900057d4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900057d8:	4718      	bx	r3
900057da:	ea4f 0c62 	mov.w	ip, r2, asr #1
900057de:	689b      	ldr	r3, [r3, #8]
900057e0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900057e4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900057e8:	58d3      	ldr	r3, [r2, r3]
900057ea:	4718      	bx	r3

900057ec <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900057ec:	6843      	ldr	r3, [r0, #4]
900057ee:	b13b      	cbz	r3, 90005800 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900057f0:	6883      	ldr	r3, [r0, #8]
900057f2:	b10b      	cbz	r3, 900057f8 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900057f4:	2001      	movs	r0, #1
    }
900057f6:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900057f8:	68c0      	ldr	r0, [r0, #12]
900057fa:	f000 0001 	and.w	r0, r0, #1
900057fe:	4770      	bx	lr
90005800:	4618      	mov	r0, r3
90005802:	4770      	bx	lr

90005804 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005804:	b510      	push	{r4, lr}
90005806:	4604      	mov	r4, r0
90005808:	2110      	movs	r1, #16
9000580a:	f023 fdab 	bl	90029364 <_ZdlPvj>
9000580e:	4620      	mov	r0, r4
90005810:	bd10      	pop	{r4, pc}
90005812:	bf00      	nop

90005814 <_ZN29screen_space_invadersViewBaseD1Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005814:	4b03      	ldr	r3, [pc, #12]	; (90005824 <_ZN29screen_space_invadersViewBaseD1Ev+0x10>)
90005816:	b510      	push	{r4, lr}
90005818:	4604      	mov	r4, r0
9000581a:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000581c:	f010 ff62 	bl	900166e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005820:	4620      	mov	r0, r4
90005822:	bd10      	pop	{r4, pc}
90005824:	9002ce44 	.word	0x9002ce44

90005828 <_ZN29screen_space_invadersViewBaseD0Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005828:	4b07      	ldr	r3, [pc, #28]	; (90005848 <_ZN29screen_space_invadersViewBaseD0Ev+0x20>)
9000582a:	b500      	push	{lr}
9000582c:	b083      	sub	sp, #12
9000582e:	6003      	str	r3, [r0, #0]
90005830:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005832:	f010 ff57 	bl	900166e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005836:	9801      	ldr	r0, [sp, #4]
90005838:	f641 71b4 	movw	r1, #8116	; 0x1fb4
9000583c:	f023 fd92 	bl	90029364 <_ZdlPvj>
90005840:	9801      	ldr	r0, [sp, #4]
90005842:	b003      	add	sp, #12
90005844:	f85d fb04 	ldr.w	pc, [sp], #4
90005848:	9002ce44 	.word	0x9002ce44

9000584c <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_space_invadersViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_fire)
9000584c:	f500 7388 	add.w	r3, r0, #272	; 0x110
90005850:	4299      	cmp	r1, r3
{
90005852:	b510      	push	{r4, lr}
90005854:	4604      	mov	r4, r0
90005856:	b082      	sub	sp, #8
    if (&src == &btn_fire)
90005858:	d005      	beq.n	90005866 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1a>
        //intr_fire_bullet
        //When btn_fire clicked call virtual function
        //Call fire_bullet
        fire_bullet();
    }
    if (&src == &btn_back)
9000585a:	f504 740a 	add.w	r4, r4, #552	; 0x228
9000585e:	42a1      	cmp	r1, r4
90005860:	d00a      	beq.n	90005878 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90005862:	b002      	add	sp, #8
90005864:	bd10      	pop	{r4, pc}
        fire_bullet();
90005866:	6803      	ldr	r3, [r0, #0]
90005868:	4a07      	ldr	r2, [pc, #28]	; (90005888 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>)
9000586a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000586c:	4293      	cmp	r3, r2
9000586e:	d0f4      	beq.n	9000585a <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90005870:	9101      	str	r1, [sp, #4]
90005872:	4798      	blx	r3
90005874:	9901      	ldr	r1, [sp, #4]
90005876:	e7f0      	b.n	9000585a <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005878:	f012 fc36 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
}
9000587c:	b002      	add	sp, #8
9000587e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90005882:	f7fe bcb9 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90005886:	bf00      	nop
90005888:	900057b5 	.word	0x900057b5

9000588c <_ZN29screen_space_invadersViewBaseC1Ev>:
screen_space_invadersViewBase::screen_space_invadersViewBase() :
9000588c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005890:	ed2d 8b02 	vpush	{d8}
90005894:	b091      	sub	sp, #68	; 0x44
90005896:	4604      	mov	r4, r0
90005898:	f014 f85e 	bl	90019958 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
9000589c:	4a3d      	ldr	r2, [pc, #244]	; (90005994 <_ZN29screen_space_invadersViewBaseC1Ev+0x108>)
9000589e:	f04f 0b00 	mov.w	fp, #0
900058a2:	f104 056c 	add.w	r5, r4, #108	; 0x6c
900058a6:	6022      	str	r2, [r4, #0]
          touchable(false),
900058a8:	f44f 7280 	mov.w	r2, #256	; 0x100
900058ac:	f64f 76ff 	movw	r6, #65535	; 0xffff
900058b0:	f104 0a98 	add.w	sl, r4, #152	; 0x98
900058b4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
900058b8:	a90e      	add	r1, sp, #56	; 0x38
        : Widget(), alpha(255), color(0)
900058ba:	4a37      	ldr	r2, [pc, #220]	; (90005998 <_ZN29screen_space_invadersViewBaseC1Ev+0x10c>)
900058bc:	4628      	mov	r0, r5
900058be:	f8c4 b03c 	str.w	fp, [r4, #60]	; 0x3c
900058c2:	f104 07d4 	add.w	r7, r4, #212	; 0xd4
900058c6:	6422      	str	r2, [r4, #64]	; 0x40
900058c8:	22ff      	movs	r2, #255	; 0xff
        : x(0), y(0), width(0), height(0)
900058ca:	f8c4 b044 	str.w	fp, [r4, #68]	; 0x44
900058ce:	f504 78a6 	add.w	r8, r4, #332	; 0x14c
900058d2:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
900058d6:	f504 79bc 	add.w	r9, r4, #376	; 0x178
          cachedAbsX(0),
900058da:	f8c4 b060 	str.w	fp, [r4, #96]	; 0x60
900058de:	ee08 7a10 	vmov	s16, r7
        : color(col)
900058e2:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
900058e6:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
        : x(0), y(0), width(0), height(0)
900058ea:	e9c4 bb12 	strd	fp, fp, [r4, #72]	; 0x48
          parent(0),
900058ee:	e9c4 bb14 	strd	fp, fp, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900058f2:	e9c4 bb16 	strd	fp, fp, [r4, #88]	; 0x58
900058f6:	f00e fecd 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900058fa:	4650      	mov	r0, sl
900058fc:	f00f fede 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005900:	f504 7388 	add.w	r3, r4, #272	; 0x110
90005904:	4638      	mov	r0, r7
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005906:	4f25      	ldr	r7, [pc, #148]	; (9000599c <_ZN29screen_space_invadersViewBaseC1Ev+0x110>)
90005908:	9303      	str	r3, [sp, #12]
9000590a:	f00f fed7 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
9000590e:	9803      	ldr	r0, [sp, #12]
90005910:	f00f fed4 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005914:	a90e      	add	r1, sp, #56	; 0x38
90005916:	4640      	mov	r0, r8
90005918:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
9000591c:	f00e feba 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005920:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
90005924:	f504 76d2 	add.w	r6, r4, #420	; 0x1a4
90005928:	a90e      	add	r1, sp, #56	; 0x38
9000592a:	4648      	mov	r0, r9
9000592c:	f00e feb2 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005930:	4630      	mov	r0, r6
90005932:	f00e fbd9 	bl	900140e8 <_ZN8touchgfx4LineC1Ev>
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90005936:	4a1a      	ldr	r2, [pc, #104]	; (900059a0 <_ZN29screen_space_invadersViewBaseC1Ev+0x114>)
90005938:	683b      	ldr	r3, [r7, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000593a:	f504 7105 	add.w	r1, r4, #532	; 0x214
9000593e:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
90005942:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : widgetWidth(0)
90005946:	f8a4 b218 	strh.w	fp, [r4, #536]	; 0x218
9000594a:	9104      	str	r1, [sp, #16]
9000594c:	2a00      	cmp	r2, #0
9000594e:	d031      	beq.n	900059b4 <_ZN29screen_space_invadersViewBaseC1Ev+0x128>
90005950:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005952:	2800      	cmp	r0, #0
90005954:	f000 8288 	beq.w	90005e68 <_ZN29screen_space_invadersViewBaseC1Ev+0x5dc>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90005958:	6803      	ldr	r3, [r0, #0]
9000595a:	4a12      	ldr	r2, [pc, #72]	; (900059a4 <_ZN29screen_space_invadersViewBaseC1Ev+0x118>)
9000595c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
9000595e:	4291      	cmp	r1, r2
90005960:	d035      	beq.n	900059ce <_ZN29screen_space_invadersViewBaseC1Ev+0x142>
90005962:	9205      	str	r2, [sp, #20]
90005964:	4788      	blx	r1
        return auxiliaryLCD;
90005966:	683b      	ldr	r3, [r7, #0]
90005968:	fab0 f780 	clz	r7, r0
9000596c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000596e:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90005970:	b148      	cbz	r0, 90005986 <_ZN29screen_space_invadersViewBaseC1Ev+0xfa>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005972:	6803      	ldr	r3, [r0, #0]
90005974:	9a05      	ldr	r2, [sp, #20]
90005976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005978:	4293      	cmp	r3, r2
9000597a:	d028      	beq.n	900059ce <_ZN29screen_space_invadersViewBaseC1Ev+0x142>
9000597c:	4798      	blx	r3
9000597e:	2800      	cmp	r0, #0
90005980:	bf08      	it	eq
90005982:	f047 0701 	orreq.w	r7, r7, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90005986:	bb17      	cbnz	r7, 900059ce <_ZN29screen_space_invadersViewBaseC1Ev+0x142>
90005988:	4b07      	ldr	r3, [pc, #28]	; (900059a8 <_ZN29screen_space_invadersViewBaseC1Ev+0x11c>)
9000598a:	212c      	movs	r1, #44	; 0x2c
9000598c:	4a07      	ldr	r2, [pc, #28]	; (900059ac <_ZN29screen_space_invadersViewBaseC1Ev+0x120>)
9000598e:	4808      	ldr	r0, [pc, #32]	; (900059b0 <_ZN29screen_space_invadersViewBaseC1Ev+0x124>)
90005990:	f023 fd16 	bl	900293c0 <__assert_func>
90005994:	9002ce44 	.word	0x9002ce44
90005998:	9002d88c 	.word	0x9002d88c
9000599c:	24039acc 	.word	0x24039acc
900059a0:	9002bd44 	.word	0x9002bd44
900059a4:	90002331 	.word	0x90002331
900059a8:	9002cd24 	.word	0x9002cd24
900059ac:	9002cd84 	.word	0x9002cd84
900059b0:	9002cdc0 	.word	0x9002cdc0
        return instance->lcdRef;
900059b4:	6898      	ldr	r0, [r3, #8]
900059b6:	4adf      	ldr	r2, [pc, #892]	; (90005d34 <_ZN29screen_space_invadersViewBaseC1Ev+0x4a8>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900059b8:	6801      	ldr	r1, [r0, #0]
900059ba:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900059bc:	4291      	cmp	r1, r2
900059be:	d1d0      	bne.n	90005962 <_ZN29screen_space_invadersViewBaseC1Ev+0xd6>
        return auxiliaryLCD;
900059c0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900059c2:	b120      	cbz	r0, 900059ce <_ZN29screen_space_invadersViewBaseC1Ev+0x142>
        bool compat = HAL::lcd().framebufferFormat() == format;
900059c4:	6803      	ldr	r3, [r0, #0]
900059c6:	2701      	movs	r7, #1
900059c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900059ca:	4293      	cmp	r3, r2
900059cc:	d1d6      	bne.n	9000597c <_ZN29screen_space_invadersViewBaseC1Ev+0xf0>
900059ce:	4bda      	ldr	r3, [pc, #872]	; (90005d38 <_ZN29screen_space_invadersViewBaseC1Ev+0x4ac>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900059d0:	2700      	movs	r7, #0
900059d2:	f104 0b04 	add.w	fp, r4, #4
900059d6:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
900059da:	3324      	adds	r3, #36	; 0x24
900059dc:	f8c4 7220 	str.w	r7, [r4, #544]	; 0x220
900059e0:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
900059e4:	f504 730a 	add.w	r3, r4, #552	; 0x228
900059e8:	4618      	mov	r0, r3
900059ea:	ee08 3a90 	vmov	s17, r3
900059ee:	f00f fe65 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900059f2:	f04f 33ff 	mov.w	r3, #4294967295
        : typedTextId(id)
900059f6:	f04f 3cff 	mov.w	ip, #4294967295
900059fa:	48d0      	ldr	r0, [pc, #832]	; (90005d3c <_ZN29screen_space_invadersViewBaseC1Ev+0x4b0>)
          touchable(false),
900059fc:	f44f 7180 	mov.w	r1, #256	; 0x100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a00:	4acf      	ldr	r2, [pc, #828]	; (90005d40 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b4>)
90005a02:	f8a4 c2d8 	strh.w	ip, [r4, #728]	; 0x2d8
90005a06:	f8a4 c290 	strh.w	ip, [r4, #656]	; 0x290
90005a0a:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        : color(col)
90005a0e:	f8c4 7294 	str.w	r7, [r4, #660]	; 0x294
90005a12:	f8a4 7298 	strh.w	r7, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a16:	f8c4 72a0 	str.w	r7, [r4, #672]	; 0x2a0
90005a1a:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
        : color(col)
90005a1e:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
90005a22:	f8a4 72e0 	strh.w	r7, [r4, #736]	; 0x2e0
90005a26:	f8a4 1288 	strh.w	r1, [r4, #648]	; 0x288
90005a2a:	f8a4 12d0 	strh.w	r1, [r4, #720]	; 0x2d0
90005a2e:	f8c4 2264 	str.w	r2, [r4, #612]	; 0x264
90005a32:	f8c4 22ac 	str.w	r2, [r4, #684]	; 0x2ac
              text(0)
90005a36:	e9c4 37a9 	strd	r3, r7, [r4, #676]	; 0x2a4
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a3a:	23ff      	movs	r3, #255	; 0xff
        : x(0), y(0), width(0), height(0)
90005a3c:	e9c4 779a 	strd	r7, r7, [r4, #616]	; 0x268
90005a40:	e9c4 779c 	strd	r7, r7, [r4, #624]	; 0x270
          nextSibling(0),
90005a44:	e9c4 779e 	strd	r7, r7, [r4, #632]	; 0x278
          cachedAbsX(0),
90005a48:	e9c4 77a0 	strd	r7, r7, [r4, #640]	; 0x280
90005a4c:	e9c4 77ac 	strd	r7, r7, [r4, #688]	; 0x2b0
90005a50:	e9c4 77ae 	strd	r7, r7, [r4, #696]	; 0x2b8
          nextSibling(0),
90005a54:	e9c4 77b0 	strd	r7, r7, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90005a58:	e9c4 77b2 	strd	r7, r7, [r4, #712]	; 0x2c8
90005a5c:	f8c4 329a 	str.w	r3, [r4, #666]	; 0x29a
90005a60:	f8c4 32e2 	str.w	r3, [r4, #738]	; 0x2e2
90005a64:	f8c4 22f4 	str.w	r2, [r4, #756]	; 0x2f4
90005a68:	f8c4 233c 	str.w	r2, [r4, #828]	; 0x33c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a6c:	f04f 32ff 	mov.w	r2, #4294967295
90005a70:	f8a4 c320 	strh.w	ip, [r4, #800]	; 0x320
          touchable(false),
90005a74:	f8a4 1318 	strh.w	r1, [r4, #792]	; 0x318
90005a78:	f8a4 1360 	strh.w	r1, [r4, #864]	; 0x360
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005a7c:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005a80:	f8c4 332a 	str.w	r3, [r4, #810]	; 0x32a
90005a84:	f8c4 72e8 	str.w	r7, [r4, #744]	; 0x2e8
90005a88:	f8c4 031c 	str.w	r0, [r4, #796]	; 0x31c
        : color(col)
90005a8c:	f8c4 7324 	str.w	r7, [r4, #804]	; 0x324
90005a90:	f8a4 7328 	strh.w	r7, [r4, #808]	; 0x328
              text(0)
90005a94:	f8c4 7338 	str.w	r7, [r4, #824]	; 0x338
90005a98:	f8c4 0364 	str.w	r0, [r4, #868]	; 0x364
90005a9c:	f504 7061 	add.w	r0, r4, #900	; 0x384
90005aa0:	e9c4 27bb 	strd	r2, r7, [r4, #748]	; 0x2ec
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005aa4:	e9c4 72cc 	strd	r7, r2, [r4, #816]	; 0x330
        : x(0), y(0), width(0), height(0)
90005aa8:	e9c4 77be 	strd	r7, r7, [r4, #760]	; 0x2f8
90005aac:	e9c4 77c0 	strd	r7, r7, [r4, #768]	; 0x300
          nextSibling(0),
90005ab0:	e9c4 77c2 	strd	r7, r7, [r4, #776]	; 0x308
          cachedAbsX(0),
90005ab4:	e9c4 77c4 	strd	r7, r7, [r4, #784]	; 0x310
90005ab8:	e9c4 77d0 	strd	r7, r7, [r4, #832]	; 0x340
90005abc:	e9c4 77d2 	strd	r7, r7, [r4, #840]	; 0x348
          nextSibling(0),
90005ac0:	e9c4 77d4 	strd	r7, r7, [r4, #848]	; 0x350
          cachedAbsX(0),
90005ac4:	e9c4 77d6 	strd	r7, r7, [r4, #856]	; 0x358
90005ac8:	f8a4 c368 	strh.w	ip, [r4, #872]	; 0x368
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005acc:	f8c4 3372 	str.w	r3, [r4, #882]	; 0x372
        : pobject(pObject), pmemfun(pmemfun_1)
90005ad0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
        : color(col)
90005ad4:	f8c4 736c 	str.w	r7, [r4, #876]	; 0x36c
90005ad8:	f8a4 7370 	strh.w	r7, [r4, #880]	; 0x370
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005adc:	f8c4 7378 	str.w	r7, [r4, #888]	; 0x378
              text(0)
90005ae0:	e9c4 27df 	strd	r2, r7, [r4, #892]	; 0x37c
90005ae4:	4a97      	ldr	r2, [pc, #604]	; (90005d44 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b8>)
90005ae6:	f8c3 7fb0 	str.w	r7, [r3, #4016]	; 0xfb0
90005aea:	f8c3 2fa4 	str.w	r2, [r3, #4004]	; 0xfa4
90005aee:	4a96      	ldr	r2, [pc, #600]	; (90005d48 <_ZN29screen_space_invadersViewBaseC1Ev+0x4bc>)
90005af0:	f8c3 4fa8 	str.w	r4, [r3, #4008]	; 0xfa8
90005af4:	f8c3 2fac 	str.w	r2, [r3, #4012]	; 0xfac
90005af8:	f010 fdea 	bl	900166d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005afc:	4b93      	ldr	r3, [pc, #588]	; (90005d4c <_ZN29screen_space_invadersViewBaseC1Ev+0x4c0>)
        color = newColor;
90005afe:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90005b02:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005b06:	64a3      	str	r3, [r4, #72]	; 0x48
90005b08:	4658      	mov	r0, fp
90005b0a:	6467      	str	r7, [r4, #68]	; 0x44
90005b0c:	66a2      	str	r2, [r4, #104]	; 0x68
90005b0e:	f00c fe93 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005b12:	2204      	movs	r2, #4
    background_black.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005b14:	4628      	mov	r0, r5
90005b16:	a90e      	add	r1, sp, #56	; 0x38
90005b18:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
90005b1c:	f00f fdf5 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005b20:	4b8a      	ldr	r3, [pc, #552]	; (90005d4c <_ZN29screen_space_invadersViewBaseC1Ev+0x4c0>)
    background_black.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005b22:	4639      	mov	r1, r7
90005b24:	4628      	mov	r0, r5
90005b26:	e9c4 731c 	strd	r7, r3, [r4, #112]	; 0x70
90005b2a:	f00e fd6e 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005b2e:	4629      	mov	r1, r5
90005b30:	4658      	mov	r0, fp
90005b32:	2501      	movs	r5, #1
90005b34:	f00c fe80 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005b38:	ab0e      	add	r3, sp, #56	; 0x38
90005b3a:	aa0c      	add	r2, sp, #48	; 0x30
90005b3c:	4650      	mov	r0, sl
90005b3e:	9300      	str	r3, [sp, #0]
90005b40:	a90b      	add	r1, sp, #44	; 0x2c
90005b42:	4b83      	ldr	r3, [pc, #524]	; (90005d50 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c4>)
90005b44:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
90005b48:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
90005b4c:	2308      	movs	r3, #8
90005b4e:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
90005b52:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005b56:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005b5a:	ab0d      	add	r3, sp, #52	; 0x34
90005b5c:	f00f fd18 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005b60:	4651      	mov	r1, sl
90005b62:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005b66:	f04f 0a5a 	mov.w	sl, #90	; 0x5a
90005b6a:	4658      	mov	r0, fp
90005b6c:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
90005b70:	f884 a0ca 	strb.w	sl, [r4, #202]	; 0xca
90005b74:	f00c fe60 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005b78:	ab0e      	add	r3, sp, #56	; 0x38
90005b7a:	aa0c      	add	r2, sp, #48	; 0x30
90005b7c:	ee18 0a10 	vmov	r0, s16
90005b80:	9300      	str	r3, [sp, #0]
90005b82:	a90b      	add	r1, sp, #44	; 0x2c
90005b84:	4b73      	ldr	r3, [pc, #460]	; (90005d54 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c8>)
90005b86:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
90005b8a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
90005b8e:	2309      	movs	r3, #9
90005b90:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
90005b94:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005b98:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005b9c:	ab0d      	add	r3, sp, #52	; 0x34
90005b9e:	f00f fcf7 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005ba2:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005ba6:	ee18 1a10 	vmov	r1, s16
90005baa:	4658      	mov	r0, fp
90005bac:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
90005bb0:	f884 a106 	strb.w	sl, [r4, #262]	; 0x106
90005bb4:	f00c fe40 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005bb8:	ab0e      	add	r3, sp, #56	; 0x38
90005bba:	ed9d 8a03 	vldr	s16, [sp, #12]
90005bbe:	aa0c      	add	r2, sp, #48	; 0x30
90005bc0:	9300      	str	r3, [sp, #0]
90005bc2:	a90b      	add	r1, sp, #44	; 0x2c
90005bc4:	4b64      	ldr	r3, [pc, #400]	; (90005d58 <_ZN29screen_space_invadersViewBaseC1Ev+0x4cc>)
90005bc6:	ee18 0a10 	vmov	r0, s16
90005bca:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
    btn_fire.setAction(buttonCallback);
90005bce:	f641 75a4 	movw	r5, #8100	; 0x1fa4
90005bd2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
90005bd6:	230c      	movs	r3, #12
90005bd8:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
90005bdc:	4425      	add	r5, r4
90005bde:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90005be2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005be6:	ab0d      	add	r3, sp, #52	; 0x34
90005be8:	f00f fcd2 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005bec:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005bf0:	ee18 1a10 	vmov	r1, s16
90005bf4:	4658      	mov	r0, fp
90005bf6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90005bfa:	f884 a142 	strb.w	sl, [r4, #322]	; 0x142
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005bfe:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90005c02:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
90005c06:	f00c fe17 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c0a:	230f      	movs	r3, #15
    enemy1.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90005c0c:	4640      	mov	r0, r8
90005c0e:	a90e      	add	r1, sp, #56	; 0x38
90005c10:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005c14:	f00f fd79 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005c18:	4b50      	ldr	r3, [pc, #320]	; (90005d5c <_ZN29screen_space_invadersViewBaseC1Ev+0x4d0>)
    enemy1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005c1a:	4639      	mov	r1, r7
90005c1c:	4640      	mov	r0, r8
90005c1e:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
90005c22:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
90005c26:	f00e fcf0 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005c2a:	4641      	mov	r1, r8
90005c2c:	4658      	mov	r0, fp
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005c2e:	f504 783d 	add.w	r8, r4, #756	; 0x2f4
90005c32:	f00c fe01 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c36:	2310      	movs	r3, #16
    ship.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_SHIP_ID));
90005c38:	4648      	mov	r0, r9
90005c3a:	a90e      	add	r1, sp, #56	; 0x38
90005c3c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90005c40:	f00f fd63 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005c44:	4a46      	ldr	r2, [pc, #280]	; (90005d60 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d4>)
    ship.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005c46:	4639      	mov	r1, r7
90005c48:	4b46      	ldr	r3, [pc, #280]	; (90005d64 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d8>)
90005c4a:	4648      	mov	r0, r9
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005c4c:	f504 774f 	add.w	r7, r4, #828	; 0x33c
90005c50:	e9c4 235f 	strd	r2, r3, [r4, #380]	; 0x17c
    ship.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005c54:	f00e fcd9 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005c58:	4649      	mov	r1, r9
90005c5a:	4658      	mov	r0, fp
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005c5c:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
90005c60:	f00c fdea 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c64:	f04f 33ff 	mov.w	r3, #4294967295
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005c68:	f04f 3cff 	mov.w	ip, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005c6c:	22a0      	movs	r2, #160	; 0xa0
90005c6e:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
90005c72:	4630      	mov	r0, r6
        canvasPainter = &painter;
90005c74:	9b04      	ldr	r3, [sp, #16]
90005c76:	493c      	ldr	r1, [pc, #240]	; (90005d68 <_ZN29screen_space_invadersViewBaseC1Ev+0x4dc>)
90005c78:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
90005c7c:	4b3b      	ldr	r3, [pc, #236]	; (90005d6c <_ZN29screen_space_invadersViewBaseC1Ev+0x4e0>)
90005c7e:	f8a4 c224 	strh.w	ip, [r4, #548]	; 0x224
90005c82:	e9c4 136a 	strd	r1, r3, [r4, #424]	; 0x1a8
90005c86:	4611      	mov	r1, r2
90005c88:	f00e fb44 	bl	90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005c8c:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90005c90:	21a0      	movs	r1, #160	; 0xa0
90005c92:	4630      	mov	r0, r6
90005c94:	f00e fb49 	bl	9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005c98:	f8d4 31e0 	ldr.w	r3, [r4, #480]	; 0x1e0
90005c9c:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005ca0:	d006      	beq.n	90005cb0 <_ZN29screen_space_invadersViewBaseC1Ev+0x424>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005ca2:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
90005ca6:	4630      	mov	r0, r6
        lineWidthQ5 = widthQ5;
90005ca8:	f8c4 31e0 	str.w	r3, [r4, #480]	; 0x1e0
        updateCachedShape();
90005cac:	f00e fa3c 	bl	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
    bullet.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005cb0:	4630      	mov	r0, r6
90005cb2:	2101      	movs	r1, #1
90005cb4:	f00e fb44 	bl	90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005cb8:	4631      	mov	r1, r6
90005cba:	4658      	mov	r0, fp
90005cbc:	2600      	movs	r6, #0
90005cbe:	f00c fdbb 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90005cc2:	a80e      	add	r0, sp, #56	; 0x38
90005cc4:	aa0c      	add	r2, sp, #48	; 0x30
90005cc6:	ab0d      	add	r3, sp, #52	; 0x34
90005cc8:	9000      	str	r0, [sp, #0]
90005cca:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
90005cce:	a90b      	add	r1, sp, #44	; 0x2c
90005cd0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90005cd4:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
90005cd8:	200b      	movs	r0, #11
90005cda:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
90005cde:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90005ce2:	2001      	movs	r0, #1
90005ce4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
90005ce8:	ee18 0a90 	vmov	r0, s17
90005cec:	f00f fc50 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005cf0:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005cf4:	ee18 1a90 	vmov	r1, s17
90005cf8:	4658      	mov	r0, fp
90005cfa:	f8c4 5250 	str.w	r5, [r4, #592]	; 0x250
        boundingArea = calculateBoundingArea();
90005cfe:	ad06      	add	r5, sp, #24
90005d00:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        visible = vis;
90005d04:	f884 624d 	strb.w	r6, [r4, #589]	; 0x24d
90005d08:	f00c fd96 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005d0c:	4b18      	ldr	r3, [pc, #96]	; (90005d70 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e4>)
        color = newColor;
90005d0e:	4919      	ldr	r1, [pc, #100]	; (90005d74 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e8>)
        boundingArea = calculateBoundingArea();
90005d10:	4628      	mov	r0, r5
90005d12:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        color = newColor;
90005d16:	f8c4 1294 	str.w	r1, [r4, #660]	; 0x294
        boundingArea = calculateBoundingArea();
90005d1a:	4651      	mov	r1, sl
        linespace = space;
90005d1c:	f8a4 6298 	strh.w	r6, [r4, #664]	; 0x298
        boundingArea = calculateBoundingArea();
90005d20:	f00e ff62 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005d24:	4b05      	ldr	r3, [pc, #20]	; (90005d3c <_ZN29screen_space_invadersViewBaseC1Ev+0x4b0>)
90005d26:	220a      	movs	r2, #10
90005d28:	930e      	str	r3, [sp, #56]	; 0x38
90005d2a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005d2e:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005d32:	e021      	b.n	90005d78 <_ZN29screen_space_invadersViewBaseC1Ev+0x4ec>
90005d34:	90002331 	.word	0x90002331
90005d38:	9002d4dc 	.word	0x9002d4dc
90005d3c:	9002bfac 	.word	0x9002bfac
90005d40:	9002d7fc 	.word	0x9002d7fc
90005d44:	9002ce2c 	.word	0x9002ce2c
90005d48:	9000584d 	.word	0x9000584d
90005d4c:	011001e0 	.word	0x011001e0
90005d50:	00c60154 	.word	0x00c60154
90005d54:	00c601a8 	.word	0x00c601a8
90005d58:	009c017e 	.word	0x009c017e
90005d5c:	00340032 	.word	0x00340032
90005d60:	00cc0008 	.word	0x00cc0008
90005d64:	003c0054 	.word	0x003c0054
90005d68:	00a8002d 	.word	0x00a8002d
90005d6c:	0024000a 	.word	0x0024000a
90005d70:	00550076 	.word	0x00550076
90005d74:	ffff0000 	.word	0xffff0000
90005d78:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005d7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BG0R));
90005d80:	a80e      	add	r0, sp, #56	; 0x38
90005d82:	4601      	mov	r1, r0
90005d84:	4650      	mov	r0, sl
90005d86:	f00f f9d7 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005d8a:	4651      	mov	r1, sl
90005d8c:	4658      	mov	r0, fp
        visible = vis;
90005d8e:	f884 6289 	strb.w	r6, [r4, #649]	; 0x289
90005d92:	f00c fd51 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005d96:	4a38      	ldr	r2, [pc, #224]	; (90005e78 <_ZN29screen_space_invadersViewBaseC1Ev+0x5ec>)
        color = newColor;
90005d98:	4938      	ldr	r1, [pc, #224]	; (90005e7c <_ZN29screen_space_invadersViewBaseC1Ev+0x5f0>)
        boundingArea = calculateBoundingArea();
90005d9a:	4628      	mov	r0, r5
90005d9c:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
        color = newColor;
90005da0:	f8c4 12dc 	str.w	r1, [r4, #732]	; 0x2dc
        boundingArea = calculateBoundingArea();
90005da4:	4649      	mov	r1, r9
        linespace = space;
90005da6:	f8a4 62e0 	strh.w	r6, [r4, #736]	; 0x2e0
        boundingArea = calculateBoundingArea();
90005daa:	f00e ff1d 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005dae:	4b34      	ldr	r3, [pc, #208]	; (90005e80 <_ZN29screen_space_invadersViewBaseC1Ev+0x5f4>)
90005db0:	2206      	movs	r2, #6
90005db2:	930e      	str	r3, [sp, #56]	; 0x38
90005db4:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90005db8:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005dbc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005dc0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4O0Y));
90005dc4:	a90e      	add	r1, sp, #56	; 0x38
90005dc6:	4648      	mov	r0, r9
90005dc8:	f00f f9b6 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005dcc:	4649      	mov	r1, r9
90005dce:	4658      	mov	r0, fp
        visible = vis;
90005dd0:	f884 62d1 	strb.w	r6, [r4, #721]	; 0x2d1
90005dd4:	f00c fd30 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005dd8:	4a2a      	ldr	r2, [pc, #168]	; (90005e84 <_ZN29screen_space_invadersViewBaseC1Ev+0x5f8>)
        color = newColor;
90005dda:	4b2b      	ldr	r3, [pc, #172]	; (90005e88 <_ZN29screen_space_invadersViewBaseC1Ev+0x5fc>)
        boundingArea = calculateBoundingArea();
90005ddc:	4641      	mov	r1, r8
90005dde:	4628      	mov	r0, r5
90005de0:	f8c4 22f8 	str.w	r2, [r4, #760]	; 0x2f8
        color = newColor;
90005de4:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
        linespace = space;
90005de8:	f8a4 6328 	strh.w	r6, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90005dec:	f00e fefc 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005df0:	4b23      	ldr	r3, [pc, #140]	; (90005e80 <_ZN29screen_space_invadersViewBaseC1Ev+0x5f4>)
90005df2:	2209      	movs	r2, #9
90005df4:	930e      	str	r3, [sp, #56]	; 0x38
90005df6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90005dfa:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005dfe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005e02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_win.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I2AS));
90005e06:	a90e      	add	r1, sp, #56	; 0x38
90005e08:	4640      	mov	r0, r8
90005e0a:	f00f f995 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e0e:	4641      	mov	r1, r8
90005e10:	4658      	mov	r0, fp
        visible = vis;
90005e12:	f884 6319 	strb.w	r6, [r4, #793]	; 0x319
90005e16:	f00c fd0f 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005e1a:	4a1a      	ldr	r2, [pc, #104]	; (90005e84 <_ZN29screen_space_invadersViewBaseC1Ev+0x5f8>)
        color = newColor;
90005e1c:	4b1b      	ldr	r3, [pc, #108]	; (90005e8c <_ZN29screen_space_invadersViewBaseC1Ev+0x600>)
        boundingArea = calculateBoundingArea();
90005e1e:	4639      	mov	r1, r7
90005e20:	4628      	mov	r0, r5
90005e22:	f8c4 2340 	str.w	r2, [r4, #832]	; 0x340
        color = newColor;
90005e26:	f8c4 336c 	str.w	r3, [r4, #876]	; 0x36c
        linespace = space;
90005e2a:	f8a4 6370 	strh.w	r6, [r4, #880]	; 0x370
        boundingArea = calculateBoundingArea();
90005e2e:	f00e fedb 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e32:	4b13      	ldr	r3, [pc, #76]	; (90005e80 <_ZN29screen_space_invadersViewBaseC1Ev+0x5f4>)
90005e34:	2208      	movs	r2, #8
90005e36:	930e      	str	r3, [sp, #56]	; 0x38
90005e38:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005e3c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90005e40:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005e44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_lose.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2AHD));
90005e48:	a90e      	add	r1, sp, #56	; 0x38
90005e4a:	4638      	mov	r0, r7
90005e4c:	f00f f974 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e50:	4658      	mov	r0, fp
90005e52:	4639      	mov	r1, r7
        visible = vis;
90005e54:	f884 6361 	strb.w	r6, [r4, #865]	; 0x361
90005e58:	f00c fcee 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005e5c:	4620      	mov	r0, r4
90005e5e:	b011      	add	sp, #68	; 0x44
90005e60:	ecbd 8b02 	vpop	{d8}
90005e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
90005e68:	6898      	ldr	r0, [r3, #8]
90005e6a:	4a09      	ldr	r2, [pc, #36]	; (90005e90 <_ZN29screen_space_invadersViewBaseC1Ev+0x604>)
90005e6c:	6803      	ldr	r3, [r0, #0]
90005e6e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90005e70:	4291      	cmp	r1, r2
90005e72:	f43f adac 	beq.w	900059ce <_ZN29screen_space_invadersViewBaseC1Ev+0x142>
90005e76:	e574      	b.n	90005962 <_ZN29screen_space_invadersViewBaseC1Ev+0xd6>
90005e78:	00550076 	.word	0x00550076
90005e7c:	ffff0000 	.word	0xffff0000
90005e80:	9002bfac 	.word	0x9002bfac
90005e84:	008800c2 	.word	0x008800c2
90005e88:	ff05ff16 	.word	0xff05ff16
90005e8c:	ffff0505 	.word	0xffff0505
90005e90:	90002331 	.word	0x90002331

90005e94 <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005e94:	4770      	bx	lr
90005e96:	bf00      	nop

90005e98 <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005e98:	4770      	bx	lr
90005e9a:	bf00      	nop

90005e9c <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005e9c:	4770      	bx	lr
90005e9e:	bf00      	nop

90005ea0 <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005ea0:	4770      	bx	lr
90005ea2:	bf00      	nop

90005ea4 <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005ea4:	4770      	bx	lr
90005ea6:	bf00      	nop

90005ea8 <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005ea8:	4770      	bx	lr
90005eaa:	bf00      	nop

90005eac <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005eac:	4770      	bx	lr
90005eae:	bf00      	nop

90005eb0 <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005eb0:	4770      	bx	lr
90005eb2:	bf00      	nop

90005eb4 <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005eb4:	4770      	bx	lr
90005eb6:	bf00      	nop

90005eb8 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90005eb8:	4770      	bx	lr
90005eba:	bf00      	nop

90005ebc <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005ebc:	4770      	bx	lr
90005ebe:	bf00      	nop

90005ec0 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90005ec0:	4770      	bx	lr
90005ec2:	bf00      	nop

90005ec4 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005ec4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005ec6:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005ec8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005eca:	6844      	ldr	r4, [r0, #4]
90005ecc:	f012 0f01 	tst.w	r2, #1
90005ed0:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005ed4:	d103      	bne.n	90005ede <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90005ed6:	689b      	ldr	r3, [r3, #8]
    }
90005ed8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005edc:	4718      	bx	r3
90005ede:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005ee2:	689b      	ldr	r3, [r3, #8]
90005ee4:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005ee8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005eec:	58d3      	ldr	r3, [r2, r3]
90005eee:	4718      	bx	r3

90005ef0 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005ef0:	6843      	ldr	r3, [r0, #4]
90005ef2:	b13b      	cbz	r3, 90005f04 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005ef4:	6883      	ldr	r3, [r0, #8]
90005ef6:	b10b      	cbz	r3, 90005efc <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005ef8:	2001      	movs	r0, #1
    }
90005efa:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005efc:	68c0      	ldr	r0, [r0, #12]
90005efe:	f000 0001 	and.w	r0, r0, #1
90005f02:	4770      	bx	lr
90005f04:	4618      	mov	r0, r3
90005f06:	4770      	bx	lr

90005f08 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005f08:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f0a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005f0c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005f0e:	6844      	ldr	r4, [r0, #4]
90005f10:	f012 0f01 	tst.w	r2, #1
90005f14:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005f18:	d103      	bne.n	90005f22 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90005f1a:	689b      	ldr	r3, [r3, #8]
    }
90005f1c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f20:	4718      	bx	r3
90005f22:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005f26:	689b      	ldr	r3, [r3, #8]
90005f28:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005f2c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f30:	58d3      	ldr	r3, [r2, r3]
90005f32:	4718      	bx	r3

90005f34 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005f34:	6843      	ldr	r3, [r0, #4]
90005f36:	b13b      	cbz	r3, 90005f48 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005f38:	6883      	ldr	r3, [r0, #8]
90005f3a:	b10b      	cbz	r3, 90005f40 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90005f3c:	2001      	movs	r0, #1
    }
90005f3e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005f40:	68c0      	ldr	r0, [r0, #12]
90005f42:	f000 0001 	and.w	r0, r0, #1
90005f46:	4770      	bx	lr
90005f48:	4618      	mov	r0, r3
90005f4a:	4770      	bx	lr

90005f4c <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005f4c:	b510      	push	{r4, lr}
90005f4e:	4604      	mov	r4, r0
90005f50:	2110      	movs	r1, #16
90005f52:	f023 fa07 	bl	90029364 <_ZdlPvj>
90005f56:	4620      	mov	r0, r4
90005f58:	bd10      	pop	{r4, pc}
90005f5a:	bf00      	nop

90005f5c <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90005f5c:	b510      	push	{r4, lr}
90005f5e:	4604      	mov	r4, r0
90005f60:	2110      	movs	r1, #16
90005f62:	f023 f9ff 	bl	90029364 <_ZdlPvj>
90005f66:	4620      	mov	r0, r4
90005f68:	bd10      	pop	{r4, pc}
90005f6a:	bf00      	nop

90005f6c <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90005f6c:	4b03      	ldr	r3, [pc, #12]	; (90005f7c <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90005f6e:	b510      	push	{r4, lr}
90005f70:	4604      	mov	r4, r0
90005f72:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005f74:	f010 fbb6 	bl	900166e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005f78:	4620      	mov	r0, r4
90005f7a:	bd10      	pop	{r4, pc}
90005f7c:	9002ceac 	.word	0x9002ceac

90005f80 <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90005f80:	4b07      	ldr	r3, [pc, #28]	; (90005fa0 <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
90005f82:	b500      	push	{lr}
90005f84:	b083      	sub	sp, #12
90005f86:	6003      	str	r3, [r0, #0]
90005f88:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005f8a:	f010 fbab 	bl	900166e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005f8e:	9801      	ldr	r0, [sp, #4]
90005f90:	f242 71bc 	movw	r1, #10172	; 0x27bc
90005f94:	f023 f9e6 	bl	90029364 <_ZdlPvj>
90005f98:	9801      	ldr	r0, [sp, #4]
90005f9a:	b003      	add	sp, #12
90005f9c:	f85d fb04 	ldr.w	pc, [sp], #4
90005fa0:	9002ceac 	.word	0x9002ceac

90005fa4 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void screen_tictactoe_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90005fa4:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90005fa8:	4288      	cmp	r0, r1
90005faa:	d000      	beq.n	90005fae <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
90005fac:	4770      	bx	lr
{
90005fae:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005fb0:	f012 f89a 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90005fb4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90005fb8:	f7fe b91e 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>

90005fbc <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &btn_pos1)
90005fbc:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
90005fc0:	4299      	cmp	r1, r3
{
90005fc2:	b570      	push	{r4, r5, r6, lr}
90005fc4:	4604      	mov	r4, r0
90005fc6:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
90005fc8:	d061      	beq.n	9000608e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &btn_pos2)
90005fca:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90005fce:	429d      	cmp	r5, r3
90005fd0:	d055      	beq.n	9000607e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
    if (&src == &btn_pos3)
90005fd2:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
90005fd6:	429d      	cmp	r5, r3
90005fd8:	d049      	beq.n	9000606e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &btn_pos4)
90005fda:	f504 7348 	add.w	r3, r4, #800	; 0x320
90005fde:	429d      	cmp	r5, r3
90005fe0:	d03d      	beq.n	9000605e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
    if (&src == &btn_pos5)
90005fe2:	f504 6382 	add.w	r3, r4, #1040	; 0x410
90005fe6:	429d      	cmp	r5, r3
90005fe8:	d031      	beq.n	9000604e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    if (&src == &btn_pos6)
90005fea:	f504 7366 	add.w	r3, r4, #920	; 0x398
90005fee:	429d      	cmp	r5, r3
90005ff0:	d025      	beq.n	9000603e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    if (&src == &btn_pos7)
90005ff2:	f504 6391 	add.w	r3, r4, #1160	; 0x488
90005ff6:	429d      	cmp	r5, r3
90005ff8:	d019      	beq.n	9000602e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    if (&src == &btn_pos8)
90005ffa:	f504 63af 	add.w	r3, r4, #1400	; 0x578
90005ffe:	429d      	cmp	r5, r3
90006000:	d00d      	beq.n	9000601e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    if (&src == &btn_pos9)
90006002:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90006006:	429d      	cmp	r5, r3
90006008:	d000      	beq.n	9000600c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
}
9000600a:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
9000600c:	6823      	ldr	r3, [r4, #0]
9000600e:	4a23      	ldr	r2, [pc, #140]	; (9000609c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
90006010:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90006012:	4293      	cmp	r3, r2
90006014:	d0f9      	beq.n	9000600a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
90006016:	4620      	mov	r0, r4
}
90006018:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
9000601c:	4718      	bx	r3
        pos8_clicked();
9000601e:	6823      	ldr	r3, [r4, #0]
90006020:	4a1f      	ldr	r2, [pc, #124]	; (900060a0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
90006022:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90006024:	4293      	cmp	r3, r2
90006026:	d0ec      	beq.n	90006002 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
90006028:	4620      	mov	r0, r4
9000602a:	4798      	blx	r3
9000602c:	e7e9      	b.n	90006002 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
9000602e:	6823      	ldr	r3, [r4, #0]
90006030:	4a1c      	ldr	r2, [pc, #112]	; (900060a4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
90006032:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90006034:	4293      	cmp	r3, r2
90006036:	d0e0      	beq.n	90005ffa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
90006038:	4620      	mov	r0, r4
9000603a:	4798      	blx	r3
9000603c:	e7dd      	b.n	90005ffa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
9000603e:	6823      	ldr	r3, [r4, #0]
90006040:	4a19      	ldr	r2, [pc, #100]	; (900060a8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
90006042:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90006044:	4293      	cmp	r3, r2
90006046:	d0d4      	beq.n	90005ff2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
90006048:	4620      	mov	r0, r4
9000604a:	4798      	blx	r3
9000604c:	e7d1      	b.n	90005ff2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
9000604e:	6823      	ldr	r3, [r4, #0]
90006050:	4a16      	ldr	r2, [pc, #88]	; (900060ac <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
90006052:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90006054:	4293      	cmp	r3, r2
90006056:	d0c8      	beq.n	90005fea <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
90006058:	4620      	mov	r0, r4
9000605a:	4798      	blx	r3
9000605c:	e7c5      	b.n	90005fea <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
9000605e:	6823      	ldr	r3, [r4, #0]
90006060:	4a13      	ldr	r2, [pc, #76]	; (900060b0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
90006062:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90006064:	4293      	cmp	r3, r2
90006066:	d0bc      	beq.n	90005fe2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
90006068:	4620      	mov	r0, r4
9000606a:	4798      	blx	r3
9000606c:	e7b9      	b.n	90005fe2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
9000606e:	6823      	ldr	r3, [r4, #0]
90006070:	4a10      	ldr	r2, [pc, #64]	; (900060b4 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
90006072:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006074:	4293      	cmp	r3, r2
90006076:	d0b0      	beq.n	90005fda <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90006078:	4620      	mov	r0, r4
9000607a:	4798      	blx	r3
9000607c:	e7ad      	b.n	90005fda <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
9000607e:	6823      	ldr	r3, [r4, #0]
90006080:	4a0d      	ldr	r2, [pc, #52]	; (900060b8 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
90006082:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006084:	4293      	cmp	r3, r2
90006086:	d0a4      	beq.n	90005fd2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
90006088:	4620      	mov	r0, r4
9000608a:	4798      	blx	r3
9000608c:	e7a1      	b.n	90005fd2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
9000608e:	6803      	ldr	r3, [r0, #0]
90006090:	4a0a      	ldr	r2, [pc, #40]	; (900060bc <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
90006092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006094:	4293      	cmp	r3, r2
90006096:	d098      	beq.n	90005fca <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90006098:	4798      	blx	r3
9000609a:	e796      	b.n	90005fca <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
9000609c:	90005eb5 	.word	0x90005eb5
900060a0:	90005eb1 	.word	0x90005eb1
900060a4:	90005ead 	.word	0x90005ead
900060a8:	90005ea9 	.word	0x90005ea9
900060ac:	90005ea5 	.word	0x90005ea5
900060b0:	90005ea1 	.word	0x90005ea1
900060b4:	90005e9d 	.word	0x90005e9d
900060b8:	90005e99 	.word	0x90005e99
900060bc:	90005e95 	.word	0x90005e95

900060c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
900060c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900060c4:	ed2d 8b08 	vpush	{d8-d11}
900060c8:	b0ab      	sub	sp, #172	; 0xac
900060ca:	4604      	mov	r4, r0
900060cc:	f013 fc44 	bl	90019958 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
900060d0:	f44f 7380 	mov.w	r3, #256	; 0x100
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
900060d4:	4a2a      	ldr	r2, [pc, #168]	; (90006180 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
900060d6:	2500      	movs	r5, #0
900060d8:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        : Widget(), alpha(255), color(0)
900060dc:	23ff      	movs	r3, #255	; 0xff
900060de:	4929      	ldr	r1, [pc, #164]	; (90006184 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
900060e0:	f104 0698 	add.w	r6, r4, #152	; 0x98
900060e4:	6022      	str	r2, [r4, #0]
900060e6:	f104 026c 	add.w	r2, r4, #108	; 0x6c
900060ea:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
900060ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
900060f2:	4610      	mov	r0, r2
900060f4:	6421      	str	r1, [r4, #64]	; 0x40
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900060f6:	4f24      	ldr	r7, [pc, #144]	; (90006188 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
900060f8:	a928      	add	r1, sp, #160	; 0xa0
900060fa:	63e5      	str	r5, [r4, #60]	; 0x3c
900060fc:	ee0a 2a90 	vmov	s21, r2
        : x(0), y(0), width(0), height(0)
90006100:	6465      	str	r5, [r4, #68]	; 0x44
90006102:	ee08 6a10 	vmov	s16, r6
          cachedAbsX(0),
90006106:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
90006108:	66a5      	str	r5, [r4, #104]	; 0x68
9000610a:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
        : AbstractPainter()
9000610e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>
        : x(0), y(0), width(0), height(0)
90006112:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90006116:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
9000611a:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000611e:	f00e fab9 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006122:	4630      	mov	r0, r6
90006124:	f00d ffe0 	bl	900140e8 <_ZN8touchgfx4LineC1Ev>
90006128:	683b      	ldr	r3, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000612a:	f504 7184 	add.w	r1, r4, #264	; 0x108
        : widgetWidth(0)
9000612e:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
90006132:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90006136:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
9000613a:	9103      	str	r1, [sp, #12]
9000613c:	2a00      	cmp	r2, #0
9000613e:	d02f      	beq.n	900061a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
90006140:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006142:	2800      	cmp	r0, #0
90006144:	f001 8238 	beq.w	900075b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14f8>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006148:	6803      	ldr	r3, [r0, #0]
9000614a:	4d10      	ldr	r5, [pc, #64]	; (9000618c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
9000614c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000614e:	42aa      	cmp	r2, r5
90006150:	d033      	beq.n	900061ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006152:	4790      	blx	r2
        return auxiliaryLCD;
90006154:	683b      	ldr	r3, [r7, #0]
90006156:	fab0 f680 	clz	r6, r0
9000615a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000615c:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
9000615e:	b140      	cbz	r0, 90006172 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006160:	6803      	ldr	r3, [r0, #0]
90006162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006164:	42ab      	cmp	r3, r5
90006166:	d028      	beq.n	900061ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006168:	4798      	blx	r3
9000616a:	2800      	cmp	r0, #0
9000616c:	bf08      	it	eq
9000616e:	f046 0601 	orreq.w	r6, r6, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006172:	bb16      	cbnz	r6, 900061ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006174:	4b06      	ldr	r3, [pc, #24]	; (90006190 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
90006176:	212c      	movs	r1, #44	; 0x2c
90006178:	4a06      	ldr	r2, [pc, #24]	; (90006194 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
9000617a:	4807      	ldr	r0, [pc, #28]	; (90006198 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
9000617c:	f023 f920 	bl	900293c0 <__assert_func>
90006180:	9002ceac 	.word	0x9002ceac
90006184:	9002d88c 	.word	0x9002d88c
90006188:	24039acc 	.word	0x24039acc
9000618c:	90002331 	.word	0x90002331
90006190:	9002cd24 	.word	0x9002cd24
90006194:	9002cd84 	.word	0x9002cd84
90006198:	9002cdc0 	.word	0x9002cdc0
9000619c:	9002bd44 	.word	0x9002bd44
        return instance->lcdRef;
900061a0:	6898      	ldr	r0, [r3, #8]
900061a2:	4de1      	ldr	r5, [pc, #900]	; (90006528 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900061a4:	6802      	ldr	r2, [r0, #0]
900061a6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900061a8:	42aa      	cmp	r2, r5
900061aa:	d1d2      	bne.n	90006152 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
900061ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900061ae:	b120      	cbz	r0, 900061ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
900061b0:	6803      	ldr	r3, [r0, #0]
900061b2:	2601      	movs	r6, #1
900061b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900061b6:	42ab      	cmp	r3, r5
900061b8:	d1d6      	bne.n	90006168 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
900061ba:	4edc      	ldr	r6, [pc, #880]	; (9000652c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
900061bc:	f04f 0b00 	mov.w	fp, #0
900061c0:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
900061c4:	f504 708e 	add.w	r0, r4, #284	; 0x11c
900061c8:	f106 0924 	add.w	r9, r6, #36	; 0x24
900061cc:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
900061d0:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
900061d4:	ee08 0a90 	vmov	s17, r0
900061d8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
900061dc:	931e      	str	r3, [sp, #120]	; 0x78
900061de:	f00d ff83 	bl	900140e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900061e2:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
900061e4:	f8a4 b190 	strh.w	fp, [r4, #400]	; 0x190
900061e8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : AbstractPainter()
900061ec:	f8c4 818c 	str.w	r8, [r4, #396]	; 0x18c
900061f0:	2a00      	cmp	r2, #0
900061f2:	f001 81ea 	beq.w	900075ca <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x150a>
900061f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900061f8:	b900      	cbnz	r0, 900061fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
900061fa:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900061fc:	6803      	ldr	r3, [r0, #0]
900061fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006200:	42aa      	cmp	r2, r5
90006202:	f041 8251 	bne.w	900076a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>
90006206:	f04f 0b00 	mov.w	fp, #0
9000620a:	f504 7304 	add.w	r3, r4, #528	; 0x210
9000620e:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
90006212:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
90006216:	f8c4 9194 	str.w	r9, [r4, #404]	; 0x194
9000621a:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
9000621e:	ee09 0a10 	vmov	s18, r0
90006222:	931d      	str	r3, [sp, #116]	; 0x74
90006224:	f00d ff60 	bl	900140e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006228:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
9000622a:	f8a4 b214 	strh.w	fp, [r4, #532]	; 0x214
9000622e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90006232:	f8c4 8210 	str.w	r8, [r4, #528]	; 0x210
90006236:	2a00      	cmp	r2, #0
90006238:	f001 81e2 	beq.w	90007600 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1540>
9000623c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000623e:	b900      	cbnz	r0, 90006242 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
90006240:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006242:	6803      	ldr	r3, [r0, #0]
90006244:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006246:	42aa      	cmp	r2, r5
90006248:	f041 8245 	bne.w	900076d6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1616>
9000624c:	f04f 0b00 	mov.w	fp, #0
90006250:	f504 7325 	add.w	r3, r4, #660	; 0x294
90006254:	f504 7009 	add.w	r0, r4, #548	; 0x224
90006258:	f8c4 6210 	str.w	r6, [r4, #528]	; 0x210
9000625c:	f8c4 9218 	str.w	r9, [r4, #536]	; 0x218
90006260:	f8c4 b21c 	str.w	fp, [r4, #540]	; 0x21c
90006264:	ee09 0a90 	vmov	s19, r0
90006268:	931f      	str	r3, [sp, #124]	; 0x7c
9000626a:	f00d ff3d 	bl	900140e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000626e:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90006270:	f8a4 b298 	strh.w	fp, [r4, #664]	; 0x298
90006274:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90006278:	f8c4 8294 	str.w	r8, [r4, #660]	; 0x294
9000627c:	2a00      	cmp	r2, #0
9000627e:	f001 81da 	beq.w	90007636 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1576>
90006282:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006284:	b900      	cbnz	r0, 90006288 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
90006286:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006288:	6803      	ldr	r3, [r0, #0]
9000628a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000628c:	42aa      	cmp	r2, r5
9000628e:	f041 8217 	bne.w	900076c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1600>
          touchable(false),
90006292:	f44f 7580 	mov.w	r5, #256	; 0x100
90006296:	f04f 08ff 	mov.w	r8, #255	; 0xff
        : pressed(false), alpha(255), action(0)
9000629a:	f44f 4b7f 	mov.w	fp, #65280	; 0xff00
        : T(), up(), down()
9000629e:	f8df a294 	ldr.w	sl, [pc, #660]	; 90006534 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>
        : Box(), borderColor(0), borderSize(0)
900062a2:	4fa3      	ldr	r7, [pc, #652]	; (90006530 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
900062a4:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
900062a8:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
900062ac:	2600      	movs	r6, #0
900062ae:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
        touchable = touch;
900062b2:	f240 1901 	movw	r9, #257	; 0x101
900062b6:	f504 7248 	add.w	r2, r4, #800	; 0x320
        T::add(borderBox);
900062ba:	4618      	mov	r0, r3
900062bc:	f504 7137 	add.w	r1, r4, #732	; 0x2dc
          touchable(false),
900062c0:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
900062c4:	f8a4 b2d4 	strh.w	fp, [r4, #724]	; 0x2d4
900062c8:	ee0a 3a10 	vmov	s20, r3
        touchable = touch;
900062cc:	f8a4 92cc 	strh.w	r9, [r4, #716]	; 0x2cc
        : T(), up(), down()
900062d0:	f8c4 a2a8 	str.w	sl, [r4, #680]	; 0x2a8
900062d4:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
900062d8:	f8c4 62a0 	str.w	r6, [r4, #672]	; 0x2a0
900062dc:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
900062e0:	f8c4 62d8 	str.w	r6, [r4, #728]	; 0x2d8
900062e4:	f8a4 630c 	strh.w	r6, [r4, #780]	; 0x30c
900062e8:	f884 8302 	strb.w	r8, [r4, #770]	; 0x302
900062ec:	e9c4 66ab 	strd	r6, r6, [r4, #684]	; 0x2ac
900062f0:	e9c4 66ad 	strd	r6, r6, [r4, #692]	; 0x2b4
          nextSibling(0),
900062f4:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
          cachedAbsX(0),
900062f8:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
900062fc:	e9c4 66bc 	strd	r6, r6, [r4, #752]	; 0x2f0
          cachedAbsX(0),
90006300:	e9c4 66be 	strd	r6, r6, [r4, #760]	; 0x2f8
        : color(col)
90006304:	e9c4 66c1 	strd	r6, r6, [r4, #772]	; 0x304
        : color(0)
90006308:	e9c4 66c4 	strd	r6, r6, [r4, #784]	; 0x310
9000630c:	e9c4 66c6 	strd	r6, r6, [r4, #792]	; 0x318
        rect.x = x;
90006310:	e9c4 66b8 	strd	r6, r6, [r4, #736]	; 0x2e0
90006314:	e9c4 66ba 	strd	r6, r6, [r4, #744]	; 0x2e8
90006318:	9204      	str	r2, [sp, #16]
        T::add(borderBox);
9000631a:	f00c fa8d 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000631e:	f504 7366 	add.w	r3, r4, #920	; 0x398
90006322:	f504 7155 	add.w	r1, r4, #852	; 0x354
90006326:	f8a4 b34c 	strh.w	fp, [r4, #844]	; 0x34c
9000632a:	9305      	str	r3, [sp, #20]
        touchable = touch;
9000632c:	f8a4 9344 	strh.w	r9, [r4, #836]	; 0x344
        : T(), up(), down()
90006330:	f8c4 a320 	str.w	sl, [r4, #800]	; 0x320
          touchable(false),
90006334:	f8a4 5378 	strh.w	r5, [r4, #888]	; 0x378
90006338:	f8c4 7354 	str.w	r7, [r4, #852]	; 0x354
9000633c:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
90006340:	f8c4 6350 	str.w	r6, [r4, #848]	; 0x350
90006344:	f884 837a 	strb.w	r8, [r4, #890]	; 0x37a
        : color(col)
90006348:	f8c4 637c 	str.w	r6, [r4, #892]	; 0x37c
9000634c:	f8c4 6380 	str.w	r6, [r4, #896]	; 0x380
90006350:	f8a4 6384 	strh.w	r6, [r4, #900]	; 0x384
        : x(0), y(0), width(0), height(0)
90006354:	e9c4 66c9 	strd	r6, r6, [r4, #804]	; 0x324
90006358:	e9c4 66cb 	strd	r6, r6, [r4, #812]	; 0x32c
          nextSibling(0),
9000635c:	e9c4 66cd 	strd	r6, r6, [r4, #820]	; 0x334
          cachedAbsX(0),
90006360:	e9c4 66cf 	strd	r6, r6, [r4, #828]	; 0x33c
          nextSibling(0),
90006364:	e9c4 66da 	strd	r6, r6, [r4, #872]	; 0x368
          cachedAbsX(0),
90006368:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
        : color(0)
9000636c:	e9c4 66e2 	strd	r6, r6, [r4, #904]	; 0x388
90006370:	e9c4 66e4 	strd	r6, r6, [r4, #912]	; 0x390
        rect.x = x;
90006374:	e9c4 66d6 	strd	r6, r6, [r4, #856]	; 0x358
90006378:	e9c4 66d8 	strd	r6, r6, [r4, #864]	; 0x360
        T::add(borderBox);
9000637c:	9804      	ldr	r0, [sp, #16]
9000637e:	f00c fa5b 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006382:	f504 6282 	add.w	r2, r4, #1040	; 0x410
90006386:	f504 7173 	add.w	r1, r4, #972	; 0x3cc
9000638a:	f8a4 b3c4 	strh.w	fp, [r4, #964]	; 0x3c4
9000638e:	9206      	str	r2, [sp, #24]
        touchable = touch;
90006390:	f8a4 93bc 	strh.w	r9, [r4, #956]	; 0x3bc
        : T(), up(), down()
90006394:	f8c4 a398 	str.w	sl, [r4, #920]	; 0x398
          touchable(false),
90006398:	f8a4 53f0 	strh.w	r5, [r4, #1008]	; 0x3f0
9000639c:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc
900063a0:	f8c4 63c0 	str.w	r6, [r4, #960]	; 0x3c0
900063a4:	f8c4 63c8 	str.w	r6, [r4, #968]	; 0x3c8
900063a8:	f884 83f2 	strb.w	r8, [r4, #1010]	; 0x3f2
        : color(col)
900063ac:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
900063b0:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
900063b4:	f8a4 63fc 	strh.w	r6, [r4, #1020]	; 0x3fc
        : color(0)
900063b8:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
900063bc:	f8c4 6404 	str.w	r6, [r4, #1028]	; 0x404
900063c0:	f8c4 6408 	str.w	r6, [r4, #1032]	; 0x408
900063c4:	f8c4 640c 	str.w	r6, [r4, #1036]	; 0x40c
        : x(0), y(0), width(0), height(0)
900063c8:	e9c4 66e7 	strd	r6, r6, [r4, #924]	; 0x39c
900063cc:	e9c4 66e9 	strd	r6, r6, [r4, #932]	; 0x3a4
          nextSibling(0),
900063d0:	e9c4 66eb 	strd	r6, r6, [r4, #940]	; 0x3ac
          cachedAbsX(0),
900063d4:	e9c4 66ed 	strd	r6, r6, [r4, #948]	; 0x3b4
          nextSibling(0),
900063d8:	e9c4 66f8 	strd	r6, r6, [r4, #992]	; 0x3e0
          cachedAbsX(0),
900063dc:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	; 0x3e8
        rect.x = x;
900063e0:	e9c4 66f4 	strd	r6, r6, [r4, #976]	; 0x3d0
900063e4:	e9c4 66f6 	strd	r6, r6, [r4, #984]	; 0x3d8
        T::add(borderBox);
900063e8:	9805      	ldr	r0, [sp, #20]
900063ea:	f00c fa25 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900063ee:	f504 6391 	add.w	r3, r4, #1160	; 0x488
900063f2:	f204 4144 	addw	r1, r4, #1092	; 0x444
900063f6:	f8a4 b43c 	strh.w	fp, [r4, #1084]	; 0x43c
900063fa:	9307      	str	r3, [sp, #28]
        touchable = touch;
900063fc:	f8a4 9434 	strh.w	r9, [r4, #1076]	; 0x434
        : T(), up(), down()
90006400:	f8c4 a410 	str.w	sl, [r4, #1040]	; 0x410
          touchable(false),
90006404:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
90006408:	f8c4 7444 	str.w	r7, [r4, #1092]	; 0x444
9000640c:	f8c4 6414 	str.w	r6, [r4, #1044]	; 0x414
90006410:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
90006414:	f8c4 641c 	str.w	r6, [r4, #1052]	; 0x41c
90006418:	f8c4 6420 	str.w	r6, [r4, #1056]	; 0x420
          parent(0),
9000641c:	f8c4 6424 	str.w	r6, [r4, #1060]	; 0x424
          nextSibling(0),
90006420:	f8c4 6428 	str.w	r6, [r4, #1064]	; 0x428
          nextDrawChainElement(0),
90006424:	f8c4 642c 	str.w	r6, [r4, #1068]	; 0x42c
          cachedAbsX(0),
90006428:	f8c4 6430 	str.w	r6, [r4, #1072]	; 0x430
9000642c:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
90006430:	f8c4 6440 	str.w	r6, [r4, #1088]	; 0x440
          parent(0),
90006434:	f8c4 6458 	str.w	r6, [r4, #1112]	; 0x458
          nextSibling(0),
90006438:	f8c4 645c 	str.w	r6, [r4, #1116]	; 0x45c
          nextDrawChainElement(0),
9000643c:	f8c4 6460 	str.w	r6, [r4, #1120]	; 0x460
          cachedAbsX(0),
90006440:	f8c4 6464 	str.w	r6, [r4, #1124]	; 0x464
90006444:	f884 846a 	strb.w	r8, [r4, #1130]	; 0x46a
        : color(col)
90006448:	f8c4 646c 	str.w	r6, [r4, #1132]	; 0x46c
9000644c:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
90006450:	f8a4 6474 	strh.w	r6, [r4, #1140]	; 0x474
        : color(0)
90006454:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
90006458:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
9000645c:	f8c4 6480 	str.w	r6, [r4, #1152]	; 0x480
90006460:	f8c4 6484 	str.w	r6, [r4, #1156]	; 0x484
        rect.x = x;
90006464:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
90006468:	f8c4 644c 	str.w	r6, [r4, #1100]	; 0x44c
9000646c:	f8c4 6450 	str.w	r6, [r4, #1104]	; 0x450
90006470:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
        T::add(borderBox);
90006474:	9806      	ldr	r0, [sp, #24]
90006476:	f00c f9df 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000647a:	f504 62a0 	add.w	r2, r4, #1280	; 0x500
9000647e:	f204 41bc 	addw	r1, r4, #1212	; 0x4bc
90006482:	f8a4 b4b4 	strh.w	fp, [r4, #1204]	; 0x4b4
90006486:	9208      	str	r2, [sp, #32]
        touchable = touch;
90006488:	f8a4 94ac 	strh.w	r9, [r4, #1196]	; 0x4ac
        : T(), up(), down()
9000648c:	f8c4 a488 	str.w	sl, [r4, #1160]	; 0x488
          touchable(false),
90006490:	f8a4 54e0 	strh.w	r5, [r4, #1248]	; 0x4e0
90006494:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
        : x(0), y(0), width(0), height(0)
90006498:	f8c4 648c 	str.w	r6, [r4, #1164]	; 0x48c
9000649c:	f8c4 6490 	str.w	r6, [r4, #1168]	; 0x490
900064a0:	f8c4 6494 	str.w	r6, [r4, #1172]	; 0x494
900064a4:	f8c4 6498 	str.w	r6, [r4, #1176]	; 0x498
          parent(0),
900064a8:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
          nextSibling(0),
900064ac:	f8c4 64a0 	str.w	r6, [r4, #1184]	; 0x4a0
          nextDrawChainElement(0),
900064b0:	f8c4 64a4 	str.w	r6, [r4, #1188]	; 0x4a4
          cachedAbsX(0),
900064b4:	f8c4 64a8 	str.w	r6, [r4, #1192]	; 0x4a8
900064b8:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
900064bc:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
          parent(0),
900064c0:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          nextSibling(0),
900064c4:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextDrawChainElement(0),
900064c8:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          cachedAbsX(0),
900064cc:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
900064d0:	f884 84e2 	strb.w	r8, [r4, #1250]	; 0x4e2
        : color(col)
900064d4:	f8c4 64e4 	str.w	r6, [r4, #1252]	; 0x4e4
900064d8:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
900064dc:	f8a4 64ec 	strh.w	r6, [r4, #1260]	; 0x4ec
        : color(0)
900064e0:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
900064e4:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
900064e8:	f8c4 64f8 	str.w	r6, [r4, #1272]	; 0x4f8
900064ec:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
        rect.x = x;
900064f0:	f8c4 64c0 	str.w	r6, [r4, #1216]	; 0x4c0
900064f4:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
900064f8:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
900064fc:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
        T::add(borderBox);
90006500:	9807      	ldr	r0, [sp, #28]
90006502:	f00c f999 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006506:	f504 63af 	add.w	r3, r4, #1400	; 0x578
9000650a:	f204 5134 	addw	r1, r4, #1332	; 0x534
9000650e:	f8a4 b52c 	strh.w	fp, [r4, #1324]	; 0x52c
90006512:	9309      	str	r3, [sp, #36]	; 0x24
        touchable = touch;
90006514:	f8a4 9524 	strh.w	r9, [r4, #1316]	; 0x524
        : T(), up(), down()
90006518:	f8c4 a500 	str.w	sl, [r4, #1280]	; 0x500
          touchable(false),
9000651c:	f8a4 5558 	strh.w	r5, [r4, #1368]	; 0x558
90006520:	f8c4 7534 	str.w	r7, [r4, #1332]	; 0x534
90006524:	e008      	b.n	90006538 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
90006526:	bf00      	nop
90006528:	90002331 	.word	0x90002331
9000652c:	9002d4dc 	.word	0x9002d4dc
90006530:	9002d8f4 	.word	0x9002d8f4
90006534:	9002ca10 	.word	0x9002ca10
        : x(0), y(0), width(0), height(0)
90006538:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
9000653c:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006540:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
90006544:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
          parent(0),
90006548:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
          nextSibling(0),
9000654c:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
          nextDrawChainElement(0),
90006550:	f8c4 651c 	str.w	r6, [r4, #1308]	; 0x51c
          cachedAbsX(0),
90006554:	f8c4 6520 	str.w	r6, [r4, #1312]	; 0x520
90006558:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
9000655c:	f8c4 6530 	str.w	r6, [r4, #1328]	; 0x530
          parent(0),
90006560:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
          nextSibling(0),
90006564:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
          nextDrawChainElement(0),
90006568:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
          cachedAbsX(0),
9000656c:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
90006570:	f884 855a 	strb.w	r8, [r4, #1370]	; 0x55a
        : color(col)
90006574:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
90006578:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
9000657c:	f8a4 6564 	strh.w	r6, [r4, #1380]	; 0x564
        : color(0)
90006580:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
90006584:	f8c4 656c 	str.w	r6, [r4, #1388]	; 0x56c
90006588:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
9000658c:	f8c4 6574 	str.w	r6, [r4, #1396]	; 0x574
        rect.x = x;
90006590:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
90006594:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
90006598:	f8c4 6540 	str.w	r6, [r4, #1344]	; 0x540
9000659c:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
        T::add(borderBox);
900065a0:	9808      	ldr	r0, [sp, #32]
900065a2:	f00c f949 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900065a6:	f504 62be 	add.w	r2, r4, #1520	; 0x5f0
900065aa:	f204 51ac 	addw	r1, r4, #1452	; 0x5ac
900065ae:	f8a4 b5a4 	strh.w	fp, [r4, #1444]	; 0x5a4
900065b2:	920a      	str	r2, [sp, #40]	; 0x28
        touchable = touch;
900065b4:	f8a4 959c 	strh.w	r9, [r4, #1436]	; 0x59c
        : T(), up(), down()
900065b8:	f8c4 a578 	str.w	sl, [r4, #1400]	; 0x578
          touchable(false),
900065bc:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
900065c0:	f8c4 75ac 	str.w	r7, [r4, #1452]	; 0x5ac
        : x(0), y(0), width(0), height(0)
900065c4:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
900065c8:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
900065cc:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
900065d0:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
          parent(0),
900065d4:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
          nextSibling(0),
900065d8:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
          nextDrawChainElement(0),
900065dc:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
          cachedAbsX(0),
900065e0:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
900065e4:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
900065e8:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
          parent(0),
900065ec:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
          nextSibling(0),
900065f0:	f8c4 65c4 	str.w	r6, [r4, #1476]	; 0x5c4
          nextDrawChainElement(0),
900065f4:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
          cachedAbsX(0),
900065f8:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
900065fc:	f884 85d2 	strb.w	r8, [r4, #1490]	; 0x5d2
        : color(col)
90006600:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
90006604:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
90006608:	f8a4 65dc 	strh.w	r6, [r4, #1500]	; 0x5dc
        : color(0)
9000660c:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
90006610:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
90006614:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
90006618:	f8c4 65ec 	str.w	r6, [r4, #1516]	; 0x5ec
        rect.x = x;
9000661c:	f8c4 65b0 	str.w	r6, [r4, #1456]	; 0x5b0
90006620:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90006624:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
90006628:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
        T::add(borderBox);
9000662c:	9809      	ldr	r0, [sp, #36]	; 0x24
9000662e:	f00c f903 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006632:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90006636:	f204 6124 	addw	r1, r4, #1572	; 0x624
9000663a:	f8a4 b61c 	strh.w	fp, [r4, #1564]	; 0x61c
9000663e:	930b      	str	r3, [sp, #44]	; 0x2c
        touchable = touch;
90006640:	f8a4 9614 	strh.w	r9, [r4, #1556]	; 0x614
        : T(), up(), down()
90006644:	f8c4 a5f0 	str.w	sl, [r4, #1520]	; 0x5f0
          touchable(false),
90006648:	f8a4 5648 	strh.w	r5, [r4, #1608]	; 0x648
9000664c:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
        : x(0), y(0), width(0), height(0)
90006650:	f8c4 65f4 	str.w	r6, [r4, #1524]	; 0x5f4
90006654:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
90006658:	f8c4 65fc 	str.w	r6, [r4, #1532]	; 0x5fc
9000665c:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
          parent(0),
90006660:	f8c4 6604 	str.w	r6, [r4, #1540]	; 0x604
          nextSibling(0),
90006664:	f8c4 6608 	str.w	r6, [r4, #1544]	; 0x608
          nextDrawChainElement(0),
90006668:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
          cachedAbsX(0),
9000666c:	f8c4 6610 	str.w	r6, [r4, #1552]	; 0x610
90006670:	f8c4 6618 	str.w	r6, [r4, #1560]	; 0x618
90006674:	f8c4 6620 	str.w	r6, [r4, #1568]	; 0x620
          parent(0),
90006678:	f8c4 6638 	str.w	r6, [r4, #1592]	; 0x638
          nextSibling(0),
9000667c:	f8c4 663c 	str.w	r6, [r4, #1596]	; 0x63c
          nextDrawChainElement(0),
90006680:	f8c4 6640 	str.w	r6, [r4, #1600]	; 0x640
          cachedAbsX(0),
90006684:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
90006688:	f884 864a 	strb.w	r8, [r4, #1610]	; 0x64a
        : color(col)
9000668c:	f8c4 664c 	str.w	r6, [r4, #1612]	; 0x64c
90006690:	f8c4 6650 	str.w	r6, [r4, #1616]	; 0x650
90006694:	f8a4 6654 	strh.w	r6, [r4, #1620]	; 0x654
        : color(0)
90006698:	f8c4 6658 	str.w	r6, [r4, #1624]	; 0x658
9000669c:	f8c4 665c 	str.w	r6, [r4, #1628]	; 0x65c
900066a0:	f8c4 6660 	str.w	r6, [r4, #1632]	; 0x660
900066a4:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
        rect.x = x;
900066a8:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
900066ac:	f8c4 662c 	str.w	r6, [r4, #1580]	; 0x62c
900066b0:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
900066b4:	f8c4 6634 	str.w	r6, [r4, #1588]	; 0x634
        T::add(borderBox);
900066b8:	980a      	ldr	r0, [sp, #40]	; 0x28
900066ba:	f00c f8bd 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900066be:	f204 619c 	addw	r1, r4, #1692	; 0x69c
900066c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
900066c4:	f8a4 b694 	strh.w	fp, [r4, #1684]	; 0x694
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900066c8:	f04f 3bff 	mov.w	fp, #4294967295
        touchable = touch;
900066cc:	f8a4 968c 	strh.w	r9, [r4, #1676]	; 0x68c
900066d0:	f504 69dc 	add.w	r9, r4, #1760	; 0x6e0
        : T(), up(), down()
900066d4:	f8c4 a668 	str.w	sl, [r4, #1640]	; 0x668
900066d8:	f104 0a04 	add.w	sl, r4, #4
900066dc:	f8c4 769c 	str.w	r7, [r4, #1692]	; 0x69c
900066e0:	f64f 77ff 	movw	r7, #65535	; 0xffff
          touchable(false),
900066e4:	f8a4 56c0 	strh.w	r5, [r4, #1728]	; 0x6c0
        : x(0), y(0), width(0), height(0)
900066e8:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
900066ec:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
900066f0:	f8c4 6674 	str.w	r6, [r4, #1652]	; 0x674
900066f4:	f8c4 6678 	str.w	r6, [r4, #1656]	; 0x678
          parent(0),
900066f8:	f8c4 667c 	str.w	r6, [r4, #1660]	; 0x67c
          nextSibling(0),
900066fc:	f8c4 6680 	str.w	r6, [r4, #1664]	; 0x680
          nextDrawChainElement(0),
90006700:	f8c4 6684 	str.w	r6, [r4, #1668]	; 0x684
          cachedAbsX(0),
90006704:	f8c4 6688 	str.w	r6, [r4, #1672]	; 0x688
90006708:	f8c4 6690 	str.w	r6, [r4, #1680]	; 0x690
9000670c:	f8c4 6698 	str.w	r6, [r4, #1688]	; 0x698
          parent(0),
90006710:	f8c4 66b0 	str.w	r6, [r4, #1712]	; 0x6b0
          nextSibling(0),
90006714:	f8c4 66b4 	str.w	r6, [r4, #1716]	; 0x6b4
          nextDrawChainElement(0),
90006718:	f8c4 66b8 	str.w	r6, [r4, #1720]	; 0x6b8
          cachedAbsX(0),
9000671c:	f8c4 66bc 	str.w	r6, [r4, #1724]	; 0x6bc
90006720:	f884 86c2 	strb.w	r8, [r4, #1730]	; 0x6c2
        : color(col)
90006724:	f8c4 66c4 	str.w	r6, [r4, #1732]	; 0x6c4
90006728:	f8c4 66c8 	str.w	r6, [r4, #1736]	; 0x6c8
9000672c:	f8a4 66cc 	strh.w	r6, [r4, #1740]	; 0x6cc
        : color(0)
90006730:	f8c4 66d0 	str.w	r6, [r4, #1744]	; 0x6d0
90006734:	f8c4 66d4 	str.w	r6, [r4, #1748]	; 0x6d4
90006738:	f8c4 66d8 	str.w	r6, [r4, #1752]	; 0x6d8
9000673c:	f8c4 66dc 	str.w	r6, [r4, #1756]	; 0x6dc
        rect.x = x;
90006740:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
90006744:	f8c4 66a4 	str.w	r6, [r4, #1700]	; 0x6a4
90006748:	f8c4 66a8 	str.w	r6, [r4, #1704]	; 0x6a8
9000674c:	f8c4 66ac 	str.w	r6, [r4, #1708]	; 0x6ac
        T::add(borderBox);
90006750:	f00c f872 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006754:	f204 730c 	addw	r3, r4, #1804	; 0x70c
90006758:	a928      	add	r1, sp, #160	; 0xa0
9000675a:	4648      	mov	r0, r9
9000675c:	930c      	str	r3, [sp, #48]	; 0x30
9000675e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006762:	f00d ff97 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006766:	f504 62e7 	add.w	r2, r4, #1848	; 0x738
9000676a:	a928      	add	r1, sp, #160	; 0xa0
9000676c:	980c      	ldr	r0, [sp, #48]	; 0x30
9000676e:	920d      	str	r2, [sp, #52]	; 0x34
90006770:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006774:	f00d ff8e 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006778:	f204 7364 	addw	r3, r4, #1892	; 0x764
9000677c:	a928      	add	r1, sp, #160	; 0xa0
9000677e:	980d      	ldr	r0, [sp, #52]	; 0x34
90006780:	930e      	str	r3, [sp, #56]	; 0x38
90006782:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006786:	f00d ff85 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000678a:	f504 62f2 	add.w	r2, r4, #1936	; 0x790
9000678e:	a928      	add	r1, sp, #160	; 0xa0
90006790:	980e      	ldr	r0, [sp, #56]	; 0x38
90006792:	920f      	str	r2, [sp, #60]	; 0x3c
90006794:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006798:	f00d ff7c 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000679c:	f204 73bc 	addw	r3, r4, #1980	; 0x7bc
900067a0:	a928      	add	r1, sp, #160	; 0xa0
900067a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
900067a4:	9310      	str	r3, [sp, #64]	; 0x40
900067a6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900067aa:	f00d ff73 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067ae:	f504 62fd 	add.w	r2, r4, #2024	; 0x7e8
900067b2:	a928      	add	r1, sp, #160	; 0xa0
900067b4:	9810      	ldr	r0, [sp, #64]	; 0x40
900067b6:	9211      	str	r2, [sp, #68]	; 0x44
900067b8:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900067bc:	f00d ff6a 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067c0:	f604 0314 	addw	r3, r4, #2068	; 0x814
900067c4:	a928      	add	r1, sp, #160	; 0xa0
900067c6:	9811      	ldr	r0, [sp, #68]	; 0x44
900067c8:	9312      	str	r3, [sp, #72]	; 0x48
900067ca:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900067ce:	f00d ff61 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067d2:	f504 6204 	add.w	r2, r4, #2112	; 0x840
900067d6:	a928      	add	r1, sp, #160	; 0xa0
900067d8:	9812      	ldr	r0, [sp, #72]	; 0x48
900067da:	9213      	str	r2, [sp, #76]	; 0x4c
900067dc:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900067e0:	f00d ff58 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067e4:	f604 036c 	addw	r3, r4, #2156	; 0x86c
900067e8:	a928      	add	r1, sp, #160	; 0xa0
900067ea:	9813      	ldr	r0, [sp, #76]	; 0x4c
900067ec:	9314      	str	r3, [sp, #80]	; 0x50
900067ee:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
900067f2:	f00d ff4f 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067f6:	f604 0298 	addw	r2, r4, #2200	; 0x898
900067fa:	a928      	add	r1, sp, #160	; 0xa0
900067fc:	9814      	ldr	r0, [sp, #80]	; 0x50
900067fe:	9215      	str	r2, [sp, #84]	; 0x54
90006800:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006804:	f00d ff46 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006808:	f604 03c4 	addw	r3, r4, #2244	; 0x8c4
9000680c:	a928      	add	r1, sp, #160	; 0xa0
9000680e:	9815      	ldr	r0, [sp, #84]	; 0x54
90006810:	9316      	str	r3, [sp, #88]	; 0x58
90006812:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006816:	f00d ff3d 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000681a:	f504 620f 	add.w	r2, r4, #2288	; 0x8f0
9000681e:	a928      	add	r1, sp, #160	; 0xa0
90006820:	9816      	ldr	r0, [sp, #88]	; 0x58
90006822:	9217      	str	r2, [sp, #92]	; 0x5c
90006824:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006828:	f00d ff34 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000682c:	f604 131c 	addw	r3, r4, #2332	; 0x91c
90006830:	a928      	add	r1, sp, #160	; 0xa0
90006832:	9817      	ldr	r0, [sp, #92]	; 0x5c
90006834:	9318      	str	r3, [sp, #96]	; 0x60
90006836:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000683a:	f00d ff2b 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000683e:	f604 1248 	addw	r2, r4, #2376	; 0x948
90006842:	a928      	add	r1, sp, #160	; 0xa0
90006844:	9818      	ldr	r0, [sp, #96]	; 0x60
90006846:	9219      	str	r2, [sp, #100]	; 0x64
90006848:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000684c:	f00d ff22 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006850:	f604 1374 	addw	r3, r4, #2420	; 0x974
90006854:	a928      	add	r1, sp, #160	; 0xa0
90006856:	9819      	ldr	r0, [sp, #100]	; 0x64
90006858:	931a      	str	r3, [sp, #104]	; 0x68
9000685a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000685e:	f00d ff19 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006862:	f504 621a 	add.w	r2, r4, #2464	; 0x9a0
90006866:	a928      	add	r1, sp, #160	; 0xa0
90006868:	981a      	ldr	r0, [sp, #104]	; 0x68
9000686a:	921b      	str	r2, [sp, #108]	; 0x6c
9000686c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006870:	f00d ff10 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006874:	f604 13cc 	addw	r3, r4, #2508	; 0x9cc
90006878:	a928      	add	r1, sp, #160	; 0xa0
9000687a:	981b      	ldr	r0, [sp, #108]	; 0x6c
9000687c:	931c      	str	r3, [sp, #112]	; 0x70
9000687e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90006882:	f00d ff07 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006886:	a928      	add	r1, sp, #160	; 0xa0
90006888:	981c      	ldr	r0, [sp, #112]	; 0x70
9000688a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
9000688e:	f00d ff01 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006892:	4be9      	ldr	r3, [pc, #932]	; (90006c38 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006894:	4ae9      	ldr	r2, [pc, #932]	; (90006c3c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
90006896:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
9000689a:	f8c4 2a24 	str.w	r2, [r4, #2596]	; 0xa24
9000689e:	f604 226c 	addw	r2, r4, #2668	; 0xa6c
900068a2:	4be7      	ldr	r3, [pc, #924]	; (90006c40 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
900068a4:	4610      	mov	r0, r2
          touchable(false),
900068a6:	f8a4 5a1c 	strh.w	r5, [r4, #2588]	; 0xa1c
900068aa:	f8a4 5a48 	strh.w	r5, [r4, #2632]	; 0xa48
900068ae:	ee0b 2a10 	vmov	s22, r2
900068b2:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
        : x(0), y(0), width(0), height(0)
900068b6:	f8c4 69fc 	str.w	r6, [r4, #2556]	; 0x9fc
900068ba:	f8c4 6a00 	str.w	r6, [r4, #2560]	; 0xa00
900068be:	f8c4 6a04 	str.w	r6, [r4, #2564]	; 0xa04
900068c2:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
          parent(0),
900068c6:	f8c4 6a0c 	str.w	r6, [r4, #2572]	; 0xa0c
          nextSibling(0),
900068ca:	f8c4 6a10 	str.w	r6, [r4, #2576]	; 0xa10
          nextDrawChainElement(0),
900068ce:	f8c4 6a14 	str.w	r6, [r4, #2580]	; 0xa14
          cachedAbsX(0),
900068d2:	f8c4 6a18 	str.w	r6, [r4, #2584]	; 0xa18
900068d6:	f884 7a1e 	strb.w	r7, [r4, #2590]	; 0xa1e
        : color(col)
900068da:	f8c4 6a20 	str.w	r6, [r4, #2592]	; 0xa20
        : x(0), y(0), width(0), height(0)
900068de:	f8c4 6a28 	str.w	r6, [r4, #2600]	; 0xa28
900068e2:	f8c4 6a2c 	str.w	r6, [r4, #2604]	; 0xa2c
900068e6:	f8c4 6a30 	str.w	r6, [r4, #2608]	; 0xa30
900068ea:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
          parent(0),
900068ee:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
          nextSibling(0),
900068f2:	f8c4 6a3c 	str.w	r6, [r4, #2620]	; 0xa3c
          nextDrawChainElement(0),
900068f6:	f8c4 6a40 	str.w	r6, [r4, #2624]	; 0xa40
          cachedAbsX(0),
900068fa:	f8c4 6a44 	str.w	r6, [r4, #2628]	; 0xa44
900068fe:	f8a4 7a50 	strh.w	r7, [r4, #2640]	; 0xa50
        : color(col)
90006902:	f8c4 6a54 	str.w	r6, [r4, #2644]	; 0xa54
90006906:	f8a4 6a58 	strh.w	r6, [r4, #2648]	; 0xa58
9000690a:	f8c4 8a5a 	str.w	r8, [r4, #2650]	; 0xa5a
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000690e:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
              text(0)
90006912:	f8c4 6a68 	str.w	r6, [r4, #2664]	; 0xa68
90006916:	f8c4 ba64 	str.w	fp, [r4, #2660]	; 0xa64
9000691a:	f00e fecf 	bl	900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>
9000691e:	4bc8      	ldr	r3, [pc, #800]	; (90006c40 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
        : TextAreaWithWildcardBase(), wc1(0)
90006920:	49c8      	ldr	r1, [pc, #800]	; (90006c44 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
        : pobject(pObject), pmemfun(pmemfun_1)
90006922:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
90006926:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
9000692a:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
9000692e:	f8c4 3b1c 	str.w	r3, [r4, #2844]	; 0xb1c
          touchable(false),
90006932:	f8a4 5acc 	strh.w	r5, [r4, #2764]	; 0xacc
90006936:	f8a4 5b18 	strh.w	r5, [r4, #2840]	; 0xb18
9000693a:	f8c4 1aa8 	str.w	r1, [r4, #2728]	; 0xaa8
9000693e:	f8a4 7b20 	strh.w	r7, [r4, #2848]	; 0xb20
        : x(0), y(0), width(0), height(0)
90006942:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
90006946:	f8c4 6ab0 	str.w	r6, [r4, #2736]	; 0xab0
9000694a:	f8c4 6ab4 	str.w	r6, [r4, #2740]	; 0xab4
9000694e:	f8c4 6ab8 	str.w	r6, [r4, #2744]	; 0xab8
          parent(0),
90006952:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
          nextSibling(0),
90006956:	f8c4 6ac0 	str.w	r6, [r4, #2752]	; 0xac0
          nextDrawChainElement(0),
9000695a:	f8c4 6ac4 	str.w	r6, [r4, #2756]	; 0xac4
          cachedAbsX(0),
9000695e:	f8c4 6ac8 	str.w	r6, [r4, #2760]	; 0xac8
90006962:	f8a4 bad4 	strh.w	fp, [r4, #2772]	; 0xad4
        : color(col)
90006966:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000696a:	f8a4 6adc 	strh.w	r6, [r4, #2780]	; 0xadc
9000696e:	f8c4 8ade 	str.w	r8, [r4, #2782]	; 0xade
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006972:	f8c4 6ae4 	str.w	r6, [r4, #2788]	; 0xae4
90006976:	f8c4 bae8 	str.w	fp, [r4, #2792]	; 0xae8
              text(0)
9000697a:	f8c4 6aec 	str.w	r6, [r4, #2796]	; 0xaec
9000697e:	f8c4 6af0 	str.w	r6, [r4, #2800]	; 0xaf0
        : x(0), y(0), width(0), height(0)
90006982:	f8c4 6af8 	str.w	r6, [r4, #2808]	; 0xaf8
90006986:	f8c4 6afc 	str.w	r6, [r4, #2812]	; 0xafc
9000698a:	f8c4 6b00 	str.w	r6, [r4, #2816]	; 0xb00
9000698e:	f8c4 6b04 	str.w	r6, [r4, #2820]	; 0xb04
          parent(0),
90006992:	f8c4 6b08 	str.w	r6, [r4, #2824]	; 0xb08
          nextSibling(0),
90006996:	f8c4 6b0c 	str.w	r6, [r4, #2828]	; 0xb0c
          nextDrawChainElement(0),
9000699a:	f8c4 6b10 	str.w	r6, [r4, #2832]	; 0xb10
          cachedAbsX(0),
9000699e:	f8c4 6b14 	str.w	r6, [r4, #2836]	; 0xb14
        : color(col)
900069a2:	f8c4 6b24 	str.w	r6, [r4, #2852]	; 0xb24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900069a6:	f8a4 6b28 	strh.w	r6, [r4, #2856]	; 0xb28
900069aa:	f8c4 8b2a 	str.w	r8, [r4, #2858]	; 0xb2a
900069ae:	f8c4 1af4 	str.w	r1, [r4, #2804]	; 0xaf4
900069b2:	49a5      	ldr	r1, [pc, #660]	; (90006c48 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900069b4:	f8c4 6b30 	str.w	r6, [r4, #2864]	; 0xb30
900069b8:	f8c4 bb34 	str.w	fp, [r4, #2868]	; 0xb34
              text(0)
900069bc:	f8c4 6b38 	str.w	r6, [r4, #2872]	; 0xb38
900069c0:	f8c4 6b3c 	str.w	r6, [r4, #2876]	; 0xb3c
900069c4:	f8c2 179c 	str.w	r1, [r2, #1948]	; 0x79c
900069c8:	49a0      	ldr	r1, [pc, #640]	; (90006c4c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
900069ca:	f8c2 47a0 	str.w	r4, [r2, #1952]	; 0x7a0
900069ce:	f8c2 17a4 	str.w	r1, [r2, #1956]	; 0x7a4
900069d2:	499f      	ldr	r1, [pc, #636]	; (90006c50 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
900069d4:	f8c2 67a8 	str.w	r6, [r2, #1960]	; 0x7a8
900069d8:	f8c2 17ac 	str.w	r1, [r2, #1964]	; 0x7ac
900069dc:	499d      	ldr	r1, [pc, #628]	; (90006c54 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
900069de:	f8c2 47b0 	str.w	r4, [r2, #1968]	; 0x7b0
900069e2:	f8c2 17b4 	str.w	r1, [r2, #1972]	; 0x7b4
900069e6:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
900069ea:	f8c2 67b8 	str.w	r6, [r2, #1976]	; 0x7b8
900069ee:	f00f fe6f 	bl	900166d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
900069f2:	4d99      	ldr	r5, [pc, #612]	; (90006c58 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
        color = newColor;
900069f4:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
900069f8:	f104 0140 	add.w	r1, r4, #64	; 0x40
900069fc:	4650      	mov	r0, sl
900069fe:	64a5      	str	r5, [r4, #72]	; 0x48
90006a00:	66a2      	str	r2, [r4, #104]	; 0x68
90006a02:	6466      	str	r6, [r4, #68]	; 0x44
90006a04:	f00b ff18 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006a08:	2204      	movs	r2, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90006a0a:	a928      	add	r1, sp, #160	; 0xa0
90006a0c:	ee1a 0a90 	vmov	r0, s21
90006a10:	f8ad 20a0 	strh.w	r2, [sp, #160]	; 0xa0
90006a14:	f00e fe79 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006a18:	4631      	mov	r1, r6
90006a1a:	ee1a 0a90 	vmov	r0, s21
90006a1e:	e9c4 651c 	strd	r6, r5, [r4, #112]	; 0x70
90006a22:	f00d fdf2 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006a26:	ee1a 1a90 	vmov	r1, s21
90006a2a:	4650      	mov	r0, sl
90006a2c:	4d8b      	ldr	r5, [pc, #556]	; (90006c5c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90006a2e:	f00b ff03 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006a32:	9b03      	ldr	r3, [sp, #12]
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006a34:	22a0      	movs	r2, #160	; 0xa0
90006a36:	ee18 0a10 	vmov	r0, s16
90006a3a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90006a3e:	4b88      	ldr	r3, [pc, #544]	; (90006c60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90006a40:	4611      	mov	r1, r2
90006a42:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
90006a46:	f8a4 b118 	strh.w	fp, [r4, #280]	; 0x118
90006a4a:	e9c4 5327 	strd	r5, r3, [r4, #156]	; 0x9c
90006a4e:	f00d fc61 	bl	90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006a52:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006a56:	21a0      	movs	r1, #160	; 0xa0
90006a58:	ee18 0a10 	vmov	r0, s16
90006a5c:	f00d fc65 	bl	9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006a60:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90006a64:	f604 2224 	addw	r2, r4, #2596	; 0xa24
90006a68:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006a6c:	9203      	str	r2, [sp, #12]
90006a6e:	d007      	beq.n	90006a80 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c0>
        lineWidthQ5 = widthQ5;
90006a70:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006a74:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90006a78:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
90006a7c:	f00d fb54 	bl	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006a80:	2101      	movs	r1, #1
90006a82:	ee18 0a10 	vmov	r0, s16
90006a86:	f00d fc5b 	bl	90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006a8a:	ee18 1a10 	vmov	r1, s16
90006a8e:	4650      	mov	r0, sl
90006a90:	f00b fed2 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006a94:	9b1e      	ldr	r3, [sp, #120]	; 0x78
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006a96:	22a0      	movs	r2, #160	; 0xa0
90006a98:	4872      	ldr	r0, [pc, #456]	; (90006c64 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90006a9a:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90006a9e:	f04f 33ff 	mov.w	r3, #4294967295
90006aa2:	4611      	mov	r1, r2
90006aa4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90006aa8:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
90006aac:	4b6c      	ldr	r3, [pc, #432]	; (90006c60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90006aae:	e9c4 0348 	strd	r0, r3, [r4, #288]	; 0x120
90006ab2:	ee18 0a90 	vmov	r0, s17
90006ab6:	f00d fc2d 	bl	90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006aba:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006abe:	21a0      	movs	r1, #160	; 0xa0
90006ac0:	ee18 0a90 	vmov	r0, s17
90006ac4:	f00d fc31 	bl	9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006ac8:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
90006acc:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006ad0:	d007      	beq.n	90006ae2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa22>
        lineWidthQ5 = widthQ5;
90006ad2:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006ad6:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90006ada:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        updateCachedShape();
90006ade:	f00d fb23 	bl	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006ae2:	2101      	movs	r1, #1
90006ae4:	ee18 0a90 	vmov	r0, s17
90006ae8:	f00d fc2a 	bl	90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006aec:	ee18 1a90 	vmov	r1, s17
90006af0:	4650      	mov	r0, sl
90006af2:	f00b fea1 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006af6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006af8:	22a0      	movs	r2, #160	; 0xa0
90006afa:	495b      	ldr	r1, [pc, #364]	; (90006c68 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90006afc:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
90006b00:	f04f 33ff 	mov.w	r3, #4294967295
90006b04:	ee19 0a10 	vmov	r0, s18
90006b08:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90006b0c:	f8a4 3220 	strh.w	r3, [r4, #544]	; 0x220
90006b10:	4b56      	ldr	r3, [pc, #344]	; (90006c6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90006b12:	e9c4 1369 	strd	r1, r3, [r4, #420]	; 0x1a4
90006b16:	4611      	mov	r1, r2
90006b18:	f00d fbfc 	bl	90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b1c:	22a0      	movs	r2, #160	; 0xa0
90006b1e:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006b22:	ee19 0a10 	vmov	r0, s18
90006b26:	f00d fc00 	bl	9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006b2a:	f8d4 31dc 	ldr.w	r3, [r4, #476]	; 0x1dc
90006b2e:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006b32:	d007      	beq.n	90006b44 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa84>
        lineWidthQ5 = widthQ5;
90006b34:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006b38:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90006b3c:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        updateCachedShape();
90006b40:	f00d faf2 	bl	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006b44:	2101      	movs	r1, #1
90006b46:	ee19 0a10 	vmov	r0, s18
90006b4a:	f00d fbf9 	bl	90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006b4e:	ee19 1a10 	vmov	r1, s18
90006b52:	4650      	mov	r0, sl
90006b54:	f8df b130 	ldr.w	fp, [pc, #304]	; 90006c88 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90006b58:	f00b fe6e 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006b5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b5e:	22a0      	movs	r2, #160	; 0xa0
90006b60:	ee19 0a90 	vmov	r0, s19
90006b64:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
90006b68:	f04f 33ff 	mov.w	r3, #4294967295
90006b6c:	4611      	mov	r1, r2
90006b6e:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
90006b72:	f8a4 32a4 	strh.w	r3, [r4, #676]	; 0x2a4
90006b76:	4b3e      	ldr	r3, [pc, #248]	; (90006c70 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90006b78:	e9c4 b38a 	strd	fp, r3, [r4, #552]	; 0x228
90006b7c:	f00d fbca 	bl	90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b80:	22a0      	movs	r2, #160	; 0xa0
90006b82:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006b86:	ee19 0a90 	vmov	r0, s19
90006b8a:	f00d fbce 	bl	9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006b8e:	f8d4 3260 	ldr.w	r3, [r4, #608]	; 0x260
90006b92:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006b96:	d007      	beq.n	90006ba8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xae8>
        lineWidthQ5 = widthQ5;
90006b98:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006b9c:	ee19 0a90 	vmov	r0, s19
        lineWidthQ5 = widthQ5;
90006ba0:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        updateCachedShape();
90006ba4:	f00d fac0 	bl	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006ba8:	2101      	movs	r1, #1
90006baa:	ee19 0a90 	vmov	r0, s19
90006bae:	f00d fbc7 	bl	90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006bb2:	ee19 1a90 	vmov	r1, s19
90006bb6:	4650      	mov	r0, sl
90006bb8:	f04f 0800 	mov.w	r8, #0
90006bbc:	f00b fe3c 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006bc0:	4b2c      	ldr	r3, [pc, #176]	; (90006c74 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        borderUp = borderColorReleased;
90006bc2:	492d      	ldr	r1, [pc, #180]	; (90006c78 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        down = colorPressed;
90006bc4:	4a2d      	ldr	r2, [pc, #180]	; (90006c7c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>)
        borderUp = borderColorReleased;
90006bc6:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        borderDown = borderColorPressed;
90006bca:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006bce:	f894 02d4 	ldrb.w	r0, [r4, #724]	; 0x2d4
        borderDown = borderColorPressed;
90006bd2:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006bd6:	e9c4 83b8 	strd	r8, r3, [r4, #736]	; 0x2e0
        borderSize = size;
90006bda:	2305      	movs	r3, #5
90006bdc:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
        handlePressedUpdated();
90006be0:	f8d4 12a8 	ldr.w	r1, [r4, #680]	; 0x2a8
90006be4:	f8a4 330c 	strh.w	r3, [r4, #780]	; 0x30c
        down = colorPressed;
90006be8:	4b25      	ldr	r3, [pc, #148]	; (90006c80 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>)
90006bea:	e9c4 32c4 	strd	r3, r2, [r4, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90006bee:	2800      	cmp	r0, #0
90006bf0:	f000 8556 	beq.w	900076a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e0>
90006bf4:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006bf6:	f504 7247 	add.w	r2, r4, #796	; 0x31c
90006bfa:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
90006bfe:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006c00:	4e20      	ldr	r6, [pc, #128]	; (90006c84 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>)
90006c02:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
        alpha = newAlpha;
90006c06:	2300      	movs	r3, #0
90006c08:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
        handleAlphaUpdated();
90006c0c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006c10:	42b2      	cmp	r2, r6
90006c12:	f040 8580 	bne.w	90007716 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1656>
        alpha = newAlpha;
90006c16:	f884 3302 	strb.w	r3, [r4, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90006c1a:	f242 759c 	movw	r5, #10140	; 0x279c
90006c1e:	4b15      	ldr	r3, [pc, #84]	; (90006c74 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90006c20:	f8df c068 	ldr.w	ip, [pc, #104]	; 90006c8c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
90006c24:	ee1a 1a10 	vmov	r1, s20
90006c28:	4425      	add	r5, r4
90006c2a:	4650      	mov	r0, sl
90006c2c:	e9c4 c3ab 	strd	ip, r3, [r4, #684]	; 0x2ac
        action = &callback;
90006c30:	f8c4 52d8 	str.w	r5, [r4, #728]	; 0x2d8
90006c34:	e02c      	b.n	90006c90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbd0>
90006c36:	bf00      	nop
90006c38:	9002d88c 	.word	0x9002d88c
90006c3c:	9002d7fc 	.word	0x9002d7fc
90006c40:	9002bfac 	.word	0x9002bfac
90006c44:	9002cc3c 	.word	0x9002cc3c
90006c48:	9002ce7c 	.word	0x9002ce7c
90006c4c:	90005fbd 	.word	0x90005fbd
90006c50:	9002ce94 	.word	0x9002ce94
90006c54:	90005fa5 	.word	0x90005fa5
90006c58:	011001e0 	.word	0x011001e0
90006c5c:	0007009c 	.word	0x0007009c
90006c60:	0102000f 	.word	0x0102000f
90006c64:	00070123 	.word	0x00070123
90006c68:	004e0038 	.word	0x004e0038
90006c6c:	000f0167 	.word	0x000f0167
90006c70:	000f0166 	.word	0x000f0166
90006c74:	00470064 	.word	0x00470064
90006c78:	ff003366 	.word	0xff003366
90006c7c:	ff0099cc 	.word	0xff0099cc
90006c80:	ff006699 	.word	0xff006699
90006c84:	90004715 	.word	0x90004715
90006c88:	00b90038 	.word	0x00b90038
90006c8c:	00070038 	.word	0x00070038
90006c90:	f00b fdd2 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006c94:	4bd8      	ldr	r3, [pc, #864]	; (90006ff8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderUp = borderColorReleased;
90006c96:	49d9      	ldr	r1, [pc, #868]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006c98:	f04f 0e00 	mov.w	lr, #0
        down = colorPressed;
90006c9c:	4ad8      	ldr	r2, [pc, #864]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006c9e:	f8c4 1390 	str.w	r1, [r4, #912]	; 0x390
        borderDown = borderColorPressed;
90006ca2:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006ca6:	f894 034c 	ldrb.w	r0, [r4, #844]	; 0x34c
        borderDown = borderColorPressed;
90006caa:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006cae:	e9c4 e3d6 	strd	lr, r3, [r4, #856]	; 0x358
        borderSize = size;
90006cb2:	2305      	movs	r3, #5
90006cb4:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
        handlePressedUpdated();
90006cb8:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
90006cbc:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        down = colorPressed;
90006cc0:	4bd0      	ldr	r3, [pc, #832]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006cc2:	e9c4 32e2 	strd	r3, r2, [r4, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90006cc6:	2800      	cmp	r0, #0
90006cc8:	f000 84e6 	beq.w	90007698 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d8>
        color = newColor;
90006ccc:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006cce:	f504 7265 	add.w	r2, r4, #916	; 0x394
90006cd2:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
90006cd6:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006cd8:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        alpha = newAlpha;
90006cdc:	2300      	movs	r3, #0
90006cde:	f884 334d 	strb.w	r3, [r4, #845]	; 0x34d
        handleAlphaUpdated();
90006ce2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006ce6:	42b2      	cmp	r2, r6
90006ce8:	f040 8511 	bne.w	9000770e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164e>
        alpha = newAlpha;
90006cec:	f884 337a 	strb.w	r3, [r4, #890]	; 0x37a
90006cf0:	4bc1      	ldr	r3, [pc, #772]	; (90006ff8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90006cf2:	2700      	movs	r7, #0
90006cf4:	48c4      	ldr	r0, [pc, #784]	; (90007008 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90006cf6:	9904      	ldr	r1, [sp, #16]
        action = &callback;
90006cf8:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
90006cfc:	e9c4 03c9 	strd	r0, r3, [r4, #804]	; 0x324
90006d00:	4650      	mov	r0, sl
90006d02:	f00b fd99 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006d06:	4bc1      	ldr	r3, [pc, #772]	; (9000700c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90006d08:	49bc      	ldr	r1, [pc, #752]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        down = colorPressed;
90006d0a:	4abd      	ldr	r2, [pc, #756]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006d0c:	f8c4 1408 	str.w	r1, [r4, #1032]	; 0x408
        borderDown = borderColorPressed;
90006d10:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006d14:	f894 03c4 	ldrb.w	r0, [r4, #964]	; 0x3c4
        borderDown = borderColorPressed;
90006d18:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006d1c:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
90006d20:	e9c4 73f4 	strd	r7, r3, [r4, #976]	; 0x3d0
        borderSize = size;
90006d24:	2305      	movs	r3, #5
        borderDown = borderColorPressed;
90006d26:	f8c4 140c 	str.w	r1, [r4, #1036]	; 0x40c
        handlePressedUpdated();
90006d2a:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
90006d2e:	f8a4 33fc 	strh.w	r3, [r4, #1020]	; 0x3fc
        up = colorReleased;
90006d32:	4bb4      	ldr	r3, [pc, #720]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006d34:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90006d38:	2800      	cmp	r0, #0
90006d3a:	f000 84a9 	beq.w	90007690 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d0>
        color = newColor;
90006d3e:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006d40:	f204 420c 	addw	r2, r4, #1036	; 0x40c
90006d44:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
90006d48:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006d4a:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        alpha = newAlpha;
90006d4e:	2300      	movs	r3, #0
90006d50:	f884 33c5 	strb.w	r3, [r4, #965]	; 0x3c5
        handleAlphaUpdated();
90006d54:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006d58:	42b2      	cmp	r2, r6
90006d5a:	f040 84d4 	bne.w	90007706 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1646>
        alpha = newAlpha;
90006d5e:	f884 33f2 	strb.w	r3, [r4, #1010]	; 0x3f2
90006d62:	4aab      	ldr	r2, [pc, #684]	; (90007010 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
90006d64:	4650      	mov	r0, sl
90006d66:	4ba9      	ldr	r3, [pc, #676]	; (9000700c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
90006d68:	9905      	ldr	r1, [sp, #20]
        action = &callback;
90006d6a:	f8c4 53c8 	str.w	r5, [r4, #968]	; 0x3c8
90006d6e:	e9c4 23e7 	strd	r2, r3, [r4, #924]	; 0x39c
90006d72:	f00b fd61 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006d76:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006d78:	49a0      	ldr	r1, [pc, #640]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006d7a:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
90006d7e:	4ba5      	ldr	r3, [pc, #660]	; (90007014 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
90006d80:	f8c4 1480 	str.w	r1, [r4, #1152]	; 0x480
        borderDown = borderColorPressed;
90006d84:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006d88:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
        borderSize = size;
90006d8c:	2305      	movs	r3, #5
90006d8e:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006d92:	4a9b      	ldr	r2, [pc, #620]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006d94:	f8a4 3474 	strh.w	r3, [r4, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90006d98:	f894 043c 	ldrb.w	r0, [r4, #1084]	; 0x43c
        up = colorReleased;
90006d9c:	4b99      	ldr	r3, [pc, #612]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006d9e:	f8c4 1484 	str.w	r1, [r4, #1156]	; 0x484
        up = colorReleased;
90006da2:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        handlePressedUpdated();
90006da6:	f8d4 1410 	ldr.w	r1, [r4, #1040]	; 0x410
        down = colorPressed;
90006daa:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90006dae:	2800      	cmp	r0, #0
90006db0:	f000 846a 	beq.w	90007688 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c8>
        color = newColor;
90006db4:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006db6:	f204 4284 	addw	r2, r4, #1156	; 0x484
90006dba:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
90006dbe:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006dc0:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
        alpha = newAlpha;
90006dc4:	2300      	movs	r3, #0
90006dc6:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
        handleAlphaUpdated();
90006dca:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006dce:	42b2      	cmp	r2, r6
90006dd0:	f040 8495 	bne.w	900076fe <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x163e>
        alpha = newAlpha;
90006dd4:	f884 346a 	strb.w	r3, [r4, #1130]	; 0x46a
90006dd8:	4b8f      	ldr	r3, [pc, #572]	; (90007018 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
90006dda:	4650      	mov	r0, sl
90006ddc:	9906      	ldr	r1, [sp, #24]
90006dde:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
90006de2:	4b8c      	ldr	r3, [pc, #560]	; (90007014 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
        action = &callback;
90006de4:	f8c4 5440 	str.w	r5, [r4, #1088]	; 0x440
90006de8:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
90006dec:	f00b fd24 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006df0:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006df2:	4982      	ldr	r1, [pc, #520]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006df4:	f8c4 34c0 	str.w	r3, [r4, #1216]	; 0x4c0
90006df8:	4b88      	ldr	r3, [pc, #544]	; (9000701c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
90006dfa:	f8c4 14f8 	str.w	r1, [r4, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90006dfe:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006e02:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        borderSize = size;
90006e06:	2305      	movs	r3, #5
90006e08:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006e0c:	4a7c      	ldr	r2, [pc, #496]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006e0e:	f8a4 34ec 	strh.w	r3, [r4, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90006e12:	f894 04b4 	ldrb.w	r0, [r4, #1204]	; 0x4b4
        up = colorReleased;
90006e16:	4b7b      	ldr	r3, [pc, #492]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006e18:	f8c4 14fc 	str.w	r1, [r4, #1276]	; 0x4fc
        up = colorReleased;
90006e1c:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
90006e20:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
        down = colorPressed;
90006e24:	f8c4 24f4 	str.w	r2, [r4, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90006e28:	2800      	cmp	r0, #0
90006e2a:	f000 8429 	beq.w	90007680 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c0>
        color = newColor;
90006e2e:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006e30:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
90006e34:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
90006e38:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006e3a:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        alpha = newAlpha;
90006e3e:	2300      	movs	r3, #0
90006e40:	f884 34b5 	strb.w	r3, [r4, #1205]	; 0x4b5
        handleAlphaUpdated();
90006e44:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006e48:	42b2      	cmp	r2, r6
90006e4a:	f040 8454 	bne.w	900076f6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1636>
        alpha = newAlpha;
90006e4e:	f884 34e2 	strb.w	r3, [r4, #1250]	; 0x4e2
90006e52:	4b73      	ldr	r3, [pc, #460]	; (90007020 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
90006e54:	4650      	mov	r0, sl
90006e56:	9907      	ldr	r1, [sp, #28]
90006e58:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
90006e5c:	4b6f      	ldr	r3, [pc, #444]	; (9000701c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
        action = &callback;
90006e5e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
90006e62:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
90006e66:	f00b fce7 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e6a:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006e6c:	4963      	ldr	r1, [pc, #396]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006e6e:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
90006e72:	4b6c      	ldr	r3, [pc, #432]	; (90007024 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006e74:	f8c4 1570 	str.w	r1, [r4, #1392]	; 0x570
        borderDown = borderColorPressed;
90006e78:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006e7c:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
        borderSize = size;
90006e80:	2305      	movs	r3, #5
90006e82:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006e86:	4a5e      	ldr	r2, [pc, #376]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006e88:	f8a4 3564 	strh.w	r3, [r4, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90006e8c:	f894 052c 	ldrb.w	r0, [r4, #1324]	; 0x52c
        up = colorReleased;
90006e90:	4b5c      	ldr	r3, [pc, #368]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006e92:	f8c4 1574 	str.w	r1, [r4, #1396]	; 0x574
        up = colorReleased;
90006e96:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        handlePressedUpdated();
90006e9a:	f8d4 1500 	ldr.w	r1, [r4, #1280]	; 0x500
        down = colorPressed;
90006e9e:	f8c4 256c 	str.w	r2, [r4, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90006ea2:	2800      	cmp	r0, #0
90006ea4:	f000 83e9 	beq.w	9000767a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15ba>
        color = newColor;
90006ea8:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006eaa:	f204 5274 	addw	r2, r4, #1396	; 0x574
90006eae:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
90006eb2:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006eb4:	f8c4 3560 	str.w	r3, [r4, #1376]	; 0x560
        alpha = newAlpha;
90006eb8:	2300      	movs	r3, #0
90006eba:	f884 352d 	strb.w	r3, [r4, #1325]	; 0x52d
        handleAlphaUpdated();
90006ebe:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006ec2:	42b2      	cmp	r2, r6
90006ec4:	f040 8413 	bne.w	900076ee <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x162e>
        alpha = newAlpha;
90006ec8:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
90006ecc:	4b56      	ldr	r3, [pc, #344]	; (90007028 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf68>)
90006ece:	4650      	mov	r0, sl
90006ed0:	4e54      	ldr	r6, [pc, #336]	; (90007024 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006ed2:	9908      	ldr	r1, [sp, #32]
90006ed4:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        action = &callback;
90006ed8:	f8c4 5530 	str.w	r5, [r4, #1328]	; 0x530
90006edc:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006ee0:	f00b fcaa 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006ee4:	4945      	ldr	r1, [pc, #276]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006ee6:	2300      	movs	r3, #0
        down = colorPressed;
90006ee8:	4a45      	ldr	r2, [pc, #276]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006eea:	f8c4 15e8 	str.w	r1, [r4, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90006eee:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006ef2:	f8c4 35b0 	str.w	r3, [r4, #1456]	; 0x5b0
        borderSize = size;
90006ef6:	2305      	movs	r3, #5
90006ef8:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006efc:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90006f00:	f8a4 35dc 	strh.w	r3, [r4, #1500]	; 0x5dc
90006f04:	f8c4 15ec 	str.w	r1, [r4, #1516]	; 0x5ec
        up = colorReleased;
90006f08:	4b3e      	ldr	r3, [pc, #248]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90006f0a:	f894 15a4 	ldrb.w	r1, [r4, #1444]	; 0x5a4
        up = colorReleased;
90006f0e:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
        down = colorPressed;
90006f12:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
90006f16:	2900      	cmp	r1, #0
90006f18:	f000 83ac 	beq.w	90007674 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15b4>
        color = newColor;
90006f1c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006f1e:	f204 52ec 	addw	r2, r4, #1516	; 0x5ec
90006f22:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
        alpha = newAlpha;
90006f26:	2600      	movs	r6, #0
90006f28:	6813      	ldr	r3, [r2, #0]
90006f2a:	4650      	mov	r0, sl
90006f2c:	9909      	ldr	r1, [sp, #36]	; 0x24
        borderColor = colorBorder;
90006f2e:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
90006f32:	4b3e      	ldr	r3, [pc, #248]	; (9000702c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
        action = &callback;
90006f34:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
90006f38:	f8c4 357c 	str.w	r3, [r4, #1404]	; 0x57c
90006f3c:	4b39      	ldr	r3, [pc, #228]	; (90007024 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
        alpha = newAlpha;
90006f3e:	f884 65a5 	strb.w	r6, [r4, #1445]	; 0x5a5
90006f42:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        alpha = newAlpha;
90006f46:	f884 65d2 	strb.w	r6, [r4, #1490]	; 0x5d2
90006f4a:	f00b fc75 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006f4e:	492b      	ldr	r1, [pc, #172]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006f50:	4b37      	ldr	r3, [pc, #220]	; (90007030 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
90006f52:	f8c4 1660 	str.w	r1, [r4, #1632]	; 0x660
        borderDown = borderColorPressed;
90006f56:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006f5a:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        borderSize = size;
90006f5e:	2305      	movs	r3, #5
90006f60:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006f64:	4a26      	ldr	r2, [pc, #152]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006f66:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
        borderDown = borderColorPressed;
90006f6a:	f8c4 1664 	str.w	r1, [r4, #1636]	; 0x664
        up = colorReleased;
90006f6e:	4b25      	ldr	r3, [pc, #148]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90006f70:	f894 161c 	ldrb.w	r1, [r4, #1564]	; 0x61c
90006f74:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
        up = colorReleased;
90006f78:	f8c4 3658 	str.w	r3, [r4, #1624]	; 0x658
        down = colorPressed;
90006f7c:	f8c4 265c 	str.w	r2, [r4, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
90006f80:	2900      	cmp	r1, #0
90006f82:	f000 8374 	beq.w	9000766e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15ae>
        color = newColor;
90006f86:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006f88:	f204 6264 	addw	r2, r4, #1636	; 0x664
90006f8c:	f8c4 364c 	str.w	r3, [r4, #1612]	; 0x64c
90006f90:	2600      	movs	r6, #0
90006f92:	6813      	ldr	r3, [r2, #0]
90006f94:	4650      	mov	r0, sl
90006f96:	4f26      	ldr	r7, [pc, #152]	; (90007030 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
        borderColor = colorBorder;
90006f98:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
90006f9c:	4b25      	ldr	r3, [pc, #148]	; (90007034 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>)
90006f9e:	990a      	ldr	r1, [sp, #40]	; 0x28
90006fa0:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
        action = &callback;
90006fa4:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        alpha = newAlpha;
90006fa8:	f884 661d 	strb.w	r6, [r4, #1565]	; 0x61d
        alpha = newAlpha;
90006fac:	f884 664a 	strb.w	r6, [r4, #1610]	; 0x64a
90006fb0:	f8c4 75f8 	str.w	r7, [r4, #1528]	; 0x5f8
90006fb4:	f00b fc40 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006fb8:	4910      	ldr	r1, [pc, #64]	; (90006ffc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderSize = size;
90006fba:	2305      	movs	r3, #5
        down = colorPressed;
90006fbc:	4a10      	ldr	r2, [pc, #64]	; (90007000 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006fbe:	f8c4 16d8 	str.w	r1, [r4, #1752]	; 0x6d8
        borderDown = borderColorPressed;
90006fc2:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006fc6:	f8a4 36cc 	strh.w	r3, [r4, #1740]	; 0x6cc
90006fca:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        up = colorReleased;
90006fce:	4b0d      	ldr	r3, [pc, #52]	; (90007004 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006fd0:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
        borderDown = borderColorPressed;
90006fd4:	f8c4 16dc 	str.w	r1, [r4, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90006fd8:	f894 1694 	ldrb.w	r1, [r4, #1684]	; 0x694
90006fdc:	f8c4 76a4 	str.w	r7, [r4, #1700]	; 0x6a4
        up = colorReleased;
90006fe0:	f8c4 36d0 	str.w	r3, [r4, #1744]	; 0x6d0
        down = colorPressed;
90006fe4:	f8c4 26d4 	str.w	r2, [r4, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90006fe8:	2900      	cmp	r1, #0
90006fea:	f000 833d 	beq.w	90007668 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15a8>
        color = newColor;
90006fee:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006ff0:	f204 62dc 	addw	r2, r4, #1756	; 0x6dc
90006ff4:	e020      	b.n	90007038 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
90006ff6:	bf00      	nop
90006ff8:	00610064 	.word	0x00610064
90006ffc:	ff003366 	.word	0xff003366
90007000:	ff0099cc 	.word	0xff0099cc
90007004:	ff006699 	.word	0xff006699
90007008:	00580038 	.word	0x00580038
9000700c:	00610070 	.word	0x00610070
90007010:	0058012e 	.word	0x0058012e
90007014:	0061007c 	.word	0x0061007c
90007018:	005800a7 	.word	0x005800a7
9000701c:	00470064 	.word	0x00470064
90007020:	00c20038 	.word	0x00c20038
90007024:	0047007c 	.word	0x0047007c
90007028:	000700a7 	.word	0x000700a7
9000702c:	00c200a7 	.word	0x00c200a7
90007030:	00470071 	.word	0x00470071
90007034:	0007012e 	.word	0x0007012e
90007038:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
9000703c:	f04f 0b00 	mov.w	fp, #0
90007040:	6813      	ldr	r3, [r2, #0]
90007042:	2605      	movs	r6, #5
90007044:	4fec      	ldr	r7, [pc, #944]	; (900073f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1338>)
90007046:	4650      	mov	r0, sl
        borderColor = colorBorder;
90007048:	f8c4 36c8 	str.w	r3, [r4, #1736]	; 0x6c8
9000704c:	f04f 0806 	mov.w	r8, #6
90007050:	4bea      	ldr	r3, [pc, #936]	; (900073fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x133c>)
90007052:	990b      	ldr	r1, [sp, #44]	; 0x2c
90007054:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
90007058:	4be9      	ldr	r3, [pc, #932]	; (90007400 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1340>)
        action = &callback;
9000705a:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
9000705e:	f04f 1550 	mov.w	r5, #5242960	; 0x500050
90007062:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
        alpha = newAlpha;
90007066:	f884 b695 	strb.w	fp, [r4, #1685]	; 0x695
        alpha = newAlpha;
9000706a:	f884 b6c2 	strb.w	fp, [r4, #1730]	; 0x6c2
9000706e:	f00b fbe3 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007072:	4648      	mov	r0, r9
90007074:	a928      	add	r1, sp, #160	; 0xa0
90007076:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
9000707a:	f00e fb46 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000707e:	4648      	mov	r0, r9
90007080:	4659      	mov	r1, fp
90007082:	f8c4 76e4 	str.w	r7, [r4, #1764]	; 0x6e4
90007086:	f8c4 56e8 	str.w	r5, [r4, #1768]	; 0x6e8
9000708a:	f00d fabe 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000708e:	4649      	mov	r1, r9
90007090:	4650      	mov	r0, sl
        visible = vis;
90007092:	f884 b705 	strb.w	fp, [r4, #1797]	; 0x705
90007096:	f00b fbcf 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000709a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
9000709e:	a928      	add	r1, sp, #160	; 0xa0
900070a0:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900070a4:	4648      	mov	r0, r9
900070a6:	f00e fb30 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900070aa:	4648      	mov	r0, r9
900070ac:	4659      	mov	r1, fp
        rect.x = x;
900070ae:	f8c4 7710 	str.w	r7, [r4, #1808]	; 0x710
900070b2:	f8c4 5714 	str.w	r5, [r4, #1812]	; 0x714
900070b6:	377a      	adds	r7, #122	; 0x7a
900070b8:	f00d faa7 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900070bc:	4649      	mov	r1, r9
900070be:	4650      	mov	r0, sl
        visible = vis;
900070c0:	f884 b731 	strb.w	fp, [r4, #1841]	; 0x731
900070c4:	f00b fbb8 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900070c8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
900070cc:	a928      	add	r1, sp, #160	; 0xa0
900070ce:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900070d2:	4648      	mov	r0, r9
900070d4:	f00e fb19 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900070d8:	4648      	mov	r0, r9
900070da:	4659      	mov	r1, fp
        rect.x = x;
900070dc:	f8c4 773c 	str.w	r7, [r4, #1852]	; 0x73c
900070e0:	f8c4 5740 	str.w	r5, [r4, #1856]	; 0x740
900070e4:	f00d fa91 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900070e8:	4649      	mov	r1, r9
900070ea:	4650      	mov	r0, sl
        visible = vis;
900070ec:	f884 b75d 	strb.w	fp, [r4, #1885]	; 0x75d
900070f0:	f00b fba2 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900070f4:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
900070f8:	a928      	add	r1, sp, #160	; 0xa0
900070fa:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900070fe:	4648      	mov	r0, r9
90007100:	f00e fb03 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007104:	4648      	mov	r0, r9
90007106:	4659      	mov	r1, fp
        rect.x = x;
90007108:	f8c4 7768 	str.w	r7, [r4, #1896]	; 0x768
9000710c:	f8c4 576c 	str.w	r5, [r4, #1900]	; 0x76c
90007110:	3776      	adds	r7, #118	; 0x76
90007112:	f00d fa7a 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007116:	4649      	mov	r1, r9
90007118:	4650      	mov	r0, sl
        visible = vis;
9000711a:	f884 b789 	strb.w	fp, [r4, #1929]	; 0x789
9000711e:	f00b fb8b 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007122:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
90007126:	a928      	add	r1, sp, #160	; 0xa0
90007128:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
9000712c:	4648      	mov	r0, r9
9000712e:	f00e faec 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007132:	4648      	mov	r0, r9
90007134:	4659      	mov	r1, fp
        rect.x = x;
90007136:	f8c4 7794 	str.w	r7, [r4, #1940]	; 0x794
9000713a:	f8c4 5798 	str.w	r5, [r4, #1944]	; 0x798
9000713e:	f00d fa64 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007142:	4649      	mov	r1, r9
90007144:	4650      	mov	r0, sl
        visible = vis;
90007146:	f884 b7b5 	strb.w	fp, [r4, #1973]	; 0x7b5
9000714a:	f00b fb75 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000714e:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
90007152:	a928      	add	r1, sp, #160	; 0xa0
90007154:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007158:	4648      	mov	r0, r9
9000715a:	f00e fad6 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000715e:	4648      	mov	r0, r9
90007160:	4659      	mov	r1, fp
        rect.x = x;
90007162:	f8c4 77c0 	str.w	r7, [r4, #1984]	; 0x7c0
90007166:	f8c4 57c4 	str.w	r5, [r4, #1988]	; 0x7c4
9000716a:	f00d fa4e 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000716e:	4649      	mov	r1, r9
90007170:	4650      	mov	r0, sl
        visible = vis;
90007172:	f884 b7e1 	strb.w	fp, [r4, #2017]	; 0x7e1
90007176:	f00b fb5f 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000717a:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
        rect.x = x;
9000717e:	4fa1      	ldr	r7, [pc, #644]	; (90007404 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1344>)
90007180:	a928      	add	r1, sp, #160	; 0xa0
90007182:	4648      	mov	r0, r9
90007184:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007188:	f00e fabf 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000718c:	4648      	mov	r0, r9
9000718e:	4659      	mov	r1, fp
90007190:	f8c4 77ec 	str.w	r7, [r4, #2028]	; 0x7ec
90007194:	f8c4 57f0 	str.w	r5, [r4, #2032]	; 0x7f0
90007198:	f00d fa37 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000719c:	4649      	mov	r1, r9
9000719e:	4650      	mov	r0, sl
        visible = vis;
900071a0:	f884 b80d 	strb.w	fp, [r4, #2061]	; 0x80d
900071a4:	f00b fb48 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900071a8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
900071ac:	a928      	add	r1, sp, #160	; 0xa0
900071ae:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900071b2:	4648      	mov	r0, r9
900071b4:	f00e faa9 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071b8:	4648      	mov	r0, r9
900071ba:	4659      	mov	r1, fp
        rect.x = x;
900071bc:	f8c4 7818 	str.w	r7, [r4, #2072]	; 0x818
900071c0:	f8c4 581c 	str.w	r5, [r4, #2076]	; 0x81c
900071c4:	377a      	adds	r7, #122	; 0x7a
900071c6:	f00d fa20 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071ca:	4649      	mov	r1, r9
900071cc:	4650      	mov	r0, sl
        visible = vis;
900071ce:	f884 b839 	strb.w	fp, [r4, #2105]	; 0x839
900071d2:	f00b fb31 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900071d6:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
900071da:	a928      	add	r1, sp, #160	; 0xa0
900071dc:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900071e0:	4648      	mov	r0, r9
900071e2:	f00e fa92 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071e6:	4648      	mov	r0, r9
900071e8:	4659      	mov	r1, fp
        rect.x = x;
900071ea:	f8c4 7844 	str.w	r7, [r4, #2116]	; 0x844
900071ee:	f8c4 5848 	str.w	r5, [r4, #2120]	; 0x848
900071f2:	f00d fa0a 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071f6:	4649      	mov	r1, r9
900071f8:	4650      	mov	r0, sl
        visible = vis;
900071fa:	f884 b865 	strb.w	fp, [r4, #2149]	; 0x865
900071fe:	f00b fb1b 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007202:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
90007206:	a928      	add	r1, sp, #160	; 0xa0
90007208:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
9000720c:	4648      	mov	r0, r9
9000720e:	f00e fa7c 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007212:	4648      	mov	r0, r9
90007214:	4659      	mov	r1, fp
        rect.x = x;
90007216:	f8c4 7870 	str.w	r7, [r4, #2160]	; 0x870
9000721a:	f8c4 5874 	str.w	r5, [r4, #2164]	; 0x874
9000721e:	3776      	adds	r7, #118	; 0x76
90007220:	f00d f9f3 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007224:	4649      	mov	r1, r9
90007226:	4650      	mov	r0, sl
        visible = vis;
90007228:	f884 b891 	strb.w	fp, [r4, #2193]	; 0x891
9000722c:	f00b fb04 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007230:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
90007234:	a928      	add	r1, sp, #160	; 0xa0
90007236:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
9000723a:	4648      	mov	r0, r9
9000723c:	f00e fa65 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007240:	4648      	mov	r0, r9
90007242:	4659      	mov	r1, fp
        rect.x = x;
90007244:	f8c4 789c 	str.w	r7, [r4, #2204]	; 0x89c
90007248:	f8c4 58a0 	str.w	r5, [r4, #2208]	; 0x8a0
9000724c:	f00d f9dd 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007250:	4649      	mov	r1, r9
90007252:	4650      	mov	r0, sl
        visible = vis;
90007254:	f884 b8bd 	strb.w	fp, [r4, #2237]	; 0x8bd
90007258:	f00b faee 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000725c:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
90007260:	a928      	add	r1, sp, #160	; 0xa0
90007262:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007266:	4648      	mov	r0, r9
90007268:	f00e fa4f 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000726c:	4648      	mov	r0, r9
9000726e:	4659      	mov	r1, fp
        rect.x = x;
90007270:	f8c4 78c8 	str.w	r7, [r4, #2248]	; 0x8c8
90007274:	f8c4 58cc 	str.w	r5, [r4, #2252]	; 0x8cc
90007278:	f00d f9c7 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000727c:	4649      	mov	r1, r9
9000727e:	4650      	mov	r0, sl
        visible = vis;
90007280:	f884 b8e9 	strb.w	fp, [r4, #2281]	; 0x8e9
90007284:	f00b fad8 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007288:	f8dd 905c 	ldr.w	r9, [sp, #92]	; 0x5c
        rect.x = x;
9000728c:	4f5e      	ldr	r7, [pc, #376]	; (90007408 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1348>)
9000728e:	a928      	add	r1, sp, #160	; 0xa0
90007290:	4648      	mov	r0, r9
90007292:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007296:	f00e fa38 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000729a:	4648      	mov	r0, r9
9000729c:	4659      	mov	r1, fp
9000729e:	f8c4 78f4 	str.w	r7, [r4, #2292]	; 0x8f4
900072a2:	f8c4 58f8 	str.w	r5, [r4, #2296]	; 0x8f8
900072a6:	f00d f9b0 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072aa:	4649      	mov	r1, r9
900072ac:	4650      	mov	r0, sl
        visible = vis;
900072ae:	f884 b915 	strb.w	fp, [r4, #2325]	; 0x915
900072b2:	f00b fac1 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900072b6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
900072ba:	a928      	add	r1, sp, #160	; 0xa0
900072bc:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
900072c0:	4648      	mov	r0, r9
900072c2:	f00e fa22 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072c6:	4648      	mov	r0, r9
900072c8:	4659      	mov	r1, fp
        rect.x = x;
900072ca:	f8c4 7920 	str.w	r7, [r4, #2336]	; 0x920
900072ce:	f8c4 5924 	str.w	r5, [r4, #2340]	; 0x924
900072d2:	377e      	adds	r7, #126	; 0x7e
900072d4:	f00d f999 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072d8:	4649      	mov	r1, r9
900072da:	4650      	mov	r0, sl
        visible = vis;
900072dc:	f884 b941 	strb.w	fp, [r4, #2369]	; 0x941
900072e0:	f00b faaa 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900072e4:	f8dd 9064 	ldr.w	r9, [sp, #100]	; 0x64
900072e8:	a928      	add	r1, sp, #160	; 0xa0
900072ea:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
900072ee:	4648      	mov	r0, r9
900072f0:	f00e fa0b 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072f4:	4648      	mov	r0, r9
900072f6:	4659      	mov	r1, fp
        rect.x = x;
900072f8:	f8c4 794c 	str.w	r7, [r4, #2380]	; 0x94c
900072fc:	f8c4 5950 	str.w	r5, [r4, #2384]	; 0x950
90007300:	f00d f983 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007304:	4649      	mov	r1, r9
90007306:	4650      	mov	r0, sl
        visible = vis;
90007308:	f884 b96d 	strb.w	fp, [r4, #2413]	; 0x96d
9000730c:	f00b fa94 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007310:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
90007314:	a928      	add	r1, sp, #160	; 0xa0
90007316:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
9000731a:	4648      	mov	r0, r9
9000731c:	f00e f9f5 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007320:	4648      	mov	r0, r9
90007322:	4659      	mov	r1, fp
        rect.x = x;
90007324:	f8c4 7978 	str.w	r7, [r4, #2424]	; 0x978
90007328:	f8c4 597c 	str.w	r5, [r4, #2428]	; 0x97c
9000732c:	f00d f96d 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007330:	4649      	mov	r1, r9
90007332:	4650      	mov	r0, sl
        visible = vis;
90007334:	f884 b999 	strb.w	fp, [r4, #2457]	; 0x999
90007338:	f00b fa7e 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000733c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
9000733e:	f8ad 60a0 	strh.w	r6, [sp, #160]	; 0xa0
90007342:	a928      	add	r1, sp, #160	; 0xa0
        rect.x = x;
90007344:	4e31      	ldr	r6, [pc, #196]	; (9000740c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x134c>)
90007346:	4638      	mov	r0, r7
90007348:	f00e f9df 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000734c:	4638      	mov	r0, r7
9000734e:	4659      	mov	r1, fp
90007350:	f8c4 69a4 	str.w	r6, [r4, #2468]	; 0x9a4
90007354:	f8c4 59a8 	str.w	r5, [r4, #2472]	; 0x9a8
        boundingArea = calculateBoundingArea();
90007358:	f604 29e4 	addw	r9, r4, #2788	; 0xae4
9000735c:	f00d f955 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007360:	4639      	mov	r1, r7
90007362:	4650      	mov	r0, sl
        visible = vis;
90007364:	f884 b9c5 	strb.w	fp, [r4, #2501]	; 0x9c5
90007368:	f00b fa66 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000736c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
9000736e:	a928      	add	r1, sp, #160	; 0xa0
90007370:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
90007374:	4638      	mov	r0, r7
        boundingArea = calculateBoundingArea();
90007376:	f10d 0880 	add.w	r8, sp, #128	; 0x80
9000737a:	f00e f9c6 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000737e:	4638      	mov	r0, r7
90007380:	4659      	mov	r1, fp
        rect.x = x;
90007382:	f8c4 69d0 	str.w	r6, [r4, #2512]	; 0x9d0
90007386:	f8c4 59d4 	str.w	r5, [r4, #2516]	; 0x9d4
    lbl_result.setPosition(100, 142, 258, 24);
9000738a:	f604 26a8 	addw	r6, r4, #2728	; 0xaa8
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000738e:	f00d f93c 	bl	9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007392:	4639      	mov	r1, r7
90007394:	4650      	mov	r0, sl
        visible = vis;
90007396:	f884 b9f1 	strb.w	fp, [r4, #2545]	; 0x9f1
9000739a:	f00b fa4d 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000739e:	4b1c      	ldr	r3, [pc, #112]	; (90007410 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1350>)
900073a0:	f604 11f8 	addw	r1, r4, #2552	; 0x9f8
900073a4:	4650      	mov	r0, sl
900073a6:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
900073aa:	270b      	movs	r7, #11
900073ac:	4b19      	ldr	r3, [pc, #100]	; (90007414 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1354>)
        visible = vis;
900073ae:	f884 ba1d 	strb.w	fp, [r4, #2589]	; 0xa1d
        rect.x = x;
900073b2:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
        color = newColor;
900073b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900073ba:	f8c4 3a20 	str.w	r3, [r4, #2592]	; 0xa20
900073be:	f00b fa3b 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900073c2:	4b15      	ldr	r3, [pc, #84]	; (90007418 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1358>)
900073c4:	9d03      	ldr	r5, [sp, #12]
900073c6:	4640      	mov	r0, r8
900073c8:	f8c4 3a28 	str.w	r3, [r4, #2600]	; 0xa28
        color = newColor;
900073cc:	4b13      	ldr	r3, [pc, #76]	; (9000741c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x135c>)
        boundingArea = calculateBoundingArea();
900073ce:	4629      	mov	r1, r5
        linespace = space;
900073d0:	f8a4 ba58 	strh.w	fp, [r4, #2648]	; 0xa58
        color = newColor;
900073d4:	f8c4 3a54 	str.w	r3, [r4, #2644]	; 0xa54
        boundingArea = calculateBoundingArea();
900073d8:	f00d fc06 	bl	90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900073dc:	4a10      	ldr	r2, [pc, #64]	; (90007420 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1360>)
900073de:	462b      	mov	r3, r5
900073e0:	9503      	str	r5, [sp, #12]
900073e2:	9228      	str	r2, [sp, #160]	; 0xa0
900073e4:	220f      	movs	r2, #15
900073e6:	333c      	adds	r3, #60	; 0x3c
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
900073e8:	ed9d 8a03 	vldr	s16, [sp, #12]
900073ec:	f8ad 20a4 	strh.w	r2, [sp, #164]	; 0xa4
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900073f0:	f504 6234 	add.w	r2, r4, #2880	; 0xb40
900073f4:	e016      	b.n	90007424 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1364>
900073f6:	bf00      	nop
900073f8:	fffe0042 	.word	0xfffe0042
900073fc:	00c2012e 	.word	0x00c2012e
90007400:	00470071 	.word	0x00470071
90007404:	00600042 	.word	0x00600042
90007408:	00c30042 	.word	0x00c30042
9000740c:	00c30132 	.word	0x00c30132
90007410:	003f006a 	.word	0x003f006a
90007414:	00980110 	.word	0x00980110
90007418:	00550076 	.word	0x00550076
9000741c:	ffff0000 	.word	0xffff0000
90007420:	9002bfac 	.word	0x9002bfac
        color = newColor;
90007424:	f04f 35ff 	mov.w	r5, #4294967295
90007428:	9204      	str	r2, [sp, #16]
        boundingArea = calculateBoundingArea();
9000742a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
9000742e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
90007432:	a928      	add	r1, sp, #160	; 0xa0
90007434:	ee18 0a10 	vmov	r0, s16
90007438:	f00d fe7e 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000743c:	ee18 1a10 	vmov	r1, s16
90007440:	4650      	mov	r0, sl
        visible = vis;
90007442:	f884 ba49 	strb.w	fp, [r4, #2633]	; 0xa49
90007446:	f00b f9f7 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
9000744a:	ab28      	add	r3, sp, #160	; 0xa0
9000744c:	aa26      	add	r2, sp, #152	; 0x98
9000744e:	a925      	add	r1, sp, #148	; 0x94
90007450:	9300      	str	r3, [sp, #0]
        rect.x = x;
90007452:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
90007456:	ee1b 0a10 	vmov	r0, s22
9000745a:	f8ad b094 	strh.w	fp, [sp, #148]	; 0x94
9000745e:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
90007462:	2301      	movs	r3, #1
90007464:	f8ad 709c 	strh.w	r7, [sp, #156]	; 0x9c
90007468:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
9000746c:	ab27      	add	r3, sp, #156	; 0x9c
9000746e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
90007472:	f00e f88d 	bl	90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_back.setAction(buttonCallback);
90007476:	f242 73ac 	movw	r3, #10156	; 0x27ac
9000747a:	ee1b 1a10 	vmov	r1, s22
9000747e:	4650      	mov	r0, sl
        visible = vis;
90007480:	f884 ba91 	strb.w	fp, [r4, #2705]	; 0xa91
90007484:	4423      	add	r3, r4
90007486:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
9000748a:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
9000748e:	f8c4 3aa4 	str.w	r3, [r4, #2724]	; 0xaa4
90007492:	f00b f9d1 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007496:	4ba8      	ldr	r3, [pc, #672]	; (90007738 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1678>)
        boundingArea = calculateBoundingArea();
90007498:	4631      	mov	r1, r6
9000749a:	4640      	mov	r0, r8
9000749c:	f8c4 3aac 	str.w	r3, [r4, #2732]	; 0xaac
        rect.width = width;
900074a0:	f44f 7381 	mov.w	r3, #258	; 0x102
900074a4:	f8a4 3ab0 	strh.w	r3, [r4, #2736]	; 0xab0
900074a8:	f7fd fc76 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
900074ac:	2318      	movs	r3, #24
900074ae:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900074b2:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
900074b6:	4631      	mov	r1, r6
900074b8:	4640      	mov	r0, r8
900074ba:	f8a4 3ab2 	strh.w	r3, [r4, #2738]	; 0xab2
900074be:	f7fd fc6b 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900074c2:	4b9e      	ldr	r3, [pc, #632]	; (9000773c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x167c>)
900074c4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900074c8:	681b      	ldr	r3, [r3, #0]
900074ca:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        color = newColor;
900074ce:	f8c4 5ad8 	str.w	r5, [r4, #2776]	; 0xad8
        linespace = space;
900074d2:	f8a4 badc 	strh.w	fp, [r4, #2780]	; 0xadc
        boundingArea = calculateBoundingArea();
900074d6:	f8c4 bae4 	str.w	fp, [r4, #2788]	; 0xae4
900074da:	f8c4 5ae8 	str.w	r5, [r4, #2792]	; 0xae8
900074de:	f8c4 baec 	str.w	fp, [r4, #2796]	; 0xaec
900074e2:	2b00      	cmp	r3, #0
900074e4:	f000 811c 	beq.w	90007720 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
        return typedTextId < numberOfTypedTexts;
900074e8:	f8df 9274 	ldr.w	r9, [pc, #628]	; 90007760 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900074ec:	f8b9 3000 	ldrh.w	r3, [r9]
900074f0:	2b0d      	cmp	r3, #13
900074f2:	f240 811b 	bls.w	9000772c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x166c>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
900074f6:	f604 3368 	addw	r3, r4, #2920	; 0xb68
        return texts->getText(typedTextId);
900074fa:	210d      	movs	r1, #13
    lbl_turn.setXY(337, 0);
900074fc:	f604 28f4 	addw	r8, r4, #2804	; 0xaf4
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
90007500:	9303      	str	r3, [sp, #12]
90007502:	4b8f      	ldr	r3, [pc, #572]	; (90007740 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1680>)
90007504:	6818      	ldr	r0, [r3, #0]
90007506:	f7fd f89f 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
9000750a:	4a8e      	ldr	r2, [pc, #568]	; (90007744 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1684>)
9000750c:	4603      	mov	r3, r0
9000750e:	2114      	movs	r1, #20
90007510:	9804      	ldr	r0, [sp, #16]
90007512:	f013 fed9 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
90007516:	9a04      	ldr	r2, [sp, #16]
        : typedTextId(id)
90007518:	230e      	movs	r3, #14
    lbl_result.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOP9));
9000751a:	a928      	add	r1, sp, #160	; 0xa0
9000751c:	f8c4 2af0 	str.w	r2, [r4, #2800]	; 0xaf0
90007520:	4630      	mov	r0, r6
90007522:	4a89      	ldr	r2, [pc, #548]	; (90007748 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
90007524:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
90007528:	9228      	str	r2, [sp, #160]	; 0xa0
9000752a:	f00d fe05 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000752e:	4631      	mov	r1, r6
90007530:	4650      	mov	r0, sl
        visible = vis;
90007532:	f884 bacd 	strb.w	fp, [r4, #2765]	; 0xacd
90007536:	f00b f97f 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000753a:	4980      	ldr	r1, [pc, #512]	; (9000773c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x167c>)
        rect.x = x;
9000753c:	f240 1251 	movw	r2, #337	; 0x151
        color = newColor;
90007540:	f8c4 5b24 	str.w	r5, [r4, #2852]	; 0xb24
90007544:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
90007546:	f8c4 5b34 	str.w	r5, [r4, #2868]	; 0xb34
        linespace = space;
9000754a:	f8a4 bb28 	strh.w	fp, [r4, #2856]	; 0xb28
        boundingArea = calculateBoundingArea();
9000754e:	f8c4 bb30 	str.w	fp, [r4, #2864]	; 0xb30
90007552:	f8c4 bb38 	str.w	fp, [r4, #2872]	; 0xb38
90007556:	f8c4 2af8 	str.w	r2, [r4, #2808]	; 0xaf8
9000755a:	2b00      	cmp	r3, #0
9000755c:	f000 80e0 	beq.w	90007720 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007560:	f8b9 3000 	ldrh.w	r3, [r9]
90007564:	2b0b      	cmp	r3, #11
90007566:	f240 80e1 	bls.w	9000772c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x166c>
        return texts->getText(typedTextId);
9000756a:	4b75      	ldr	r3, [pc, #468]	; (90007740 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1680>)
9000756c:	4639      	mov	r1, r7
9000756e:	6818      	ldr	r0, [r3, #0]
90007570:	f7fd f86a 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
90007574:	9d03      	ldr	r5, [sp, #12]
90007576:	4603      	mov	r3, r0
90007578:	4a72      	ldr	r2, [pc, #456]	; (90007744 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1684>)
9000757a:	210a      	movs	r1, #10
9000757c:	4628      	mov	r0, r5
9000757e:	f013 fea3 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_turn.resizeToCurrentText();
90007582:	4640      	mov	r0, r8
90007584:	f8c4 5b3c 	str.w	r5, [r4, #2876]	; 0xb3c
90007588:	f00d fdb6 	bl	900150f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
9000758c:	4a6e      	ldr	r2, [pc, #440]	; (90007748 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
9000758e:	230c      	movs	r3, #12
    lbl_turn.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3N5W));
90007590:	a928      	add	r1, sp, #160	; 0xa0
90007592:	4640      	mov	r0, r8
90007594:	9228      	str	r2, [sp, #160]	; 0xa0
90007596:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
9000759a:	f00d fdcd 	bl	90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
9000759e:	235f      	movs	r3, #95	; 0x5f
900075a0:	4650      	mov	r0, sl
900075a2:	4641      	mov	r1, r8
900075a4:	f884 3b2a 	strb.w	r3, [r4, #2858]	; 0xb2a
900075a8:	f00b f946 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900075ac:	4620      	mov	r0, r4
900075ae:	b02b      	add	sp, #172	; 0xac
900075b0:	ecbd 8b08 	vpop	{d8-d11}
900075b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900075b8:	6898      	ldr	r0, [r3, #8]
900075ba:	4d64      	ldr	r5, [pc, #400]	; (9000774c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x168c>)
900075bc:	6803      	ldr	r3, [r0, #0]
900075be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900075c0:	42aa      	cmp	r2, r5
900075c2:	f43e adfa 	beq.w	900061ba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900075c6:	f7fe bdc4 	b.w	90006152 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900075ca:	6898      	ldr	r0, [r3, #8]
900075cc:	6802      	ldr	r2, [r0, #0]
900075ce:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900075d0:	42aa      	cmp	r2, r5
900075d2:	d169      	bne.n	900076a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>
        return auxiliaryLCD;
900075d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900075d6:	2800      	cmp	r0, #0
900075d8:	f43e ae15 	beq.w	90006206 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
900075dc:	6803      	ldr	r3, [r0, #0]
900075de:	f04f 0b01 	mov.w	fp, #1
900075e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900075e4:	42ab      	cmp	r3, r5
900075e6:	f43e ae0e 	beq.w	90006206 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900075ea:	4798      	blx	r3
900075ec:	2800      	cmp	r0, #0
900075ee:	bf08      	it	eq
900075f0:	f04b 0b01 	orreq.w	fp, fp, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900075f4:	f1bb 0f00 	cmp.w	fp, #0
900075f8:	f47e ae05 	bne.w	90006206 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900075fc:	f7fe bdba 	b.w	90006174 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90007600:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90007602:	6802      	ldr	r2, [r0, #0]
90007604:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90007606:	42aa      	cmp	r2, r5
90007608:	d165      	bne.n	900076d6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1616>
        return auxiliaryLCD;
9000760a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000760c:	2800      	cmp	r0, #0
9000760e:	f43e ae1d 	beq.w	9000624c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007612:	6803      	ldr	r3, [r0, #0]
90007614:	f04f 0b01 	mov.w	fp, #1
90007618:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000761a:	42ab      	cmp	r3, r5
9000761c:	f43e ae16 	beq.w	9000624c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90007620:	4798      	blx	r3
90007622:	2800      	cmp	r0, #0
90007624:	bf08      	it	eq
90007626:	f04b 0b01 	orreq.w	fp, fp, #1
9000762a:	f1bb 0f00 	cmp.w	fp, #0
9000762e:	f47e ae0d 	bne.w	9000624c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90007632:	f7fe bd9f 	b.w	90006174 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90007636:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90007638:	6802      	ldr	r2, [r0, #0]
9000763a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000763c:	42aa      	cmp	r2, r5
9000763e:	d13f      	bne.n	900076c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1600>
        return auxiliaryLCD;
90007640:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90007642:	2800      	cmp	r0, #0
90007644:	f43e ae25 	beq.w	90006292 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007648:	6803      	ldr	r3, [r0, #0]
9000764a:	2701      	movs	r7, #1
9000764c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000764e:	42ab      	cmp	r3, r5
90007650:	f43e ae1f 	beq.w	90006292 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90007654:	4798      	blx	r3
90007656:	2800      	cmp	r0, #0
90007658:	bf08      	it	eq
9000765a:	f047 0701 	orreq.w	r7, r7, #1
9000765e:	2f00      	cmp	r7, #0
90007660:	f47e ae17 	bne.w	90006292 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90007664:	f7fe bd86 	b.w	90006174 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90007668:	f504 62db 	add.w	r2, r4, #1752	; 0x6d8
9000766c:	e4e4      	b.n	90007038 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
9000766e:	f504 62cc 	add.w	r2, r4, #1632	; 0x660
90007672:	e48b      	b.n	90006f8c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xecc>
90007674:	f504 62bd 	add.w	r2, r4, #1512	; 0x5e8
90007678:	e453      	b.n	90006f22 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe62>
9000767a:	f504 62ae 	add.w	r2, r4, #1392	; 0x570
9000767e:	e416      	b.n	90006eae <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdee>
90007680:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
90007684:	f7ff bbd6 	b.w	90006e34 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd74>
90007688:	f504 6290 	add.w	r2, r4, #1152	; 0x480
9000768c:	f7ff bb95 	b.w	90006dba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcfa>
90007690:	f504 6281 	add.w	r2, r4, #1032	; 0x408
90007694:	f7ff bb56 	b.w	90006d44 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc84>
90007698:	f504 7264 	add.w	r2, r4, #912	; 0x390
9000769c:	f7ff bb19 	b.w	90006cd2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc12>
900076a0:	f504 7246 	add.w	r2, r4, #792	; 0x318
900076a4:	f7ff baa9 	b.w	90006bfa <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb3a>
        bool compat = HAL::lcd().framebufferFormat() == format;
900076a8:	4790      	blx	r2
900076aa:	683b      	ldr	r3, [r7, #0]
900076ac:	fab0 fb80 	clz	fp, r0
900076b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900076b2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900076b6:	2800      	cmp	r0, #0
900076b8:	d09c      	beq.n	900075f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1534>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900076ba:	6803      	ldr	r3, [r0, #0]
900076bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900076be:	e791      	b.n	900075e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1524>
        bool compat = HAL::lcd().framebufferFormat() == format;
900076c0:	4790      	blx	r2
900076c2:	683b      	ldr	r3, [r7, #0]
900076c4:	fab0 f780 	clz	r7, r0
900076c8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900076ca:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900076cc:	2800      	cmp	r0, #0
900076ce:	d0c6      	beq.n	9000765e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x159e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900076d0:	6803      	ldr	r3, [r0, #0]
900076d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900076d4:	e7bb      	b.n	9000764e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x158e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900076d6:	4790      	blx	r2
900076d8:	683b      	ldr	r3, [r7, #0]
900076da:	fab0 fb80 	clz	fp, r0
900076de:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900076e0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900076e4:	2800      	cmp	r0, #0
900076e6:	d0a0      	beq.n	9000762a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x156a>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900076e8:	6803      	ldr	r3, [r0, #0]
900076ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900076ec:	e795      	b.n	9000761a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x155a>
        handleAlphaUpdated();
900076ee:	9808      	ldr	r0, [sp, #32]
900076f0:	4790      	blx	r2
900076f2:	f7ff bbeb 	b.w	90006ecc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0c>
900076f6:	9807      	ldr	r0, [sp, #28]
900076f8:	4790      	blx	r2
900076fa:	f7ff bbaa 	b.w	90006e52 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd92>
900076fe:	9806      	ldr	r0, [sp, #24]
90007700:	4790      	blx	r2
90007702:	f7ff bb69 	b.w	90006dd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd18>
90007706:	9805      	ldr	r0, [sp, #20]
90007708:	4790      	blx	r2
9000770a:	f7ff bb2a 	b.w	90006d62 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xca2>
9000770e:	9804      	ldr	r0, [sp, #16]
90007710:	4790      	blx	r2
90007712:	f7ff baed 	b.w	90006cf0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc30>
90007716:	ee1a 0a10 	vmov	r0, s20
9000771a:	4790      	blx	r2
9000771c:	f7ff ba7d 	b.w	90006c1a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb5a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007720:	4b0b      	ldr	r3, [pc, #44]	; (90007750 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
90007722:	2160      	movs	r1, #96	; 0x60
90007724:	4a0b      	ldr	r2, [pc, #44]	; (90007754 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
90007726:	480c      	ldr	r0, [pc, #48]	; (90007758 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
90007728:	f021 fe4a 	bl	900293c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000772c:	4b0b      	ldr	r3, [pc, #44]	; (9000775c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
9000772e:	2161      	movs	r1, #97	; 0x61
90007730:	4a08      	ldr	r2, [pc, #32]	; (90007754 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
90007732:	4809      	ldr	r0, [pc, #36]	; (90007758 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
90007734:	f021 fe44 	bl	900293c0 <__assert_func>
90007738:	008e0064 	.word	0x008e0064
9000773c:	24039b24 	.word	0x24039b24
90007740:	24039b30 	.word	0x24039b30
90007744:	9002cc30 	.word	0x9002cc30
90007748:	9002bfac 	.word	0x9002bfac
9000774c:	90002331 	.word	0x90002331
90007750:	9002caf0 	.word	0x9002caf0
90007754:	9002cbf8 	.word	0x9002cbf8
90007758:	9002cb70 	.word	0x9002cb70
9000775c:	9002cbb8 	.word	0x9002cbb8
90007760:	24039b28 	.word	0x24039b28

90007764 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90007764:	4770      	bx	lr
90007766:	bf00      	nop

90007768 <_ZN19FrontendApplicationD0Ev>:
90007768:	b510      	push	{r4, lr}
9000776a:	4604      	mov	r4, r0
9000776c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90007770:	f021 fdf8 	bl	90029364 <_ZdlPvj>
90007774:	4620      	mov	r0, r4
90007776:	bd10      	pop	{r4, pc}

90007778 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90007778:	b510      	push	{r4, lr}
9000777a:	4604      	mov	r4, r0
    {
        model.tick();
9000777c:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90007780:	f000 f814 	bl	900077ac <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90007784:	4620      	mov	r0, r4
    }
90007786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
9000778a:	f010 bd57 	b.w	9001823c <_ZN8touchgfx11Application15handleTickEventEv>
9000778e:	bf00      	nop

90007790 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90007790:	b510      	push	{r4, lr}
90007792:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90007794:	f7fc fce4 	bl	90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90007798:	4b01      	ldr	r3, [pc, #4]	; (900077a0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
9000779a:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
9000779c:	6023      	str	r3, [r4, #0]
}
9000779e:	bd10      	pop	{r4, pc}
900077a0:	9002cf04 	.word	0x9002cf04

900077a4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
900077a4:	2200      	movs	r2, #0
900077a6:	6002      	str	r2, [r0, #0]
{

}
900077a8:	4770      	bx	lr
900077aa:	bf00      	nop

900077ac <_ZN5Model4tickEv>:

void Model::tick()
{

}
900077ac:	4770      	bx	lr
900077ae:	bf00      	nop

900077b0 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
900077b0:	4770      	bx	lr
900077b2:	bf00      	nop

900077b4 <_ZThn4_N25screen_main_menuPresenterD1Ev>:
900077b4:	3804      	subs	r0, #4
900077b6:	4770      	bx	lr

900077b8 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
900077b8:	4770      	bx	lr
900077ba:	bf00      	nop

900077bc <_ZN25screen_main_menuPresenterD0Ev>:
900077bc:	b510      	push	{r4, lr}
900077be:	4604      	mov	r4, r0
900077c0:	2110      	movs	r1, #16
900077c2:	f021 fdcf 	bl	90029364 <_ZdlPvj>
900077c6:	4620      	mov	r0, r4
900077c8:	bd10      	pop	{r4, pc}
900077ca:	bf00      	nop

900077cc <_ZThn4_N25screen_main_menuPresenterD0Ev>:
900077cc:	b500      	push	{lr}
900077ce:	3804      	subs	r0, #4
900077d0:	b083      	sub	sp, #12
900077d2:	2110      	movs	r1, #16
900077d4:	9001      	str	r0, [sp, #4]
900077d6:	f021 fdc5 	bl	90029364 <_ZdlPvj>
900077da:	9801      	ldr	r0, [sp, #4]
900077dc:	b003      	add	sp, #12
900077de:	f85d fb04 	ldr.w	pc, [sp], #4
900077e2:	bf00      	nop

900077e4 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
900077e4:	4a06      	ldr	r2, [pc, #24]	; (90007800 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
900077e6:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
900077e8:	b410      	push	{r4}
    ModelListener() : model(0) {}
900077ea:	2400      	movs	r4, #0
900077ec:	6084      	str	r4, [r0, #8]
    : view(v)
900077ee:	f102 0408 	add.w	r4, r2, #8
900077f2:	3220      	adds	r2, #32
900077f4:	e9c0 4200 	strd	r4, r2, [r0]
}
900077f8:	f85d 4b04 	ldr.w	r4, [sp], #4
900077fc:	4770      	bx	lr
900077fe:	bf00      	nop
90007800:	9002cf50 	.word	0x9002cf50

90007804 <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
90007804:	4770      	bx	lr
90007806:	bf00      	nop

90007808 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
90007808:	4b03      	ldr	r3, [pc, #12]	; (90007818 <_ZN20screen_main_menuViewD1Ev+0x10>)
9000780a:	b510      	push	{r4, lr}
9000780c:	4604      	mov	r4, r0
9000780e:	6003      	str	r3, [r0, #0]
90007810:	f7fc ff44 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
90007814:	4620      	mov	r0, r4
90007816:	bd10      	pop	{r4, pc}
90007818:	9002cf80 	.word	0x9002cf80

9000781c <_ZN20screen_main_menuViewD0Ev>:
9000781c:	4b06      	ldr	r3, [pc, #24]	; (90007838 <_ZN20screen_main_menuViewD0Ev+0x1c>)
9000781e:	b510      	push	{r4, lr}
90007820:	4604      	mov	r4, r0
90007822:	6003      	str	r3, [r0, #0]
90007824:	f7fc ff3a 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
90007828:	f44f 711a 	mov.w	r1, #616	; 0x268
9000782c:	4620      	mov	r0, r4
9000782e:	f021 fd99 	bl	90029364 <_ZdlPvj>
90007832:	4620      	mov	r0, r4
90007834:	bd10      	pop	{r4, pc}
90007836:	bf00      	nop
90007838:	9002cf80 	.word	0x9002cf80

9000783c <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
9000783c:	b510      	push	{r4, lr}
9000783e:	4604      	mov	r4, r0
90007840:	f7fd f852 	bl	900048e8 <_ZN24screen_main_menuViewBaseC1Ev>
90007844:	4b01      	ldr	r3, [pc, #4]	; (9000784c <_ZN20screen_main_menuViewC1Ev+0x10>)
}
90007846:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
90007848:	6023      	str	r3, [r4, #0]
}
9000784a:	bd10      	pop	{r4, pc}
9000784c:	9002cf80 	.word	0x9002cf80

90007850 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90007850:	f7fc bf26 	b.w	900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>

90007854 <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
90007854:	4770      	bx	lr
90007856:	bf00      	nop

90007858 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
90007858:	3804      	subs	r0, #4
9000785a:	4770      	bx	lr

9000785c <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
9000785c:	4770      	bx	lr
9000785e:	bf00      	nop

90007860 <_ZN26screen_snake_gamePresenterD0Ev>:
90007860:	b510      	push	{r4, lr}
90007862:	4604      	mov	r4, r0
90007864:	2110      	movs	r1, #16
90007866:	f021 fd7d 	bl	90029364 <_ZdlPvj>
9000786a:	4620      	mov	r0, r4
9000786c:	bd10      	pop	{r4, pc}
9000786e:	bf00      	nop

90007870 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90007870:	b500      	push	{lr}
90007872:	3804      	subs	r0, #4
90007874:	b083      	sub	sp, #12
90007876:	2110      	movs	r1, #16
90007878:	9001      	str	r0, [sp, #4]
9000787a:	f021 fd73 	bl	90029364 <_ZdlPvj>
9000787e:	9801      	ldr	r0, [sp, #4]
90007880:	b003      	add	sp, #12
90007882:	f85d fb04 	ldr.w	pc, [sp], #4
90007886:	bf00      	nop

90007888 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
90007888:	4a06      	ldr	r2, [pc, #24]	; (900078a4 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
9000788a:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
9000788c:	b410      	push	{r4}
9000788e:	2400      	movs	r4, #0
90007890:	6084      	str	r4, [r0, #8]
    : view(v)
90007892:	f102 0408 	add.w	r4, r2, #8
90007896:	3220      	adds	r2, #32
90007898:	e9c0 4200 	strd	r4, r2, [r0]
}
9000789c:	f85d 4b04 	ldr.w	r4, [sp], #4
900078a0:	4770      	bx	lr
900078a2:	bf00      	nop
900078a4:	9002cfac 	.word	0x9002cfac

900078a8 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
900078a8:	4770      	bx	lr
900078aa:	bf00      	nop

900078ac <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
900078ac:	4b01      	ldr	r3, [pc, #4]	; (900078b4 <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
900078ae:	2201      	movs	r2, #1
900078b0:	801a      	strh	r2, [r3, #0]
}
900078b2:	4770      	bx	lr
900078b4:	24000030 	.word	0x24000030

900078b8 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
900078b8:	4b01      	ldr	r3, [pc, #4]	; (900078c0 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
900078ba:	2203      	movs	r2, #3
900078bc:	801a      	strh	r2, [r3, #0]
}
900078be:	4770      	bx	lr
900078c0:	24000030 	.word	0x24000030

900078c4 <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
900078c4:	4b01      	ldr	r3, [pc, #4]	; (900078cc <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
900078c6:	2202      	movs	r2, #2
900078c8:	801a      	strh	r2, [r3, #0]
}
900078ca:	4770      	bx	lr
900078cc:	24000030 	.word	0x24000030

900078d0 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
900078d0:	4b01      	ldr	r3, [pc, #4]	; (900078d8 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
900078d2:	2200      	movs	r2, #0
900078d4:	801a      	strh	r2, [r3, #0]
}
900078d6:	4770      	bx	lr
900078d8:	24000030 	.word	0x24000030

900078dc <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
900078dc:	4b09      	ldr	r3, [pc, #36]	; (90007904 <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
900078de:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
900078e2:	4a09      	ldr	r2, [pc, #36]	; (90007908 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
900078e4:	681b      	ldr	r3, [r3, #0]
900078e6:	6810      	ldr	r0, [r2, #0]
900078e8:	689a      	ldr	r2, [r3, #8]
900078ea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900078ee:	8893      	ldrh	r3, [r2, #4]
900078f0:	88d2      	ldrh	r2, [r2, #6]
900078f2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900078f6:	fb13 f302 	smulbb	r3, r3, r2
900078fa:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
900078fe:	4418      	add	r0, r3
90007900:	4770      	bx	lr
90007902:	bf00      	nop
90007904:	2401f88c 	.word	0x2401f88c
90007908:	24000034 	.word	0x24000034

9000790c <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
9000790c:	4b0a      	ldr	r3, [pc, #40]	; (90007938 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
9000790e:	f04f 0c46 	mov.w	ip, #70	; 0x46
90007912:	4a0a      	ldr	r2, [pc, #40]	; (9000793c <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
90007914:	681b      	ldr	r3, [r3, #0]
90007916:	6810      	ldr	r0, [r2, #0]
90007918:	689a      	ldr	r2, [r3, #8]
9000791a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000791e:	8893      	ldrh	r3, [r2, #4]
90007920:	88d2      	ldrh	r2, [r2, #6]
90007922:	fb0c 0001 	mla	r0, ip, r1, r0
90007926:	fb13 f302 	smulbb	r3, r3, r2
9000792a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000792e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90007932:	4418      	add	r0, r3
90007934:	4770      	bx	lr
90007936:	bf00      	nop
90007938:	2401f88c 	.word	0x2401f88c
9000793c:	24000034 	.word	0x24000034

90007940 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90007940:	4b03      	ldr	r3, [pc, #12]	; (90007950 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90007942:	b510      	push	{r4, lr}
90007944:	4604      	mov	r4, r0
90007946:	6003      	str	r3, [r0, #0]
90007948:	f7fd fa3a 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
9000794c:	4620      	mov	r0, r4
9000794e:	bd10      	pop	{r4, pc}
90007950:	9002cfe0 	.word	0x9002cfe0

90007954 <_ZN21screen_snake_gameViewD0Ev>:
90007954:	4b06      	ldr	r3, [pc, #24]	; (90007970 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
90007956:	b510      	push	{r4, lr}
90007958:	4604      	mov	r4, r0
9000795a:	6003      	str	r3, [r0, #0]
9000795c:	f7fd fa30 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
90007960:	f44f 6181 	mov.w	r1, #1032	; 0x408
90007964:	4620      	mov	r0, r4
90007966:	f021 fcfd 	bl	90029364 <_ZdlPvj>
9000796a:	4620      	mov	r0, r4
9000796c:	bd10      	pop	{r4, pc}
9000796e:	bf00      	nop
90007970:	9002cfe0 	.word	0x9002cfe0

90007974 <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90007974:	b510      	push	{r4, lr}
90007976:	4604      	mov	r4, r0
90007978:	f7fd fb66 	bl	90005048 <_ZN25screen_snake_gameViewBaseC1Ev>
9000797c:	4b01      	ldr	r3, [pc, #4]	; (90007984 <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
9000797e:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90007980:	6023      	str	r3, [r4, #0]
}
90007982:	bd10      	pop	{r4, pc}
90007984:	9002cfe0 	.word	0x9002cfe0

90007988 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007988:	4b0e      	ldr	r3, [pc, #56]	; (900079c4 <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
9000798a:	2200      	movs	r2, #0
          touchable(false),
9000798c:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90007990:	21ff      	movs	r1, #255	; 0xff
90007992:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90007996:	b410      	push	{r4}
90007998:	4c0b      	ldr	r4, [pc, #44]	; (900079c8 <_GLOBAL__sub_I_game_started+0x40>)
9000799a:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
9000799e:	601c      	str	r4, [r3, #0]
900079a0:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
900079a4:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
900079a6:	e9c3 2201 	strd	r2, r2, [r3, #4]
900079aa:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
900079ae:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
900079b2:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
900079b6:	332c      	adds	r3, #44	; 0x2c
900079b8:	4283      	cmp	r3, r0
900079ba:	d1ee      	bne.n	9000799a <_GLOBAL__sub_I_game_started+0x12>
}
900079bc:	f85d 4b04 	ldr.w	r4, [sp], #4
900079c0:	4770      	bx	lr
900079c2:	bf00      	nop
900079c4:	2400988c 	.word	0x2400988c
900079c8:	9002d88c 	.word	0x9002d88c

900079cc <_GLOBAL__sub_D_game_started>:
900079cc:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
900079ce:	4c05      	ldr	r4, [pc, #20]	; (900079e4 <_GLOBAL__sub_D_game_started+0x18>)
900079d0:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
900079d4:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
900079d8:	681b      	ldr	r3, [r3, #0]
900079da:	4620      	mov	r0, r4
900079dc:	4798      	blx	r3
900079de:	42ac      	cmp	r4, r5
900079e0:	d1f8      	bne.n	900079d4 <_GLOBAL__sub_D_game_started+0x8>
}
900079e2:	bd38      	pop	{r3, r4, r5, pc}
900079e4:	2401f88c 	.word	0x2401f88c

900079e8 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
900079e8:	f7fd b9ec 	b.w	90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>

900079ec <_ZN21screen_snake_gameView16game_snake_startEv>:
{
900079ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
900079f0:	2400      	movs	r4, #0
900079f2:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
900079f4:	f500 70da 	add.w	r0, r0, #436	; 0x1b4
class Drawable
900079f8:	4d2f      	ldr	r5, [pc, #188]	; (90007ab8 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
        visible = vis;
900079fa:	f886 41d9 	strb.w	r4, [r6, #473]	; 0x1d9
900079fe:	f011 fc14 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90007a02:	f506 7036 	add.w	r0, r6, #728	; 0x2d8
90007a06:	f886 42fd 	strb.w	r4, [r6, #765]	; 0x2fd
90007a0a:	f011 fc0e 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
90007a0e:	f506 70fe 	add.w	r0, r6, #508	; 0x1fc
90007a12:	f886 4221 	strb.w	r4, [r6, #545]	; 0x221
90007a16:	f011 fc08 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_new_high_score.invalidate();
90007a1a:	f506 7024 	add.w	r0, r6, #656	; 0x290
90007a1e:	f886 42b5 	strb.w	r4, [r6, #693]	; 0x2b5
90007a22:	f011 fc02 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_high_score.invalidate();
90007a26:	f506 7011 	add.w	r0, r6, #580	; 0x244
90007a2a:	f886 4269 	strb.w	r4, [r6, #617]	; 0x269
90007a2e:	f011 fbfc 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
90007a32:	4f22      	ldr	r7, [pc, #136]	; (90007abc <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
class Drawable
90007a34:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
90007a38:	62ac      	str	r4, [r5, #40]	; 0x28
90007a3a:	6838      	ldr	r0, [r7, #0]
90007a3c:	84ab      	strh	r3, [r5, #36]	; 0x24
90007a3e:	23ff      	movs	r3, #255	; 0xff
90007a40:	e9c5 4401 	strd	r4, r4, [r5, #4]
90007a44:	e9c5 4403 	strd	r4, r4, [r5, #12]
90007a48:	e9c5 4405 	strd	r4, r4, [r5, #20]
90007a4c:	e9c5 4407 	strd	r4, r4, [r5, #28]
90007a50:	f885 3026 	strb.w	r3, [r5, #38]	; 0x26
90007a54:	b318      	cbz	r0, 90007a9e <_ZN21screen_snake_gameView16game_snake_startEv+0xb2>
        rect.x = x;
90007a56:	4b1a      	ldr	r3, [pc, #104]	; (90007ac0 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
90007a58:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90007a5c:	6085      	str	r5, [r0, #8]
90007a5e:	1d30      	adds	r0, r6, #4
90007a60:	606b      	str	r3, [r5, #4]
        color = newColor;
90007a62:	4b18      	ldr	r3, [pc, #96]	; (90007ac4 <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
90007a64:	4914      	ldr	r1, [pc, #80]	; (90007ab8 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
90007a66:	60aa      	str	r2, [r5, #8]
90007a68:	62ab      	str	r3, [r5, #40]	; 0x28
90007a6a:	f00a fee5 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90007a6e:	683b      	ldr	r3, [r7, #0]
	tail = head;
90007a70:	4c15      	ldr	r4, [pc, #84]	; (90007ac8 <_ZN21screen_snake_gameView16game_snake_startEv+0xdc>)
        return parent;
90007a72:	689b      	ldr	r3, [r3, #8]
90007a74:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
90007a76:	6803      	ldr	r3, [r0, #0]
90007a78:	695b      	ldr	r3, [r3, #20]
90007a7a:	4798      	blx	r3
	head->next = NULL;
90007a7c:	683a      	ldr	r2, [r7, #0]
90007a7e:	2300      	movs	r3, #0
	snake_direction = SNAKE_DOWN;
90007a80:	4912      	ldr	r1, [pc, #72]	; (90007acc <_ZN21screen_snake_gameView16game_snake_startEv+0xe0>)
90007a82:	2003      	movs	r0, #3
	head->prev = NULL;
90007a84:	e9c2 3300 	strd	r3, r3, [r2]
	head->old_y = 0;
90007a88:	e9c2 3303 	strd	r3, r3, [r2, #12]
	snake_direction = SNAKE_DOWN;
90007a8c:	8008      	strh	r0, [r1, #0]
	game_started = true;
90007a8e:	2101      	movs	r1, #1
	new_high_score = false;
90007a90:	480f      	ldr	r0, [pc, #60]	; (90007ad0 <_ZN21screen_snake_gameView16game_snake_startEv+0xe4>)
	tail = head;
90007a92:	6022      	str	r2, [r4, #0]
	game_started = true;
90007a94:	4a0f      	ldr	r2, [pc, #60]	; (90007ad4 <_ZN21screen_snake_gameView16game_snake_startEv+0xe8>)
	new_high_score = false;
90007a96:	7003      	strb	r3, [r0, #0]
	game_started = true;
90007a98:	7011      	strb	r1, [r2, #0]
}
90007a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90007a9e:	2014      	movs	r0, #20
90007aa0:	f021 fcb2 	bl	90029408 <malloc>
90007aa4:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
90007aa6:	2800      	cmp	r0, #0
90007aa8:	d1d5      	bne.n	90007a56 <_ZN21screen_snake_gameView16game_snake_startEv+0x6a>
		error();
90007aaa:	6833      	ldr	r3, [r6, #0]
90007aac:	4630      	mov	r0, r6
90007aae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90007ab0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90007ab4:	4718      	bx	r3
90007ab6:	bf00      	nop
90007ab8:	2400988c 	.word	0x2400988c
90007abc:	24009884 	.word	0x24009884
90007ac0:	0014000a 	.word	0x0014000a
90007ac4:	ff00ff32 	.word	0xff00ff32
90007ac8:	2401f88c 	.word	0x2401f88c
90007acc:	24000030 	.word	0x24000030
90007ad0:	24009888 	.word	0x24009888
90007ad4:	24009880 	.word	0x24009880

90007ad8 <_ZN21screen_snake_gameView15handleTickEventEv>:
	if( game_started )
90007ad8:	f8df c338 	ldr.w	ip, [pc, #824]	; 90007e14 <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
void screen_snake_gameView::handleTickEvent() {
90007adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
90007ae0:	f89c 6000 	ldrb.w	r6, [ip]
void screen_snake_gameView::handleTickEvent() {
90007ae4:	b083      	sub	sp, #12
90007ae6:	4607      	mov	r7, r0
	if( game_started )
90007ae8:	2e00      	cmp	r6, #0
90007aea:	f000 819b 	beq.w	90007e24 <_ZN21screen_snake_gameView15handleTickEventEv+0x34c>
		if( ++tick % SNAKE_SPEED == 0 )
90007aee:	4eba      	ldr	r6, [pc, #744]	; (90007dd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90007af0:	49ba      	ldr	r1, [pc, #744]	; (90007ddc <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
90007af2:	6833      	ldr	r3, [r6, #0]
90007af4:	4aba      	ldr	r2, [pc, #744]	; (90007de0 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
90007af6:	3301      	adds	r3, #1
90007af8:	fb01 2203 	mla	r2, r1, r3, r2
90007afc:	6033      	str	r3, [r6, #0]
90007afe:	4bb9      	ldr	r3, [pc, #740]	; (90007de4 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90007b00:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90007b04:	f240 81cd 	bls.w	90007ea2 <_ZN21screen_snake_gameView15handleTickEventEv+0x3ca>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90007b08:	f8df a30c 	ldr.w	sl, [pc, #780]	; 90007e18 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
90007b0c:	f8da e000 	ldr.w	lr, [sl]
90007b10:	f8de 5008 	ldr.w	r5, [lr, #8]
        return rect.x;
90007b14:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90007b18:	b293      	uxth	r3, r2
90007b1a:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90007b1e:	f240 822c 	bls.w	90007f7a <_ZN21screen_snake_gameView15handleTickEventEv+0x4a2>
				game_started = false;
90007b22:	2300      	movs	r3, #0
90007b24:	f88c 3000 	strb.w	r3, [ip]
			snake_piece *snake_part = head->next;
90007b28:	f8de 3000 	ldr.w	r3, [lr]
			while( snake_part != NULL )
90007b2c:	b913      	cbnz	r3, 90007b34 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c>
90007b2e:	e00f      	b.n	90007b50 <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				snake_part = snake_part->next;
90007b30:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007b32:	b16b      	cbz	r3, 90007b50 <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
90007b34:	6899      	ldr	r1, [r3, #8]
90007b36:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90007b3a:	4294      	cmp	r4, r2
90007b3c:	d1f8      	bne.n	90007b30 <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
90007b3e:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90007b42:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90007b46:	4288      	cmp	r0, r1
90007b48:	d1f2      	bne.n	90007b30 <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
					game_started = false;
90007b4a:	2300      	movs	r3, #0
90007b4c:	f88c 3000 	strb.w	r3, [ip]
90007b50:	f9b7 018c 	ldrsh.w	r0, [r7, #396]	; 0x18c
90007b54:	4629      	mov	r1, r5
90007b56:	4673      	mov	r3, lr
90007b58:	e006      	b.n	90007b68 <_ZN21screen_snake_gameView15handleTickEventEv+0x90>
				snake_part = snake_part->next;
90007b5a:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007b5c:	2b00      	cmp	r3, #0
90007b5e:	f000 80e7 	beq.w	90007d30 <_ZN21screen_snake_gameView15handleTickEventEv+0x258>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90007b62:	6899      	ldr	r1, [r3, #8]
90007b64:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90007b68:	4290      	cmp	r0, r2
90007b6a:	d1f6      	bne.n	90007b5a <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
90007b6c:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
90007b70:	f9b7 218e 	ldrsh.w	r2, [r7, #398]	; 0x18e
90007b74:	4291      	cmp	r1, r2
90007b76:	d1f0      	bne.n	90007b5a <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
					snake_length++;
90007b78:	4c9b      	ldr	r4, [pc, #620]	; (90007de8 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007b7a:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
90007b7e:	f8d4 b000 	ldr.w	fp, [r4]
90007b82:	f10b 0301 	add.w	r3, fp, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007b86:	4293      	cmp	r3, r2
					snake_length++;
90007b88:	6023      	str	r3, [r4, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007b8a:	f000 8214 	beq.w	90007fb6 <_ZN21screen_snake_gameView15handleTickEventEv+0x4de>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90007b8e:	2014      	movs	r0, #20
90007b90:	f021 fc3a 	bl	90029408 <malloc>
					if( new_piece == NULL ) {
90007b94:	4680      	mov	r8, r0
90007b96:	2800      	cmp	r0, #0
90007b98:	f000 833c 	beq.w	90008214 <_ZN21screen_snake_gameView15handleTickEventEv+0x73c>
					snake_pixels[snake_length-1] = Box();
90007b9c:	222c      	movs	r2, #44	; 0x2c
90007b9e:	f8df 927c 	ldr.w	r9, [pc, #636]	; 90007e1c <_ZN21screen_snake_gameView15handleTickEventEv+0x344>
class Drawable
90007ba2:	2100      	movs	r1, #0
90007ba4:	f44f 7380 	mov.w	r3, #256	; 0x100
90007ba8:	fb02 f20b 	mul.w	r2, r2, fp
90007bac:	eb09 0502 	add.w	r5, r9, r2
90007bb0:	84ab      	strh	r3, [r5, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
90007bb2:	6085      	str	r5, [r0, #8]
class Box : public Widget
90007bb4:	20ff      	movs	r0, #255	; 0xff
90007bb6:	e9c5 1101 	strd	r1, r1, [r5, #4]
90007bba:	e9c5 1103 	strd	r1, r1, [r5, #12]
90007bbe:	e9c5 1105 	strd	r1, r1, [r5, #20]
90007bc2:	e9c5 1107 	strd	r1, r1, [r5, #28]
        setX(x);
90007bc6:	f859 3002 	ldr.w	r3, [r9, r2]
90007bca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90007bcc:	f885 0026 	strb.w	r0, [r5, #38]	; 0x26
90007bd0:	f109 0028 	add.w	r0, r9, #40	; 0x28
90007bd4:	5081      	str	r1, [r0, r2]
90007bd6:	4a85      	ldr	r2, [pc, #532]	; (90007dec <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
90007bd8:	4293      	cmp	r3, r2
90007bda:	f040 8236 	bne.w	9000804a <_ZN21screen_snake_gameView15handleTickEventEv+0x572>
        rect.x = x;
90007bde:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007be0:	232c      	movs	r3, #44	; 0x2c
90007be2:	4983      	ldr	r1, [pc, #524]	; (90007df0 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
90007be4:	fb03 f30b 	mul.w	r3, r3, fp
90007be8:	f859 2003 	ldr.w	r2, [r9, r3]
90007bec:	444b      	add	r3, r9
90007bee:	6b52      	ldr	r2, [r2, #52]	; 0x34
90007bf0:	428a      	cmp	r2, r1
90007bf2:	f040 82ed 	bne.w	900081d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f8>
        rect.y = y;
90007bf6:	2200      	movs	r2, #0
90007bf8:	80da      	strh	r2, [r3, #6]
        setWidth(width);
90007bfa:	222c      	movs	r2, #44	; 0x2c
90007bfc:	210a      	movs	r1, #10
90007bfe:	4628      	mov	r0, r5
90007c00:	fb02 f20b 	mul.w	r2, r2, fp
					tail->next = new_piece;
90007c04:	f8df b218 	ldr.w	fp, [pc, #536]	; 90007e20 <_ZN21screen_snake_gameView15handleTickEventEv+0x348>
90007c08:	f859 3002 	ldr.w	r3, [r9, r2]
90007c0c:	9201      	str	r2, [sp, #4]
90007c0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90007c10:	4798      	blx	r3
        setHeight(height);
90007c12:	9a01      	ldr	r2, [sp, #4]
90007c14:	4628      	mov	r0, r5
90007c16:	210a      	movs	r1, #10
90007c18:	f859 3002 	ldr.w	r3, [r9, r2]
90007c1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90007c1e:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
90007c20:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
90007c24:	4b73      	ldr	r3, [pc, #460]	; (90007df4 <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
90007c26:	1d38      	adds	r0, r7, #4
90007c28:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
90007c2a:	2301      	movs	r3, #1
90007c2c:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
90007c30:	f00a fe02 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90007c34:	f8d8 3008 	ldr.w	r3, [r8, #8]
90007c38:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
90007c3a:	6803      	ldr	r3, [r0, #0]
90007c3c:	695b      	ldr	r3, [r3, #20]
90007c3e:	4798      	blx	r3
					tail->next = new_piece;
90007c40:	f8db 3000 	ldr.w	r3, [fp]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007c44:	683a      	ldr	r2, [r7, #0]
					tail->next = new_piece;
90007c46:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
90007c4a:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
90007c4e:	2300      	movs	r3, #0
90007c50:	4869      	ldr	r0, [pc, #420]	; (90007df8 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
90007c52:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007c56:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90007c58:	f8cb 8000 	str.w	r8, [fp]
					new_piece->old_y = 0;
90007c5c:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007c60:	6c13      	ldr	r3, [r2, #64]	; 0x40
90007c62:	4283      	cmp	r3, r0
90007c64:	f040 82af 	bne.w	900081c6 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ee>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90007c68:	f8d8 5008 	ldr.w	r5, [r8, #8]
90007c6c:	6820      	ldr	r0, [r4, #0]
90007c6e:	88ab      	ldrh	r3, [r5, #4]
90007c70:	88ed      	ldrh	r5, [r5, #6]
90007c72:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90007c76:	fb13 f305 	smulbb	r3, r3, r5
90007c7a:	ebc1 1501 	rsb	r5, r1, r1, lsl #4
90007c7e:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90007c82:	eb00 0045 	add.w	r0, r0, r5, lsl #1
90007c86:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007c88:	4b5c      	ldr	r3, [pc, #368]	; (90007dfc <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007c8a:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007c8c:	fb83 5300 	smull	r5, r3, r3, r0
90007c90:	17c5      	asrs	r5, r0, #31
90007c92:	4403      	add	r3, r0
90007c94:	ebc5 2523 	rsb	r5, r5, r3, asr #8
90007c98:	f44f 73eb 	mov.w	r3, #470	; 0x1d6
90007c9c:	fb03 0515 	mls	r5, r3, r5, r0
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007ca0:	4b57      	ldr	r3, [pc, #348]	; (90007e00 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
90007ca2:	429a      	cmp	r2, r3
90007ca4:	f040 828c 	bne.w	900081c0 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e8>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90007ca8:	f8db 3000 	ldr.w	r3, [fp]
90007cac:	6898      	ldr	r0, [r3, #8]
90007cae:	6823      	ldr	r3, [r4, #0]
90007cb0:	8882      	ldrh	r2, [r0, #4]
90007cb2:	88c0      	ldrh	r0, [r0, #6]
90007cb4:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007cb8:	fb12 f200 	smulbb	r2, r2, r0
90007cbc:	2046      	movs	r0, #70	; 0x46
90007cbe:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007cc2:	fb00 3301 	mla	r3, r0, r1, r3
90007cc6:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007cca:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007ccc:	4a4d      	ldr	r2, [pc, #308]	; (90007e04 <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					food_new_x = food_new_x - (food_new_x % 10);
90007cce:	494e      	ldr	r1, [pc, #312]	; (90007e08 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007cd0:	fb82 3200 	smull	r3, r2, r2, r0
90007cd4:	17c3      	asrs	r3, r0, #31
90007cd6:	ebc3 13a2 	rsb	r3, r3, r2, asr #6
90007cda:	f44f 7283 	mov.w	r2, #262	; 0x106
90007cde:	fb02 0313 	mls	r3, r2, r3, r0
					food_new_x = food_new_x - (food_new_x % 10);
90007ce2:	17ea      	asrs	r2, r5, #31
90007ce4:	fb81 0505 	smull	r0, r5, r1, r5
					food_new_y = food_new_y - (food_new_y % 10);
90007ce8:	fb81 0103 	smull	r0, r1, r1, r3
90007cec:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90007cee:	ebc2 02a5 	rsb	r2, r2, r5, asr #2
					food.invalidate();
90007cf2:	f507 70c4 	add.w	r0, r7, #392	; 0x188
					food_new_y = food_new_y - (food_new_y % 10);
90007cf6:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
90007cfa:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90007cfe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90007d02:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90007d04:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
90007d06:	f8a7 218c 	strh.w	r2, [r7, #396]	; 0x18c
90007d0a:	f8a7 318e 	strh.w	r3, [r7, #398]	; 0x18e
					food.invalidate();
90007d0e:	f011 fa8c 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90007d12:	6823      	ldr	r3, [r4, #0]
90007d14:	4a3d      	ldr	r2, [pc, #244]	; (90007e0c <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
90007d16:	2114      	movs	r1, #20
90007d18:	f507 7074 	add.w	r0, r7, #976	; 0x3d0
90007d1c:	f013 fad4 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
90007d20:	f507 7057 	add.w	r0, r7, #860	; 0x35c
90007d24:	f011 fa81 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
90007d28:	f8da e000 	ldr.w	lr, [sl]
90007d2c:	f8de 5008 	ldr.w	r5, [lr, #8]
			if( snake_direction == SNAKE_RIGHT )
90007d30:	4b37      	ldr	r3, [pc, #220]	; (90007e10 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>)
90007d32:	f9b3 3000 	ldrsh.w	r3, [r3]
90007d36:	2b00      	cmp	r3, #0
90007d38:	f040 8111 	bne.w	90007f5e <_ZN21screen_snake_gameView15handleTickEventEv+0x486>
        return rect.x;
90007d3c:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
90007d40:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
90007d44:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
90007d46:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
90007d4a:	330a      	adds	r3, #10
90007d4c:	f8df b09c 	ldr.w	fp, [pc, #156]	; 90007dec <_ZN21screen_snake_gameView15handleTickEventEv+0x314>
90007d50:	b219      	sxth	r1, r3
90007d52:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
90007d54:	f8ce 4010 	str.w	r4, [lr, #16]
90007d58:	455b      	cmp	r3, fp
90007d5a:	f040 822b 	bne.w	900081b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
        rect.x = x;
90007d5e:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007d60:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007d62:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90007df0 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>
90007d66:	454b      	cmp	r3, r9
90007d68:	f040 8220 	bne.w	900081ac <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>
        rect.y = y;
90007d6c:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007d6e:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007d72:	689b      	ldr	r3, [r3, #8]
90007d74:	6958      	ldr	r0, [r3, #20]
90007d76:	6803      	ldr	r3, [r0, #0]
90007d78:	695b      	ldr	r3, [r3, #20]
90007d7a:	4798      	blx	r3
				snake_piece *piece = head->next;
90007d7c:	f8da 3000 	ldr.w	r3, [sl]
90007d80:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90007d82:	b974      	cbnz	r4, 90007da2 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ca>
90007d84:	e21a      	b.n	900081bc <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        setY(y);
90007d86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007d88:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90007d8a:	454b      	cmp	r3, r9
90007d8c:	d11f      	bne.n	90007dce <_ZN21screen_snake_gameView15handleTickEventEv+0x2f6>
        return parent;
90007d8e:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007d90:	80ef      	strh	r7, [r5, #6]
        return parent;
90007d92:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007d94:	6803      	ldr	r3, [r0, #0]
90007d96:	695b      	ldr	r3, [r3, #20]
90007d98:	4798      	blx	r3
					piece = piece->next;
90007d9a:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007d9c:	2c00      	cmp	r4, #0
90007d9e:	f000 80fd 	beq.w	90007f9c <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007da2:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007da6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007daa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007dae:	60e3      	str	r3, [r4, #12]
        setX(x);
90007db0:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007db2:	6121      	str	r1, [r4, #16]
90007db4:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007db6:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90007dba:	455e      	cmp	r6, fp
90007dbc:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90007dc0:	d0e1      	beq.n	90007d86 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
        setX(x);
90007dc2:	4628      	mov	r0, r5
90007dc4:	47b0      	blx	r6
        setY(y);
90007dc6:	682b      	ldr	r3, [r5, #0]
90007dc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007dca:	454b      	cmp	r3, r9
90007dcc:	d0df      	beq.n	90007d8e <_ZN21screen_snake_gameView15handleTickEventEv+0x2b6>
90007dce:	4639      	mov	r1, r7
90007dd0:	4628      	mov	r0, r5
90007dd2:	4798      	blx	r3
        return parent;
90007dd4:	68a3      	ldr	r3, [r4, #8]
90007dd6:	e7dc      	b.n	90007d92 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ba>
90007dd8:	2400987c 	.word	0x2400987c
90007ddc:	cccccccd 	.word	0xcccccccd
90007de0:	19999998 	.word	0x19999998
90007de4:	19999999 	.word	0x19999999
90007de8:	24000034 	.word	0x24000034
90007dec:	9000228d 	.word	0x9000228d
90007df0:	90002291 	.word	0x90002291
90007df4:	ffff8200 	.word	0xffff8200
90007df8:	900078dd 	.word	0x900078dd
90007dfc:	8b70344b 	.word	0x8b70344b
90007e00:	9000790d 	.word	0x9000790d
90007e04:	3e88cb3d 	.word	0x3e88cb3d
90007e08:	66666667 	.word	0x66666667
90007e0c:	9002cfd4 	.word	0x9002cfd4
90007e10:	24000030 	.word	0x24000030
90007e14:	24009880 	.word	0x24009880
90007e18:	24009884 	.word	0x24009884
90007e1c:	2400988c 	.word	0x2400988c
90007e20:	2401f88c 	.word	0x2401f88c
		if( head != NULL ) {
90007e24:	f8df a2ec 	ldr.w	sl, [pc, #748]	; 90008114 <_ZN21screen_snake_gameView15handleTickEventEv+0x63c>
90007e28:	f8da 3000 	ldr.w	r3, [sl]
90007e2c:	2b00      	cmp	r3, #0
90007e2e:	d070      	beq.n	90007f12 <_ZN21screen_snake_gameView15handleTickEventEv+0x43a>
			old = head->next;
90007e30:	681c      	ldr	r4, [r3, #0]
		while( old != NULL ) {
90007e32:	2c00      	cmp	r4, #0
90007e34:	f000 81e8 	beq.w	90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x730>
			old->pixel->setXY(-1, -1);
90007e38:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90007e3a:	f64f 78ff 	movw	r8, #65535	; 0xffff
        setX(x);
90007e3e:	f8df b2bc 	ldr.w	fp, [pc, #700]	; 900080fc <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
90007e42:	682b      	ldr	r3, [r5, #0]
90007e44:	f8df 92b8 	ldr.w	r9, [pc, #696]	; 90008100 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
90007e48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007e4a:	455a      	cmp	r2, fp
90007e4c:	d118      	bne.n	90007e80 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
        setY(y);
90007e4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007e50:	f8a5 8004 	strh.w	r8, [r5, #4]
        rect.y = y;
90007e54:	454b      	cmp	r3, r9
90007e56:	d11b      	bne.n	90007e90 <_ZN21screen_snake_gameView15handleTickEventEv+0x3b8>
			old->pixel->setVisible(false);
90007e58:	68a3      	ldr	r3, [r4, #8]
90007e5a:	f8a5 8006 	strh.w	r8, [r5, #6]
        return parent;
90007e5e:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007e60:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90007e64:	6803      	ldr	r3, [r0, #0]
90007e66:	695b      	ldr	r3, [r3, #20]
90007e68:	4798      	blx	r3
			old = old->next;
90007e6a:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90007e6c:	b1e4      	cbz	r4, 90007ea8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
				free(old->prev);
90007e6e:	6860      	ldr	r0, [r4, #4]
90007e70:	f021 fad2 	bl	90029418 <free>
			old->pixel->setXY(-1, -1);
90007e74:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90007e76:	6066      	str	r6, [r4, #4]
        setX(x);
90007e78:	682b      	ldr	r3, [r5, #0]
90007e7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007e7c:	455a      	cmp	r2, fp
90007e7e:	d0e6      	beq.n	90007e4e <_ZN21screen_snake_gameView15handleTickEventEv+0x376>
90007e80:	f04f 31ff 	mov.w	r1, #4294967295
90007e84:	4628      	mov	r0, r5
90007e86:	4790      	blx	r2
        setY(y);
90007e88:	682b      	ldr	r3, [r5, #0]
90007e8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007e8c:	454b      	cmp	r3, r9
90007e8e:	d0e3      	beq.n	90007e58 <_ZN21screen_snake_gameView15handleTickEventEv+0x380>
90007e90:	4628      	mov	r0, r5
90007e92:	f04f 31ff 	mov.w	r1, #4294967295
90007e96:	4798      	blx	r3
			old->pixel->setVisible(false);
90007e98:	68a3      	ldr	r3, [r4, #8]
        return parent;
90007e9a:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007e9c:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
90007ea0:	e7e0      	b.n	90007e64 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
}
90007ea2:	b003      	add	sp, #12
90007ea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			else if (head != tail ) {
90007ea8:	4a92      	ldr	r2, [pc, #584]	; (900080f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x61c>)
90007eaa:	f8da 3000 	ldr.w	r3, [sl]
90007eae:	6810      	ldr	r0, [r2, #0]
90007eb0:	4283      	cmp	r3, r0
90007eb2:	d001      	beq.n	90007eb8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e0>
				free(tail);
90007eb4:	f021 fab0 	bl	90029418 <free>
		if( tick > 0 ) {
90007eb8:	4e8f      	ldr	r6, [pc, #572]	; (900080f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x620>)
90007eba:	6833      	ldr	r3, [r6, #0]
90007ebc:	2b00      	cmp	r3, #0
90007ebe:	dc2c      	bgt.n	90007f1a <_ZN21screen_snake_gameView15handleTickEventEv+0x442>
		if( head != NULL ) {
90007ec0:	f8da 3000 	ldr.w	r3, [sl]
90007ec4:	b1db      	cbz	r3, 90007efe <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
			tail = head;
90007ec6:	4a8b      	ldr	r2, [pc, #556]	; (900080f4 <_ZN21screen_snake_gameView15handleTickEventEv+0x61c>)
			head->pixel->setXY(20, 50);
90007ec8:	689c      	ldr	r4, [r3, #8]
			tail = head;
90007eca:	6013      	str	r3, [r2, #0]
			head->next = NULL;
90007ecc:	2200      	movs	r2, #0
90007ece:	498b      	ldr	r1, [pc, #556]	; (900080fc <_ZN21screen_snake_gameView15handleTickEventEv+0x624>)
90007ed0:	601a      	str	r2, [r3, #0]
        setX(x);
90007ed2:	6823      	ldr	r3, [r4, #0]
90007ed4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007ed6:	428a      	cmp	r2, r1
90007ed8:	d168      	bne.n	90007fac <_ZN21screen_snake_gameView15handleTickEventEv+0x4d4>
        rect.x = x;
90007eda:	2214      	movs	r2, #20
90007edc:	80a2      	strh	r2, [r4, #4]
        setY(y);
90007ede:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007ee0:	4a87      	ldr	r2, [pc, #540]	; (90008100 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>)
90007ee2:	4293      	cmp	r3, r2
90007ee4:	d15e      	bne.n	90007fa4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        rect.y = y;
90007ee6:	2332      	movs	r3, #50	; 0x32
90007ee8:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90007eea:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007eee:	689b      	ldr	r3, [r3, #8]
90007ef0:	6958      	ldr	r0, [r3, #20]
90007ef2:	6803      	ldr	r3, [r0, #0]
90007ef4:	695b      	ldr	r3, [r3, #20]
90007ef6:	4798      	blx	r3
			snake_length = 1;
90007ef8:	4b82      	ldr	r3, [pc, #520]	; (90008104 <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
90007efa:	2201      	movs	r2, #1
90007efc:	601a      	str	r2, [r3, #0]
        visible = vis;
90007efe:	2301      	movs	r3, #1
		btn_back.invalidate();
90007f00:	f507 7036 	add.w	r0, r7, #728	; 0x2d8
90007f04:	f887 32fd 	strb.w	r3, [r7, #765]	; 0x2fd
}
90007f08:	b003      	add	sp, #12
90007f0a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		btn_back.invalidate();
90007f0e:	f011 b98c 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
90007f12:	4e79      	ldr	r6, [pc, #484]	; (900080f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x620>)
90007f14:	6833      	ldr	r3, [r6, #0]
90007f16:	2b00      	cmp	r3, #0
90007f18:	ddf1      	ble.n	90007efe <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
90007f1a:	2501      	movs	r5, #1
			tick = 0;
90007f1c:	2300      	movs	r3, #0
			lbl_game_over.invalidate();
90007f1e:	f507 70fe 	add.w	r0, r7, #508	; 0x1fc
			if( snake_length > high_score ) {
90007f22:	4c79      	ldr	r4, [pc, #484]	; (90008108 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>)
90007f24:	f887 5221 	strb.w	r5, [r7, #545]	; 0x221
			tick = 0;
90007f28:	6033      	str	r3, [r6, #0]
			lbl_game_over.invalidate();
90007f2a:	f011 f97e 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
			if( snake_length > high_score ) {
90007f2e:	4b75      	ldr	r3, [pc, #468]	; (90008104 <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
90007f30:	681a      	ldr	r2, [r3, #0]
90007f32:	6823      	ldr	r3, [r4, #0]
90007f34:	429a      	cmp	r2, r3
90007f36:	dc26      	bgt.n	90007f86 <_ZN21screen_snake_gameView15handleTickEventEv+0x4ae>
			lbl_high_score.resizeToCurrentText();
90007f38:	f507 7411 	add.w	r4, r7, #580	; 0x244
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
90007f3c:	4a73      	ldr	r2, [pc, #460]	; (9000810c <_ZN21screen_snake_gameView15handleTickEventEv+0x634>)
90007f3e:	2114      	movs	r1, #20
90007f40:	f507 706a 	add.w	r0, r7, #936	; 0x3a8
90007f44:	f013 f9c0 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
			lbl_high_score.resizeToCurrentText();
90007f48:	4620      	mov	r0, r4
90007f4a:	9401      	str	r4, [sp, #4]
90007f4c:	f00d f8d4 	bl	900150f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90007f50:	2301      	movs	r3, #1
			lbl_high_score.invalidate();
90007f52:	9801      	ldr	r0, [sp, #4]
90007f54:	f887 3269 	strb.w	r3, [r7, #617]	; 0x269
90007f58:	f011 f967 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90007f5c:	e7b0      	b.n	90007ec0 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e8>
			else if( snake_direction == SNAKE_LEFT )
90007f5e:	2b02      	cmp	r3, #2
90007f60:	d076      	beq.n	90008050 <_ZN21screen_snake_gameView15handleTickEventEv+0x578>
			else if( snake_direction == SNAKE_UP )
90007f62:	2b01      	cmp	r3, #1
90007f64:	f000 80d8 	beq.w	90008118 <_ZN21screen_snake_gameView15handleTickEventEv+0x640>
			else if( snake_direction == SNAKE_DOWN )
90007f68:	2b03      	cmp	r3, #3
90007f6a:	d028      	beq.n	90007fbe <_ZN21screen_snake_gameView15handleTickEventEv+0x4e6>
        return parent;
90007f6c:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90007f6e:	6803      	ldr	r3, [r0, #0]
90007f70:	695b      	ldr	r3, [r3, #20]
}
90007f72:	b003      	add	sp, #12
90007f74:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
90007f78:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
90007f7a:	88eb      	ldrh	r3, [r5, #6]
90007f7c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90007f80:	f63f adcf 	bhi.w	90007b22 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
90007f84:	e5d0      	b.n	90007b28 <_ZN21screen_snake_gameView15handleTickEventEv+0x50>
				new_high_score = true;
90007f86:	4b62      	ldr	r3, [pc, #392]	; (90008110 <_ZN21screen_snake_gameView15handleTickEventEv+0x638>)
				lbl_new_high_score.invalidate();
90007f88:	f507 7024 	add.w	r0, r7, #656	; 0x290
        visible = vis;
90007f8c:	f887 52b5 	strb.w	r5, [r7, #693]	; 0x2b5
				new_high_score = true;
90007f90:	701d      	strb	r5, [r3, #0]
				high_score = snake_length;
90007f92:	6022      	str	r2, [r4, #0]
				lbl_new_high_score.invalidate();
90007f94:	f011 f949 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
90007f98:	6823      	ldr	r3, [r4, #0]
90007f9a:	e7cd      	b.n	90007f38 <_ZN21screen_snake_gameView15handleTickEventEv+0x460>
			head->pixel->getParent()->invalidate();
90007f9c:	f8da 3000 	ldr.w	r3, [sl]
90007fa0:	689d      	ldr	r5, [r3, #8]
90007fa2:	e7e3      	b.n	90007f6c <_ZN21screen_snake_gameView15handleTickEventEv+0x494>
        setY(y);
90007fa4:	2132      	movs	r1, #50	; 0x32
90007fa6:	4620      	mov	r0, r4
90007fa8:	4798      	blx	r3
90007faa:	e79e      	b.n	90007eea <_ZN21screen_snake_gameView15handleTickEventEv+0x412>
        setX(x);
90007fac:	2114      	movs	r1, #20
90007fae:	4620      	mov	r0, r4
90007fb0:	4790      	blx	r2
        setY(y);
90007fb2:	6823      	ldr	r3, [r4, #0]
90007fb4:	e793      	b.n	90007ede <_ZN21screen_snake_gameView15handleTickEventEv+0x406>
						game_started = false;
90007fb6:	2300      	movs	r3, #0
90007fb8:	f88c 3000 	strb.w	r3, [ip]
90007fbc:	e5e7      	b.n	90007b8e <_ZN21screen_snake_gameView15handleTickEventEv+0xb6>
        return rect.y;
90007fbe:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90007fc2:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90007fc6:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
90007fca:	330a      	adds	r3, #10
90007fcc:	f8df b12c 	ldr.w	fp, [pc, #300]	; 900080fc <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
90007fd0:	b21c      	sxth	r4, r3
        setX(x);
90007fd2:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90007fd4:	f8ce 100c 	str.w	r1, [lr, #12]
90007fd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007fda:	455a      	cmp	r2, fp
90007fdc:	f040 8110 	bne.w	90008200 <_ZN21screen_snake_gameView15handleTickEventEv+0x728>
        rect.x = x;
90007fe0:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007fe2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007fe4:	f8df 9118 	ldr.w	r9, [pc, #280]	; 90008100 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
90007fe8:	454b      	cmp	r3, r9
90007fea:	f040 8105 	bne.w	900081f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x720>
        rect.y = y;
90007fee:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007ff0:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007ff4:	689b      	ldr	r3, [r3, #8]
90007ff6:	6958      	ldr	r0, [r3, #20]
90007ff8:	6803      	ldr	r3, [r0, #0]
90007ffa:	695b      	ldr	r3, [r3, #20]
90007ffc:	4798      	blx	r3
				snake_piece *piece = head->next;
90007ffe:	f8da 3000 	ldr.w	r3, [sl]
90008002:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90008004:	b96c      	cbnz	r4, 90008022 <_ZN21screen_snake_gameView15handleTickEventEv+0x54a>
90008006:	e0d9      	b.n	900081bc <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
90008008:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000800a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000800c:	454b      	cmp	r3, r9
9000800e:	d16c      	bne.n	900080ea <_ZN21screen_snake_gameView15handleTickEventEv+0x612>
        return parent;
90008010:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90008012:	80ef      	strh	r7, [r5, #6]
        return parent;
90008014:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90008016:	6803      	ldr	r3, [r0, #0]
90008018:	695b      	ldr	r3, [r3, #20]
9000801a:	4798      	blx	r3
					piece = piece->next;
9000801c:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
9000801e:	2c00      	cmp	r4, #0
90008020:	d0bc      	beq.n	90007f9c <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90008022:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90008026:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
9000802a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
9000802e:	60e3      	str	r3, [r4, #12]
        setX(x);
90008030:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90008032:	6121      	str	r1, [r4, #16]
90008034:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90008036:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
9000803a:	455e      	cmp	r6, fp
9000803c:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90008040:	d0e2      	beq.n	90008008 <_ZN21screen_snake_gameView15handleTickEventEv+0x530>
        setX(x);
90008042:	4628      	mov	r0, r5
90008044:	47b0      	blx	r6
        setY(y);
90008046:	682b      	ldr	r3, [r5, #0]
90008048:	e7df      	b.n	9000800a <_ZN21screen_snake_gameView15handleTickEventEv+0x532>
        setX(x);
9000804a:	4628      	mov	r0, r5
9000804c:	4798      	blx	r3
9000804e:	e5c7      	b.n	90007be0 <_ZN21screen_snake_gameView15handleTickEventEv+0x108>
90008050:	682a      	ldr	r2, [r5, #0]
        return rect.x;
90008052:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90008056:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 900080fc <_ZN21screen_snake_gameView15handleTickEventEv+0x624>
        setX(x);
9000805a:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
9000805c:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
90008060:	455e      	cmp	r6, fp
				head->old_x = head->pixel->getX();
90008062:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90008066:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
9000806a:	f8ce 4010 	str.w	r4, [lr, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
9000806e:	b219      	sxth	r1, r3
        setX(x);
90008070:	f040 80b6 	bne.w	900081e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x708>
        rect.x = x;
90008074:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008076:	6b53      	ldr	r3, [r2, #52]	; 0x34
90008078:	f8df 9084 	ldr.w	r9, [pc, #132]	; 90008100 <_ZN21screen_snake_gameView15handleTickEventEv+0x628>
9000807c:	454b      	cmp	r3, r9
9000807e:	f040 80ab 	bne.w	900081d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x700>
        rect.y = y;
90008082:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90008084:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90008088:	689b      	ldr	r3, [r3, #8]
9000808a:	6958      	ldr	r0, [r3, #20]
9000808c:	6803      	ldr	r3, [r0, #0]
9000808e:	695b      	ldr	r3, [r3, #20]
90008090:	4798      	blx	r3
				snake_piece *piece = head->next;
90008092:	f8da 3000 	ldr.w	r3, [sl]
90008096:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90008098:	b974      	cbnz	r4, 900080b8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5e0>
9000809a:	e08f      	b.n	900081bc <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
9000809c:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000809e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900080a0:	454b      	cmp	r3, r9
900080a2:	d11d      	bne.n	900080e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x608>
        return parent;
900080a4:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900080a6:	80ef      	strh	r7, [r5, #6]
        return parent;
900080a8:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
900080aa:	6803      	ldr	r3, [r0, #0]
900080ac:	695b      	ldr	r3, [r3, #20]
900080ae:	4798      	blx	r3
					piece = piece->next;
900080b0:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
900080b2:	2c00      	cmp	r4, #0
900080b4:	f43f af72 	beq.w	90007f9c <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900080b8:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900080bc:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900080c0:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900080c4:	60e3      	str	r3, [r4, #12]
        setX(x);
900080c6:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
900080c8:	6121      	str	r1, [r4, #16]
900080ca:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900080cc:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
900080d0:	455e      	cmp	r6, fp
900080d2:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900080d6:	d0e1      	beq.n	9000809c <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>
        setX(x);
900080d8:	4628      	mov	r0, r5
900080da:	47b0      	blx	r6
        setY(y);
900080dc:	682b      	ldr	r3, [r5, #0]
900080de:	e7de      	b.n	9000809e <_ZN21screen_snake_gameView15handleTickEventEv+0x5c6>
900080e0:	4639      	mov	r1, r7
900080e2:	4628      	mov	r0, r5
900080e4:	4798      	blx	r3
        return parent;
900080e6:	68a3      	ldr	r3, [r4, #8]
900080e8:	e7de      	b.n	900080a8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setY(y);
900080ea:	4639      	mov	r1, r7
900080ec:	4628      	mov	r0, r5
900080ee:	4798      	blx	r3
        return parent;
900080f0:	68a3      	ldr	r3, [r4, #8]
900080f2:	e78f      	b.n	90008014 <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
900080f4:	2401f88c 	.word	0x2401f88c
900080f8:	2400987c 	.word	0x2400987c
900080fc:	9000228d 	.word	0x9000228d
90008100:	90002291 	.word	0x90002291
90008104:	24000034 	.word	0x24000034
90008108:	24009878 	.word	0x24009878
9000810c:	9002cfd4 	.word	0x9002cfd4
90008110:	24009888 	.word	0x24009888
90008114:	24009884 	.word	0x24009884
        return rect.y;
90008118:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
9000811c:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90008120:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
90008124:	3b0a      	subs	r3, #10
90008126:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 90008220 <_ZN21screen_snake_gameView15handleTickEventEv+0x748>
9000812a:	b21c      	sxth	r4, r3
        setX(x);
9000812c:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
9000812e:	f8ce 100c 	str.w	r1, [lr, #12]
90008132:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008134:	455a      	cmp	r2, fp
90008136:	d15b      	bne.n	900081f0 <_ZN21screen_snake_gameView15handleTickEventEv+0x718>
        rect.x = x;
90008138:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000813a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000813c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 90008224 <_ZN21screen_snake_gameView15handleTickEventEv+0x74c>
90008140:	454b      	cmp	r3, r9
90008142:	d151      	bne.n	900081e8 <_ZN21screen_snake_gameView15handleTickEventEv+0x710>
        rect.y = y;
90008144:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90008146:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
9000814a:	689b      	ldr	r3, [r3, #8]
9000814c:	6958      	ldr	r0, [r3, #20]
9000814e:	6803      	ldr	r3, [r0, #0]
90008150:	695b      	ldr	r3, [r3, #20]
90008152:	4798      	blx	r3
				snake_piece *piece = head->next;
90008154:	f8da 3000 	ldr.w	r3, [sl]
90008158:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
9000815a:	b974      	cbnz	r4, 9000817a <_ZN21screen_snake_gameView15handleTickEventEv+0x6a2>
9000815c:	e02e      	b.n	900081bc <_ZN21screen_snake_gameView15handleTickEventEv+0x6e4>
        rect.x = x;
9000815e:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008160:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008162:	454b      	cmp	r3, r9
90008164:	d11d      	bne.n	900081a2 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
        return parent;
90008166:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90008168:	80ef      	strh	r7, [r5, #6]
        return parent;
9000816a:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
9000816c:	6803      	ldr	r3, [r0, #0]
9000816e:	695b      	ldr	r3, [r3, #20]
90008170:	4798      	blx	r3
					piece = piece->next;
90008172:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90008174:	2c00      	cmp	r4, #0
90008176:	f43f af11 	beq.w	90007f9c <_ZN21screen_snake_gameView15handleTickEventEv+0x4c4>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000817a:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
9000817e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90008182:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90008186:	60e3      	str	r3, [r4, #12]
        setX(x);
90008188:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000818a:	6121      	str	r1, [r4, #16]
9000818c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000818e:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90008192:	455e      	cmp	r6, fp
90008194:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90008198:	d0e1      	beq.n	9000815e <_ZN21screen_snake_gameView15handleTickEventEv+0x686>
        setX(x);
9000819a:	4628      	mov	r0, r5
9000819c:	47b0      	blx	r6
        setY(y);
9000819e:	682b      	ldr	r3, [r5, #0]
900081a0:	e7de      	b.n	90008160 <_ZN21screen_snake_gameView15handleTickEventEv+0x688>
900081a2:	4639      	mov	r1, r7
900081a4:	4628      	mov	r0, r5
900081a6:	4798      	blx	r3
        return parent;
900081a8:	68a3      	ldr	r3, [r4, #8]
900081aa:	e7de      	b.n	9000816a <_ZN21screen_snake_gameView15handleTickEventEv+0x692>
        setY(y);
900081ac:	4621      	mov	r1, r4
900081ae:	4628      	mov	r0, r5
900081b0:	4798      	blx	r3
900081b2:	e5dc      	b.n	90007d6e <_ZN21screen_snake_gameView15handleTickEventEv+0x296>
        setX(x);
900081b4:	4628      	mov	r0, r5
900081b6:	4798      	blx	r3
        setY(y);
900081b8:	682a      	ldr	r2, [r5, #0]
900081ba:	e5d1      	b.n	90007d60 <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
			head->pixel->getParent()->invalidate();
900081bc:	689d      	ldr	r5, [r3, #8]
900081be:	e6d5      	b.n	90007f6c <_ZN21screen_snake_gameView15handleTickEventEv+0x494>
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900081c0:	4638      	mov	r0, r7
900081c2:	4790      	blx	r2
900081c4:	e582      	b.n	90007ccc <_ZN21screen_snake_gameView15handleTickEventEv+0x1f4>
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
900081c6:	4638      	mov	r0, r7
900081c8:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900081ca:	6831      	ldr	r1, [r6, #0]
900081cc:	683a      	ldr	r2, [r7, #0]
900081ce:	e55b      	b.n	90007c88 <_ZN21screen_snake_gameView15handleTickEventEv+0x1b0>
900081d0:	2100      	movs	r1, #0
900081d2:	4628      	mov	r0, r5
900081d4:	4790      	blx	r2
900081d6:	e510      	b.n	90007bfa <_ZN21screen_snake_gameView15handleTickEventEv+0x122>
900081d8:	4621      	mov	r1, r4
900081da:	4628      	mov	r0, r5
900081dc:	4798      	blx	r3
900081de:	e751      	b.n	90008084 <_ZN21screen_snake_gameView15handleTickEventEv+0x5ac>
        setX(x);
900081e0:	4628      	mov	r0, r5
900081e2:	47b0      	blx	r6
        setY(y);
900081e4:	682a      	ldr	r2, [r5, #0]
900081e6:	e746      	b.n	90008076 <_ZN21screen_snake_gameView15handleTickEventEv+0x59e>
900081e8:	4621      	mov	r1, r4
900081ea:	4628      	mov	r0, r5
900081ec:	4798      	blx	r3
900081ee:	e7aa      	b.n	90008146 <_ZN21screen_snake_gameView15handleTickEventEv+0x66e>
        setX(x);
900081f0:	4628      	mov	r0, r5
900081f2:	4790      	blx	r2
        setY(y);
900081f4:	682b      	ldr	r3, [r5, #0]
900081f6:	e7a0      	b.n	9000813a <_ZN21screen_snake_gameView15handleTickEventEv+0x662>
900081f8:	4621      	mov	r1, r4
900081fa:	4628      	mov	r0, r5
900081fc:	4798      	blx	r3
900081fe:	e6f7      	b.n	90007ff0 <_ZN21screen_snake_gameView15handleTickEventEv+0x518>
        setX(x);
90008200:	4628      	mov	r0, r5
90008202:	4790      	blx	r2
        setY(y);
90008204:	682b      	ldr	r3, [r5, #0]
90008206:	e6ec      	b.n	90007fe2 <_ZN21screen_snake_gameView15handleTickEventEv+0x50a>
		if( tick > 0 ) {
90008208:	4e04      	ldr	r6, [pc, #16]	; (9000821c <_ZN21screen_snake_gameView15handleTickEventEv+0x744>)
9000820a:	6832      	ldr	r2, [r6, #0]
9000820c:	2a00      	cmp	r2, #0
9000820e:	f77f ae5a 	ble.w	90007ec6 <_ZN21screen_snake_gameView15handleTickEventEv+0x3ee>
90008212:	e682      	b.n	90007f1a <_ZN21screen_snake_gameView15handleTickEventEv+0x442>
						error();
90008214:	683b      	ldr	r3, [r7, #0]
90008216:	4638      	mov	r0, r7
90008218:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9000821a:	e6aa      	b.n	90007f72 <_ZN21screen_snake_gameView15handleTickEventEv+0x49a>
9000821c:	2400987c 	.word	0x2400987c
90008220:	9000228d 	.word	0x9000228d
90008224:	90002291 	.word	0x90002291

90008228 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90008228:	b500      	push	{lr}
          touchable(false),
9000822a:	f44f 7180 	mov.w	r1, #256	; 0x100
9000822e:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90008230:	4a0f      	ldr	r2, [pc, #60]	; (90008270 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
90008232:	2300      	movs	r3, #0
          touchable(false),
90008234:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90008238:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
9000823c:	490d      	ldr	r1, [pc, #52]	; (90008274 <_ZN21screen_snake_gameView5errorEv+0x4c>)
9000823e:	3004      	adds	r0, #4
90008240:	9201      	str	r2, [sp, #4]
        color = newColor;
90008242:	4a0d      	ldr	r2, [pc, #52]	; (90008278 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
90008244:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90008248:	920b      	str	r2, [sp, #44]	; 0x2c
9000824a:	e9cd 3102 	strd	r3, r1, [sp, #8]
9000824e:	a901      	add	r1, sp, #4
          nextSibling(0),
90008250:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
90008254:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90008258:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000825c:	f00a faec 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90008260:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
90008262:	6803      	ldr	r3, [r0, #0]
90008264:	695b      	ldr	r3, [r3, #20]
90008266:	4798      	blx	r3
}
90008268:	b00d      	add	sp, #52	; 0x34
9000826a:	f85d fb04 	ldr.w	pc, [sp], #4
9000826e:	bf00      	nop
90008270:	9002d88c 	.word	0x9002d88c
90008274:	011001e0 	.word	0x011001e0
90008278:	ffff0000 	.word	0xffff0000

9000827c <_ZN30screen_space_invadersPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_space_invadersPresenter() {}
9000827c:	4770      	bx	lr
9000827e:	bf00      	nop

90008280 <_ZThn4_N30screen_space_invadersPresenterD1Ev>:
90008280:	3804      	subs	r0, #4
90008282:	4770      	bx	lr

90008284 <_ZN30screen_space_invadersPresenter10deactivateEv>:
}

void screen_space_invadersPresenter::activate()
{

}
90008284:	4770      	bx	lr
90008286:	bf00      	nop

90008288 <_ZN30screen_space_invadersPresenterD0Ev>:
90008288:	b510      	push	{r4, lr}
9000828a:	4604      	mov	r4, r0
9000828c:	2110      	movs	r1, #16
9000828e:	f021 f869 	bl	90029364 <_ZdlPvj>
90008292:	4620      	mov	r0, r4
90008294:	bd10      	pop	{r4, pc}
90008296:	bf00      	nop

90008298 <_ZThn4_N30screen_space_invadersPresenterD0Ev>:
90008298:	b500      	push	{lr}
9000829a:	3804      	subs	r0, #4
9000829c:	b083      	sub	sp, #12
9000829e:	2110      	movs	r1, #16
900082a0:	9001      	str	r0, [sp, #4]
900082a2:	f021 f85f 	bl	90029364 <_ZdlPvj>
900082a6:	9801      	ldr	r0, [sp, #4]
900082a8:	b003      	add	sp, #12
900082aa:	f85d fb04 	ldr.w	pc, [sp], #4
900082ae:	bf00      	nop

900082b0 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>:
    : view(v)
900082b0:	4a06      	ldr	r2, [pc, #24]	; (900082cc <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView+0x1c>)
900082b2:	60c1      	str	r1, [r0, #12]
screen_space_invadersPresenter::screen_space_invadersPresenter(screen_space_invadersView& v)
900082b4:	b410      	push	{r4}
900082b6:	2400      	movs	r4, #0
900082b8:	6084      	str	r4, [r0, #8]
    : view(v)
900082ba:	f102 0408 	add.w	r4, r2, #8
900082be:	3220      	adds	r2, #32
900082c0:	e9c0 4200 	strd	r4, r2, [r0]
}
900082c4:	f85d 4b04 	ldr.w	r4, [sp], #4
900082c8:	4770      	bx	lr
900082ca:	bf00      	nop
900082cc:	9002d02c 	.word	0x9002d02c

900082d0 <_ZN25screen_space_invadersView14tearDownScreenEv>:
}

void screen_space_invadersView::tearDownScreen()
{
    screen_space_invadersViewBase::tearDownScreen();
}
900082d0:	4770      	bx	lr
900082d2:	bf00      	nop

900082d4 <_ZN25screen_space_invadersView15check_game_overEv>:
		}
	}
}

void screen_space_invadersView::check_game_over()
{
900082d4:	b5f0      	push	{r4, r5, r6, r7, lr}
        return visible;
900082d6:	4c75      	ldr	r4, [pc, #468]	; (900084ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d8>)
	// check that the player hasn't killed all the enemies
	invaders_game_over = true;
900082d8:	2301      	movs	r3, #1
900082da:	4f75      	ldr	r7, [pc, #468]	; (900084b0 <_ZN25screen_space_invadersView15check_game_overEv+0x1dc>)
900082dc:	f894 6025 	ldrb.w	r6, [r4, #37]	; 0x25
900082e0:	703b      	strb	r3, [r7, #0]
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
		if( enemies[i].isVisible()) {
900082e2:	2e00      	cmp	r6, #0
900082e4:	f040 80de 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
900082e8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
900082ec:	2b00      	cmp	r3, #0
900082ee:	f040 80d9 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
900082f2:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
900082f6:	2b00      	cmp	r3, #0
900082f8:	f040 80d4 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
900082fc:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
90008300:	2b00      	cmp	r3, #0
90008302:	f040 80cf 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008306:	f894 30d5 	ldrb.w	r3, [r4, #213]	; 0xd5
9000830a:	2b00      	cmp	r3, #0
9000830c:	f040 80ca 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008310:	f894 3101 	ldrb.w	r3, [r4, #257]	; 0x101
90008314:	2b00      	cmp	r3, #0
90008316:	f040 80c5 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000831a:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
9000831e:	2b00      	cmp	r3, #0
90008320:	f040 80c0 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008324:	f894 3159 	ldrb.w	r3, [r4, #345]	; 0x159
90008328:	2b00      	cmp	r3, #0
9000832a:	f040 80bb 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000832e:	f894 3185 	ldrb.w	r3, [r4, #389]	; 0x185
90008332:	2b00      	cmp	r3, #0
90008334:	f040 80b6 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008338:	f894 31b1 	ldrb.w	r3, [r4, #433]	; 0x1b1
9000833c:	2b00      	cmp	r3, #0
9000833e:	f040 80b1 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008342:	f894 31dd 	ldrb.w	r3, [r4, #477]	; 0x1dd
90008346:	2b00      	cmp	r3, #0
90008348:	f040 80ac 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000834c:	f894 3209 	ldrb.w	r3, [r4, #521]	; 0x209
90008350:	2b00      	cmp	r3, #0
90008352:	f040 80a7 	bne.w	900084a4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008356:	4b55      	ldr	r3, [pc, #340]	; (900084ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d8>)
90008358:	f503 7504 	add.w	r5, r3, #528	; 0x210
9000835c:	e009      	b.n	90008372 <_ZN25screen_space_invadersView15check_game_overEv+0x9e>

		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
			&& ship.getX() > enemies[i].getX()
			&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
			|| (ship.getX() + ship.getWidth() < enemies[i].getX()+enemies[i].getWidth()
9000835e:	f9b0 c180 	ldrsh.w	ip, [r0, #384]	; 0x180
90008362:	44f4      	add	ip, lr
				&& ship.getX() + ship.getWidth() > enemies[i].getX()
90008364:	4561      	cmp	r1, ip
90008366:	da01      	bge.n	9000836c <_ZN25screen_space_invadersView15check_game_overEv+0x98>
90008368:	4562      	cmp	r2, ip
9000836a:	dc26      	bgt.n	900083ba <_ZN25screen_space_invadersView15check_game_overEv+0xe6>
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000836c:	332c      	adds	r3, #44	; 0x2c
9000836e:	42ab      	cmp	r3, r5
90008370:	d038      	beq.n	900083e4 <_ZN25screen_space_invadersView15check_game_overEv+0x110>
		if( !enemies[i].isVisible() )
90008372:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
90008376:	2a00      	cmp	r2, #0
90008378:	d0f8      	beq.n	9000836c <_ZN25screen_space_invadersView15check_game_overEv+0x98>
        return rect.x;
9000837a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9000837e:	f9b0 e17c 	ldrsh.w	lr, [r0, #380]	; 0x17c
		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
90008382:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
			&& ship.getX() > enemies[i].getX()
90008386:	458e      	cmp	lr, r1
		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
90008388:	440a      	add	r2, r1
			&& ship.getX() > enemies[i].getX()
9000838a:	dde8      	ble.n	9000835e <_ZN25screen_space_invadersView15check_game_overEv+0x8a>
9000838c:	4596      	cmp	lr, r2
9000838e:	dae6      	bge.n	9000835e <_ZN25screen_space_invadersView15check_game_overEv+0x8a>
			&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
90008390:	f9b0 1182 	ldrsh.w	r1, [r0, #386]	; 0x182
90008394:	f9b0 217e 	ldrsh.w	r2, [r0, #382]	; 0x17e
90008398:	2900      	cmp	r1, #0
9000839a:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
9000839e:	bfb8      	it	lt
900083a0:	3101      	addlt	r1, #1
900083a2:	eb02 0261 	add.w	r2, r2, r1, asr #1
900083a6:	4562      	cmp	r2, ip
900083a8:	dde0      	ble.n	9000836c <_ZN25screen_space_invadersView15check_game_overEv+0x98>
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
900083aa:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
900083ae:	4461      	add	r1, ip
900083b0:	428a      	cmp	r2, r1
900083b2:	dadb      	bge.n	9000836c <_ZN25screen_space_invadersView15check_game_overEv+0x98>
				&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
				&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())	)
		{
			// Enemy collided with the player
			invaders_game_over = true;
900083b4:	2301      	movs	r3, #1
900083b6:	703b      	strb	r3, [r7, #0]
			// Enemy has gone past the player
			invaders_game_over = true;
			return;
		}
	}
}
900083b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
				&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
900083ba:	f9b0 1182 	ldrsh.w	r1, [r0, #386]	; 0x182
900083be:	f9b0 217e 	ldrsh.w	r2, [r0, #382]	; 0x17e
900083c2:	2900      	cmp	r1, #0
900083c4:	bfb8      	it	lt
900083c6:	3101      	addlt	r1, #1
900083c8:	eb02 0261 	add.w	r2, r2, r1, asr #1
900083cc:	f9b3 1006 	ldrsh.w	r1, [r3, #6]
900083d0:	428a      	cmp	r2, r1
900083d2:	ddcb      	ble.n	9000836c <_ZN25screen_space_invadersView15check_game_overEv+0x98>
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
900083d4:	f9b3 c00a 	ldrsh.w	ip, [r3, #10]
900083d8:	4461      	add	r1, ip
				&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())	)
900083da:	428a      	cmp	r2, r1
900083dc:	dbea      	blt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900083de:	332c      	adds	r3, #44	; 0x2c
900083e0:	42ab      	cmp	r3, r5
900083e2:	d1c6      	bne.n	90008372 <_ZN25screen_space_invadersView15check_game_overEv+0x9e>
		if( !enemies[i].isVisible() )
900083e4:	b126      	cbz	r6, 900083f0 <_ZN25screen_space_invadersView15check_game_overEv+0x11c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900083e6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900083ea:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900083ee:	dce1      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
900083f0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
900083f4:	b123      	cbz	r3, 90008400 <_ZN25screen_space_invadersView15check_game_overEv+0x12c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900083f6:	f9b4 3032 	ldrsh.w	r3, [r4, #50]	; 0x32
900083fa:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900083fe:	dcd9      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008400:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
90008404:	b123      	cbz	r3, 90008410 <_ZN25screen_space_invadersView15check_game_overEv+0x13c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008406:	f9b4 305e 	ldrsh.w	r3, [r4, #94]	; 0x5e
9000840a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000840e:	dcd1      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008410:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
90008414:	b123      	cbz	r3, 90008420 <_ZN25screen_space_invadersView15check_game_overEv+0x14c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008416:	f9b4 308a 	ldrsh.w	r3, [r4, #138]	; 0x8a
9000841a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000841e:	dcc9      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008420:	f894 30d5 	ldrb.w	r3, [r4, #213]	; 0xd5
90008424:	b123      	cbz	r3, 90008430 <_ZN25screen_space_invadersView15check_game_overEv+0x15c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008426:	f9b4 30b6 	ldrsh.w	r3, [r4, #182]	; 0xb6
9000842a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000842e:	dcc1      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008430:	f894 3101 	ldrb.w	r3, [r4, #257]	; 0x101
90008434:	b123      	cbz	r3, 90008440 <_ZN25screen_space_invadersView15check_game_overEv+0x16c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008436:	f9b4 30e2 	ldrsh.w	r3, [r4, #226]	; 0xe2
9000843a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000843e:	dcb9      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008440:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
90008444:	b123      	cbz	r3, 90008450 <_ZN25screen_space_invadersView15check_game_overEv+0x17c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008446:	f9b4 310e 	ldrsh.w	r3, [r4, #270]	; 0x10e
9000844a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000844e:	dcb1      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008450:	f894 3159 	ldrb.w	r3, [r4, #345]	; 0x159
90008454:	b123      	cbz	r3, 90008460 <_ZN25screen_space_invadersView15check_game_overEv+0x18c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008456:	f9b4 313a 	ldrsh.w	r3, [r4, #314]	; 0x13a
9000845a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000845e:	dca9      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008460:	f894 3185 	ldrb.w	r3, [r4, #389]	; 0x185
90008464:	b123      	cbz	r3, 90008470 <_ZN25screen_space_invadersView15check_game_overEv+0x19c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008466:	f9b4 3166 	ldrsh.w	r3, [r4, #358]	; 0x166
9000846a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000846e:	dca1      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008470:	f894 31b1 	ldrb.w	r3, [r4, #433]	; 0x1b1
90008474:	b123      	cbz	r3, 90008480 <_ZN25screen_space_invadersView15check_game_overEv+0x1ac>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008476:	f9b4 3192 	ldrsh.w	r3, [r4, #402]	; 0x192
9000847a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000847e:	dc99      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008480:	f894 31dd 	ldrb.w	r3, [r4, #477]	; 0x1dd
90008484:	b123      	cbz	r3, 90008490 <_ZN25screen_space_invadersView15check_game_overEv+0x1bc>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008486:	f9b4 31be 	ldrsh.w	r3, [r4, #446]	; 0x1be
9000848a:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
9000848e:	dc91      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008490:	f894 3209 	ldrb.w	r3, [r4, #521]	; 0x209
90008494:	2b00      	cmp	r3, #0
90008496:	d08f      	beq.n	900083b8 <_ZN25screen_space_invadersView15check_game_overEv+0xe4>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
90008498:	f9b4 31ea 	ldrsh.w	r3, [r4, #490]	; 0x1ea
9000849c:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900084a0:	dc88      	bgt.n	900083b4 <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
}
900084a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			invaders_game_over = false;
900084a4:	2300      	movs	r3, #0
900084a6:	703b      	strb	r3, [r7, #0]
			break;
900084a8:	e755      	b.n	90008356 <_ZN25screen_space_invadersView15check_game_overEv+0x82>
900084aa:	bf00      	nop
900084ac:	2401f898 	.word	0x2401f898
900084b0:	2401faac 	.word	0x2401faac

900084b4 <_ZN25screen_space_invadersViewD1Ev>:

class screen_space_invadersView : public screen_space_invadersViewBase
{
public:
    screen_space_invadersView();
    virtual ~screen_space_invadersView() {}
900084b4:	4b03      	ldr	r3, [pc, #12]	; (900084c4 <_ZN25screen_space_invadersViewD1Ev+0x10>)
900084b6:	b510      	push	{r4, lr}
900084b8:	4604      	mov	r4, r0
900084ba:	6003      	str	r3, [r0, #0]
900084bc:	f7fd f9aa 	bl	90005814 <_ZN29screen_space_invadersViewBaseD1Ev>
900084c0:	4620      	mov	r0, r4
900084c2:	bd10      	pop	{r4, pc}
900084c4:	9002d05c 	.word	0x9002d05c

900084c8 <_ZN25screen_space_invadersViewD0Ev>:
900084c8:	4b06      	ldr	r3, [pc, #24]	; (900084e4 <_ZN25screen_space_invadersViewD0Ev+0x1c>)
900084ca:	b510      	push	{r4, lr}
900084cc:	4604      	mov	r4, r0
900084ce:	6003      	str	r3, [r0, #0]
900084d0:	f7fd f9a0 	bl	90005814 <_ZN29screen_space_invadersViewBaseD1Ev>
900084d4:	f641 71b4 	movw	r1, #8116	; 0x1fb4
900084d8:	4620      	mov	r0, r4
900084da:	f020 ff43 	bl	90029364 <_ZdlPvj>
900084de:	4620      	mov	r0, r4
900084e0:	bd10      	pop	{r4, pc}
900084e2:	bf00      	nop
900084e4:	9002d05c 	.word	0x9002d05c

900084e8 <_GLOBAL__sub_I_enemies>:
}
900084e8:	b570      	push	{r4, r5, r6, lr}
900084ea:	4c08      	ldr	r4, [pc, #32]	; (9000850c <_GLOBAL__sub_I_enemies+0x24>)
900084ec:	b082      	sub	sp, #8
900084ee:	f64f 76ff 	movw	r6, #65535	; 0xffff
900084f2:	f504 7504 	add.w	r5, r4, #528	; 0x210
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
900084f6:	4620      	mov	r0, r4
900084f8:	342c      	adds	r4, #44	; 0x2c
900084fa:	a901      	add	r1, sp, #4
900084fc:	f8ad 6004 	strh.w	r6, [sp, #4]
90008500:	f00c f8c8 	bl	90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90008504:	42ac      	cmp	r4, r5
90008506:	d1f6      	bne.n	900084f6 <_GLOBAL__sub_I_enemies+0xe>
}
90008508:	b002      	add	sp, #8
9000850a:	bd70      	pop	{r4, r5, r6, pc}
9000850c:	2401f898 	.word	0x2401f898

90008510 <_GLOBAL__sub_D_enemies>:
90008510:	b538      	push	{r3, r4, r5, lr}
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
90008512:	4c05      	ldr	r4, [pc, #20]	; (90008528 <_GLOBAL__sub_D_enemies+0x18>)
90008514:	f5a4 7504 	sub.w	r5, r4, #528	; 0x210
90008518:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
9000851c:	681b      	ldr	r3, [r3, #0]
9000851e:	4620      	mov	r0, r4
90008520:	4798      	blx	r3
90008522:	42ac      	cmp	r4, r5
90008524:	d1f8      	bne.n	90008518 <_GLOBAL__sub_D_enemies+0x8>
}
90008526:	bd38      	pop	{r3, r4, r5, pc}
90008528:	2401faa8 	.word	0x2401faa8

9000852c <_ZN25screen_space_invadersView15handleTickEventEv>:
	if( !invaders_game_over ) {
9000852c:	4b82      	ldr	r3, [pc, #520]	; (90008738 <_ZN25screen_space_invadersView15handleTickEventEv+0x20c>)
{
9000852e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !invaders_game_over ) {
90008532:	781d      	ldrb	r5, [r3, #0]
{
90008534:	b082      	sub	sp, #8
90008536:	4604      	mov	r4, r0
	if( !invaders_game_over ) {
90008538:	2d00      	cmp	r5, #0
9000853a:	d169      	bne.n	90008610 <_ZN25screen_space_invadersView15handleTickEventEv+0xe4>
		check_bullet_hitbox();
9000853c:	6803      	ldr	r3, [r0, #0]
9000853e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90008540:	4798      	blx	r3
		if( bullet.isVisible() ) {
90008542:	f894 31c9 	ldrb.w	r3, [r4, #457]	; 0x1c9
90008546:	2b00      	cmp	r3, #0
90008548:	d14c      	bne.n	900085e4 <_ZN25screen_space_invadersView15handleTickEventEv+0xb8>
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
9000854a:	f894 30c4 	ldrb.w	r3, [r4, #196]	; 0xc4
9000854e:	2b00      	cmp	r3, #0
90008550:	d140      	bne.n	900085d4 <_ZN25screen_space_invadersView15handleTickEventEv+0xa8>
		else if( btn_right.getPressedState() && ship.getX() + ship.getWidth() < SCREEN_WIDTH ) {
90008552:	f894 3100 	ldrb.w	r3, [r4, #256]	; 0x100
90008556:	b13b      	cbz	r3, 90008568 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
90008558:	f9b4 217c 	ldrsh.w	r2, [r4, #380]	; 0x17c
9000855c:	f9b4 3180 	ldrsh.w	r3, [r4, #384]	; 0x180
90008560:	4413      	add	r3, r2
90008562:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90008566:	db6d      	blt.n	90008644 <_ZN25screen_space_invadersView15handleTickEventEv+0x118>
        return parent;
90008568:	f8d4 018c 	ldr.w	r0, [r4, #396]	; 0x18c
		ship.getParent()->invalidate();
9000856c:	6803      	ldr	r3, [r0, #0]
9000856e:	695b      	ldr	r3, [r3, #20]
90008570:	4798      	blx	r3
		if( ++tick%10 == 0 ) {
90008572:	4972      	ldr	r1, [pc, #456]	; (9000873c <_ZN25screen_space_invadersView15handleTickEventEv+0x210>)
90008574:	4872      	ldr	r0, [pc, #456]	; (90008740 <_ZN25screen_space_invadersView15handleTickEventEv+0x214>)
90008576:	680b      	ldr	r3, [r1, #0]
90008578:	4a72      	ldr	r2, [pc, #456]	; (90008744 <_ZN25screen_space_invadersView15handleTickEventEv+0x218>)
9000857a:	3301      	adds	r3, #1
9000857c:	fb00 2203 	mla	r2, r0, r3, r2
90008580:	4871      	ldr	r0, [pc, #452]	; (90008748 <_ZN25screen_space_invadersView15handleTickEventEv+0x21c>)
90008582:	600b      	str	r3, [r1, #0]
90008584:	ebb0 0f72 	cmp.w	r0, r2, ror #1
90008588:	d91d      	bls.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
			if( enemy_move_direction == MOVE_RIGHT ) {
9000858a:	4a70      	ldr	r2, [pc, #448]	; (9000874c <_ZN25screen_space_invadersView15handleTickEventEv+0x220>)
9000858c:	6813      	ldr	r3, [r2, #0]
9000858e:	2b01      	cmp	r3, #1
90008590:	f000 808a 	beq.w	900086a8 <_ZN25screen_space_invadersView15handleTickEventEv+0x17c>
			else if( enemy_move_direction == MOVE_LEFT ) {
90008594:	2b00      	cmp	r3, #0
90008596:	d159      	bne.n	9000864c <_ZN25screen_space_invadersView15handleTickEventEv+0x120>
        return rect.x;
90008598:	4d6d      	ldr	r5, [pc, #436]	; (90008750 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( enemies[0].getX() > 10 ) {
9000859a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9000859e:	2b0a      	cmp	r3, #10
900085a0:	f340 80a2 	ble.w	900086e8 <_ZN25screen_space_invadersView15handleTickEventEv+0x1bc>
900085a4:	4e6b      	ldr	r6, [pc, #428]	; (90008754 <_ZN25screen_space_invadersView15handleTickEventEv+0x228>)
900085a6:	f505 7704 	add.w	r7, r5, #528	; 0x210
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900085aa:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900085ac:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900085ae:	88a9      	ldrh	r1, [r5, #4]
900085b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900085b2:	390a      	subs	r1, #10
900085b4:	42b2      	cmp	r2, r6
900085b6:	b209      	sxth	r1, r1
900085b8:	d16d      	bne.n	90008696 <_ZN25screen_space_invadersView15handleTickEventEv+0x16a>
        rect.x = x;
900085ba:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900085bc:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900085be:	695b      	ldr	r3, [r3, #20]
900085c0:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900085c2:	42af      	cmp	r7, r5
900085c4:	d1f1      	bne.n	900085aa <_ZN25screen_space_invadersView15handleTickEventEv+0x7e>
		check_game_over();
900085c6:	6823      	ldr	r3, [r4, #0]
900085c8:	4620      	mov	r0, r4
900085ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
900085cc:	b002      	add	sp, #8
900085ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		check_game_over();
900085d2:	4718      	bx	r3
        return rect.x;
900085d4:	f9b4 317c 	ldrsh.w	r3, [r4, #380]	; 0x17c
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
900085d8:	2b00      	cmp	r3, #0
900085da:	ddba      	ble.n	90008552 <_ZN25screen_space_invadersView15handleTickEventEv+0x26>
			ship.setX(ship.getX() - SHIP_MOVE_SPEED);
900085dc:	3b0a      	subs	r3, #10
        rect.x = x;
900085de:	f8a4 317c 	strh.w	r3, [r4, #380]	; 0x17c
    }
900085e2:	e7c1      	b.n	90008568 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
900085e4:	f8b4 31aa 	ldrh.w	r3, [r4, #426]	; 0x1aa
			bullet.invalidate();
900085e8:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
900085ec:	3b0a      	subs	r3, #10
			bullet.invalidate();
900085ee:	9001      	str	r0, [sp, #4]
        rect.y = y;
900085f0:	f8a4 31aa 	strh.w	r3, [r4, #426]	; 0x1aa
900085f4:	f00b fb88 	bl	90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
			if( bullet.getY()+bullet.getHeight() < 0 ) {
900085f8:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
900085fc:	f9b4 31ae 	ldrsh.w	r3, [r4, #430]	; 0x1ae
90008600:	9801      	ldr	r0, [sp, #4]
90008602:	42da      	cmn	r2, r3
90008604:	d5a1      	bpl.n	9000854a <_ZN25screen_space_invadersView15handleTickEventEv+0x1e>
        visible = vis;
90008606:	f884 51c9 	strb.w	r5, [r4, #457]	; 0x1c9
				bullet.invalidate();
9000860a:	f00b fb7d 	bl	90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
9000860e:	e79c      	b.n	9000854a <_ZN25screen_space_invadersView15handleTickEventEv+0x1e>
90008610:	2501      	movs	r5, #1
		lbl_game_over.invalidate();
90008612:	f500 7019 	add.w	r0, r0, #612	; 0x264
90008616:	f884 5289 	strb.w	r5, [r4, #649]	; 0x289
9000861a:	f010 fe06 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		btn_back.invalidate();
9000861e:	f504 700a 	add.w	r0, r4, #552	; 0x228
90008622:	f884 524d 	strb.w	r5, [r4, #589]	; 0x24d
90008626:	f010 fe00 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( enemies_killed == NUM_OF_ENEMIES ) {
9000862a:	4b4b      	ldr	r3, [pc, #300]	; (90008758 <_ZN25screen_space_invadersView15handleTickEventEv+0x22c>)
9000862c:	681b      	ldr	r3, [r3, #0]
9000862e:	2b0c      	cmp	r3, #12
90008630:	d05d      	beq.n	900086ee <_ZN25screen_space_invadersView15handleTickEventEv+0x1c2>
			lbl_lose.invalidate();
90008632:	f504 704f 	add.w	r0, r4, #828	; 0x33c
90008636:	f884 5361 	strb.w	r5, [r4, #865]	; 0x361
}
9000863a:	b002      	add	sp, #8
9000863c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			lbl_lose.invalidate();
90008640:	f010 bdf3 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
			ship.setX(ship.getX() + SHIP_MOVE_SPEED);
90008644:	320a      	adds	r2, #10
        rect.x = x;
90008646:	f8a4 217c 	strh.w	r2, [r4, #380]	; 0x17c
    }
9000864a:	e78d      	b.n	90008568 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
			else if( enemy_move_direction == MOVE_DOWN ) {
9000864c:	2b03      	cmp	r3, #3
9000864e:	d1ba      	bne.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
        return rect.height;
90008650:	4d3f      	ldr	r5, [pc, #252]	; (90008750 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( pixels_moved < enemies[0].getHeight()/2 ) {
90008652:	4e42      	ldr	r6, [pc, #264]	; (9000875c <_ZN25screen_space_invadersView15handleTickEventEv+0x230>)
90008654:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90008658:	6831      	ldr	r1, [r6, #0]
9000865a:	2b00      	cmp	r3, #0
9000865c:	bfb8      	it	lt
9000865e:	3301      	addlt	r3, #1
90008660:	ebb1 0f63 	cmp.w	r1, r3, asr #1
90008664:	da59      	bge.n	9000871a <_ZN25screen_space_invadersView15handleTickEventEv+0x1ee>
90008666:	4d3a      	ldr	r5, [pc, #232]	; (90008750 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
90008668:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 90008760 <_ZN25screen_space_invadersView15handleTickEventEv+0x234>
9000866c:	f505 7704 	add.w	r7, r5, #528	; 0x210
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008670:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
90008672:	4628      	mov	r0, r5
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008674:	88e9      	ldrh	r1, [r5, #6]
90008676:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008678:	310a      	adds	r1, #10
9000867a:	4542      	cmp	r2, r8
9000867c:	b209      	sxth	r1, r1
        return rect.y;
9000867e:	d13f      	bne.n	90008700 <_ZN25screen_space_invadersView15handleTickEventEv+0x1d4>
        rect.y = y;
90008680:	80e9      	strh	r1, [r5, #6]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008682:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
90008684:	695b      	ldr	r3, [r3, #20]
90008686:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
90008688:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000868a:	42af      	cmp	r7, r5
						pixels_moved += ENEMY_MOVE_SPEED;
9000868c:	f103 030a 	add.w	r3, r3, #10
90008690:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008692:	d1ed      	bne.n	90008670 <_ZN25screen_space_invadersView15handleTickEventEv+0x144>
90008694:	e797      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
90008696:	4790      	blx	r2
						enemies[i].invalidate();
90008698:	682b      	ldr	r3, [r5, #0]
9000869a:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000869c:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
9000869e:	695b      	ldr	r3, [r3, #20]
900086a0:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900086a2:	42bd      	cmp	r5, r7
900086a4:	d181      	bne.n	900085aa <_ZN25screen_space_invadersView15handleTickEventEv+0x7e>
900086a6:	e78e      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
        return rect.x;
900086a8:	4d29      	ldr	r5, [pc, #164]	; (90008750 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
900086aa:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
900086ae:	f9b5 1110 	ldrsh.w	r1, [r5, #272]	; 0x110
900086b2:	440b      	add	r3, r1
900086b4:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900086b8:	da16      	bge.n	900086e8 <_ZN25screen_space_invadersView15handleTickEventEv+0x1bc>
900086ba:	4e26      	ldr	r6, [pc, #152]	; (90008754 <_ZN25screen_space_invadersView15handleTickEventEv+0x228>)
900086bc:	f505 7704 	add.w	r7, r5, #528	; 0x210
900086c0:	e006      	b.n	900086d0 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a4>
        rect.x = x;
900086c2:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900086c4:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900086c6:	695b      	ldr	r3, [r3, #20]
900086c8:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900086ca:	42af      	cmp	r7, r5
900086cc:	f43f af7b 	beq.w	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
900086d0:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900086d2:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
900086d4:	88a9      	ldrh	r1, [r5, #4]
900086d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900086d8:	310a      	adds	r1, #10
900086da:	42b2      	cmp	r2, r6
900086dc:	b209      	sxth	r1, r1
        return rect.x;
900086de:	d0f0      	beq.n	900086c2 <_ZN25screen_space_invadersView15handleTickEventEv+0x196>
900086e0:	4790      	blx	r2
						enemies[i].invalidate();
900086e2:	682b      	ldr	r3, [r5, #0]
900086e4:	4628      	mov	r0, r5
900086e6:	e7ed      	b.n	900086c4 <_ZN25screen_space_invadersView15handleTickEventEv+0x198>
					enemy_move_direction = MOVE_DOWN;
900086e8:	2303      	movs	r3, #3
900086ea:	6013      	str	r3, [r2, #0]
900086ec:	e76b      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
			lbl_win.invalidate();
900086ee:	f504 703d 	add.w	r0, r4, #756	; 0x2f4
        visible = vis;
900086f2:	f884 5319 	strb.w	r5, [r4, #793]	; 0x319
}
900086f6:	b002      	add	sp, #8
900086f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			lbl_lose.invalidate();
900086fc:	f010 bd95 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008700:	4790      	blx	r2
						enemies[i].invalidate();
90008702:	682b      	ldr	r3, [r5, #0]
90008704:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008706:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
90008708:	695b      	ldr	r3, [r3, #20]
9000870a:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
9000870c:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000870e:	42bd      	cmp	r5, r7
						pixels_moved += ENEMY_MOVE_SPEED;
90008710:	f103 030a 	add.w	r3, r3, #10
90008714:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008716:	d1ab      	bne.n	90008670 <_ZN25screen_space_invadersView15handleTickEventEv+0x144>
90008718:	e755      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
9000871a:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
					pixels_moved = 0;
9000871e:	2100      	movs	r1, #0
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
90008720:	f9b5 0110 	ldrsh.w	r0, [r5, #272]	; 0x110
					pixels_moved = 0;
90008724:	6031      	str	r1, [r6, #0]
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
90008726:	4403      	add	r3, r0
90008728:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
9000872c:	da02      	bge.n	90008734 <_ZN25screen_space_invadersView15handleTickEventEv+0x208>
						enemy_move_direction = MOVE_RIGHT;
9000872e:	2301      	movs	r3, #1
90008730:	6013      	str	r3, [r2, #0]
90008732:	e748      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemy_move_direction = MOVE_LEFT;
90008734:	6011      	str	r1, [r2, #0]
90008736:	e746      	b.n	900085c6 <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
90008738:	2401faac 	.word	0x2401faac
9000873c:	2401f894 	.word	0x2401f894
90008740:	cccccccd 	.word	0xcccccccd
90008744:	19999998 	.word	0x19999998
90008748:	19999999 	.word	0x19999999
9000874c:	24000038 	.word	0x24000038
90008750:	2401f898 	.word	0x2401f898
90008754:	9000228d 	.word	0x9000228d
90008758:	2401faa8 	.word	0x2401faa8
9000875c:	2401f890 	.word	0x2401f890
90008760:	90002291 	.word	0x90002291

90008764 <_ZN25screen_space_invadersView11fire_bulletEv>:
	if( !bullet.isVisible() )
90008764:	f890 21c9 	ldrb.w	r2, [r0, #457]	; 0x1c9
{
90008768:	4603      	mov	r3, r0
	if( !bullet.isVisible() )
9000876a:	b102      	cbz	r2, 9000876e <_ZN25screen_space_invadersView11fire_bulletEv+0xa>
}
9000876c:	4770      	bx	lr
		bullet.setXY(ship.getX() + (ship.getWidth()/2 - bullet.getWidth()/2), ship.getY() - bullet.getHeight()/2);
9000876e:	f9b0 21ae 	ldrsh.w	r2, [r0, #430]	; 0x1ae
90008772:	f9b0 c180 	ldrsh.w	ip, [r0, #384]	; 0x180
90008776:	2a00      	cmp	r2, #0
90008778:	f8b0 117e 	ldrh.w	r1, [r0, #382]	; 0x17e
9000877c:	bfb8      	it	lt
9000877e:	3201      	addlt	r2, #1
90008780:	f1bc 0f00 	cmp.w	ip, #0
90008784:	eba1 0162 	sub.w	r1, r1, r2, asr #1
90008788:	f8b0 217c 	ldrh.w	r2, [r0, #380]	; 0x17c
9000878c:	f9b0 01ac 	ldrsh.w	r0, [r0, #428]	; 0x1ac
90008790:	bfb8      	it	lt
90008792:	f10c 0c01 	addlt.w	ip, ip, #1
90008796:	b209      	sxth	r1, r1
90008798:	2800      	cmp	r0, #0
9000879a:	eb02 026c 	add.w	r2, r2, ip, asr #1
9000879e:	f04f 0c01 	mov.w	ip, #1
        rect.y = y;
900087a2:	f8a3 11aa 	strh.w	r1, [r3, #426]	; 0x1aa
900087a6:	bfb8      	it	lt
900087a8:	3001      	addlt	r0, #1
        visible = vis;
900087aa:	f883 c1c9 	strb.w	ip, [r3, #457]	; 0x1c9
900087ae:	eba2 0260 	sub.w	r2, r2, r0, asr #1
		bullet.invalidate();
900087b2:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
        rect.x = x;
900087b6:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
900087ba:	f00b baa5 	b.w	90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
900087be:	bf00      	nop

900087c0 <_ZN25screen_space_invadersView19check_bullet_hitboxEv>:
	if( bullet.isVisible() ) {
900087c0:	f890 31c9 	ldrb.w	r3, [r0, #457]	; 0x1c9
900087c4:	2b00      	cmp	r3, #0
900087c6:	d043      	beq.n	90008850 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x90>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
900087c8:	2100      	movs	r1, #0
{
900087ca:	b570      	push	{r4, r5, r6, lr}
900087cc:	4d21      	ldr	r5, [pc, #132]	; (90008854 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x94>)
900087ce:	4604      	mov	r4, r0
900087d0:	462b      	mov	r3, r5
900087d2:	e00a      	b.n	900087ea <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x2a>
				|| (bullet.getX() + bullet.getWidth() < enemies[i].getX()+enemies[i].getWidth()
900087d4:	f9b4 c1ac 	ldrsh.w	ip, [r4, #428]	; 0x1ac
900087d8:	44f4      	add	ip, lr
					&& bullet.getX() + bullet.getWidth() > enemies[i].getX()
900087da:	4562      	cmp	r2, ip
900087dc:	dd01      	ble.n	900087e2 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
900087de:	4560      	cmp	r0, ip
900087e0:	db12      	blt.n	90008808 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x48>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
900087e2:	3101      	adds	r1, #1
900087e4:	332c      	adds	r3, #44	; 0x2c
900087e6:	290c      	cmp	r1, #12
900087e8:	d031      	beq.n	9000884e <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x8e>
			if( !enemies[i].isVisible() )
900087ea:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
900087ee:	2a00      	cmp	r2, #0
900087f0:	d0f7      	beq.n	900087e2 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        return rect.x;
900087f2:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
			if( (bullet.getX() < enemies[i].getX()+enemies[i].getWidth()
900087f6:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
900087fa:	f9b4 e1a8 	ldrsh.w	lr, [r4, #424]	; 0x1a8
900087fe:	4402      	add	r2, r0
				&& bullet.getX() > enemies[i].getX()
90008800:	4596      	cmp	lr, r2
90008802:	dae7      	bge.n	900087d4 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
90008804:	4586      	cmp	lr, r0
90008806:	dde5      	ble.n	900087d4 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
        return rect.y;
90008808:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9000880c:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
					&& bullet.getY() > enemies[i].getY()
90008810:	4282      	cmp	r2, r0
90008812:	dde6      	ble.n	900087e2 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
				&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())
90008814:	f9b3 c00a 	ldrsh.w	ip, [r3, #10]
90008818:	4460      	add	r0, ip
					&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())	)
9000881a:	4282      	cmp	r2, r0
9000881c:	dae1      	bge.n	900087e2 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        visible = vis;
9000881e:	232c      	movs	r3, #44	; 0x2c
90008820:	2600      	movs	r6, #0
90008822:	fb03 f101 	mul.w	r1, r3, r1
90008826:	1868      	adds	r0, r5, r1
				enemies[i].invalidate();
90008828:	586b      	ldr	r3, [r5, r1]
9000882a:	695b      	ldr	r3, [r3, #20]
9000882c:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
90008830:	4798      	blx	r3
        rect.x = x;
90008832:	f04f 33ff 	mov.w	r3, #4294967295
				bullet.invalidate();
90008836:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
        visible = vis;
9000883a:	f884 61c9 	strb.w	r6, [r4, #457]	; 0x1c9
        rect.x = x;
9000883e:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
90008842:	f00b fa61 	bl	90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
				enemies_killed++;
90008846:	4a04      	ldr	r2, [pc, #16]	; (90008858 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x98>)
90008848:	6813      	ldr	r3, [r2, #0]
9000884a:	3301      	adds	r3, #1
9000884c:	6013      	str	r3, [r2, #0]
}
9000884e:	bd70      	pop	{r4, r5, r6, pc}
90008850:	4770      	bx	lr
90008852:	bf00      	nop
90008854:	2401f898 	.word	0x2401f898
90008858:	2401faa8 	.word	0x2401faa8

9000885c <_ZN25screen_space_invadersViewC1Ev>:
screen_space_invadersView::screen_space_invadersView()
9000885c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008860:	b085      	sub	sp, #20
90008862:	4605      	mov	r5, r0
        visible = vis;
90008864:	2400      	movs	r4, #0
90008866:	f7fd f811 	bl	9000588c <_ZN29screen_space_invadersViewBaseC1Ev>
9000886a:	4b4d      	ldr	r3, [pc, #308]	; (900089a0 <_ZN25screen_space_invadersViewC1Ev+0x144>)
	enemy1.invalidate();
9000886c:	f505 70a6 	add.w	r0, r5, #332	; 0x14c
90008870:	f885 4171 	strb.w	r4, [r5, #369]	; 0x171
90008874:	f105 0b04 	add.w	fp, r5, #4
screen_space_invadersView::screen_space_invadersView()
90008878:	602b      	str	r3, [r5, #0]
9000887a:	f04f 080f 	mov.w	r8, #15
	enemy1.invalidate();
9000887e:	f010 fcd4 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
        rect.x = x;
90008882:	f04f 33ff 	mov.w	r3, #4294967295
	bullet.invalidate();
90008886:	f505 70d2 	add.w	r0, r5, #420	; 0x1a4
        visible = vis;
9000888a:	f885 41c9 	strb.w	r4, [r5, #457]	; 0x1c9
        rect.x = x;
9000888e:	f8c5 31a8 	str.w	r3, [r5, #424]	; 0x1a8
90008892:	f00b fa39 	bl	90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	lbl_game_over.invalidate();
90008896:	f505 7019 	add.w	r0, r5, #612	; 0x264
        visible = vis;
9000889a:	f885 4289 	strb.w	r4, [r5, #649]	; 0x289
9000889e:	f010 fcc4 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
900088a2:	f505 700a 	add.w	r0, r5, #552	; 0x228
900088a6:	f885 424d 	strb.w	r4, [r5, #589]	; 0x24d
900088aa:	f010 fcbe 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_lose.invalidate();
900088ae:	f505 704f 	add.w	r0, r5, #828	; 0x33c
900088b2:	f885 4361 	strb.w	r4, [r5, #865]	; 0x361
900088b6:	f010 fcb8 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_win.invalidate();
900088ba:	f505 703d 	add.w	r0, r5, #756	; 0x2f4
900088be:	f885 4319 	strb.w	r4, [r5, #793]	; 0x319
900088c2:	f010 fcb2 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	enemies_killed = 0;
900088c6:	4a37      	ldr	r2, [pc, #220]	; (900089a4 <_ZN25screen_space_invadersViewC1Ev+0x148>)
	enemy_move_direction = MOVE_RIGHT;
900088c8:	4b37      	ldr	r3, [pc, #220]	; (900089a8 <_ZN25screen_space_invadersViewC1Ev+0x14c>)
	enemies_killed = 0;
900088ca:	6014      	str	r4, [r2, #0]
	enemy_move_direction = MOVE_RIGHT;
900088cc:	2201      	movs	r2, #1
900088ce:	4e37      	ldr	r6, [pc, #220]	; (900089ac <_ZN25screen_space_invadersViewC1Ev+0x150>)
900088d0:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 900089b8 <_ZN25screen_space_invadersViewC1Ev+0x15c>
	int counter = 0;
900088d4:	9401      	str	r4, [sp, #4]
	enemy_move_direction = MOVE_RIGHT;
900088d6:	601a      	str	r2, [r3, #0]
	int current_y = 0;
900088d8:	9400      	str	r4, [sp, #0]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
900088da:	f9bd 7000 	ldrsh.w	r7, [sp]
900088de:	f5a6 7984 	sub.w	r9, r6, #264	; 0x108
		current_x = 0;
900088e2:	2400      	movs	r4, #0
900088e4:	e02c      	b.n	90008940 <_ZN25screen_space_invadersViewC1Ev+0xe4>
        setY(y);
900088e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
900088e8:	f8a9 1004 	strh.w	r1, [r9, #4]
        rect.y = y;
900088ec:	4930      	ldr	r1, [pc, #192]	; (900089b0 <_ZN25screen_space_invadersViewC1Ev+0x154>)
900088ee:	428a      	cmp	r2, r1
900088f0:	d13c      	bne.n	9000896c <_ZN25screen_space_invadersViewC1Ev+0x110>
900088f2:	f8a9 7006 	strh.w	r7, [r9, #6]
        setWidth(width);
900088f6:	4648      	mov	r0, r9
900088f8:	2132      	movs	r1, #50	; 0x32
900088fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900088fc:	4798      	blx	r3
        setHeight(height);
900088fe:	f8d9 3000 	ldr.w	r3, [r9]
90008902:	4648      	mov	r0, r9
90008904:	2134      	movs	r1, #52	; 0x34
90008906:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008908:	4798      	blx	r3
			enemies[counter].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000890a:	f8d9 3000 	ldr.w	r3, [r9]
9000890e:	4648      	mov	r0, r9
90008910:	2100      	movs	r1, #0
90008912:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90008914:	4798      	blx	r3
        visible = vis;
90008916:	2301      	movs	r3, #1
90008918:	4649      	mov	r1, r9
9000891a:	4658      	mov	r0, fp
9000891c:	f889 3025 	strb.w	r3, [r9, #37]	; 0x25
90008920:	f009 ff8a 	bl	90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			enemies[counter].invalidate();
90008924:	f8d9 3000 	ldr.w	r3, [r9]
90008928:	4648      	mov	r0, r9
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
9000892a:	f109 092c 	add.w	r9, r9, #44	; 0x2c
			enemies[counter].invalidate();
9000892e:	695b      	ldr	r3, [r3, #20]
90008930:	4798      	blx	r3
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008932:	f9b5 3154 	ldrsh.w	r3, [r5, #340]	; 0x154
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008936:	45b1      	cmp	r9, r6
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008938:	f103 030f 	add.w	r3, r3, #15
9000893c:	441c      	add	r4, r3
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
9000893e:	d01b      	beq.n	90008978 <_ZN25screen_space_invadersViewC1Ev+0x11c>
			enemies[counter].setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90008940:	f8d9 3000 	ldr.w	r3, [r9]
90008944:	a903      	add	r1, sp, #12
90008946:	4648      	mov	r0, r9
90008948:	f8ad 800c 	strh.w	r8, [sp, #12]
9000894c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000894e:	4798      	blx	r3
        setX(x);
90008950:	f8d9 3000 	ldr.w	r3, [r9]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
90008954:	b221      	sxth	r1, r4
90008956:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008958:	4552      	cmp	r2, sl
9000895a:	d0c4      	beq.n	900088e6 <_ZN25screen_space_invadersViewC1Ev+0x8a>
9000895c:	4648      	mov	r0, r9
9000895e:	4790      	blx	r2
90008960:	f8d9 3000 	ldr.w	r3, [r9]
        rect.y = y;
90008964:	4912      	ldr	r1, [pc, #72]	; (900089b0 <_ZN25screen_space_invadersViewC1Ev+0x154>)
        setY(y);
90008966:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008968:	428a      	cmp	r2, r1
9000896a:	d0c2      	beq.n	900088f2 <_ZN25screen_space_invadersViewC1Ev+0x96>
9000896c:	4648      	mov	r0, r9
9000896e:	4639      	mov	r1, r7
90008970:	4790      	blx	r2
90008972:	f8d9 3000 	ldr.w	r3, [r9]
90008976:	e7be      	b.n	900088f6 <_ZN25screen_space_invadersViewC1Ev+0x9a>
			counter++;
90008978:	9b01      	ldr	r3, [sp, #4]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
9000897a:	f509 7684 	add.w	r6, r9, #264	; 0x108
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
9000897e:	9900      	ldr	r1, [sp, #0]
			counter++;
90008980:	3306      	adds	r3, #6
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008982:	f9b5 2156 	ldrsh.w	r2, [r5, #342]	; 0x156
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008986:	2b0c      	cmp	r3, #12
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008988:	4411      	add	r1, r2
			counter++;
9000898a:	9301      	str	r3, [sp, #4]
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
9000898c:	9100      	str	r1, [sp, #0]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
9000898e:	d1a4      	bne.n	900088da <_ZN25screen_space_invadersViewC1Ev+0x7e>
	invaders_game_over = false;
90008990:	4b08      	ldr	r3, [pc, #32]	; (900089b4 <_ZN25screen_space_invadersViewC1Ev+0x158>)
90008992:	2200      	movs	r2, #0
}
90008994:	4628      	mov	r0, r5
	invaders_game_over = false;
90008996:	701a      	strb	r2, [r3, #0]
}
90008998:	b005      	add	sp, #20
9000899a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000899e:	bf00      	nop
900089a0:	9002d05c 	.word	0x9002d05c
900089a4:	2401faa8 	.word	0x2401faa8
900089a8:	24000038 	.word	0x24000038
900089ac:	2401f9a0 	.word	0x2401f9a0
900089b0:	90002291 	.word	0x90002291
900089b4:	2401faac 	.word	0x2401faac
900089b8:	9000228d 	.word	0x9000228d

900089bc <_ZN25screen_space_invadersView11setupScreenEv>:
    screen_space_invadersViewBase::setupScreen();
900089bc:	f7fc befc 	b.w	900057b8 <_ZN29screen_space_invadersViewBase11setupScreenEv>

900089c0 <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
900089c0:	4770      	bx	lr
900089c2:	bf00      	nop

900089c4 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
900089c4:	3804      	subs	r0, #4
900089c6:	4770      	bx	lr

900089c8 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
900089c8:	4770      	bx	lr
900089ca:	bf00      	nop

900089cc <_ZN30screen_tictactoe_gamePresenterD0Ev>:
900089cc:	b510      	push	{r4, lr}
900089ce:	4604      	mov	r4, r0
900089d0:	2110      	movs	r1, #16
900089d2:	f020 fcc7 	bl	90029364 <_ZdlPvj>
900089d6:	4620      	mov	r0, r4
900089d8:	bd10      	pop	{r4, pc}
900089da:	bf00      	nop

900089dc <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
900089dc:	b500      	push	{lr}
900089de:	3804      	subs	r0, #4
900089e0:	b083      	sub	sp, #12
900089e2:	2110      	movs	r1, #16
900089e4:	9001      	str	r0, [sp, #4]
900089e6:	f020 fcbd 	bl	90029364 <_ZdlPvj>
900089ea:	9801      	ldr	r0, [sp, #4]
900089ec:	b003      	add	sp, #12
900089ee:	f85d fb04 	ldr.w	pc, [sp], #4
900089f2:	bf00      	nop

900089f4 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
900089f4:	4a06      	ldr	r2, [pc, #24]	; (90008a10 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
900089f6:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
900089f8:	b410      	push	{r4}
900089fa:	2400      	movs	r4, #0
900089fc:	6084      	str	r4, [r0, #8]
    : view(v)
900089fe:	f102 0408 	add.w	r4, r2, #8
90008a02:	3220      	adds	r2, #32
90008a04:	e9c0 4200 	strd	r4, r2, [r0]
}
90008a08:	f85d 4b04 	ldr.w	r4, [sp], #4
90008a0c:	4770      	bx	lr
90008a0e:	bf00      	nop
90008a10:	9002d094 	.word	0x9002d094

90008a14 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90008a14:	4770      	bx	lr
90008a16:	bf00      	nop

90008a18 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90008a18:	4b22      	ldr	r3, [pc, #136]	; (90008aa4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
90008a1a:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90008a1c:	eb01 0341 	add.w	r3, r1, r1, lsl #1
		symbol = 'O';
90008a20:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int x, int y) {
90008a22:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90008a24:	4d20      	ldr	r5, [pc, #128]	; (90008aa8 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
90008a26:	bf14      	ite	ne
90008a28:	2458      	movne	r4, #88	; 0x58
90008a2a:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008a2c:	f815 c003 	ldrb.w	ip, [r5, r3]
90008a30:	442b      	add	r3, r5
90008a32:	45a4      	cmp	ip, r4
90008a34:	d109      	bne.n	90008a4a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008a36:	f893 e001 	ldrb.w	lr, [r3, #1]
90008a3a:	45e6      	cmp	lr, ip
90008a3c:	d105      	bne.n	90008a4a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008a3e:	789b      	ldrb	r3, [r3, #2]
90008a40:	4573      	cmp	r3, lr
90008a42:	d102      	bne.n	90008a4a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90008a44:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
90008a48:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
90008a4a:	5cab      	ldrb	r3, [r5, r2]
90008a4c:	42a3      	cmp	r3, r4
90008a4e:	d107      	bne.n	90008a60 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008a50:	18ab      	adds	r3, r5, r2
90008a52:	f893 c003 	ldrb.w	ip, [r3, #3]
90008a56:	45a4      	cmp	ip, r4
90008a58:	d102      	bne.n	90008a60 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008a5a:	799b      	ldrb	r3, [r3, #6]
90008a5c:	42a3      	cmp	r3, r4
90008a5e:	d0f1      	beq.n	90008a44 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90008a60:	4291      	cmp	r1, r2
90008a62:	d00a      	beq.n	90008a7a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90008a64:	440a      	add	r2, r1
90008a66:	2a02      	cmp	r2, #2
90008a68:	d011      	beq.n	90008a8e <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
90008a6a:	4b10      	ldr	r3, [pc, #64]	; (90008aac <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
90008a6c:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90008a70:	2b09      	cmp	r3, #9
90008a72:	bf14      	ite	ne
90008a74:	2000      	movne	r0, #0
90008a76:	2003      	moveq	r0, #3
}
90008a78:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
90008a7a:	782b      	ldrb	r3, [r5, #0]
90008a7c:	42a3      	cmp	r3, r4
90008a7e:	d1f1      	bne.n	90008a64 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008a80:	792b      	ldrb	r3, [r5, #4]
90008a82:	42a3      	cmp	r3, r4
90008a84:	d1ee      	bne.n	90008a64 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008a86:	7a2b      	ldrb	r3, [r5, #8]
90008a88:	42a3      	cmp	r3, r4
90008a8a:	d0db      	beq.n	90008a44 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008a8c:	e7ea      	b.n	90008a64 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
90008a8e:	78ab      	ldrb	r3, [r5, #2]
90008a90:	42a3      	cmp	r3, r4
90008a92:	d1ea      	bne.n	90008a6a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008a94:	792b      	ldrb	r3, [r5, #4]
90008a96:	42a3      	cmp	r3, r4
90008a98:	d1e7      	bne.n	90008a6a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008a9a:	79ab      	ldrb	r3, [r5, #6]
90008a9c:	42a3      	cmp	r3, r4
90008a9e:	d0d1      	beq.n	90008a44 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008aa0:	e7e3      	b.n	90008a6a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008aa2:	bf00      	nop
90008aa4:	2400003c 	.word	0x2400003c
90008aa8:	2401fab0 	.word	0x2401fab0
90008aac:	2401fabc 	.word	0x2401fabc

90008ab0 <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
90008ab0:	4b03      	ldr	r3, [pc, #12]	; (90008ac0 <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
90008ab2:	b510      	push	{r4, lr}
90008ab4:	4604      	mov	r4, r0
90008ab6:	6003      	str	r3, [r0, #0]
90008ab8:	f7fd fa58 	bl	90005f6c <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008abc:	4620      	mov	r0, r4
90008abe:	bd10      	pop	{r4, pc}
90008ac0:	9002d0f0 	.word	0x9002d0f0

90008ac4 <_ZN25screen_tictactoe_gameViewD0Ev>:
90008ac4:	4b06      	ldr	r3, [pc, #24]	; (90008ae0 <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
90008ac6:	b510      	push	{r4, lr}
90008ac8:	4604      	mov	r4, r0
90008aca:	6003      	str	r3, [r0, #0]
90008acc:	f7fd fa4e 	bl	90005f6c <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008ad0:	f242 71bc 	movw	r1, #10172	; 0x27bc
90008ad4:	4620      	mov	r0, r4
90008ad6:	f020 fc45 	bl	90029364 <_ZdlPvj>
90008ada:	4620      	mov	r0, r4
90008adc:	bd10      	pop	{r4, pc}
90008ade:	bf00      	nop
90008ae0:	9002d0f0 	.word	0x9002d0f0

90008ae4 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008ae4:	b538      	push	{r3, r4, r5, lr}
90008ae6:	4604      	mov	r4, r0
			board[i][j] = 0;
90008ae8:	2500      	movs	r5, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008aea:	f7fd fae9 	bl	900060c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
90008aee:	4b13      	ldr	r3, [pc, #76]	; (90008b3c <_ZN25screen_tictactoe_gameViewC1Ev+0x58>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008af0:	4913      	ldr	r1, [pc, #76]	; (90008b40 <_ZN25screen_tictactoe_gameViewC1Ev+0x5c>)
	lbl_game_over.invalidate();
90008af2:	f604 2024 	addw	r0, r4, #2596	; 0xa24
	game_over = false;
90008af6:	4a13      	ldr	r2, [pc, #76]	; (90008b44 <_ZN25screen_tictactoe_gameViewC1Ev+0x60>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008af8:	6021      	str	r1, [r4, #0]
			board[i][j] = 0;
90008afa:	721d      	strb	r5, [r3, #8]
        visible = vis;
90008afc:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
	game_over = false;
90008b00:	7015      	strb	r5, [r2, #0]
			board[i][j] = 0;
90008b02:	e9c3 5500 	strd	r5, r5, [r3]
	lbl_game_over.invalidate();
90008b06:	f010 fb90 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	box_background.invalidate();
90008b0a:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90008b0e:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90008b12:	f010 fb8a 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_result.invalidate();
90008b16:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
90008b1a:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90008b1e:	f010 fb84 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90008b22:	f604 206c 	addw	r0, r4, #2668	; 0xa6c
90008b26:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90008b2a:	f010 fb7e 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
	turn_number = 0;
90008b2e:	4906      	ldr	r1, [pc, #24]	; (90008b48 <_ZN25screen_tictactoe_gameViewC1Ev+0x64>)
	turn = true;
90008b30:	4b06      	ldr	r3, [pc, #24]	; (90008b4c <_ZN25screen_tictactoe_gameViewC1Ev+0x68>)
90008b32:	2201      	movs	r2, #1
}
90008b34:	4620      	mov	r0, r4
	turn_number = 0;
90008b36:	800d      	strh	r5, [r1, #0]
	turn = true;
90008b38:	701a      	strb	r2, [r3, #0]
}
90008b3a:	bd38      	pop	{r3, r4, r5, pc}
90008b3c:	2401fab0 	.word	0x2401fab0
90008b40:	9002d0f0 	.word	0x9002d0f0
90008b44:	2401fab9 	.word	0x2401fab9
90008b48:	2401fabc 	.word	0x2401fabc
90008b4c:	2400003c 	.word	0x2400003c

90008b50 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90008b50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][0] == 0 ) {
90008b54:	4d2d      	ldr	r5, [pc, #180]	; (90008c0c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
90008b56:	782b      	ldrb	r3, [r5, #0]
90008b58:	2b00      	cmp	r3, #0
90008b5a:	d12e      	bne.n	90008bba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
90008b5c:	4e2c      	ldr	r6, [pc, #176]	; (90008c10 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
90008b5e:	7833      	ldrb	r3, [r6, #0]
90008b60:	bb5b      	cbnz	r3, 90008bba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
		if( turn ) {
90008b62:	4f2c      	ldr	r7, [pc, #176]	; (90008c14 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc4>)
90008b64:	4604      	mov	r4, r0
90008b66:	783b      	ldrb	r3, [r7, #0]
90008b68:	bb4b      	cbnz	r3, 90008bbe <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6e>
			board[0][0] = 'O';
90008b6a:	234f      	movs	r3, #79	; 0x4f
			pos1_circle.invalidate();
90008b6c:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
90008b70:	7033      	strb	r3, [r6, #0]
90008b72:	2301      	movs	r3, #1
90008b74:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_circle.invalidate();
90008b78:	f010 fb57 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008b7c:	4a26      	ldr	r2, [pc, #152]	; (90008c18 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc8>)
		short temp_result = is_game_over(0, 0);
90008b7e:	6823      	ldr	r3, [r4, #0]
90008b80:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008b84:	8813      	ldrh	r3, [r2, #0]
90008b86:	3301      	adds	r3, #1
90008b88:	b21b      	sxth	r3, r3
90008b8a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
90008b8c:	4a23      	ldr	r2, [pc, #140]	; (90008c1c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xcc>)
90008b8e:	4590      	cmp	r8, r2
90008b90:	d11f      	bne.n	90008bd2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x82>
	if(turn)
90008b92:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008b94:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008b96:	2800      	cmp	r0, #0
90008b98:	bf14      	ite	ne
90008b9a:	2458      	movne	r4, #88	; 0x58
90008b9c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008b9e:	42a2      	cmp	r2, r4
90008ba0:	d12f      	bne.n	90008c02 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008ba2:	7871      	ldrb	r1, [r6, #1]
90008ba4:	4291      	cmp	r1, r2
90008ba6:	d120      	bne.n	90008bea <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
90008ba8:	78b2      	ldrb	r2, [r6, #2]
90008baa:	428a      	cmp	r2, r1
90008bac:	d11d      	bne.n	90008bea <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
                if( turn )
90008bae:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008bb2:	2201      	movs	r2, #1
			result = temp_result;
90008bb4:	4b1a      	ldr	r3, [pc, #104]	; (90008c20 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xd0>)
			game_over = true;
90008bb6:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008bb8:	8018      	strh	r0, [r3, #0]
}
90008bba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][0] = 'X';
90008bbe:	2358      	movs	r3, #88	; 0x58
			pos1_cross.invalidate();
90008bc0:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
90008bc4:	7033      	strb	r3, [r6, #0]
90008bc6:	2301      	movs	r3, #1
90008bc8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_cross.invalidate();
90008bcc:	f010 fb2d 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90008bd0:	e7d4      	b.n	90008b7c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x2c>
		short temp_result = is_game_over(0, 0);
90008bd2:	2200      	movs	r2, #0
90008bd4:	4620      	mov	r0, r4
90008bd6:	4611      	mov	r1, r2
90008bd8:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008bda:	2800      	cmp	r0, #0
90008bdc:	d1e9      	bne.n	90008bb2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
		turn = !turn;
90008bde:	783b      	ldrb	r3, [r7, #0]
90008be0:	f083 0301 	eor.w	r3, r3, #1
90008be4:	703b      	strb	r3, [r7, #0]
}
90008be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008bea:	78f2      	ldrb	r2, [r6, #3]
90008bec:	42a2      	cmp	r2, r4
90008bee:	d102      	bne.n	90008bf6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa6>
90008bf0:	79b2      	ldrb	r2, [r6, #6]
90008bf2:	42a2      	cmp	r2, r4
90008bf4:	d0db      	beq.n	90008bae <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
            if(board[i][i] != symbol)
90008bf6:	7932      	ldrb	r2, [r6, #4]
90008bf8:	42a2      	cmp	r2, r4
90008bfa:	d102      	bne.n	90008c02 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008bfc:	7a32      	ldrb	r2, [r6, #8]
90008bfe:	42a2      	cmp	r2, r4
90008c00:	d0d5      	beq.n	90008bae <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
	if( turn_number == 9 )
90008c02:	2b09      	cmp	r3, #9
90008c04:	d1eb      	bne.n	90008bde <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8e>
		return 3;
90008c06:	2003      	movs	r0, #3
90008c08:	e7d3      	b.n	90008bb2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
90008c0a:	bf00      	nop
90008c0c:	2401fab9 	.word	0x2401fab9
90008c10:	2401fab0 	.word	0x2401fab0
90008c14:	2400003c 	.word	0x2400003c
90008c18:	2401fabc 	.word	0x2401fabc
90008c1c:	90008a19 	.word	0x90008a19
90008c20:	2401faba 	.word	0x2401faba

90008c24 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
90008c24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][1] == 0 ) {
90008c28:	4d2b      	ldr	r5, [pc, #172]	; (90008cd8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
90008c2a:	782b      	ldrb	r3, [r5, #0]
90008c2c:	2b00      	cmp	r3, #0
90008c2e:	d12e      	bne.n	90008c8e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
90008c30:	4e2a      	ldr	r6, [pc, #168]	; (90008cdc <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb8>)
90008c32:	7873      	ldrb	r3, [r6, #1]
90008c34:	bb5b      	cbnz	r3, 90008c8e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
		if( turn ) {
90008c36:	4f2a      	ldr	r7, [pc, #168]	; (90008ce0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xbc>)
90008c38:	4604      	mov	r4, r0
90008c3a:	783b      	ldrb	r3, [r7, #0]
90008c3c:	bb4b      	cbnz	r3, 90008c92 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6e>
			board[0][1] = 'O';
90008c3e:	234f      	movs	r3, #79	; 0x4f
			pos2_circle.invalidate();
90008c40:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
90008c44:	7073      	strb	r3, [r6, #1]
90008c46:	2301      	movs	r3, #1
90008c48:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_circle.invalidate();
90008c4c:	f010 faed 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008c50:	4a24      	ldr	r2, [pc, #144]	; (90008ce4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc0>)
		short temp_result = is_game_over(0, 1);
90008c52:	6823      	ldr	r3, [r4, #0]
90008c54:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008c58:	8813      	ldrh	r3, [r2, #0]
90008c5a:	3301      	adds	r3, #1
90008c5c:	b21b      	sxth	r3, r3
90008c5e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
90008c60:	4a21      	ldr	r2, [pc, #132]	; (90008ce8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc4>)
90008c62:	4590      	cmp	r8, r2
90008c64:	d11f      	bne.n	90008ca6 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
	if(turn)
90008c66:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008c68:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008c6a:	2800      	cmp	r0, #0
90008c6c:	bf14      	ite	ne
90008c6e:	2458      	movne	r4, #88	; 0x58
90008c70:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008c72:	42a2      	cmp	r2, r4
90008c74:	d123      	bne.n	90008cbe <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x9a>
90008c76:	7871      	ldrb	r1, [r6, #1]
90008c78:	4291      	cmp	r1, r2
90008c7a:	d129      	bne.n	90008cd0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008c7c:	78b2      	ldrb	r2, [r6, #2]
90008c7e:	428a      	cmp	r2, r1
90008c80:	d120      	bne.n	90008cc4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>
            if( turn )
90008c82:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008c86:	2201      	movs	r2, #1
			result = temp_result;
90008c88:	4b18      	ldr	r3, [pc, #96]	; (90008cec <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc8>)
			game_over = true;
90008c8a:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008c8c:	8018      	strh	r0, [r3, #0]
}
90008c8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][1] = 'X';
90008c92:	2358      	movs	r3, #88	; 0x58
			pos2_cross.invalidate();
90008c94:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90008c98:	7073      	strb	r3, [r6, #1]
90008c9a:	2301      	movs	r3, #1
90008c9c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_cross.invalidate();
90008ca0:	f010 fac3 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90008ca4:	e7d4      	b.n	90008c50 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x2c>
		short temp_result = is_game_over(0, 1);
90008ca6:	2201      	movs	r2, #1
90008ca8:	4620      	mov	r0, r4
90008caa:	2100      	movs	r1, #0
90008cac:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008cae:	2800      	cmp	r0, #0
90008cb0:	d1e9      	bne.n	90008c86 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
		turn = !turn;
90008cb2:	7838      	ldrb	r0, [r7, #0]
90008cb4:	f080 0001 	eor.w	r0, r0, #1
90008cb8:	7038      	strb	r0, [r7, #0]
}
90008cba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008cbe:	7872      	ldrb	r2, [r6, #1]
90008cc0:	42a2      	cmp	r2, r4
90008cc2:	d105      	bne.n	90008cd0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008cc4:	7932      	ldrb	r2, [r6, #4]
90008cc6:	42a2      	cmp	r2, r4
90008cc8:	d102      	bne.n	90008cd0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008cca:	79f2      	ldrb	r2, [r6, #7]
90008ccc:	42a2      	cmp	r2, r4
90008cce:	d0d8      	beq.n	90008c82 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x5e>
	if( turn_number == 9 )
90008cd0:	2b09      	cmp	r3, #9
90008cd2:	d1ef      	bne.n	90008cb4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x90>
		return 3;
90008cd4:	2003      	movs	r0, #3
90008cd6:	e7d6      	b.n	90008c86 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
90008cd8:	2401fab9 	.word	0x2401fab9
90008cdc:	2401fab0 	.word	0x2401fab0
90008ce0:	2400003c 	.word	0x2400003c
90008ce4:	2401fabc 	.word	0x2401fabc
90008ce8:	90008a19 	.word	0x90008a19
90008cec:	2401faba 	.word	0x2401faba

90008cf0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
90008cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][2] == 0 ) {
90008cf4:	4d2e      	ldr	r5, [pc, #184]	; (90008db0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
90008cf6:	782b      	ldrb	r3, [r5, #0]
90008cf8:	2b00      	cmp	r3, #0
90008cfa:	d12e      	bne.n	90008d5a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
90008cfc:	4e2d      	ldr	r6, [pc, #180]	; (90008db4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc4>)
90008cfe:	78b3      	ldrb	r3, [r6, #2]
90008d00:	bb5b      	cbnz	r3, 90008d5a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
		if( turn ) {
90008d02:	4f2d      	ldr	r7, [pc, #180]	; (90008db8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc8>)
90008d04:	4604      	mov	r4, r0
90008d06:	783b      	ldrb	r3, [r7, #0]
90008d08:	bb4b      	cbnz	r3, 90008d5e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6e>
			board[0][2] = 'O';
90008d0a:	234f      	movs	r3, #79	; 0x4f
			pos3_circle.invalidate();
90008d0c:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
90008d10:	70b3      	strb	r3, [r6, #2]
90008d12:	2301      	movs	r3, #1
90008d14:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_circle.invalidate();
90008d18:	f010 fa87 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008d1c:	4a27      	ldr	r2, [pc, #156]	; (90008dbc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xcc>)
		short temp_result = is_game_over(0, 2);
90008d1e:	6823      	ldr	r3, [r4, #0]
90008d20:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008d24:	8813      	ldrh	r3, [r2, #0]
90008d26:	3301      	adds	r3, #1
90008d28:	b21b      	sxth	r3, r3
90008d2a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
90008d2c:	4a24      	ldr	r2, [pc, #144]	; (90008dc0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd0>)
90008d2e:	4590      	cmp	r8, r2
90008d30:	d11f      	bne.n	90008d72 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
	if(turn)
90008d32:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008d34:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008d36:	2800      	cmp	r0, #0
90008d38:	bf14      	ite	ne
90008d3a:	2458      	movne	r4, #88	; 0x58
90008d3c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008d3e:	42a2      	cmp	r2, r4
90008d40:	d123      	bne.n	90008d8a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008d42:	7871      	ldrb	r1, [r6, #1]
90008d44:	4291      	cmp	r1, r2
90008d46:	d120      	bne.n	90008d8a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008d48:	78b2      	ldrb	r2, [r6, #2]
90008d4a:	428a      	cmp	r2, r1
90008d4c:	d12c      	bne.n	90008da8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
                if( turn )
90008d4e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008d52:	2201      	movs	r2, #1
			result = temp_result;
90008d54:	4b1b      	ldr	r3, [pc, #108]	; (90008dc4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd4>)
			game_over = true;
90008d56:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008d58:	8018      	strh	r0, [r3, #0]
}
90008d5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][2] = 'X';
90008d5e:	2358      	movs	r3, #88	; 0x58
			pos3_cross.invalidate();
90008d60:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
90008d64:	70b3      	strb	r3, [r6, #2]
90008d66:	2301      	movs	r3, #1
90008d68:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_cross.invalidate();
90008d6c:	f010 fa5d 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90008d70:	e7d4      	b.n	90008d1c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x2c>
		short temp_result = is_game_over(0, 2);
90008d72:	2202      	movs	r2, #2
90008d74:	4620      	mov	r0, r4
90008d76:	2100      	movs	r1, #0
90008d78:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008d7a:	2800      	cmp	r0, #0
90008d7c:	d1e9      	bne.n	90008d52 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
		turn = !turn;
90008d7e:	7838      	ldrb	r0, [r7, #0]
90008d80:	f080 0001 	eor.w	r0, r0, #1
90008d84:	7038      	strb	r0, [r7, #0]
}
90008d86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008d8a:	78b2      	ldrb	r2, [r6, #2]
90008d8c:	42a2      	cmp	r2, r4
90008d8e:	d10b      	bne.n	90008da8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90008d90:	7972      	ldrb	r2, [r6, #5]
90008d92:	42a2      	cmp	r2, r4
90008d94:	d102      	bne.n	90008d9c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>
90008d96:	7a32      	ldrb	r2, [r6, #8]
90008d98:	42a2      	cmp	r2, r4
90008d9a:	d0d8      	beq.n	90008d4e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90008d9c:	7932      	ldrb	r2, [r6, #4]
90008d9e:	42a2      	cmp	r2, r4
90008da0:	d102      	bne.n	90008da8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90008da2:	79b2      	ldrb	r2, [r6, #6]
90008da4:	42a2      	cmp	r2, r4
90008da6:	d0d2      	beq.n	90008d4e <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
	if( turn_number == 9 )
90008da8:	2b09      	cmp	r3, #9
90008daa:	d1e9      	bne.n	90008d80 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x90>
		return 3;
90008dac:	2003      	movs	r0, #3
90008dae:	e7d0      	b.n	90008d52 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
90008db0:	2401fab9 	.word	0x2401fab9
90008db4:	2401fab0 	.word	0x2401fab0
90008db8:	2400003c 	.word	0x2400003c
90008dbc:	2401fabc 	.word	0x2401fabc
90008dc0:	90008a19 	.word	0x90008a19
90008dc4:	2401faba 	.word	0x2401faba

90008dc8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90008dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][0] == 0 ) {
90008dcc:	4d2a      	ldr	r5, [pc, #168]	; (90008e78 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
90008dce:	782b      	ldrb	r3, [r5, #0]
90008dd0:	2b00      	cmp	r3, #0
90008dd2:	d12e      	bne.n	90008e32 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
90008dd4:	4e29      	ldr	r6, [pc, #164]	; (90008e7c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90008dd6:	78f3      	ldrb	r3, [r6, #3]
90008dd8:	bb5b      	cbnz	r3, 90008e32 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
		if( turn ) {
90008dda:	4f29      	ldr	r7, [pc, #164]	; (90008e80 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
90008ddc:	4604      	mov	r4, r0
90008dde:	783b      	ldrb	r3, [r7, #0]
90008de0:	bb4b      	cbnz	r3, 90008e36 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6e>
			board[1][0] = 'O';
90008de2:	234f      	movs	r3, #79	; 0x4f
			pos4_circle.invalidate();
90008de4:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
90008de8:	70f3      	strb	r3, [r6, #3]
90008dea:	2301      	movs	r3, #1
90008dec:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_circle.invalidate();
90008df0:	f010 fa1b 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008df4:	4a23      	ldr	r2, [pc, #140]	; (90008e84 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xbc>)
		short temp_result = is_game_over(1, 0);
90008df6:	6823      	ldr	r3, [r4, #0]
90008df8:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008dfc:	8813      	ldrh	r3, [r2, #0]
90008dfe:	3301      	adds	r3, #1
90008e00:	b21b      	sxth	r3, r3
90008e02:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
90008e04:	4a20      	ldr	r2, [pc, #128]	; (90008e88 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc0>)
90008e06:	4590      	cmp	r8, r2
90008e08:	d11f      	bne.n	90008e4a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
	if(turn)
90008e0a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008e0c:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90008e0e:	2800      	cmp	r0, #0
90008e10:	bf14      	ite	ne
90008e12:	2458      	movne	r4, #88	; 0x58
90008e14:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008e16:	42a2      	cmp	r2, r4
90008e18:	d129      	bne.n	90008e6e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90008e1a:	7931      	ldrb	r1, [r6, #4]
90008e1c:	4291      	cmp	r1, r2
90008e1e:	d120      	bne.n	90008e62 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
90008e20:	7972      	ldrb	r2, [r6, #5]
90008e22:	428a      	cmp	r2, r1
90008e24:	d11d      	bne.n	90008e62 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
            if( turn )
90008e26:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008e2a:	2201      	movs	r2, #1
			result = temp_result;
90008e2c:	4b17      	ldr	r3, [pc, #92]	; (90008e8c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc4>)
			game_over = true;
90008e2e:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008e30:	8018      	strh	r0, [r3, #0]
}
90008e32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][0] = 'X';
90008e36:	2358      	movs	r3, #88	; 0x58
			pos4_cross.invalidate();
90008e38:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
90008e3c:	70f3      	strb	r3, [r6, #3]
90008e3e:	2301      	movs	r3, #1
90008e40:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_cross.invalidate();
90008e44:	f010 f9f1 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90008e48:	e7d4      	b.n	90008df4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x2c>
		short temp_result = is_game_over(1, 0);
90008e4a:	2200      	movs	r2, #0
90008e4c:	4620      	mov	r0, r4
90008e4e:	2101      	movs	r1, #1
90008e50:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008e52:	2800      	cmp	r0, #0
90008e54:	d1e9      	bne.n	90008e2a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
		turn = !turn;
90008e56:	7838      	ldrb	r0, [r7, #0]
90008e58:	f080 0001 	eor.w	r0, r0, #1
90008e5c:	7038      	strb	r0, [r7, #0]
}
90008e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008e62:	7832      	ldrb	r2, [r6, #0]
90008e64:	42a2      	cmp	r2, r4
90008e66:	d102      	bne.n	90008e6e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90008e68:	79b2      	ldrb	r2, [r6, #6]
90008e6a:	42a2      	cmp	r2, r4
90008e6c:	d0db      	beq.n	90008e26 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x5e>
	if( turn_number == 9 )
90008e6e:	2b09      	cmp	r3, #9
90008e70:	d1f2      	bne.n	90008e58 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
		return 3;
90008e72:	2003      	movs	r0, #3
90008e74:	e7d9      	b.n	90008e2a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
90008e76:	bf00      	nop
90008e78:	2401fab9 	.word	0x2401fab9
90008e7c:	2401fab0 	.word	0x2401fab0
90008e80:	2400003c 	.word	0x2400003c
90008e84:	2401fabc 	.word	0x2401fabc
90008e88:	90008a19 	.word	0x90008a19
90008e8c:	2401faba 	.word	0x2401faba

90008e90 <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
90008e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][1] == 0 ) {
90008e94:	4d3c      	ldr	r5, [pc, #240]	; (90008f88 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90008e96:	782b      	ldrb	r3, [r5, #0]
90008e98:	2b00      	cmp	r3, #0
90008e9a:	d12e      	bne.n	90008efa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
90008e9c:	4e3b      	ldr	r6, [pc, #236]	; (90008f8c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
90008e9e:	7933      	ldrb	r3, [r6, #4]
90008ea0:	bb5b      	cbnz	r3, 90008efa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
		if( turn ) {
90008ea2:	4f3b      	ldr	r7, [pc, #236]	; (90008f90 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x100>)
90008ea4:	4604      	mov	r4, r0
90008ea6:	783b      	ldrb	r3, [r7, #0]
90008ea8:	bb4b      	cbnz	r3, 90008efe <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6e>
			board[1][1] = 'O';
90008eaa:	234f      	movs	r3, #79	; 0x4f
			pos5_circle.invalidate();
90008eac:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90008eb0:	7133      	strb	r3, [r6, #4]
90008eb2:	2301      	movs	r3, #1
90008eb4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_circle.invalidate();
90008eb8:	f010 f9b7 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008ebc:	4a35      	ldr	r2, [pc, #212]	; (90008f94 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x104>)
		short temp_result = is_game_over(1, 1);
90008ebe:	6823      	ldr	r3, [r4, #0]
90008ec0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008ec4:	8813      	ldrh	r3, [r2, #0]
90008ec6:	3301      	adds	r3, #1
90008ec8:	b21b      	sxth	r3, r3
90008eca:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90008ecc:	4a32      	ldr	r2, [pc, #200]	; (90008f98 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x108>)
90008ece:	4590      	cmp	r8, r2
90008ed0:	d11f      	bne.n	90008f12 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x82>
	if(turn)
90008ed2:	783a      	ldrb	r2, [r7, #0]
        if(board[x][i] != symbol)
90008ed4:	78f1      	ldrb	r1, [r6, #3]
		symbol = 'O';
90008ed6:	2a00      	cmp	r2, #0
90008ed8:	bf14      	ite	ne
90008eda:	2458      	movne	r4, #88	; 0x58
90008edc:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008ede:	42a1      	cmp	r1, r4
90008ee0:	d123      	bne.n	90008f2a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90008ee2:	7930      	ldrb	r0, [r6, #4]
90008ee4:	4288      	cmp	r0, r1
90008ee6:	d120      	bne.n	90008f2a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90008ee8:	7971      	ldrb	r1, [r6, #5]
90008eea:	4281      	cmp	r1, r0
90008eec:	d136      	bne.n	90008f5c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xcc>
                if( turn )
90008eee:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
90008ef2:	2201      	movs	r2, #1
			result = temp_result;
90008ef4:	4b29      	ldr	r3, [pc, #164]	; (90008f9c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x10c>)
			game_over = true;
90008ef6:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008ef8:	8018      	strh	r0, [r3, #0]
}
90008efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][1] = 'X';
90008efe:	2358      	movs	r3, #88	; 0x58
			pos5_cross.invalidate();
90008f00:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
90008f04:	7133      	strb	r3, [r6, #4]
90008f06:	2301      	movs	r3, #1
90008f08:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_cross.invalidate();
90008f0c:	f010 f98d 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90008f10:	e7d4      	b.n	90008ebc <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x2c>
		short temp_result = is_game_over(1, 1);
90008f12:	2201      	movs	r2, #1
90008f14:	4620      	mov	r0, r4
90008f16:	4611      	mov	r1, r2
90008f18:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008f1a:	2800      	cmp	r0, #0
90008f1c:	d1e9      	bne.n	90008ef2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
		turn = !turn;
90008f1e:	783b      	ldrb	r3, [r7, #0]
90008f20:	f083 0301 	eor.w	r3, r3, #1
90008f24:	703b      	strb	r3, [r7, #0]
}
90008f26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008f2a:	7871      	ldrb	r1, [r6, #1]
90008f2c:	42a1      	cmp	r1, r4
90008f2e:	d123      	bne.n	90008f78 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>
90008f30:	7931      	ldrb	r1, [r6, #4]
90008f32:	42a1      	cmp	r1, r4
90008f34:	d116      	bne.n	90008f64 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd4>
90008f36:	79f1      	ldrb	r1, [r6, #7]
90008f38:	42a1      	cmp	r1, r4
90008f3a:	d0d8      	beq.n	90008eee <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][i] != symbol)
90008f3c:	7831      	ldrb	r1, [r6, #0]
90008f3e:	42a1      	cmp	r1, r4
90008f40:	d113      	bne.n	90008f6a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
90008f42:	7a31      	ldrb	r1, [r6, #8]
90008f44:	42a1      	cmp	r1, r4
90008f46:	d0d2      	beq.n	90008eee <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90008f48:	78b1      	ldrb	r1, [r6, #2]
90008f4a:	42a1      	cmp	r1, r4
90008f4c:	d102      	bne.n	90008f54 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90008f4e:	79b1      	ldrb	r1, [r6, #6]
90008f50:	42a1      	cmp	r1, r4
90008f52:	d0cc      	beq.n	90008eee <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
	if( turn_number == 9 )
90008f54:	2b09      	cmp	r3, #9
90008f56:	d1e2      	bne.n	90008f1e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8e>
		return 3;
90008f58:	2003      	movs	r0, #3
90008f5a:	e7ca      	b.n	90008ef2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
        if(board[i][y] != symbol)
90008f5c:	7871      	ldrb	r1, [r6, #1]
90008f5e:	42a1      	cmp	r1, r4
90008f60:	d0e9      	beq.n	90008f36 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa6>
90008f62:	e7eb      	b.n	90008f3c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xac>
            if(board[i][i] != symbol)
90008f64:	7831      	ldrb	r1, [r6, #0]
90008f66:	42a1      	cmp	r1, r4
90008f68:	d0f4      	beq.n	90008f54 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][(3-1)-i] != symbol)
90008f6a:	78b1      	ldrb	r1, [r6, #2]
90008f6c:	42a1      	cmp	r1, r4
90008f6e:	d1f1      	bne.n	90008f54 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90008f70:	7931      	ldrb	r1, [r6, #4]
90008f72:	42a1      	cmp	r1, r4
90008f74:	d0eb      	beq.n	90008f4e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbe>
90008f76:	e7ed      	b.n	90008f54 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][i] != symbol)
90008f78:	7831      	ldrb	r1, [r6, #0]
90008f7a:	42a1      	cmp	r1, r4
90008f7c:	d1f5      	bne.n	90008f6a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
90008f7e:	7931      	ldrb	r1, [r6, #4]
90008f80:	42a1      	cmp	r1, r4
90008f82:	d0de      	beq.n	90008f42 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb2>
90008f84:	e7e6      	b.n	90008f54 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90008f86:	bf00      	nop
90008f88:	2401fab9 	.word	0x2401fab9
90008f8c:	2401fab0 	.word	0x2401fab0
90008f90:	2400003c 	.word	0x2400003c
90008f94:	2401fabc 	.word	0x2401fabc
90008f98:	90008a19 	.word	0x90008a19
90008f9c:	2401faba 	.word	0x2401faba

90008fa0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
90008fa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][2] == 0 ) {
90008fa4:	4d2b      	ldr	r5, [pc, #172]	; (90009054 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
90008fa6:	782b      	ldrb	r3, [r5, #0]
90008fa8:	2b00      	cmp	r3, #0
90008faa:	d12e      	bne.n	9000900a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
90008fac:	4e2a      	ldr	r6, [pc, #168]	; (90009058 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
90008fae:	7973      	ldrb	r3, [r6, #5]
90008fb0:	bb5b      	cbnz	r3, 9000900a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
		if( turn ) {
90008fb2:	4f2a      	ldr	r7, [pc, #168]	; (9000905c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xbc>)
90008fb4:	4604      	mov	r4, r0
90008fb6:	783b      	ldrb	r3, [r7, #0]
90008fb8:	bb4b      	cbnz	r3, 9000900e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6e>
			board[1][2] = 'O';
90008fba:	234f      	movs	r3, #79	; 0x4f
			pos6_circle.invalidate();
90008fbc:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
90008fc0:	7173      	strb	r3, [r6, #5]
90008fc2:	2301      	movs	r3, #1
90008fc4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_circle.invalidate();
90008fc8:	f010 f92f 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008fcc:	4a24      	ldr	r2, [pc, #144]	; (90009060 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc0>)
		short temp_result = is_game_over(1, 2);
90008fce:	6823      	ldr	r3, [r4, #0]
90008fd0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008fd4:	8813      	ldrh	r3, [r2, #0]
90008fd6:	3301      	adds	r3, #1
90008fd8:	b21b      	sxth	r3, r3
90008fda:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
90008fdc:	4a21      	ldr	r2, [pc, #132]	; (90009064 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc4>)
90008fde:	4590      	cmp	r8, r2
90008fe0:	d11f      	bne.n	90009022 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
	if(turn)
90008fe2:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008fe4:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90008fe6:	2800      	cmp	r0, #0
90008fe8:	bf14      	ite	ne
90008fea:	2458      	movne	r4, #88	; 0x58
90008fec:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008fee:	42a2      	cmp	r2, r4
90008ff0:	d123      	bne.n	9000903a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90008ff2:	7931      	ldrb	r1, [r6, #4]
90008ff4:	4291      	cmp	r1, r2
90008ff6:	d120      	bne.n	9000903a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90008ff8:	7972      	ldrb	r2, [r6, #5]
90008ffa:	428a      	cmp	r2, r1
90008ffc:	d126      	bne.n	9000904c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
            if( turn )
90008ffe:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90009002:	2201      	movs	r2, #1
			result = temp_result;
90009004:	4b18      	ldr	r3, [pc, #96]	; (90009068 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc8>)
			game_over = true;
90009006:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009008:	8018      	strh	r0, [r3, #0]
}
9000900a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][2] = 'X';
9000900e:	2358      	movs	r3, #88	; 0x58
			pos6_cross.invalidate();
90009010:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
90009014:	7173      	strb	r3, [r6, #5]
90009016:	2301      	movs	r3, #1
90009018:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_cross.invalidate();
9000901c:	f010 f905 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90009020:	e7d4      	b.n	90008fcc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x2c>
		short temp_result = is_game_over(1, 2);
90009022:	2202      	movs	r2, #2
90009024:	4620      	mov	r0, r4
90009026:	2101      	movs	r1, #1
90009028:	47c0      	blx	r8
		if( temp_result != 0 ) {
9000902a:	2800      	cmp	r0, #0
9000902c:	d1e9      	bne.n	90009002 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
		turn = !turn;
9000902e:	7838      	ldrb	r0, [r7, #0]
90009030:	f080 0001 	eor.w	r0, r0, #1
90009034:	7038      	strb	r0, [r7, #0]
}
90009036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
9000903a:	78b2      	ldrb	r2, [r6, #2]
9000903c:	42a2      	cmp	r2, r4
9000903e:	d105      	bne.n	9000904c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
90009040:	7972      	ldrb	r2, [r6, #5]
90009042:	42a2      	cmp	r2, r4
90009044:	d102      	bne.n	9000904c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
90009046:	7a32      	ldrb	r2, [r6, #8]
90009048:	42a2      	cmp	r2, r4
9000904a:	d0d8      	beq.n	90008ffe <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x5e>
	if( turn_number == 9 )
9000904c:	2b09      	cmp	r3, #9
9000904e:	d1ef      	bne.n	90009030 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x90>
		return 3;
90009050:	2003      	movs	r0, #3
90009052:	e7d6      	b.n	90009002 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
90009054:	2401fab9 	.word	0x2401fab9
90009058:	2401fab0 	.word	0x2401fab0
9000905c:	2400003c 	.word	0x2400003c
90009060:	2401fabc 	.word	0x2401fabc
90009064:	90008a19 	.word	0x90008a19
90009068:	2401faba 	.word	0x2401faba

9000906c <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
9000906c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][0] == 0 ) {
90009070:	4d2d      	ldr	r5, [pc, #180]	; (90009128 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
90009072:	782b      	ldrb	r3, [r5, #0]
90009074:	2b00      	cmp	r3, #0
90009076:	d12f      	bne.n	900090d8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
90009078:	4e2c      	ldr	r6, [pc, #176]	; (9000912c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
9000907a:	79b3      	ldrb	r3, [r6, #6]
9000907c:	bb63      	cbnz	r3, 900090d8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
		if( turn ) {
9000907e:	4f2c      	ldr	r7, [pc, #176]	; (90009130 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
90009080:	4604      	mov	r4, r0
90009082:	783b      	ldrb	r3, [r7, #0]
90009084:	bb53      	cbnz	r3, 900090dc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x70>
			board[2][0] = 'O';
90009086:	234f      	movs	r3, #79	; 0x4f
			pos7_circle.invalidate();
90009088:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
9000908c:	71b3      	strb	r3, [r6, #6]
9000908e:	2301      	movs	r3, #1
90009090:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_circle.invalidate();
90009094:	f010 f8c9 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009098:	4a26      	ldr	r2, [pc, #152]	; (90009134 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc8>)
		short temp_result = is_game_over(2, 0);
9000909a:	6823      	ldr	r3, [r4, #0]
9000909c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900090a0:	8813      	ldrh	r3, [r2, #0]
900090a2:	3301      	adds	r3, #1
900090a4:	b21b      	sxth	r3, r3
900090a6:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
900090a8:	4a23      	ldr	r2, [pc, #140]	; (90009138 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xcc>)
900090aa:	4590      	cmp	r8, r2
900090ac:	d120      	bne.n	900090f0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x84>
	if(turn)
900090ae:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900090b0:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
900090b2:	2800      	cmp	r0, #0
900090b4:	bf14      	ite	ne
900090b6:	2258      	movne	r2, #88	; 0x58
900090b8:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
900090ba:	42a2      	cmp	r2, r4
900090bc:	d130      	bne.n	90009120 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
900090be:	79f1      	ldrb	r1, [r6, #7]
900090c0:	4291      	cmp	r1, r2
900090c2:	d121      	bne.n	90009108 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
900090c4:	f896 c008 	ldrb.w	ip, [r6, #8]
900090c8:	458c      	cmp	ip, r1
900090ca:	d11d      	bne.n	90009108 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
                if( turn )
900090cc:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900090d0:	2201      	movs	r2, #1
			result = temp_result;
900090d2:	4b1a      	ldr	r3, [pc, #104]	; (9000913c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xd0>)
			game_over = true;
900090d4:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900090d6:	8018      	strh	r0, [r3, #0]
}
900090d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][0] = 'X';
900090dc:	2358      	movs	r3, #88	; 0x58
			pos7_cross.invalidate();
900090de:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
900090e2:	71b3      	strb	r3, [r6, #6]
900090e4:	2301      	movs	r3, #1
900090e6:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_cross.invalidate();
900090ea:	f010 f89e 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
900090ee:	e7d3      	b.n	90009098 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x2c>
		short temp_result = is_game_over(2, 0);
900090f0:	2200      	movs	r2, #0
900090f2:	4620      	mov	r0, r4
900090f4:	2102      	movs	r1, #2
900090f6:	47c0      	blx	r8
		if( temp_result != 0 ) {
900090f8:	2800      	cmp	r0, #0
900090fa:	d1e9      	bne.n	900090d0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
		turn = !turn;
900090fc:	7838      	ldrb	r0, [r7, #0]
900090fe:	f080 0001 	eor.w	r0, r0, #1
90009102:	7038      	strb	r0, [r7, #0]
}
90009104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009108:	7831      	ldrb	r1, [r6, #0]
9000910a:	42a1      	cmp	r1, r4
9000910c:	d102      	bne.n	90009114 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
9000910e:	78f1      	ldrb	r1, [r6, #3]
90009110:	42a1      	cmp	r1, r4
90009112:	d0db      	beq.n	900090cc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
            if(board[i][(3-1)-i] != symbol)
90009114:	78b1      	ldrb	r1, [r6, #2]
90009116:	4291      	cmp	r1, r2
90009118:	d102      	bne.n	90009120 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
9000911a:	7931      	ldrb	r1, [r6, #4]
9000911c:	4291      	cmp	r1, r2
9000911e:	d0d5      	beq.n	900090cc <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
	if( turn_number == 9 )
90009120:	2b09      	cmp	r3, #9
90009122:	d1ec      	bne.n	900090fe <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x92>
		return 3;
90009124:	2003      	movs	r0, #3
90009126:	e7d3      	b.n	900090d0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
90009128:	2401fab9 	.word	0x2401fab9
9000912c:	2401fab0 	.word	0x2401fab0
90009130:	2400003c 	.word	0x2400003c
90009134:	2401fabc 	.word	0x2401fabc
90009138:	90008a19 	.word	0x90008a19
9000913c:	2401faba 	.word	0x2401faba

90009140 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90009140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][1] == 0 ) {
90009144:	4d2b      	ldr	r5, [pc, #172]	; (900091f4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
90009146:	782b      	ldrb	r3, [r5, #0]
90009148:	2b00      	cmp	r3, #0
9000914a:	d12e      	bne.n	900091aa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
9000914c:	4e2a      	ldr	r6, [pc, #168]	; (900091f8 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
9000914e:	79f3      	ldrb	r3, [r6, #7]
90009150:	bb5b      	cbnz	r3, 900091aa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
		if( turn ) {
90009152:	4f2a      	ldr	r7, [pc, #168]	; (900091fc <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xbc>)
90009154:	4604      	mov	r4, r0
90009156:	783b      	ldrb	r3, [r7, #0]
90009158:	bb4b      	cbnz	r3, 900091ae <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6e>
			board[2][1] = 'O';
9000915a:	234f      	movs	r3, #79	; 0x4f
			pos8_circle.invalidate();
9000915c:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
90009160:	71f3      	strb	r3, [r6, #7]
90009162:	2301      	movs	r3, #1
90009164:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_circle.invalidate();
90009168:	f010 f85f 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
9000916c:	4a24      	ldr	r2, [pc, #144]	; (90009200 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc0>)
		short temp_result = is_game_over(2, 1);
9000916e:	6823      	ldr	r3, [r4, #0]
90009170:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009174:	8813      	ldrh	r3, [r2, #0]
90009176:	3301      	adds	r3, #1
90009178:	b21b      	sxth	r3, r3
9000917a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
9000917c:	4a21      	ldr	r2, [pc, #132]	; (90009204 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc4>)
9000917e:	4590      	cmp	r8, r2
90009180:	d11f      	bne.n	900091c2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
	if(turn)
90009182:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009184:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90009186:	2800      	cmp	r0, #0
90009188:	bf14      	ite	ne
9000918a:	2458      	movne	r4, #88	; 0x58
9000918c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000918e:	42a2      	cmp	r2, r4
90009190:	d123      	bne.n	900091da <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90009192:	79f1      	ldrb	r1, [r6, #7]
90009194:	4291      	cmp	r1, r2
90009196:	d120      	bne.n	900091da <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90009198:	7a32      	ldrb	r2, [r6, #8]
9000919a:	428a      	cmp	r2, r1
9000919c:	d11d      	bne.n	900091da <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
            if( turn )
9000919e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900091a2:	2201      	movs	r2, #1
			result = temp_result;
900091a4:	4b18      	ldr	r3, [pc, #96]	; (90009208 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc8>)
			game_over = true;
900091a6:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900091a8:	8018      	strh	r0, [r3, #0]
}
900091aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][1] = 'X';
900091ae:	2358      	movs	r3, #88	; 0x58
			pos8_cross.invalidate();
900091b0:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
900091b4:	71f3      	strb	r3, [r6, #7]
900091b6:	2301      	movs	r3, #1
900091b8:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_cross.invalidate();
900091bc:	f010 f835 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
900091c0:	e7d4      	b.n	9000916c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x2c>
		short temp_result = is_game_over(2, 1);
900091c2:	2201      	movs	r2, #1
900091c4:	4620      	mov	r0, r4
900091c6:	2102      	movs	r1, #2
900091c8:	47c0      	blx	r8
		if( temp_result != 0 ) {
900091ca:	2800      	cmp	r0, #0
900091cc:	d1e9      	bne.n	900091a2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
		turn = !turn;
900091ce:	7838      	ldrb	r0, [r7, #0]
900091d0:	f080 0001 	eor.w	r0, r0, #1
900091d4:	7038      	strb	r0, [r7, #0]
}
900091d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900091da:	7872      	ldrb	r2, [r6, #1]
900091dc:	42a2      	cmp	r2, r4
900091de:	d105      	bne.n	900091ec <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
900091e0:	7932      	ldrb	r2, [r6, #4]
900091e2:	42a2      	cmp	r2, r4
900091e4:	d102      	bne.n	900091ec <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
900091e6:	79f2      	ldrb	r2, [r6, #7]
900091e8:	42a2      	cmp	r2, r4
900091ea:	d0d8      	beq.n	9000919e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x5e>
	if( turn_number == 9 )
900091ec:	2b09      	cmp	r3, #9
900091ee:	d1ef      	bne.n	900091d0 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x90>
		return 3;
900091f0:	2003      	movs	r0, #3
900091f2:	e7d6      	b.n	900091a2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
900091f4:	2401fab9 	.word	0x2401fab9
900091f8:	2401fab0 	.word	0x2401fab0
900091fc:	2400003c 	.word	0x2400003c
90009200:	2401fabc 	.word	0x2401fabc
90009204:	90008a19 	.word	0x90008a19
90009208:	2401faba 	.word	0x2401faba

9000920c <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
9000920c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][2] == 0 ) {
90009210:	4d30      	ldr	r5, [pc, #192]	; (900092d4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
90009212:	782b      	ldrb	r3, [r5, #0]
90009214:	2b00      	cmp	r3, #0
90009216:	d12e      	bne.n	90009276 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
90009218:	4e2f      	ldr	r6, [pc, #188]	; (900092d8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
9000921a:	7a33      	ldrb	r3, [r6, #8]
9000921c:	bb5b      	cbnz	r3, 90009276 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
		if( turn ) {
9000921e:	4f2f      	ldr	r7, [pc, #188]	; (900092dc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd0>)
90009220:	4604      	mov	r4, r0
90009222:	783b      	ldrb	r3, [r7, #0]
90009224:	bb4b      	cbnz	r3, 9000927a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6e>
			board[2][2] = 'O';
90009226:	234f      	movs	r3, #79	; 0x4f
			pos9_circle.invalidate();
90009228:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
9000922c:	7233      	strb	r3, [r6, #8]
9000922e:	2301      	movs	r3, #1
90009230:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_circle.invalidate();
90009234:	f00f fff9 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009238:	4a29      	ldr	r2, [pc, #164]	; (900092e0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd4>)
		short temp_result = is_game_over(2, 2);
9000923a:	6823      	ldr	r3, [r4, #0]
9000923c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009240:	8813      	ldrh	r3, [r2, #0]
90009242:	3301      	adds	r3, #1
90009244:	b21b      	sxth	r3, r3
90009246:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90009248:	4a26      	ldr	r2, [pc, #152]	; (900092e4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd8>)
9000924a:	4590      	cmp	r8, r2
9000924c:	d11f      	bne.n	9000928e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x82>
	if(turn)
9000924e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009250:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90009252:	2800      	cmp	r0, #0
90009254:	bf14      	ite	ne
90009256:	2458      	movne	r4, #88	; 0x58
90009258:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000925a:	42a2      	cmp	r2, r4
9000925c:	d123      	bne.n	900092a6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
9000925e:	79f1      	ldrb	r1, [r6, #7]
90009260:	4291      	cmp	r1, r2
90009262:	d120      	bne.n	900092a6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90009264:	7a32      	ldrb	r2, [r6, #8]
90009266:	428a      	cmp	r2, r1
90009268:	d11d      	bne.n	900092a6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
                if( turn )
9000926a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000926e:	2201      	movs	r2, #1
			result = temp_result;
90009270:	4b1d      	ldr	r3, [pc, #116]	; (900092e8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xdc>)
			game_over = true;
90009272:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009274:	8018      	strh	r0, [r3, #0]
}
90009276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][2] = 'X';
9000927a:	2358      	movs	r3, #88	; 0x58
			pos9_cross.invalidate();
9000927c:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90009280:	7233      	strb	r3, [r6, #8]
90009282:	2301      	movs	r3, #1
90009284:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_cross.invalidate();
90009288:	f00f ffcf 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
9000928c:	e7d4      	b.n	90009238 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x2c>
		short temp_result = is_game_over(2, 2);
9000928e:	2202      	movs	r2, #2
90009290:	4620      	mov	r0, r4
90009292:	4611      	mov	r1, r2
90009294:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009296:	2800      	cmp	r0, #0
90009298:	d1e9      	bne.n	9000926e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
		turn = !turn;
9000929a:	783b      	ldrb	r3, [r7, #0]
9000929c:	f083 0301 	eor.w	r3, r3, #1
900092a0:	703b      	strb	r3, [r7, #0]
}
900092a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900092a6:	78b2      	ldrb	r2, [r6, #2]
900092a8:	42a2      	cmp	r2, r4
900092aa:	d105      	bne.n	900092b8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
900092ac:	7972      	ldrb	r2, [r6, #5]
900092ae:	42a2      	cmp	r2, r4
900092b0:	d102      	bne.n	900092b8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
900092b2:	7a32      	ldrb	r2, [r6, #8]
900092b4:	42a2      	cmp	r2, r4
900092b6:	d0d8      	beq.n	9000926a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
            if(board[i][i] != symbol)
900092b8:	7832      	ldrb	r2, [r6, #0]
900092ba:	42a2      	cmp	r2, r4
900092bc:	d105      	bne.n	900092ca <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
900092be:	7932      	ldrb	r2, [r6, #4]
900092c0:	42a2      	cmp	r2, r4
900092c2:	d102      	bne.n	900092ca <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
900092c4:	7a32      	ldrb	r2, [r6, #8]
900092c6:	42a2      	cmp	r2, r4
900092c8:	d0cf      	beq.n	9000926a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
	if( turn_number == 9 )
900092ca:	2b09      	cmp	r3, #9
900092cc:	d1e5      	bne.n	9000929a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8e>
		return 3;
900092ce:	2003      	movs	r0, #3
900092d0:	e7cd      	b.n	9000926e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
900092d2:	bf00      	nop
900092d4:	2401fab9 	.word	0x2401fab9
900092d8:	2401fab0 	.word	0x2401fab0
900092dc:	2400003c 	.word	0x2400003c
900092e0:	2401fabc 	.word	0x2401fabc
900092e4:	90008a19 	.word	0x90008a19
900092e8:	2401faba 	.word	0x2401faba

900092ec <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
void screen_tictactoe_gameView::handleTickEvent() {
900092ec:	b538      	push	{r3, r4, r5, lr}
	if( game_over ) {
900092ee:	4b36      	ldr	r3, [pc, #216]	; (900093c8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xdc>)
void screen_tictactoe_gameView::handleTickEvent() {
900092f0:	4604      	mov	r4, r0
	if( game_over ) {
900092f2:	781b      	ldrb	r3, [r3, #0]
900092f4:	bb7b      	cbnz	r3, 90009356 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x6a>
		if( turn_number == 0 ) {
900092f6:	4a35      	ldr	r2, [pc, #212]	; (900093cc <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe0>)
900092f8:	f9b2 2000 	ldrsh.w	r2, [r2]
900092fc:	b1a2      	cbz	r2, 90009328 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x3c>
900092fe:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
			btn_back.invalidate();
90009302:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90009306:	f00f ff90 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
9000930a:	4b31      	ldr	r3, [pc, #196]	; (900093d0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
9000930c:	781b      	ldrb	r3, [r3, #0]
9000930e:	b1b3      	cbz	r3, 9000933e <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x52>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "1");
90009310:	f604 3068 	addw	r0, r4, #2920	; 0xb68
90009314:	4a2f      	ldr	r2, [pc, #188]	; (900093d4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe8>)
90009316:	210a      	movs	r1, #10
90009318:	f011 ffd6 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
9000931c:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
90009320:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
90009324:	f00f bf81 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90009328:	2301      	movs	r3, #1
			btn_back.invalidate();
9000932a:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
9000932e:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
90009332:	f00f ff7a 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
90009336:	4b26      	ldr	r3, [pc, #152]	; (900093d0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
90009338:	781b      	ldrb	r3, [r3, #0]
9000933a:	2b00      	cmp	r3, #0
9000933c:	d1e8      	bne.n	90009310 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x24>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "2");
9000933e:	f604 3068 	addw	r0, r4, #2920	; 0xb68
90009342:	4a25      	ldr	r2, [pc, #148]	; (900093d8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xec>)
90009344:	210a      	movs	r1, #10
90009346:	f011 ffbf 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
9000934a:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
9000934e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
90009352:	f00f bf6a 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
90009356:	2501      	movs	r5, #1
		btn_back.invalidate();
90009358:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
9000935c:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90009360:	f00f ff63 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		box_background.invalidate();
90009364:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90009368:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
9000936c:	f00f ff5d 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		lbl_game_over.invalidate();
90009370:	f604 2024 	addw	r0, r4, #2596	; 0xa24
90009374:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
90009378:	f00f ff57 	bl	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( result == 1 )
9000937c:	4b17      	ldr	r3, [pc, #92]	; (900093dc <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf0>)
9000937e:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90009382:	f9b3 3000 	ldrsh.w	r3, [r3]
90009386:	42ab      	cmp	r3, r5
90009388:	d009      	beq.n	9000939e <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xb2>
		else if( result == 2 )
9000938a:	2b02      	cmp	r3, #2
9000938c:	d00e      	beq.n	900093ac <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc0>
		else if( result == 3 )
9000938e:	2b03      	cmp	r3, #3
90009390:	d013      	beq.n	900093ba <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xce>
		lbl_result.invalidate();
90009392:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
}
90009396:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_result.invalidate();
9000939a:	f00f bf46 	b.w	9001922a <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 1 wins");
9000939e:	4a10      	ldr	r2, [pc, #64]	; (900093e0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf4>)
900093a0:	2114      	movs	r1, #20
900093a2:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900093a6:	f011 ff8f 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900093aa:	e7f2      	b.n	90009392 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 2 wins");
900093ac:	4a0d      	ldr	r2, [pc, #52]	; (900093e4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf8>)
900093ae:	2114      	movs	r1, #20
900093b0:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900093b4:	f011 ff88 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900093b8:	e7eb      	b.n	90009392 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Tie");
900093ba:	4a0b      	ldr	r2, [pc, #44]	; (900093e8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xfc>)
900093bc:	2114      	movs	r1, #20
900093be:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900093c2:	f011 ff81 	bl	9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900093c6:	e7e4      	b.n	90009392 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
900093c8:	2401fab9 	.word	0x2401fab9
900093cc:	2401fabc 	.word	0x2401fabc
900093d0:	2400003c 	.word	0x2400003c
900093d4:	9002d0e0 	.word	0x9002d0e0
900093d8:	9002d0e4 	.word	0x9002d0e4
900093dc:	2401faba 	.word	0x2401faba
900093e0:	9002d0bc 	.word	0x9002d0bc
900093e4:	9002d0cc 	.word	0x9002d0cc
900093e8:	9002d0dc 	.word	0x9002d0dc

900093ec <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
900093ec:	f7fc bd64 	b.w	90005eb8 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

900093f0 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900093f0:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900093f4:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900093f6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900093fa:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900093fe:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90009400:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90009402:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90009406:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
9000940a:	4770      	bx	lr

9000940c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
9000940c:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90009410:	2b01      	cmp	r3, #1
90009412:	d102      	bne.n	9000941a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90009414:	2300      	movs	r3, #0
90009416:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
9000941a:	2000      	movs	r0, #0
9000941c:	4770      	bx	lr
9000941e:	bf00      	nop

90009420 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90009420:	2000      	movs	r0, #0
90009422:	4770      	bx	lr

90009424 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90009424:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90009426:	6904      	ldr	r4, [r0, #16]
90009428:	8900      	ldrh	r0, [r0, #8]
9000942a:	46a4      	mov	ip, r4
}
9000942c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90009430:	4760      	bx	ip
90009432:	bf00      	nop

90009434 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90009434:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90009436:	68c4      	ldr	r4, [r0, #12]
90009438:	8900      	ldrh	r0, [r0, #8]
9000943a:	46a4      	mov	ip, r4
}
9000943c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90009440:	4760      	bx	ip
90009442:	bf00      	nop

90009444 <FT5336_GestureConfig>:
{
90009444:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90009446:	f100 0518 	add.w	r5, r0, #24
{
9000944a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000944c:	7809      	ldrb	r1, [r1, #0]
9000944e:	4628      	mov	r0, r5
90009450:	f000 f96c 	bl	9000972c <ft5336_radian_value>
90009454:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90009456:	7931      	ldrb	r1, [r6, #4]
90009458:	4628      	mov	r0, r5
9000945a:	f000 f975 	bl	90009748 <ft5336_offset_left_right>
9000945e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90009460:	7a31      	ldrb	r1, [r6, #8]
90009462:	4628      	mov	r0, r5
90009464:	f000 f97e 	bl	90009764 <ft5336_offset_up_down>
90009468:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000946a:	7b31      	ldrb	r1, [r6, #12]
9000946c:	4628      	mov	r0, r5
9000946e:	f000 f987 	bl	90009780 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90009472:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90009474:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90009476:	4628      	mov	r0, r5
90009478:	f000 f990 	bl	9000979c <ft5336_distance_up_down>
9000947c:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000947e:	7d31      	ldrb	r1, [r6, #20]
90009480:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90009482:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90009484:	f000 f998 	bl	900097b8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90009488:	42c4      	cmn	r4, r0
}
9000948a:	bf14      	ite	ne
9000948c:	f04f 30ff 	movne.w	r0, #4294967295
90009490:	2000      	moveq	r0, #0
90009492:	bd70      	pop	{r4, r5, r6, pc}

90009494 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90009494:	3018      	adds	r0, #24
90009496:	f000 b9ab 	b.w	900097f0 <ft5336_chip_id>
9000949a:	bf00      	nop

9000949c <FT5336_GetState>:
{
9000949c:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000949e:	f100 0518 	add.w	r5, r0, #24
{
900094a2:	b083      	sub	sp, #12
900094a4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900094a6:	4628      	mov	r0, r5
900094a8:	a901      	add	r1, sp, #4
900094aa:	f000 f931 	bl	90009710 <ft5336_td_status>
900094ae:	bb10      	cbnz	r0, 900094f6 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900094b0:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900094b4:	2b05      	cmp	r3, #5
900094b6:	bf94      	ite	ls
900094b8:	4619      	movls	r1, r3
900094ba:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900094bc:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900094be:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900094c0:	4628      	mov	r0, r5
900094c2:	2103      	movs	r1, #3
900094c4:	eb0d 0203 	add.w	r2, sp, r3
900094c8:	f000 f910 	bl	900096ec <ft5336_read_reg>
900094cc:	b9b0      	cbnz	r0, 900094fc <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900094ce:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900094d2:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900094d6:	0212      	lsls	r2, r2, #8
900094d8:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900094dc:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900094de:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900094e2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900094e6:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900094e8:	f89d 1007 	ldrb.w	r1, [sp, #7]
900094ec:	430b      	orrs	r3, r1
900094ee:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900094f2:	b003      	add	sp, #12
900094f4:	bd30      	pop	{r4, r5, pc}
900094f6:	f04f 31ff 	mov.w	r1, #4294967295
900094fa:	e7df      	b.n	900094bc <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900094fc:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009500:	e7f7      	b.n	900094f2 <FT5336_GetState+0x56>
90009502:	bf00      	nop

90009504 <FT5336_GetMultiTouchState>:
{
90009504:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90009506:	f100 0518 	add.w	r5, r0, #24
{
9000950a:	b088      	sub	sp, #32
9000950c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000950e:	4628      	mov	r0, r5
90009510:	4669      	mov	r1, sp
90009512:	f000 f8fd 	bl	90009710 <ft5336_td_status>
90009516:	2800      	cmp	r0, #0
90009518:	f040 809a 	bne.w	90009650 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
9000951c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90009520:	2b05      	cmp	r3, #5
90009522:	bf94      	ite	ls
90009524:	4619      	movls	r1, r3
90009526:	2100      	movhi	r1, #0
90009528:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
9000952a:	231e      	movs	r3, #30
9000952c:	466a      	mov	r2, sp
9000952e:	4628      	mov	r0, r5
90009530:	2103      	movs	r1, #3
90009532:	f000 f8db 	bl	900096ec <ft5336_read_reg>
90009536:	2800      	cmp	r0, #0
90009538:	f040 808d 	bne.w	90009656 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000953c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009540:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009544:	020a      	lsls	r2, r1, #8
90009546:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000954a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000954c:	f89d c007 	ldrb.w	ip, [sp, #7]
90009550:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009554:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009556:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000955a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000955e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009560:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009564:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009566:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009568:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000956a:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000956c:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009570:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009572:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009576:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000957a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000957c:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000957e:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009582:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009584:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009586:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009588:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000958c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000958e:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009590:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009594:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009598:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000959a:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000959c:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000959e:	ea45 050c 	orr.w	r5, r5, ip
900095a2:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095a6:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900095aa:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095ac:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095ae:	0212      	lsls	r2, r2, #8
900095b0:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900095b4:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095b6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900095ba:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095be:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900095c0:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095c2:	f89d 300e 	ldrb.w	r3, [sp, #14]
900095c6:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095c8:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095cc:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095ce:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095d0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095d4:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095d6:	f89d 200f 	ldrb.w	r2, [sp, #15]
900095da:	4313      	orrs	r3, r2
900095dc:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900095de:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095e0:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095e4:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095e8:	020a      	lsls	r2, r1, #8
900095ea:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095ee:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095f0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900095f4:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095f6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900095fa:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900095fc:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009600:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009602:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009604:	f89d 1018 	ldrb.w	r1, [sp, #24]
90009608:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000960a:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000960c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000960e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009612:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009614:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009618:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000961a:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000961e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90009622:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009624:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009626:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009628:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000962c:	6625      	str	r5, [r4, #96]	; 0x60
9000962e:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009630:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009634:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009636:	021b      	lsls	r3, r3, #8
90009638:	f89d 101b 	ldrb.w	r1, [sp, #27]
9000963c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90009640:	430b      	orrs	r3, r1
90009642:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009644:	f89d 3019 	ldrb.w	r3, [sp, #25]
90009648:	4313      	orrs	r3, r2
9000964a:	6163      	str	r3, [r4, #20]
}
9000964c:	b008      	add	sp, #32
9000964e:	bd70      	pop	{r4, r5, r6, pc}
90009650:	f04f 31ff 	mov.w	r1, #4294967295
90009654:	e768      	b.n	90009528 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90009656:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000965a:	e7f7      	b.n	9000964c <FT5336_GetMultiTouchState+0x148>

9000965c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
9000965c:	3018      	adds	r0, #24
9000965e:	f000 b84d 	b.w	900096fc <ft5336_gest_id>
90009662:	bf00      	nop

90009664 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90009664:	2101      	movs	r1, #1
90009666:	3018      	adds	r0, #24
90009668:	f000 b8b4 	b.w	900097d4 <ft5336_g_mode>

9000966c <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000966c:	2100      	movs	r1, #0
9000966e:	3018      	adds	r0, #24
90009670:	f000 b8b0 	b.w	900097d4 <ft5336_g_mode>

90009674 <FT5336_Init>:
{
90009674:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90009676:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
9000967a:	b98d      	cbnz	r5, 900096a0 <FT5336_Init+0x2c>
    pObj->IO.Init();
9000967c:	4606      	mov	r6, r0
9000967e:	4604      	mov	r4, r0
90009680:	f856 3b18 	ldr.w	r3, [r6], #24
90009684:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90009686:	4629      	mov	r1, r5
90009688:	4630      	mov	r0, r6
9000968a:	f000 f8a3 	bl	900097d4 <ft5336_g_mode>
  if(ret != FT5336_OK)
9000968e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90009690:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90009694:	bf18      	it	ne
90009696:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90009698:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
9000969c:	4240      	negs	r0, r0
}
9000969e:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
900096a0:	2000      	movs	r0, #0
}
900096a2:	bd70      	pop	{r4, r5, r6, pc}

900096a4 <FT5336_ClearIT>:
900096a4:	2000      	movs	r0, #0
900096a6:	4770      	bx	lr

900096a8 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900096a8:	b1c0      	cbz	r0, 900096dc <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900096aa:	890a      	ldrh	r2, [r1, #8]
{
900096ac:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900096ae:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900096b2:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900096b4:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900096b8:	694a      	ldr	r2, [r1, #20]
900096ba:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900096be:	4909      	ldr	r1, [pc, #36]	; (900096e4 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900096c0:	60c5      	str	r5, [r0, #12]
900096c2:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900096c6:	4a08      	ldr	r2, [pc, #32]	; (900096e8 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900096c8:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900096cc:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900096ce:	b10b      	cbz	r3, 900096d4 <FT5336_RegisterBusIO+0x2c>
}
900096d0:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900096d2:	4718      	bx	r3
}
900096d4:	f04f 30ff 	mov.w	r0, #4294967295
900096d8:	bc30      	pop	{r4, r5}
900096da:	4770      	bx	lr
900096dc:	f04f 30ff 	mov.w	r0, #4294967295
900096e0:	4770      	bx	lr
900096e2:	bf00      	nop
900096e4:	90009425 	.word	0x90009425
900096e8:	90009435 	.word	0x90009435

900096ec <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900096ec:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900096ee:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900096f2:	46a4      	mov	ip, r4
}
900096f4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900096f8:	4760      	bx	ip
900096fa:	bf00      	nop

900096fc <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900096fc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900096fe:	2301      	movs	r3, #1
{
90009700:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009702:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90009706:	4619      	mov	r1, r3
90009708:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000970a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000970e:	4760      	bx	ip

90009710 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009710:	b538      	push	{r3, r4, r5, lr}
90009712:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009714:	2301      	movs	r3, #1
90009716:	2102      	movs	r1, #2
90009718:	4622      	mov	r2, r4
9000971a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000971e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90009720:	b918      	cbnz	r0, 9000972a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90009722:	7823      	ldrb	r3, [r4, #0]
90009724:	f003 030f 	and.w	r3, r3, #15
90009728:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000972a:	bd38      	pop	{r3, r4, r5, pc}

9000972c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
9000972c:	b510      	push	{r4, lr}
9000972e:	460c      	mov	r4, r1
90009730:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009732:	2301      	movs	r3, #1
90009734:	2191      	movs	r1, #145	; 0x91
{
90009736:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000973a:	f10d 0207 	add.w	r2, sp, #7
9000973e:	6804      	ldr	r4, [r0, #0]
90009740:	6880      	ldr	r0, [r0, #8]
90009742:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90009744:	b002      	add	sp, #8
90009746:	bd10      	pop	{r4, pc}

90009748 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009748:	b510      	push	{r4, lr}
9000974a:	460c      	mov	r4, r1
9000974c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000974e:	2301      	movs	r3, #1
90009750:	2192      	movs	r1, #146	; 0x92
{
90009752:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009756:	f10d 0207 	add.w	r2, sp, #7
9000975a:	6804      	ldr	r4, [r0, #0]
9000975c:	6880      	ldr	r0, [r0, #8]
9000975e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90009760:	b002      	add	sp, #8
90009762:	bd10      	pop	{r4, pc}

90009764 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90009764:	b510      	push	{r4, lr}
90009766:	460c      	mov	r4, r1
90009768:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000976a:	2301      	movs	r3, #1
9000976c:	2193      	movs	r1, #147	; 0x93
{
9000976e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009772:	f10d 0207 	add.w	r2, sp, #7
90009776:	6804      	ldr	r4, [r0, #0]
90009778:	6880      	ldr	r0, [r0, #8]
9000977a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
9000977c:	b002      	add	sp, #8
9000977e:	bd10      	pop	{r4, pc}

90009780 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009780:	b510      	push	{r4, lr}
90009782:	460c      	mov	r4, r1
90009784:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009786:	2301      	movs	r3, #1
90009788:	2194      	movs	r1, #148	; 0x94
{
9000978a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000978e:	f10d 0207 	add.w	r2, sp, #7
90009792:	6804      	ldr	r4, [r0, #0]
90009794:	6880      	ldr	r0, [r0, #8]
90009796:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90009798:	b002      	add	sp, #8
9000979a:	bd10      	pop	{r4, pc}

9000979c <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000979c:	b510      	push	{r4, lr}
9000979e:	460c      	mov	r4, r1
900097a0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097a2:	2301      	movs	r3, #1
900097a4:	2195      	movs	r1, #149	; 0x95
{
900097a6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097aa:	f10d 0207 	add.w	r2, sp, #7
900097ae:	6804      	ldr	r4, [r0, #0]
900097b0:	6880      	ldr	r0, [r0, #8]
900097b2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900097b4:	b002      	add	sp, #8
900097b6:	bd10      	pop	{r4, pc}

900097b8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900097b8:	b510      	push	{r4, lr}
900097ba:	460c      	mov	r4, r1
900097bc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097be:	2301      	movs	r3, #1
900097c0:	2196      	movs	r1, #150	; 0x96
{
900097c2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097c6:	f10d 0207 	add.w	r2, sp, #7
900097ca:	6804      	ldr	r4, [r0, #0]
900097cc:	6880      	ldr	r0, [r0, #8]
900097ce:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900097d0:	b002      	add	sp, #8
900097d2:	bd10      	pop	{r4, pc}

900097d4 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900097d4:	b510      	push	{r4, lr}
900097d6:	460c      	mov	r4, r1
900097d8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097da:	2301      	movs	r3, #1
900097dc:	21a4      	movs	r1, #164	; 0xa4
{
900097de:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900097e2:	f10d 0207 	add.w	r2, sp, #7
900097e6:	6804      	ldr	r4, [r0, #0]
900097e8:	6880      	ldr	r0, [r0, #8]
900097ea:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900097ec:	b002      	add	sp, #8
900097ee:	bd10      	pop	{r4, pc}

900097f0 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900097f0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900097f2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900097f6:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900097f8:	2301      	movs	r3, #1
900097fa:	46a4      	mov	ip, r4
900097fc:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
900097fe:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009802:	4760      	bx	ip

90009804 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90009804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009806:	680b      	ldr	r3, [r1, #0]
{
90009808:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000980a:	4c2a      	ldr	r4, [pc, #168]	; (900098b4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000980c:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90009810:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90009812:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90009814:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009816:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009818:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000981a:	2301      	movs	r3, #1
9000981c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000981e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009820:	f005 fd2a 	bl	9000f278 <HAL_SDRAM_SendCommand>
90009824:	2800      	cmp	r0, #0
90009826:	d142      	bne.n	900098ae <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009828:	f000 ff46 	bl	9000a6b8 <HAL_GetTick>
9000982c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000982e:	f000 ff43 	bl	9000a6b8 <HAL_GetTick>
90009832:	4286      	cmp	r6, r0
90009834:	d0fb      	beq.n	9000982e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009836:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009838:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000983a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000983c:	491d      	ldr	r1, [pc, #116]	; (900098b4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000983e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009840:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90009842:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009844:	4638      	mov	r0, r7
90009846:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
9000984a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000984c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000984e:	f005 fd13 	bl	9000f278 <HAL_SDRAM_SendCommand>
90009852:	bb60      	cbnz	r0, 900098ae <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009854:	4917      	ldr	r1, [pc, #92]	; (900098b4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90009856:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000985a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000985c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000985e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90009862:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009864:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90009868:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000986a:	f005 fd05 	bl	9000f278 <HAL_SDRAM_SendCommand>
9000986e:	b9f0      	cbnz	r0, 900098ae <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009870:	4910      	ldr	r1, [pc, #64]	; (900098b4 <MT48LC4M32B2_Init+0xb0>)
90009872:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009874:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90009878:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000987a:	696a      	ldr	r2, [r5, #20]
9000987c:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
9000987e:	69aa      	ldr	r2, [r5, #24]
90009880:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90009882:	69ea      	ldr	r2, [r5, #28]
90009884:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90009886:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90009888:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000988a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
9000988c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009890:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009894:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009896:	f005 fcef 	bl	9000f278 <HAL_SDRAM_SendCommand>
9000989a:	b940      	cbnz	r0, 900098ae <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
9000989c:	68a9      	ldr	r1, [r5, #8]
9000989e:	4638      	mov	r0, r7
900098a0:	f005 fd0a 	bl	9000f2b8 <HAL_SDRAM_ProgramRefreshRate>
900098a4:	3800      	subs	r0, #0
900098a6:	bf18      	it	ne
900098a8:	2001      	movne	r0, #1
900098aa:	4240      	negs	r0, r0
}
900098ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900098ae:	f04f 30ff 	mov.w	r0, #4294967295
}
900098b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900098b4:	2401fac0 	.word	0x2401fac0

900098b8 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900098b8:	4a10      	ldr	r2, [pc, #64]	; (900098fc <BSP_I2C4_DeInit+0x44>)
{
900098ba:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900098bc:	6813      	ldr	r3, [r2, #0]
900098be:	3b01      	subs	r3, #1
900098c0:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900098c2:	b10b      	cbz	r3, 900098c8 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900098c4:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900098c6:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900098c8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900098cc:	480c      	ldr	r0, [pc, #48]	; (90009900 <BSP_I2C4_DeInit+0x48>)
900098ce:	f001 faaf 	bl	9000ae30 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900098d2:	480b      	ldr	r0, [pc, #44]	; (90009900 <BSP_I2C4_DeInit+0x48>)
900098d4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900098d8:	f001 faaa 	bl	9000ae30 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900098dc:	4a09      	ldr	r2, [pc, #36]	; (90009904 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900098de:	480a      	ldr	r0, [pc, #40]	; (90009908 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900098e0:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900098e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900098e8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900098ec:	f001 fd48 	bl	9000b380 <HAL_I2C_DeInit>
900098f0:	2800      	cmp	r0, #0
900098f2:	d0e7      	beq.n	900098c4 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900098f4:	f06f 0007 	mvn.w	r0, #7
}
900098f8:	bd08      	pop	{r3, pc}
900098fa:	bf00      	nop
900098fc:	2401fad0 	.word	0x2401fad0
90009900:	58020c00 	.word	0x58020c00
90009904:	58024400 	.word	0x58024400
90009908:	240204d8 	.word	0x240204d8

9000990c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
9000990c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
9000990e:	2201      	movs	r2, #1
{
90009910:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009912:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90009916:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000991a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
9000991e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009922:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009924:	f001 fcd4 	bl	9000b2d0 <HAL_I2C_Init>
90009928:	b108      	cbz	r0, 9000992e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000992a:	2001      	movs	r0, #1
}
9000992c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
9000992e:	4601      	mov	r1, r0
90009930:	4620      	mov	r0, r4
90009932:	f001 ffe3 	bl	9000b8fc <HAL_I2CEx_ConfigAnalogFilter>
90009936:	2800      	cmp	r0, #0
90009938:	d1f7      	bne.n	9000992a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000993a:	4601      	mov	r1, r0
9000993c:	4620      	mov	r0, r4
9000993e:	f002 f807 	bl	9000b950 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90009942:	3800      	subs	r0, #0
90009944:	bf18      	it	ne
90009946:	2001      	movne	r0, #1
}
90009948:	bd10      	pop	{r4, pc}
9000994a:	bf00      	nop

9000994c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000994c:	4b99      	ldr	r3, [pc, #612]	; (90009bb4 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
9000994e:	489a      	ldr	r0, [pc, #616]	; (90009bb8 <BSP_I2C4_Init+0x26c>)
90009950:	4a9a      	ldr	r2, [pc, #616]	; (90009bbc <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90009952:	6819      	ldr	r1, [r3, #0]
{
90009954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009958:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000995a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000995c:	9103      	str	r1, [sp, #12]
9000995e:	b119      	cbz	r1, 90009968 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90009960:	2000      	movs	r0, #0
}
90009962:	b01f      	add	sp, #124	; 0x7c
90009964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90009968:	2201      	movs	r2, #1
9000996a:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000996c:	f001 ffc0 	bl	9000b8f0 <HAL_I2C_GetState>
90009970:	2800      	cmp	r0, #0
90009972:	d1f5      	bne.n	90009960 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009974:	4c92      	ldr	r4, [pc, #584]	; (90009bc0 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009976:	f44f 5080 	mov.w	r0, #4096	; 0x1000
9000997a:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000997c:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000997e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009982:	2600      	movs	r6, #0
90009984:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009986:	f043 0308 	orr.w	r3, r3, #8
9000998a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
9000998e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009992:	f003 0308 	and.w	r3, r3, #8
90009996:	9315      	str	r3, [sp, #84]	; 0x54
90009998:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000999a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
9000999e:	f043 0308 	orr.w	r3, r3, #8
900099a2:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
900099a6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900099aa:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900099ac:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900099b0:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900099b4:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900099b6:	a918      	add	r1, sp, #96	; 0x60
900099b8:	4882      	ldr	r0, [pc, #520]	; (90009bc4 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900099ba:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900099bc:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900099c0:	f001 f904 	bl	9000abcc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900099c4:	2312      	movs	r3, #18
900099c6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900099ca:	a918      	add	r1, sp, #96	; 0x60
900099cc:	487d      	ldr	r0, [pc, #500]	; (90009bc4 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900099ce:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900099d0:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
900099d4:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900099d8:	f001 f8f8 	bl	9000abcc <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900099dc:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900099e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900099e4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900099e8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900099ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
900099f0:	9317      	str	r3, [sp, #92]	; 0x5c
900099f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
900099f4:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900099f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900099fc:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90009a00:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009a04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90009a08:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009a0c:	f004 fc94 	bl	9000e338 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009a10:	2800      	cmp	r0, #0
90009a12:	f000 81f6 	beq.w	90009e02 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009a16:	4b6c      	ldr	r3, [pc, #432]	; (90009bc8 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90009a18:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009a1c:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009a1e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009a22:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90009bd0 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009a26:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009a28:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90009a2c:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009a2e:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009a30:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009a34:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90009a38:	4b64      	ldr	r3, [pc, #400]	; (90009bcc <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009a3a:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009a3e:	0079      	lsls	r1, r7, #1
90009a40:	681b      	ldr	r3, [r3, #0]
90009a42:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90009a46:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90009a4a:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009a4c:	4699      	mov	r9, r3
90009a4e:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009a50:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90009a54:	46b8      	mov	r8, r7
90009a56:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90009a5a:	bf94      	ite	ls
90009a5c:	2101      	movls	r1, #1
90009a5e:	2100      	movhi	r1, #0
90009a60:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90009a64:	f001 0101 	and.w	r1, r1, #1
90009a68:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90009a6c:	bf38      	it	cc
90009a6e:	2100      	movcc	r1, #0
90009a70:	429c      	cmp	r4, r3
90009a72:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90009a76:	9105      	str	r1, [sp, #20]
90009a78:	bf8c      	ite	hi
90009a7a:	2100      	movhi	r1, #0
90009a7c:	2101      	movls	r1, #1
90009a7e:	459c      	cmp	ip, r3
90009a80:	bf38      	it	cc
90009a82:	2100      	movcc	r1, #0
90009a84:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90009a88:	9106      	str	r1, [sp, #24]
90009a8a:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90009a8e:	9104      	str	r1, [sp, #16]
90009a90:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90009a94:	9111      	str	r1, [sp, #68]	; 0x44
90009a96:	bf94      	ite	ls
90009a98:	2101      	movls	r1, #1
90009a9a:	2100      	movhi	r1, #0
90009a9c:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90009aa0:	f001 0e01 	and.w	lr, r1, #1
90009aa4:	bf38      	it	cc
90009aa6:	f04f 0e00 	movcc.w	lr, #0
90009aaa:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009aac:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009ab0:	f8cd e01c 	str.w	lr, [sp, #28]
90009ab4:	bf8c      	ite	hi
90009ab6:	f04f 0e00 	movhi.w	lr, #0
90009aba:	f04f 0e01 	movls.w	lr, #1
90009abe:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009ac0:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009ac2:	bf38      	it	cc
90009ac4:	f04f 0e00 	movcc.w	lr, #0
90009ac8:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90009acc:	bf98      	it	ls
90009ace:	2101      	movls	r1, #1
90009ad0:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90009ad4:	f8cd e020 	str.w	lr, [sp, #32]
90009ad8:	f001 0101 	and.w	r1, r1, #1
90009adc:	bf38      	it	cc
90009ade:	2100      	movcc	r1, #0
90009ae0:	4284      	cmp	r4, r0
90009ae2:	9109      	str	r1, [sp, #36]	; 0x24
90009ae4:	4601      	mov	r1, r0
90009ae6:	bf8c      	ite	hi
90009ae8:	2000      	movhi	r0, #0
90009aea:	2001      	movls	r0, #1
90009aec:	458c      	cmp	ip, r1
90009aee:	bf38      	it	cc
90009af0:	2000      	movcc	r0, #0
90009af2:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90009af6:	900b      	str	r0, [sp, #44]	; 0x2c
90009af8:	bf94      	ite	ls
90009afa:	2001      	movls	r0, #1
90009afc:	2000      	movhi	r0, #0
90009afe:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90009b02:	f000 0001 	and.w	r0, r0, #1
90009b06:	bf38      	it	cc
90009b08:	2000      	movcc	r0, #0
90009b0a:	900c      	str	r0, [sp, #48]	; 0x30
90009b0c:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90009b10:	4284      	cmp	r4, r0
90009b12:	bf8c      	ite	hi
90009b14:	f04f 0e00 	movhi.w	lr, #0
90009b18:	f04f 0e01 	movls.w	lr, #1
90009b1c:	4584      	cmp	ip, r0
90009b1e:	bf38      	it	cc
90009b20:	f04f 0e00 	movcc.w	lr, #0
90009b24:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90009b28:	4670      	mov	r0, lr
90009b2a:	bf94      	ite	ls
90009b2c:	2001      	movls	r0, #1
90009b2e:	2000      	movhi	r0, #0
90009b30:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90009b34:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90009b38:	f04f 0e00 	mov.w	lr, #0
90009b3c:	f000 0001 	and.w	r0, r0, #1
90009b40:	bf38      	it	cc
90009b42:	2000      	movcc	r0, #0
90009b44:	900e      	str	r0, [sp, #56]	; 0x38
90009b46:	9804      	ldr	r0, [sp, #16]
90009b48:	4284      	cmp	r4, r0
90009b4a:	4602      	mov	r2, r0
90009b4c:	bf8c      	ite	hi
90009b4e:	2200      	movhi	r2, #0
90009b50:	2201      	movls	r2, #1
90009b52:	4584      	cmp	ip, r0
90009b54:	bf38      	it	cc
90009b56:	2200      	movcc	r2, #0
90009b58:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90009b5c:	920f      	str	r2, [sp, #60]	; 0x3c
90009b5e:	bf94      	ite	ls
90009b60:	2201      	movls	r2, #1
90009b62:	2200      	movhi	r2, #0
90009b64:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009b68:	f002 0201 	and.w	r2, r2, #1
90009b6c:	bf38      	it	cc
90009b6e:	2200      	movcc	r2, #0
90009b70:	9210      	str	r2, [sp, #64]	; 0x40
90009b72:	9a11      	ldr	r2, [sp, #68]	; 0x44
90009b74:	4294      	cmp	r4, r2
90009b76:	4613      	mov	r3, r2
90009b78:	bf8c      	ite	hi
90009b7a:	2300      	movhi	r3, #0
90009b7c:	2301      	movls	r3, #1
90009b7e:	4594      	cmp	ip, r2
90009b80:	bf38      	it	cc
90009b82:	2300      	movcc	r3, #0
90009b84:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90009b88:	9311      	str	r3, [sp, #68]	; 0x44
90009b8a:	bf94      	ite	ls
90009b8c:	2301      	movls	r3, #1
90009b8e:	2300      	movhi	r3, #0
90009b90:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90009b94:	f003 0301 	and.w	r3, r3, #1
90009b98:	bf38      	it	cc
90009b9a:	2300      	movcc	r3, #0
90009b9c:	9312      	str	r3, [sp, #72]	; 0x48
90009b9e:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90009ba2:	429c      	cmp	r4, r3
90009ba4:	bf8c      	ite	hi
90009ba6:	2200      	movhi	r2, #0
90009ba8:	2201      	movls	r2, #1
90009baa:	459c      	cmp	ip, r3
90009bac:	bf38      	it	cc
90009bae:	2200      	movcc	r2, #0
90009bb0:	9204      	str	r2, [sp, #16]
90009bb2:	e014      	b.n	90009bde <BSP_I2C4_Init+0x292>
90009bb4:	2401fad0 	.word	0x2401fad0
90009bb8:	240204d8 	.word	0x240204d8
90009bbc:	58001c00 	.word	0x58001c00
90009bc0:	58024400 	.word	0x58024400
90009bc4:	58020c00 	.word	0x58020c00
90009bc8:	3b9aca00 	.word	0x3b9aca00
90009bcc:	240204d4 	.word	0x240204d4
90009bd0:	2401fad4 	.word	0x2401fad4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009bd4:	f1be 0f10 	cmp.w	lr, #16
90009bd8:	44b8      	add	r8, r7
90009bda:	f000 826c 	beq.w	9000a0b6 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90009bde:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90009be2:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90009be4:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90009be8:	d3f4      	bcc.n	90009bd4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90009bea:	ebbb 0205 	subs.w	r2, fp, r5
90009bee:	bf18      	it	ne
90009bf0:	2201      	movne	r2, #1
90009bf2:	2c00      	cmp	r4, #0
90009bf4:	bf18      	it	ne
90009bf6:	2200      	movne	r2, #0
90009bf8:	2a00      	cmp	r2, #0
90009bfa:	f040 824a 	bne.w	9000a092 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009bfe:	45bc      	cmp	ip, r7
90009c00:	bf34      	ite	cc
90009c02:	2200      	movcc	r2, #0
90009c04:	2201      	movcs	r2, #1
90009c06:	42bc      	cmp	r4, r7
90009c08:	bf88      	it	hi
90009c0a:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90009c0c:	45ab      	cmp	fp, r5
90009c0e:	bf0c      	ite	eq
90009c10:	2200      	moveq	r2, #0
90009c12:	f002 0201 	andne.w	r2, r2, #1
90009c16:	2a00      	cmp	r2, #0
90009c18:	f000 80fd 	beq.w	90009e16 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c1c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009c20:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c24:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c26:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009c2a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c2e:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c32:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c34:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009c36:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009c38:	f200 81a5 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009c3c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009c3e:	9906      	ldr	r1, [sp, #24]
90009c40:	45ab      	cmp	fp, r5
90009c42:	bf0c      	ite	eq
90009c44:	2100      	moveq	r1, #0
90009c46:	f001 0101 	andne.w	r1, r1, #1
90009c4a:	2900      	cmp	r1, #0
90009c4c:	f000 80ff 	beq.w	90009e4e <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c50:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009c54:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c58:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c5a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009c5e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c62:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c66:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c68:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009c6a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009c6c:	f200 818b 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009c70:	460a      	mov	r2, r1
90009c72:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009c74:	9908      	ldr	r1, [sp, #32]
90009c76:	45ab      	cmp	fp, r5
90009c78:	bf0c      	ite	eq
90009c7a:	2100      	moveq	r1, #0
90009c7c:	f001 0101 	andne.w	r1, r1, #1
90009c80:	2900      	cmp	r1, #0
90009c82:	f000 80ff 	beq.w	90009e84 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c86:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009c8a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c8e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c90:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009c94:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c98:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009c9c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009c9e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009ca0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ca2:	f200 8170 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009ca6:	460a      	mov	r2, r1
90009ca8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009caa:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009cac:	45ab      	cmp	fp, r5
90009cae:	bf0c      	ite	eq
90009cb0:	2100      	moveq	r1, #0
90009cb2:	f001 0101 	andne.w	r1, r1, #1
90009cb6:	2900      	cmp	r1, #0
90009cb8:	f000 80fe 	beq.w	90009eb8 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cbc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009cc0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009cc4:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cc6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009cca:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cce:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009cd2:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cd4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009cd6:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009cd8:	f200 8155 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009cdc:	460a      	mov	r2, r1
90009cde:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009ce0:	990d      	ldr	r1, [sp, #52]	; 0x34
90009ce2:	45ab      	cmp	fp, r5
90009ce4:	bf0c      	ite	eq
90009ce6:	2100      	moveq	r1, #0
90009ce8:	f001 0101 	andne.w	r1, r1, #1
90009cec:	2900      	cmp	r1, #0
90009cee:	f000 80fd 	beq.w	90009eec <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cf2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009cf6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009cfa:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009cfc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d00:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d04:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d08:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d0a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009d0c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d0e:	f200 813a 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009d12:	460a      	mov	r2, r1
90009d14:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009d16:	990f      	ldr	r1, [sp, #60]	; 0x3c
90009d18:	45ab      	cmp	fp, r5
90009d1a:	bf0c      	ite	eq
90009d1c:	2100      	moveq	r1, #0
90009d1e:	f001 0101 	andne.w	r1, r1, #1
90009d22:	2900      	cmp	r1, #0
90009d24:	f000 80fc 	beq.w	90009f20 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d28:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d2c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d30:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d32:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d36:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d3a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d3e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d40:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009d42:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d44:	f200 811f 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009d48:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009d4a:	9e11      	ldr	r6, [sp, #68]	; 0x44
90009d4c:	455d      	cmp	r5, fp
90009d4e:	bf0c      	ite	eq
90009d50:	2600      	moveq	r6, #0
90009d52:	f006 0601 	andne.w	r6, r6, #1
90009d56:	2e00      	cmp	r6, #0
90009d58:	f000 80fb 	beq.w	90009f52 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d5c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d60:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d64:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d66:	4650      	mov	r0, sl
90009d68:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d6c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d70:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009d74:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d76:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d78:	f200 8105 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009d7c:	4631      	mov	r1, r6
90009d7e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009d80:	9e04      	ldr	r6, [sp, #16]
90009d82:	455d      	cmp	r5, fp
90009d84:	bf0c      	ite	eq
90009d86:	2600      	moveq	r6, #0
90009d88:	f006 0601 	andne.w	r6, r6, #1
90009d8c:	2e00      	cmp	r6, #0
90009d8e:	f000 817c 	beq.w	9000a08a <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d92:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d96:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d9a:	4650      	mov	r0, sl
90009d9c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90009da0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009da4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009da8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009daa:	f04f 030f 	mov.w	r3, #15
90009dae:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009db0:	f200 80e9 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009db4:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90009db6:	e70d      	b.n	90009bd4 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90009db8:	9a07      	ldr	r2, [sp, #28]
90009dba:	9b08      	ldr	r3, [sp, #32]
90009dbc:	3214      	adds	r2, #20
90009dbe:	3301      	adds	r3, #1
90009dc0:	9207      	str	r2, [sp, #28]
90009dc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90009dc4:	9308      	str	r3, [sp, #32]
90009dc6:	4293      	cmp	r3, r2
90009dc8:	f040 80ff 	bne.w	90009fca <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90009dcc:	297f      	cmp	r1, #127	; 0x7f
90009dce:	d818      	bhi.n	90009e02 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009dd0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90009dd4:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009dd6:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90009dda:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009dde:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90009de0:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009de2:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009de4:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009de8:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009dec:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009df0:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90009df2:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009df4:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90009df6:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009dfa:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009dfc:	430b      	orrs	r3, r1
90009dfe:	4313      	orrs	r3, r2
90009e00:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009e02:	9903      	ldr	r1, [sp, #12]
90009e04:	48b5      	ldr	r0, [pc, #724]	; (9000a0dc <BSP_I2C4_Init+0x790>)
90009e06:	f7ff fd81 	bl	9000990c <MX_I2C4_Init>
90009e0a:	2800      	cmp	r0, #0
90009e0c:	f43f ada8 	beq.w	90009960 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90009e10:	f06f 0007 	mvn.w	r0, #7
  return ret;
90009e14:	e5a5      	b.n	90009962 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90009e16:	4632      	mov	r2, r6
90009e18:	9905      	ldr	r1, [sp, #20]
90009e1a:	45ab      	cmp	fp, r5
90009e1c:	bf0c      	ite	eq
90009e1e:	2100      	moveq	r1, #0
90009e20:	f001 0101 	andne.w	r1, r1, #1
90009e24:	2900      	cmp	r1, #0
90009e26:	f43f af0a 	beq.w	90009c3e <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e2a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e2e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e32:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e34:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e38:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e3c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e40:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e42:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009e44:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e46:	f200 809e 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009e4a:	460a      	mov	r2, r1
90009e4c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009e4e:	9907      	ldr	r1, [sp, #28]
90009e50:	45ab      	cmp	fp, r5
90009e52:	bf0c      	ite	eq
90009e54:	2100      	moveq	r1, #0
90009e56:	f001 0101 	andne.w	r1, r1, #1
90009e5a:	2900      	cmp	r1, #0
90009e5c:	f43f af0a 	beq.w	90009c74 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e60:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e64:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e68:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e6a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e6e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e72:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e76:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e78:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009e7a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e7c:	f200 8083 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
90009e80:	460a      	mov	r2, r1
90009e82:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009e84:	9909      	ldr	r1, [sp, #36]	; 0x24
90009e86:	45ab      	cmp	fp, r5
90009e88:	bf0c      	ite	eq
90009e8a:	2100      	moveq	r1, #0
90009e8c:	f001 0101 	andne.w	r1, r1, #1
90009e90:	2900      	cmp	r1, #0
90009e92:	f43f af0a 	beq.w	90009caa <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e96:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e9a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e9e:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ea0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ea4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ea8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009eac:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009eae:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009eb0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eb2:	d868      	bhi.n	90009f86 <BSP_I2C4_Init+0x63a>
90009eb4:	460a      	mov	r2, r1
90009eb6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009eb8:	990c      	ldr	r1, [sp, #48]	; 0x30
90009eba:	45ab      	cmp	fp, r5
90009ebc:	bf0c      	ite	eq
90009ebe:	2100      	moveq	r1, #0
90009ec0:	f001 0101 	andne.w	r1, r1, #1
90009ec4:	2900      	cmp	r1, #0
90009ec6:	f43f af0b 	beq.w	90009ce0 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009eca:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009ece:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ed2:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ed4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ed8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009edc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009ee0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ee2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009ee4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009ee6:	d84e      	bhi.n	90009f86 <BSP_I2C4_Init+0x63a>
90009ee8:	460a      	mov	r2, r1
90009eea:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009eec:	990e      	ldr	r1, [sp, #56]	; 0x38
90009eee:	45ab      	cmp	fp, r5
90009ef0:	bf0c      	ite	eq
90009ef2:	2100      	moveq	r1, #0
90009ef4:	f001 0101 	andne.w	r1, r1, #1
90009ef8:	2900      	cmp	r1, #0
90009efa:	f43f af0c 	beq.w	90009d16 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009efe:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f02:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f06:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f08:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f0c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f10:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f14:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f16:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f18:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f1a:	d834      	bhi.n	90009f86 <BSP_I2C4_Init+0x63a>
90009f1c:	460a      	mov	r2, r1
90009f1e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f20:	9910      	ldr	r1, [sp, #64]	; 0x40
90009f22:	45ab      	cmp	fp, r5
90009f24:	bf0c      	ite	eq
90009f26:	2100      	moveq	r1, #0
90009f28:	f001 0101 	andne.w	r1, r1, #1
90009f2c:	2900      	cmp	r1, #0
90009f2e:	f000 80ae 	beq.w	9000a08e <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f32:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f36:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f3a:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f3c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f40:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f44:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f48:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f4a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f4c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f4e:	d81a      	bhi.n	90009f86 <BSP_I2C4_Init+0x63a>
90009f50:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f52:	9e12      	ldr	r6, [sp, #72]	; 0x48
90009f54:	455d      	cmp	r5, fp
90009f56:	bf0c      	ite	eq
90009f58:	2600      	moveq	r6, #0
90009f5a:	f006 0601 	andne.w	r6, r6, #1
90009f5e:	2e00      	cmp	r6, #0
90009f60:	f43f af0e 	beq.w	90009d80 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f64:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f68:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f6c:	4650      	mov	r0, sl
90009f6e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90009f72:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f76:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f7a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f7c:	f04f 030e 	mov.w	r3, #14
90009f80:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f82:	f67f af17 	bls.w	90009db4 <BSP_I2C4_Init+0x468>
90009f86:	4b56      	ldr	r3, [pc, #344]	; (9000a0e0 <BSP_I2C4_Init+0x794>)
90009f88:	900b      	str	r0, [sp, #44]	; 0x2c
90009f8a:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
90009f8e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90009f92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90009f94:	f240 4201 	movw	r2, #1025	; 0x401
90009f98:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90009f9c:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90009fa0:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90009fa2:	f240 4b12 	movw	fp, #1042	; 0x412
90009fa6:	920d      	str	r2, [sp, #52]	; 0x34
90009fa8:	9a02      	ldr	r2, [sp, #8]
90009faa:	4296      	cmp	r6, r2
90009fac:	bf38      	it	cc
90009fae:	4616      	movcc	r6, r2
90009fb0:	4a4c      	ldr	r2, [pc, #304]	; (9000a0e4 <BSP_I2C4_Init+0x798>)
90009fb2:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90009fb4:	2200      	movs	r2, #0
90009fb6:	9208      	str	r2, [sp, #32]
90009fb8:	f04f 32ff 	mov.w	r2, #4294967295
90009fbc:	4611      	mov	r1, r2
90009fbe:	f103 0232 	add.w	r2, r3, #50	; 0x32
90009fc2:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
90009fc6:	920c      	str	r2, [sp, #48]	; 0x30
90009fc8:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90009fca:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90009fcc:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90009fd0:	6818      	ldr	r0, [r3, #0]
90009fd2:	9b02      	ldr	r3, [sp, #8]
90009fd4:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90009fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90009fda:	1a1b      	subs	r3, r3, r0
90009fdc:	ea4f 0943 	mov.w	r9, r3, lsl #1
90009fe0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90009fe2:	eb03 0e00 	add.w	lr, r3, r0
90009fe6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90009fe8:	4403      	add	r3, r0
90009fea:	9309      	str	r3, [sp, #36]	; 0x24
90009fec:	e006      	b.n	90009ffc <BSP_I2C4_Init+0x6b0>
90009fee:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
90009ff2:	4486      	add	lr, r0
90009ff4:	eba9 0900 	sub.w	r9, r9, r0
90009ff8:	f43f aede 	beq.w	90009db8 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90009ffc:	f240 5214 	movw	r2, #1300	; 0x514
9000a000:	f8cd 8004 	str.w	r8, [sp, #4]
9000a004:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a008:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a00c:	4596      	cmp	lr, r2
9000a00e:	d9ee      	bls.n	90009fee <BSP_I2C4_Init+0x6a2>
9000a010:	9a02      	ldr	r2, [sp, #8]
9000a012:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
9000a016:	d2ea      	bcs.n	90009fee <BSP_I2C4_Init+0x6a2>
9000a018:	f640 0c34 	movw	ip, #2100	; 0x834
9000a01c:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a01e:	f8cd 9018 	str.w	r9, [sp, #24]
9000a022:	2200      	movs	r2, #0
9000a024:	ebac 0c03 	sub.w	ip, ip, r3
9000a028:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000a02a:	4689      	mov	r9, r1
9000a02c:	4473      	add	r3, lr
9000a02e:	e9cd e804 	strd	lr, r8, [sp, #16]
9000a032:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000a036:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000a03a:	e005      	b.n	9000a048 <BSP_I2C4_Init+0x6fc>
9000a03c:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000a040:	4403      	add	r3, r0
9000a042:	eba4 0400 	sub.w	r4, r4, r0
9000a046:	d01a      	beq.n	9000a07e <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a048:	eb0c 0103 	add.w	r1, ip, r3
9000a04c:	4617      	mov	r7, r2
9000a04e:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000a052:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a054:	42b1      	cmp	r1, r6
9000a056:	d9f1      	bls.n	9000a03c <BSP_I2C4_Init+0x6f0>
9000a058:	455d      	cmp	r5, fp
9000a05a:	d8ef      	bhi.n	9000a03c <BSP_I2C4_Init+0x6f0>
            if (error < 0)
9000a05c:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000a060:	bf28      	it	cs
9000a062:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000a064:	458a      	cmp	sl, r1
9000a066:	d9e9      	bls.n	9000a03c <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
9000a068:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a06a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000a06e:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000a070:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a072:	4403      	add	r3, r0
9000a074:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000a078:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a07c:	d1e4      	bne.n	9000a048 <BSP_I2C4_Init+0x6fc>
9000a07e:	4649      	mov	r1, r9
9000a080:	f8dd 9018 	ldr.w	r9, [sp, #24]
9000a084:	e9dd e804 	ldrd	lr, r8, [sp, #16]
9000a088:	e7b1      	b.n	90009fee <BSP_I2C4_Init+0x6a2>
9000a08a:	460e      	mov	r6, r1
9000a08c:	e5a2      	b.n	90009bd4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000a08e:	4611      	mov	r1, r2
9000a090:	e65b      	b.n	90009d4a <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a092:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a096:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a09a:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a09c:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0a0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0a4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a0a8:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a0aa:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a0ac:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a0ae:	f63f af6a 	bhi.w	90009f86 <BSP_I2C4_Init+0x63a>
9000a0b2:	46ab      	mov	fp, r5
9000a0b4:	e6b0      	b.n	90009e18 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000a0b6:	3501      	adds	r5, #1
9000a0b8:	9b02      	ldr	r3, [sp, #8]
9000a0ba:	2d10      	cmp	r5, #16
9000a0bc:	441f      	add	r7, r3
9000a0be:	f47f acc7 	bne.w	90009a50 <BSP_I2C4_Init+0x104>
9000a0c2:	b126      	cbz	r6, 9000a0ce <BSP_I2C4_Init+0x782>
9000a0c4:	4b06      	ldr	r3, [pc, #24]	; (9000a0e0 <BSP_I2C4_Init+0x794>)
9000a0c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000a0ca:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a0ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000a0d0:	2b00      	cmp	r3, #0
9000a0d2:	f43f ae96 	beq.w	90009e02 <BSP_I2C4_Init+0x4b6>
9000a0d6:	4b03      	ldr	r3, [pc, #12]	; (9000a0e4 <BSP_I2C4_Init+0x798>)
9000a0d8:	930b      	str	r3, [sp, #44]	; 0x2c
9000a0da:	e75a      	b.n	90009f92 <BSP_I2C4_Init+0x646>
9000a0dc:	240204d8 	.word	0x240204d8
9000a0e0:	240204d4 	.word	0x240204d4
9000a0e4:	2401fad4 	.word	0x2401fad4

9000a0e8 <BSP_I2C4_WriteReg>:
{
9000a0e8:	b530      	push	{r4, r5, lr}
9000a0ea:	4614      	mov	r4, r2
9000a0ec:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a0ee:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a0f2:	460a      	mov	r2, r1
9000a0f4:	9301      	str	r3, [sp, #4]
9000a0f6:	4601      	mov	r1, r0
9000a0f8:	2301      	movs	r3, #1
9000a0fa:	4809      	ldr	r0, [pc, #36]	; (9000a120 <BSP_I2C4_WriteReg+0x38>)
9000a0fc:	9502      	str	r5, [sp, #8]
9000a0fe:	9400      	str	r4, [sp, #0]
9000a100:	f001 f958 	bl	9000b3b4 <HAL_I2C_Mem_Write>
9000a104:	b908      	cbnz	r0, 9000a10a <BSP_I2C4_WriteReg+0x22>
}
9000a106:	b005      	add	sp, #20
9000a108:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a10a:	4805      	ldr	r0, [pc, #20]	; (9000a120 <BSP_I2C4_WriteReg+0x38>)
9000a10c:	f001 fbf4 	bl	9000b8f8 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a110:	2804      	cmp	r0, #4
9000a112:	bf0c      	ite	eq
9000a114:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a118:	f06f 0003 	mvnne.w	r0, #3
9000a11c:	e7f3      	b.n	9000a106 <BSP_I2C4_WriteReg+0x1e>
9000a11e:	bf00      	nop
9000a120:	240204d8 	.word	0x240204d8

9000a124 <BSP_I2C4_ReadReg>:
{
9000a124:	b530      	push	{r4, r5, lr}
9000a126:	4614      	mov	r4, r2
9000a128:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a12a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a12e:	460a      	mov	r2, r1
9000a130:	9301      	str	r3, [sp, #4]
9000a132:	4601      	mov	r1, r0
9000a134:	2301      	movs	r3, #1
9000a136:	4809      	ldr	r0, [pc, #36]	; (9000a15c <BSP_I2C4_ReadReg+0x38>)
9000a138:	9502      	str	r5, [sp, #8]
9000a13a:	9400      	str	r4, [sp, #0]
9000a13c:	f001 fa6e 	bl	9000b61c <HAL_I2C_Mem_Read>
9000a140:	b908      	cbnz	r0, 9000a146 <BSP_I2C4_ReadReg+0x22>
}
9000a142:	b005      	add	sp, #20
9000a144:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a146:	4805      	ldr	r0, [pc, #20]	; (9000a15c <BSP_I2C4_ReadReg+0x38>)
9000a148:	f001 fbd6 	bl	9000b8f8 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a14c:	2804      	cmp	r0, #4
9000a14e:	bf0c      	ite	eq
9000a150:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a154:	f06f 0003 	mvnne.w	r0, #3
9000a158:	e7f3      	b.n	9000a142 <BSP_I2C4_ReadReg+0x1e>
9000a15a:	bf00      	nop
9000a15c:	240204d8 	.word	0x240204d8

9000a160 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000a160:	f000 baaa 	b.w	9000a6b8 <HAL_GetTick>

9000a164 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000a164:	b970      	cbnz	r0, 9000a184 <BSP_SDRAM_DeInit+0x20>
{
9000a166:	b510      	push	{r4, lr}
9000a168:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000a16a:	4808      	ldr	r0, [pc, #32]	; (9000a18c <BSP_SDRAM_DeInit+0x28>)
9000a16c:	f005 f876 	bl	9000f25c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000a170:	207a      	movs	r0, #122	; 0x7a
9000a172:	f000 fb0b 	bl	9000a78c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a176:	4b06      	ldr	r3, [pc, #24]	; (9000a190 <BSP_SDRAM_DeInit+0x2c>)
9000a178:	4806      	ldr	r0, [pc, #24]	; (9000a194 <BSP_SDRAM_DeInit+0x30>)
9000a17a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000a17c:	f003 f98e 	bl	9000d49c <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000a180:	4620      	mov	r0, r4
}
9000a182:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a184:	f06f 0001 	mvn.w	r0, #1
}
9000a188:	4770      	bx	lr
9000a18a:	bf00      	nop
9000a18c:	2402052c 	.word	0x2402052c
9000a190:	52000040 	.word	0x52000040
9000a194:	24020560 	.word	0x24020560

9000a198 <MX_SDRAM_BANK2_Init>:
{
9000a198:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000a19a:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a19c:	2200      	movs	r2, #0
{
9000a19e:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a1a0:	4c13      	ldr	r4, [pc, #76]	; (9000a1f0 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a1a2:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a1a4:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000a1a6:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a1a8:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000a1aa:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000a1ac:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000a1ae:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a1b0:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000a1b4:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000a1b6:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a1b8:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a1ba:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a1bc:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a1be:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a1c2:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a1c4:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a1c8:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a1ca:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a1cc:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000a1d0:	2204      	movs	r2, #4
9000a1d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000a1d6:	2202      	movs	r2, #2
9000a1d8:	2302      	movs	r3, #2
9000a1da:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a1de:	4b05      	ldr	r3, [pc, #20]	; (9000a1f4 <MX_SDRAM_BANK2_Init+0x5c>)
9000a1e0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a1e2:	f005 f811 	bl	9000f208 <HAL_SDRAM_Init>
}
9000a1e6:	3800      	subs	r0, #0
9000a1e8:	bf18      	it	ne
9000a1ea:	2001      	movne	r0, #1
9000a1ec:	b009      	add	sp, #36	; 0x24
9000a1ee:	bd30      	pop	{r4, r5, pc}
9000a1f0:	2402052c 	.word	0x2402052c
9000a1f4:	52004140 	.word	0x52004140

9000a1f8 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
9000a1f8:	2800      	cmp	r0, #0
9000a1fa:	f040 80d2 	bne.w	9000a3a2 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000a1fe:	4b6c      	ldr	r3, [pc, #432]	; (9000a3b0 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a200:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000a202:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a206:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
9000a20a:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
9000a20c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
9000a210:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
9000a212:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a216:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a218:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a21c:	4c65      	ldr	r4, [pc, #404]	; (9000a3b4 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a21e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a222:	4e65      	ldr	r6, [pc, #404]	; (9000a3b8 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a224:	9201      	str	r2, [sp, #4]
9000a226:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
9000a228:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a22c:	f042 0201 	orr.w	r2, r2, #1
9000a230:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000a234:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a238:	f002 0201 	and.w	r2, r2, #1
9000a23c:	9202      	str	r2, [sp, #8]
9000a23e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000a240:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a244:	f042 0208 	orr.w	r2, r2, #8
9000a248:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a24c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a250:	f002 0208 	and.w	r2, r2, #8
9000a254:	9203      	str	r2, [sp, #12]
9000a256:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000a258:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a25c:	f042 0210 	orr.w	r2, r2, #16
9000a260:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a264:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a268:	f002 0210 	and.w	r2, r2, #16
9000a26c:	9204      	str	r2, [sp, #16]
9000a26e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000a270:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a274:	f042 0220 	orr.w	r2, r2, #32
9000a278:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a27c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a280:	f002 0220 	and.w	r2, r2, #32
9000a284:	9205      	str	r2, [sp, #20]
9000a286:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000a288:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a28c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a290:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a294:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a298:	f002 0240 	and.w	r2, r2, #64	; 0x40
9000a29c:	9206      	str	r2, [sp, #24]
9000a29e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a2a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a2a4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000a2a8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a2ac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a2b0:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a2b2:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a2b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a2b8:	e9cd 0108 	strd	r0, r1, [sp, #32]
9000a2bc:	2001      	movs	r0, #1
9000a2be:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a2c0:	9307      	str	r3, [sp, #28]
9000a2c2:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a2c4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a2c8:	a908      	add	r1, sp, #32
9000a2ca:	483c      	ldr	r0, [pc, #240]	; (9000a3bc <BSP_SDRAM_Init+0x1c4>)
9000a2cc:	f000 fc7e 	bl	9000abcc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a2d0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a2d4:	a908      	add	r1, sp, #32
9000a2d6:	483a      	ldr	r0, [pc, #232]	; (9000a3c0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a2d8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a2da:	f000 fc77 	bl	9000abcc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a2de:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a2e2:	a908      	add	r1, sp, #32
9000a2e4:	4837      	ldr	r0, [pc, #220]	; (9000a3c4 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a2e6:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a2e8:	f000 fc70 	bl	9000abcc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a2ec:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a2f0:	a908      	add	r1, sp, #32
9000a2f2:	4835      	ldr	r0, [pc, #212]	; (9000a3c8 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a2f4:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a2f6:	f000 fc69 	bl	9000abcc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a2fa:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a2fc:	a908      	add	r1, sp, #32
9000a2fe:	4833      	ldr	r0, [pc, #204]	; (9000a3cc <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a300:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a302:	f000 fc63 	bl	9000abcc <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a306:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a308:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a30c:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000a310:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000a312:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000a314:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a316:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a318:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a31c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a31e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a320:	4a2b      	ldr	r2, [pc, #172]	; (9000a3d0 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a322:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a324:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a326:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a328:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000a32c:	f640 0308 	movw	r3, #2056	; 0x808
9000a330:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000a332:	2320      	movs	r3, #32
9000a334:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a336:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000a33a:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a33e:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
9000a340:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000a344:	f003 f8aa 	bl	9000d49c <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000a348:	4620      	mov	r0, r4
9000a34a:	f003 f82d 	bl	9000d3a8 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000a34e:	462a      	mov	r2, r5
9000a350:	210f      	movs	r1, #15
9000a352:	207a      	movs	r0, #122	; 0x7a
9000a354:	f000 f9ce 	bl	9000a6f4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000a358:	207a      	movs	r0, #122	; 0x7a
9000a35a:	f000 fa09 	bl	9000a770 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000a35e:	2210      	movs	r2, #16
9000a360:	2104      	movs	r1, #4
9000a362:	4630      	mov	r0, r6
9000a364:	f7ff ff18 	bl	9000a198 <MX_SDRAM_BANK2_Init>
9000a368:	b9f0      	cbnz	r0, 9000a3a8 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a36a:	491a      	ldr	r1, [pc, #104]	; (9000a3d4 <BSP_SDRAM_Init+0x1dc>)
9000a36c:	2208      	movs	r2, #8
9000a36e:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a370:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a372:	e9c1 2300 	strd	r2, r3, [r1]
9000a376:	f240 6203 	movw	r2, #1539	; 0x603
9000a37a:	2300      	movs	r3, #0
9000a37c:	e9c1 2302 	strd	r2, r3, [r1, #8]
9000a380:	2200      	movs	r2, #0
9000a382:	2330      	movs	r3, #48	; 0x30
9000a384:	e9c1 2304 	strd	r2, r3, [r1, #16]
9000a388:	2200      	movs	r2, #0
9000a38a:	f44f 7300 	mov.w	r3, #512	; 0x200
9000a38e:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a392:	f7ff fa37 	bl	90009804 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000a396:	2800      	cmp	r0, #0
9000a398:	bf18      	it	ne
9000a39a:	f06f 0004 	mvnne.w	r0, #4
}
9000a39e:	b00e      	add	sp, #56	; 0x38
9000a3a0:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a3a2:	f06f 0001 	mvn.w	r0, #1
}
9000a3a6:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000a3a8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000a3ac:	e7f7      	b.n	9000a39e <BSP_SDRAM_Init+0x1a6>
9000a3ae:	bf00      	nop
9000a3b0:	58024400 	.word	0x58024400
9000a3b4:	240205cc 	.word	0x240205cc
9000a3b8:	2402052c 	.word	0x2402052c
9000a3bc:	58020c00 	.word	0x58020c00
9000a3c0:	58021000 	.word	0x58021000
9000a3c4:	58021400 	.word	0x58021400
9000a3c8:	58021800 	.word	0x58021800
9000a3cc:	58021c00 	.word	0x58021c00
9000a3d0:	52000040 	.word	0x52000040
9000a3d4:	24020638 	.word	0x24020638

9000a3d8 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
9000a3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a3dc:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000a3de:	2800      	cmp	r0, #0
9000a3e0:	d16b      	bne.n	9000a4ba <BSP_TS_Init+0xe2>
9000a3e2:	680b      	ldr	r3, [r1, #0]
9000a3e4:	460c      	mov	r4, r1
9000a3e6:	1e5a      	subs	r2, r3, #1
9000a3e8:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
9000a3ec:	d265      	bcs.n	9000a4ba <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a3ee:	684a      	ldr	r2, [r1, #4]
9000a3f0:	1e51      	subs	r1, r2, #1
9000a3f2:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
9000a3f6:	d260      	bcs.n	9000a4ba <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
9000a3f8:	4293      	cmp	r3, r2
9000a3fa:	bf28      	it	cs
9000a3fc:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a3fe:	68e2      	ldr	r2, [r4, #12]
9000a400:	429a      	cmp	r2, r3
9000a402:	d85a      	bhi.n	9000a4ba <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a404:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
9000a406:	4b31      	ldr	r3, [pc, #196]	; (9000a4cc <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a408:	4d31      	ldr	r5, [pc, #196]	; (9000a4d0 <BSP_TS_Init+0xf8>)
9000a40a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a40c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000a410:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a412:	4a30      	ldr	r2, [pc, #192]	; (9000a4d4 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a414:	4b30      	ldr	r3, [pc, #192]	; (9000a4d8 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a416:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a418:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a41a:	4a30      	ldr	r2, [pc, #192]	; (9000a4dc <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000a41c:	4b30      	ldr	r3, [pc, #192]	; (9000a4e0 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000a41e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a420:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a422:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000a424:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a426:	f7ff f93f 	bl	900096a8 <FT5336_RegisterBusIO>
9000a42a:	2800      	cmp	r0, #0
9000a42c:	d14b      	bne.n	9000a4c6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000a42e:	a901      	add	r1, sp, #4
9000a430:	4628      	mov	r0, r5
9000a432:	f7ff f82f 	bl	90009494 <FT5336_ReadID>
9000a436:	2800      	cmp	r0, #0
9000a438:	d145      	bne.n	9000a4c6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000a43a:	9b01      	ldr	r3, [sp, #4]
9000a43c:	2b51      	cmp	r3, #81	; 0x51
9000a43e:	d142      	bne.n	9000a4c6 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a440:	4b28      	ldr	r3, [pc, #160]	; (9000a4e4 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a442:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
9000a444:	4f28      	ldr	r7, [pc, #160]	; (9000a4e8 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a446:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 9000a4f0 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000a44a:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a44c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a450:	681b      	ldr	r3, [r3, #0]
9000a452:	4798      	blx	r3
9000a454:	4606      	mov	r6, r0
9000a456:	2800      	cmp	r0, #0
9000a458:	d135      	bne.n	9000a4c6 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a45a:	4d24      	ldr	r5, [pc, #144]	; (9000a4ec <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a45c:	a902      	add	r1, sp, #8
9000a45e:	6838      	ldr	r0, [r7, #0]
9000a460:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a464:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a468:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a46a:	e9c5 7200 	strd	r7, r2, [r5]
9000a46e:	68a2      	ldr	r2, [r4, #8]
9000a470:	60aa      	str	r2, [r5, #8]
9000a472:	68e2      	ldr	r2, [r4, #12]
9000a474:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a476:	4798      	blx	r3
9000a478:	2800      	cmp	r0, #0
9000a47a:	db18      	blt.n	9000a4ae <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
9000a47c:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000a480:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a484:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a486:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a48a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a48c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a48e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a490:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a492:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a496:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a49a:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a49c:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a49e:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a4a0:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a4a2:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a4a4:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000a4a6:	4630      	mov	r0, r6
9000a4a8:	b008      	add	sp, #32
9000a4aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000a4ae:	f06f 0604 	mvn.w	r6, #4
}
9000a4b2:	4630      	mov	r0, r6
9000a4b4:	b008      	add	sp, #32
9000a4b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
9000a4ba:	f06f 0601 	mvn.w	r6, #1
}
9000a4be:	4630      	mov	r0, r6
9000a4c0:	b008      	add	sp, #32
9000a4c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000a4c6:	f04f 36ff 	mov.w	r6, #4294967295
9000a4ca:	e7ec      	b.n	9000a4a6 <BSP_TS_Init+0xce>
9000a4cc:	9000994d 	.word	0x9000994d
9000a4d0:	24020658 	.word	0x24020658
9000a4d4:	900098b9 	.word	0x900098b9
9000a4d8:	9000a125 	.word	0x9000a125
9000a4dc:	9000a0e9 	.word	0x9000a0e9
9000a4e0:	9000a161 	.word	0x9000a161
9000a4e4:	24000040 	.word	0x24000040
9000a4e8:	24020680 	.word	0x24020680
9000a4ec:	24020684 	.word	0x24020684
9000a4f0:	240206c4 	.word	0x240206c4

9000a4f4 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
9000a4f4:	2800      	cmp	r0, #0
9000a4f6:	d157      	bne.n	9000a5a8 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a4f8:	4b2d      	ldr	r3, [pc, #180]	; (9000a5b0 <BSP_TS_GetState+0xbc>)
9000a4fa:	4a2e      	ldr	r2, [pc, #184]	; (9000a5b4 <BSP_TS_GetState+0xc0>)
9000a4fc:	681b      	ldr	r3, [r3, #0]
9000a4fe:	6810      	ldr	r0, [r2, #0]
9000a500:	691b      	ldr	r3, [r3, #16]
{
9000a502:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a504:	b085      	sub	sp, #20
9000a506:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a508:	a901      	add	r1, sp, #4
9000a50a:	4798      	blx	r3
9000a50c:	2800      	cmp	r0, #0
9000a50e:	db41      	blt.n	9000a594 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
9000a510:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a512:	4b29      	ldr	r3, [pc, #164]	; (9000a5b8 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
9000a514:	b93d      	cbnz	r5, 9000a526 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
9000a516:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
9000a518:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a51a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
9000a51c:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a51e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000a522:	b005      	add	sp, #20
9000a524:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a526:	6898      	ldr	r0, [r3, #8]
9000a528:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
9000a52a:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a52e:	d435      	bmi.n	9000a59c <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000a530:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
9000a532:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a534:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000a536:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a53a:	bf1c      	itt	ne
9000a53c:	f106 32ff 	addne.w	r2, r6, #4294967295
9000a540:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000a544:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000a548:	6958      	ldr	r0, [r3, #20]
9000a54a:	bf18      	it	ne
9000a54c:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a54e:	681f      	ldr	r7, [r3, #0]
9000a550:	fb07 f202 	mul.w	r2, r7, r2
9000a554:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a558:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000a55a:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a55c:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000a560:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000a562:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a564:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a566:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a568:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a56c:	bf8c      	ite	hi
9000a56e:	1b90      	subhi	r0, r2, r6
9000a570:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a572:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a574:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a576:	bf8c      	ite	hi
9000a578:	1b4f      	subhi	r7, r1, r5
9000a57a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a57c:	42b8      	cmp	r0, r7
9000a57e:	bf38      	it	cc
9000a580:	4638      	movcc	r0, r7
9000a582:	68df      	ldr	r7, [r3, #12]
9000a584:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000a586:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a58a:	d20a      	bcs.n	9000a5a2 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
9000a58c:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
9000a58e:	62d9      	str	r1, [r3, #44]	; 0x2c
}
9000a590:	b005      	add	sp, #20
9000a592:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000a594:	f06f 0004 	mvn.w	r0, #4
}
9000a598:	b005      	add	sp, #20
9000a59a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
9000a59c:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
9000a59e:	463a      	mov	r2, r7
9000a5a0:	e7c8      	b.n	9000a534 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a5a2:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000a5a6:	e7bc      	b.n	9000a522 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
9000a5a8:	f06f 0001 	mvn.w	r0, #1
}
9000a5ac:	4770      	bx	lr
9000a5ae:	bf00      	nop
9000a5b0:	240206c4 	.word	0x240206c4
9000a5b4:	24020680 	.word	0x24020680
9000a5b8:	24020684 	.word	0x24020684

9000a5bc <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000a5bc:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a5be:	4c19      	ldr	r4, [pc, #100]	; (9000a624 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
9000a5c0:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000a5c2:	4b19      	ldr	r3, [pc, #100]	; (9000a628 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a5c4:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000a5c8:	4818      	ldr	r0, [pc, #96]	; (9000a62c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a5ca:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000a5ce:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
9000a5d2:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a5d4:	4c16      	ldr	r4, [pc, #88]	; (9000a630 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000a5d6:	f041 0101 	orr.w	r1, r1, #1
9000a5da:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
9000a5dc:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
9000a5de:	6819      	ldr	r1, [r3, #0]
9000a5e0:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a5e2:	4914      	ldr	r1, [pc, #80]	; (9000a634 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000a5e4:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000a5e6:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000a5e8:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000a5ea:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
9000a5ec:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
9000a5ee:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
9000a5f0:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
9000a5f2:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
9000a5f4:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
9000a5f6:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000a5f8:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
9000a5fa:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
9000a5fc:	6818      	ldr	r0, [r3, #0]
9000a5fe:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
9000a602:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
9000a604:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a606:	6823      	ldr	r3, [r4, #0]
9000a608:	4019      	ands	r1, r3
9000a60a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000a60e:	d203      	bcs.n	9000a618 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000a610:	4b09      	ldr	r3, [pc, #36]	; (9000a638 <SystemInit+0x7c>)
9000a612:	2201      	movs	r2, #1
9000a614:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a618:	4a08      	ldr	r2, [pc, #32]	; (9000a63c <SystemInit+0x80>)
9000a61a:	4b02      	ldr	r3, [pc, #8]	; (9000a624 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000a61c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a620:	609a      	str	r2, [r3, #8]
}
9000a622:	4770      	bx	lr
9000a624:	e000ed00 	.word	0xe000ed00
9000a628:	58024400 	.word	0x58024400
9000a62c:	eaf6ed7f 	.word	0xeaf6ed7f
9000a630:	5c001000 	.word	0x5c001000
9000a634:	ffff0000 	.word	0xffff0000
9000a638:	51008000 	.word	0x51008000
9000a63c:	90000000 	.word	0x90000000

9000a640 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000a640:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a642:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a644:	4c12      	ldr	r4, [pc, #72]	; (9000a690 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a646:	f000 f843 	bl	9000a6d0 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a64a:	f003 fc65 	bl	9000df18 <HAL_RCC_GetSysClockFreq>
9000a64e:	4b11      	ldr	r3, [pc, #68]	; (9000a694 <HAL_Init+0x54>)
9000a650:	4911      	ldr	r1, [pc, #68]	; (9000a698 <HAL_Init+0x58>)
9000a652:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a654:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a656:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a65a:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a65e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a660:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a662:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000a666:	490d      	ldr	r1, [pc, #52]	; (9000a69c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a668:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a66c:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a66e:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000a672:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a674:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a676:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a678:	f7f8 feac 	bl	900033d4 <HAL_InitTick>
9000a67c:	b110      	cbz	r0, 9000a684 <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000a67e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000a680:	4620      	mov	r0, r4
9000a682:	bd10      	pop	{r4, pc}
9000a684:	4604      	mov	r4, r0
  HAL_MspInit();
9000a686:	f7f8 fc63 	bl	90002f50 <HAL_MspInit>
}
9000a68a:	4620      	mov	r0, r4
9000a68c:	bd10      	pop	{r4, pc}
9000a68e:	bf00      	nop
9000a690:	24000074 	.word	0x24000074
9000a694:	58024400 	.word	0x58024400
9000a698:	9002d144 	.word	0x9002d144
9000a69c:	24000070 	.word	0x24000070

9000a6a0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000a6a0:	4a03      	ldr	r2, [pc, #12]	; (9000a6b0 <HAL_IncTick+0x10>)
9000a6a2:	4b04      	ldr	r3, [pc, #16]	; (9000a6b4 <HAL_IncTick+0x14>)
9000a6a4:	6811      	ldr	r1, [r2, #0]
9000a6a6:	781b      	ldrb	r3, [r3, #0]
9000a6a8:	440b      	add	r3, r1
9000a6aa:	6013      	str	r3, [r2, #0]
}
9000a6ac:	4770      	bx	lr
9000a6ae:	bf00      	nop
9000a6b0:	240206c8 	.word	0x240206c8
9000a6b4:	24000078 	.word	0x24000078

9000a6b8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9000a6b8:	4b01      	ldr	r3, [pc, #4]	; (9000a6c0 <HAL_GetTick+0x8>)
9000a6ba:	6818      	ldr	r0, [r3, #0]
}
9000a6bc:	4770      	bx	lr
9000a6be:	bf00      	nop
9000a6c0:	240206c8 	.word	0x240206c8

9000a6c4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000a6c4:	4b01      	ldr	r3, [pc, #4]	; (9000a6cc <HAL_GetREVID+0x8>)
9000a6c6:	6818      	ldr	r0, [r3, #0]
}
9000a6c8:	0c00      	lsrs	r0, r0, #16
9000a6ca:	4770      	bx	lr
9000a6cc:	5c001000 	.word	0x5c001000

9000a6d0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a6d0:	4906      	ldr	r1, [pc, #24]	; (9000a6ec <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a6d2:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a6d6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000a6d8:	4b05      	ldr	r3, [pc, #20]	; (9000a6f0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a6da:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a6dc:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a6e0:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000a6e4:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000a6e6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000a6e8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000a6ea:	4770      	bx	lr
9000a6ec:	e000ed00 	.word	0xe000ed00
9000a6f0:	05fa0000 	.word	0x05fa0000

9000a6f4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000a6f4:	4b1b      	ldr	r3, [pc, #108]	; (9000a764 <HAL_NVIC_SetPriority+0x70>)
9000a6f6:	68db      	ldr	r3, [r3, #12]
9000a6f8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000a6fc:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a6fe:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a702:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a706:	f1be 0f04 	cmp.w	lr, #4
9000a70a:	bf28      	it	cs
9000a70c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a710:	f1bc 0f06 	cmp.w	ip, #6
9000a714:	d91a      	bls.n	9000a74c <HAL_NVIC_SetPriority+0x58>
9000a716:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000a718:	f04f 3cff 	mov.w	ip, #4294967295
9000a71c:	fa0c fc03 	lsl.w	ip, ip, r3
9000a720:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a724:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000a728:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a72a:	fa0c fc0e 	lsl.w	ip, ip, lr
9000a72e:	ea21 010c 	bic.w	r1, r1, ip
9000a732:	fa01 f103 	lsl.w	r1, r1, r3
9000a736:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000a73a:	db0a      	blt.n	9000a752 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a73c:	0109      	lsls	r1, r1, #4
9000a73e:	4b0a      	ldr	r3, [pc, #40]	; (9000a768 <HAL_NVIC_SetPriority+0x74>)
9000a740:	b2c9      	uxtb	r1, r1
9000a742:	4403      	add	r3, r0
9000a744:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000a748:	f85d fb04 	ldr.w	pc, [sp], #4
9000a74c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a74e:	4613      	mov	r3, r2
9000a750:	e7e8      	b.n	9000a724 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a752:	f000 000f 	and.w	r0, r0, #15
9000a756:	0109      	lsls	r1, r1, #4
9000a758:	4b04      	ldr	r3, [pc, #16]	; (9000a76c <HAL_NVIC_SetPriority+0x78>)
9000a75a:	b2c9      	uxtb	r1, r1
9000a75c:	4403      	add	r3, r0
9000a75e:	7619      	strb	r1, [r3, #24]
9000a760:	f85d fb04 	ldr.w	pc, [sp], #4
9000a764:	e000ed00 	.word	0xe000ed00
9000a768:	e000e100 	.word	0xe000e100
9000a76c:	e000ecfc 	.word	0xe000ecfc

9000a770 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a770:	2800      	cmp	r0, #0
9000a772:	db07      	blt.n	9000a784 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a774:	2301      	movs	r3, #1
9000a776:	f000 011f 	and.w	r1, r0, #31
9000a77a:	4a03      	ldr	r2, [pc, #12]	; (9000a788 <HAL_NVIC_EnableIRQ+0x18>)
9000a77c:	0940      	lsrs	r0, r0, #5
9000a77e:	408b      	lsls	r3, r1
9000a780:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000a784:	4770      	bx	lr
9000a786:	bf00      	nop
9000a788:	e000e100 	.word	0xe000e100

9000a78c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a78c:	2800      	cmp	r0, #0
9000a78e:	db0c      	blt.n	9000a7aa <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a790:	0943      	lsrs	r3, r0, #5
9000a792:	2201      	movs	r2, #1
9000a794:	f000 001f 	and.w	r0, r0, #31
9000a798:	4904      	ldr	r1, [pc, #16]	; (9000a7ac <HAL_NVIC_DisableIRQ+0x20>)
9000a79a:	3320      	adds	r3, #32
9000a79c:	4082      	lsls	r2, r0
9000a79e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000a7a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a7a6:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000a7aa:	4770      	bx	lr
9000a7ac:	e000e100 	.word	0xe000e100

9000a7b0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000a7b0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a7b4:	4b04      	ldr	r3, [pc, #16]	; (9000a7c8 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000a7b6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a7b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a7ba:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000a7be:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
9000a7c0:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000a7c4:	4770      	bx	lr
9000a7c6:	bf00      	nop
9000a7c8:	e000ed00 	.word	0xe000ed00

9000a7cc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000a7cc:	4b06      	ldr	r3, [pc, #24]	; (9000a7e8 <HAL_MPU_Enable+0x1c>)
9000a7ce:	f040 0001 	orr.w	r0, r0, #1
9000a7d2:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000a7d6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a7d8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000a7dc:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000a7de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a7e2:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000a7e6:	4770      	bx	lr
9000a7e8:	e000ed00 	.word	0xe000ed00

9000a7ec <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000a7ec:	4a17      	ldr	r2, [pc, #92]	; (9000a84c <HAL_MPU_ConfigRegion+0x60>)
9000a7ee:	7843      	ldrb	r3, [r0, #1]
9000a7f0:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
9000a7f4:	7801      	ldrb	r1, [r0, #0]
9000a7f6:	b321      	cbz	r1, 9000a842 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000a7f8:	6843      	ldr	r3, [r0, #4]
{
9000a7fa:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000a7fc:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a800:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a802:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a806:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000a808:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a80c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000a810:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a814:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000a816:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a818:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000a81c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a820:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000a824:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a828:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000a82c:	7a01      	ldrb	r1, [r0, #8]
9000a82e:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000a832:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000a836:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a83a:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000a83e:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000a842:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000a846:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000a84a:	4770      	bx	lr
9000a84c:	e000ed00 	.word	0xe000ed00

9000a850 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000a850:	2800      	cmp	r0, #0
9000a852:	d036      	beq.n	9000a8c2 <HAL_CRC_Init+0x72>
{
9000a854:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000a856:	7f43      	ldrb	r3, [r0, #29]
9000a858:	4604      	mov	r4, r0
9000a85a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a85e:	b363      	cbz	r3, 9000a8ba <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000a860:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a862:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000a864:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a866:	b9f3      	cbnz	r3, 9000a8a6 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000a868:	6823      	ldr	r3, [r4, #0]
9000a86a:	4a17      	ldr	r2, [pc, #92]	; (9000a8c8 <HAL_CRC_Init+0x78>)
9000a86c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000a86e:	689a      	ldr	r2, [r3, #8]
9000a870:	f022 0218 	bic.w	r2, r2, #24
9000a874:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000a876:	7962      	ldrb	r2, [r4, #5]
9000a878:	b18a      	cbz	r2, 9000a89e <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000a87a:	6922      	ldr	r2, [r4, #16]
9000a87c:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a87e:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a880:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a884:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9000a888:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000a88a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a88c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a88e:	689a      	ldr	r2, [r3, #8]
9000a890:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000a894:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000a896:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a898:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000a89a:	7761      	strb	r1, [r4, #29]
}
9000a89c:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a89e:	f04f 32ff 	mov.w	r2, #4294967295
9000a8a2:	611a      	str	r2, [r3, #16]
9000a8a4:	e7eb      	b.n	9000a87e <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000a8a6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000a8aa:	4620      	mov	r0, r4
9000a8ac:	f000 f80e 	bl	9000a8cc <HAL_CRCEx_Polynomial_Set>
9000a8b0:	b908      	cbnz	r0, 9000a8b6 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a8b2:	6823      	ldr	r3, [r4, #0]
9000a8b4:	e7df      	b.n	9000a876 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000a8b6:	2001      	movs	r0, #1
}
9000a8b8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000a8ba:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000a8bc:	f7f8 fb62 	bl	90002f84 <HAL_CRC_MspInit>
9000a8c0:	e7ce      	b.n	9000a860 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000a8c2:	2001      	movs	r0, #1
}
9000a8c4:	4770      	bx	lr
9000a8c6:	bf00      	nop
9000a8c8:	04c11db7 	.word	0x04c11db7

9000a8cc <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000a8cc:	07cb      	lsls	r3, r1, #31
9000a8ce:	d51a      	bpl.n	9000a906 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a8d0:	231e      	movs	r3, #30
{
9000a8d2:	b410      	push	{r4}
9000a8d4:	e001      	b.n	9000a8da <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a8d6:	3b01      	subs	r3, #1
9000a8d8:	d317      	bcc.n	9000a90a <HAL_CRCEx_Polynomial_Set+0x3e>
9000a8da:	fa21 fc03 	lsr.w	ip, r1, r3
9000a8de:	f01c 0f01 	tst.w	ip, #1
9000a8e2:	d0f8      	beq.n	9000a8d6 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000a8e4:	2a18      	cmp	r2, #24
9000a8e6:	d811      	bhi.n	9000a90c <HAL_CRCEx_Polynomial_Set+0x40>
9000a8e8:	e8df f002 	tbb	[pc, r2]
9000a8ec:	10101016 	.word	0x10101016
9000a8f0:	10101010 	.word	0x10101010
9000a8f4:	10101024 	.word	0x10101024
9000a8f8:	10101010 	.word	0x10101010
9000a8fc:	10101021 	.word	0x10101021
9000a900:	10101010 	.word	0x10101010
9000a904:	14          	.byte	0x14
9000a905:	00          	.byte	0x00
    status =  HAL_ERROR;
9000a906:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000a908:	4770      	bx	lr
    switch (PolyLength)
9000a90a:	b12a      	cbz	r2, 9000a918 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000a90c:	2001      	movs	r0, #1
}
9000a90e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a912:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000a914:	2b06      	cmp	r3, #6
9000a916:	d8f9      	bhi.n	9000a90c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a918:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a91a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000a91c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000a91e:	68a3      	ldr	r3, [r4, #8]
9000a920:	f023 0318 	bic.w	r3, r3, #24
9000a924:	4313      	orrs	r3, r2
9000a926:	60a3      	str	r3, [r4, #8]
}
9000a928:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a92c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000a92e:	2b07      	cmp	r3, #7
9000a930:	d9f2      	bls.n	9000a918 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a932:	e7eb      	b.n	9000a90c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000a934:	2b0f      	cmp	r3, #15
9000a936:	d9ef      	bls.n	9000a918 <HAL_CRCEx_Polynomial_Set+0x4c>
9000a938:	e7e8      	b.n	9000a90c <HAL_CRCEx_Polynomial_Set+0x40>
9000a93a:	bf00      	nop

9000a93c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000a93c:	2800      	cmp	r0, #0
9000a93e:	d035      	beq.n	9000a9ac <HAL_DMA2D_Init+0x70>
{
9000a940:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000a942:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000a946:	4604      	mov	r4, r0
9000a948:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a94c:	b34b      	cbz	r3, 9000a9a2 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a94e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a950:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a952:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000a954:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a958:	69e1      	ldr	r1, [r4, #28]
9000a95a:	681d      	ldr	r5, [r3, #0]
9000a95c:	4814      	ldr	r0, [pc, #80]	; (9000a9b0 <HAL_DMA2D_Init+0x74>)
9000a95e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a960:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a962:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a964:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a966:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a968:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000a96a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a96c:	4302      	orrs	r2, r0
9000a96e:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a970:	4810      	ldr	r0, [pc, #64]	; (9000a9b4 <HAL_DMA2D_Init+0x78>)
9000a972:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a974:	4910      	ldr	r1, [pc, #64]	; (9000a9b8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000a976:	4302      	orrs	r2, r0
9000a978:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a97a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000a97c:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a97e:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a982:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a984:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000a986:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a988:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000a98a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a98e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000a990:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000a994:	430a      	orrs	r2, r1
9000a996:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a998:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000a99a:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000a99c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
9000a9a0:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000a9a2:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000a9a6:	f7f8 fb05 	bl	90002fb4 <HAL_DMA2D_MspInit>
9000a9aa:	e7d0      	b.n	9000a94e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000a9ac:	2001      	movs	r0, #1
}
9000a9ae:	4770      	bx	lr
9000a9b0:	fff8ffbf 	.word	0xfff8ffbf
9000a9b4:	fffffef8 	.word	0xfffffef8
9000a9b8:	ffff0000 	.word	0xffff0000

9000a9bc <HAL_DMA2D_LineEventCallback>:
9000a9bc:	4770      	bx	lr
9000a9be:	bf00      	nop

9000a9c0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
9000a9c0:	4770      	bx	lr
9000a9c2:	bf00      	nop

9000a9c4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a9c4:	6803      	ldr	r3, [r0, #0]
{
9000a9c6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000a9c8:	685d      	ldr	r5, [r3, #4]
{
9000a9ca:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000a9cc:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000a9ce:	07ea      	lsls	r2, r5, #31
9000a9d0:	d501      	bpl.n	9000a9d6 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
9000a9d2:	05f1      	lsls	r1, r6, #23
9000a9d4:	d456      	bmi.n	9000aa84 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000a9d6:	06aa      	lsls	r2, r5, #26
9000a9d8:	d501      	bpl.n	9000a9de <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
9000a9da:	04b3      	lsls	r3, r6, #18
9000a9dc:	d43b      	bmi.n	9000aa56 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000a9de:	0728      	lsls	r0, r5, #28
9000a9e0:	d501      	bpl.n	9000a9e6 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000a9e2:	0531      	lsls	r1, r6, #20
9000a9e4:	d421      	bmi.n	9000aa2a <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000a9e6:	076a      	lsls	r2, r5, #29
9000a9e8:	d501      	bpl.n	9000a9ee <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
9000a9ea:	0573      	lsls	r3, r6, #21
9000a9ec:	d472      	bmi.n	9000aad4 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000a9ee:	07a8      	lsls	r0, r5, #30
9000a9f0:	d501      	bpl.n	9000a9f6 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
9000a9f2:	05b1      	lsls	r1, r6, #22
9000a9f4:	d404      	bmi.n	9000aa00 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000a9f6:	06ea      	lsls	r2, r5, #27
9000a9f8:	d501      	bpl.n	9000a9fe <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000a9fa:	04f3      	lsls	r3, r6, #19
9000a9fc:	d457      	bmi.n	9000aaae <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000a9fe:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000aa00:	6823      	ldr	r3, [r4, #0]
9000aa02:	681a      	ldr	r2, [r3, #0]
9000aa04:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000aa08:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000aa0a:	2202      	movs	r2, #2
9000aa0c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000aa0e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000aa10:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000aa12:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000aa14:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000aa16:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000aa1a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000aa1e:	6a23      	ldr	r3, [r4, #32]
9000aa20:	2b00      	cmp	r3, #0
9000aa22:	d0e8      	beq.n	9000a9f6 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000aa24:	4620      	mov	r0, r4
9000aa26:	4798      	blx	r3
9000aa28:	e7e5      	b.n	9000a9f6 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000aa2a:	6823      	ldr	r3, [r4, #0]
9000aa2c:	681a      	ldr	r2, [r3, #0]
9000aa2e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000aa32:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000aa34:	2208      	movs	r2, #8
9000aa36:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aa38:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000aa3a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000aa3c:	4313      	orrs	r3, r2
9000aa3e:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aa40:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000aa44:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000aa46:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000aa48:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000aa4c:	2b00      	cmp	r3, #0
9000aa4e:	d0ca      	beq.n	9000a9e6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000aa50:	4620      	mov	r0, r4
9000aa52:	4798      	blx	r3
9000aa54:	e7c7      	b.n	9000a9e6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000aa56:	6823      	ldr	r3, [r4, #0]
9000aa58:	681a      	ldr	r2, [r3, #0]
9000aa5a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000aa5e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000aa60:	2220      	movs	r2, #32
9000aa62:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aa64:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000aa66:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000aa68:	f043 0302 	orr.w	r3, r3, #2
9000aa6c:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aa6e:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000aa72:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000aa74:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000aa76:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000aa7a:	2b00      	cmp	r3, #0
9000aa7c:	d0af      	beq.n	9000a9de <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000aa7e:	4620      	mov	r0, r4
9000aa80:	4798      	blx	r3
9000aa82:	e7ac      	b.n	9000a9de <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000aa84:	681a      	ldr	r2, [r3, #0]
9000aa86:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000aa8a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000aa8c:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000aa8e:	f042 0201 	orr.w	r2, r2, #1
9000aa92:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000aa94:	2201      	movs	r2, #1
9000aa96:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aa98:	2304      	movs	r3, #4
9000aa9a:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000aa9e:	2300      	movs	r3, #0
9000aaa0:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000aaa4:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000aaa6:	2b00      	cmp	r3, #0
9000aaa8:	d095      	beq.n	9000a9d6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000aaaa:	4798      	blx	r3
9000aaac:	e793      	b.n	9000a9d6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000aaae:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000aab0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000aab2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000aab4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000aab6:	681a      	ldr	r2, [r3, #0]
9000aab8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000aabc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000aabe:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000aac0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000aac2:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000aac4:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000aac8:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000aaca:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000aace:	f7ff ff77 	bl	9000a9c0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000aad2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000aad4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000aad6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000aad8:	681a      	ldr	r2, [r3, #0]
9000aada:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000aade:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000aae0:	2204      	movs	r2, #4
9000aae2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000aae4:	f7ff ff6a 	bl	9000a9bc <HAL_DMA2D_LineEventCallback>
9000aae8:	e781      	b.n	9000a9ee <HAL_DMA2D_IRQHandler+0x2a>
9000aaea:	bf00      	nop

9000aaec <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000aaec:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000aaf0:	2a01      	cmp	r2, #1
9000aaf2:	d065      	beq.n	9000abc0 <HAL_DMA2D_ConfigLayer+0xd4>
9000aaf4:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000aaf6:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000aafa:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000aafc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000ab00:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000ab02:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000ab04:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
9000ab08:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ab0c:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ab0e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000ab10:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ab12:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ab14:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ab18:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000ab1c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ab1e:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ab22:	ea42 0204 	orr.w	r2, r2, r4
9000ab26:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ab2a:	d922      	bls.n	9000ab72 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000ab2c:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000ab2e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000ab32:	b981      	cbnz	r1, 9000ab56 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ab34:	6818      	ldr	r0, [r3, #0]
9000ab36:	4923      	ldr	r1, [pc, #140]	; (9000abc4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000ab38:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ab3a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ab3c:	4029      	ands	r1, r5
9000ab3e:	4311      	orrs	r1, r2
9000ab40:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ab42:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000ab44:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000ab46:	2101      	movs	r1, #1

  return HAL_OK;
9000ab48:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000ab4a:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000ab4e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000ab52:	bc70      	pop	{r4, r5, r6}
9000ab54:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000ab56:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ab58:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000ab5a:	d129      	bne.n	9000abb0 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ab5c:	69e5      	ldr	r5, [r4, #28]
9000ab5e:	491a      	ldr	r1, [pc, #104]	; (9000abc8 <HAL_DMA2D_ConfigLayer+0xdc>)
9000ab60:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000ab62:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ab64:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ab66:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000ab6a:	4311      	orrs	r1, r2
9000ab6c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ab6e:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ab70:	e7e8      	b.n	9000ab44 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000ab72:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000ab74:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000ab78:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000ab7a:	b961      	cbnz	r1, 9000ab96 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ab7c:	6819      	ldr	r1, [r3, #0]
9000ab7e:	4a11      	ldr	r2, [pc, #68]	; (9000abc4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000ab80:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ab82:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ab84:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ab86:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ab88:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ab8c:	4322      	orrs	r2, r4
9000ab8e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ab90:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ab92:	6288      	str	r0, [r1, #40]	; 0x28
9000ab94:	e7d6      	b.n	9000ab44 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ab96:	6819      	ldr	r1, [r3, #0]
9000ab98:	4a0a      	ldr	r2, [pc, #40]	; (9000abc4 <HAL_DMA2D_ConfigLayer+0xd8>)
9000ab9a:	69cd      	ldr	r5, [r1, #28]
9000ab9c:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ab9e:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000aba0:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000aba2:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000aba4:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000aba8:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000abaa:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000abac:	620c      	str	r4, [r1, #32]
9000abae:	e7c9      	b.n	9000ab44 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000abb0:	69e5      	ldr	r5, [r4, #28]
9000abb2:	4904      	ldr	r1, [pc, #16]	; (9000abc4 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000abb4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000abb6:	4029      	ands	r1, r5
9000abb8:	4311      	orrs	r1, r2
9000abba:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000abbc:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000abbe:	e7c1      	b.n	9000ab44 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000abc0:	2002      	movs	r0, #2
}
9000abc2:	4770      	bx	lr
9000abc4:	00ccfff0 	.word	0x00ccfff0
9000abc8:	00c0fff0 	.word	0x00c0fff0

9000abcc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000abcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000abd0:	680c      	ldr	r4, [r1, #0]
{
9000abd2:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000abd4:	2c00      	cmp	r4, #0
9000abd6:	f000 80a7 	beq.w	9000ad28 <HAL_GPIO_Init+0x15c>
9000abda:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000abde:	4f8a      	ldr	r7, [pc, #552]	; (9000ae08 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000abe0:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000abe2:	2201      	movs	r2, #1
9000abe4:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
9000abe6:	ea12 0e04 	ands.w	lr, r2, r4
9000abea:	f000 8096 	beq.w	9000ad1a <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000abee:	684d      	ldr	r5, [r1, #4]
9000abf0:	f005 0903 	and.w	r9, r5, #3
9000abf4:	f109 36ff 	add.w	r6, r9, #4294967295
9000abf8:	2e01      	cmp	r6, #1
9000abfa:	f240 8098 	bls.w	9000ad2e <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000abfe:	f1b9 0f03 	cmp.w	r9, #3
9000ac02:	f040 80d2 	bne.w	9000adaa <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ac06:	fa09 f20c 	lsl.w	r2, r9, ip
9000ac0a:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000ac0e:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ac10:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000ac14:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000ac18:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000ac1c:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ac1e:	d07c      	beq.n	9000ad1a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ac20:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000ac24:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ac28:	f003 0903 	and.w	r9, r3, #3
9000ac2c:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ac2e:	f042 0202 	orr.w	r2, r2, #2
9000ac32:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ac36:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ac3a:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000ac3e:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000ac42:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ac46:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ac4a:	f002 0202 	and.w	r2, r2, #2
9000ac4e:	9201      	str	r2, [sp, #4]
9000ac50:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000ac52:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ac56:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000ac5a:	4e6c      	ldr	r6, [pc, #432]	; (9000ae0c <HAL_GPIO_Init+0x240>)
9000ac5c:	42b0      	cmp	r0, r6
9000ac5e:	d028      	beq.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000ac60:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000ac64:	42b0      	cmp	r0, r6
9000ac66:	f000 80ac 	beq.w	9000adc2 <HAL_GPIO_Init+0x1f6>
9000ac6a:	4e69      	ldr	r6, [pc, #420]	; (9000ae10 <HAL_GPIO_Init+0x244>)
9000ac6c:	42b0      	cmp	r0, r6
9000ac6e:	f000 80ad 	beq.w	9000adcc <HAL_GPIO_Init+0x200>
9000ac72:	4e68      	ldr	r6, [pc, #416]	; (9000ae14 <HAL_GPIO_Init+0x248>)
9000ac74:	42b0      	cmp	r0, r6
9000ac76:	f000 809f 	beq.w	9000adb8 <HAL_GPIO_Init+0x1ec>
9000ac7a:	4e67      	ldr	r6, [pc, #412]	; (9000ae18 <HAL_GPIO_Init+0x24c>)
9000ac7c:	42b0      	cmp	r0, r6
9000ac7e:	f000 80af 	beq.w	9000ade0 <HAL_GPIO_Init+0x214>
9000ac82:	4e66      	ldr	r6, [pc, #408]	; (9000ae1c <HAL_GPIO_Init+0x250>)
9000ac84:	42b0      	cmp	r0, r6
9000ac86:	f000 80b0 	beq.w	9000adea <HAL_GPIO_Init+0x21e>
9000ac8a:	4e65      	ldr	r6, [pc, #404]	; (9000ae20 <HAL_GPIO_Init+0x254>)
9000ac8c:	42b0      	cmp	r0, r6
9000ac8e:	f000 80a2 	beq.w	9000add6 <HAL_GPIO_Init+0x20a>
9000ac92:	4e64      	ldr	r6, [pc, #400]	; (9000ae24 <HAL_GPIO_Init+0x258>)
9000ac94:	42b0      	cmp	r0, r6
9000ac96:	f000 80ad 	beq.w	9000adf4 <HAL_GPIO_Init+0x228>
9000ac9a:	4e63      	ldr	r6, [pc, #396]	; (9000ae28 <HAL_GPIO_Init+0x25c>)
9000ac9c:	42b0      	cmp	r0, r6
9000ac9e:	f000 80ae 	beq.w	9000adfe <HAL_GPIO_Init+0x232>
9000aca2:	4e62      	ldr	r6, [pc, #392]	; (9000ae2c <HAL_GPIO_Init+0x260>)
9000aca4:	42b0      	cmp	r0, r6
9000aca6:	bf0c      	ite	eq
9000aca8:	2609      	moveq	r6, #9
9000acaa:	260a      	movne	r6, #10
9000acac:	fa06 f609 	lsl.w	r6, r6, r9
9000acb0:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000acb2:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000acb6:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000acba:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
9000acbe:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000acc2:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000acc4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000acc8:	bf0c      	ite	eq
9000acca:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000accc:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000acd0:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
9000acd4:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
9000acd8:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000acdc:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000ace0:	bf0c      	ite	eq
9000ace2:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000ace4:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000ace8:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
9000acec:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000acf0:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000acf4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000acf8:	bf0c      	ite	eq
9000acfa:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000acfc:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000ad00:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000ad02:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
9000ad06:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000ad0a:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000ad0e:	bf54      	ite	pl
9000ad10:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000ad12:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000ad16:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000ad1a:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000ad1c:	f10c 0c02 	add.w	ip, ip, #2
9000ad20:	fa34 f203 	lsrs.w	r2, r4, r3
9000ad24:	f47f af5d 	bne.w	9000abe2 <HAL_GPIO_Init+0x16>
  }
}
9000ad28:	b003      	add	sp, #12
9000ad2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ad2e:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000ad32:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ad34:	fa08 f80c 	lsl.w	r8, r8, ip
9000ad38:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000ad3c:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ad3e:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000ad42:	fa06 f60c 	lsl.w	r6, r6, ip
9000ad46:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000ad4a:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ad4c:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000ad50:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ad54:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000ad56:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ad5a:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000ad5c:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000ad5e:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000ad60:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000ad64:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000ad66:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000ad6a:	fa06 f60c 	lsl.w	r6, r6, ip
9000ad6e:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000ad72:	fa09 f20c 	lsl.w	r2, r9, ip
9000ad76:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000ad78:	f47f af49 	bne.w	9000ac0e <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
9000ad7c:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000ad80:	f003 0b07 	and.w	fp, r3, #7
9000ad84:	260f      	movs	r6, #15
9000ad86:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000ad8a:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000ad8e:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000ad92:	fa06 f60b 	lsl.w	r6, r6, fp
9000ad96:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000ad9a:	690e      	ldr	r6, [r1, #16]
9000ad9c:	fa06 f60b 	lsl.w	r6, r6, fp
9000ada0:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
9000ada4:	f8c9 6020 	str.w	r6, [r9, #32]
9000ada8:	e731      	b.n	9000ac0e <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000adaa:	f04f 0803 	mov.w	r8, #3
9000adae:	fa08 f80c 	lsl.w	r8, r8, ip
9000adb2:	ea6f 0808 	mvn.w	r8, r8
9000adb6:	e7d2      	b.n	9000ad5e <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000adb8:	2603      	movs	r6, #3
9000adba:	fa06 f609 	lsl.w	r6, r6, r9
9000adbe:	4332      	orrs	r2, r6
9000adc0:	e777      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000adc2:	2601      	movs	r6, #1
9000adc4:	fa06 f609 	lsl.w	r6, r6, r9
9000adc8:	4332      	orrs	r2, r6
9000adca:	e772      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000adcc:	2602      	movs	r6, #2
9000adce:	fa06 f609 	lsl.w	r6, r6, r9
9000add2:	4332      	orrs	r2, r6
9000add4:	e76d      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000add6:	2606      	movs	r6, #6
9000add8:	fa06 f609 	lsl.w	r6, r6, r9
9000addc:	4332      	orrs	r2, r6
9000adde:	e768      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000ade0:	2604      	movs	r6, #4
9000ade2:	fa06 f609 	lsl.w	r6, r6, r9
9000ade6:	4332      	orrs	r2, r6
9000ade8:	e763      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000adea:	2605      	movs	r6, #5
9000adec:	fa06 f609 	lsl.w	r6, r6, r9
9000adf0:	4332      	orrs	r2, r6
9000adf2:	e75e      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000adf4:	2607      	movs	r6, #7
9000adf6:	fa06 f609 	lsl.w	r6, r6, r9
9000adfa:	4332      	orrs	r2, r6
9000adfc:	e759      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000adfe:	2608      	movs	r6, #8
9000ae00:	fa06 f609 	lsl.w	r6, r6, r9
9000ae04:	4332      	orrs	r2, r6
9000ae06:	e754      	b.n	9000acb2 <HAL_GPIO_Init+0xe6>
9000ae08:	58024400 	.word	0x58024400
9000ae0c:	58020000 	.word	0x58020000
9000ae10:	58020800 	.word	0x58020800
9000ae14:	58020c00 	.word	0x58020c00
9000ae18:	58021000 	.word	0x58021000
9000ae1c:	58021400 	.word	0x58021400
9000ae20:	58021800 	.word	0x58021800
9000ae24:	58021c00 	.word	0x58021c00
9000ae28:	58022000 	.word	0x58022000
9000ae2c:	58022400 	.word	0x58022400

9000ae30 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000ae30:	2900      	cmp	r1, #0
9000ae32:	f000 80a4 	beq.w	9000af7e <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000ae36:	2300      	movs	r3, #0
{
9000ae38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ae3c:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000afa8 <HAL_GPIO_DeInit+0x178>
9000ae40:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000ae42:	f8df 8168 	ldr.w	r8, [pc, #360]	; 9000afac <HAL_GPIO_DeInit+0x17c>
9000ae46:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000afb0 <HAL_GPIO_DeInit+0x180>
9000ae4a:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000afb4 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000ae4e:	f04f 0e01 	mov.w	lr, #1
9000ae52:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000ae56:	ea12 0c01 	ands.w	ip, r2, r1
9000ae5a:	d06b      	beq.n	9000af34 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000ae5c:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000ae60:	f003 0403 	and.w	r4, r3, #3
9000ae64:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000ae66:	4540      	cmp	r0, r8
9000ae68:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000ae6a:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000ae6e:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000ae70:	fa06 f604 	lsl.w	r6, r6, r4
9000ae74:	ea07 0706 	and.w	r7, r7, r6
9000ae78:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000ae7a:	d01f      	beq.n	9000aebc <HAL_GPIO_DeInit+0x8c>
9000ae7c:	4550      	cmp	r0, sl
9000ae7e:	d01a      	beq.n	9000aeb6 <HAL_GPIO_DeInit+0x86>
9000ae80:	4558      	cmp	r0, fp
9000ae82:	d05e      	beq.n	9000af42 <HAL_GPIO_DeInit+0x112>
9000ae84:	4f43      	ldr	r7, [pc, #268]	; (9000af94 <HAL_GPIO_DeInit+0x164>)
9000ae86:	42b8      	cmp	r0, r7
9000ae88:	d065      	beq.n	9000af56 <HAL_GPIO_DeInit+0x126>
9000ae8a:	4f43      	ldr	r7, [pc, #268]	; (9000af98 <HAL_GPIO_DeInit+0x168>)
9000ae8c:	42b8      	cmp	r0, r7
9000ae8e:	d067      	beq.n	9000af60 <HAL_GPIO_DeInit+0x130>
9000ae90:	4f42      	ldr	r7, [pc, #264]	; (9000af9c <HAL_GPIO_DeInit+0x16c>)
9000ae92:	42b8      	cmp	r0, r7
9000ae94:	d05a      	beq.n	9000af4c <HAL_GPIO_DeInit+0x11c>
9000ae96:	4f42      	ldr	r7, [pc, #264]	; (9000afa0 <HAL_GPIO_DeInit+0x170>)
9000ae98:	42b8      	cmp	r0, r7
9000ae9a:	d06b      	beq.n	9000af74 <HAL_GPIO_DeInit+0x144>
9000ae9c:	4f41      	ldr	r7, [pc, #260]	; (9000afa4 <HAL_GPIO_DeInit+0x174>)
9000ae9e:	42b8      	cmp	r0, r7
9000aea0:	d06e      	beq.n	9000af80 <HAL_GPIO_DeInit+0x150>
9000aea2:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000afb8 <HAL_GPIO_DeInit+0x188>
9000aea6:	4570      	cmp	r0, lr
9000aea8:	d05f      	beq.n	9000af6a <HAL_GPIO_DeInit+0x13a>
9000aeaa:	f8df e110 	ldr.w	lr, [pc, #272]	; 9000afbc <HAL_GPIO_DeInit+0x18c>
9000aeae:	4570      	cmp	r0, lr
9000aeb0:	d06b      	beq.n	9000af8a <HAL_GPIO_DeInit+0x15a>
9000aeb2:	f04f 0e0a 	mov.w	lr, #10
9000aeb6:	fa0e f404 	lsl.w	r4, lr, r4
9000aeba:	e000      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000aebc:	2400      	movs	r4, #0
9000aebe:	9f01      	ldr	r7, [sp, #4]
9000aec0:	42a7      	cmp	r7, r4
9000aec2:	d119      	bne.n	9000aef8 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000aec4:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000aec8:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
9000aecc:	ea27 070c 	bic.w	r7, r7, ip
9000aed0:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000aed4:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9000aed8:	ea27 070c 	bic.w	r7, r7, ip
9000aedc:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000aee0:	6867      	ldr	r7, [r4, #4]
9000aee2:	ea27 070c 	bic.w	r7, r7, ip
9000aee6:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000aee8:	6827      	ldr	r7, [r4, #0]
9000aeea:	ea27 070c 	bic.w	r7, r7, ip
9000aeee:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000aef0:	68ac      	ldr	r4, [r5, #8]
9000aef2:	ea24 0406 	bic.w	r4, r4, r6
9000aef6:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000aef8:	005d      	lsls	r5, r3, #1
9000aefa:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000aefc:	f003 0607 	and.w	r6, r3, #7
9000af00:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000af02:	40ac      	lsls	r4, r5
9000af04:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000af06:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000af08:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000af0a:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000af0c:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000af0e:	08dd      	lsrs	r5, r3, #3
9000af10:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000af14:	6a2e      	ldr	r6, [r5, #32]
9000af16:	ea26 0607 	bic.w	r6, r6, r7
9000af1a:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000af1c:	68c5      	ldr	r5, [r0, #12]
9000af1e:	ea25 0504 	bic.w	r5, r5, r4
9000af22:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000af24:	6845      	ldr	r5, [r0, #4]
9000af26:	ea25 0202 	bic.w	r2, r5, r2
9000af2a:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000af2c:	6882      	ldr	r2, [r0, #8]
9000af2e:	ea22 0204 	bic.w	r2, r2, r4
9000af32:	6082      	str	r2, [r0, #8]
    }

    position++;
9000af34:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000af36:	fa31 f203 	lsrs.w	r2, r1, r3
9000af3a:	d188      	bne.n	9000ae4e <HAL_GPIO_DeInit+0x1e>
  }
}
9000af3c:	b003      	add	sp, #12
9000af3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000af42:	f04f 0e02 	mov.w	lr, #2
9000af46:	fa0e f404 	lsl.w	r4, lr, r4
9000af4a:	e7b8      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af4c:	f04f 0e05 	mov.w	lr, #5
9000af50:	fa0e f404 	lsl.w	r4, lr, r4
9000af54:	e7b3      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af56:	f04f 0e03 	mov.w	lr, #3
9000af5a:	fa0e f404 	lsl.w	r4, lr, r4
9000af5e:	e7ae      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af60:	f04f 0e04 	mov.w	lr, #4
9000af64:	fa0e f404 	lsl.w	r4, lr, r4
9000af68:	e7a9      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af6a:	f04f 0e08 	mov.w	lr, #8
9000af6e:	fa0e f404 	lsl.w	r4, lr, r4
9000af72:	e7a4      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af74:	f04f 0e06 	mov.w	lr, #6
9000af78:	fa0e f404 	lsl.w	r4, lr, r4
9000af7c:	e79f      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af7e:	4770      	bx	lr
9000af80:	f04f 0e07 	mov.w	lr, #7
9000af84:	fa0e f404 	lsl.w	r4, lr, r4
9000af88:	e799      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af8a:	f04f 0e09 	mov.w	lr, #9
9000af8e:	fa0e f404 	lsl.w	r4, lr, r4
9000af92:	e794      	b.n	9000aebe <HAL_GPIO_DeInit+0x8e>
9000af94:	58020c00 	.word	0x58020c00
9000af98:	58021000 	.word	0x58021000
9000af9c:	58021400 	.word	0x58021400
9000afa0:	58021800 	.word	0x58021800
9000afa4:	58021c00 	.word	0x58021c00
9000afa8:	58000400 	.word	0x58000400
9000afac:	58020000 	.word	0x58020000
9000afb0:	58020400 	.word	0x58020400
9000afb4:	58020800 	.word	0x58020800
9000afb8:	58022000 	.word	0x58022000
9000afbc:	58022400 	.word	0x58022400

9000afc0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000afc0:	6903      	ldr	r3, [r0, #16]
9000afc2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000afc4:	bf14      	ite	ne
9000afc6:	2001      	movne	r0, #1
9000afc8:	2000      	moveq	r0, #0
9000afca:	4770      	bx	lr

9000afcc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000afcc:	b902      	cbnz	r2, 9000afd0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000afce:	0409      	lsls	r1, r1, #16
9000afd0:	6181      	str	r1, [r0, #24]
  }
}
9000afd2:	4770      	bx	lr

9000afd4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000afd4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000afd6:	ea01 0203 	and.w	r2, r1, r3
9000afda:	ea21 0103 	bic.w	r1, r1, r3
9000afde:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000afe2:	6181      	str	r1, [r0, #24]
}
9000afe4:	4770      	bx	lr
9000afe6:	bf00      	nop

9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000afe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000afec:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000afee:	f04f 0820 	mov.w	r8, #32
{
9000aff2:	4605      	mov	r5, r0
9000aff4:	460e      	mov	r6, r1
9000aff6:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000aff8:	6998      	ldr	r0, [r3, #24]
9000affa:	f010 0902 	ands.w	r9, r0, #2
9000affe:	f040 809e 	bne.w	9000b13e <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000b002:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b004:	f014 0410 	ands.w	r4, r4, #16
9000b008:	d068      	beq.n	9000b0dc <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b00a:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000b00c:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000b00e:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b010:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b012:	1c71      	adds	r1, r6, #1
9000b014:	699a      	ldr	r2, [r3, #24]
9000b016:	d163      	bne.n	9000b0e0 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000b018:	0690      	lsls	r0, r2, #26
9000b01a:	f100 8093 	bmi.w	9000b144 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b01e:	f1ba 0f00 	cmp.w	sl, #0
9000b022:	d104      	bne.n	9000b02e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b024:	699c      	ldr	r4, [r3, #24]
9000b026:	06a1      	lsls	r1, r4, #26
9000b028:	d5fc      	bpl.n	9000b024 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b02a:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000b02e:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000b032:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000b034:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b036:	05d0      	lsls	r0, r2, #23
9000b038:	d530      	bpl.n	9000b09c <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b03a:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b03e:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b040:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b044:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b046:	d504      	bpl.n	9000b052 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b048:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b04c:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b050:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b052:	0591      	lsls	r1, r2, #22
9000b054:	d504      	bpl.n	9000b060 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b056:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b05a:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b05e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b060:	699a      	ldr	r2, [r3, #24]
9000b062:	0790      	lsls	r0, r2, #30
9000b064:	d501      	bpl.n	9000b06a <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000b066:	2200      	movs	r2, #0
9000b068:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b06a:	699a      	ldr	r2, [r3, #24]
9000b06c:	07d1      	lsls	r1, r2, #31
9000b06e:	d403      	bmi.n	9000b078 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b070:	699a      	ldr	r2, [r3, #24]
9000b072:	f042 0201 	orr.w	r2, r2, #1
9000b076:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000b078:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b07a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b07c:	4834      	ldr	r0, [pc, #208]	; (9000b150 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b07e:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000b080:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b082:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b084:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b086:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b088:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b08c:	4323      	orrs	r3, r4
9000b08e:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b090:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b094:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000b098:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b09c:	0550      	lsls	r0, r2, #21
9000b09e:	d4d3      	bmi.n	9000b048 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b0a0:	0592      	lsls	r2, r2, #22
9000b0a2:	d4d8      	bmi.n	9000b056 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000b0a4:	2900      	cmp	r1, #0
9000b0a6:	d1db      	bne.n	9000b060 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000b0a8:	1c72      	adds	r2, r6, #1
9000b0aa:	d0a5      	beq.n	9000aff8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b0ac:	f7ff fb04 	bl	9000a6b8 <HAL_GetTick>
9000b0b0:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b0b2:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b0b4:	42b0      	cmp	r0, r6
9000b0b6:	d801      	bhi.n	9000b0bc <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000b0b8:	2e00      	cmp	r6, #0
9000b0ba:	d19d      	bne.n	9000aff8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b0bc:	699a      	ldr	r2, [r3, #24]
9000b0be:	f012 0202 	ands.w	r2, r2, #2
9000b0c2:	d199      	bne.n	9000aff8 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b0c4:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b0c6:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000b0c8:	2001      	movs	r0, #1
9000b0ca:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b0ce:	430b      	orrs	r3, r1
9000b0d0:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b0d2:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b0d6:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
9000b0da:	e7dd      	b.n	9000b098 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
9000b0dc:	4621      	mov	r1, r4
9000b0de:	e7a9      	b.n	9000b034 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b0e0:	0692      	lsls	r2, r2, #26
9000b0e2:	d42f      	bmi.n	9000b144 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b0e4:	f1ba 0f00 	cmp.w	sl, #0
9000b0e8:	d1a1      	bne.n	9000b02e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b0ea:	f7ff fae5 	bl	9000a6b8 <HAL_GetTick>
9000b0ee:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b0f0:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b0f2:	4286      	cmp	r6, r0
9000b0f4:	d301      	bcc.n	9000b0fa <I2C_WaitOnTXISFlagUntilTimeout+0x112>
9000b0f6:	2e00      	cmp	r6, #0
9000b0f8:	d18b      	bne.n	9000b012 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b0fa:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b0fc:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b100:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b102:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b104:	0409      	lsls	r1, r1, #16
9000b106:	d50b      	bpl.n	9000b120 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
9000b108:	0441      	lsls	r1, r0, #17
9000b10a:	d409      	bmi.n	9000b120 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
9000b10c:	2a20      	cmp	r2, #32
9000b10e:	d007      	beq.n	9000b120 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b110:	685a      	ldr	r2, [r3, #4]
9000b112:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b116:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b118:	f7ff face 	bl	9000a6b8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b11c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000b11e:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b120:	699a      	ldr	r2, [r3, #24]
9000b122:	0690      	lsls	r0, r2, #26
9000b124:	f53f af75 	bmi.w	9000b012 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b128:	f7ff fac6 	bl	9000a6b8 <HAL_GetTick>
9000b12c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b12e:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b130:	2819      	cmp	r0, #25
9000b132:	d9f5      	bls.n	9000b120 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b134:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000b138:	f04f 0a01 	mov.w	sl, #1
9000b13c:	e769      	b.n	9000b012 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000b13e:	2000      	movs	r0, #0
}
9000b140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
9000b144:	f1ba 0f00 	cmp.w	sl, #0
9000b148:	f43f af6f 	beq.w	9000b02a <I2C_WaitOnTXISFlagUntilTimeout+0x42>
9000b14c:	e76f      	b.n	9000b02e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b14e:	bf00      	nop
9000b150:	fe00e800 	.word	0xfe00e800

9000b154 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
9000b154:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b158:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b15a:	6802      	ldr	r2, [r0, #0]
{
9000b15c:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b15e:	6991      	ldr	r1, [r2, #24]
9000b160:	068c      	lsls	r4, r1, #26
9000b162:	d469      	bmi.n	9000b238 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000b164:	4606      	mov	r6, r0
9000b166:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b168:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000b16c:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b16e:	f014 0410 	ands.w	r4, r4, #16
9000b172:	d064      	beq.n	9000b23e <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
9000b174:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b176:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000b178:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b17a:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000b17e:	46aa      	mov	sl, r5
9000b180:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b182:	699a      	ldr	r2, [r3, #24]
9000b184:	d15d      	bne.n	9000b242 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000b186:	0690      	lsls	r0, r2, #26
9000b188:	f100 8083 	bmi.w	9000b292 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b18c:	f1ba 0f00 	cmp.w	sl, #0
9000b190:	d104      	bne.n	9000b19c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000b192:	699c      	ldr	r4, [r3, #24]
9000b194:	06a1      	lsls	r1, r4, #26
9000b196:	d5fc      	bpl.n	9000b192 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b198:	2220      	movs	r2, #32
9000b19a:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000b19c:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000b1a0:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000b1a2:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b1a4:	05d0      	lsls	r0, r2, #23
9000b1a6:	d530      	bpl.n	9000b20a <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b1a8:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b1ac:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b1ae:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b1b2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b1b4:	d504      	bpl.n	9000b1c0 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b1b6:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b1ba:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b1be:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b1c0:	0591      	lsls	r1, r2, #22
9000b1c2:	d504      	bpl.n	9000b1ce <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b1c4:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b1c8:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b1cc:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b1ce:	699a      	ldr	r2, [r3, #24]
9000b1d0:	0795      	lsls	r5, r2, #30
9000b1d2:	d501      	bpl.n	9000b1d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000b1d4:	2200      	movs	r2, #0
9000b1d6:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b1d8:	699a      	ldr	r2, [r3, #24]
9000b1da:	07d0      	lsls	r0, r2, #31
9000b1dc:	d403      	bmi.n	9000b1e6 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b1de:	699a      	ldr	r2, [r3, #24]
9000b1e0:	f042 0201 	orr.w	r2, r2, #1
9000b1e4:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000b1e6:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b1e8:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b1ea:	4837      	ldr	r0, [pc, #220]	; (9000b2c8 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b1ec:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000b1ee:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b1f0:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b1f2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b1f4:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
9000b1f6:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b1fa:	4323      	orrs	r3, r4
9000b1fc:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b1fe:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b202:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b206:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b20a:	0550      	lsls	r0, r2, #21
9000b20c:	d4d3      	bmi.n	9000b1b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b20e:	0592      	lsls	r2, r2, #22
9000b210:	d4d8      	bmi.n	9000b1c4 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000b212:	2900      	cmp	r1, #0
9000b214:	d1db      	bne.n	9000b1ce <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b216:	f7ff fa4f 	bl	9000a6b8 <HAL_GetTick>
9000b21a:	eba0 0008 	sub.w	r0, r0, r8
9000b21e:	42b8      	cmp	r0, r7
9000b220:	d801      	bhi.n	9000b226 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000b222:	2f00      	cmp	r7, #0
9000b224:	d132      	bne.n	9000b28c <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b226:	6832      	ldr	r2, [r6, #0]
9000b228:	6991      	ldr	r1, [r2, #24]
9000b22a:	4613      	mov	r3, r2
9000b22c:	f011 0120 	ands.w	r1, r1, #32
9000b230:	d034      	beq.n	9000b29c <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b232:	6991      	ldr	r1, [r2, #24]
9000b234:	0689      	lsls	r1, r1, #26
9000b236:	d599      	bpl.n	9000b16c <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000b238:	2000      	movs	r0, #0
}
9000b23a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000b23e:	4621      	mov	r1, r4
9000b240:	e7af      	b.n	9000b1a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b242:	0692      	lsls	r2, r2, #26
9000b244:	d425      	bmi.n	9000b292 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b246:	f1ba 0f00 	cmp.w	sl, #0
9000b24a:	d1a7      	bne.n	9000b19c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b24c:	f7ff fa34 	bl	9000a6b8 <HAL_GetTick>
9000b250:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b252:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b254:	4287      	cmp	r7, r0
9000b256:	d301      	bcc.n	9000b25c <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000b258:	2f00      	cmp	r7, #0
9000b25a:	d191      	bne.n	9000b180 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b25c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b25e:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b262:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b264:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b266:	0409      	lsls	r1, r1, #16
9000b268:	d503      	bpl.n	9000b272 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000b26a:	0441      	lsls	r1, r0, #17
9000b26c:	d401      	bmi.n	9000b272 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b26e:	2a20      	cmp	r2, #32
9000b270:	d121      	bne.n	9000b2b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b272:	699a      	ldr	r2, [r3, #24]
9000b274:	0690      	lsls	r0, r2, #26
9000b276:	d483      	bmi.n	9000b180 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b278:	f7ff fa1e 	bl	9000a6b8 <HAL_GetTick>
9000b27c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b27e:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b280:	2819      	cmp	r0, #25
9000b282:	d9f6      	bls.n	9000b272 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b284:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000b286:	f04f 0a01 	mov.w	sl, #1
9000b28a:	e779      	b.n	9000b180 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b28c:	6833      	ldr	r3, [r6, #0]
9000b28e:	461a      	mov	r2, r3
9000b290:	e7cf      	b.n	9000b232 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000b292:	f1ba 0f00 	cmp.w	sl, #0
9000b296:	f43f af7f 	beq.w	9000b198 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000b29a:	e77f      	b.n	9000b19c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b29c:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b29e:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
9000b2a0:	2001      	movs	r0, #1
9000b2a2:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b2a6:	4313      	orrs	r3, r2
9000b2a8:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b2aa:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b2ae:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b2b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b2b6:	685a      	ldr	r2, [r3, #4]
9000b2b8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b2bc:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b2be:	f7ff f9fb 	bl	9000a6b8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b2c2:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000b2c4:	4604      	mov	r4, r0
9000b2c6:	e7d4      	b.n	9000b272 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b2c8:	fe00e800 	.word	0xfe00e800

9000b2cc <HAL_I2C_MspInit>:
}
9000b2cc:	4770      	bx	lr
9000b2ce:	bf00      	nop

9000b2d0 <HAL_I2C_Init>:
  if (hi2c == NULL)
9000b2d0:	2800      	cmp	r0, #0
9000b2d2:	d04e      	beq.n	9000b372 <HAL_I2C_Init+0xa2>
{
9000b2d4:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000b2d6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
9000b2da:	4604      	mov	r4, r0
9000b2dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b2e0:	2b00      	cmp	r3, #0
9000b2e2:	d041      	beq.n	9000b368 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000b2e4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b2e6:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b2e8:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b2ea:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000b2ee:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b2f0:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b2f4:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000b2f6:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b2fa:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000b2fc:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b2fe:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000b300:	689a      	ldr	r2, [r3, #8]
9000b302:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000b306:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b308:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b30a:	d029      	beq.n	9000b360 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b30c:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b310:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b312:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b314:	d102      	bne.n	9000b31c <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000b316:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000b31a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b31c:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000b31e:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b322:	4915      	ldr	r1, [pc, #84]	; (9000b378 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b324:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b326:	4301      	orrs	r1, r0
9000b328:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000b32a:	68d9      	ldr	r1, [r3, #12]
9000b32c:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000b330:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000b332:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b336:	4302      	orrs	r2, r0
9000b338:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b33c:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b340:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b342:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b344:	4301      	orrs	r1, r0
  return HAL_OK;
9000b346:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b348:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000b34a:	6819      	ldr	r1, [r3, #0]
9000b34c:	f041 0101 	orr.w	r1, r1, #1
9000b350:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b352:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000b354:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000b358:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b35a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b35e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b360:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b364:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b366:	e7d9      	b.n	9000b31c <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000b368:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000b36c:	f7ff ffae 	bl	9000b2cc <HAL_I2C_MspInit>
9000b370:	e7b8      	b.n	9000b2e4 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000b372:	2001      	movs	r0, #1
}
9000b374:	4770      	bx	lr
9000b376:	bf00      	nop
9000b378:	02008000 	.word	0x02008000

9000b37c <HAL_I2C_MspDeInit>:
9000b37c:	4770      	bx	lr
9000b37e:	bf00      	nop

9000b380 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000b380:	b1b0      	cbz	r0, 9000b3b0 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000b382:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b384:	2324      	movs	r3, #36	; 0x24
{
9000b386:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b388:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000b38c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000b38e:	6813      	ldr	r3, [r2, #0]
9000b390:	f023 0301 	bic.w	r3, r3, #1
9000b394:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000b396:	f7ff fff1 	bl	9000b37c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b39a:	2300      	movs	r3, #0
9000b39c:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000b39e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000b3a0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000b3a4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000b3a8:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b3aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000b3ae:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000b3b0:	2001      	movs	r0, #1
}
9000b3b2:	4770      	bx	lr

9000b3b4 <HAL_I2C_Mem_Write>:
{
9000b3b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b3b8:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b3ba:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b3be:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b3c2:	2b20      	cmp	r3, #32
{
9000b3c4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b3c6:	d132      	bne.n	9000b42e <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000b3c8:	9b08      	ldr	r3, [sp, #32]
9000b3ca:	4604      	mov	r4, r0
9000b3cc:	b34b      	cbz	r3, 9000b422 <HAL_I2C_Mem_Write+0x6e>
9000b3ce:	f1ba 0f00 	cmp.w	sl, #0
9000b3d2:	d026      	beq.n	9000b422 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000b3d4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b3d8:	2b01      	cmp	r3, #1
9000b3da:	d028      	beq.n	9000b42e <HAL_I2C_Mem_Write+0x7a>
9000b3dc:	2301      	movs	r3, #1
9000b3de:	460e      	mov	r6, r1
9000b3e0:	4691      	mov	r9, r2
9000b3e2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b3e6:	f7ff f967 	bl	9000a6b8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b3ea:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000b3ec:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b3ee:	699a      	ldr	r2, [r3, #24]
9000b3f0:	0411      	lsls	r1, r2, #16
9000b3f2:	d51f      	bpl.n	9000b434 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b3f4:	f7ff f960 	bl	9000a6b8 <HAL_GetTick>
9000b3f8:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b3fa:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b3fc:	2819      	cmp	r0, #25
9000b3fe:	d9f6      	bls.n	9000b3ee <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b400:	699a      	ldr	r2, [r3, #24]
9000b402:	0412      	lsls	r2, r2, #16
9000b404:	d5f3      	bpl.n	9000b3ee <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b406:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b408:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b40a:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b40c:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b40e:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b410:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b414:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b416:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b41a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b41e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b422:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b426:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b428:	6463      	str	r3, [r4, #68]	; 0x44
}
9000b42a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000b42e:	2002      	movs	r0, #2
}
9000b430:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000b434:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b436:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b438:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b43c:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b43e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b442:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b444:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b446:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b448:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b44c:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b44e:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000b450:	496d      	ldr	r1, [pc, #436]	; (9000b608 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000b452:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b456:	685a      	ldr	r2, [r3, #4]
9000b458:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b45a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000b45e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b462:	496a      	ldr	r1, [pc, #424]	; (9000b60c <HAL_I2C_Mem_Write+0x258>)
9000b464:	4332      	orrs	r2, r6
9000b466:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b468:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b46a:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b46c:	4639      	mov	r1, r7
9000b46e:	f7ff fdbb 	bl	9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b472:	2800      	cmp	r0, #0
9000b474:	d175      	bne.n	9000b562 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b476:	f1b8 0f01 	cmp.w	r8, #1
9000b47a:	d00a      	beq.n	9000b492 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b47c:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000b480:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b482:	4639      	mov	r1, r7
9000b484:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b486:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b488:	462a      	mov	r2, r5
9000b48a:	f7ff fdad 	bl	9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b48e:	2800      	cmp	r0, #0
9000b490:	d167      	bne.n	9000b562 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b492:	fa5f f389 	uxtb.w	r3, r9
9000b496:	6822      	ldr	r2, [r4, #0]
9000b498:	6293      	str	r3, [r2, #40]	; 0x28
9000b49a:	1c78      	adds	r0, r7, #1
9000b49c:	d14a      	bne.n	9000b534 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b49e:	6993      	ldr	r3, [r2, #24]
9000b4a0:	0619      	lsls	r1, r3, #24
9000b4a2:	d5fc      	bpl.n	9000b49e <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b4a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b4a6:	b29b      	uxth	r3, r3
9000b4a8:	2bff      	cmp	r3, #255	; 0xff
9000b4aa:	f240 808a 	bls.w	9000b5c2 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b4ae:	6853      	ldr	r3, [r2, #4]
9000b4b0:	4957      	ldr	r1, [pc, #348]	; (9000b610 <HAL_I2C_Mem_Write+0x25c>)
9000b4b2:	400b      	ands	r3, r1
9000b4b4:	4957      	ldr	r1, [pc, #348]	; (9000b614 <HAL_I2C_Mem_Write+0x260>)
9000b4b6:	4333      	orrs	r3, r6
9000b4b8:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b4ba:	23ff      	movs	r3, #255	; 0xff
9000b4bc:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b4be:	6051      	str	r1, [r2, #4]
9000b4c0:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000b610 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b4c4:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b4c8:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000b614 <HAL_I2C_Mem_Write+0x260>
9000b4cc:	e004      	b.n	9000b4d8 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000b4ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b4d0:	b29b      	uxth	r3, r3
9000b4d2:	2b00      	cmp	r3, #0
9000b4d4:	f000 8083 	beq.w	9000b5de <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b4d8:	462a      	mov	r2, r5
9000b4da:	4639      	mov	r1, r7
9000b4dc:	4620      	mov	r0, r4
9000b4de:	f7ff fd83 	bl	9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b4e2:	2800      	cmp	r0, #0
9000b4e4:	d16b      	bne.n	9000b5be <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b4e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b4e8:	6821      	ldr	r1, [r4, #0]
9000b4ea:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000b4ee:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b4f0:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000b4f2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000b4f4:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000b4f6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000b4f8:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000b4fa:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000b4fc:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000b4fe:	b292      	uxth	r2, r2
9000b500:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b502:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000b504:	b292      	uxth	r2, r2
9000b506:	2a00      	cmp	r2, #0
9000b508:	d0e1      	beq.n	9000b4ce <HAL_I2C_Mem_Write+0x11a>
9000b50a:	2b00      	cmp	r3, #0
9000b50c:	d1df      	bne.n	9000b4ce <HAL_I2C_Mem_Write+0x11a>
9000b50e:	1c78      	adds	r0, r7, #1
9000b510:	d12c      	bne.n	9000b56c <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b512:	698b      	ldr	r3, [r1, #24]
9000b514:	061a      	lsls	r2, r3, #24
9000b516:	d5fc      	bpl.n	9000b512 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b518:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b51a:	b29b      	uxth	r3, r3
9000b51c:	2bff      	cmp	r3, #255	; 0xff
9000b51e:	d940      	bls.n	9000b5a2 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b520:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b522:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b526:	ea03 0308 	and.w	r3, r3, r8
9000b52a:	4333      	orrs	r3, r6
9000b52c:	ea43 0309 	orr.w	r3, r3, r9
9000b530:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000b532:	e7cc      	b.n	9000b4ce <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b534:	6993      	ldr	r3, [r2, #24]
9000b536:	061b      	lsls	r3, r3, #24
9000b538:	d4b4      	bmi.n	9000b4a4 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b53a:	f7ff f8bd 	bl	9000a6b8 <HAL_GetTick>
9000b53e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b540:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b542:	4287      	cmp	r7, r0
9000b544:	d301      	bcc.n	9000b54a <HAL_I2C_Mem_Write+0x196>
9000b546:	2f00      	cmp	r7, #0
9000b548:	d1a7      	bne.n	9000b49a <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b54a:	6993      	ldr	r3, [r2, #24]
9000b54c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b550:	d1a3      	bne.n	9000b49a <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b552:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b554:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b556:	430a      	orrs	r2, r1
9000b558:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b55a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b55e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b562:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b564:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b566:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000b56a:	e75e      	b.n	9000b42a <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b56c:	698b      	ldr	r3, [r1, #24]
9000b56e:	061b      	lsls	r3, r3, #24
9000b570:	d4d2      	bmi.n	9000b518 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b572:	f7ff f8a1 	bl	9000a6b8 <HAL_GetTick>
9000b576:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b578:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b57a:	4287      	cmp	r7, r0
9000b57c:	d301      	bcc.n	9000b582 <HAL_I2C_Mem_Write+0x1ce>
9000b57e:	2f00      	cmp	r7, #0
9000b580:	d1c5      	bne.n	9000b50e <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b582:	698b      	ldr	r3, [r1, #24]
9000b584:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b588:	d1c1      	bne.n	9000b50e <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b58a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b58c:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b58e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b590:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b594:	430a      	orrs	r2, r1
9000b596:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b598:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b59c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000b5a0:	e743      	b.n	9000b42a <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000b5a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b5a4:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b5a6:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000b5a8:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5aa:	684b      	ldr	r3, [r1, #4]
9000b5ac:	ea03 0308 	and.w	r3, r3, r8
9000b5b0:	4333      	orrs	r3, r6
9000b5b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b5b6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b5ba:	604b      	str	r3, [r1, #4]
}
9000b5bc:	e787      	b.n	9000b4ce <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000b5be:	2001      	movs	r0, #1
9000b5c0:	e733      	b.n	9000b42a <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000b5c2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5c4:	4812      	ldr	r0, [pc, #72]	; (9000b610 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000b5c6:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b5c8:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000b5ca:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5cc:	6853      	ldr	r3, [r2, #4]
9000b5ce:	4003      	ands	r3, r0
9000b5d0:	4333      	orrs	r3, r6
9000b5d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b5d6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b5da:	6053      	str	r3, [r2, #4]
}
9000b5dc:	e770      	b.n	9000b4c0 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b5de:	462a      	mov	r2, r5
9000b5e0:	4639      	mov	r1, r7
9000b5e2:	4620      	mov	r0, r4
9000b5e4:	f7ff fdb6 	bl	9000b154 <I2C_WaitOnSTOPFlagUntilTimeout>
9000b5e8:	2800      	cmp	r0, #0
9000b5ea:	d1e8      	bne.n	9000b5be <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b5ec:	6823      	ldr	r3, [r4, #0]
9000b5ee:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b5f0:	4d09      	ldr	r5, [pc, #36]	; (9000b618 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b5f2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b5f4:	685a      	ldr	r2, [r3, #4]
9000b5f6:	402a      	ands	r2, r5
9000b5f8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b5fa:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b5fe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b602:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000b606:	e710      	b.n	9000b42a <HAL_I2C_Mem_Write+0x76>
9000b608:	fc009800 	.word	0xfc009800
9000b60c:	01002000 	.word	0x01002000
9000b610:	fc009c00 	.word	0xfc009c00
9000b614:	01ff0000 	.word	0x01ff0000
9000b618:	fe00e800 	.word	0xfe00e800

9000b61c <HAL_I2C_Mem_Read>:
{
9000b61c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b620:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b622:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b626:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b62a:	2b20      	cmp	r3, #32
{
9000b62c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b62e:	d137      	bne.n	9000b6a0 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000b630:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000b632:	4683      	mov	fp, r0
9000b634:	b36b      	cbz	r3, 9000b692 <HAL_I2C_Mem_Read+0x76>
9000b636:	f1b9 0f00 	cmp.w	r9, #0
9000b63a:	d02a      	beq.n	9000b692 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000b63c:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b640:	2b01      	cmp	r3, #1
9000b642:	d02d      	beq.n	9000b6a0 <HAL_I2C_Mem_Read+0x84>
9000b644:	2301      	movs	r3, #1
9000b646:	460f      	mov	r7, r1
9000b648:	4690      	mov	r8, r2
9000b64a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b64e:	f7ff f833 	bl	9000a6b8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b652:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000b656:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b658:	699a      	ldr	r2, [r3, #24]
9000b65a:	0410      	lsls	r0, r2, #16
9000b65c:	d523      	bpl.n	9000b6a6 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b65e:	f7ff f82b 	bl	9000a6b8 <HAL_GetTick>
9000b662:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b664:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b668:	2819      	cmp	r0, #25
9000b66a:	d9f5      	bls.n	9000b658 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b66c:	699a      	ldr	r2, [r3, #24]
9000b66e:	0411      	lsls	r1, r2, #16
9000b670:	d5f2      	bpl.n	9000b658 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b672:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b676:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b678:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b67a:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b67c:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b67e:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b682:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b686:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b68a:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000b68e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b692:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b696:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b698:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
9000b69c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
9000b6a0:	2002      	movs	r0, #2
}
9000b6a2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000b6a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b6a8:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b6aa:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6ae:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b6b0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b6b4:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b6b6:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b6ba:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b6bc:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b6c0:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b6c4:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6c8:	4983      	ldr	r1, [pc, #524]	; (9000b8d8 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
9000b6ca:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6ce:	685a      	ldr	r2, [r3, #4]
9000b6d0:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b6d2:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6d4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6d8:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6da:	433a      	orrs	r2, r7
9000b6dc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000b6e0:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6e2:	4632      	mov	r2, r6
9000b6e4:	f7ff fc80 	bl	9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b6e8:	2800      	cmp	r0, #0
9000b6ea:	f040 8091 	bne.w	9000b810 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b6ee:	2c01      	cmp	r4, #1
9000b6f0:	d00c      	beq.n	9000b70c <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b6f2:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000b6f6:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b6fa:	4629      	mov	r1, r5
9000b6fc:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b6fe:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b700:	4632      	mov	r2, r6
9000b702:	f7ff fc71 	bl	9000afe8 <I2C_WaitOnTXISFlagUntilTimeout>
9000b706:	2800      	cmp	r0, #0
9000b708:	f040 8082 	bne.w	9000b810 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b70c:	fa5f f388 	uxtb.w	r3, r8
9000b710:	f8db 4000 	ldr.w	r4, [fp]
9000b714:	62a3      	str	r3, [r4, #40]	; 0x28
9000b716:	1c6a      	adds	r2, r5, #1
9000b718:	d160      	bne.n	9000b7dc <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b71a:	69a3      	ldr	r3, [r4, #24]
9000b71c:	065b      	lsls	r3, r3, #25
9000b71e:	d5fc      	bpl.n	9000b71a <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b720:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b724:	b29b      	uxth	r3, r3
9000b726:	2bff      	cmp	r3, #255	; 0xff
9000b728:	f240 80ae 	bls.w	9000b888 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b72c:	6863      	ldr	r3, [r4, #4]
9000b72e:	4a6a      	ldr	r2, [pc, #424]	; (9000b8d8 <HAL_I2C_Mem_Read+0x2bc>)
9000b730:	4013      	ands	r3, r2
9000b732:	4a6a      	ldr	r2, [pc, #424]	; (9000b8dc <HAL_I2C_Mem_Read+0x2c0>)
9000b734:	433b      	orrs	r3, r7
9000b736:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b738:	23ff      	movs	r3, #255	; 0xff
9000b73a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b73e:	6062      	str	r2, [r4, #4]
9000b740:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000b8e8 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b744:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b748:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000b8ec <HAL_I2C_Mem_Read+0x2d0>
9000b74c:	1c69      	adds	r1, r5, #1
9000b74e:	d127      	bne.n	9000b7a0 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b750:	69a3      	ldr	r3, [r4, #24]
9000b752:	075a      	lsls	r2, r3, #29
9000b754:	d5fc      	bpl.n	9000b750 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000b756:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b758:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000b75c:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000b75e:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000b762:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000b766:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000b768:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000b76a:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000b76c:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000b770:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000b774:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b778:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b77a:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b77e:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b780:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000b782:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b786:	b10a      	cbz	r2, 9000b78c <HAL_I2C_Mem_Read+0x170>
9000b788:	2b00      	cmp	r3, #0
9000b78a:	d046      	beq.n	9000b81a <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000b78c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b790:	b29b      	uxth	r3, r3
9000b792:	2b00      	cmp	r3, #0
9000b794:	f000 8088 	beq.w	9000b8a8 <HAL_I2C_Mem_Read+0x28c>
9000b798:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b79a:	f8db 4000 	ldr.w	r4, [fp]
9000b79e:	d0d7      	beq.n	9000b750 <HAL_I2C_Mem_Read+0x134>
9000b7a0:	69a3      	ldr	r3, [r4, #24]
9000b7a2:	075b      	lsls	r3, r3, #29
9000b7a4:	d4d7      	bmi.n	9000b756 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7a6:	f7fe ff87 	bl	9000a6b8 <HAL_GetTick>
9000b7aa:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7ac:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7b0:	4285      	cmp	r5, r0
9000b7b2:	d301      	bcc.n	9000b7b8 <HAL_I2C_Mem_Read+0x19c>
9000b7b4:	2d00      	cmp	r5, #0
9000b7b6:	d1c9      	bne.n	9000b74c <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7b8:	69a3      	ldr	r3, [r4, #24]
9000b7ba:	f013 0304 	ands.w	r3, r3, #4
9000b7be:	d1c5      	bne.n	9000b74c <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b7c0:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b7c4:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b7c6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b7c8:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b7cc:	430a      	orrs	r2, r1
9000b7ce:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b7d2:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b7d6:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000b7da:	e75f      	b.n	9000b69c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b7dc:	69a3      	ldr	r3, [r4, #24]
9000b7de:	0658      	lsls	r0, r3, #25
9000b7e0:	d49e      	bmi.n	9000b720 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7e2:	f7fe ff69 	bl	9000a6b8 <HAL_GetTick>
9000b7e6:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7e8:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b7ec:	4285      	cmp	r5, r0
9000b7ee:	d301      	bcc.n	9000b7f4 <HAL_I2C_Mem_Read+0x1d8>
9000b7f0:	2d00      	cmp	r5, #0
9000b7f2:	d190      	bne.n	9000b716 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b7f4:	69a3      	ldr	r3, [r4, #24]
9000b7f6:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000b7fa:	d18c      	bne.n	9000b716 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b7fc:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b800:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b802:	430a      	orrs	r2, r1
9000b804:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b808:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b80c:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b810:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b812:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b814:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000b818:	e740      	b.n	9000b69c <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b81a:	f8db 2000 	ldr.w	r2, [fp]
9000b81e:	1c68      	adds	r0, r5, #1
9000b820:	d111      	bne.n	9000b846 <HAL_I2C_Mem_Read+0x22a>
9000b822:	6993      	ldr	r3, [r2, #24]
9000b824:	0619      	lsls	r1, r3, #24
9000b826:	d5fc      	bpl.n	9000b822 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b828:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b82c:	b29b      	uxth	r3, r3
9000b82e:	2bff      	cmp	r3, #255	; 0xff
9000b830:	d91a      	bls.n	9000b868 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b832:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b834:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b838:	ea03 0308 	and.w	r3, r3, r8
9000b83c:	433b      	orrs	r3, r7
9000b83e:	ea43 0309 	orr.w	r3, r3, r9
9000b842:	6053      	str	r3, [r2, #4]
}
9000b844:	e7a2      	b.n	9000b78c <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b846:	6993      	ldr	r3, [r2, #24]
9000b848:	061b      	lsls	r3, r3, #24
9000b84a:	d4ed      	bmi.n	9000b828 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b84c:	f7fe ff34 	bl	9000a6b8 <HAL_GetTick>
9000b850:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b852:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b856:	4285      	cmp	r5, r0
9000b858:	d301      	bcc.n	9000b85e <HAL_I2C_Mem_Read+0x242>
9000b85a:	2d00      	cmp	r5, #0
9000b85c:	d1df      	bne.n	9000b81e <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b85e:	6993      	ldr	r3, [r2, #24]
9000b860:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b864:	d1db      	bne.n	9000b81e <HAL_I2C_Mem_Read+0x202>
9000b866:	e7ab      	b.n	9000b7c0 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000b868:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b86c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b86e:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000b870:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b874:	6853      	ldr	r3, [r2, #4]
9000b876:	ea03 0308 	and.w	r3, r3, r8
9000b87a:	433b      	orrs	r3, r7
9000b87c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b880:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b884:	6053      	str	r3, [r2, #4]
}
9000b886:	e781      	b.n	9000b78c <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000b888:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b88c:	4912      	ldr	r1, [pc, #72]	; (9000b8d8 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000b88e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b890:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000b892:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b896:	6863      	ldr	r3, [r4, #4]
9000b898:	400b      	ands	r3, r1
9000b89a:	433b      	orrs	r3, r7
9000b89c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b8a0:	4a0f      	ldr	r2, [pc, #60]	; (9000b8e0 <HAL_I2C_Mem_Read+0x2c4>)
9000b8a2:	431a      	orrs	r2, r3
9000b8a4:	6062      	str	r2, [r4, #4]
}
9000b8a6:	e74b      	b.n	9000b740 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b8a8:	4632      	mov	r2, r6
9000b8aa:	4629      	mov	r1, r5
9000b8ac:	4658      	mov	r0, fp
9000b8ae:	f7ff fc51 	bl	9000b154 <I2C_WaitOnSTOPFlagUntilTimeout>
9000b8b2:	b970      	cbnz	r0, 9000b8d2 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b8b4:	f8db 3000 	ldr.w	r3, [fp]
9000b8b8:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b8ba:	4c0a      	ldr	r4, [pc, #40]	; (9000b8e4 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b8bc:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b8be:	685a      	ldr	r2, [r3, #4]
9000b8c0:	4022      	ands	r2, r4
9000b8c2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b8c4:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b8c8:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b8cc:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000b8d0:	e6e4      	b.n	9000b69c <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000b8d2:	2001      	movs	r0, #1
9000b8d4:	e6e2      	b.n	9000b69c <HAL_I2C_Mem_Read+0x80>
9000b8d6:	bf00      	nop
9000b8d8:	fc009800 	.word	0xfc009800
9000b8dc:	01ff2400 	.word	0x01ff2400
9000b8e0:	02002400 	.word	0x02002400
9000b8e4:	fe00e800 	.word	0xfe00e800
9000b8e8:	fc009c00 	.word	0xfc009c00
9000b8ec:	01ff0000 	.word	0x01ff0000

9000b8f0 <HAL_I2C_GetState>:
  return hi2c->State;
9000b8f0:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000b8f4:	4770      	bx	lr
9000b8f6:	bf00      	nop

9000b8f8 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000b8f8:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000b8fa:	4770      	bx	lr

9000b8fc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000b8fc:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000b900:	2a20      	cmp	r2, #32
9000b902:	d123      	bne.n	9000b94c <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000b904:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000b908:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000b90c:	4603      	mov	r3, r0
9000b90e:	2a01      	cmp	r2, #1
9000b910:	d01c      	beq.n	9000b94c <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000b912:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b914:	2024      	movs	r0, #36	; 0x24
{
9000b916:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b918:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b91c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000b920:	6810      	ldr	r0, [r2, #0]
9000b922:	f020 0001 	bic.w	r0, r0, #1
9000b926:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000b928:	6810      	ldr	r0, [r2, #0]
9000b92a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000b92e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000b930:	6810      	ldr	r0, [r2, #0]
9000b932:	4301      	orrs	r1, r0

    return HAL_OK;
9000b934:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000b936:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000b938:	6811      	ldr	r1, [r2, #0]
9000b93a:	f041 0101 	orr.w	r1, r1, #1
9000b93e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000b940:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b944:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000b948:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000b94c:	2002      	movs	r0, #2
}
9000b94e:	4770      	bx	lr

9000b950 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000b950:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000b954:	2a20      	cmp	r2, #32
9000b956:	d122      	bne.n	9000b99e <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000b958:	4603      	mov	r3, r0
{
9000b95a:	b500      	push	{lr}
9000b95c:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000b960:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000b964:	2a01      	cmp	r2, #1
9000b966:	d01c      	beq.n	9000b9a2 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000b968:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b96a:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b96c:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000b970:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000b974:	6810      	ldr	r0, [r2, #0]
9000b976:	f020 0001 	bic.w	r0, r0, #1
9000b97a:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000b97c:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000b97e:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000b982:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000b986:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000b988:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000b98a:	6811      	ldr	r1, [r2, #0]
9000b98c:	f041 0101 	orr.w	r1, r1, #1
9000b990:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000b992:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b996:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000b99a:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000b99e:	2002      	movs	r0, #2
}
9000b9a0:	4770      	bx	lr
    return HAL_BUSY;
9000b9a2:	2002      	movs	r0, #2
}
9000b9a4:	f85d fb04 	ldr.w	pc, [sp], #4

9000b9a8 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000b9a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b9ac:	460d      	mov	r5, r1
9000b9ae:	4614      	mov	r4, r2
9000b9b0:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000b9b2:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000b9b4:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000b9b6:	2701      	movs	r7, #1
  p = 0;
9000b9b8:	f04f 0800 	mov.w	r8, #0
9000b9bc:	e006      	b.n	9000b9cc <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000b9be:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000b9c2:	eb06 0308 	add.w	r3, r6, r8
9000b9c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000b9ca:	d837      	bhi.n	9000ba3c <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000b9cc:	eb05 0008 	add.w	r0, r5, r8
9000b9d0:	4632      	mov	r2, r6
9000b9d2:	4639      	mov	r1, r7
    while (i != 0UL)
9000b9d4:	b116      	cbz	r6, 9000b9dc <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000b9d6:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000b9d8:	f01d ff7a 	bl	900298d0 <memset>
  for (l = 0; l < 16UL; l++)
9000b9dc:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000b9de:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000b9e2:	d1ec      	bne.n	9000b9be <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000b9e4:	2300      	movs	r3, #0
9000b9e6:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000b9ea:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000b9ee:	7828      	ldrb	r0, [r5, #0]
9000b9f0:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000b9f2:	b300      	cbz	r0, 9000ba36 <JPEG_Bits_To_SizeCodes+0x8e>
9000b9f4:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000b9f8:	2701      	movs	r7, #1
  p = 0;
9000b9fa:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000b9fc:	4288      	cmp	r0, r1
9000b9fe:	d10f      	bne.n	9000ba20 <JPEG_Bits_To_SizeCodes+0x78>
9000ba00:	eb02 0008 	add.w	r0, r2, r8
9000ba04:	1c56      	adds	r6, r2, #1
9000ba06:	eb05 0c02 	add.w	ip, r5, r2
9000ba0a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000ba0e:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000ba10:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000ba14:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000ba16:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000ba1a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000ba1c:	458e      	cmp	lr, r1
9000ba1e:	d0f7      	beq.n	9000ba10 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000ba20:	291f      	cmp	r1, #31
9000ba22:	d80b      	bhi.n	9000ba3c <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000ba24:	fa07 f001 	lsl.w	r0, r7, r1
9000ba28:	4298      	cmp	r0, r3
9000ba2a:	d907      	bls.n	9000ba3c <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000ba2c:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000ba2e:	005b      	lsls	r3, r3, #1
    si++;
9000ba30:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000ba32:	2800      	cmp	r0, #0
9000ba34:	d1e2      	bne.n	9000b9fc <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000ba36:	2000      	movs	r0, #0
}
9000ba38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000ba3c:	2001      	movs	r0, #1
}
9000ba3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000ba42:	bf00      	nop

9000ba44 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000ba44:	b5f0      	push	{r4, r5, r6, r7, lr}
9000ba46:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000ba4a:	460d      	mov	r5, r1
9000ba4c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000ba4e:	ab01      	add	r3, sp, #4
9000ba50:	aa43      	add	r2, sp, #268	; 0x10c
9000ba52:	a902      	add	r1, sp, #8
9000ba54:	f7ff ffa8 	bl	9000b9a8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000ba58:	b9d0      	cbnz	r0, 9000ba90 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000ba5a:	9f01      	ldr	r7, [sp, #4]
9000ba5c:	b1c7      	cbz	r7, 9000ba90 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000ba5e:	370f      	adds	r7, #15
9000ba60:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000ba64:	a902      	add	r1, sp, #8
9000ba66:	f104 0c0f 	add.w	ip, r4, #15
9000ba6a:	4427      	add	r7, r4
9000ba6c:	e009      	b.n	9000ba82 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000ba6e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000ba72:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000ba74:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000ba78:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000ba7c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000ba7e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000ba80:	d006      	beq.n	9000ba90 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000ba82:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000ba86:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000ba88:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000ba8c:	d9ef      	bls.n	9000ba6e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000ba8e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000ba90:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000ba94:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000ba96:	bf00      	nop

9000ba98 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000ba98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000ba9c:	6804      	ldr	r4, [r0, #0]
{
9000ba9e:	b093      	sub	sp, #76	; 0x4c
9000baa0:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000baa2:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000baa6:	429a      	cmp	r2, r3
9000baa8:	f000 809d 	beq.w	9000bbe6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000baac:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000bab0:	429a      	cmp	r2, r3
9000bab2:	d003      	beq.n	9000babc <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000bab4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bab6:	b013      	add	sp, #76	; 0x4c
9000bab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000babc:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000bac0:	a903      	add	r1, sp, #12
9000bac2:	f7ff ffbf 	bl	9000ba44 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000bac6:	2800      	cmp	r0, #0
9000bac8:	d1f5      	bne.n	9000bab6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000baca:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bace:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bad2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000bad6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bad8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000badc:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bade:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000bae2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bae6:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000baea:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000baee:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000baf2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000baf4:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000baf8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bafc:	f89d c014 	ldrb.w	ip, [sp, #20]
9000bb00:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb04:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb08:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb0c:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb10:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb12:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb16:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000bb1a:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000bb1e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb22:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb26:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb2a:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000bb2e:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb32:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000bb34:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb38:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000bb3c:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb40:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000bb42:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb46:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb48:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000bb4c:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb50:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb54:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000bb58:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb5c:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb60:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb62:	9b01      	ldr	r3, [sp, #4]
9000bb64:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb68:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000bb6c:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb70:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000bb74:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb78:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000bb7a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb7e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb82:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000bb86:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb8a:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb8e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bb92:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000bb96:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000bb9a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000bb9e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bba2:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000bba6:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bba8:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000bbac:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000bbae:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000bbb2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbb6:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000bbba:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbbc:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000bbc0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000bbc2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000bbc6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbca:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000bbce:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbd0:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000bbd4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000bbd8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000bbdc:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000bbe0:	b013      	add	sp, #76	; 0x4c
9000bbe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000bbe6:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000bbea:	e769      	b.n	9000bac0 <JPEG_Set_HuffDC_Mem+0x28>

9000bbec <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000bbec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000bbf0:	6804      	ldr	r4, [r0, #0]
{
9000bbf2:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000bbf6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000bbf8:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000bbfc:	429a      	cmp	r2, r3
9000bbfe:	d042      	beq.n	9000bc86 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000bc00:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000bc04:	429a      	cmp	r2, r3
9000bc06:	d004      	beq.n	9000bc12 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000bc08:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bc0a:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000bc0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000bc12:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000bc16:	4628      	mov	r0, r5
9000bc18:	466b      	mov	r3, sp
9000bc1a:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000bc1e:	a901      	add	r1, sp, #4
9000bc20:	f7ff fec2 	bl	9000b9a8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bc24:	2800      	cmp	r0, #0
9000bc26:	d1f0      	bne.n	9000bc0a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000bc28:	9b00      	ldr	r3, [sp, #0]
9000bc2a:	b37b      	cbz	r3, 9000bc8c <JPEG_Set_HuffAC_Mem+0xa0>
9000bc2c:	330f      	adds	r3, #15
9000bc2e:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000bc32:	f10d 0c04 	add.w	ip, sp, #4
9000bc36:	f105 020f 	add.w	r2, r5, #15
9000bc3a:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bc3e:	ae42      	add	r6, sp, #264	; 0x108
9000bc40:	e011      	b.n	9000bc66 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000bc42:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000bc46:	2ba1      	cmp	r3, #161	; 0xa1
9000bc48:	d8de      	bhi.n	9000bc08 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bc4a:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bc4e:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000bc52:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000bc56:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bc58:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bc5c:	4631      	mov	r1, r6
9000bc5e:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bc62:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000bc64:	d013      	beq.n	9000bc8e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000bc66:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000bc6a:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000bc6c:	2900      	cmp	r1, #0
9000bc6e:	d0ec      	beq.n	9000bc4a <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000bc70:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000bc72:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bc76:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000bc78:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000bc7c:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bc80:	d1df      	bne.n	9000bc42 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000bc82:	23a1      	movs	r3, #161	; 0xa1
9000bc84:	e7e1      	b.n	9000bc4a <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000bc86:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000bc8a:	e7c4      	b.n	9000bc16 <JPEG_Set_HuffAC_Mem+0x2a>
9000bc8c:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000bc8e:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000bc92:	4a1a      	ldr	r2, [pc, #104]	; (9000bcfc <JPEG_Set_HuffAC_Mem+0x110>)
9000bc94:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000bc98:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000bc9c:	6023      	str	r3, [r4, #0]
9000bc9e:	6063      	str	r3, [r4, #4]
9000bca0:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000bca4:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000bca6:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000bcaa:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000bcac:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000bcb0:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000bcb4:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000bcb6:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bcba:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000bcbc:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bcc0:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcc2:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcc6:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcca:	0212      	lsls	r2, r2, #8
9000bccc:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcd0:	021b      	lsls	r3, r3, #8
9000bcd2:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcd6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000bcda:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bcdc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bce0:	433a      	orrs	r2, r7
    while (i > 1UL)
9000bce2:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bce4:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000bce8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bcec:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000bcf0:	d1e7      	bne.n	9000bcc2 <JPEG_Set_HuffAC_Mem+0xd6>
}
9000bcf2:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000bcf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000bcfa:	bf00      	nop
9000bcfc:	0fd10fd0 	.word	0x0fd10fd0

9000bd00 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000bd00:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bd02:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000bd06:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000bd08:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000bd0a:	f003 0303 	and.w	r3, r3, #3
9000bd0e:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000bd10:	6803      	ldr	r3, [r0, #0]
9000bd12:	685a      	ldr	r2, [r3, #4]
9000bd14:	bf0c      	ite	eq
9000bd16:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000bd1a:	f022 0208 	bicne.w	r2, r2, #8
9000bd1e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bd20:	681a      	ldr	r2, [r3, #0]
9000bd22:	f022 0201 	bic.w	r2, r2, #1
9000bd26:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bd28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd2a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000bd2e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000bd30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd32:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000bd36:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000bd38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd3a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000bd3e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000bd40:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000bd42:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bd46:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000bd48:	681a      	ldr	r2, [r3, #0]
9000bd4a:	f042 0201 	orr.w	r2, r2, #1
9000bd4e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000bd50:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000bd52:	f002 020c 	and.w	r2, r2, #12
9000bd56:	2a08      	cmp	r2, #8
9000bd58:	d00a      	beq.n	9000bd70 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000bd5a:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000bd5c:	f002 020c 	and.w	r2, r2, #12
9000bd60:	2a0c      	cmp	r2, #12
9000bd62:	d000      	beq.n	9000bd66 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000bd64:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000bd66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd68:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000bd6c:	631a      	str	r2, [r3, #48]	; 0x30
}
9000bd6e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000bd70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000bd72:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000bd76:	631a      	str	r2, [r3, #48]	; 0x30
9000bd78:	4770      	bx	lr
9000bd7a:	bf00      	nop

9000bd7c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bd7c:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000bd7e:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000bd80:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000bd82:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000bd84:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000bd86:	42aa      	cmp	r2, r5
9000bd88:	d32d      	bcc.n	9000bde6 <JPEG_DMA_StartProcess+0x6a>
9000bd8a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000bd8c:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000bd8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000bd90:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000bd92:	42b3      	cmp	r3, r6
9000bd94:	d327      	bcc.n	9000bde6 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000bd96:	4f1b      	ldr	r7, [pc, #108]	; (9000be04 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000bd98:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000be10 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000bd9c:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000bd9e:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000bda2:	4919      	ldr	r1, [pc, #100]	; (9000be08 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000bda4:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000bda6:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000bda8:	4918      	ldr	r1, [pc, #96]	; (9000be0c <JPEG_DMA_StartProcess+0x90>)
9000bdaa:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000bdac:	b1a5      	cbz	r5, 9000bdd8 <JPEG_DMA_StartProcess+0x5c>
9000bdae:	b19e      	cbz	r6, 9000bdd8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bdb0:	fbb2 f1f5 	udiv	r1, r2, r5
9000bdb4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bdb8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bdba:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bdbc:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bdbe:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bdc0:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000bdc2:	fbb3 f2f6 	udiv	r2, r3, r6
9000bdc6:	fb06 3212 	mls	r2, r6, r2, r3
9000bdca:	1a9b      	subs	r3, r3, r2
9000bdcc:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bdce:	9500      	str	r5, [sp, #0]
9000bdd0:	69e2      	ldr	r2, [r4, #28]
9000bdd2:	f001 fbb5 	bl	9000d540 <HAL_MDMA_Start_IT>
9000bdd6:	b148      	cbz	r0, 9000bdec <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bdd8:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000bdda:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bddc:	f043 0304 	orr.w	r3, r3, #4
9000bde0:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000bde2:	b003      	add	sp, #12
9000bde4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000bde6:	2001      	movs	r0, #1
}
9000bde8:	b003      	add	sp, #12
9000bdea:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000bdec:	6822      	ldr	r2, [r4, #0]
9000bdee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bdf0:	69a1      	ldr	r1, [r4, #24]
9000bdf2:	3240      	adds	r2, #64	; 0x40
9000bdf4:	9500      	str	r5, [sp, #0]
9000bdf6:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000bdf8:	f001 fba2 	bl	9000d540 <HAL_MDMA_Start_IT>
9000bdfc:	2800      	cmp	r0, #0
9000bdfe:	d0f3      	beq.n	9000bde8 <JPEG_DMA_StartProcess+0x6c>
9000be00:	e7ea      	b.n	9000bdd8 <JPEG_DMA_StartProcess+0x5c>
9000be02:	bf00      	nop
9000be04:	9000c335 	.word	0x9000c335
9000be08:	9000c5ad 	.word	0x9000c5ad
9000be0c:	9000c62d 	.word	0x9000c62d
9000be10:	9000c361 	.word	0x9000c361

9000be14 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000be14:	6803      	ldr	r3, [r0, #0]
9000be16:	685a      	ldr	r2, [r3, #4]
9000be18:	f002 0203 	and.w	r2, r2, #3
9000be1c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000be1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000be22:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000be24:	f000 8094 	beq.w	9000bf50 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000be28:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000be2a:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000be2c:	f014 0403 	ands.w	r4, r4, #3
9000be30:	d172      	bne.n	9000bf18 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000be32:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000be34:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000be36:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000be38:	68da      	ldr	r2, [r3, #12]
9000be3a:	0c12      	lsrs	r2, r2, #16
9000be3c:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000be3e:	4a5f      	ldr	r2, [pc, #380]	; (9000bfbc <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000be40:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000be44:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000be48:	2600      	movs	r6, #0
9000be4a:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000be4e:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000be52:	f241 3488 	movw	r4, #5000	; 0x1388
9000be56:	e033      	b.n	9000bec0 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000be58:	f892 8001 	ldrb.w	r8, [r2, #1]
9000be5c:	fb0e f707 	mul.w	r7, lr, r7
9000be60:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000be62:	f811 8008 	ldrb.w	r8, [r1, r8]
9000be66:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000be6a:	2f64      	cmp	r7, #100	; 0x64
9000be6c:	d961      	bls.n	9000bf32 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000be6e:	fbb4 f7f7 	udiv	r7, r4, r7
9000be72:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000be74:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000be78:	2f01      	cmp	r7, #1
9000be7a:	d03d      	beq.n	9000bef8 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000be7c:	f892 8002 	ldrb.w	r8, [r2, #2]
9000be80:	fb0e f707 	mul.w	r7, lr, r7
9000be84:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000be86:	f811 8008 	ldrb.w	r8, [r1, r8]
9000be8a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000be8e:	2f64      	cmp	r7, #100	; 0x64
9000be90:	d94a      	bls.n	9000bf28 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000be92:	fbb4 f7f7 	udiv	r7, r4, r7
9000be96:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000be98:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000be9a:	2b01      	cmp	r3, #1
9000be9c:	d030      	beq.n	9000bf00 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000be9e:	78d7      	ldrb	r7, [r2, #3]
9000bea0:	fb0e f303 	mul.w	r3, lr, r3
9000bea4:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bea6:	5dcf      	ldrb	r7, [r1, r7]
9000bea8:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000beac:	2b64      	cmp	r3, #100	; 0x64
9000beae:	d94a      	bls.n	9000bf46 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000beb0:	fbb4 f3f3 	udiv	r3, r4, r3
9000beb4:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000beb6:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000beb8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000bebc:	4295      	cmp	r5, r2
9000bebe:	d025      	beq.n	9000bf0c <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000bec0:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bec4:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000bec6:	2f01      	cmp	r7, #1
9000bec8:	d02c      	beq.n	9000bf24 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000beca:	f892 8000 	ldrb.w	r8, [r2]
9000bece:	fb0e f707 	mul.w	r7, lr, r7
9000bed2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bed4:	f811 8008 	ldrb.w	r8, [r1, r8]
9000bed8:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000bedc:	2f64      	cmp	r7, #100	; 0x64
9000bede:	d92d      	bls.n	9000bf3c <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000bee0:	fbb4 f7f7 	udiv	r7, r4, r7
9000bee4:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bee6:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000beea:	2f01      	cmp	r7, #1
9000beec:	d1b4      	bne.n	9000be58 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000beee:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000bef2:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000bef4:	2f01      	cmp	r7, #1
9000bef6:	d1c1      	bne.n	9000be7c <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bef8:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000befa:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000befc:	2b01      	cmp	r3, #1
9000befe:	d1ce      	bne.n	9000be9e <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000bf00:	3204      	adds	r2, #4
        quality += 100UL;
9000bf02:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000bf04:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000bf08:	4295      	cmp	r5, r2
9000bf0a:	d1d9      	bne.n	9000bec0 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000bf0c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000bf0e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000bf10:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000bf14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000bf18:	f002 0203 	and.w	r2, r2, #3
9000bf1c:	2a03      	cmp	r2, #3
9000bf1e:	d14a      	bne.n	9000bfb6 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000bf20:	2430      	movs	r4, #48	; 0x30
9000bf22:	e016      	b.n	9000bf52 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000bf24:	3664      	adds	r6, #100	; 0x64
9000bf26:	e7de      	b.n	9000bee6 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000bf28:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000bf2c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000bf30:	e7b2      	b.n	9000be98 <HAL_JPEG_GetInfo.part.0+0x84>
9000bf32:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000bf36:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000bf3a:	e79b      	b.n	9000be74 <HAL_JPEG_GetInfo.part.0+0x60>
9000bf3c:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000bf40:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000bf44:	e7cf      	b.n	9000bee6 <HAL_JPEG_GetInfo.part.0+0xd2>
9000bf46:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000bf4a:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000bf4e:	e7b2      	b.n	9000beb6 <HAL_JPEG_GetInfo.part.0+0xa2>
9000bf50:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000bf52:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000bf54:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000bf58:	0c12      	lsrs	r2, r2, #16
9000bf5a:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000bf5e:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000bf60:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000bf62:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000bf64:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000bf66:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000bf68:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000bf6c:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000bf70:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000bf74:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000bf78:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000bf7c:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000bf80:	d108      	bne.n	9000bf94 <HAL_JPEG_GetInfo.part.0+0x180>
9000bf82:	2d01      	cmp	r5, #1
9000bf84:	d106      	bne.n	9000bf94 <HAL_JPEG_GetInfo.part.0+0x180>
9000bf86:	f016 0f0f 	tst.w	r6, #15
9000bf8a:	bf0c      	ite	eq
9000bf8c:	2401      	moveq	r4, #1
9000bf8e:	2400      	movne	r4, #0
9000bf90:	0064      	lsls	r4, r4, #1
9000bf92:	e754      	b.n	9000be3e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000bf94:	ea42 020c 	orr.w	r2, r2, ip
9000bf98:	f012 040f 	ands.w	r4, r2, #15
9000bf9c:	f43f af4f 	beq.w	9000be3e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000bfa0:	ea4c 0206 	orr.w	r2, ip, r6
9000bfa4:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000bfa8:	2d03      	cmp	r5, #3
9000bfaa:	bf08      	it	eq
9000bfac:	2a00      	cmpeq	r2, #0
9000bfae:	bf0c      	ite	eq
9000bfb0:	2401      	moveq	r4, #1
9000bfb2:	2400      	movne	r4, #0
9000bfb4:	e743      	b.n	9000be3e <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000bfb6:	2001      	movs	r0, #1
}
9000bfb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000bfbc:	9002d374 	.word	0x9002d374

9000bfc0 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000bfc0:	2800      	cmp	r0, #0
9000bfc2:	f000 810b 	beq.w	9000c1dc <HAL_JPEG_Init+0x21c>
{
9000bfc6:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000bfc8:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000bfcc:	4604      	mov	r4, r0
9000bfce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000bfd2:	2b00      	cmp	r3, #0
9000bfd4:	f000 80fd 	beq.w	9000c1d2 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000bfd8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000bfda:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000bfdc:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000bfde:	4880      	ldr	r0, [pc, #512]	; (9000c1e0 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000bfe0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000bfe4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000bfe6:	f041 0101 	orr.w	r1, r1, #1
9000bfea:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000bfec:	6811      	ldr	r1, [r2, #0]
9000bfee:	f021 0101 	bic.w	r1, r1, #1
9000bff2:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000bff4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000bff6:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000bffa:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000bffc:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000bffe:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000c002:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000c004:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c006:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000c00a:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c00c:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000c00e:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000c012:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c014:	4973      	ldr	r1, [pc, #460]	; (9000c1e4 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c016:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c018:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000c01a:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c01c:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c020:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000c024:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000c028:	4b6f      	ldr	r3, [pc, #444]	; (9000c1e8 <HAL_JPEG_Init+0x228>)
9000c02a:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000c02e:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c032:	486e      	ldr	r0, [pc, #440]	; (9000c1ec <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c034:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c038:	4b6d      	ldr	r3, [pc, #436]	; (9000c1f0 <HAL_JPEG_Init+0x230>)
9000c03a:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000c03e:	496d      	ldr	r1, [pc, #436]	; (9000c1f4 <HAL_JPEG_Init+0x234>)
9000c040:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c044:	4b6c      	ldr	r3, [pc, #432]	; (9000c1f8 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c046:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c04a:	486c      	ldr	r0, [pc, #432]	; (9000c1fc <HAL_JPEG_Init+0x23c>)
9000c04c:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000c050:	496b      	ldr	r1, [pc, #428]	; (9000c200 <HAL_JPEG_Init+0x240>)
9000c052:	4b6c      	ldr	r3, [pc, #432]	; (9000c204 <HAL_JPEG_Init+0x244>)
9000c054:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000c058:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000c05c:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c060:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000c064:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000c068:	4967      	ldr	r1, [pc, #412]	; (9000c208 <HAL_JPEG_Init+0x248>)
9000c06a:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000c06c:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c070:	430b      	orrs	r3, r1
  *address = value;
9000c072:	4966      	ldr	r1, [pc, #408]	; (9000c20c <HAL_JPEG_Init+0x24c>)
9000c074:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000c078:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c07c:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000c080:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c082:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c086:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000c088:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c08c:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000c090:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c092:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c096:	ea43 030c 	orr.w	r3, r3, ip
9000c09a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c09e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c0a2:	d1eb      	bne.n	9000c07c <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000c0a4:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c0a8:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000c0ac:	4856      	ldr	r0, [pc, #344]	; (9000c208 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c0ae:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000c0b0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000c0b2:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000c0b6:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000c0ba:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c0be:	4003      	ands	r3, r0
  *address = value;
9000c0c0:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c0c4:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000c0c8:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000c0cc:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c0d0:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000c0d4:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c0d8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000c0da:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c0de:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000c0e2:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c0e6:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c0e8:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c0ea:	4b49      	ldr	r3, [pc, #292]	; (9000c210 <HAL_JPEG_Init+0x250>)
  *address = value;
9000c0ec:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c0f0:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c0f4:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000c0f8:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000c0fc:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000c100:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c104:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000c106:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000c10a:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000c10e:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000c112:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c114:	483f      	ldr	r0, [pc, #252]	; (9000c214 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c116:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c118:	4b3f      	ldr	r3, [pc, #252]	; (9000c218 <HAL_JPEG_Init+0x258>)
  *address = value;
9000c11a:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c11e:	493f      	ldr	r1, [pc, #252]	; (9000c21c <HAL_JPEG_Init+0x25c>)
9000c120:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000c124:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c128:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000c12c:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000c130:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c134:	493a      	ldr	r1, [pc, #232]	; (9000c220 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000c136:	b29b      	uxth	r3, r3
9000c138:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c13c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c140:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c144:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000c148:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c14a:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c14e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000c150:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c154:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000c158:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c15a:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000c15e:	ea43 030e 	orr.w	r3, r3, lr
9000c162:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c166:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c16a:	d1eb      	bne.n	9000c144 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000c16c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000c170:	4926      	ldr	r1, [pc, #152]	; (9000c20c <HAL_JPEG_Init+0x24c>)
9000c172:	4620      	mov	r0, r4
9000c174:	f7ff fd3a 	bl	9000bbec <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c178:	b118      	cbz	r0, 9000c182 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c17a:	2301      	movs	r3, #1
    return HAL_ERROR;
9000c17c:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c17e:	6523      	str	r3, [r4, #80]	; 0x50
}
9000c180:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000c182:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000c184:	4620      	mov	r0, r4
9000c186:	4926      	ldr	r1, [pc, #152]	; (9000c220 <HAL_JPEG_Init+0x260>)
9000c188:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000c18c:	f7ff fd2e 	bl	9000bbec <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c190:	2800      	cmp	r0, #0
9000c192:	d1f2      	bne.n	9000c17a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000c194:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000c196:	4620      	mov	r0, r4
9000c198:	4922      	ldr	r1, [pc, #136]	; (9000c224 <HAL_JPEG_Init+0x264>)
9000c19a:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000c19e:	f7ff fc7b 	bl	9000ba98 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000c1a2:	2800      	cmp	r0, #0
9000c1a4:	d1e9      	bne.n	9000c17a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000c1a6:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000c1a8:	4620      	mov	r0, r4
9000c1aa:	491f      	ldr	r1, [pc, #124]	; (9000c228 <HAL_JPEG_Init+0x268>)
9000c1ac:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000c1b0:	f7ff fc72 	bl	9000ba98 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000c1b4:	2800      	cmp	r0, #0
9000c1b6:	d1e0      	bne.n	9000c17a <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c1b8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c1ba:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c1bc:	6853      	ldr	r3, [r2, #4]
9000c1be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c1c2:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000c1c4:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000c1c6:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c1c8:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000c1cc:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000c1ce:	6560      	str	r0, [r4, #84]	; 0x54
}
9000c1d0:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000c1d2:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000c1d6:	f7f6 ff11 	bl	90002ffc <HAL_JPEG_MspInit>
9000c1da:	e6fd      	b.n	9000bfd8 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000c1dc:	2001      	movs	r0, #1
}
9000c1de:	4770      	bx	lr
9000c1e0:	9002d334 	.word	0x9002d334
9000c1e4:	9002d2bc 	.word	0x9002d2bc
9000c1e8:	01050100 	.word	0x01050100
9000c1ec:	0b0a0908 	.word	0x0b0a0908
9000c1f0:	07060504 	.word	0x07060504
9000c1f4:	03020100 	.word	0x03020100
9000c1f8:	7d010000 	.word	0x7d010000
9000c1fc:	04040505 	.word	0x04040505
9000c200:	03040203 	.word	0x03040203
9000c204:	03010200 	.word	0x03010200
9000c208:	ffff0000 	.word	0xffff0000
9000c20c:	9002d208 	.word	0x9002d208
9000c210:	09080706 	.word	0x09080706
9000c214:	01000404 	.word	0x01000404
9000c218:	04040201 	.word	0x04040201
9000c21c:	05070403 	.word	0x05070403
9000c220:	9002d154 	.word	0x9002d154
9000c224:	9002d318 	.word	0x9002d318
9000c228:	9002d2fc 	.word	0x9002d2fc

9000c22c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c22c:	2b00      	cmp	r3, #0
9000c22e:	bf18      	it	ne
9000c230:	2900      	cmpne	r1, #0
9000c232:	d03b      	beq.n	9000c2ac <HAL_JPEG_Decode_DMA+0x80>
{
9000c234:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c236:	fab0 f580 	clz	r5, r0
9000c23a:	4604      	mov	r4, r0
9000c23c:	096d      	lsrs	r5, r5, #5
9000c23e:	b330      	cbz	r0, 9000c28e <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000c240:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000c244:	f1bc 0f01 	cmp.w	ip, #1
9000c248:	d02e      	beq.n	9000c2a8 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c24a:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000c24e:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c252:	45f4      	cmp	ip, lr
9000c254:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000c258:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c25c:	d119      	bne.n	9000c292 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000c25e:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000c260:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000c264:	9b04      	ldr	r3, [sp, #16]
9000c266:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000c268:	2304      	movs	r3, #4
9000c26a:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000c26e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c270:	f023 030f 	bic.w	r3, r3, #15
9000c274:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000c276:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c278:	f043 030e 	orr.w	r3, r3, #14
9000c27c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000c27e:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000c280:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000c282:	f7ff fd3d 	bl	9000bd00 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000c286:	f7ff fd79 	bl	9000bd7c <JPEG_DMA_StartProcess>
9000c28a:	b930      	cbnz	r0, 9000c29a <HAL_JPEG_Decode_DMA+0x6e>
}
9000c28c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c28e:	2001      	movs	r0, #1
}
9000c290:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000c292:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000c294:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000c298:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c29a:	2306      	movs	r3, #6
      return HAL_ERROR;
9000c29c:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000c29e:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c2a2:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000c2a6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000c2a8:	2002      	movs	r0, #2
}
9000c2aa:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c2ac:	2001      	movs	r0, #1
}
9000c2ae:	4770      	bx	lr

9000c2b0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c2b0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c2b2:	f003 030c 	and.w	r3, r3, #12
9000c2b6:	2b0c      	cmp	r3, #12
9000c2b8:	d01a      	beq.n	9000c2f0 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c2ba:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c2bc:	f003 030c 	and.w	r3, r3, #12
9000c2c0:	2b08      	cmp	r3, #8
9000c2c2:	d001      	beq.n	9000c2c8 <HAL_JPEG_Pause+0x18>
}
9000c2c4:	2000      	movs	r0, #0
9000c2c6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c2c8:	07ca      	lsls	r2, r1, #31
9000c2ca:	d41f      	bmi.n	9000c30c <HAL_JPEG_Pause+0x5c>
9000c2cc:	f04f 3cff 	mov.w	ip, #4294967295
9000c2d0:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c2d4:	078b      	lsls	r3, r1, #30
9000c2d6:	d504      	bpl.n	9000c2e2 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c2d8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c2da:	4694      	mov	ip, r2
9000c2dc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c2e0:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c2e2:	6802      	ldr	r2, [r0, #0]
}
9000c2e4:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c2e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c2e8:	ea03 030c 	and.w	r3, r3, ip
9000c2ec:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c2ee:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c2f0:	07cb      	lsls	r3, r1, #31
9000c2f2:	d503      	bpl.n	9000c2fc <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c2f4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c2f6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c2fa:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c2fc:	0789      	lsls	r1, r1, #30
9000c2fe:	d5e1      	bpl.n	9000c2c4 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c300:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c302:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c306:	6543      	str	r3, [r0, #84]	; 0x54
}
9000c308:	2000      	movs	r0, #0
9000c30a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c30c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c30e:	f06f 0c06 	mvn.w	ip, #6
9000c312:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000c316:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c31a:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c31c:	e7da      	b.n	9000c2d4 <HAL_JPEG_Pause+0x24>
9000c31e:	bf00      	nop

9000c320 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000c320:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000c322:	6282      	str	r2, [r0, #40]	; 0x28
}
9000c324:	4770      	bx	lr
9000c326:	bf00      	nop

9000c328 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000c328:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000c32a:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000c32c:	4770      	bx	lr
9000c32e:	bf00      	nop

9000c330 <HAL_JPEG_EncodeCpltCallback>:
9000c330:	4770      	bx	lr
9000c332:	bf00      	nop

9000c334 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c334:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c336:	2101      	movs	r1, #1
{
9000c338:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c33a:	6803      	ldr	r3, [r0, #0]
9000c33c:	681a      	ldr	r2, [r3, #0]
9000c33e:	f022 0201 	bic.w	r2, r2, #1
9000c342:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c344:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c346:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c34a:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c34c:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c350:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000c352:	f043 0304 	orr.w	r3, r3, #4
9000c356:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000c358:	f7f5 f9fc 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000c35c:	bd08      	pop	{r3, pc}
9000c35e:	bf00      	nop

9000c360 <JPEG_MDMAInCpltCallback>:
{
9000c360:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c362:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c364:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c368:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c36a:	6822      	ldr	r2, [r4, #0]
9000c36c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c36e:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000c372:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c374:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c376:	400b      	ands	r3, r1
9000c378:	2b0c      	cmp	r3, #12
9000c37a:	d001      	beq.n	9000c380 <JPEG_MDMAInCpltCallback+0x20>
}
9000c37c:	b003      	add	sp, #12
9000c37e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c380:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c382:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c384:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c386:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c388:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c38a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c38e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c390:	1a9b      	subs	r3, r3, r2
9000c392:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c394:	6a21      	ldr	r1, [r4, #32]
9000c396:	f7f5 f969 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000c39a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c39c:	42ab      	cmp	r3, r5
9000c39e:	d311      	bcc.n	9000c3c4 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000c3a0:	b305      	cbz	r5, 9000c3e4 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c3a2:	fbb3 f2f5 	udiv	r2, r3, r5
9000c3a6:	fb05 3212 	mls	r2, r5, r2, r3
9000c3aa:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c3ac:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c3ae:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c3b0:	04d1      	lsls	r1, r2, #19
9000c3b2:	d400      	bmi.n	9000c3b6 <JPEG_MDMAInCpltCallback+0x56>
9000c3b4:	b963      	cbnz	r3, 9000c3d0 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c3b6:	6822      	ldr	r2, [r4, #0]
9000c3b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c3ba:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000c3be:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c3c0:	b003      	add	sp, #12
9000c3c2:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000c3c4:	b1cb      	cbz	r3, 9000c3fa <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000c3c6:	0798      	lsls	r0, r3, #30
9000c3c8:	d119      	bne.n	9000c3fe <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c3ca:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c3cc:	04d2      	lsls	r2, r2, #19
9000c3ce:	d4f2      	bmi.n	9000c3b6 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c3d0:	6822      	ldr	r2, [r4, #0]
9000c3d2:	2501      	movs	r5, #1
9000c3d4:	69a1      	ldr	r1, [r4, #24]
9000c3d6:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c3d8:	3240      	adds	r2, #64	; 0x40
9000c3da:	9500      	str	r5, [sp, #0]
9000c3dc:	f001 f8b0 	bl	9000d540 <HAL_MDMA_Start_IT>
9000c3e0:	2800      	cmp	r0, #0
9000c3e2:	d0e8      	beq.n	9000c3b6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c3e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c3e6:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000c3e8:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c3ea:	f043 0304 	orr.w	r3, r3, #4
9000c3ee:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c3f0:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000c3f4:	f7f5 f9ae 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000c3f8:	e7c0      	b.n	9000c37c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c3fa:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c3fc:	e7db      	b.n	9000c3b6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000c3fe:	f023 0303 	bic.w	r3, r3, #3
9000c402:	3304      	adds	r3, #4
9000c404:	e7d2      	b.n	9000c3ac <JPEG_MDMAInCpltCallback+0x4c>
9000c406:	bf00      	nop

9000c408 <JPEG_DMA_PollResidualData>:
{
9000c408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c40a:	6802      	ldr	r2, [r0, #0]
9000c40c:	2610      	movs	r6, #16
{
9000c40e:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c410:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c412:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c416:	d11d      	bne.n	9000c454 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c418:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c41a:	06df      	lsls	r7, r3, #27
9000c41c:	d51a      	bpl.n	9000c454 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000c41e:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c420:	69e7      	ldr	r7, [r4, #28]
9000c422:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c424:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c426:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c428:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c42a:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c42c:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000c42e:	69e2      	ldr	r2, [r4, #28]
9000c430:	443a      	add	r2, r7
9000c432:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c434:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c436:	69e2      	ldr	r2, [r4, #28]
9000c438:	4402      	add	r2, r0
9000c43a:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c43c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c43e:	69e2      	ldr	r2, [r4, #28]
9000c440:	440a      	add	r2, r1
9000c442:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000c444:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c446:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000c448:	3304      	adds	r3, #4
9000c44a:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c44c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c44e:	4293      	cmp	r3, r2
9000c450:	d021      	beq.n	9000c496 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c452:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000c454:	3e01      	subs	r6, #1
9000c456:	d1db      	bne.n	9000c410 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000c458:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c45a:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c45c:	06d8      	lsls	r0, r3, #27
9000c45e:	d501      	bpl.n	9000c464 <JPEG_DMA_PollResidualData+0x5c>
9000c460:	048b      	lsls	r3, r1, #18
9000c462:	d417      	bmi.n	9000c494 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c464:	6813      	ldr	r3, [r2, #0]
9000c466:	f023 0301 	bic.w	r3, r3, #1
9000c46a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000c46c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c46e:	b9eb      	cbnz	r3, 9000c4ac <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000c470:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c472:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c474:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c476:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c478:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c47c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c480:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c484:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c486:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c488:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c48a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c48e:	d00a      	beq.n	9000c4a6 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c490:	f7ff ff4e 	bl	9000c330 <HAL_JPEG_EncodeCpltCallback>
}
9000c494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c496:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c498:	4620      	mov	r0, r4
9000c49a:	69e1      	ldr	r1, [r4, #28]
9000c49c:	f7f5 f906 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c4a0:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000c4a2:	6265      	str	r5, [r4, #36]	; 0x24
9000c4a4:	e7d6      	b.n	9000c454 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c4a6:	f7f5 f957 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c4aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c4ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c4ae:	4620      	mov	r0, r4
9000c4b0:	69e1      	ldr	r1, [r4, #28]
9000c4b2:	f7f5 f8fb 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c4b6:	2300      	movs	r3, #0
9000c4b8:	6263      	str	r3, [r4, #36]	; 0x24
9000c4ba:	e7d9      	b.n	9000c470 <JPEG_DMA_PollResidualData+0x68>

9000c4bc <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000c4bc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c4be:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000c4c2:	d028      	beq.n	9000c516 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c4c4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c4c6:	f003 030c 	and.w	r3, r3, #12
9000c4ca:	2b0c      	cmp	r3, #12
{
9000c4cc:	b570      	push	{r4, r5, r6, lr}
9000c4ce:	4604      	mov	r4, r0
9000c4d0:	b082      	sub	sp, #8
9000c4d2:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c4d4:	d007      	beq.n	9000c4e6 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c4d6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c4d8:	f003 030c 	and.w	r3, r3, #12
9000c4dc:	2b08      	cmp	r3, #8
9000c4de:	d037      	beq.n	9000c550 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000c4e0:	2000      	movs	r0, #0
}
9000c4e2:	b002      	add	sp, #8
9000c4e4:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c4e6:	07c8      	lsls	r0, r1, #31
9000c4e8:	d417      	bmi.n	9000c51a <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c4ea:	07a9      	lsls	r1, r5, #30
9000c4ec:	d5f8      	bpl.n	9000c4e0 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c4ee:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c4f0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c4f4:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c4f6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c4f8:	041a      	lsls	r2, r3, #16
9000c4fa:	d453      	bmi.n	9000c5a4 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c4fc:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c4fe:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000c500:	2a00      	cmp	r2, #0
9000c502:	d13e      	bne.n	9000c582 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c504:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c506:	2206      	movs	r2, #6
          return HAL_ERROR;
9000c508:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c50a:	f043 0304 	orr.w	r3, r3, #4
9000c50e:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c510:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000c514:	e7e5      	b.n	9000c4e2 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000c516:	2001      	movs	r0, #1
}
9000c518:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c51a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c51c:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c51e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c522:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c524:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000c526:	2a00      	cmp	r2, #0
9000c528:	d0ec      	beq.n	9000c504 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000c52a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c52c:	fbb3 f1f2 	udiv	r1, r3, r2
9000c530:	fb02 3211 	mls	r2, r2, r1, r3
9000c534:	1a9b      	subs	r3, r3, r2
9000c536:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000c538:	2b00      	cmp	r3, #0
9000c53a:	d0d6      	beq.n	9000c4ea <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c53c:	6822      	ldr	r2, [r4, #0]
9000c53e:	2601      	movs	r6, #1
9000c540:	3240      	adds	r2, #64	; 0x40
9000c542:	9600      	str	r6, [sp, #0]
9000c544:	69a1      	ldr	r1, [r4, #24]
9000c546:	f000 fffb 	bl	9000d540 <HAL_MDMA_Start_IT>
9000c54a:	2800      	cmp	r0, #0
9000c54c:	d0cd      	beq.n	9000c4ea <HAL_JPEG_Resume+0x2e>
9000c54e:	e7d9      	b.n	9000c504 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c550:	f011 0101 	ands.w	r1, r1, #1
9000c554:	d013      	beq.n	9000c57e <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c556:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c558:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c55a:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c55c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c560:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c562:	07ab      	lsls	r3, r5, #30
9000c564:	d504      	bpl.n	9000c570 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c566:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000c568:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c56a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c56e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c570:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000c572:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c574:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c576:	430b      	orrs	r3, r1
9000c578:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c57a:	b002      	add	sp, #8
9000c57c:	bd70      	pop	{r4, r5, r6, pc}
9000c57e:	2228      	movs	r2, #40	; 0x28
9000c580:	e7ef      	b.n	9000c562 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c582:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c584:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c586:	fbb3 f1f2 	udiv	r1, r3, r2
9000c58a:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c58e:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c590:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c592:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c594:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c596:	9500      	str	r5, [sp, #0]
9000c598:	69e2      	ldr	r2, [r4, #28]
9000c59a:	f000 ffd1 	bl	9000d540 <HAL_MDMA_Start_IT>
9000c59e:	2800      	cmp	r0, #0
9000c5a0:	d09e      	beq.n	9000c4e0 <HAL_JPEG_Resume+0x24>
9000c5a2:	e7af      	b.n	9000c504 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000c5a4:	4620      	mov	r0, r4
9000c5a6:	f7ff ff2f 	bl	9000c408 <JPEG_DMA_PollResidualData>
9000c5aa:	e799      	b.n	9000c4e0 <HAL_JPEG_Resume+0x24>

9000c5ac <JPEG_MDMAOutCpltCallback>:
{
9000c5ac:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c5ae:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c5b0:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c5b4:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c5b6:	6823      	ldr	r3, [r4, #0]
9000c5b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c5ba:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c5be:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c5c0:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c5c2:	400a      	ands	r2, r1
9000c5c4:	2a0c      	cmp	r2, #12
9000c5c6:	d001      	beq.n	9000c5cc <JPEG_MDMAOutCpltCallback+0x20>
}
9000c5c8:	b003      	add	sp, #12
9000c5ca:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000c5cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c5ce:	0692      	lsls	r2, r2, #26
9000c5d0:	d505      	bpl.n	9000c5de <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c5d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c5d4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c5d8:	631a      	str	r2, [r3, #48]	; 0x30
}
9000c5da:	b003      	add	sp, #12
9000c5dc:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c5de:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5e0:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c5e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c5e4:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5e6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c5e8:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000c5ec:	1a9b      	subs	r3, r3, r2
9000c5ee:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5f0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c5f2:	f7f5 f85b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c5f6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c5f8:	049b      	lsls	r3, r3, #18
9000c5fa:	d501      	bpl.n	9000c600 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c5fc:	6823      	ldr	r3, [r4, #0]
9000c5fe:	e7e8      	b.n	9000c5d2 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c600:	6821      	ldr	r1, [r4, #0]
9000c602:	2501      	movs	r5, #1
9000c604:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c606:	69e2      	ldr	r2, [r4, #28]
9000c608:	3144      	adds	r1, #68	; 0x44
9000c60a:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c60c:	9500      	str	r5, [sp, #0]
9000c60e:	f000 ff97 	bl	9000d540 <HAL_MDMA_Start_IT>
9000c612:	2800      	cmp	r0, #0
9000c614:	d0f2      	beq.n	9000c5fc <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c616:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c618:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000c61a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c61c:	f043 0304 	orr.w	r3, r3, #4
9000c620:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c622:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000c626:	f7f5 f895 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000c62a:	e7cd      	b.n	9000c5c8 <JPEG_MDMAOutCpltCallback+0x1c>

9000c62c <JPEG_MDMAOutAbortCallback>:
{
9000c62c:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c62e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c630:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c632:	041a      	lsls	r2, r3, #16
9000c634:	d400      	bmi.n	9000c638 <JPEG_MDMAOutAbortCallback+0xc>
}
9000c636:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c638:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c63a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c63c:	681b      	ldr	r3, [r3, #0]
9000c63e:	695b      	ldr	r3, [r3, #20]
9000c640:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000c644:	1ad3      	subs	r3, r2, r3
9000c646:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c648:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c64a:	429a      	cmp	r2, r3
9000c64c:	d025      	beq.n	9000c69a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000c64e:	6822      	ldr	r2, [r4, #0]
9000c650:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000c652:	f015 0510 	ands.w	r5, r5, #16
9000c656:	d118      	bne.n	9000c68a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000c658:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c65a:	bb4b      	cbnz	r3, 9000c6b0 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c65c:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000c65e:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c660:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c662:	f023 0301 	bic.w	r3, r3, #1
9000c666:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000c668:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c66a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c66c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c670:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c674:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c678:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c67a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c67c:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c67e:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c682:	d012      	beq.n	9000c6aa <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c684:	f7ff fe54 	bl	9000c330 <HAL_JPEG_EncodeCpltCallback>
}
9000c688:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c68a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c68c:	049b      	lsls	r3, r3, #18
9000c68e:	d4d2      	bmi.n	9000c636 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000c690:	4620      	mov	r0, r4
}
9000c692:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000c696:	f7ff beb7 	b.w	9000c408 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c69a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c69c:	4620      	mov	r0, r4
9000c69e:	69e1      	ldr	r1, [r4, #28]
9000c6a0:	f7f5 f804 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000c6a4:	2300      	movs	r3, #0
9000c6a6:	6263      	str	r3, [r4, #36]	; 0x24
9000c6a8:	e7d1      	b.n	9000c64e <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c6aa:	f7f5 f855 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c6ae:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c6b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c6b2:	4620      	mov	r0, r4
9000c6b4:	69e1      	ldr	r1, [r4, #28]
9000c6b6:	f7f4 fff9 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c6ba:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c6bc:	6265      	str	r5, [r4, #36]	; 0x24
9000c6be:	e7cd      	b.n	9000c65c <JPEG_MDMAOutAbortCallback+0x30>

9000c6c0 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c6c0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c6c2:	f003 0303 	and.w	r3, r3, #3
9000c6c6:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c6c8:	6803      	ldr	r3, [r0, #0]
{
9000c6ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c6ce:	4604      	mov	r4, r0
9000c6d0:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c6d2:	d01f      	beq.n	9000c714 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000c6d4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c6d6:	04d7      	lsls	r7, r2, #19
9000c6d8:	d407      	bmi.n	9000c6ea <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000c6da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c6dc:	0796      	lsls	r6, r2, #30
9000c6de:	f100 811d 	bmi.w	9000c91c <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000c6e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c6e4:	0750      	lsls	r0, r2, #29
9000c6e6:	f100 81b1 	bmi.w	9000ca4c <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c6ea:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c6ec:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c6f0:	d107      	bne.n	9000c702 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000c6f2:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000c6f4:	f016 0608 	ands.w	r6, r6, #8
9000c6f8:	d14c      	bne.n	9000c794 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c6fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c6fc:	06d2      	lsls	r2, r2, #27
9000c6fe:	f100 81e3 	bmi.w	9000cac8 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c702:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c704:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000c708:	2a20      	cmp	r2, #32
9000c70a:	d01a      	beq.n	9000c742 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000c70c:	2000      	movs	r0, #0
}
9000c70e:	b002      	add	sp, #8
9000c710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c714:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c716:	0652      	lsls	r2, r2, #25
9000c718:	d5dc      	bpl.n	9000c6d4 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000c71a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000c71c:	9101      	str	r1, [sp, #4]
9000c71e:	f7ff fb79 	bl	9000be14 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000c722:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c724:	9901      	ldr	r1, [sp, #4]
9000c726:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000c728:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c72a:	f7f4 ff69 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000c72e:	6823      	ldr	r3, [r4, #0]
9000c730:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c732:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000c736:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000c738:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c73a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000c73e:	639a      	str	r2, [r3, #56]	; 0x38
9000c740:	e7c8      	b.n	9000c6d4 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c742:	681a      	ldr	r2, [r3, #0]
9000c744:	f022 0201 	bic.w	r2, r2, #1
9000c748:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c74a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c74c:	f002 020c 	and.w	r2, r2, #12
9000c750:	2a08      	cmp	r2, #8
9000c752:	f000 81e6 	beq.w	9000cb22 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c756:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c758:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c75c:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000c75e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c760:	2b00      	cmp	r3, #0
9000c762:	f040 81e3 	bne.w	9000cb2c <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000c766:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c768:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c76a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c76c:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c76e:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c772:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c774:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000c778:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c77c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c77e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c780:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c784:	f000 81c9 	beq.w	9000cb1a <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c788:	f7ff fdd2 	bl	9000c330 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000c78c:	4628      	mov	r0, r5
}
9000c78e:	b002      	add	sp, #8
9000c790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000c794:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c796:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000c798:	3220      	adds	r2, #32
9000c79a:	4296      	cmp	r6, r2
9000c79c:	f0c0 81e4 	bcc.w	9000cb68 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000c7a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c7a2:	69e1      	ldr	r1, [r4, #28]
9000c7a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c7a6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c7a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7aa:	69e2      	ldr	r2, [r4, #28]
9000c7ac:	440a      	add	r2, r1
9000c7ae:	0a19      	lsrs	r1, r3, #8
9000c7b0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c7b2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7b4:	69e2      	ldr	r2, [r4, #28]
9000c7b6:	440a      	add	r2, r1
9000c7b8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c7ba:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c7bc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c7be:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7c0:	69e2      	ldr	r2, [r4, #28]
9000c7c2:	440a      	add	r2, r1
9000c7c4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c7c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c7c8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c7ca:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c7cc:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c7ce:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c7d0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c7d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c7d4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c7d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7d8:	69e2      	ldr	r2, [r4, #28]
9000c7da:	440a      	add	r2, r1
9000c7dc:	0a19      	lsrs	r1, r3, #8
9000c7de:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c7e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7e2:	69e2      	ldr	r2, [r4, #28]
9000c7e4:	440a      	add	r2, r1
9000c7e6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c7e8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c7ea:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c7ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c7ee:	69e2      	ldr	r2, [r4, #28]
9000c7f0:	440a      	add	r2, r1
9000c7f2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c7f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c7f6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c7f8:	3304      	adds	r3, #4
9000c7fa:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c7fc:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c7fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c800:	69e1      	ldr	r1, [r4, #28]
9000c802:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c804:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c806:	69e2      	ldr	r2, [r4, #28]
9000c808:	440a      	add	r2, r1
9000c80a:	0a19      	lsrs	r1, r3, #8
9000c80c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c80e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c810:	69e2      	ldr	r2, [r4, #28]
9000c812:	440a      	add	r2, r1
9000c814:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c816:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c818:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c81a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c81c:	69e2      	ldr	r2, [r4, #28]
9000c81e:	440a      	add	r2, r1
9000c820:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c822:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c824:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c826:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c828:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c82a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c82c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c82e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c830:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c832:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c834:	69e2      	ldr	r2, [r4, #28]
9000c836:	440a      	add	r2, r1
9000c838:	0a19      	lsrs	r1, r3, #8
9000c83a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c83c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c83e:	69e2      	ldr	r2, [r4, #28]
9000c840:	440a      	add	r2, r1
9000c842:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c844:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c846:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c848:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c84a:	69e2      	ldr	r2, [r4, #28]
9000c84c:	440a      	add	r2, r1
9000c84e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c850:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c852:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c854:	3304      	adds	r3, #4
9000c856:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c858:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c85a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c85c:	69e1      	ldr	r1, [r4, #28]
9000c85e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c860:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c862:	69e2      	ldr	r2, [r4, #28]
9000c864:	440a      	add	r2, r1
9000c866:	0a19      	lsrs	r1, r3, #8
9000c868:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c86a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c86c:	69e2      	ldr	r2, [r4, #28]
9000c86e:	440a      	add	r2, r1
9000c870:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c872:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c874:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c876:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c878:	69e2      	ldr	r2, [r4, #28]
9000c87a:	440a      	add	r2, r1
9000c87c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c87e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c880:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c882:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c884:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c886:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c888:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c88a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c88c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c88e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c890:	69e2      	ldr	r2, [r4, #28]
9000c892:	440a      	add	r2, r1
9000c894:	0a19      	lsrs	r1, r3, #8
9000c896:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c898:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c89a:	69e2      	ldr	r2, [r4, #28]
9000c89c:	440a      	add	r2, r1
9000c89e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8a0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8a2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8a6:	69e2      	ldr	r2, [r4, #28]
9000c8a8:	440a      	add	r2, r1
9000c8aa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c8ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c8ae:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c8b0:	3304      	adds	r3, #4
9000c8b2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c8b4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8b8:	69e1      	ldr	r1, [r4, #28]
9000c8ba:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c8bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8be:	69e2      	ldr	r2, [r4, #28]
9000c8c0:	440a      	add	r2, r1
9000c8c2:	0a19      	lsrs	r1, r3, #8
9000c8c4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8c8:	69e2      	ldr	r2, [r4, #28]
9000c8ca:	440a      	add	r2, r1
9000c8cc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8ce:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8d0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8d2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8d4:	69e2      	ldr	r2, [r4, #28]
9000c8d6:	440a      	add	r2, r1
9000c8d8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c8da:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c8dc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c8de:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8e0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c8e2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c8e4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8e8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c8ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8ec:	69e2      	ldr	r2, [r4, #28]
9000c8ee:	440a      	add	r2, r1
9000c8f0:	0a19      	lsrs	r1, r3, #8
9000c8f2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8f6:	69e2      	ldr	r2, [r4, #28]
9000c8f8:	440a      	add	r2, r1
9000c8fa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8fc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8fe:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c900:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c902:	69e2      	ldr	r2, [r4, #28]
9000c904:	440a      	add	r2, r1
9000c906:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c908:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c90a:	3304      	adds	r3, #4
9000c90c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000c90e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c910:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c912:	429a      	cmp	r2, r3
9000c914:	f000 82ae 	beq.w	9000ce74 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c918:	6823      	ldr	r3, [r4, #0]
9000c91a:	e6f2      	b.n	9000c702 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000c91c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c91e:	2a00      	cmp	r2, #0
9000c920:	f000 810c 	beq.w	9000cb3c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c924:	6a21      	ldr	r1, [r4, #32]
9000c926:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c928:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000c92a:	f240 81a4 	bls.w	9000cc76 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000c92e:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000c930:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000c932:	04cd      	lsls	r5, r1, #19
9000c934:	f53f aed9 	bmi.w	9000c6ea <JPEG_Process+0x2a>
9000c938:	2a00      	cmp	r2, #0
9000c93a:	f43f aed6 	beq.w	9000c6ea <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000c93e:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000c940:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000c944:	f240 8203 	bls.w	9000cd4e <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c948:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000c94a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c94c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c94e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c950:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c952:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c954:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c956:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c958:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c95c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c95e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c962:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c964:	6a21      	ldr	r1, [r4, #32]
9000c966:	3104      	adds	r1, #4
9000c968:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c96a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c96c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c96e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c970:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c972:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c974:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c976:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c978:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c97c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c97e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c982:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c984:	6a21      	ldr	r1, [r4, #32]
9000c986:	3104      	adds	r1, #4
9000c988:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c98a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c98c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c98e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c990:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c992:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c994:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c996:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c998:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c99c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c99e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9a2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c9a4:	6a21      	ldr	r1, [r4, #32]
9000c9a6:	3104      	adds	r1, #4
9000c9a8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c9aa:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9ac:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9ae:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9b0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9b2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9b4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c9b6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9b8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c9bc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9be:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9c2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c9c4:	6a21      	ldr	r1, [r4, #32]
9000c9c6:	3104      	adds	r1, #4
9000c9c8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c9ca:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9cc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9ce:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9d0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9d2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9d4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c9d6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9d8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c9dc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9de:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9e2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000c9e4:	6a21      	ldr	r1, [r4, #32]
9000c9e6:	3104      	adds	r1, #4
9000c9e8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000c9ea:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9ec:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000c9ee:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9f0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9f2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9f4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000c9f6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000c9f8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000c9fc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000c9fe:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca02:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ca04:	6a21      	ldr	r1, [r4, #32]
9000ca06:	3104      	adds	r1, #4
9000ca08:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ca0a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca0c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca0e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca10:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca12:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca14:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ca16:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca18:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ca1c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca1e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca22:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ca24:	6a21      	ldr	r1, [r4, #32]
9000ca26:	3104      	adds	r1, #4
9000ca28:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ca2a:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca2c:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca2e:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca30:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ca32:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca34:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca36:	7849      	ldrb	r1, [r1, #1]
9000ca38:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000ca3c:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca3e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca42:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ca44:	6a22      	ldr	r2, [r4, #32]
9000ca46:	3204      	adds	r2, #4
9000ca48:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000ca4a:	e64e      	b.n	9000c6ea <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ca4c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ca4e:	2a00      	cmp	r2, #0
9000ca50:	d074      	beq.n	9000cb3c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ca52:	6a21      	ldr	r1, [r4, #32]
9000ca54:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ca56:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ca58:	f200 8164 	bhi.w	9000cd24 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000ca5c:	428a      	cmp	r2, r1
9000ca5e:	f040 810c 	bne.w	9000cc7a <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ca62:	6a21      	ldr	r1, [r4, #32]
9000ca64:	4620      	mov	r0, r4
9000ca66:	f7f4 fe01 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ca6a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ca6c:	2a04      	cmp	r2, #4
9000ca6e:	d902      	bls.n	9000ca76 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ca70:	f022 0203 	bic.w	r2, r2, #3
9000ca74:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000ca76:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca78:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ca7a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ca7c:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000ca7e:	04c9      	lsls	r1, r1, #19
9000ca80:	f53f ae33 	bmi.w	9000c6ea <JPEG_Process+0x2a>
9000ca84:	2a00      	cmp	r2, #0
9000ca86:	f43f ae30 	beq.w	9000c6ea <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000ca8a:	0891      	lsrs	r1, r2, #2
9000ca8c:	f040 8203 	bne.w	9000ce96 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ca90:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ca92:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000ca94:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ca96:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000ca98:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ca9c:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000ca9e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000caa0:	d010      	beq.n	9000cac4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000caa2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000caa4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000caa6:	5c69      	ldrb	r1, [r5, r1]
9000caa8:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000caac:	6a21      	ldr	r1, [r4, #32]
9000caae:	f101 0101 	add.w	r1, r1, #1
9000cab2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cab4:	d106      	bne.n	9000cac4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cab6:	6a22      	ldr	r2, [r4, #32]
9000cab8:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000caba:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cabc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000cac0:	3201      	adds	r2, #1
9000cac2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000cac4:	6418      	str	r0, [r3, #64]	; 0x40
9000cac6:	e610      	b.n	9000c6ea <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000cac8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000caca:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cacc:	3204      	adds	r2, #4
9000cace:	4295      	cmp	r5, r2
9000cad0:	f0c0 80d5 	bcc.w	9000cc7e <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000cad4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cad6:	69e1      	ldr	r1, [r4, #28]
9000cad8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cada:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cadc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cade:	69e2      	ldr	r2, [r4, #28]
9000cae0:	440a      	add	r2, r1
9000cae2:	0a19      	lsrs	r1, r3, #8
9000cae4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cae6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cae8:	69e2      	ldr	r2, [r4, #28]
9000caea:	440a      	add	r2, r1
9000caec:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000caee:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000caf0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000caf2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000caf4:	69e2      	ldr	r2, [r4, #28]
9000caf6:	440a      	add	r2, r1
9000caf8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cafa:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cafc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000cafe:	3304      	adds	r3, #4
9000cb00:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cb02:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cb04:	429a      	cmp	r2, r3
9000cb06:	f47f af07 	bne.w	9000c918 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cb0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb0c:	4620      	mov	r0, r4
9000cb0e:	69e1      	ldr	r1, [r4, #28]
9000cb10:	f7f4 fdcc 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cb14:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cb16:	6266      	str	r6, [r4, #36]	; 0x24
9000cb18:	e5f3      	b.n	9000c702 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cb1a:	f7f4 fe1d 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000cb1e:	4628      	mov	r0, r5
9000cb20:	e5f5      	b.n	9000c70e <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cb22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cb24:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000cb28:	631a      	str	r2, [r3, #48]	; 0x30
9000cb2a:	e614      	b.n	9000c756 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cb2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb2e:	4620      	mov	r0, r4
9000cb30:	69e1      	ldr	r1, [r4, #28]
9000cb32:	f7f4 fdbb 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cb36:	2300      	movs	r3, #0
9000cb38:	6263      	str	r3, [r4, #36]	; 0x24
9000cb3a:	e614      	b.n	9000c766 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cb3c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cb3e:	f002 020c 	and.w	r2, r2, #12
9000cb42:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cb44:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cb46:	f000 80fd 	beq.w	9000cd44 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cb4a:	f002 020c 	and.w	r2, r2, #12
9000cb4e:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cb50:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cb52:	f47f adca 	bne.w	9000c6ea <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cb56:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cb5a:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cb5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cb5e:	f022 0206 	bic.w	r2, r2, #6
9000cb62:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cb64:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cb66:	e5c0      	b.n	9000c6ea <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cb68:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb6a:	4296      	cmp	r6, r2
9000cb6c:	f67f adc9 	bls.w	9000c702 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cb70:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cb72:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000cb74:	0880      	lsrs	r0, r0, #2
9000cb76:	d020      	beq.n	9000cbba <JPEG_Process+0x4fa>
9000cb78:	4629      	mov	r1, r5
9000cb7a:	e000      	b.n	9000cb7e <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000cb7c:	6823      	ldr	r3, [r4, #0]
9000cb7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cb80:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb82:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cb84:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cb86:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cb88:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cb8a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cb8c:	69e2      	ldr	r2, [r4, #28]
9000cb8e:	4432      	add	r2, r6
9000cb90:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000cb94:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cb96:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cb98:	69e2      	ldr	r2, [r4, #28]
9000cb9a:	4432      	add	r2, r6
9000cb9c:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cba0:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cba4:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cba6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cba8:	69e2      	ldr	r2, [r4, #28]
9000cbaa:	4432      	add	r2, r6
9000cbac:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cbae:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cbb0:	f103 0304 	add.w	r3, r3, #4
9000cbb4:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000cbb6:	d1e1      	bne.n	9000cb7c <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cbb8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000cbba:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cbbc:	42b3      	cmp	r3, r6
9000cbbe:	f000 8161 	beq.w	9000ce84 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000cbc2:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cbc6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000cbc8:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000cbcc:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000cbce:	d00e      	beq.n	9000cbee <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cbd0:	f005 0303 	and.w	r3, r5, #3
9000cbd4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbd6:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000cbd8:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cbda:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000cbdc:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cbde:	fa27 f303 	lsr.w	r3, r7, r3
9000cbe2:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000cbe4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cbe6:	f103 0301 	add.w	r3, r3, #1
9000cbea:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000cbec:	d1f0      	bne.n	9000cbd0 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000cbee:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cbf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbf4:	69e1      	ldr	r1, [r4, #28]
9000cbf6:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000cbf8:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cbfc:	f7f4 fd56 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cc00:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000cc02:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000cc06:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cc08:	f63f ae86 	bhi.w	9000c918 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc0c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000cc10:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc12:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cc14:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc18:	fa27 f003 	lsr.w	r0, r7, r3
9000cc1c:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000cc1e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc20:	f102 0201 	add.w	r2, r2, #1
9000cc24:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cc26:	f43f ae77 	beq.w	9000c918 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc2a:	f103 0208 	add.w	r2, r3, #8
9000cc2e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc30:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cc32:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc36:	fa27 f202 	lsr.w	r2, r7, r2
9000cc3a:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000cc3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc3e:	f102 0201 	add.w	r2, r2, #1
9000cc42:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cc44:	f108 0202 	add.w	r2, r8, #2
9000cc48:	f43f ae66 	beq.w	9000c918 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc4c:	3310      	adds	r3, #16
9000cc4e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cc50:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cc52:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc54:	fa27 f303 	lsr.w	r3, r7, r3
9000cc58:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000cc5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cc5c:	f103 0301 	add.w	r3, r3, #1
9000cc60:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cc62:	f47f ae59 	bne.w	9000c918 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cc66:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cc68:	0e3f      	lsrs	r7, r7, #24
9000cc6a:	69e2      	ldr	r2, [r4, #28]
9000cc6c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000cc6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cc70:	3301      	adds	r3, #1
9000cc72:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cc74:	e650      	b.n	9000c918 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000cc76:	428a      	cmp	r2, r1
9000cc78:	d056      	beq.n	9000cd28 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cc7a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cc7c:	e535      	b.n	9000c6ea <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cc7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc80:	4295      	cmp	r5, r2
9000cc82:	f67f ad3e 	bls.w	9000c702 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cc86:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cc88:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000cc8a:	0880      	lsrs	r0, r0, #2
9000cc8c:	d020      	beq.n	9000ccd0 <JPEG_Process+0x610>
9000cc8e:	4631      	mov	r1, r6
9000cc90:	e000      	b.n	9000cc94 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000cc92:	6823      	ldr	r3, [r4, #0]
9000cc94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cc96:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc98:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc9a:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cc9c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc9e:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cca0:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cca2:	69e2      	ldr	r2, [r4, #28]
9000cca4:	442a      	add	r2, r5
9000cca6:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000ccaa:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccac:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000ccae:	69e2      	ldr	r2, [r4, #28]
9000ccb0:	442a      	add	r2, r5
9000ccb2:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccb6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccba:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccbc:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000ccbe:	69e2      	ldr	r2, [r4, #28]
9000ccc0:	442a      	add	r2, r5
9000ccc2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ccc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccc6:	f103 0304 	add.w	r3, r3, #4
9000ccca:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000cccc:	d1e1      	bne.n	9000cc92 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ccce:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000ccd0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccd2:	429d      	cmp	r5, r3
9000ccd4:	f000 80d6 	beq.w	9000ce84 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ccd8:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ccdc:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ccde:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000cce2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000cce4:	d00e      	beq.n	9000cd04 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cce6:	f006 0303 	and.w	r3, r6, #3
9000ccea:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ccec:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000ccee:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ccf0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000ccf2:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ccf4:	fa27 f303 	lsr.w	r3, r7, r3
9000ccf8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ccfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccfc:	f103 0301 	add.w	r3, r3, #1
9000cd00:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000cd02:	d1f0      	bne.n	9000cce6 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000cd04:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cd08:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd0a:	69e1      	ldr	r1, [r4, #28]
9000cd0c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000cd0e:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cd12:	f7f4 fccb 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cd16:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000cd18:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000cd1c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd1e:	f67f af75 	bls.w	9000cc0c <JPEG_Process+0x54c>
9000cd22:	e5f9      	b.n	9000c918 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cd24:	1a52      	subs	r2, r2, r1
9000cd26:	e6a9      	b.n	9000ca7c <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000cd28:	6a21      	ldr	r1, [r4, #32]
9000cd2a:	4620      	mov	r0, r4
9000cd2c:	f7f4 fc9e 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000cd30:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cd32:	2a04      	cmp	r2, #4
9000cd34:	d902      	bls.n	9000cd3c <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000cd36:	f022 0203 	bic.w	r2, r2, #3
9000cd3a:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000cd3c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd3e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000cd40:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000cd42:	e5f5      	b.n	9000c930 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cd44:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cd48:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cd4a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cd4c:	e4cd      	b.n	9000c6ea <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000cd4e:	2a03      	cmp	r2, #3
9000cd50:	f240 80a4 	bls.w	9000ce9c <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000cd54:	2900      	cmp	r1, #0
9000cd56:	f43f acc8 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cd5a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cd5c:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd5e:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd60:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd64:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cd66:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd68:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cd6a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cd6e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd70:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cd74:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cd78:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd7c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cd7e:	6a20      	ldr	r0, [r4, #32]
9000cd80:	f100 0004 	add.w	r0, r0, #4
9000cd84:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cd86:	f43f acb0 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cd8a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cd8c:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd8e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cd92:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cd94:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd96:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cd98:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cd9c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cd9e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cda2:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cda6:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdaa:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cdac:	6a20      	ldr	r0, [r4, #32]
9000cdae:	f100 0004 	add.w	r0, r0, #4
9000cdb2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cdb4:	f43f ac99 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cdb8:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cdba:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdbc:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdc0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdc2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdc4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdc6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cdca:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdcc:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cdd0:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdd4:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdd8:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cdda:	6a20      	ldr	r0, [r4, #32]
9000cddc:	f100 0004 	add.w	r0, r0, #4
9000cde0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cde2:	f43f ac82 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cde6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cde8:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdea:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cdee:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdf0:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdf2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cdf4:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cdf8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cdfa:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cdfe:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce02:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce06:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ce08:	6a20      	ldr	r0, [r4, #32]
9000ce0a:	f100 0004 	add.w	r0, r0, #4
9000ce0e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce10:	f43f ac6b 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ce14:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce16:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce18:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce1c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce1e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce20:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce22:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce26:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce28:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ce2c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce30:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce34:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ce36:	6a20      	ldr	r0, [r4, #32]
9000ce38:	f100 0004 	add.w	r0, r0, #4
9000ce3c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce3e:	f43f ac54 	beq.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ce42:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce44:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce46:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce4a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce4c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce4e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce50:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce54:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce56:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ce5a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce5e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce62:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ce64:	6a20      	ldr	r0, [r4, #32]
9000ce66:	f100 0004 	add.w	r0, r0, #4
9000ce6a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce6c:	f47f ac3d 	bne.w	9000c6ea <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ce70:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce72:	e5db      	b.n	9000ca2c <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce74:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce76:	4620      	mov	r0, r4
9000ce78:	69e1      	ldr	r1, [r4, #28]
9000ce7a:	f7f4 fc17 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ce7e:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ce80:	6265      	str	r5, [r4, #36]	; 0x24
9000ce82:	e43e      	b.n	9000c702 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce84:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce86:	4620      	mov	r0, r4
9000ce88:	69e1      	ldr	r1, [r4, #28]
9000ce8a:	f7f4 fc0f 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ce8e:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ce90:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ce92:	6262      	str	r2, [r4, #36]	; 0x24
9000ce94:	e435      	b.n	9000c702 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000ce96:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce98:	69a0      	ldr	r0, [r4, #24]
9000ce9a:	e5c7      	b.n	9000ca2c <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ce9c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ce9e:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000cea0:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cea2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000cea4:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cea8:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000ceaa:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ceac:	d010      	beq.n	9000ced0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ceae:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000ceb0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000ceb2:	5c28      	ldrb	r0, [r5, r0]
9000ceb4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000ceb8:	6a20      	ldr	r0, [r4, #32]
9000ceba:	f100 0001 	add.w	r0, r0, #1
9000cebe:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cec0:	d106      	bne.n	9000ced0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cec2:	6a22      	ldr	r2, [r4, #32]
9000cec4:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000cec6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cec8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000cecc:	3201      	adds	r2, #1
9000cece:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000ced0:	6419      	str	r1, [r3, #64]	; 0x40
9000ced2:	e40a      	b.n	9000c6ea <JPEG_Process+0x2a>

9000ced4 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000ced4:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000ced8:	3b03      	subs	r3, #3
9000ceda:	2b01      	cmp	r3, #1
9000cedc:	d900      	bls.n	9000cee0 <HAL_JPEG_IRQHandler+0xc>
9000cede:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cee0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cee2:	f003 030c 	and.w	r3, r3, #12
9000cee6:	2b08      	cmp	r3, #8
{
9000cee8:	b530      	push	{r4, r5, lr}
9000ceea:	4604      	mov	r4, r0
9000ceec:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ceee:	d006      	beq.n	9000cefe <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cef0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cef2:	f003 030c 	and.w	r3, r3, #12
9000cef6:	2b0c      	cmp	r3, #12
9000cef8:	d006      	beq.n	9000cf08 <HAL_JPEG_IRQHandler+0x34>
}
9000cefa:	b003      	add	sp, #12
9000cefc:	bd30      	pop	{r4, r5, pc}
9000cefe:	b003      	add	sp, #12
9000cf00:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000cf04:	f7ff bbdc 	b.w	9000c6c0 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cf08:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cf0a:	f003 0303 	and.w	r3, r3, #3
9000cf0e:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000cf10:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cf12:	d045      	beq.n	9000cfa0 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000cf14:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cf16:	0692      	lsls	r2, r2, #26
9000cf18:	d5ef      	bpl.n	9000cefa <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000cf1a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000cf1c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000cf1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000cf22:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cf24:	681a      	ldr	r2, [r3, #0]
9000cf26:	f022 0201 	bic.w	r2, r2, #1
9000cf2a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cf2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cf2e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000cf32:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000cf34:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000cf36:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000cf3a:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000cf3c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000cf40:	2b02      	cmp	r3, #2
9000cf42:	d052      	beq.n	9000cfea <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000cf44:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000cf46:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000cf4a:	2b02      	cmp	r3, #2
9000cf4c:	d03f      	beq.n	9000cfce <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000cf4e:	6803      	ldr	r3, [r0, #0]
9000cf50:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cf52:	695b      	ldr	r3, [r3, #20]
9000cf54:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000cf58:	1ad3      	subs	r3, r2, r3
9000cf5a:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000cf5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf5e:	429a      	cmp	r2, r3
9000cf60:	d046      	beq.n	9000cff0 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000cf62:	6822      	ldr	r2, [r4, #0]
9000cf64:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000cf66:	f015 0510 	ands.w	r5, r5, #16
9000cf6a:	d135      	bne.n	9000cfd8 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000cf6c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cf6e:	2b00      	cmp	r3, #0
9000cf70:	d149      	bne.n	9000d006 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cf72:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000cf74:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cf76:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000cf78:	f023 0301 	bic.w	r3, r3, #1
9000cf7c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000cf7e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cf80:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cf82:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000cf86:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cf8a:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cf8e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cf90:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000cf92:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000cf94:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000cf98:	d032      	beq.n	9000d000 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000cf9a:	f7ff f9c9 	bl	9000c330 <HAL_JPEG_EncodeCpltCallback>
9000cf9e:	e7ac      	b.n	9000cefa <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000cfa0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000cfa2:	0651      	lsls	r1, r2, #25
9000cfa4:	d5b6      	bpl.n	9000cf14 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000cfa6:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000cfa8:	9101      	str	r1, [sp, #4]
9000cfaa:	f7fe ff33 	bl	9000be14 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000cfae:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000cfb0:	9901      	ldr	r1, [sp, #4]
9000cfb2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000cfb4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000cfb6:	f7f4 fb23 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000cfba:	6823      	ldr	r3, [r4, #0]
9000cfbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cfbe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000cfc2:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000cfc4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000cfc6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000cfca:	639a      	str	r2, [r3, #56]	; 0x38
9000cfcc:	e7a2      	b.n	9000cf14 <HAL_JPEG_IRQHandler+0x40>
}
9000cfce:	b003      	add	sp, #12
9000cfd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000cfd4:	f000 bb30 	b.w	9000d638 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000cfd8:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000cfda:	049b      	lsls	r3, r3, #18
9000cfdc:	d48d      	bmi.n	9000cefa <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000cfde:	4620      	mov	r0, r4
}
9000cfe0:	b003      	add	sp, #12
9000cfe2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000cfe6:	f7ff ba0f 	b.w	9000c408 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000cfea:	f000 fb25 	bl	9000d638 <HAL_MDMA_Abort_IT>
9000cfee:	e7a9      	b.n	9000cf44 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cff0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cff2:	4620      	mov	r0, r4
9000cff4:	69e1      	ldr	r1, [r4, #28]
9000cff6:	f7f4 fb59 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000cffa:	2300      	movs	r3, #0
9000cffc:	6263      	str	r3, [r4, #36]	; 0x24
9000cffe:	e7b0      	b.n	9000cf62 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d000:	f7f4 fbaa 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000d004:	e779      	b.n	9000cefa <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d006:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d008:	4620      	mov	r0, r4
9000d00a:	69e1      	ldr	r1, [r4, #28]
9000d00c:	f7f4 fb4e 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d010:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d012:	6265      	str	r5, [r4, #36]	; 0x24
9000d014:	e7ad      	b.n	9000cf72 <HAL_JPEG_IRQHandler+0x9e>
9000d016:	bf00      	nop

9000d018 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000d018:	2800      	cmp	r0, #0
9000d01a:	d067      	beq.n	9000d0ec <HAL_LTDC_Init+0xd4>
{
9000d01c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000d01e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000d022:	4604      	mov	r4, r0
9000d024:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d028:	2b00      	cmp	r3, #0
9000d02a:	d05a      	beq.n	9000d0e2 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d02c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d02e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d030:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d034:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d038:	4302      	orrs	r2, r0
9000d03a:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d03c:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d03e:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d040:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d042:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d046:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d048:	4929      	ldr	r1, [pc, #164]	; (9000d0f0 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d04a:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d04c:	6998      	ldr	r0, [r3, #24]
9000d04e:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000d050:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d052:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d054:	689a      	ldr	r2, [r3, #8]
9000d056:	400a      	ands	r2, r1
9000d058:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d05a:	689a      	ldr	r2, [r3, #8]
9000d05c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d060:	69a0      	ldr	r0, [r4, #24]
9000d062:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000d064:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d066:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000d068:	68da      	ldr	r2, [r3, #12]
9000d06a:	400a      	ands	r2, r1
9000d06c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d06e:	68da      	ldr	r2, [r3, #12]
9000d070:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d074:	6a20      	ldr	r0, [r4, #32]
9000d076:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000d078:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d07a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000d07c:	691a      	ldr	r2, [r3, #16]
9000d07e:	400a      	ands	r2, r1
9000d080:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d082:	691a      	ldr	r2, [r3, #16]
9000d084:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d088:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d08a:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000d08c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d08e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000d090:	695a      	ldr	r2, [r3, #20]
9000d092:	400a      	ands	r2, r1
9000d094:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000d096:	695a      	ldr	r2, [r3, #20]
9000d098:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000d09a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d09e:	430a      	orrs	r2, r1
9000d0a0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d0a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000d0a4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d0a8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000d0ac:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d0b0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d0b2:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000d0b4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000d0b8:	432a      	orrs	r2, r5
9000d0ba:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d0be:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d0c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000d0c4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000d0c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d0c8:	f042 0206 	orr.w	r2, r2, #6
9000d0cc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000d0ce:	699a      	ldr	r2, [r3, #24]
9000d0d0:	f042 0201 	orr.w	r2, r2, #1
9000d0d4:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000d0d6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d0d8:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000d0dc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000d0e0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000d0e2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000d0e6:	f7f6 f815 	bl	90003114 <HAL_LTDC_MspInit>
9000d0ea:	e79f      	b.n	9000d02c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000d0ec:	2001      	movs	r0, #1
}
9000d0ee:	4770      	bx	lr
9000d0f0:	f000f800 	.word	0xf000f800

9000d0f4 <HAL_LTDC_ErrorCallback>:
9000d0f4:	4770      	bx	lr
9000d0f6:	bf00      	nop

9000d0f8 <HAL_LTDC_ReloadEventCallback>:
9000d0f8:	4770      	bx	lr
9000d0fa:	bf00      	nop

9000d0fc <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d0fc:	6803      	ldr	r3, [r0, #0]
{
9000d0fe:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d100:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000d102:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000d104:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000d106:	076a      	lsls	r2, r5, #29
9000d108:	d501      	bpl.n	9000d10e <HAL_LTDC_IRQHandler+0x12>
9000d10a:	0771      	lsls	r1, r6, #29
9000d10c:	d41d      	bmi.n	9000d14a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000d10e:	07aa      	lsls	r2, r5, #30
9000d110:	d501      	bpl.n	9000d116 <HAL_LTDC_IRQHandler+0x1a>
9000d112:	07b3      	lsls	r3, r6, #30
9000d114:	d42d      	bmi.n	9000d172 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000d116:	07e8      	lsls	r0, r5, #31
9000d118:	d501      	bpl.n	9000d11e <HAL_LTDC_IRQHandler+0x22>
9000d11a:	07f1      	lsls	r1, r6, #31
9000d11c:	d440      	bmi.n	9000d1a0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000d11e:	072a      	lsls	r2, r5, #28
9000d120:	d501      	bpl.n	9000d126 <HAL_LTDC_IRQHandler+0x2a>
9000d122:	0733      	lsls	r3, r6, #28
9000d124:	d400      	bmi.n	9000d128 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000d126:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d128:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d12a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000d12c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000d12e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d130:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d132:	f022 0208 	bic.w	r2, r2, #8
9000d136:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d138:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d13a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000d13c:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d140:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d144:	f7ff ffd8 	bl	9000d0f8 <HAL_LTDC_ReloadEventCallback>
}
9000d148:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000d14a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d14c:	f022 0204 	bic.w	r2, r2, #4
9000d150:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000d152:	2204      	movs	r2, #4
9000d154:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000d156:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000d15a:	f043 0301 	orr.w	r3, r3, #1
9000d15e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d162:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d164:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d168:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d16c:	f7ff ffc2 	bl	9000d0f4 <HAL_LTDC_ErrorCallback>
9000d170:	e7cd      	b.n	9000d10e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d172:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000d174:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d176:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d178:	f022 0202 	bic.w	r2, r2, #2
9000d17c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000d17e:	2202      	movs	r2, #2
9000d180:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d182:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000d184:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000d188:	f043 0302 	orr.w	r3, r3, #2
9000d18c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d190:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d192:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d196:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d19a:	f7ff ffab 	bl	9000d0f4 <HAL_LTDC_ErrorCallback>
9000d19e:	e7ba      	b.n	9000d116 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d1a0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000d1a2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d1a4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d1a6:	f022 0201 	bic.w	r2, r2, #1
9000d1aa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000d1ac:	2201      	movs	r2, #1
9000d1ae:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000d1b0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000d1b2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d1b6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000d1ba:	f7f5 fb21 	bl	90002800 <HAL_LTDC_LineEventCallback>
9000d1be:	e7ae      	b.n	9000d11e <HAL_LTDC_IRQHandler+0x22>

9000d1c0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000d1c0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000d1c4:	2b01      	cmp	r3, #1
9000d1c6:	f000 80c0 	beq.w	9000d34a <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d1ca:	2302      	movs	r3, #2
{
9000d1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d1d0:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d1d4:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d1d8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000d1dc:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d1de:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d1e2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d1e4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d1e8:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d1ea:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000d1ee:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d1f0:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000d1f4:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d1f6:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d1fa:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d1fe:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000d360 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d202:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000d206:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000d20a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d20c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d20e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d212:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d214:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d216:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d21a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d21c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d220:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d222:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d224:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d228:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d22a:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d22c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d230:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000d234:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d236:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d238:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000d23c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d240:	440b      	add	r3, r1
9000d242:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d246:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d24a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d24e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d252:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d256:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d25a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d25c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d260:	68ab      	ldr	r3, [r5, #8]
9000d262:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000d266:	3301      	adds	r3, #1
9000d268:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000d26c:	4403      	add	r3, r0
9000d26e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d272:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d274:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000d278:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000d27c:	f023 0307 	bic.w	r3, r3, #7
9000d280:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d284:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d288:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000d28c:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000d28e:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000d292:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d296:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000d29a:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000d29e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000d2a2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000d2a6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000d2aa:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000d2ae:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000d2b2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000d2b6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000d2ba:	696b      	ldr	r3, [r5, #20]
9000d2bc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d2c0:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d2c4:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d2c6:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d2ca:	6a28      	ldr	r0, [r5, #32]
9000d2cc:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d2ce:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d2d2:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000d2d6:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000d2da:	2300      	movs	r3, #0
9000d2dc:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000d2e0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000d2e2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d2e6:	bb59      	cbnz	r1, 9000d340 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000d2e8:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d2ea:	1abf      	subs	r7, r7, r2
9000d2ec:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000d2ee:	fb03 f707 	mul.w	r7, r3, r7
9000d2f2:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d2f6:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d2f8:	3707      	adds	r7, #7
9000d2fa:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000d2fe:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000d302:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000d306:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d30a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000d30e:	4b12      	ldr	r3, [pc, #72]	; (9000d358 <HAL_LTDC_ConfigLayer+0x198>)
9000d310:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000d314:	400b      	ands	r3, r1
9000d316:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d31a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d31e:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000d320:	f859 3006 	ldr.w	r3, [r9, r6]
9000d324:	4313      	orrs	r3, r2
9000d326:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000d32a:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d32c:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000d330:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000d332:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000d336:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000d33a:	b003      	add	sp, #12
9000d33c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000d340:	3901      	subs	r1, #1
9000d342:	2906      	cmp	r1, #6
9000d344:	d903      	bls.n	9000d34e <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d346:	2301      	movs	r3, #1
9000d348:	e7cf      	b.n	9000d2ea <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000d34a:	2002      	movs	r0, #2
}
9000d34c:	4770      	bx	lr
9000d34e:	4b03      	ldr	r3, [pc, #12]	; (9000d35c <HAL_LTDC_ConfigLayer+0x19c>)
9000d350:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000d354:	e7c9      	b.n	9000d2ea <HAL_LTDC_ConfigLayer+0x12a>
9000d356:	bf00      	nop
9000d358:	fffff800 	.word	0xfffff800
9000d35c:	9002d3b4 	.word	0x9002d3b4
9000d360:	fffff8f8 	.word	0xfffff8f8

9000d364 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000d364:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000d368:	2a01      	cmp	r2, #1
9000d36a:	d019      	beq.n	9000d3a0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d36c:	6802      	ldr	r2, [r0, #0]
9000d36e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d370:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000d372:	f04f 0c00 	mov.w	ip, #0
{
9000d376:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d378:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d37c:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000d37e:	4c09      	ldr	r4, [pc, #36]	; (9000d3a4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d380:	f020 0001 	bic.w	r0, r0, #1
9000d384:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d386:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000d388:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000d38a:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000d38c:	4301      	orrs	r1, r0
9000d38e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d390:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000d394:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000d396:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000d39a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d39e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000d3a0:	2002      	movs	r0, #2
}
9000d3a2:	4770      	bx	lr
9000d3a4:	50001000 	.word	0x50001000

9000d3a8 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000d3a8:	b538      	push	{r3, r4, r5, lr}
9000d3aa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000d3ac:	f7fd f984 	bl	9000a6b8 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000d3b0:	2c00      	cmp	r4, #0
9000d3b2:	d05a      	beq.n	9000d46a <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000d3b4:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d3b6:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000d3b8:	2100      	movs	r1, #0
9000d3ba:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d3bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000d3c0:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000d3c4:	68da      	ldr	r2, [r3, #12]
9000d3c6:	f022 0201 	bic.w	r2, r2, #1
9000d3ca:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d3cc:	e005      	b.n	9000d3da <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000d3ce:	f7fd f973 	bl	9000a6b8 <HAL_GetTick>
9000d3d2:	1b43      	subs	r3, r0, r5
9000d3d4:	2b05      	cmp	r3, #5
9000d3d6:	d841      	bhi.n	9000d45c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d3d8:	6823      	ldr	r3, [r4, #0]
9000d3da:	68da      	ldr	r2, [r3, #12]
9000d3dc:	07d2      	lsls	r2, r2, #31
9000d3de:	d4f6      	bmi.n	9000d3ce <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d3e0:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000d3e4:	69e0      	ldr	r0, [r4, #28]
9000d3e6:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d3e8:	68e1      	ldr	r1, [r4, #12]
9000d3ea:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d3ec:	4302      	orrs	r2, r0
9000d3ee:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d3f0:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d3f2:	4302      	orrs	r2, r0
9000d3f4:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d3f6:	4302      	orrs	r2, r0
9000d3f8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000d3fa:	4302      	orrs	r2, r0
9000d3fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000d3fe:	4302      	orrs	r2, r0
9000d400:	68a0      	ldr	r0, [r4, #8]
9000d402:	4302      	orrs	r2, r0
9000d404:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d406:	3801      	subs	r0, #1
9000d408:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d40c:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d40e:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d410:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000d414:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d416:	d103      	bne.n	9000d420 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000d418:	691a      	ldr	r2, [r3, #16]
9000d41a:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000d41e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000d420:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d422:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000d424:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000d426:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d428:	db30      	blt.n	9000d48c <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000d42a:	b292      	uxth	r2, r2
9000d42c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000d42e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d430:	2a00      	cmp	r2, #0
9000d432:	db1c      	blt.n	9000d46e <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d434:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d436:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d43a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d43e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d440:	d021      	beq.n	9000d486 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000d442:	b2c0      	uxtb	r0, r0
9000d444:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000d446:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000d448:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000d44a:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000d44c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d44e:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000d450:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000d452:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000d456:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000d45a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d45c:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d45e:	2303      	movs	r3, #3
      return HAL_ERROR;
9000d460:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d462:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d464:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d468:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000d46a:	2001      	movs	r0, #1
}
9000d46c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d46e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000d470:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d472:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d476:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000d47a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d47c:	6a19      	ldr	r1, [r3, #32]
9000d47e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d482:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d484:	d1dd      	bne.n	9000d442 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000d486:	2200      	movs	r2, #0
9000d488:	629a      	str	r2, [r3, #40]	; 0x28
9000d48a:	e7dc      	b.n	9000d446 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d48c:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000d48e:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d490:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d494:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d496:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d498:	621a      	str	r2, [r3, #32]
9000d49a:	e7c8      	b.n	9000d42e <HAL_MDMA_Init+0x86>

9000d49c <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000d49c:	b1f8      	cbz	r0, 9000d4de <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000d49e:	6802      	ldr	r2, [r0, #0]
9000d4a0:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000d4a2:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000d4a4:	68d0      	ldr	r0, [r2, #12]
{
9000d4a6:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000d4a8:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d4ac:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000d4ae:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000d4b0:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000d4b2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000d4b4:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000d4b6:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000d4b8:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000d4ba:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000d4bc:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000d4be:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000d4c0:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000d4c2:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000d4c4:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d4c6:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d4c8:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000d4ca:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000d4ce:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000d4d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000d4d6:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000d4d8:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000d4dc:	4770      	bx	lr
    return HAL_ERROR;
9000d4de:	2001      	movs	r0, #1
}
9000d4e0:	4770      	bx	lr
9000d4e2:	bf00      	nop

9000d4e4 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000d4e4:	b310      	cbz	r0, 9000d52c <HAL_MDMA_ConfigPostRequestMask+0x48>
9000d4e6:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000d4e8:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d4ec:	2801      	cmp	r0, #1
9000d4ee:	d01f      	beq.n	9000d530 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000d4f0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000d4f2:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d4f6:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000d4fa:	45f4      	cmp	ip, lr
9000d4fc:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000d500:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d504:	d004      	beq.n	9000d510 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000d506:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000d508:	2200      	movs	r2, #0
9000d50a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000d50e:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000d510:	681d      	ldr	r5, [r3, #0]
9000d512:	692c      	ldr	r4, [r5, #16]
9000d514:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000d518:	d1f6      	bne.n	9000d508 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000d51a:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000d51c:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d51e:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000d520:	b941      	cbnz	r1, 9000d534 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d522:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d526:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d528:	612a      	str	r2, [r5, #16]
9000d52a:	e7ed      	b.n	9000d508 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000d52c:	2001      	movs	r0, #1
9000d52e:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000d530:	2002      	movs	r0, #2
}
9000d532:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d534:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d538:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d53a:	612a      	str	r2, [r5, #16]
9000d53c:	e7e4      	b.n	9000d508 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000d53e:	bf00      	nop

9000d540 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000d540:	2800      	cmp	r0, #0
9000d542:	d06f      	beq.n	9000d624 <HAL_MDMA_Start_IT+0xe4>
9000d544:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000d546:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d54a:	2801      	cmp	r0, #1
9000d54c:	d072      	beq.n	9000d634 <HAL_MDMA_Start_IT+0xf4>
9000d54e:	2001      	movs	r0, #1
9000d550:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d554:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000d558:	2801      	cmp	r0, #1
9000d55a:	d004      	beq.n	9000d566 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000d55c:	2300      	movs	r3, #0
    return HAL_BUSY;
9000d55e:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000d560:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000d564:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d566:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d568:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d56c:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000d570:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d572:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d574:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d578:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000d57c:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d580:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d584:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d588:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000d58c:	68e5      	ldr	r5, [r4, #12]
9000d58e:	f025 0501 	bic.w	r5, r5, #1
9000d592:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d594:	6965      	ldr	r5, [r4, #20]
9000d596:	ea00 0005 	and.w	r0, r0, r5
9000d59a:	ea40 0003 	orr.w	r0, r0, r3
9000d59e:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d5a0:	6963      	ldr	r3, [r4, #20]
9000d5a2:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000d5a6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000d5aa:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000d5ac:	f04f 031f 	mov.w	r3, #31
9000d5b0:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000d5b2:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000d5b4:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000d5b6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d5b8:	bf0c      	ite	eq
9000d5ba:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d5be:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d5c2:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000d5c6:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d5ca:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000d5cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d5ce:	bf0c      	ite	eq
9000d5d0:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000d5d4:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000d5d8:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000d5da:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000d5de:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000d5e0:	68e3      	ldr	r3, [r4, #12]
9000d5e2:	f043 0306 	orr.w	r3, r3, #6
9000d5e6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000d5e8:	b11a      	cbz	r2, 9000d5f2 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000d5ea:	68e3      	ldr	r3, [r4, #12]
9000d5ec:	f043 0310 	orr.w	r3, r3, #16
9000d5f0:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d5f2:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000d5f6:	b11b      	cbz	r3, 9000d600 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000d5f8:	68e3      	ldr	r3, [r4, #12]
9000d5fa:	f043 0308 	orr.w	r3, r3, #8
9000d5fe:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000d600:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000d604:	b11b      	cbz	r3, 9000d60e <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000d606:	68e3      	ldr	r3, [r4, #12]
9000d608:	f043 0320 	orr.w	r3, r3, #32
9000d60c:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000d60e:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d610:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000d614:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d618:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000d61c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d61e:	d003      	beq.n	9000d628 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000d620:	2000      	movs	r0, #0
}
9000d622:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000d624:	2001      	movs	r0, #1
9000d626:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d628:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000d62a:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d62c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d630:	60e3      	str	r3, [r4, #12]
}
9000d632:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000d634:	2002      	movs	r0, #2
}
9000d636:	4770      	bx	lr

9000d638 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000d638:	4603      	mov	r3, r0
9000d63a:	b188      	cbz	r0, 9000d660 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000d63c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000d640:	2a02      	cmp	r2, #2
9000d642:	d003      	beq.n	9000d64c <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d644:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000d646:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d648:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000d64a:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000d64c:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d64e:	2104      	movs	r1, #4
  return HAL_OK;
9000d650:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d652:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000d656:	68d3      	ldr	r3, [r2, #12]
9000d658:	f023 0301 	bic.w	r3, r3, #1
9000d65c:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000d65e:	4770      	bx	lr
    return HAL_ERROR;
9000d660:	2001      	movs	r0, #1
}
9000d662:	4770      	bx	lr

9000d664 <HAL_MDMA_IRQHandler>:
{
9000d664:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000d666:	2300      	movs	r3, #0
{
9000d668:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d66a:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000d66e:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000d670:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d672:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d674:	4b57      	ldr	r3, [pc, #348]	; (9000d7d4 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d676:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d678:	4a57      	ldr	r2, [pc, #348]	; (9000d7d8 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000d67a:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d67c:	6823      	ldr	r3, [r4, #0]
9000d67e:	441a      	add	r2, r3
9000d680:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000d684:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d688:	4202      	tst	r2, r0
9000d68a:	f000 80a0 	beq.w	9000d7ce <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000d68e:	681a      	ldr	r2, [r3, #0]
9000d690:	07d1      	lsls	r1, r2, #31
9000d692:	d529      	bpl.n	9000d6e8 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000d694:	68da      	ldr	r2, [r3, #12]
9000d696:	0792      	lsls	r2, r2, #30
9000d698:	d526      	bpl.n	9000d6e8 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000d69a:	68da      	ldr	r2, [r3, #12]
9000d69c:	f022 0202 	bic.w	r2, r2, #2
9000d6a0:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000d6a2:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d6a4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000d6a6:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d6a8:	bf54      	ite	pl
9000d6aa:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000d6ae:	f041 0102 	orrmi.w	r1, r1, #2
9000d6b2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000d6b4:	0591      	lsls	r1, r2, #22
9000d6b6:	d503      	bpl.n	9000d6c0 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000d6b8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d6ba:	f041 0104 	orr.w	r1, r1, #4
9000d6be:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000d6c0:	05d0      	lsls	r0, r2, #23
9000d6c2:	d503      	bpl.n	9000d6cc <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000d6c4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d6c6:	f041 0108 	orr.w	r1, r1, #8
9000d6ca:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000d6cc:	0551      	lsls	r1, r2, #21
9000d6ce:	d503      	bpl.n	9000d6d8 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000d6d0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d6d2:	f041 0110 	orr.w	r1, r1, #16
9000d6d6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000d6d8:	0510      	lsls	r0, r2, #20
9000d6da:	d503      	bpl.n	9000d6e4 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000d6dc:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000d6de:	f042 0220 	orr.w	r2, r2, #32
9000d6e2:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000d6e4:	2201      	movs	r2, #1
9000d6e6:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000d6e8:	681a      	ldr	r2, [r3, #0]
9000d6ea:	06d1      	lsls	r1, r2, #27
9000d6ec:	d509      	bpl.n	9000d702 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000d6ee:	68da      	ldr	r2, [r3, #12]
9000d6f0:	0692      	lsls	r2, r2, #26
9000d6f2:	d506      	bpl.n	9000d702 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d6f4:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000d6f6:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d6f8:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000d6fa:	b112      	cbz	r2, 9000d702 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000d6fc:	4620      	mov	r0, r4
9000d6fe:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000d700:	6823      	ldr	r3, [r4, #0]
9000d702:	681a      	ldr	r2, [r3, #0]
9000d704:	0710      	lsls	r0, r2, #28
9000d706:	d509      	bpl.n	9000d71c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000d708:	68da      	ldr	r2, [r3, #12]
9000d70a:	06d1      	lsls	r1, r2, #27
9000d70c:	d506      	bpl.n	9000d71c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d70e:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000d710:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d712:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000d714:	b112      	cbz	r2, 9000d71c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000d716:	4620      	mov	r0, r4
9000d718:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000d71a:	6823      	ldr	r3, [r4, #0]
9000d71c:	681a      	ldr	r2, [r3, #0]
9000d71e:	0752      	lsls	r2, r2, #29
9000d720:	d509      	bpl.n	9000d736 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000d722:	68da      	ldr	r2, [r3, #12]
9000d724:	0710      	lsls	r0, r2, #28
9000d726:	d506      	bpl.n	9000d736 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d728:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d72a:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d72c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d72e:	b112      	cbz	r2, 9000d736 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000d730:	4620      	mov	r0, r4
9000d732:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000d734:	6823      	ldr	r3, [r4, #0]
9000d736:	681a      	ldr	r2, [r3, #0]
9000d738:	0791      	lsls	r1, r2, #30
9000d73a:	d516      	bpl.n	9000d76a <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000d73c:	68da      	ldr	r2, [r3, #12]
9000d73e:	0752      	lsls	r2, r2, #29
9000d740:	d513      	bpl.n	9000d76a <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000d742:	68da      	ldr	r2, [r3, #12]
9000d744:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000d748:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000d74a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000d74e:	2a04      	cmp	r2, #4
9000d750:	d034      	beq.n	9000d7bc <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d752:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000d754:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d756:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000d758:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000d75a:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000d75c:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000d760:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000d764:	b10b      	cbz	r3, 9000d76a <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000d766:	4620      	mov	r0, r4
9000d768:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000d76a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000d76c:	2b00      	cmp	r3, #0
9000d76e:	d02e      	beq.n	9000d7ce <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000d770:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d772:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000d774:	4b19      	ldr	r3, [pc, #100]	; (9000d7dc <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d776:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000d77a:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000d77e:	68cb      	ldr	r3, [r1, #12]
9000d780:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d784:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000d786:	60cb      	str	r3, [r1, #12]
9000d788:	e002      	b.n	9000d790 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000d78a:	68cb      	ldr	r3, [r1, #12]
9000d78c:	07d8      	lsls	r0, r3, #31
9000d78e:	d504      	bpl.n	9000d79a <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000d790:	9b01      	ldr	r3, [sp, #4]
9000d792:	3301      	adds	r3, #1
9000d794:	4293      	cmp	r3, r2
9000d796:	9301      	str	r3, [sp, #4]
9000d798:	d9f7      	bls.n	9000d78a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000d79a:	2300      	movs	r3, #0
9000d79c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d7a0:	68cb      	ldr	r3, [r1, #12]
9000d7a2:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d7a4:	bf4c      	ite	mi
9000d7a6:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000d7a8:	2301      	movpl	r3, #1
9000d7aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000d7ae:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d7b0:	b16b      	cbz	r3, 9000d7ce <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000d7b2:	4620      	mov	r0, r4
}
9000d7b4:	b003      	add	sp, #12
9000d7b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000d7ba:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000d7bc:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000d7be:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000d7c0:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000d7c2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000d7c6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000d7ca:	2b00      	cmp	r3, #0
9000d7cc:	d1f1      	bne.n	9000d7b2 <HAL_MDMA_IRQHandler+0x14e>
}
9000d7ce:	b003      	add	sp, #12
9000d7d0:	bd30      	pop	{r4, r5, pc}
9000d7d2:	bf00      	nop
9000d7d4:	24000070 	.word	0x24000070
9000d7d8:	adffffc0 	.word	0xadffffc0
9000d7dc:	1b4e81b5 	.word	0x1b4e81b5

9000d7e0 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000d7e0:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d7e2:	4c10      	ldr	r4, [pc, #64]	; (9000d824 <HAL_PWREx_ConfigSupply+0x44>)
9000d7e4:	68e3      	ldr	r3, [r4, #12]
9000d7e6:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d7ea:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d7ec:	d105      	bne.n	9000d7fa <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d7ee:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000d7f2:	1a18      	subs	r0, r3, r0
9000d7f4:	bf18      	it	ne
9000d7f6:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000d7f8:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000d7fa:	f023 0307 	bic.w	r3, r3, #7
9000d7fe:	4303      	orrs	r3, r0
9000d800:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000d802:	f7fc ff59 	bl	9000a6b8 <HAL_GetTick>
9000d806:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d808:	e005      	b.n	9000d816 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000d80a:	f7fc ff55 	bl	9000a6b8 <HAL_GetTick>
9000d80e:	1b40      	subs	r0, r0, r5
9000d810:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000d814:	d804      	bhi.n	9000d820 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d816:	6863      	ldr	r3, [r4, #4]
9000d818:	049b      	lsls	r3, r3, #18
9000d81a:	d5f6      	bpl.n	9000d80a <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000d81c:	2000      	movs	r0, #0
}
9000d81e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000d820:	2001      	movs	r0, #1
}
9000d822:	bd38      	pop	{r3, r4, r5, pc}
9000d824:	58024800 	.word	0x58024800

9000d828 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d828:	4b3b      	ldr	r3, [pc, #236]	; (9000d918 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000d82a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d82c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d82e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d830:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000d832:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d836:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d838:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000d83c:	d038      	beq.n	9000d8b0 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d83e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d842:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d846:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d84a:	fb05 f101 	mul.w	r1, r5, r1
9000d84e:	2a01      	cmp	r2, #1
9000d850:	ee07 1a90 	vmov	s15, r1
9000d854:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000d858:	d002      	beq.n	9000d860 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000d85a:	2a02      	cmp	r2, #2
9000d85c:	d04e      	beq.n	9000d8fc <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000d85e:	b34a      	cbz	r2, 9000d8b4 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d860:	ee07 0a90 	vmov	s15, r0
9000d864:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000d91c <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000d868:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d86c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d86e:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000d872:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000d920 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d876:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d87a:	ee07 3a90 	vmov	s15, r3
9000d87e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000d882:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d886:	eee7 7a25 	vfma.f32	s15, s14, s11
9000d88a:	ee77 7a86 	vadd.f32	s15, s15, s12
9000d88e:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000d892:	4b21      	ldr	r3, [pc, #132]	; (9000d918 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000d894:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d896:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d89a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000d89c:	ee07 3a90 	vmov	s15, r3
9000d8a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d8a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000d8a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000d8ac:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000d8b0:	bc30      	pop	{r4, r5}
9000d8b2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d8b4:	681a      	ldr	r2, [r3, #0]
9000d8b6:	0692      	lsls	r2, r2, #26
9000d8b8:	d527      	bpl.n	9000d90a <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d8ba:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d8bc:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d8c0:	4a18      	ldr	r2, [pc, #96]	; (9000d924 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d8c2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000d8c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d8c8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d8cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d8d0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000d920 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d8d4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d8d8:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d8da:	ee06 3a90 	vmov	s13, r3
9000d8de:	ee06 2a10 	vmov	s12, r2
9000d8e2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d8e6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000d8ea:	eee7 6a05 	vfma.f32	s13, s14, s10
9000d8ee:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000d8f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000d8f6:	ee66 6a87 	vmul.f32	s13, s13, s14
9000d8fa:	e7ca      	b.n	9000d892 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d8fc:	ee07 0a90 	vmov	s15, r0
9000d900:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000d928 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000d904:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d908:	e7b0      	b.n	9000d86c <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d90a:	ee07 0a90 	vmov	s15, r0
9000d90e:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000d92c <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000d912:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d916:	e7a9      	b.n	9000d86c <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000d918:	58024400 	.word	0x58024400
9000d91c:	4a742400 	.word	0x4a742400
9000d920:	39000000 	.word	0x39000000
9000d924:	03d09000 	.word	0x03d09000
9000d928:	4bbebc20 	.word	0x4bbebc20
9000d92c:	4c742400 	.word	0x4c742400

9000d930 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000d930:	2800      	cmp	r0, #0
9000d932:	f000 81e8 	beq.w	9000dd06 <HAL_RCC_OscConfig+0x3d6>
{
9000d936:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000d938:	6803      	ldr	r3, [r0, #0]
9000d93a:	4604      	mov	r4, r0
9000d93c:	07d9      	lsls	r1, r3, #31
9000d93e:	d52e      	bpl.n	9000d99e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d940:	49a4      	ldr	r1, [pc, #656]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000d942:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000d944:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d946:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000d94a:	2a10      	cmp	r2, #16
9000d94c:	f000 8107 	beq.w	9000db5e <HAL_RCC_OscConfig+0x22e>
9000d950:	2a18      	cmp	r2, #24
9000d952:	f000 80ff 	beq.w	9000db54 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000d956:	6863      	ldr	r3, [r4, #4]
9000d958:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000d95c:	f000 812a 	beq.w	9000dbb4 <HAL_RCC_OscConfig+0x284>
9000d960:	2b00      	cmp	r3, #0
9000d962:	f000 8168 	beq.w	9000dc36 <HAL_RCC_OscConfig+0x306>
9000d966:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000d96a:	4b9a      	ldr	r3, [pc, #616]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000d96c:	681a      	ldr	r2, [r3, #0]
9000d96e:	f000 8289 	beq.w	9000de84 <HAL_RCC_OscConfig+0x554>
9000d972:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000d976:	601a      	str	r2, [r3, #0]
9000d978:	681a      	ldr	r2, [r3, #0]
9000d97a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000d97e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000d980:	f7fc fe9a 	bl	9000a6b8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d984:	4e93      	ldr	r6, [pc, #588]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000d986:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d988:	e005      	b.n	9000d996 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000d98a:	f7fc fe95 	bl	9000a6b8 <HAL_GetTick>
9000d98e:	1b40      	subs	r0, r0, r5
9000d990:	2864      	cmp	r0, #100	; 0x64
9000d992:	f200 814e 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d996:	6833      	ldr	r3, [r6, #0]
9000d998:	039b      	lsls	r3, r3, #14
9000d99a:	d5f6      	bpl.n	9000d98a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000d99c:	6823      	ldr	r3, [r4, #0]
9000d99e:	079d      	lsls	r5, r3, #30
9000d9a0:	f100 808a 	bmi.w	9000dab8 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000d9a4:	06d9      	lsls	r1, r3, #27
9000d9a6:	d533      	bpl.n	9000da10 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d9a8:	4a8a      	ldr	r2, [pc, #552]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000d9aa:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000d9ac:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000d9ae:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000d9b2:	2b08      	cmp	r3, #8
9000d9b4:	f000 80e3 	beq.w	9000db7e <HAL_RCC_OscConfig+0x24e>
9000d9b8:	2b18      	cmp	r3, #24
9000d9ba:	f000 80db 	beq.w	9000db74 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000d9be:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000d9c0:	4d84      	ldr	r5, [pc, #528]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000d9c2:	2b00      	cmp	r3, #0
9000d9c4:	f000 816f 	beq.w	9000dca6 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000d9c8:	682b      	ldr	r3, [r5, #0]
9000d9ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000d9ce:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000d9d0:	f7fc fe72 	bl	9000a6b8 <HAL_GetTick>
9000d9d4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d9d6:	e005      	b.n	9000d9e4 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000d9d8:	f7fc fe6e 	bl	9000a6b8 <HAL_GetTick>
9000d9dc:	1b80      	subs	r0, r0, r6
9000d9de:	2802      	cmp	r0, #2
9000d9e0:	f200 8127 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d9e4:	682b      	ldr	r3, [r5, #0]
9000d9e6:	05db      	lsls	r3, r3, #23
9000d9e8:	d5f6      	bpl.n	9000d9d8 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000d9ea:	f7fc fe6b 	bl	9000a6c4 <HAL_GetREVID>
9000d9ee:	f241 0303 	movw	r3, #4099	; 0x1003
9000d9f2:	4298      	cmp	r0, r3
9000d9f4:	f200 826d 	bhi.w	9000ded2 <HAL_RCC_OscConfig+0x5a2>
9000d9f8:	6a22      	ldr	r2, [r4, #32]
9000d9fa:	686b      	ldr	r3, [r5, #4]
9000d9fc:	2a20      	cmp	r2, #32
9000d9fe:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000da02:	bf0c      	ite	eq
9000da04:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000da08:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000da0c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000da0e:	6823      	ldr	r3, [r4, #0]
9000da10:	071d      	lsls	r5, r3, #28
9000da12:	d516      	bpl.n	9000da42 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000da14:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000da16:	4d6f      	ldr	r5, [pc, #444]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000da18:	2b00      	cmp	r3, #0
9000da1a:	f000 8122 	beq.w	9000dc62 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000da1e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000da20:	f043 0301 	orr.w	r3, r3, #1
9000da24:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000da26:	f7fc fe47 	bl	9000a6b8 <HAL_GetTick>
9000da2a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000da2c:	e005      	b.n	9000da3a <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000da2e:	f7fc fe43 	bl	9000a6b8 <HAL_GetTick>
9000da32:	1b80      	subs	r0, r0, r6
9000da34:	2802      	cmp	r0, #2
9000da36:	f200 80fc 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000da3a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000da3c:	0798      	lsls	r0, r3, #30
9000da3e:	d5f6      	bpl.n	9000da2e <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000da40:	6823      	ldr	r3, [r4, #0]
9000da42:	069a      	lsls	r2, r3, #26
9000da44:	d516      	bpl.n	9000da74 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000da46:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000da48:	4d62      	ldr	r5, [pc, #392]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000da4a:	2b00      	cmp	r3, #0
9000da4c:	f000 811a 	beq.w	9000dc84 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000da50:	682b      	ldr	r3, [r5, #0]
9000da52:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000da56:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000da58:	f7fc fe2e 	bl	9000a6b8 <HAL_GetTick>
9000da5c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000da5e:	e005      	b.n	9000da6c <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000da60:	f7fc fe2a 	bl	9000a6b8 <HAL_GetTick>
9000da64:	1b80      	subs	r0, r0, r6
9000da66:	2802      	cmp	r0, #2
9000da68:	f200 80e3 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000da6c:	682b      	ldr	r3, [r5, #0]
9000da6e:	049f      	lsls	r7, r3, #18
9000da70:	d5f6      	bpl.n	9000da60 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000da72:	6823      	ldr	r3, [r4, #0]
9000da74:	0759      	lsls	r1, r3, #29
9000da76:	f100 80a3 	bmi.w	9000dbc0 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000da7a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000da7c:	b1d0      	cbz	r0, 9000dab4 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000da7e:	4d55      	ldr	r5, [pc, #340]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000da80:	692b      	ldr	r3, [r5, #16]
9000da82:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000da86:	2b18      	cmp	r3, #24
9000da88:	f000 81ae 	beq.w	9000dde8 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000da8c:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000da8e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000da90:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000da94:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000da96:	f000 8142 	beq.w	9000dd1e <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000da9a:	f7fc fe0d 	bl	9000a6b8 <HAL_GetTick>
9000da9e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000daa0:	e005      	b.n	9000daae <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000daa2:	f7fc fe09 	bl	9000a6b8 <HAL_GetTick>
9000daa6:	1b00      	subs	r0, r0, r4
9000daa8:	2802      	cmp	r0, #2
9000daaa:	f200 80c2 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000daae:	682b      	ldr	r3, [r5, #0]
9000dab0:	019b      	lsls	r3, r3, #6
9000dab2:	d4f6      	bmi.n	9000daa2 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000dab4:	2000      	movs	r0, #0
}
9000dab6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dab8:	4a46      	ldr	r2, [pc, #280]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000daba:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dabc:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dabe:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000dac2:	d12d      	bne.n	9000db20 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000dac4:	4b43      	ldr	r3, [pc, #268]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000dac6:	68e2      	ldr	r2, [r4, #12]
9000dac8:	681b      	ldr	r3, [r3, #0]
9000daca:	0759      	lsls	r1, r3, #29
9000dacc:	d501      	bpl.n	9000dad2 <HAL_RCC_OscConfig+0x1a2>
9000dace:	2a00      	cmp	r2, #0
9000dad0:	d04e      	beq.n	9000db70 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dad2:	4d40      	ldr	r5, [pc, #256]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000dad4:	682b      	ldr	r3, [r5, #0]
9000dad6:	f023 0319 	bic.w	r3, r3, #25
9000dada:	4313      	orrs	r3, r2
9000dadc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dade:	f7fc fdeb 	bl	9000a6b8 <HAL_GetTick>
9000dae2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dae4:	e005      	b.n	9000daf2 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dae6:	f7fc fde7 	bl	9000a6b8 <HAL_GetTick>
9000daea:	1b80      	subs	r0, r0, r6
9000daec:	2802      	cmp	r0, #2
9000daee:	f200 80a0 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000daf2:	682b      	ldr	r3, [r5, #0]
9000daf4:	075b      	lsls	r3, r3, #29
9000daf6:	d5f6      	bpl.n	9000dae6 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000daf8:	f7fc fde4 	bl	9000a6c4 <HAL_GetREVID>
9000dafc:	f241 0303 	movw	r3, #4099	; 0x1003
9000db00:	4298      	cmp	r0, r3
9000db02:	f200 80f7 	bhi.w	9000dcf4 <HAL_RCC_OscConfig+0x3c4>
9000db06:	6922      	ldr	r2, [r4, #16]
9000db08:	686b      	ldr	r3, [r5, #4]
9000db0a:	2a40      	cmp	r2, #64	; 0x40
9000db0c:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000db10:	bf0c      	ite	eq
9000db12:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000db16:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000db1a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000db1c:	6823      	ldr	r3, [r4, #0]
9000db1e:	e741      	b.n	9000d9a4 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000db20:	2b18      	cmp	r3, #24
9000db22:	f000 80e3 	beq.w	9000dcec <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000db26:	4d2b      	ldr	r5, [pc, #172]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000db28:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000db2a:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000db2c:	2a00      	cmp	r2, #0
9000db2e:	f000 80cc 	beq.w	9000dcca <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000db32:	f023 0319 	bic.w	r3, r3, #25
9000db36:	4313      	orrs	r3, r2
9000db38:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000db3a:	f7fc fdbd 	bl	9000a6b8 <HAL_GetTick>
9000db3e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000db40:	e004      	b.n	9000db4c <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000db42:	f7fc fdb9 	bl	9000a6b8 <HAL_GetTick>
9000db46:	1b80      	subs	r0, r0, r6
9000db48:	2802      	cmp	r0, #2
9000db4a:	d872      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000db4c:	682b      	ldr	r3, [r5, #0]
9000db4e:	075f      	lsls	r7, r3, #29
9000db50:	d5f7      	bpl.n	9000db42 <HAL_RCC_OscConfig+0x212>
9000db52:	e7d1      	b.n	9000daf8 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000db54:	f001 0103 	and.w	r1, r1, #3
9000db58:	2902      	cmp	r1, #2
9000db5a:	f47f aefc 	bne.w	9000d956 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000db5e:	4a1d      	ldr	r2, [pc, #116]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000db60:	6812      	ldr	r2, [r2, #0]
9000db62:	0392      	lsls	r2, r2, #14
9000db64:	f57f af1b 	bpl.w	9000d99e <HAL_RCC_OscConfig+0x6e>
9000db68:	6862      	ldr	r2, [r4, #4]
9000db6a:	2a00      	cmp	r2, #0
9000db6c:	f47f af17 	bne.w	9000d99e <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000db70:	2001      	movs	r0, #1
}
9000db72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000db74:	f002 0203 	and.w	r2, r2, #3
9000db78:	2a01      	cmp	r2, #1
9000db7a:	f47f af20 	bne.w	9000d9be <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000db7e:	4b15      	ldr	r3, [pc, #84]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000db80:	681b      	ldr	r3, [r3, #0]
9000db82:	05da      	lsls	r2, r3, #23
9000db84:	d502      	bpl.n	9000db8c <HAL_RCC_OscConfig+0x25c>
9000db86:	69e3      	ldr	r3, [r4, #28]
9000db88:	2b80      	cmp	r3, #128	; 0x80
9000db8a:	d1f1      	bne.n	9000db70 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000db8c:	f7fc fd9a 	bl	9000a6c4 <HAL_GetREVID>
9000db90:	f241 0303 	movw	r3, #4099	; 0x1003
9000db94:	4298      	cmp	r0, r3
9000db96:	f200 80b8 	bhi.w	9000dd0a <HAL_RCC_OscConfig+0x3da>
9000db9a:	6a22      	ldr	r2, [r4, #32]
9000db9c:	2a20      	cmp	r2, #32
9000db9e:	f000 81a7 	beq.w	9000def0 <HAL_RCC_OscConfig+0x5c0>
9000dba2:	490c      	ldr	r1, [pc, #48]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000dba4:	684b      	ldr	r3, [r1, #4]
9000dba6:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000dbaa:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000dbae:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dbb0:	6823      	ldr	r3, [r4, #0]
9000dbb2:	e72d      	b.n	9000da10 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000dbb4:	4a07      	ldr	r2, [pc, #28]	; (9000dbd4 <HAL_RCC_OscConfig+0x2a4>)
9000dbb6:	6813      	ldr	r3, [r2, #0]
9000dbb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000dbbc:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000dbbe:	e6df      	b.n	9000d980 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000dbc0:	4d05      	ldr	r5, [pc, #20]	; (9000dbd8 <HAL_RCC_OscConfig+0x2a8>)
9000dbc2:	682b      	ldr	r3, [r5, #0]
9000dbc4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000dbc8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000dbca:	f7fc fd75 	bl	9000a6b8 <HAL_GetTick>
9000dbce:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dbd0:	e009      	b.n	9000dbe6 <HAL_RCC_OscConfig+0x2b6>
9000dbd2:	bf00      	nop
9000dbd4:	58024400 	.word	0x58024400
9000dbd8:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000dbdc:	f7fc fd6c 	bl	9000a6b8 <HAL_GetTick>
9000dbe0:	1b80      	subs	r0, r0, r6
9000dbe2:	2864      	cmp	r0, #100	; 0x64
9000dbe4:	d825      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dbe6:	682b      	ldr	r3, [r5, #0]
9000dbe8:	05da      	lsls	r2, r3, #23
9000dbea:	d5f7      	bpl.n	9000dbdc <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dbec:	68a3      	ldr	r3, [r4, #8]
9000dbee:	2b01      	cmp	r3, #1
9000dbf0:	f000 8178 	beq.w	9000dee4 <HAL_RCC_OscConfig+0x5b4>
9000dbf4:	2b00      	cmp	r3, #0
9000dbf6:	f000 8153 	beq.w	9000dea0 <HAL_RCC_OscConfig+0x570>
9000dbfa:	2b05      	cmp	r3, #5
9000dbfc:	4ba5      	ldr	r3, [pc, #660]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
9000dbfe:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000dc00:	f000 817f 	beq.w	9000df02 <HAL_RCC_OscConfig+0x5d2>
9000dc04:	f022 0201 	bic.w	r2, r2, #1
9000dc08:	671a      	str	r2, [r3, #112]	; 0x70
9000dc0a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000dc0c:	f022 0204 	bic.w	r2, r2, #4
9000dc10:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000dc12:	f7fc fd51 	bl	9000a6b8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dc16:	4e9f      	ldr	r6, [pc, #636]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dc18:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000dc1c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dc1e:	e004      	b.n	9000dc2a <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dc20:	f7fc fd4a 	bl	9000a6b8 <HAL_GetTick>
9000dc24:	1b40      	subs	r0, r0, r5
9000dc26:	42b8      	cmp	r0, r7
9000dc28:	d803      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dc2a:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000dc2c:	079b      	lsls	r3, r3, #30
9000dc2e:	d5f7      	bpl.n	9000dc20 <HAL_RCC_OscConfig+0x2f0>
9000dc30:	e723      	b.n	9000da7a <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000dc32:	2003      	movs	r0, #3
}
9000dc34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000dc36:	4d97      	ldr	r5, [pc, #604]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
9000dc38:	682b      	ldr	r3, [r5, #0]
9000dc3a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000dc3e:	602b      	str	r3, [r5, #0]
9000dc40:	682b      	ldr	r3, [r5, #0]
9000dc42:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000dc46:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dc48:	f7fc fd36 	bl	9000a6b8 <HAL_GetTick>
9000dc4c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000dc4e:	e004      	b.n	9000dc5a <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000dc50:	f7fc fd32 	bl	9000a6b8 <HAL_GetTick>
9000dc54:	1b80      	subs	r0, r0, r6
9000dc56:	2864      	cmp	r0, #100	; 0x64
9000dc58:	d8eb      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000dc5a:	682b      	ldr	r3, [r5, #0]
9000dc5c:	039f      	lsls	r7, r3, #14
9000dc5e:	d4f7      	bmi.n	9000dc50 <HAL_RCC_OscConfig+0x320>
9000dc60:	e69c      	b.n	9000d99c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000dc62:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dc64:	f023 0301 	bic.w	r3, r3, #1
9000dc68:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000dc6a:	f7fc fd25 	bl	9000a6b8 <HAL_GetTick>
9000dc6e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000dc70:	e004      	b.n	9000dc7c <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000dc72:	f7fc fd21 	bl	9000a6b8 <HAL_GetTick>
9000dc76:	1b80      	subs	r0, r0, r6
9000dc78:	2802      	cmp	r0, #2
9000dc7a:	d8da      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000dc7c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dc7e:	0799      	lsls	r1, r3, #30
9000dc80:	d4f7      	bmi.n	9000dc72 <HAL_RCC_OscConfig+0x342>
9000dc82:	e6dd      	b.n	9000da40 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000dc84:	682b      	ldr	r3, [r5, #0]
9000dc86:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000dc8a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000dc8c:	f7fc fd14 	bl	9000a6b8 <HAL_GetTick>
9000dc90:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000dc92:	e004      	b.n	9000dc9e <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000dc94:	f7fc fd10 	bl	9000a6b8 <HAL_GetTick>
9000dc98:	1b80      	subs	r0, r0, r6
9000dc9a:	2802      	cmp	r0, #2
9000dc9c:	d8c9      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000dc9e:	682b      	ldr	r3, [r5, #0]
9000dca0:	0498      	lsls	r0, r3, #18
9000dca2:	d4f7      	bmi.n	9000dc94 <HAL_RCC_OscConfig+0x364>
9000dca4:	e6e5      	b.n	9000da72 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000dca6:	682b      	ldr	r3, [r5, #0]
9000dca8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000dcac:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dcae:	f7fc fd03 	bl	9000a6b8 <HAL_GetTick>
9000dcb2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000dcb4:	e004      	b.n	9000dcc0 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000dcb6:	f7fc fcff 	bl	9000a6b8 <HAL_GetTick>
9000dcba:	1b80      	subs	r0, r0, r6
9000dcbc:	2802      	cmp	r0, #2
9000dcbe:	d8b8      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000dcc0:	682b      	ldr	r3, [r5, #0]
9000dcc2:	05df      	lsls	r7, r3, #23
9000dcc4:	d4f7      	bmi.n	9000dcb6 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dcc6:	6823      	ldr	r3, [r4, #0]
9000dcc8:	e6a2      	b.n	9000da10 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000dcca:	f023 0301 	bic.w	r3, r3, #1
9000dcce:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dcd0:	f7fc fcf2 	bl	9000a6b8 <HAL_GetTick>
9000dcd4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000dcd6:	e004      	b.n	9000dce2 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dcd8:	f7fc fcee 	bl	9000a6b8 <HAL_GetTick>
9000dcdc:	1b80      	subs	r0, r0, r6
9000dcde:	2802      	cmp	r0, #2
9000dce0:	d8a7      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000dce2:	682b      	ldr	r3, [r5, #0]
9000dce4:	0758      	lsls	r0, r3, #29
9000dce6:	d4f7      	bmi.n	9000dcd8 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dce8:	6823      	ldr	r3, [r4, #0]
9000dcea:	e65b      	b.n	9000d9a4 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dcec:	0790      	lsls	r0, r2, #30
9000dcee:	f47f af1a 	bne.w	9000db26 <HAL_RCC_OscConfig+0x1f6>
9000dcf2:	e6e7      	b.n	9000dac4 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000dcf4:	686b      	ldr	r3, [r5, #4]
9000dcf6:	6922      	ldr	r2, [r4, #16]
9000dcf8:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000dcfc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000dd00:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dd02:	6823      	ldr	r3, [r4, #0]
9000dd04:	e64e      	b.n	9000d9a4 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000dd06:	2001      	movs	r0, #1
}
9000dd08:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000dd0a:	4a62      	ldr	r2, [pc, #392]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
9000dd0c:	6a21      	ldr	r1, [r4, #32]
9000dd0e:	68d3      	ldr	r3, [r2, #12]
9000dd10:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000dd14:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000dd18:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dd1a:	6823      	ldr	r3, [r4, #0]
9000dd1c:	e678      	b.n	9000da10 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000dd1e:	f7fc fccb 	bl	9000a6b8 <HAL_GetTick>
9000dd22:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dd24:	e004      	b.n	9000dd30 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000dd26:	f7fc fcc7 	bl	9000a6b8 <HAL_GetTick>
9000dd2a:	1b80      	subs	r0, r0, r6
9000dd2c:	2802      	cmp	r0, #2
9000dd2e:	d880      	bhi.n	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dd30:	682b      	ldr	r3, [r5, #0]
9000dd32:	0199      	lsls	r1, r3, #6
9000dd34:	d4f7      	bmi.n	9000dd26 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000dd36:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000dd38:	4b57      	ldr	r3, [pc, #348]	; (9000de98 <HAL_RCC_OscConfig+0x568>)
9000dd3a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000dd3c:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000dd3e:	4957      	ldr	r1, [pc, #348]	; (9000de9c <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000dd40:	4e54      	ldr	r6, [pc, #336]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000dd42:	4313      	orrs	r3, r2
9000dd44:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000dd46:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000dd4a:	62ab      	str	r3, [r5, #40]	; 0x28
9000dd4c:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000dd50:	3b01      	subs	r3, #1
9000dd52:	3a01      	subs	r2, #1
9000dd54:	025b      	lsls	r3, r3, #9
9000dd56:	0412      	lsls	r2, r2, #16
9000dd58:	b29b      	uxth	r3, r3
9000dd5a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000dd5e:	4313      	orrs	r3, r2
9000dd60:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000dd62:	3a01      	subs	r2, #1
9000dd64:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000dd68:	4313      	orrs	r3, r2
9000dd6a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000dd6c:	3a01      	subs	r2, #1
9000dd6e:	0612      	lsls	r2, r2, #24
9000dd70:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000dd74:	4313      	orrs	r3, r2
9000dd76:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000dd78:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dd7a:	f023 0301 	bic.w	r3, r3, #1
9000dd7e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000dd80:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000dd82:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000dd84:	4011      	ands	r1, r2
9000dd86:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000dd8a:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000dd8c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dd8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000dd90:	f023 030c 	bic.w	r3, r3, #12
9000dd94:	4313      	orrs	r3, r2
9000dd96:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000dd98:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dd9a:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000dd9c:	f023 0302 	bic.w	r3, r3, #2
9000dda0:	4313      	orrs	r3, r2
9000dda2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000dda4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dda6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ddaa:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddac:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ddae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000ddb2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ddb4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ddb6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000ddba:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ddbc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ddbe:	f043 0301 	orr.w	r3, r3, #1
9000ddc2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ddc4:	682b      	ldr	r3, [r5, #0]
9000ddc6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000ddca:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ddcc:	f7fc fc74 	bl	9000a6b8 <HAL_GetTick>
9000ddd0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ddd2:	e005      	b.n	9000dde0 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ddd4:	f7fc fc70 	bl	9000a6b8 <HAL_GetTick>
9000ddd8:	1b00      	subs	r0, r0, r4
9000ddda:	2802      	cmp	r0, #2
9000dddc:	f63f af29 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000dde0:	6833      	ldr	r3, [r6, #0]
9000dde2:	019a      	lsls	r2, r3, #6
9000dde4:	d5f6      	bpl.n	9000ddd4 <HAL_RCC_OscConfig+0x4a4>
9000dde6:	e665      	b.n	9000dab4 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000dde8:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000ddea:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000ddec:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ddee:	f43f ae62 	beq.w	9000dab6 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000ddf2:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000ddf6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000ddf8:	428b      	cmp	r3, r1
9000ddfa:	f47f aeb9 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000ddfe:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000de02:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000de04:	429a      	cmp	r2, r3
9000de06:	f47f aeb3 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000de0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000de0c:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000de10:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000de12:	429a      	cmp	r2, r3
9000de14:	f47f aeac 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000de18:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000de1a:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000de1e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000de20:	429a      	cmp	r2, r3
9000de22:	f47f aea5 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000de26:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000de28:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000de2c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000de2e:	429a      	cmp	r2, r3
9000de30:	f47f ae9e 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000de34:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000de36:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000de3a:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000de3c:	429e      	cmp	r6, r3
9000de3e:	f47f ae97 	bne.w	9000db70 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000de42:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000de44:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000de46:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000de4a:	429a      	cmp	r2, r3
9000de4c:	f43f ae32 	beq.w	9000dab4 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000de50:	4a10      	ldr	r2, [pc, #64]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
9000de52:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000de54:	f023 0301 	bic.w	r3, r3, #1
9000de58:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000de5a:	f7fc fc2d 	bl	9000a6b8 <HAL_GetTick>
9000de5e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000de60:	f7fc fc2a 	bl	9000a6b8 <HAL_GetTick>
9000de64:	42a8      	cmp	r0, r5
9000de66:	d0fb      	beq.n	9000de60 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000de68:	4a0a      	ldr	r2, [pc, #40]	; (9000de94 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000de6a:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000de6c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000de6e:	4b0b      	ldr	r3, [pc, #44]	; (9000de9c <HAL_RCC_OscConfig+0x56c>)
9000de70:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000de72:	4023      	ands	r3, r4
9000de74:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000de78:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000de7a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000de7c:	f043 0301 	orr.w	r3, r3, #1
9000de80:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000de82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000de84:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000de88:	601a      	str	r2, [r3, #0]
9000de8a:	681a      	ldr	r2, [r3, #0]
9000de8c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000de90:	601a      	str	r2, [r3, #0]
9000de92:	e575      	b.n	9000d980 <HAL_RCC_OscConfig+0x50>
9000de94:	58024400 	.word	0x58024400
9000de98:	fffffc0c 	.word	0xfffffc0c
9000de9c:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dea0:	4d1c      	ldr	r5, [pc, #112]	; (9000df14 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dea2:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dea6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000dea8:	f023 0301 	bic.w	r3, r3, #1
9000deac:	672b      	str	r3, [r5, #112]	; 0x70
9000deae:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000deb0:	f023 0304 	bic.w	r3, r3, #4
9000deb4:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000deb6:	f7fc fbff 	bl	9000a6b8 <HAL_GetTick>
9000deba:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000debc:	e005      	b.n	9000deca <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000debe:	f7fc fbfb 	bl	9000a6b8 <HAL_GetTick>
9000dec2:	1b80      	subs	r0, r0, r6
9000dec4:	42b8      	cmp	r0, r7
9000dec6:	f63f aeb4 	bhi.w	9000dc32 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000deca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000decc:	0798      	lsls	r0, r3, #30
9000dece:	d4f6      	bmi.n	9000debe <HAL_RCC_OscConfig+0x58e>
9000ded0:	e5d3      	b.n	9000da7a <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ded2:	68eb      	ldr	r3, [r5, #12]
9000ded4:	6a22      	ldr	r2, [r4, #32]
9000ded6:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000deda:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000dede:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dee0:	6823      	ldr	r3, [r4, #0]
9000dee2:	e595      	b.n	9000da10 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dee4:	4a0b      	ldr	r2, [pc, #44]	; (9000df14 <HAL_RCC_OscConfig+0x5e4>)
9000dee6:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000dee8:	f043 0301 	orr.w	r3, r3, #1
9000deec:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000deee:	e690      	b.n	9000dc12 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000def0:	4a08      	ldr	r2, [pc, #32]	; (9000df14 <HAL_RCC_OscConfig+0x5e4>)
9000def2:	6853      	ldr	r3, [r2, #4]
9000def4:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000def8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000defc:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000defe:	6823      	ldr	r3, [r4, #0]
9000df00:	e586      	b.n	9000da10 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000df02:	f042 0204 	orr.w	r2, r2, #4
9000df06:	671a      	str	r2, [r3, #112]	; 0x70
9000df08:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000df0a:	f042 0201 	orr.w	r2, r2, #1
9000df0e:	671a      	str	r2, [r3, #112]	; 0x70
9000df10:	e67f      	b.n	9000dc12 <HAL_RCC_OscConfig+0x2e2>
9000df12:	bf00      	nop
9000df14:	58024400 	.word	0x58024400

9000df18 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000df18:	4a47      	ldr	r2, [pc, #284]	; (9000e038 <HAL_RCC_GetSysClockFreq+0x120>)
9000df1a:	6913      	ldr	r3, [r2, #16]
9000df1c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000df20:	2b10      	cmp	r3, #16
9000df22:	d004      	beq.n	9000df2e <HAL_RCC_GetSysClockFreq+0x16>
9000df24:	2b18      	cmp	r3, #24
9000df26:	d00d      	beq.n	9000df44 <HAL_RCC_GetSysClockFreq+0x2c>
9000df28:	b11b      	cbz	r3, 9000df32 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000df2a:	4844      	ldr	r0, [pc, #272]	; (9000e03c <HAL_RCC_GetSysClockFreq+0x124>)
9000df2c:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000df2e:	4844      	ldr	r0, [pc, #272]	; (9000e040 <HAL_RCC_GetSysClockFreq+0x128>)
9000df30:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000df32:	6813      	ldr	r3, [r2, #0]
9000df34:	0699      	lsls	r1, r3, #26
9000df36:	d54a      	bpl.n	9000dfce <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000df38:	6813      	ldr	r3, [r2, #0]
9000df3a:	4842      	ldr	r0, [pc, #264]	; (9000e044 <HAL_RCC_GetSysClockFreq+0x12c>)
9000df3c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000df40:	40d8      	lsrs	r0, r3
9000df42:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000df44:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000df46:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000df48:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000df4a:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000df4c:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000df50:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000df52:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000df56:	d038      	beq.n	9000dfca <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000df58:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000df5c:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000df60:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000df64:	fb05 f101 	mul.w	r1, r5, r1
9000df68:	2b01      	cmp	r3, #1
9000df6a:	ee07 1a90 	vmov	s15, r1
9000df6e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000df72:	d002      	beq.n	9000df7a <HAL_RCC_GetSysClockFreq+0x62>
9000df74:	2b02      	cmp	r3, #2
9000df76:	d02c      	beq.n	9000dfd2 <HAL_RCC_GetSysClockFreq+0xba>
9000df78:	b393      	cbz	r3, 9000dfe0 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000df7a:	ee07 0a90 	vmov	s15, r0
9000df7e:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000e048 <HAL_RCC_GetSysClockFreq+0x130>
9000df82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000df86:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000df88:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000df8c:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000e04c <HAL_RCC_GetSysClockFreq+0x134>
9000df90:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000df94:	ee07 3a90 	vmov	s15, r3
9000df98:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000df9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dfa0:	eee7 7a25 	vfma.f32	s15, s14, s11
9000dfa4:	ee77 7a86 	vadd.f32	s15, s15, s12
9000dfa8:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000dfac:	4b22      	ldr	r3, [pc, #136]	; (9000e038 <HAL_RCC_GetSysClockFreq+0x120>)
9000dfae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000dfb0:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000dfb4:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000dfb6:	ee07 3a90 	vmov	s15, r3
9000dfba:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000dfbe:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000dfc2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000dfc6:	ee17 0a90 	vmov	r0, s15
}
9000dfca:	bc30      	pop	{r4, r5}
9000dfcc:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000dfce:	481d      	ldr	r0, [pc, #116]	; (9000e044 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000dfd0:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dfd2:	ee07 0a90 	vmov	s15, r0
9000dfd6:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000e050 <HAL_RCC_GetSysClockFreq+0x138>
9000dfda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dfde:	e7d2      	b.n	9000df86 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000dfe0:	6813      	ldr	r3, [r2, #0]
9000dfe2:	069b      	lsls	r3, r3, #26
9000dfe4:	d520      	bpl.n	9000e028 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dfe6:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dfe8:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dfec:	4915      	ldr	r1, [pc, #84]	; (9000e044 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dfee:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000dff2:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000dff4:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000dff8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000dffc:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000e04c <HAL_RCC_GetSysClockFreq+0x134>
9000e000:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e004:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e006:	ee06 3a90 	vmov	s13, r3
9000e00a:	ee06 1a10 	vmov	s12, r1
9000e00e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000e012:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000e016:	eee7 6a05 	vfma.f32	s13, s14, s10
9000e01a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000e01e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000e022:	ee66 6a87 	vmul.f32	s13, s13, s14
9000e026:	e7c1      	b.n	9000dfac <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e028:	ee07 0a90 	vmov	s15, r0
9000e02c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000e054 <HAL_RCC_GetSysClockFreq+0x13c>
9000e030:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e034:	e7a7      	b.n	9000df86 <HAL_RCC_GetSysClockFreq+0x6e>
9000e036:	bf00      	nop
9000e038:	58024400 	.word	0x58024400
9000e03c:	003d0900 	.word	0x003d0900
9000e040:	017d7840 	.word	0x017d7840
9000e044:	03d09000 	.word	0x03d09000
9000e048:	4a742400 	.word	0x4a742400
9000e04c:	39000000 	.word	0x39000000
9000e050:	4bbebc20 	.word	0x4bbebc20
9000e054:	4c742400 	.word	0x4c742400

9000e058 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000e058:	2800      	cmp	r0, #0
9000e05a:	f000 810c 	beq.w	9000e276 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e05e:	4a8c      	ldr	r2, [pc, #560]	; (9000e290 <HAL_RCC_ClockConfig+0x238>)
9000e060:	6813      	ldr	r3, [r2, #0]
9000e062:	f003 030f 	and.w	r3, r3, #15
9000e066:	428b      	cmp	r3, r1
{
9000e068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e06c:	4604      	mov	r4, r0
9000e06e:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e070:	d20c      	bcs.n	9000e08c <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e072:	6813      	ldr	r3, [r2, #0]
9000e074:	f023 030f 	bic.w	r3, r3, #15
9000e078:	430b      	orrs	r3, r1
9000e07a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e07c:	6813      	ldr	r3, [r2, #0]
9000e07e:	f003 030f 	and.w	r3, r3, #15
9000e082:	428b      	cmp	r3, r1
9000e084:	d002      	beq.n	9000e08c <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000e086:	2001      	movs	r0, #1
}
9000e088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e08c:	6823      	ldr	r3, [r4, #0]
9000e08e:	075f      	lsls	r7, r3, #29
9000e090:	d50b      	bpl.n	9000e0aa <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e092:	4980      	ldr	r1, [pc, #512]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e094:	6920      	ldr	r0, [r4, #16]
9000e096:	698a      	ldr	r2, [r1, #24]
9000e098:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e09c:	4290      	cmp	r0, r2
9000e09e:	d904      	bls.n	9000e0aa <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e0a0:	698a      	ldr	r2, [r1, #24]
9000e0a2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e0a6:	4302      	orrs	r2, r0
9000e0a8:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e0aa:	071e      	lsls	r6, r3, #28
9000e0ac:	d50b      	bpl.n	9000e0c6 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e0ae:	4979      	ldr	r1, [pc, #484]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e0b0:	6960      	ldr	r0, [r4, #20]
9000e0b2:	69ca      	ldr	r2, [r1, #28]
9000e0b4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e0b8:	4290      	cmp	r0, r2
9000e0ba:	d904      	bls.n	9000e0c6 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e0bc:	69ca      	ldr	r2, [r1, #28]
9000e0be:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e0c2:	4302      	orrs	r2, r0
9000e0c4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e0c6:	06d8      	lsls	r0, r3, #27
9000e0c8:	d50b      	bpl.n	9000e0e2 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e0ca:	4972      	ldr	r1, [pc, #456]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e0cc:	69a0      	ldr	r0, [r4, #24]
9000e0ce:	69ca      	ldr	r2, [r1, #28]
9000e0d0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e0d4:	4290      	cmp	r0, r2
9000e0d6:	d904      	bls.n	9000e0e2 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e0d8:	69ca      	ldr	r2, [r1, #28]
9000e0da:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e0de:	4302      	orrs	r2, r0
9000e0e0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e0e2:	0699      	lsls	r1, r3, #26
9000e0e4:	d50b      	bpl.n	9000e0fe <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e0e6:	496b      	ldr	r1, [pc, #428]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e0e8:	69e0      	ldr	r0, [r4, #28]
9000e0ea:	6a0a      	ldr	r2, [r1, #32]
9000e0ec:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e0f0:	4290      	cmp	r0, r2
9000e0f2:	d904      	bls.n	9000e0fe <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e0f4:	6a0a      	ldr	r2, [r1, #32]
9000e0f6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e0fa:	4302      	orrs	r2, r0
9000e0fc:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e0fe:	079a      	lsls	r2, r3, #30
9000e100:	f140 80ab 	bpl.w	9000e25a <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e104:	4863      	ldr	r0, [pc, #396]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e106:	68e1      	ldr	r1, [r4, #12]
9000e108:	6982      	ldr	r2, [r0, #24]
9000e10a:	f002 020f 	and.w	r2, r2, #15
9000e10e:	4291      	cmp	r1, r2
9000e110:	d904      	bls.n	9000e11c <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e112:	6982      	ldr	r2, [r0, #24]
9000e114:	f022 020f 	bic.w	r2, r2, #15
9000e118:	430a      	orrs	r2, r1
9000e11a:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e11c:	07d8      	lsls	r0, r3, #31
9000e11e:	d530      	bpl.n	9000e182 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000e120:	4a5c      	ldr	r2, [pc, #368]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e122:	68a1      	ldr	r1, [r4, #8]
9000e124:	6993      	ldr	r3, [r2, #24]
9000e126:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000e12a:	430b      	orrs	r3, r1
9000e12c:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e12e:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e130:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e132:	2902      	cmp	r1, #2
9000e134:	f000 80a1 	beq.w	9000e27a <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000e138:	2903      	cmp	r1, #3
9000e13a:	f000 8098 	beq.w	9000e26e <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000e13e:	2901      	cmp	r1, #1
9000e140:	f000 80a1 	beq.w	9000e286 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e144:	0758      	lsls	r0, r3, #29
9000e146:	d59e      	bpl.n	9000e086 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e148:	4e52      	ldr	r6, [pc, #328]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e14a:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e14e:	6933      	ldr	r3, [r6, #16]
9000e150:	f023 0307 	bic.w	r3, r3, #7
9000e154:	430b      	orrs	r3, r1
9000e156:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000e158:	f7fc faae 	bl	9000a6b8 <HAL_GetTick>
9000e15c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e15e:	e005      	b.n	9000e16c <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e160:	f7fc faaa 	bl	9000a6b8 <HAL_GetTick>
9000e164:	1bc0      	subs	r0, r0, r7
9000e166:	4540      	cmp	r0, r8
9000e168:	f200 808b 	bhi.w	9000e282 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e16c:	6933      	ldr	r3, [r6, #16]
9000e16e:	6862      	ldr	r2, [r4, #4]
9000e170:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e174:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000e178:	d1f2      	bne.n	9000e160 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e17a:	6823      	ldr	r3, [r4, #0]
9000e17c:	0799      	lsls	r1, r3, #30
9000e17e:	d506      	bpl.n	9000e18e <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e180:	68e1      	ldr	r1, [r4, #12]
9000e182:	4844      	ldr	r0, [pc, #272]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e184:	6982      	ldr	r2, [r0, #24]
9000e186:	f002 020f 	and.w	r2, r2, #15
9000e18a:	428a      	cmp	r2, r1
9000e18c:	d869      	bhi.n	9000e262 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000e18e:	4940      	ldr	r1, [pc, #256]	; (9000e290 <HAL_RCC_ClockConfig+0x238>)
9000e190:	680a      	ldr	r2, [r1, #0]
9000e192:	f002 020f 	and.w	r2, r2, #15
9000e196:	42aa      	cmp	r2, r5
9000e198:	d90a      	bls.n	9000e1b0 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e19a:	680a      	ldr	r2, [r1, #0]
9000e19c:	f022 020f 	bic.w	r2, r2, #15
9000e1a0:	432a      	orrs	r2, r5
9000e1a2:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e1a4:	680a      	ldr	r2, [r1, #0]
9000e1a6:	f002 020f 	and.w	r2, r2, #15
9000e1aa:	42aa      	cmp	r2, r5
9000e1ac:	f47f af6b 	bne.w	9000e086 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e1b0:	075a      	lsls	r2, r3, #29
9000e1b2:	d50b      	bpl.n	9000e1cc <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e1b4:	4937      	ldr	r1, [pc, #220]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e1b6:	6920      	ldr	r0, [r4, #16]
9000e1b8:	698a      	ldr	r2, [r1, #24]
9000e1ba:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e1be:	4290      	cmp	r0, r2
9000e1c0:	d204      	bcs.n	9000e1cc <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e1c2:	698a      	ldr	r2, [r1, #24]
9000e1c4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e1c8:	4302      	orrs	r2, r0
9000e1ca:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e1cc:	071f      	lsls	r7, r3, #28
9000e1ce:	d50b      	bpl.n	9000e1e8 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e1d0:	4930      	ldr	r1, [pc, #192]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e1d2:	6960      	ldr	r0, [r4, #20]
9000e1d4:	69ca      	ldr	r2, [r1, #28]
9000e1d6:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e1da:	4290      	cmp	r0, r2
9000e1dc:	d204      	bcs.n	9000e1e8 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e1de:	69ca      	ldr	r2, [r1, #28]
9000e1e0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e1e4:	4302      	orrs	r2, r0
9000e1e6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e1e8:	06de      	lsls	r6, r3, #27
9000e1ea:	d50b      	bpl.n	9000e204 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e1ec:	4929      	ldr	r1, [pc, #164]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e1ee:	69a0      	ldr	r0, [r4, #24]
9000e1f0:	69ca      	ldr	r2, [r1, #28]
9000e1f2:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e1f6:	4290      	cmp	r0, r2
9000e1f8:	d204      	bcs.n	9000e204 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e1fa:	69ca      	ldr	r2, [r1, #28]
9000e1fc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e200:	4302      	orrs	r2, r0
9000e202:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e204:	069d      	lsls	r5, r3, #26
9000e206:	d50b      	bpl.n	9000e220 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e208:	4a22      	ldr	r2, [pc, #136]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e20a:	69e1      	ldr	r1, [r4, #28]
9000e20c:	6a13      	ldr	r3, [r2, #32]
9000e20e:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000e212:	4299      	cmp	r1, r3
9000e214:	d204      	bcs.n	9000e220 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e216:	6a13      	ldr	r3, [r2, #32]
9000e218:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000e21c:	430b      	orrs	r3, r1
9000e21e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e220:	f7ff fe7a 	bl	9000df18 <HAL_RCC_GetSysClockFreq>
9000e224:	4a1b      	ldr	r2, [pc, #108]	; (9000e294 <HAL_RCC_ClockConfig+0x23c>)
9000e226:	4603      	mov	r3, r0
9000e228:	481b      	ldr	r0, [pc, #108]	; (9000e298 <HAL_RCC_ClockConfig+0x240>)
9000e22a:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e22c:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e22e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000e232:	4d1a      	ldr	r5, [pc, #104]	; (9000e29c <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e234:	f002 020f 	and.w	r2, r2, #15
9000e238:	4c19      	ldr	r4, [pc, #100]	; (9000e2a0 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e23a:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e23c:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e23e:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000e242:	4818      	ldr	r0, [pc, #96]	; (9000e2a4 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e244:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e248:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000e24a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000e24c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e24e:	40d3      	lsrs	r3, r2
9000e250:	6023      	str	r3, [r4, #0]
}
9000e252:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000e256:	f7f5 b8bd 	b.w	900033d4 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e25a:	07da      	lsls	r2, r3, #31
9000e25c:	f53f af60 	bmi.w	9000e120 <HAL_RCC_ClockConfig+0xc8>
9000e260:	e795      	b.n	9000e18e <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e262:	6982      	ldr	r2, [r0, #24]
9000e264:	f022 020f 	bic.w	r2, r2, #15
9000e268:	430a      	orrs	r2, r1
9000e26a:	6182      	str	r2, [r0, #24]
9000e26c:	e78f      	b.n	9000e18e <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e26e:	019f      	lsls	r7, r3, #6
9000e270:	f53f af6a 	bmi.w	9000e148 <HAL_RCC_ClockConfig+0xf0>
9000e274:	e707      	b.n	9000e086 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000e276:	2001      	movs	r0, #1
}
9000e278:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e27a:	039b      	lsls	r3, r3, #14
9000e27c:	f53f af64 	bmi.w	9000e148 <HAL_RCC_ClockConfig+0xf0>
9000e280:	e701      	b.n	9000e086 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000e282:	2003      	movs	r0, #3
9000e284:	e700      	b.n	9000e088 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e286:	05de      	lsls	r6, r3, #23
9000e288:	f53f af5e 	bmi.w	9000e148 <HAL_RCC_ClockConfig+0xf0>
9000e28c:	e6fb      	b.n	9000e086 <HAL_RCC_ClockConfig+0x2e>
9000e28e:	bf00      	nop
9000e290:	52002000 	.word	0x52002000
9000e294:	58024400 	.word	0x58024400
9000e298:	9002d144 	.word	0x9002d144
9000e29c:	24000070 	.word	0x24000070
9000e2a0:	24000074 	.word	0x24000074
9000e2a4:	2400007c 	.word	0x2400007c

9000e2a8 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e2a8:	4a1c      	ldr	r2, [pc, #112]	; (9000e31c <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000e2aa:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e2ac:	6913      	ldr	r3, [r2, #16]
9000e2ae:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e2b2:	2b10      	cmp	r3, #16
9000e2b4:	d021      	beq.n	9000e2fa <HAL_RCC_GetPCLK1Freq+0x52>
9000e2b6:	2b18      	cmp	r3, #24
9000e2b8:	d02a      	beq.n	9000e310 <HAL_RCC_GetPCLK1Freq+0x68>
9000e2ba:	b303      	cbz	r3, 9000e2fe <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e2bc:	4818      	ldr	r0, [pc, #96]	; (9000e320 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e2be:	4a17      	ldr	r2, [pc, #92]	; (9000e31c <HAL_RCC_GetPCLK1Freq+0x74>)
9000e2c0:	4918      	ldr	r1, [pc, #96]	; (9000e324 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000e2c2:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e2c4:	4c18      	ldr	r4, [pc, #96]	; (9000e328 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e2c6:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e2ca:	4d18      	ldr	r5, [pc, #96]	; (9000e32c <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e2cc:	5ccb      	ldrb	r3, [r1, r3]
9000e2ce:	f003 031f 	and.w	r3, r3, #31
9000e2d2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e2d4:	6993      	ldr	r3, [r2, #24]
9000e2d6:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e2da:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e2dc:	5ccb      	ldrb	r3, [r1, r3]
9000e2de:	f003 031f 	and.w	r3, r3, #31
9000e2e2:	fa20 f303 	lsr.w	r3, r0, r3
9000e2e6:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000e2e8:	69d2      	ldr	r2, [r2, #28]
9000e2ea:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000e2ee:	5c88      	ldrb	r0, [r1, r2]
9000e2f0:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000e2f4:	fa23 f000 	lsr.w	r0, r3, r0
9000e2f8:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e2fa:	480d      	ldr	r0, [pc, #52]	; (9000e330 <HAL_RCC_GetPCLK1Freq+0x88>)
9000e2fc:	e7df      	b.n	9000e2be <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e2fe:	6813      	ldr	r3, [r2, #0]
9000e300:	069b      	lsls	r3, r3, #26
9000e302:	d508      	bpl.n	9000e316 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e304:	6813      	ldr	r3, [r2, #0]
9000e306:	480b      	ldr	r0, [pc, #44]	; (9000e334 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e308:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e30c:	40d8      	lsrs	r0, r3
9000e30e:	e7d6      	b.n	9000e2be <HAL_RCC_GetPCLK1Freq+0x16>
9000e310:	f7ff fa8a 	bl	9000d828 <HAL_RCC_GetSysClockFreq.part.0>
9000e314:	e7d3      	b.n	9000e2be <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e316:	4807      	ldr	r0, [pc, #28]	; (9000e334 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e318:	e7d1      	b.n	9000e2be <HAL_RCC_GetPCLK1Freq+0x16>
9000e31a:	bf00      	nop
9000e31c:	58024400 	.word	0x58024400
9000e320:	003d0900 	.word	0x003d0900
9000e324:	9002d144 	.word	0x9002d144
9000e328:	24000074 	.word	0x24000074
9000e32c:	24000070 	.word	0x24000070
9000e330:	017d7840 	.word	0x017d7840
9000e334:	03d09000 	.word	0x03d09000

9000e338 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e338:	4a1c      	ldr	r2, [pc, #112]	; (9000e3ac <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000e33a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e33c:	6913      	ldr	r3, [r2, #16]
9000e33e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e342:	2b10      	cmp	r3, #16
9000e344:	d021      	beq.n	9000e38a <HAL_RCC_GetPCLK2Freq+0x52>
9000e346:	2b18      	cmp	r3, #24
9000e348:	d02a      	beq.n	9000e3a0 <HAL_RCC_GetPCLK2Freq+0x68>
9000e34a:	b303      	cbz	r3, 9000e38e <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e34c:	4818      	ldr	r0, [pc, #96]	; (9000e3b0 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e34e:	4a17      	ldr	r2, [pc, #92]	; (9000e3ac <HAL_RCC_GetPCLK2Freq+0x74>)
9000e350:	4918      	ldr	r1, [pc, #96]	; (9000e3b4 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000e352:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e354:	4c18      	ldr	r4, [pc, #96]	; (9000e3b8 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e356:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e35a:	4d18      	ldr	r5, [pc, #96]	; (9000e3bc <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e35c:	5ccb      	ldrb	r3, [r1, r3]
9000e35e:	f003 031f 	and.w	r3, r3, #31
9000e362:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e364:	6993      	ldr	r3, [r2, #24]
9000e366:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e36a:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e36c:	5ccb      	ldrb	r3, [r1, r3]
9000e36e:	f003 031f 	and.w	r3, r3, #31
9000e372:	fa20 f303 	lsr.w	r3, r0, r3
9000e376:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000e378:	69d2      	ldr	r2, [r2, #28]
9000e37a:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000e37e:	5c88      	ldrb	r0, [r1, r2]
9000e380:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000e384:	fa23 f000 	lsr.w	r0, r3, r0
9000e388:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e38a:	480d      	ldr	r0, [pc, #52]	; (9000e3c0 <HAL_RCC_GetPCLK2Freq+0x88>)
9000e38c:	e7df      	b.n	9000e34e <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e38e:	6813      	ldr	r3, [r2, #0]
9000e390:	069b      	lsls	r3, r3, #26
9000e392:	d508      	bpl.n	9000e3a6 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e394:	6813      	ldr	r3, [r2, #0]
9000e396:	480b      	ldr	r0, [pc, #44]	; (9000e3c4 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e398:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e39c:	40d8      	lsrs	r0, r3
9000e39e:	e7d6      	b.n	9000e34e <HAL_RCC_GetPCLK2Freq+0x16>
9000e3a0:	f7ff fa42 	bl	9000d828 <HAL_RCC_GetSysClockFreq.part.0>
9000e3a4:	e7d3      	b.n	9000e34e <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e3a6:	4807      	ldr	r0, [pc, #28]	; (9000e3c4 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e3a8:	e7d1      	b.n	9000e34e <HAL_RCC_GetPCLK2Freq+0x16>
9000e3aa:	bf00      	nop
9000e3ac:	58024400 	.word	0x58024400
9000e3b0:	003d0900 	.word	0x003d0900
9000e3b4:	9002d144 	.word	0x9002d144
9000e3b8:	24000074 	.word	0x24000074
9000e3bc:	24000070 	.word	0x24000070
9000e3c0:	017d7840 	.word	0x017d7840
9000e3c4:	03d09000 	.word	0x03d09000

9000e3c8 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e3c8:	4b13      	ldr	r3, [pc, #76]	; (9000e418 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000e3ca:	223f      	movs	r2, #63	; 0x3f
9000e3cc:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e3ce:	691a      	ldr	r2, [r3, #16]
9000e3d0:	f002 0207 	and.w	r2, r2, #7
9000e3d4:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000e3d6:	699a      	ldr	r2, [r3, #24]
9000e3d8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000e3dc:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000e3de:	699a      	ldr	r2, [r3, #24]
9000e3e0:	f002 020f 	and.w	r2, r2, #15
9000e3e4:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000e3e6:	699a      	ldr	r2, [r3, #24]
9000e3e8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e3ec:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000e3ee:	69da      	ldr	r2, [r3, #28]
9000e3f0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e3f4:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000e3f6:	69da      	ldr	r2, [r3, #28]
9000e3f8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e3fc:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e3fe:	6a1b      	ldr	r3, [r3, #32]
{
9000e400:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e402:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e406:	4c05      	ldr	r4, [pc, #20]	; (9000e41c <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e408:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e40a:	6823      	ldr	r3, [r4, #0]
}
9000e40c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e410:	f003 030f 	and.w	r3, r3, #15
9000e414:	600b      	str	r3, [r1, #0]
}
9000e416:	4770      	bx	lr
9000e418:	58024400 	.word	0x58024400
9000e41c:	52002000 	.word	0x52002000

9000e420 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000e420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e422:	4c3a      	ldr	r4, [pc, #232]	; (9000e50c <RCCEx_PLL2_Config+0xec>)
9000e424:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e426:	f003 0303 	and.w	r3, r3, #3
9000e42a:	2b03      	cmp	r3, #3
9000e42c:	d067      	beq.n	9000e4fe <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000e42e:	6823      	ldr	r3, [r4, #0]
9000e430:	4606      	mov	r6, r0
9000e432:	460f      	mov	r7, r1
9000e434:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000e438:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e43a:	f7fc f93d 	bl	9000a6b8 <HAL_GetTick>
9000e43e:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e440:	e004      	b.n	9000e44c <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e442:	f7fc f939 	bl	9000a6b8 <HAL_GetTick>
9000e446:	1b43      	subs	r3, r0, r5
9000e448:	2b02      	cmp	r3, #2
9000e44a:	d856      	bhi.n	9000e4fa <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e44c:	6823      	ldr	r3, [r4, #0]
9000e44e:	011a      	lsls	r2, r3, #4
9000e450:	d4f7      	bmi.n	9000e442 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000e452:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e454:	6832      	ldr	r2, [r6, #0]
9000e456:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000e45a:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e45e:	62a3      	str	r3, [r4, #40]	; 0x28
9000e460:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e464:	3b01      	subs	r3, #1
9000e466:	3a01      	subs	r2, #1
9000e468:	025b      	lsls	r3, r3, #9
9000e46a:	0412      	lsls	r2, r2, #16
9000e46c:	b29b      	uxth	r3, r3
9000e46e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e472:	4313      	orrs	r3, r2
9000e474:	6872      	ldr	r2, [r6, #4]
9000e476:	3a01      	subs	r2, #1
9000e478:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e47c:	4313      	orrs	r3, r2
9000e47e:	6932      	ldr	r2, [r6, #16]
9000e480:	3a01      	subs	r2, #1
9000e482:	0612      	lsls	r2, r2, #24
9000e484:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e488:	4313      	orrs	r3, r2
9000e48a:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000e48c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e48e:	6972      	ldr	r2, [r6, #20]
9000e490:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000e494:	4313      	orrs	r3, r2
9000e496:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e498:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e49a:	69b3      	ldr	r3, [r6, #24]
9000e49c:	f022 0220 	bic.w	r2, r2, #32
9000e4a0:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e4a2:	4b1b      	ldr	r3, [pc, #108]	; (9000e510 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e4a4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000e4a6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e4a8:	f022 0210 	bic.w	r2, r2, #16
9000e4ac:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e4ae:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000e4b0:	69f2      	ldr	r2, [r6, #28]
9000e4b2:	400b      	ands	r3, r1
9000e4b4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e4b8:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000e4ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e4bc:	f043 0310 	orr.w	r3, r3, #16
9000e4c0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e4c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e4c4:	b1ef      	cbz	r7, 9000e502 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e4c6:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000e4c8:	bf0c      	ite	eq
9000e4ca:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000e4ce:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000e4d2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000e4d4:	4c0d      	ldr	r4, [pc, #52]	; (9000e50c <RCCEx_PLL2_Config+0xec>)
9000e4d6:	6823      	ldr	r3, [r4, #0]
9000e4d8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000e4dc:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e4de:	f7fc f8eb 	bl	9000a6b8 <HAL_GetTick>
9000e4e2:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e4e4:	e004      	b.n	9000e4f0 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e4e6:	f7fc f8e7 	bl	9000a6b8 <HAL_GetTick>
9000e4ea:	1b40      	subs	r0, r0, r5
9000e4ec:	2802      	cmp	r0, #2
9000e4ee:	d804      	bhi.n	9000e4fa <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e4f0:	6823      	ldr	r3, [r4, #0]
9000e4f2:	011b      	lsls	r3, r3, #4
9000e4f4:	d5f7      	bpl.n	9000e4e6 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000e4f6:	2000      	movs	r0, #0
}
9000e4f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e4fa:	2003      	movs	r0, #3
}
9000e4fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e4fe:	2001      	movs	r0, #1
}
9000e500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e502:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000e506:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e508:	e7e4      	b.n	9000e4d4 <RCCEx_PLL2_Config+0xb4>
9000e50a:	bf00      	nop
9000e50c:	58024400 	.word	0x58024400
9000e510:	ffff0007 	.word	0xffff0007

9000e514 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000e514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e516:	4c3a      	ldr	r4, [pc, #232]	; (9000e600 <RCCEx_PLL3_Config+0xec>)
9000e518:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e51a:	f003 0303 	and.w	r3, r3, #3
9000e51e:	2b03      	cmp	r3, #3
9000e520:	d067      	beq.n	9000e5f2 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000e522:	6823      	ldr	r3, [r4, #0]
9000e524:	4606      	mov	r6, r0
9000e526:	460f      	mov	r7, r1
9000e528:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000e52c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e52e:	f7fc f8c3 	bl	9000a6b8 <HAL_GetTick>
9000e532:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e534:	e004      	b.n	9000e540 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e536:	f7fc f8bf 	bl	9000a6b8 <HAL_GetTick>
9000e53a:	1b43      	subs	r3, r0, r5
9000e53c:	2b02      	cmp	r3, #2
9000e53e:	d856      	bhi.n	9000e5ee <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e540:	6823      	ldr	r3, [r4, #0]
9000e542:	009a      	lsls	r2, r3, #2
9000e544:	d4f7      	bmi.n	9000e536 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000e546:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e548:	6832      	ldr	r2, [r6, #0]
9000e54a:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000e54e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000e552:	62a3      	str	r3, [r4, #40]	; 0x28
9000e554:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e558:	3b01      	subs	r3, #1
9000e55a:	3a01      	subs	r2, #1
9000e55c:	025b      	lsls	r3, r3, #9
9000e55e:	0412      	lsls	r2, r2, #16
9000e560:	b29b      	uxth	r3, r3
9000e562:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e566:	4313      	orrs	r3, r2
9000e568:	6872      	ldr	r2, [r6, #4]
9000e56a:	3a01      	subs	r2, #1
9000e56c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e570:	4313      	orrs	r3, r2
9000e572:	6932      	ldr	r2, [r6, #16]
9000e574:	3a01      	subs	r2, #1
9000e576:	0612      	lsls	r2, r2, #24
9000e578:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e57c:	4313      	orrs	r3, r2
9000e57e:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000e580:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e582:	6972      	ldr	r2, [r6, #20]
9000e584:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000e588:	4313      	orrs	r3, r2
9000e58a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e58c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e58e:	69b3      	ldr	r3, [r6, #24]
9000e590:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000e594:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e596:	4b1b      	ldr	r3, [pc, #108]	; (9000e604 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e598:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000e59a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e59c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000e5a0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e5a2:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000e5a4:	69f2      	ldr	r2, [r6, #28]
9000e5a6:	400b      	ands	r3, r1
9000e5a8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e5ac:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000e5ae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e5b0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e5b4:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e5b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e5b8:	b1ef      	cbz	r7, 9000e5f6 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e5ba:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000e5bc:	bf0c      	ite	eq
9000e5be:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000e5c2:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000e5c6:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000e5c8:	4c0d      	ldr	r4, [pc, #52]	; (9000e600 <RCCEx_PLL3_Config+0xec>)
9000e5ca:	6823      	ldr	r3, [r4, #0]
9000e5cc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000e5d0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e5d2:	f7fc f871 	bl	9000a6b8 <HAL_GetTick>
9000e5d6:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e5d8:	e004      	b.n	9000e5e4 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e5da:	f7fc f86d 	bl	9000a6b8 <HAL_GetTick>
9000e5de:	1b40      	subs	r0, r0, r5
9000e5e0:	2802      	cmp	r0, #2
9000e5e2:	d804      	bhi.n	9000e5ee <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e5e4:	6823      	ldr	r3, [r4, #0]
9000e5e6:	009b      	lsls	r3, r3, #2
9000e5e8:	d5f7      	bpl.n	9000e5da <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000e5ea:	2000      	movs	r0, #0
}
9000e5ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e5ee:	2003      	movs	r0, #3
}
9000e5f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e5f2:	2001      	movs	r0, #1
}
9000e5f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e5f6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000e5fa:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e5fc:	e7e4      	b.n	9000e5c8 <RCCEx_PLL3_Config+0xb4>
9000e5fe:	bf00      	nop
9000e600:	58024400 	.word	0x58024400
9000e604:	ffff0007 	.word	0xffff0007

9000e608 <HAL_RCCEx_PeriphCLKConfig>:
{
9000e608:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e60c:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000e610:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e612:	011d      	lsls	r5, r3, #4
9000e614:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000e618:	d523      	bpl.n	9000e662 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e61a:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000e61c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e620:	f000 8553 	beq.w	9000f0ca <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000e624:	d812      	bhi.n	9000e64c <HAL_RCCEx_PeriphCLKConfig+0x44>
9000e626:	2900      	cmp	r1, #0
9000e628:	f000 85a9 	beq.w	9000f17e <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000e62c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000e630:	f040 85a2 	bne.w	9000f178 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e634:	2102      	movs	r1, #2
9000e636:	3008      	adds	r0, #8
9000e638:	f7ff fef2 	bl	9000e420 <RCCEx_PLL2_Config>
9000e63c:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000e63e:	2e00      	cmp	r6, #0
9000e640:	f040 8522 	bne.w	9000f088 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e644:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e646:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e64a:	e003      	b.n	9000e654 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e64c:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000e650:	f040 8592 	bne.w	9000f178 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e654:	4dae      	ldr	r5, [pc, #696]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e656:	2600      	movs	r6, #0
9000e658:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000e65a:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000e65e:	4301      	orrs	r1, r0
9000e660:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e662:	05d8      	lsls	r0, r3, #23
9000e664:	d50a      	bpl.n	9000e67c <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000e666:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000e668:	2904      	cmp	r1, #4
9000e66a:	d806      	bhi.n	9000e67a <HAL_RCCEx_PeriphCLKConfig+0x72>
9000e66c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e670:	053d0536 	.word	0x053d0536
9000e674:	0323051a 	.word	0x0323051a
9000e678:	0323      	.short	0x0323
9000e67a:	2601      	movs	r6, #1
9000e67c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e67e:	0599      	lsls	r1, r3, #22
9000e680:	d51d      	bpl.n	9000e6be <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000e682:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000e684:	2980      	cmp	r1, #128	; 0x80
9000e686:	f000 8516 	beq.w	9000f0b6 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000e68a:	f200 80f9 	bhi.w	9000e880 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000e68e:	2900      	cmp	r1, #0
9000e690:	f000 8433 	beq.w	9000eefa <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000e694:	2940      	cmp	r1, #64	; 0x40
9000e696:	f040 80fa 	bne.w	9000e88e <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e69a:	2100      	movs	r1, #0
9000e69c:	f104 0008 	add.w	r0, r4, #8
9000e6a0:	f7ff febe 	bl	9000e420 <RCCEx_PLL2_Config>
9000e6a4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e6a6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e6aa:	2d00      	cmp	r5, #0
9000e6ac:	f040 83fe 	bne.w	9000eeac <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000e6b0:	4f97      	ldr	r7, [pc, #604]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e6b2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000e6b4:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e6b6:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000e6ba:	4301      	orrs	r1, r0
9000e6bc:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e6be:	055f      	lsls	r7, r3, #21
9000e6c0:	d521      	bpl.n	9000e706 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e6c2:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000e6c6:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000e6ca:	f000 8521 	beq.w	9000f110 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000e6ce:	f200 80e1 	bhi.w	9000e894 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000e6d2:	2900      	cmp	r1, #0
9000e6d4:	f000 8418 	beq.w	9000ef08 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000e6d8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e6dc:	f040 80e2 	bne.w	9000e8a4 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e6e0:	2100      	movs	r1, #0
9000e6e2:	f104 0008 	add.w	r0, r4, #8
9000e6e6:	f7ff fe9b 	bl	9000e420 <RCCEx_PLL2_Config>
9000e6ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e6ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e6f0:	2d00      	cmp	r5, #0
9000e6f2:	f040 83e2 	bne.w	9000eeba <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000e6f6:	4f86      	ldr	r7, [pc, #536]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e6f8:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000e6fc:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e6fe:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000e702:	4301      	orrs	r1, r0
9000e704:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e706:	0518      	lsls	r0, r3, #20
9000e708:	d521      	bpl.n	9000e74e <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e70a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000e70e:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000e712:	f000 84bd 	beq.w	9000f090 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000e716:	f200 80c8 	bhi.w	9000e8aa <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000e71a:	2900      	cmp	r1, #0
9000e71c:	f000 83e7 	beq.w	9000eeee <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000e720:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000e724:	f040 80c9 	bne.w	9000e8ba <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e728:	2100      	movs	r1, #0
9000e72a:	f104 0008 	add.w	r0, r4, #8
9000e72e:	f7ff fe77 	bl	9000e420 <RCCEx_PLL2_Config>
9000e732:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e734:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e738:	2d00      	cmp	r5, #0
9000e73a:	f040 83b5 	bne.w	9000eea8 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000e73e:	4f74      	ldr	r7, [pc, #464]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e740:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000e744:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e746:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000e74a:	4301      	orrs	r1, r0
9000e74c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e74e:	0199      	lsls	r1, r3, #6
9000e750:	d518      	bpl.n	9000e784 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000e752:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000e754:	2920      	cmp	r1, #32
9000e756:	f000 841f 	beq.w	9000ef98 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000e75a:	f200 80b1 	bhi.w	9000e8c0 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000e75e:	b139      	cbz	r1, 9000e770 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e760:	2910      	cmp	r1, #16
9000e762:	f040 80b0 	bne.w	9000e8c6 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e766:	486a      	ldr	r0, [pc, #424]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e768:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e76a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e76e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e770:	2d00      	cmp	r5, #0
9000e772:	f040 83d8 	bne.w	9000ef26 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000e776:	4f66      	ldr	r7, [pc, #408]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e778:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000e77a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e77c:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000e780:	4301      	orrs	r1, r0
9000e782:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000e784:	04df      	lsls	r7, r3, #19
9000e786:	d51f      	bpl.n	9000e7c8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e788:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000e78a:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000e78e:	f000 84b5 	beq.w	9000f0fc <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000e792:	f200 809b 	bhi.w	9000e8cc <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000e796:	2900      	cmp	r1, #0
9000e798:	f000 83a3 	beq.w	9000eee2 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000e79c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000e7a0:	f040 809c 	bne.w	9000e8dc <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e7a4:	2100      	movs	r1, #0
9000e7a6:	f104 0008 	add.w	r0, r4, #8
9000e7aa:	f7ff fe39 	bl	9000e420 <RCCEx_PLL2_Config>
9000e7ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e7b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7b4:	2d00      	cmp	r5, #0
9000e7b6:	f040 837b 	bne.w	9000eeb0 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000e7ba:	4f55      	ldr	r7, [pc, #340]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e7bc:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000e7be:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e7c0:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000e7c4:	4301      	orrs	r1, r0
9000e7c6:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e7c8:	0498      	lsls	r0, r3, #18
9000e7ca:	d51d      	bpl.n	9000e808 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e7cc:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000e7ce:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000e7d2:	f000 8410 	beq.w	9000eff6 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000e7d6:	f200 8084 	bhi.w	9000e8e2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000e7da:	b159      	cbz	r1, 9000e7f4 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e7dc:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000e7e0:	f040 8087 	bne.w	9000e8f2 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e7e4:	2101      	movs	r1, #1
9000e7e6:	f104 0008 	add.w	r0, r4, #8
9000e7ea:	f7ff fe19 	bl	9000e420 <RCCEx_PLL2_Config>
9000e7ee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e7f0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7f4:	2d00      	cmp	r5, #0
9000e7f6:	f040 839a 	bne.w	9000ef2e <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000e7fa:	4f45      	ldr	r7, [pc, #276]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e7fc:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000e7fe:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e800:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000e804:	4301      	orrs	r1, r0
9000e806:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e808:	0459      	lsls	r1, r3, #17
9000e80a:	d51d      	bpl.n	9000e848 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000e80c:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000e810:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e814:	f000 83fb 	beq.w	9000f00e <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000e818:	d86e      	bhi.n	9000e8f8 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000e81a:	b151      	cbz	r1, 9000e832 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e81c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e820:	d172      	bne.n	9000e908 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e822:	2101      	movs	r1, #1
9000e824:	f104 0008 	add.w	r0, r4, #8
9000e828:	f7ff fdfa 	bl	9000e420 <RCCEx_PLL2_Config>
9000e82c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e82e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e832:	2d00      	cmp	r5, #0
9000e834:	f040 837f 	bne.w	9000ef36 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000e838:	4f35      	ldr	r7, [pc, #212]	; (9000e910 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e83a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000e83e:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e840:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000e844:	4301      	orrs	r1, r0
9000e846:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e848:	041f      	lsls	r7, r3, #16
9000e84a:	d50d      	bpl.n	9000e868 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000e84c:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000e84e:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e852:	f000 83c8 	beq.w	9000efe6 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000e856:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e85a:	f000 823b 	beq.w	9000ecd4 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000e85e:	2900      	cmp	r1, #0
9000e860:	f000 8240 	beq.w	9000ece4 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000e864:	2601      	movs	r6, #1
9000e866:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e868:	01d8      	lsls	r0, r3, #7
9000e86a:	d562      	bpl.n	9000e932 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000e86c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000e86e:	2903      	cmp	r1, #3
9000e870:	f200 84bf 	bhi.w	9000f1f2 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000e874:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e878:	004e0053 	.word	0x004e0053
9000e87c:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000e880:	29c0      	cmp	r1, #192	; 0xc0
9000e882:	f43f af12 	beq.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e886:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000e88a:	f43f af0e 	beq.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e88e:	2601      	movs	r6, #1
9000e890:	4635      	mov	r5, r6
9000e892:	e714      	b.n	9000e6be <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e894:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000e898:	f43f af2a 	beq.w	9000e6f0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e89c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000e8a0:	f43f af26 	beq.w	9000e6f0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e8a4:	2601      	movs	r6, #1
9000e8a6:	4635      	mov	r5, r6
9000e8a8:	e72d      	b.n	9000e706 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e8aa:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000e8ae:	f43f af43 	beq.w	9000e738 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e8b2:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000e8b6:	f43f af3f 	beq.w	9000e738 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e8ba:	2601      	movs	r6, #1
9000e8bc:	4635      	mov	r5, r6
9000e8be:	e746      	b.n	9000e74e <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000e8c0:	2930      	cmp	r1, #48	; 0x30
9000e8c2:	f43f af55 	beq.w	9000e770 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e8c6:	2601      	movs	r6, #1
9000e8c8:	4635      	mov	r5, r6
9000e8ca:	e75b      	b.n	9000e784 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e8cc:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000e8d0:	f43f af70 	beq.w	9000e7b4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e8d4:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000e8d8:	f43f af6c 	beq.w	9000e7b4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e8dc:	2601      	movs	r6, #1
9000e8de:	4635      	mov	r5, r6
9000e8e0:	e772      	b.n	9000e7c8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e8e2:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000e8e6:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000e8ea:	d083      	beq.n	9000e7f4 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e8ec:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000e8f0:	d080      	beq.n	9000e7f4 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e8f2:	2601      	movs	r6, #1
9000e8f4:	4635      	mov	r5, r6
9000e8f6:	e787      	b.n	9000e808 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000e8f8:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000e8fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000e900:	d097      	beq.n	9000e832 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e902:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000e906:	d094      	beq.n	9000e832 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e908:	2601      	movs	r6, #1
9000e90a:	4635      	mov	r5, r6
9000e90c:	e79c      	b.n	9000e848 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000e90e:	bf00      	nop
9000e910:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e914:	4839      	ldr	r0, [pc, #228]	; (9000e9fc <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e916:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e918:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e91c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e91e:	2d00      	cmp	r5, #0
9000e920:	f040 8303 	bne.w	9000ef2a <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000e924:	4f35      	ldr	r7, [pc, #212]	; (9000e9fc <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e926:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000e928:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e92a:	f021 0103 	bic.w	r1, r1, #3
9000e92e:	4301      	orrs	r1, r0
9000e930:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000e932:	0259      	lsls	r1, r3, #9
9000e934:	f100 826a 	bmi.w	9000ee0c <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e938:	07d8      	lsls	r0, r3, #31
9000e93a:	d52f      	bpl.n	9000e99c <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000e93c:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000e93e:	2928      	cmp	r1, #40	; 0x28
9000e940:	d82a      	bhi.n	9000e998 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000e942:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e946:	020a      	.short	0x020a
9000e948:	00290029 	.word	0x00290029
9000e94c:	00290029 	.word	0x00290029
9000e950:	00290029 	.word	0x00290029
9000e954:	02020029 	.word	0x02020029
9000e958:	00290029 	.word	0x00290029
9000e95c:	00290029 	.word	0x00290029
9000e960:	00290029 	.word	0x00290029
9000e964:	04070029 	.word	0x04070029
9000e968:	00290029 	.word	0x00290029
9000e96c:	00290029 	.word	0x00290029
9000e970:	00290029 	.word	0x00290029
9000e974:	020a0029 	.word	0x020a0029
9000e978:	00290029 	.word	0x00290029
9000e97c:	00290029 	.word	0x00290029
9000e980:	00290029 	.word	0x00290029
9000e984:	020a0029 	.word	0x020a0029
9000e988:	00290029 	.word	0x00290029
9000e98c:	00290029 	.word	0x00290029
9000e990:	00290029 	.word	0x00290029
9000e994:	020a0029 	.word	0x020a0029
9000e998:	2601      	movs	r6, #1
9000e99a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000e99c:	0799      	lsls	r1, r3, #30
9000e99e:	d51d      	bpl.n	9000e9dc <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000e9a0:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000e9a2:	2905      	cmp	r1, #5
9000e9a4:	f200 8421 	bhi.w	9000f1ea <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000e9a8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e9ac:	0006000e 	.word	0x0006000e
9000e9b0:	000e03c8 	.word	0x000e03c8
9000e9b4:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e9b8:	2101      	movs	r1, #1
9000e9ba:	f104 0008 	add.w	r0, r4, #8
9000e9be:	f7ff fd2f 	bl	9000e420 <RCCEx_PLL2_Config>
9000e9c2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e9c4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e9c8:	2d00      	cmp	r5, #0
9000e9ca:	f040 82b8 	bne.w	9000ef3e <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000e9ce:	4f0b      	ldr	r7, [pc, #44]	; (9000e9fc <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000e9d0:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000e9d2:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000e9d4:	f021 0107 	bic.w	r1, r1, #7
9000e9d8:	4301      	orrs	r1, r0
9000e9da:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e9dc:	075f      	lsls	r7, r3, #29
9000e9de:	d522      	bpl.n	9000ea26 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000e9e0:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000e9e4:	2905      	cmp	r1, #5
9000e9e6:	f200 8408 	bhi.w	9000f1fa <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000e9ea:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e9ee:	0011      	.short	0x0011
9000e9f0:	039b0009 	.word	0x039b0009
9000e9f4:	00110011 	.word	0x00110011
9000e9f8:	0011      	.short	0x0011
9000e9fa:	bf00      	nop
9000e9fc:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ea00:	2101      	movs	r1, #1
9000ea02:	f104 0008 	add.w	r0, r4, #8
9000ea06:	f7ff fd0b 	bl	9000e420 <RCCEx_PLL2_Config>
9000ea0a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ea0c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea10:	2d00      	cmp	r5, #0
9000ea12:	f040 8286 	bne.w	9000ef22 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000ea16:	4fae      	ldr	r7, [pc, #696]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ea18:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000ea1c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ea1e:	f021 0107 	bic.w	r1, r1, #7
9000ea22:	4301      	orrs	r1, r0
9000ea24:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000ea26:	0698      	lsls	r0, r3, #26
9000ea28:	d51f      	bpl.n	9000ea6a <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ea2a:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000ea2e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000ea32:	f000 82f7 	beq.w	9000f024 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000ea36:	f200 810b 	bhi.w	9000ec50 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000ea3a:	b159      	cbz	r1, 9000ea54 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ea3c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000ea40:	f040 8110 	bne.w	9000ec64 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ea44:	2100      	movs	r1, #0
9000ea46:	f104 0008 	add.w	r0, r4, #8
9000ea4a:	f7ff fce9 	bl	9000e420 <RCCEx_PLL2_Config>
9000ea4e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ea50:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea54:	2d00      	cmp	r5, #0
9000ea56:	f040 8260 	bne.w	9000ef1a <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000ea5a:	4f9d      	ldr	r7, [pc, #628]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ea5c:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000ea60:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ea62:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000ea66:	4301      	orrs	r1, r0
9000ea68:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000ea6a:	0659      	lsls	r1, r3, #25
9000ea6c:	d51f      	bpl.n	9000eaae <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ea6e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000ea72:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000ea76:	f000 829b 	beq.w	9000efb0 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000ea7a:	f200 80f6 	bhi.w	9000ec6a <HAL_RCCEx_PeriphCLKConfig+0x662>
9000ea7e:	b159      	cbz	r1, 9000ea98 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ea80:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000ea84:	f040 80fb 	bne.w	9000ec7e <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ea88:	2100      	movs	r1, #0
9000ea8a:	f104 0008 	add.w	r0, r4, #8
9000ea8e:	f7ff fcc7 	bl	9000e420 <RCCEx_PLL2_Config>
9000ea92:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ea94:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ea98:	2d00      	cmp	r5, #0
9000ea9a:	f040 824e 	bne.w	9000ef3a <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000ea9e:	4f8c      	ldr	r7, [pc, #560]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eaa0:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000eaa4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eaa6:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000eaaa:	4301      	orrs	r1, r0
9000eaac:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000eaae:	061f      	lsls	r7, r3, #24
9000eab0:	d51f      	bpl.n	9000eaf2 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000eab2:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000eab6:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000eaba:	f000 8289 	beq.w	9000efd0 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000eabe:	f200 80e1 	bhi.w	9000ec84 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000eac2:	b159      	cbz	r1, 9000eadc <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000eac4:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000eac8:	f040 80e6 	bne.w	9000ec98 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000eacc:	2100      	movs	r1, #0
9000eace:	f104 0008 	add.w	r0, r4, #8
9000ead2:	f7ff fca5 	bl	9000e420 <RCCEx_PLL2_Config>
9000ead6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ead8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eadc:	2d00      	cmp	r5, #0
9000eade:	f040 8228 	bne.w	9000ef32 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000eae2:	4f7b      	ldr	r7, [pc, #492]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eae4:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000eae8:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eaea:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000eaee:	4301      	orrs	r1, r0
9000eaf0:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000eaf2:	0718      	lsls	r0, r3, #28
9000eaf4:	d50b      	bpl.n	9000eb0e <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000eaf6:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000eafa:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000eafe:	f000 82a9 	beq.w	9000f054 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000eb02:	4f73      	ldr	r7, [pc, #460]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eb04:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000eb06:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000eb0a:	4301      	orrs	r1, r0
9000eb0c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000eb0e:	06d9      	lsls	r1, r3, #27
9000eb10:	d50b      	bpl.n	9000eb2a <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000eb12:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000eb16:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000eb1a:	f000 82a8 	beq.w	9000f06e <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000eb1e:	4f6c      	ldr	r7, [pc, #432]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eb20:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eb22:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000eb26:	4301      	orrs	r1, r0
9000eb28:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000eb2a:	031f      	lsls	r7, r3, #12
9000eb2c:	d50e      	bpl.n	9000eb4c <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000eb2e:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000eb32:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000eb36:	f000 80f4 	beq.w	9000ed22 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000eb3a:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000eb3e:	f000 80f8 	beq.w	9000ed32 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000eb42:	2900      	cmp	r1, #0
9000eb44:	f000 821c 	beq.w	9000ef80 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000eb48:	2601      	movs	r6, #1
9000eb4a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000eb4c:	0358      	lsls	r0, r3, #13
9000eb4e:	d50f      	bpl.n	9000eb70 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000eb50:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000eb54:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000eb58:	f000 80cf 	beq.w	9000ecfa <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000eb5c:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000eb60:	f000 80d3 	beq.w	9000ed0a <HAL_RCCEx_PeriphCLKConfig+0x702>
9000eb64:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000eb68:	f000 8202 	beq.w	9000ef70 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000eb6c:	2601      	movs	r6, #1
9000eb6e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000eb70:	03d9      	lsls	r1, r3, #15
9000eb72:	d509      	bpl.n	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000eb74:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000eb76:	2900      	cmp	r1, #0
9000eb78:	f000 81f1 	beq.w	9000ef5e <HAL_RCCEx_PeriphCLKConfig+0x956>
9000eb7c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000eb80:	f000 819d 	beq.w	9000eebe <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000eb84:	2601      	movs	r6, #1
9000eb86:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000eb88:	009f      	lsls	r7, r3, #2
9000eb8a:	f100 80f1 	bmi.w	9000ed70 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000eb8e:	0398      	lsls	r0, r3, #14
9000eb90:	d50c      	bpl.n	9000ebac <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000eb92:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000eb96:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000eb9a:	f000 81d8 	beq.w	9000ef4e <HAL_RCCEx_PeriphCLKConfig+0x946>
9000eb9e:	d97e      	bls.n	9000ec9e <HAL_RCCEx_PeriphCLKConfig+0x696>
9000eba0:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000eba4:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000eba8:	d07b      	beq.n	9000eca2 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000ebaa:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000ebac:	02d9      	lsls	r1, r3, #11
9000ebae:	d506      	bpl.n	9000ebbe <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000ebb0:	4847      	ldr	r0, [pc, #284]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ebb2:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000ebb4:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ebb6:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000ebba:	4329      	orrs	r1, r5
9000ebbc:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000ebbe:	00df      	lsls	r7, r3, #3
9000ebc0:	d507      	bpl.n	9000ebd2 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000ebc2:	4843      	ldr	r0, [pc, #268]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ebc4:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000ebc8:	6901      	ldr	r1, [r0, #16]
9000ebca:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000ebce:	4329      	orrs	r1, r5
9000ebd0:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000ebd2:	029d      	lsls	r5, r3, #10
9000ebd4:	d506      	bpl.n	9000ebe4 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000ebd6:	483e      	ldr	r0, [pc, #248]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ebd8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000ebda:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ebdc:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000ebe0:	4329      	orrs	r1, r5
9000ebe2:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000ebe4:	0058      	lsls	r0, r3, #1
9000ebe6:	d509      	bpl.n	9000ebfc <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000ebe8:	4939      	ldr	r1, [pc, #228]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ebea:	6908      	ldr	r0, [r1, #16]
9000ebec:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000ebf0:	6108      	str	r0, [r1, #16]
9000ebf2:	6908      	ldr	r0, [r1, #16]
9000ebf4:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000ebf8:	4328      	orrs	r0, r5
9000ebfa:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000ebfc:	2b00      	cmp	r3, #0
9000ebfe:	da06      	bge.n	9000ec0e <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000ec00:	4833      	ldr	r0, [pc, #204]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ec02:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000ec04:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000ec06:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000ec0a:	4329      	orrs	r1, r5
9000ec0c:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000ec0e:	0219      	lsls	r1, r3, #8
9000ec10:	d507      	bpl.n	9000ec22 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000ec12:	492f      	ldr	r1, [pc, #188]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ec14:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000ec18:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000ec1a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000ec1e:	4303      	orrs	r3, r0
9000ec20:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000ec22:	07d3      	lsls	r3, r2, #31
9000ec24:	f100 80b0 	bmi.w	9000ed88 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ec28:	0797      	lsls	r7, r2, #30
9000ec2a:	f100 80ba 	bmi.w	9000eda2 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ec2e:	0755      	lsls	r5, r2, #29
9000ec30:	f100 80c4 	bmi.w	9000edbc <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ec34:	0710      	lsls	r0, r2, #28
9000ec36:	f100 80ce 	bmi.w	9000edd6 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ec3a:	06d1      	lsls	r1, r2, #27
9000ec3c:	f100 80d8 	bmi.w	9000edf0 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ec40:	0692      	lsls	r2, r2, #26
9000ec42:	f100 8125 	bmi.w	9000ee90 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000ec46:	1e30      	subs	r0, r6, #0
9000ec48:	bf18      	it	ne
9000ec4a:	2001      	movne	r0, #1
}
9000ec4c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ec50:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000ec54:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000ec58:	f43f aefc 	beq.w	9000ea54 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ec5c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000ec60:	f43f aef8 	beq.w	9000ea54 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ec64:	2601      	movs	r6, #1
9000ec66:	4635      	mov	r5, r6
9000ec68:	e6ff      	b.n	9000ea6a <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ec6a:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000ec6e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000ec72:	f43f af11 	beq.w	9000ea98 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ec76:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000ec7a:	f43f af0d 	beq.w	9000ea98 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ec7e:	2601      	movs	r6, #1
9000ec80:	4635      	mov	r5, r6
9000ec82:	e714      	b.n	9000eaae <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ec84:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000ec88:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000ec8c:	f43f af26 	beq.w	9000eadc <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ec90:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000ec94:	f43f af22 	beq.w	9000eadc <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ec98:	2601      	movs	r6, #1
9000ec9a:	4635      	mov	r5, r6
9000ec9c:	e729      	b.n	9000eaf2 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000ec9e:	2900      	cmp	r1, #0
9000eca0:	d183      	bne.n	9000ebaa <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000eca2:	2d00      	cmp	r5, #0
9000eca4:	f040 8151 	bne.w	9000ef4a <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000eca8:	4d09      	ldr	r5, [pc, #36]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ecaa:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000ecac:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000ecb0:	4301      	orrs	r1, r0
9000ecb2:	6569      	str	r1, [r5, #84]	; 0x54
9000ecb4:	e77a      	b.n	9000ebac <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000ecb6:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000ecb8:	2d00      	cmp	r5, #0
9000ecba:	f040 80fb 	bne.w	9000eeb4 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000ecbe:	4f04      	ldr	r7, [pc, #16]	; (9000ecd0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ecc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000ecc2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ecc4:	f021 0107 	bic.w	r1, r1, #7
9000ecc8:	4301      	orrs	r1, r0
9000ecca:	6539      	str	r1, [r7, #80]	; 0x50
9000eccc:	e4d7      	b.n	9000e67e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000ecce:	bf00      	nop
9000ecd0:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ecd4:	2101      	movs	r1, #1
9000ecd6:	f104 0008 	add.w	r0, r4, #8
9000ecda:	f7ff fba1 	bl	9000e420 <RCCEx_PLL2_Config>
9000ecde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ece0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ece4:	2d00      	cmp	r5, #0
9000ece6:	f040 811a 	bne.w	9000ef1e <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000ecea:	4fb7      	ldr	r7, [pc, #732]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ecec:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000ecee:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ecf0:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000ecf4:	4301      	orrs	r1, r0
9000ecf6:	6539      	str	r1, [r7, #80]	; 0x50
9000ecf8:	e5b6      	b.n	9000e868 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ecfa:	2101      	movs	r1, #1
9000ecfc:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ed00:	f7ff fc08 	bl	9000e514 <RCCEx_PLL3_Config>
9000ed04:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ed06:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed0a:	2d00      	cmp	r5, #0
9000ed0c:	f040 811b 	bne.w	9000ef46 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ed10:	4fad      	ldr	r7, [pc, #692]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ed12:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000ed16:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ed18:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000ed1c:	4301      	orrs	r1, r0
9000ed1e:	6579      	str	r1, [r7, #84]	; 0x54
9000ed20:	e726      	b.n	9000eb70 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ed22:	2102      	movs	r1, #2
9000ed24:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ed28:	f7ff fbf4 	bl	9000e514 <RCCEx_PLL3_Config>
9000ed2c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ed2e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed32:	2d00      	cmp	r5, #0
9000ed34:	f040 8105 	bne.w	9000ef42 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000ed38:	4fa3      	ldr	r7, [pc, #652]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ed3a:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000ed3e:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ed40:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000ed44:	4301      	orrs	r1, r0
9000ed46:	65b9      	str	r1, [r7, #88]	; 0x58
9000ed48:	e700      	b.n	9000eb4c <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ed4a:	2101      	movs	r1, #1
9000ed4c:	f104 0008 	add.w	r0, r4, #8
9000ed50:	f7ff fb66 	bl	9000e420 <RCCEx_PLL2_Config>
9000ed54:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ed56:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ed5a:	2d00      	cmp	r5, #0
9000ed5c:	f040 80db 	bne.w	9000ef16 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000ed60:	4f99      	ldr	r7, [pc, #612]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ed62:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000ed64:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ed66:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000ed6a:	4301      	orrs	r1, r0
9000ed6c:	6579      	str	r1, [r7, #84]	; 0x54
9000ed6e:	e615      	b.n	9000e99c <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000ed70:	2102      	movs	r1, #2
9000ed72:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ed76:	f7ff fbcd 	bl	9000e514 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ed7a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000ed7e:	2800      	cmp	r0, #0
9000ed80:	f43f af05 	beq.w	9000eb8e <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000ed84:	2601      	movs	r6, #1
9000ed86:	e702      	b.n	9000eb8e <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ed88:	2100      	movs	r1, #0
9000ed8a:	f104 0008 	add.w	r0, r4, #8
9000ed8e:	f7ff fb47 	bl	9000e420 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ed92:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ed94:	2800      	cmp	r0, #0
9000ed96:	f43f af47 	beq.w	9000ec28 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ed9a:	0797      	lsls	r7, r2, #30
9000ed9c:	4606      	mov	r6, r0
9000ed9e:	f57f af46 	bpl.w	9000ec2e <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eda2:	2101      	movs	r1, #1
9000eda4:	f104 0008 	add.w	r0, r4, #8
9000eda8:	f7ff fb3a 	bl	9000e420 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000edac:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000edae:	2800      	cmp	r0, #0
9000edb0:	f43f af3d 	beq.w	9000ec2e <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000edb4:	0755      	lsls	r5, r2, #29
9000edb6:	4606      	mov	r6, r0
9000edb8:	f57f af3c 	bpl.w	9000ec34 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000edbc:	2102      	movs	r1, #2
9000edbe:	f104 0008 	add.w	r0, r4, #8
9000edc2:	f7ff fb2d 	bl	9000e420 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000edc6:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000edc8:	2800      	cmp	r0, #0
9000edca:	f43f af33 	beq.w	9000ec34 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000edce:	4606      	mov	r6, r0
9000edd0:	0710      	lsls	r0, r2, #28
9000edd2:	f57f af32 	bpl.w	9000ec3a <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000edd6:	2100      	movs	r1, #0
9000edd8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eddc:	f7ff fb9a 	bl	9000e514 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ede0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ede2:	2800      	cmp	r0, #0
9000ede4:	f43f af29 	beq.w	9000ec3a <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ede8:	06d1      	lsls	r1, r2, #27
9000edea:	4606      	mov	r6, r0
9000edec:	f57f af28 	bpl.w	9000ec40 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000edf0:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000edf4:	2101      	movs	r1, #1
9000edf6:	4628      	mov	r0, r5
9000edf8:	f7ff fb8c 	bl	9000e514 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000edfc:	2800      	cmp	r0, #0
9000edfe:	f000 80c9 	beq.w	9000ef94 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ee02:	6863      	ldr	r3, [r4, #4]
9000ee04:	069b      	lsls	r3, r3, #26
9000ee06:	d54c      	bpl.n	9000eea2 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000ee08:	4606      	mov	r6, r0
9000ee0a:	e043      	b.n	9000ee94 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000ee0c:	4f6f      	ldr	r7, [pc, #444]	; (9000efcc <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000ee0e:	683b      	ldr	r3, [r7, #0]
9000ee10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ee14:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000ee16:	f7fb fc4f 	bl	9000a6b8 <HAL_GetTick>
9000ee1a:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ee1c:	e006      	b.n	9000ee2c <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000ee1e:	f7fb fc4b 	bl	9000a6b8 <HAL_GetTick>
9000ee22:	eba0 0008 	sub.w	r0, r0, r8
9000ee26:	2864      	cmp	r0, #100	; 0x64
9000ee28:	f200 81a0 	bhi.w	9000f16c <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ee2c:	683b      	ldr	r3, [r7, #0]
9000ee2e:	05da      	lsls	r2, r3, #23
9000ee30:	d5f5      	bpl.n	9000ee1e <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000ee32:	2d00      	cmp	r5, #0
9000ee34:	f040 81d4 	bne.w	9000f1e0 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000ee38:	4a63      	ldr	r2, [pc, #396]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee3a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000ee3e:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000ee40:	4059      	eors	r1, r3
9000ee42:	f411 7f40 	tst.w	r1, #768	; 0x300
9000ee46:	d00b      	beq.n	9000ee60 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000ee48:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000ee4a:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000ee4c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000ee50:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000ee54:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000ee56:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000ee58:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000ee5c:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000ee5e:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000ee60:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000ee64:	f000 819e 	beq.w	9000f1a4 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ee68:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000ee6c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000ee70:	f000 81ac 	beq.w	9000f1cc <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000ee74:	4954      	ldr	r1, [pc, #336]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee76:	690a      	ldr	r2, [r1, #16]
9000ee78:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000ee7c:	610a      	str	r2, [r1, #16]
9000ee7e:	4852      	ldr	r0, [pc, #328]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee80:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000ee84:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000ee86:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ee88:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ee8c:	6701      	str	r1, [r0, #112]	; 0x70
9000ee8e:	e553      	b.n	9000e938 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ee90:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ee94:	2102      	movs	r1, #2
9000ee96:	4628      	mov	r0, r5
9000ee98:	f7ff fb3c 	bl	9000e514 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000ee9c:	2800      	cmp	r0, #0
9000ee9e:	f43f aed2 	beq.w	9000ec46 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000eea2:	2001      	movs	r0, #1
}
9000eea4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000eea8:	462e      	mov	r6, r5
9000eeaa:	e450      	b.n	9000e74e <HAL_RCCEx_PeriphCLKConfig+0x146>
9000eeac:	462e      	mov	r6, r5
9000eeae:	e406      	b.n	9000e6be <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000eeb0:	462e      	mov	r6, r5
9000eeb2:	e489      	b.n	9000e7c8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000eeb4:	462e      	mov	r6, r5
9000eeb6:	f7ff bbe2 	b.w	9000e67e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000eeba:	462e      	mov	r6, r5
9000eebc:	e423      	b.n	9000e706 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000eebe:	2102      	movs	r1, #2
9000eec0:	f104 0008 	add.w	r0, r4, #8
9000eec4:	f7ff faac 	bl	9000e420 <RCCEx_PLL2_Config>
9000eec8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000eeca:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eece:	2d00      	cmp	r5, #0
9000eed0:	d14c      	bne.n	9000ef6c <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000eed2:	4f3d      	ldr	r7, [pc, #244]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000eed4:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000eed6:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000eed8:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000eedc:	4301      	orrs	r1, r0
9000eede:	64f9      	str	r1, [r7, #76]	; 0x4c
9000eee0:	e652      	b.n	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eee2:	4839      	ldr	r0, [pc, #228]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000eee4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000eee6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eeea:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000eeec:	e462      	b.n	9000e7b4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eeee:	4836      	ldr	r0, [pc, #216]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000eef0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000eef2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eef6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000eef8:	e41e      	b.n	9000e738 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eefa:	4833      	ldr	r0, [pc, #204]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000eefc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000eefe:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ef02:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000ef04:	f7ff bbd1 	b.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ef08:	482f      	ldr	r0, [pc, #188]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef0a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ef0c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ef10:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000ef12:	f7ff bbed 	b.w	9000e6f0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000ef16:	462e      	mov	r6, r5
9000ef18:	e540      	b.n	9000e99c <HAL_RCCEx_PeriphCLKConfig+0x394>
9000ef1a:	462e      	mov	r6, r5
9000ef1c:	e5a5      	b.n	9000ea6a <HAL_RCCEx_PeriphCLKConfig+0x462>
9000ef1e:	462e      	mov	r6, r5
9000ef20:	e4a2      	b.n	9000e868 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000ef22:	462e      	mov	r6, r5
9000ef24:	e57f      	b.n	9000ea26 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000ef26:	462e      	mov	r6, r5
9000ef28:	e42c      	b.n	9000e784 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000ef2a:	462e      	mov	r6, r5
9000ef2c:	e501      	b.n	9000e932 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000ef2e:	462e      	mov	r6, r5
9000ef30:	e46a      	b.n	9000e808 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000ef32:	462e      	mov	r6, r5
9000ef34:	e5dd      	b.n	9000eaf2 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000ef36:	462e      	mov	r6, r5
9000ef38:	e486      	b.n	9000e848 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000ef3a:	462e      	mov	r6, r5
9000ef3c:	e5b7      	b.n	9000eaae <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000ef3e:	462e      	mov	r6, r5
9000ef40:	e54c      	b.n	9000e9dc <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000ef42:	462e      	mov	r6, r5
9000ef44:	e602      	b.n	9000eb4c <HAL_RCCEx_PeriphCLKConfig+0x544>
9000ef46:	462e      	mov	r6, r5
9000ef48:	e612      	b.n	9000eb70 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000ef4a:	462e      	mov	r6, r5
9000ef4c:	e62e      	b.n	9000ebac <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ef4e:	4f1e      	ldr	r7, [pc, #120]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef50:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000ef52:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000ef56:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000ef58:	2d00      	cmp	r5, #0
9000ef5a:	d1f6      	bne.n	9000ef4a <HAL_RCCEx_PeriphCLKConfig+0x942>
9000ef5c:	e6a4      	b.n	9000eca8 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ef5e:	481a      	ldr	r0, [pc, #104]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef60:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ef62:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ef66:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000ef68:	2d00      	cmp	r5, #0
9000ef6a:	d0b2      	beq.n	9000eed2 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000ef6c:	462e      	mov	r6, r5
9000ef6e:	e60b      	b.n	9000eb88 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ef70:	4815      	ldr	r0, [pc, #84]	; (9000efc8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef72:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ef74:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ef78:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000ef7a:	2d00      	cmp	r5, #0
9000ef7c:	d1e3      	bne.n	9000ef46 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000ef7e:	e6c7      	b.n	9000ed10 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ef80:	f104 0008 	add.w	r0, r4, #8
9000ef84:	f7ff fa4c 	bl	9000e420 <RCCEx_PLL2_Config>
9000ef88:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ef8a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ef8e:	2d00      	cmp	r5, #0
9000ef90:	d1d7      	bne.n	9000ef42 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000ef92:	e6d1      	b.n	9000ed38 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ef94:	6862      	ldr	r2, [r4, #4]
9000ef96:	e653      	b.n	9000ec40 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000ef98:	2102      	movs	r1, #2
9000ef9a:	f104 0008 	add.w	r0, r4, #8
9000ef9e:	f7ff fa3f 	bl	9000e420 <RCCEx_PLL2_Config>
9000efa2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000efa4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efa8:	2d00      	cmp	r5, #0
9000efaa:	d1bc      	bne.n	9000ef26 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000efac:	f7ff bbe3 	b.w	9000e776 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000efb0:	2102      	movs	r1, #2
9000efb2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000efb6:	f7ff faad 	bl	9000e514 <RCCEx_PLL3_Config>
9000efba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000efbc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efc0:	2d00      	cmp	r5, #0
9000efc2:	d1ba      	bne.n	9000ef3a <HAL_RCCEx_PeriphCLKConfig+0x932>
9000efc4:	e56b      	b.n	9000ea9e <HAL_RCCEx_PeriphCLKConfig+0x496>
9000efc6:	bf00      	nop
9000efc8:	58024400 	.word	0x58024400
9000efcc:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000efd0:	2102      	movs	r1, #2
9000efd2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000efd6:	f7ff fa9d 	bl	9000e514 <RCCEx_PLL3_Config>
9000efda:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000efdc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efe0:	2d00      	cmp	r5, #0
9000efe2:	d1a6      	bne.n	9000ef32 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000efe4:	e57d      	b.n	9000eae2 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000efe6:	4886      	ldr	r0, [pc, #536]	; (9000f200 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000efe8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000efea:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000efee:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000eff0:	2d00      	cmp	r5, #0
9000eff2:	d194      	bne.n	9000ef1e <HAL_RCCEx_PeriphCLKConfig+0x916>
9000eff4:	e679      	b.n	9000ecea <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000eff6:	2101      	movs	r1, #1
9000eff8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000effc:	f7ff fa8a 	bl	9000e514 <RCCEx_PLL3_Config>
9000f000:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f002:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f006:	2d00      	cmp	r5, #0
9000f008:	d191      	bne.n	9000ef2e <HAL_RCCEx_PeriphCLKConfig+0x926>
9000f00a:	f7ff bbf6 	b.w	9000e7fa <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f00e:	2101      	movs	r1, #1
9000f010:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f014:	f7ff fa7e 	bl	9000e514 <RCCEx_PLL3_Config>
9000f018:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f01a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f01e:	2d00      	cmp	r5, #0
9000f020:	d189      	bne.n	9000ef36 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000f022:	e409      	b.n	9000e838 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f024:	2102      	movs	r1, #2
9000f026:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f02a:	f7ff fa73 	bl	9000e514 <RCCEx_PLL3_Config>
9000f02e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f030:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f034:	2d00      	cmp	r5, #0
9000f036:	f47f af70 	bne.w	9000ef1a <HAL_RCCEx_PeriphCLKConfig+0x912>
9000f03a:	e50e      	b.n	9000ea5a <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f03c:	2102      	movs	r1, #2
9000f03e:	f104 0008 	add.w	r0, r4, #8
9000f042:	f7ff f9ed 	bl	9000e420 <RCCEx_PLL2_Config>
9000f046:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000f048:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f04c:	2d00      	cmp	r5, #0
9000f04e:	f47f af6c 	bne.w	9000ef2a <HAL_RCCEx_PeriphCLKConfig+0x922>
9000f052:	e467      	b.n	9000e924 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f054:	2102      	movs	r1, #2
9000f056:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f05a:	f7ff fa5b 	bl	9000e514 <RCCEx_PLL3_Config>
9000f05e:	2800      	cmp	r0, #0
9000f060:	f040 8094 	bne.w	9000f18c <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f064:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f068:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f06c:	e549      	b.n	9000eb02 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f06e:	2102      	movs	r1, #2
9000f070:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f074:	f7ff fa4e 	bl	9000e514 <RCCEx_PLL3_Config>
9000f078:	2800      	cmp	r0, #0
9000f07a:	f040 808d 	bne.w	9000f198 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f07e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f082:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f086:	e54a      	b.n	9000eb1e <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000f088:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f08c:	f7ff bae9 	b.w	9000e662 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f090:	2100      	movs	r1, #0
9000f092:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f096:	f7ff fa3d 	bl	9000e514 <RCCEx_PLL3_Config>
9000f09a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f09c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f0a0:	f7ff bb4a 	b.w	9000e738 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f0a4:	2100      	movs	r1, #0
9000f0a6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f0aa:	f7ff fa33 	bl	9000e514 <RCCEx_PLL3_Config>
9000f0ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f0b0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f0b4:	e600      	b.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f0b6:	2100      	movs	r1, #0
9000f0b8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f0bc:	f7ff fa2a 	bl	9000e514 <RCCEx_PLL3_Config>
9000f0c0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f0c2:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f0c6:	f7ff baf0 	b.w	9000e6aa <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f0ca:	2102      	movs	r1, #2
9000f0cc:	3028      	adds	r0, #40	; 0x28
9000f0ce:	f7ff fa21 	bl	9000e514 <RCCEx_PLL3_Config>
9000f0d2:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000f0d4:	2e00      	cmp	r6, #0
9000f0d6:	f43f aab5 	beq.w	9000e644 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000f0da:	e7d5      	b.n	9000f088 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f0dc:	4848      	ldr	r0, [pc, #288]	; (9000f200 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000f0de:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f0e0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f0e2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f0e6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f0e8:	e5e6      	b.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f0ea:	2100      	movs	r1, #0
9000f0ec:	f104 0008 	add.w	r0, r4, #8
9000f0f0:	f7ff f996 	bl	9000e420 <RCCEx_PLL2_Config>
9000f0f4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f0f6:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f0fa:	e5dd      	b.n	9000ecb8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f0fc:	2100      	movs	r1, #0
9000f0fe:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f102:	f7ff fa07 	bl	9000e514 <RCCEx_PLL3_Config>
9000f106:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f108:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f10c:	f7ff bb52 	b.w	9000e7b4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f110:	2100      	movs	r1, #0
9000f112:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f116:	f7ff f9fd 	bl	9000e514 <RCCEx_PLL3_Config>
9000f11a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f11c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f120:	f7ff bae6 	b.w	9000e6f0 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f124:	2101      	movs	r1, #1
9000f126:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f12a:	f7ff f9f3 	bl	9000e514 <RCCEx_PLL3_Config>
9000f12e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f130:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f134:	2d00      	cmp	r5, #0
9000f136:	f47f aef4 	bne.w	9000ef22 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000f13a:	e46c      	b.n	9000ea16 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f13c:	2101      	movs	r1, #1
9000f13e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f142:	f7ff f9e7 	bl	9000e514 <RCCEx_PLL3_Config>
9000f146:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f148:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f14c:	2d00      	cmp	r5, #0
9000f14e:	f47f aef6 	bne.w	9000ef3e <HAL_RCCEx_PeriphCLKConfig+0x936>
9000f152:	e43c      	b.n	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f154:	2101      	movs	r1, #1
9000f156:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f15a:	f7ff f9db 	bl	9000e514 <RCCEx_PLL3_Config>
9000f15e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f160:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f164:	2d00      	cmp	r5, #0
9000f166:	f47f aed6 	bne.w	9000ef16 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000f16a:	e5f9      	b.n	9000ed60 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000f16c:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f16e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f172:	4635      	mov	r5, r6
9000f174:	f7ff bbe0 	b.w	9000e938 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f178:	2601      	movs	r6, #1
9000f17a:	f7ff ba72 	b.w	9000e662 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f17e:	4d20      	ldr	r5, [pc, #128]	; (9000f200 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f180:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f182:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f186:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000f188:	f7ff ba64 	b.w	9000e654 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f18c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000f190:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f192:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f196:	e4b4      	b.n	9000eb02 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f198:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000f19c:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f19e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f1a2:	e4bc      	b.n	9000eb1e <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000f1a4:	f7fb fa88 	bl	9000a6b8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f1a8:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000f200 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000f1ac:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f1ae:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f1b2:	e004      	b.n	9000f1be <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f1b4:	f7fb fa80 	bl	9000a6b8 <HAL_GetTick>
9000f1b8:	1bc0      	subs	r0, r0, r7
9000f1ba:	4548      	cmp	r0, r9
9000f1bc:	d8d6      	bhi.n	9000f16c <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f1be:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000f1c2:	079b      	lsls	r3, r3, #30
9000f1c4:	d5f6      	bpl.n	9000f1b4 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f1c6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f1ca:	e64d      	b.n	9000ee68 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000f1cc:	480c      	ldr	r0, [pc, #48]	; (9000f200 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f1ce:	4a0d      	ldr	r2, [pc, #52]	; (9000f204 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000f1d0:	6901      	ldr	r1, [r0, #16]
9000f1d2:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000f1d6:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000f1da:	430a      	orrs	r2, r1
9000f1dc:	6102      	str	r2, [r0, #16]
9000f1de:	e64e      	b.n	9000ee7e <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f1e0:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f1e4:	462e      	mov	r6, r5
9000f1e6:	f7ff bba7 	b.w	9000e938 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000f1ea:	2601      	movs	r6, #1
9000f1ec:	4635      	mov	r5, r6
9000f1ee:	f7ff bbf5 	b.w	9000e9dc <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000f1f2:	2601      	movs	r6, #1
9000f1f4:	4635      	mov	r5, r6
9000f1f6:	f7ff bb9c 	b.w	9000e932 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000f1fa:	2601      	movs	r6, #1
9000f1fc:	4635      	mov	r5, r6
9000f1fe:	e412      	b.n	9000ea26 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000f200:	58024400 	.word	0x58024400
9000f204:	00ffffcf 	.word	0x00ffffcf

9000f208 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000f208:	b318      	cbz	r0, 9000f252 <HAL_SDRAM_Init+0x4a>
{
9000f20a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000f20c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000f210:	4604      	mov	r4, r0
9000f212:	460d      	mov	r5, r1
9000f214:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f218:	b1b3      	cbz	r3, 9000f248 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f21a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f21c:	2302      	movs	r3, #2
9000f21e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f222:	f851 0b04 	ldr.w	r0, [r1], #4
9000f226:	f000 fa39 	bl	9000f69c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000f22a:	6862      	ldr	r2, [r4, #4]
9000f22c:	4629      	mov	r1, r5
9000f22e:	6820      	ldr	r0, [r4, #0]
9000f230:	f000 fa72 	bl	9000f718 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000f234:	4a08      	ldr	r2, [pc, #32]	; (9000f258 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f236:	2101      	movs	r1, #1

  return HAL_OK;
9000f238:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000f23a:	6813      	ldr	r3, [r2, #0]
9000f23c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000f240:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f242:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000f246:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000f248:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000f24c:	f7f4 f810 	bl	90003270 <HAL_SDRAM_MspInit>
9000f250:	e7e3      	b.n	9000f21a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000f252:	2001      	movs	r0, #1
}
9000f254:	4770      	bx	lr
9000f256:	bf00      	nop
9000f258:	52004000 	.word	0x52004000

9000f25c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000f25c:	b510      	push	{r4, lr}
9000f25e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000f260:	f7f4 f882 	bl	90003368 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000f264:	e9d4 0100 	ldrd	r0, r1, [r4]
9000f268:	f000 faa4 	bl	9000f7b4 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000f26c:	2000      	movs	r0, #0
9000f26e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000f272:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000f276:	bd10      	pop	{r4, pc}

9000f278 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000f278:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f27a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f27e:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000f280:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f282:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000f284:	d004      	beq.n	9000f290 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000f286:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000f28a:	2e01      	cmp	r6, #1
9000f28c:	d001      	beq.n	9000f292 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000f28e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f290:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f292:	2302      	movs	r3, #2
9000f294:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f296:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f298:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f29c:	f000 fa9e 	bl	9000f7dc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000f2a0:	682b      	ldr	r3, [r5, #0]
9000f2a2:	2b02      	cmp	r3, #2
9000f2a4:	d003      	beq.n	9000f2ae <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000f2a6:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000f2a8:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000f2ac:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f2ae:	2305      	movs	r3, #5
  return HAL_OK;
9000f2b0:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f2b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000f2b6:	bd70      	pop	{r4, r5, r6, pc}

9000f2b8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000f2b8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f2ba:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f2be:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f2c0:	2b02      	cmp	r3, #2
9000f2c2:	b2d8      	uxtb	r0, r3
9000f2c4:	d005      	beq.n	9000f2d2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000f2c6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000f2ca:	2b01      	cmp	r3, #1
9000f2cc:	b2dd      	uxtb	r5, r3
9000f2ce:	d001      	beq.n	9000f2d4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000f2d0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f2d2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f2d4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f2d6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f2d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f2dc:	f000 fa96 	bl	9000f80c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000f2e0:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000f2e2:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000f2e6:	bd38      	pop	{r3, r4, r5, pc}

9000f2e8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000f2e8:	4770      	bx	lr
9000f2ea:	bf00      	nop

9000f2ec <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000f2ec:	2800      	cmp	r0, #0
9000f2ee:	f000 80a5 	beq.w	9000f43c <HAL_TIM_Base_Init+0x150>
{
9000f2f2:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000f2f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f2f8:	4604      	mov	r4, r0
9000f2fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f2fe:	2b00      	cmp	r3, #0
9000f300:	d076      	beq.n	9000f3f0 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000f302:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f304:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f306:	494e      	ldr	r1, [pc, #312]	; (9000f440 <HAL_TIM_Base_Init+0x154>)
9000f308:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000f30c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f310:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000f314:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f316:	fab1 f181 	clz	r1, r1
9000f31a:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000f31e:	d027      	beq.n	9000f370 <HAL_TIM_Base_Init+0x84>
9000f320:	bb31      	cbnz	r1, 9000f370 <HAL_TIM_Base_Init+0x84>
9000f322:	4848      	ldr	r0, [pc, #288]	; (9000f444 <HAL_TIM_Base_Init+0x158>)
9000f324:	4d48      	ldr	r5, [pc, #288]	; (9000f448 <HAL_TIM_Base_Init+0x15c>)
9000f326:	4282      	cmp	r2, r0
9000f328:	d067      	beq.n	9000f3fa <HAL_TIM_Base_Init+0x10e>
9000f32a:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f32e:	4282      	cmp	r2, r0
9000f330:	d063      	beq.n	9000f3fa <HAL_TIM_Base_Init+0x10e>
9000f332:	1b55      	subs	r5, r2, r5
9000f334:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f338:	fab5 f585 	clz	r5, r5
9000f33c:	4282      	cmp	r2, r0
9000f33e:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000f342:	d063      	beq.n	9000f40c <HAL_TIM_Base_Init+0x120>
9000f344:	2d00      	cmp	r5, #0
9000f346:	d161      	bne.n	9000f40c <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f348:	4840      	ldr	r0, [pc, #256]	; (9000f44c <HAL_TIM_Base_Init+0x160>)
9000f34a:	4941      	ldr	r1, [pc, #260]	; (9000f450 <HAL_TIM_Base_Init+0x164>)
9000f34c:	428a      	cmp	r2, r1
9000f34e:	bf18      	it	ne
9000f350:	4282      	cmpne	r2, r0
9000f352:	d065      	beq.n	9000f420 <HAL_TIM_Base_Init+0x134>
9000f354:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000f358:	428a      	cmp	r2, r1
9000f35a:	d061      	beq.n	9000f420 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f35c:	69a0      	ldr	r0, [r4, #24]
9000f35e:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f362:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f364:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f366:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000f368:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f36a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f36c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f36e:	e023      	b.n	9000f3b8 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f370:	4d35      	ldr	r5, [pc, #212]	; (9000f448 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f372:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f376:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f378:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000f37a:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f37c:	fab5 f585 	clz	r5, r5
9000f380:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f382:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f384:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f388:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f38a:	69a0      	ldr	r0, [r4, #24]
9000f38c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f390:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f392:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f394:	68e3      	ldr	r3, [r4, #12]
9000f396:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f398:	6863      	ldr	r3, [r4, #4]
9000f39a:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f39c:	b951      	cbnz	r1, 9000f3b4 <HAL_TIM_Base_Init+0xc8>
9000f39e:	b94d      	cbnz	r5, 9000f3b4 <HAL_TIM_Base_Init+0xc8>
9000f3a0:	492a      	ldr	r1, [pc, #168]	; (9000f44c <HAL_TIM_Base_Init+0x160>)
9000f3a2:	4b2b      	ldr	r3, [pc, #172]	; (9000f450 <HAL_TIM_Base_Init+0x164>)
9000f3a4:	429a      	cmp	r2, r3
9000f3a6:	bf18      	it	ne
9000f3a8:	428a      	cmpne	r2, r1
9000f3aa:	d003      	beq.n	9000f3b4 <HAL_TIM_Base_Init+0xc8>
9000f3ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000f3b0:	429a      	cmp	r2, r3
9000f3b2:	d101      	bne.n	9000f3b8 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000f3b4:	6963      	ldr	r3, [r4, #20]
9000f3b6:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000f3b8:	2301      	movs	r3, #1
  return HAL_OK;
9000f3ba:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000f3bc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000f3be:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f3c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000f3c6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000f3ca:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000f3ce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000f3d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000f3d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f3da:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f3de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f3e2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000f3e6:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000f3ea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000f3ee:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000f3f0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000f3f4:	f7ff ff78 	bl	9000f2e8 <HAL_TIM_Base_MspInit>
9000f3f8:	e783      	b.n	9000f302 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f3fa:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f3fc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f400:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f402:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000f406:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f408:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f40a:	e7ba      	b.n	9000f382 <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000f40c:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f40e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f412:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f414:	480f      	ldr	r0, [pc, #60]	; (9000f454 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f416:	4282      	cmp	r2, r0
9000f418:	d0b3      	beq.n	9000f382 <HAL_TIM_Base_Init+0x96>
9000f41a:	2d00      	cmp	r5, #0
9000f41c:	d1b1      	bne.n	9000f382 <HAL_TIM_Base_Init+0x96>
9000f41e:	e793      	b.n	9000f348 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f420:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f422:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f426:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f428:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f42a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f42c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f430:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000f432:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000f434:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f436:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f438:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f43a:	e7b1      	b.n	9000f3a0 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000f43c:	2001      	movs	r0, #1
}
9000f43e:	4770      	bx	lr
9000f440:	40010000 	.word	0x40010000
9000f444:	40000400 	.word	0x40000400
9000f448:	40010400 	.word	0x40010400
9000f44c:	40014000 	.word	0x40014000
9000f450:	40014400 	.word	0x40014400
9000f454:	40000c00 	.word	0x40000c00

9000f458 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000f458:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f45c:	2b01      	cmp	r3, #1
9000f45e:	d141      	bne.n	9000f4e4 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f460:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f462:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f464:	4b24      	ldr	r3, [pc, #144]	; (9000f4f8 <HAL_TIM_Base_Start_IT+0xa0>)
9000f466:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000f46a:	bf18      	it	ne
9000f46c:	429a      	cmpne	r2, r3
{
9000f46e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f470:	bf0c      	ite	eq
9000f472:	2301      	moveq	r3, #1
9000f474:	2300      	movne	r3, #0
9000f476:	4d21      	ldr	r5, [pc, #132]	; (9000f4fc <HAL_TIM_Base_Start_IT+0xa4>)
9000f478:	4c21      	ldr	r4, [pc, #132]	; (9000f500 <HAL_TIM_Base_Start_IT+0xa8>)
9000f47a:	42aa      	cmp	r2, r5
9000f47c:	bf08      	it	eq
9000f47e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000f482:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f486:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f488:	42a2      	cmp	r2, r4
9000f48a:	bf08      	it	eq
9000f48c:	f043 0301 	orreq.w	r3, r3, #1
9000f490:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f494:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f498:	481a      	ldr	r0, [pc, #104]	; (9000f504 <HAL_TIM_Base_Start_IT+0xac>)
9000f49a:	42a2      	cmp	r2, r4
9000f49c:	bf08      	it	eq
9000f49e:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f4a2:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f4a4:	4282      	cmp	r2, r0
9000f4a6:	bf08      	it	eq
9000f4a8:	f043 0301 	orreq.w	r3, r3, #1
9000f4ac:	4916      	ldr	r1, [pc, #88]	; (9000f508 <HAL_TIM_Base_Start_IT+0xb0>)
9000f4ae:	428a      	cmp	r2, r1
9000f4b0:	bf08      	it	eq
9000f4b2:	f043 0301 	orreq.w	r3, r3, #1
9000f4b6:	b933      	cbnz	r3, 9000f4c6 <HAL_TIM_Base_Start_IT+0x6e>
9000f4b8:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000f4bc:	1a10      	subs	r0, r2, r0
9000f4be:	fab0 f080 	clz	r0, r0
9000f4c2:	0940      	lsrs	r0, r0, #5
9000f4c4:	b198      	cbz	r0, 9000f4ee <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000f4c6:	6891      	ldr	r1, [r2, #8]
9000f4c8:	4b10      	ldr	r3, [pc, #64]	; (9000f50c <HAL_TIM_Base_Start_IT+0xb4>)
9000f4ca:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000f4cc:	2b06      	cmp	r3, #6
9000f4ce:	d00b      	beq.n	9000f4e8 <HAL_TIM_Base_Start_IT+0x90>
9000f4d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000f4d4:	d008      	beq.n	9000f4e8 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000f4d6:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000f4d8:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000f4da:	f043 0301 	orr.w	r3, r3, #1
9000f4de:	6013      	str	r3, [r2, #0]
}
9000f4e0:	bc30      	pop	{r4, r5}
9000f4e2:	4770      	bx	lr
    return HAL_ERROR;
9000f4e4:	2001      	movs	r0, #1
}
9000f4e6:	4770      	bx	lr
  return HAL_OK;
9000f4e8:	2000      	movs	r0, #0
}
9000f4ea:	bc30      	pop	{r4, r5}
9000f4ec:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000f4ee:	6813      	ldr	r3, [r2, #0]
9000f4f0:	f043 0301 	orr.w	r3, r3, #1
9000f4f4:	6013      	str	r3, [r2, #0]
9000f4f6:	e7f3      	b.n	9000f4e0 <HAL_TIM_Base_Start_IT+0x88>
9000f4f8:	40010000 	.word	0x40010000
9000f4fc:	40000400 	.word	0x40000400
9000f500:	40000800 	.word	0x40000800
9000f504:	40010400 	.word	0x40010400
9000f508:	40001800 	.word	0x40001800
9000f50c:	00010007 	.word	0x00010007

9000f510 <HAL_TIM_OC_DelayElapsedCallback>:
9000f510:	4770      	bx	lr
9000f512:	bf00      	nop

9000f514 <HAL_TIM_IC_CaptureCallback>:
9000f514:	4770      	bx	lr
9000f516:	bf00      	nop

9000f518 <HAL_TIM_PWM_PulseFinishedCallback>:
9000f518:	4770      	bx	lr
9000f51a:	bf00      	nop

9000f51c <HAL_TIM_TriggerCallback>:
9000f51c:	4770      	bx	lr
9000f51e:	bf00      	nop

9000f520 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f520:	6803      	ldr	r3, [r0, #0]
9000f522:	691a      	ldr	r2, [r3, #16]
9000f524:	0791      	lsls	r1, r2, #30
{
9000f526:	b510      	push	{r4, lr}
9000f528:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f52a:	d502      	bpl.n	9000f532 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000f52c:	68da      	ldr	r2, [r3, #12]
9000f52e:	0792      	lsls	r2, r2, #30
9000f530:	d468      	bmi.n	9000f604 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f532:	691a      	ldr	r2, [r3, #16]
9000f534:	0752      	lsls	r2, r2, #29
9000f536:	d502      	bpl.n	9000f53e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000f538:	68da      	ldr	r2, [r3, #12]
9000f53a:	0750      	lsls	r0, r2, #29
9000f53c:	d44f      	bmi.n	9000f5de <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f53e:	691a      	ldr	r2, [r3, #16]
9000f540:	0711      	lsls	r1, r2, #28
9000f542:	d502      	bpl.n	9000f54a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000f544:	68da      	ldr	r2, [r3, #12]
9000f546:	0712      	lsls	r2, r2, #28
9000f548:	d437      	bmi.n	9000f5ba <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f54a:	691a      	ldr	r2, [r3, #16]
9000f54c:	06d0      	lsls	r0, r2, #27
9000f54e:	d502      	bpl.n	9000f556 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000f550:	68da      	ldr	r2, [r3, #12]
9000f552:	06d1      	lsls	r1, r2, #27
9000f554:	d41e      	bmi.n	9000f594 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f556:	691a      	ldr	r2, [r3, #16]
9000f558:	07d2      	lsls	r2, r2, #31
9000f55a:	d502      	bpl.n	9000f562 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000f55c:	68da      	ldr	r2, [r3, #12]
9000f55e:	07d0      	lsls	r0, r2, #31
9000f560:	d469      	bmi.n	9000f636 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f562:	691a      	ldr	r2, [r3, #16]
9000f564:	0611      	lsls	r1, r2, #24
9000f566:	d502      	bpl.n	9000f56e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f568:	68da      	ldr	r2, [r3, #12]
9000f56a:	0612      	lsls	r2, r2, #24
9000f56c:	d46b      	bmi.n	9000f646 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f56e:	691a      	ldr	r2, [r3, #16]
9000f570:	05d0      	lsls	r0, r2, #23
9000f572:	d502      	bpl.n	9000f57a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f574:	68da      	ldr	r2, [r3, #12]
9000f576:	0611      	lsls	r1, r2, #24
9000f578:	d46d      	bmi.n	9000f656 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f57a:	691a      	ldr	r2, [r3, #16]
9000f57c:	0652      	lsls	r2, r2, #25
9000f57e:	d502      	bpl.n	9000f586 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000f580:	68da      	ldr	r2, [r3, #12]
9000f582:	0650      	lsls	r0, r2, #25
9000f584:	d46f      	bmi.n	9000f666 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f586:	691a      	ldr	r2, [r3, #16]
9000f588:	0691      	lsls	r1, r2, #26
9000f58a:	d502      	bpl.n	9000f592 <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000f58c:	68da      	ldr	r2, [r3, #12]
9000f58e:	0692      	lsls	r2, r2, #26
9000f590:	d449      	bmi.n	9000f626 <HAL_TIM_IRQHandler+0x106>
}
9000f592:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f594:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f598:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000f59a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f59c:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f59e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000f5a0:	69db      	ldr	r3, [r3, #28]
9000f5a2:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f5a6:	d16f      	bne.n	9000f688 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f5a8:	f7ff ffb2 	bl	9000f510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f5ac:	4620      	mov	r0, r4
9000f5ae:	f7ff ffb3 	bl	9000f518 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f5b2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f5b4:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f5b6:	7722      	strb	r2, [r4, #28]
9000f5b8:	e7cd      	b.n	9000f556 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f5ba:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f5be:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000f5c0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f5c2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f5c4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000f5c6:	69db      	ldr	r3, [r3, #28]
9000f5c8:	079b      	lsls	r3, r3, #30
9000f5ca:	d15a      	bne.n	9000f682 <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f5cc:	f7ff ffa0 	bl	9000f510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f5d0:	4620      	mov	r0, r4
9000f5d2:	f7ff ffa1 	bl	9000f518 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f5d6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f5d8:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f5da:	7722      	strb	r2, [r4, #28]
9000f5dc:	e7b5      	b.n	9000f54a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f5de:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f5e2:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000f5e4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f5e6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f5e8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000f5ea:	699b      	ldr	r3, [r3, #24]
9000f5ec:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f5f0:	d144      	bne.n	9000f67c <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f5f2:	f7ff ff8d 	bl	9000f510 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f5f6:	4620      	mov	r0, r4
9000f5f8:	f7ff ff8e 	bl	9000f518 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f5fc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f5fe:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f600:	7722      	strb	r2, [r4, #28]
9000f602:	e79c      	b.n	9000f53e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f604:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f608:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f60a:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f60c:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000f60e:	699b      	ldr	r3, [r3, #24]
9000f610:	0799      	lsls	r1, r3, #30
9000f612:	d130      	bne.n	9000f676 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000f614:	f7ff ff7c 	bl	9000f510 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f618:	4620      	mov	r0, r4
9000f61a:	f7ff ff7d 	bl	9000f518 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f61e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f620:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f622:	7722      	strb	r2, [r4, #28]
9000f624:	e785      	b.n	9000f532 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f626:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000f62a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f62c:	611a      	str	r2, [r3, #16]
}
9000f62e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000f632:	f000 b82d 	b.w	9000f690 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f636:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000f63a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f63c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000f63e:	f7f3 fc7b 	bl	90002f38 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f642:	6823      	ldr	r3, [r4, #0]
9000f644:	e78d      	b.n	9000f562 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f646:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000f64a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f64c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000f64e:	f000 f821 	bl	9000f694 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f652:	6823      	ldr	r3, [r4, #0]
9000f654:	e78b      	b.n	9000f56e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f656:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000f65a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f65c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000f65e:	f000 f81b 	bl	9000f698 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f662:	6823      	ldr	r3, [r4, #0]
9000f664:	e789      	b.n	9000f57a <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f666:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000f66a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f66c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000f66e:	f7ff ff55 	bl	9000f51c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f672:	6823      	ldr	r3, [r4, #0]
9000f674:	e787      	b.n	9000f586 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000f676:	f7ff ff4d 	bl	9000f514 <HAL_TIM_IC_CaptureCallback>
9000f67a:	e7d0      	b.n	9000f61e <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000f67c:	f7ff ff4a 	bl	9000f514 <HAL_TIM_IC_CaptureCallback>
9000f680:	e7bc      	b.n	9000f5fc <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000f682:	f7ff ff47 	bl	9000f514 <HAL_TIM_IC_CaptureCallback>
9000f686:	e7a6      	b.n	9000f5d6 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000f688:	f7ff ff44 	bl	9000f514 <HAL_TIM_IC_CaptureCallback>
9000f68c:	e791      	b.n	9000f5b2 <HAL_TIM_IRQHandler+0x92>
9000f68e:	bf00      	nop

9000f690 <HAL_TIMEx_CommutCallback>:
9000f690:	4770      	bx	lr
9000f692:	bf00      	nop

9000f694 <HAL_TIMEx_BreakCallback>:
9000f694:	4770      	bx	lr
9000f696:	bf00      	nop

9000f698 <HAL_TIMEx_Break2Callback>:
9000f698:	4770      	bx	lr
9000f69a:	bf00      	nop

9000f69c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f69c:	680b      	ldr	r3, [r1, #0]
{
9000f69e:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f6a0:	b9d3      	cbnz	r3, 9000f6d8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f6a2:	6804      	ldr	r4, [r0, #0]
9000f6a4:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000f6a8:	684a      	ldr	r2, [r1, #4]
9000f6aa:	4023      	ands	r3, r4
9000f6ac:	4313      	orrs	r3, r2
9000f6ae:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f6b2:	4323      	orrs	r3, r4
9000f6b4:	4313      	orrs	r3, r2
9000f6b6:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000f6ba:	4323      	orrs	r3, r4
9000f6bc:	4313      	orrs	r3, r2
9000f6be:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000f6c2:	4323      	orrs	r3, r4
9000f6c4:	4313      	orrs	r3, r2
9000f6c6:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000f6ca:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000f6cc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f6d0:	4313      	orrs	r3, r2
9000f6d2:	6003      	str	r3, [r0, #0]
}
9000f6d4:	2000      	movs	r0, #0
9000f6d6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f6d8:	6802      	ldr	r2, [r0, #0]
9000f6da:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000f6de:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000f6e2:	4322      	orrs	r2, r4
9000f6e4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000f6e6:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f6e8:	4b0a      	ldr	r3, [pc, #40]	; (9000f714 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f6ea:	4322      	orrs	r2, r4
9000f6ec:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f6ee:	6842      	ldr	r2, [r0, #4]
9000f6f0:	4013      	ands	r3, r2
9000f6f2:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000f6f6:	4323      	orrs	r3, r4
9000f6f8:	4313      	orrs	r3, r2
9000f6fa:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000f6fe:	4323      	orrs	r3, r4
9000f700:	4313      	orrs	r3, r2
9000f702:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000f706:	4323      	orrs	r3, r4
}
9000f708:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f70c:	4313      	orrs	r3, r2
9000f70e:	6043      	str	r3, [r0, #4]
}
9000f710:	2000      	movs	r0, #0
9000f712:	4770      	bx	lr
9000f714:	ffff8000 	.word	0xffff8000

9000f718 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000f718:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000f71a:	bb0a      	cbnz	r2, 9000f760 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f71c:	6883      	ldr	r3, [r0, #8]
9000f71e:	e9d1 2400 	ldrd	r2, r4, [r1]
9000f722:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000f726:	3c01      	subs	r4, #1
9000f728:	3a01      	subs	r2, #1
9000f72a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000f72e:	4313      	orrs	r3, r2
9000f730:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f734:	3c01      	subs	r4, #1
9000f736:	3a01      	subs	r2, #1
9000f738:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000f73c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000f740:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000f744:	698a      	ldr	r2, [r1, #24]
9000f746:	3d01      	subs	r5, #1
9000f748:	1e61      	subs	r1, r4, #1
9000f74a:	3a01      	subs	r2, #1
9000f74c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000f750:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000f754:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000f758:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f75a:	6083      	str	r3, [r0, #8]
}
9000f75c:	2000      	movs	r0, #0
9000f75e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f760:	6885      	ldr	r5, [r0, #8]
9000f762:	68ca      	ldr	r2, [r1, #12]
9000f764:	4b12      	ldr	r3, [pc, #72]	; (9000f7b0 <FMC_SDRAM_Timing_Init+0x98>)
9000f766:	1e54      	subs	r4, r2, #1
9000f768:	694a      	ldr	r2, [r1, #20]
9000f76a:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f76c:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f76e:	3a01      	subs	r2, #1
9000f770:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f774:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f778:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f77c:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f780:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f782:	68c3      	ldr	r3, [r0, #12]
9000f784:	3c01      	subs	r4, #1
9000f786:	3a01      	subs	r2, #1
9000f788:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000f78c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000f790:	690c      	ldr	r4, [r1, #16]
9000f792:	4313      	orrs	r3, r2
9000f794:	698a      	ldr	r2, [r1, #24]
9000f796:	1e61      	subs	r1, r4, #1
9000f798:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000f79c:	3a01      	subs	r2, #1
9000f79e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000f7a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000f7a6:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f7a8:	60c3      	str	r3, [r0, #12]
}
9000f7aa:	2000      	movs	r0, #0
9000f7ac:	4770      	bx	lr
9000f7ae:	bf00      	nop
9000f7b0:	ff0f0fff 	.word	0xff0f0fff

9000f7b4 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000f7b4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000f7b6:	2200      	movs	r2, #0
{
9000f7b8:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000f7ba:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f7be:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000f7c2:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000f7c6:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000f7ca:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f7cc:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000f7d0:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000f7d2:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000f7d4:	619a      	str	r2, [r3, #24]
}
9000f7d6:	bc30      	pop	{r4, r5}
9000f7d8:	4770      	bx	lr
9000f7da:	bf00      	nop

9000f7dc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000f7dc:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f7de:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000f7e2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f7e4:	6900      	ldr	r0, [r0, #16]
9000f7e6:	4323      	orrs	r3, r4
9000f7e8:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000f7ec:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000f7f0:	4c05      	ldr	r4, [pc, #20]	; (9000f808 <FMC_SDRAM_SendCommand+0x2c>)
9000f7f2:	3901      	subs	r1, #1
9000f7f4:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000f7f6:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f7f8:	4323      	orrs	r3, r4
}
9000f7fa:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f7fe:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000f802:	6113      	str	r3, [r2, #16]
}
9000f804:	4770      	bx	lr
9000f806:	bf00      	nop
9000f808:	ffc00000 	.word	0xffc00000

9000f80c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000f80c:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f80e:	4b05      	ldr	r3, [pc, #20]	; (9000f824 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000f810:	2000      	movs	r0, #0
{
9000f812:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f814:	6954      	ldr	r4, [r2, #20]
9000f816:	4023      	ands	r3, r4
}
9000f818:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f81c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000f820:	6151      	str	r1, [r2, #20]
}
9000f822:	4770      	bx	lr
9000f824:	ffffc001 	.word	0xffffc001

9000f828 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f828:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f82a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f82e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f830:	f002 fcda 	bl	900121e8 <xTaskGetSchedulerState>
9000f834:	2801      	cmp	r0, #1
9000f836:	d100      	bne.n	9000f83a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f838:	bd08      	pop	{r3, pc}
9000f83a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f83e:	f000 bcd9 	b.w	900101f4 <xPortSysTickHandler>
9000f842:	bf00      	nop

9000f844 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f844:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f848:	b92b      	cbnz	r3, 9000f856 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f84a:	4b06      	ldr	r3, [pc, #24]	; (9000f864 <osKernelInitialize+0x20>)
9000f84c:	6818      	ldr	r0, [r3, #0]
9000f84e:	b928      	cbnz	r0, 9000f85c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f850:	2201      	movs	r2, #1
9000f852:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f854:	4770      	bx	lr
    stat = osErrorISR;
9000f856:	f06f 0005 	mvn.w	r0, #5
9000f85a:	4770      	bx	lr
    } else {
      stat = osError;
9000f85c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000f860:	4770      	bx	lr
9000f862:	bf00      	nop
9000f864:	2402092c 	.word	0x2402092c

9000f868 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f868:	b510      	push	{r4, lr}
9000f86a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f86e:	b974      	cbnz	r4, 9000f88e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f870:	4b08      	ldr	r3, [pc, #32]	; (9000f894 <osKernelStart+0x2c>)
9000f872:	681a      	ldr	r2, [r3, #0]
9000f874:	2a01      	cmp	r2, #1
9000f876:	d107      	bne.n	9000f888 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f878:	4907      	ldr	r1, [pc, #28]	; (9000f898 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f87a:	2202      	movs	r2, #2
9000f87c:	77cc      	strb	r4, [r1, #31]
9000f87e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f880:	f002 fa40 	bl	90011d04 <vTaskStartScheduler>
      stat = osOK;
9000f884:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f886:	bd10      	pop	{r4, pc}
      stat = osError;
9000f888:	f04f 30ff 	mov.w	r0, #4294967295
}
9000f88c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f88e:	f06f 0005 	mvn.w	r0, #5
}
9000f892:	bd10      	pop	{r4, pc}
9000f894:	2402092c 	.word	0x2402092c
9000f898:	e000ed00 	.word	0xe000ed00

9000f89c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f89c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f89e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f8a0:	b087      	sub	sp, #28
9000f8a2:	4614      	mov	r4, r2
  hTask = NULL;
9000f8a4:	9505      	str	r5, [sp, #20]
9000f8a6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f8aa:	bb5a      	cbnz	r2, 9000f904 <osThreadNew+0x68>
9000f8ac:	4606      	mov	r6, r0
9000f8ae:	b348      	cbz	r0, 9000f904 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f8b0:	b1e4      	cbz	r4, 9000f8ec <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f8b2:	69a7      	ldr	r7, [r4, #24]
9000f8b4:	bb4f      	cbnz	r7, 9000f90a <osThreadNew+0x6e>
9000f8b6:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f8b8:	6863      	ldr	r3, [r4, #4]
9000f8ba:	07db      	lsls	r3, r3, #31
9000f8bc:	d422      	bmi.n	9000f904 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f8be:	6963      	ldr	r3, [r4, #20]
9000f8c0:	b33b      	cbz	r3, 9000f912 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f8c2:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f8c6:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000f8c8:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f8ca:	b338      	cbz	r0, 9000f91c <osThreadNew+0x80>
9000f8cc:	68e2      	ldr	r2, [r4, #12]
9000f8ce:	2a5f      	cmp	r2, #95	; 0x5f
9000f8d0:	d918      	bls.n	9000f904 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f8d2:	6924      	ldr	r4, [r4, #16]
9000f8d4:	b1b3      	cbz	r3, 9000f904 <osThreadNew+0x68>
9000f8d6:	b1ac      	cbz	r4, 9000f904 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f8d8:	460b      	mov	r3, r1
9000f8da:	4662      	mov	r2, ip
9000f8dc:	4629      	mov	r1, r5
9000f8de:	9700      	str	r7, [sp, #0]
9000f8e0:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000f8e4:	4630      	mov	r0, r6
9000f8e6:	f002 f871 	bl	900119cc <xTaskCreateStatic>
9000f8ea:	e00c      	b.n	9000f906 <osThreadNew+0x6a>
9000f8ec:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f8ee:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f8f0:	460b      	mov	r3, r1
9000f8f2:	4621      	mov	r1, r4
9000f8f4:	ac05      	add	r4, sp, #20
9000f8f6:	4630      	mov	r0, r6
9000f8f8:	9700      	str	r7, [sp, #0]
9000f8fa:	9401      	str	r4, [sp, #4]
9000f8fc:	f002 f910 	bl	90011b20 <xTaskCreate>
9000f900:	2801      	cmp	r0, #1
9000f902:	d009      	beq.n	9000f918 <osThreadNew+0x7c>
        return (NULL);
9000f904:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000f906:	b007      	add	sp, #28
9000f908:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f90a:	1e7a      	subs	r2, r7, #1
9000f90c:	2a37      	cmp	r2, #55	; 0x37
9000f90e:	d9d3      	bls.n	9000f8b8 <osThreadNew+0x1c>
9000f910:	e7f8      	b.n	9000f904 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000f912:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000f916:	e7d6      	b.n	9000f8c6 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000f918:	9805      	ldr	r0, [sp, #20]
9000f91a:	e7f4      	b.n	9000f906 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000f91c:	68e3      	ldr	r3, [r4, #12]
9000f91e:	2b00      	cmp	r3, #0
9000f920:	d1f1      	bne.n	9000f906 <osThreadNew+0x6a>
9000f922:	6923      	ldr	r3, [r4, #16]
9000f924:	2b00      	cmp	r3, #0
9000f926:	d1ee      	bne.n	9000f906 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f928:	fa1f f28c 	uxth.w	r2, ip
9000f92c:	462c      	mov	r4, r5
9000f92e:	e7df      	b.n	9000f8f0 <osThreadNew+0x54>

9000f930 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000f930:	b510      	push	{r4, lr}
9000f932:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f936:	b92c      	cbnz	r4, 9000f944 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000f938:	b900      	cbnz	r0, 9000f93c <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000f93a:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000f93c:	f002 f98c 	bl	90011c58 <vTaskDelay>
    stat = osOK;
9000f940:	4620      	mov	r0, r4
}
9000f942:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f944:	f06f 0005 	mvn.w	r0, #5
}
9000f948:	bd10      	pop	{r4, pc}
9000f94a:	bf00      	nop

9000f94c <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000f94c:	b570      	push	{r4, r5, r6, lr}
9000f94e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000f952:	b9db      	cbnz	r3, 9000f98c <osMutexNew+0x40>
    if (attr != NULL) {
9000f954:	4604      	mov	r4, r0
9000f956:	b1e0      	cbz	r0, 9000f992 <osMutexNew+0x46>
      type = attr->attr_bits;
9000f958:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000f95a:	0733      	lsls	r3, r6, #28
9000f95c:	d416      	bmi.n	9000f98c <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f95e:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000f960:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f964:	68c3      	ldr	r3, [r0, #12]
9000f966:	b181      	cbz	r1, 9000f98a <osMutexNew+0x3e>
9000f968:	2b4f      	cmp	r3, #79	; 0x4f
9000f96a:	d90f      	bls.n	9000f98c <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000f96c:	b31e      	cbz	r6, 9000f9b6 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000f96e:	2004      	movs	r0, #4
9000f970:	f001 f852 	bl	90010a18 <xQueueCreateMutexStatic>
9000f974:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000f976:	b14d      	cbz	r5, 9000f98c <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000f978:	6821      	ldr	r1, [r4, #0]
9000f97a:	4628      	mov	r0, r5
9000f97c:	f001 fd82 	bl	90011484 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000f980:	b12e      	cbz	r6, 9000f98e <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000f982:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000f986:	4628      	mov	r0, r5
9000f988:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000f98a:	b163      	cbz	r3, 9000f9a6 <osMutexNew+0x5a>
  hMutex = NULL;
9000f98c:	2500      	movs	r5, #0
}
9000f98e:	4628      	mov	r0, r5
9000f990:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000f992:	2001      	movs	r0, #1
9000f994:	f001 f8b0 	bl	90010af8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000f998:	4605      	mov	r5, r0
9000f99a:	2800      	cmp	r0, #0
9000f99c:	d0f6      	beq.n	9000f98c <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000f99e:	4621      	mov	r1, r4
9000f9a0:	f001 fd70 	bl	90011484 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000f9a4:	e7f3      	b.n	9000f98e <osMutexNew+0x42>
            if (rmtx != 0U) {
9000f9a6:	b15e      	cbz	r6, 9000f9c0 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000f9a8:	2004      	movs	r0, #4
9000f9aa:	f001 f8a5 	bl	90010af8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000f9ae:	4605      	mov	r5, r0
9000f9b0:	2800      	cmp	r0, #0
9000f9b2:	d1e1      	bne.n	9000f978 <osMutexNew+0x2c>
9000f9b4:	e7ea      	b.n	9000f98c <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000f9b6:	2001      	movs	r0, #1
9000f9b8:	f001 f82e 	bl	90010a18 <xQueueCreateMutexStatic>
9000f9bc:	4605      	mov	r5, r0
9000f9be:	e7da      	b.n	9000f976 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000f9c0:	2001      	movs	r0, #1
9000f9c2:	f001 f899 	bl	90010af8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000f9c6:	4605      	mov	r5, r0
9000f9c8:	e7d5      	b.n	9000f976 <osMutexNew+0x2a>
9000f9ca:	bf00      	nop

9000f9cc <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000f9cc:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000f9d0:	f000 0301 	and.w	r3, r0, #1
9000f9d4:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000f9d8:	b9a8      	cbnz	r0, 9000fa06 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000f9da:	b1ba      	cbz	r2, 9000fa0c <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000f9dc:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000f9de:	b510      	push	{r4, lr}
9000f9e0:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000f9e2:	b953      	cbnz	r3, 9000f9fa <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000f9e4:	f001 fb00 	bl	90010fe8 <xQueueSemaphoreTake>
9000f9e8:	2801      	cmp	r0, #1
9000f9ea:	d00a      	beq.n	9000fa02 <osMutexAcquire+0x36>
          stat = osErrorResource;
9000f9ec:	2c00      	cmp	r4, #0
9000f9ee:	bf14      	ite	ne
9000f9f0:	f06f 0001 	mvnne.w	r0, #1
9000f9f4:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000f9f8:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000f9fa:	f001 fc7d 	bl	900112f8 <xQueueTakeMutexRecursive>
9000f9fe:	2801      	cmp	r0, #1
9000fa00:	d1f4      	bne.n	9000f9ec <osMutexAcquire+0x20>
  stat = osOK;
9000fa02:	2000      	movs	r0, #0
}
9000fa04:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fa06:	f06f 0005 	mvn.w	r0, #5
9000fa0a:	4770      	bx	lr
    stat = osErrorParameter;
9000fa0c:	f06f 0003 	mvn.w	r0, #3
}
9000fa10:	4770      	bx	lr
9000fa12:	bf00      	nop

9000fa14 <osMutexRelease>:
9000fa14:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000fa18:	b9ba      	cbnz	r2, 9000fa4a <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000fa1a:	b510      	push	{r4, lr}
9000fa1c:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000fa20:	b1b4      	cbz	r4, 9000fa50 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000fa22:	f000 0301 	and.w	r3, r0, #1
9000fa26:	b943      	cbnz	r3, 9000fa3a <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000fa28:	461a      	mov	r2, r3
9000fa2a:	4619      	mov	r1, r3
9000fa2c:	4620      	mov	r0, r4
9000fa2e:	f000 fe71 	bl	90010714 <xQueueGenericSend>
9000fa32:	2801      	cmp	r0, #1
9000fa34:	d106      	bne.n	9000fa44 <osMutexRelease+0x30>
  stat = osOK;
9000fa36:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fa38:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000fa3a:	4620      	mov	r0, r4
9000fa3c:	f001 f83c 	bl	90010ab8 <xQueueGiveMutexRecursive>
9000fa40:	2801      	cmp	r0, #1
9000fa42:	d0f8      	beq.n	9000fa36 <osMutexRelease+0x22>
        stat = osErrorResource;
9000fa44:	f06f 0002 	mvn.w	r0, #2
}
9000fa48:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fa4a:	f06f 0005 	mvn.w	r0, #5
}
9000fa4e:	4770      	bx	lr
    stat = osErrorParameter;
9000fa50:	f06f 0003 	mvn.w	r0, #3
}
9000fa54:	bd10      	pop	{r4, pc}
9000fa56:	bf00      	nop

9000fa58 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000fa58:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fa5a:	b083      	sub	sp, #12
9000fa5c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000fa60:	b98e      	cbnz	r6, 9000fa86 <osSemaphoreNew+0x2e>
9000fa62:	4605      	mov	r5, r0
9000fa64:	b178      	cbz	r0, 9000fa86 <osSemaphoreNew+0x2e>
9000fa66:	4288      	cmp	r0, r1
9000fa68:	460f      	mov	r7, r1
9000fa6a:	d30c      	bcc.n	9000fa86 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000fa6c:	4614      	mov	r4, r2
9000fa6e:	b182      	cbz	r2, 9000fa92 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fa70:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000fa74:	b15a      	cbz	r2, 9000fa8e <osSemaphoreNew+0x36>
9000fa76:	2b4f      	cmp	r3, #79	; 0x4f
9000fa78:	d905      	bls.n	9000fa86 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000fa7a:	2801      	cmp	r0, #1
9000fa7c:	d032      	beq.n	9000fae4 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000fa7e:	f000 fda1 	bl	900105c4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000fa82:	4605      	mov	r5, r0
9000fa84:	b978      	cbnz	r0, 9000faa6 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000fa86:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000fa88:	4628      	mov	r0, r5
9000fa8a:	b003      	add	sp, #12
9000fa8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000fa8e:	2b00      	cmp	r3, #0
9000fa90:	d1f9      	bne.n	9000fa86 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000fa92:	2d01      	cmp	r5, #1
9000fa94:	d00f      	beq.n	9000fab6 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000fa96:	4628      	mov	r0, r5
9000fa98:	4639      	mov	r1, r7
9000fa9a:	f000 fdf5 	bl	90010688 <xQueueCreateCountingSemaphore>
9000fa9e:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000faa0:	2d00      	cmp	r5, #0
9000faa2:	d0f0      	beq.n	9000fa86 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000faa4:	b104      	cbz	r4, 9000faa8 <osSemaphoreNew+0x50>
          name = attr->name;
9000faa6:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000faa8:	4628      	mov	r0, r5
9000faaa:	4621      	mov	r1, r4
9000faac:	f001 fcea 	bl	90011484 <vQueueAddToRegistry>
}
9000fab0:	4628      	mov	r0, r5
9000fab2:	b003      	add	sp, #12
9000fab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000fab6:	4628      	mov	r0, r5
9000fab8:	2203      	movs	r2, #3
9000faba:	2100      	movs	r1, #0
9000fabc:	f000 fd40 	bl	90010540 <xQueueGenericCreate>
9000fac0:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000fac2:	2d00      	cmp	r5, #0
9000fac4:	d0df      	beq.n	9000fa86 <osSemaphoreNew+0x2e>
9000fac6:	2f00      	cmp	r7, #0
9000fac8:	d0ea      	beq.n	9000faa0 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000faca:	2300      	movs	r3, #0
9000facc:	4628      	mov	r0, r5
9000face:	461a      	mov	r2, r3
9000fad0:	4619      	mov	r1, r3
9000fad2:	f000 fe1f 	bl	90010714 <xQueueGenericSend>
9000fad6:	2801      	cmp	r0, #1
9000fad8:	d0e4      	beq.n	9000faa4 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000fada:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000fadc:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000fade:	f001 fc8b 	bl	900113f8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000fae2:	e7d1      	b.n	9000fa88 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000fae4:	4613      	mov	r3, r2
9000fae6:	2203      	movs	r2, #3
9000fae8:	4631      	mov	r1, r6
9000faea:	9200      	str	r2, [sp, #0]
9000faec:	4632      	mov	r2, r6
9000faee:	f000 fcbb 	bl	90010468 <xQueueGenericCreateStatic>
9000faf2:	4605      	mov	r5, r0
9000faf4:	e7e5      	b.n	9000fac2 <osSemaphoreNew+0x6a>
9000faf6:	bf00      	nop

9000faf8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000faf8:	b370      	cbz	r0, 9000fb58 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000fafa:	b510      	push	{r4, lr}
9000fafc:	460c      	mov	r4, r1
9000fafe:	b082      	sub	sp, #8
9000fb00:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fb04:	b1c3      	cbz	r3, 9000fb38 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000fb06:	bb21      	cbnz	r1, 9000fb52 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fb08:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fb0a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fb0c:	f001 fc14 	bl	90011338 <xQueueReceiveFromISR>
9000fb10:	2801      	cmp	r0, #1
9000fb12:	d11a      	bne.n	9000fb4a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fb14:	9b01      	ldr	r3, [sp, #4]
9000fb16:	b913      	cbnz	r3, 9000fb1e <osSemaphoreAcquire+0x26>
  stat = osOK;
9000fb18:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fb1a:	b002      	add	sp, #8
9000fb1c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000fb1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fb22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fb26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fb2a:	f3bf 8f4f 	dsb	sy
9000fb2e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fb32:	4620      	mov	r0, r4
}
9000fb34:	b002      	add	sp, #8
9000fb36:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000fb38:	f001 fa56 	bl	90010fe8 <xQueueSemaphoreTake>
9000fb3c:	2801      	cmp	r0, #1
9000fb3e:	d0eb      	beq.n	9000fb18 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000fb40:	b11c      	cbz	r4, 9000fb4a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000fb42:	f06f 0001 	mvn.w	r0, #1
}
9000fb46:	b002      	add	sp, #8
9000fb48:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000fb4a:	f06f 0002 	mvn.w	r0, #2
}
9000fb4e:	b002      	add	sp, #8
9000fb50:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000fb52:	f06f 0003 	mvn.w	r0, #3
9000fb56:	e7e0      	b.n	9000fb1a <osSemaphoreAcquire+0x22>
9000fb58:	f06f 0003 	mvn.w	r0, #3
}
9000fb5c:	4770      	bx	lr
9000fb5e:	bf00      	nop

9000fb60 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000fb60:	b330      	cbz	r0, 9000fbb0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000fb62:	b510      	push	{r4, lr}
9000fb64:	b082      	sub	sp, #8
9000fb66:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fb6a:	b1ab      	cbz	r3, 9000fb98 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000fb6c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fb6e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000fb70:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fb72:	f001 f863 	bl	90010c3c <xQueueGiveFromISR>
9000fb76:	2801      	cmp	r0, #1
9000fb78:	d117      	bne.n	9000fbaa <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000fb7a:	9b01      	ldr	r3, [sp, #4]
9000fb7c:	b193      	cbz	r3, 9000fba4 <osSemaphoreRelease+0x44>
9000fb7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fb82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fb86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fb8a:	f3bf 8f4f 	dsb	sy
9000fb8e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fb92:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000fb94:	b002      	add	sp, #8
9000fb96:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000fb98:	461a      	mov	r2, r3
9000fb9a:	4619      	mov	r1, r3
9000fb9c:	f000 fdba 	bl	90010714 <xQueueGenericSend>
9000fba0:	2801      	cmp	r0, #1
9000fba2:	d102      	bne.n	9000fbaa <osSemaphoreRelease+0x4a>
  stat = osOK;
9000fba4:	2000      	movs	r0, #0
}
9000fba6:	b002      	add	sp, #8
9000fba8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000fbaa:	f06f 0002 	mvn.w	r0, #2
9000fbae:	e7fa      	b.n	9000fba6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000fbb0:	f06f 0003 	mvn.w	r0, #3
}
9000fbb4:	4770      	bx	lr
9000fbb6:	bf00      	nop

9000fbb8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000fbb8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fbba:	b083      	sub	sp, #12
9000fbbc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000fbc0:	b987      	cbnz	r7, 9000fbe4 <osMessageQueueNew+0x2c>
9000fbc2:	4605      	mov	r5, r0
9000fbc4:	b170      	cbz	r0, 9000fbe4 <osMessageQueueNew+0x2c>
9000fbc6:	b169      	cbz	r1, 9000fbe4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000fbc8:	4614      	mov	r4, r2
9000fbca:	b17a      	cbz	r2, 9000fbec <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fbcc:	6893      	ldr	r3, [r2, #8]
9000fbce:	b1cb      	cbz	r3, 9000fc04 <osMessageQueueNew+0x4c>
9000fbd0:	68d2      	ldr	r2, [r2, #12]
9000fbd2:	2a4f      	cmp	r2, #79	; 0x4f
9000fbd4:	d906      	bls.n	9000fbe4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fbd6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fbd8:	b122      	cbz	r2, 9000fbe4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fbda:	fb01 f505 	mul.w	r5, r1, r5
9000fbde:	6966      	ldr	r6, [r4, #20]
9000fbe0:	42ae      	cmp	r6, r5
9000fbe2:	d21f      	bcs.n	9000fc24 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000fbe4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000fbe6:	4628      	mov	r0, r5
9000fbe8:	b003      	add	sp, #12
9000fbea:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000fbec:	f000 fca8 	bl	90010540 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fbf0:	4605      	mov	r5, r0
9000fbf2:	2800      	cmp	r0, #0
9000fbf4:	d0f6      	beq.n	9000fbe4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000fbf6:	4628      	mov	r0, r5
9000fbf8:	4621      	mov	r1, r4
9000fbfa:	f001 fc43 	bl	90011484 <vQueueAddToRegistry>
}
9000fbfe:	4628      	mov	r0, r5
9000fc00:	b003      	add	sp, #12
9000fc02:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000fc04:	68d3      	ldr	r3, [r2, #12]
9000fc06:	2b00      	cmp	r3, #0
9000fc08:	d1ec      	bne.n	9000fbe4 <osMessageQueueNew+0x2c>
9000fc0a:	6913      	ldr	r3, [r2, #16]
9000fc0c:	2b00      	cmp	r3, #0
9000fc0e:	d1e9      	bne.n	9000fbe4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000fc10:	6952      	ldr	r2, [r2, #20]
9000fc12:	2a00      	cmp	r2, #0
9000fc14:	d1e6      	bne.n	9000fbe4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000fc16:	f000 fc93 	bl	90010540 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fc1a:	4605      	mov	r5, r0
9000fc1c:	2800      	cmp	r0, #0
9000fc1e:	d0e1      	beq.n	9000fbe4 <osMessageQueueNew+0x2c>
        name = attr->name;
9000fc20:	6824      	ldr	r4, [r4, #0]
9000fc22:	e7e8      	b.n	9000fbf6 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000fc24:	9700      	str	r7, [sp, #0]
9000fc26:	f000 fc1f 	bl	90010468 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000fc2a:	4605      	mov	r5, r0
9000fc2c:	2800      	cmp	r0, #0
9000fc2e:	d1f7      	bne.n	9000fc20 <osMessageQueueNew+0x68>
9000fc30:	e7d8      	b.n	9000fbe4 <osMessageQueueNew+0x2c>
9000fc32:	bf00      	nop

9000fc34 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000fc34:	b530      	push	{r4, r5, lr}
9000fc36:	461c      	mov	r4, r3
9000fc38:	b083      	sub	sp, #12
9000fc3a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000fc3e:	b30b      	cbz	r3, 9000fc84 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fc40:	3c00      	subs	r4, #0
9000fc42:	bf18      	it	ne
9000fc44:	2401      	movne	r4, #1
9000fc46:	2900      	cmp	r1, #0
9000fc48:	bf08      	it	eq
9000fc4a:	f044 0401 	orreq.w	r4, r4, #1
9000fc4e:	bb7c      	cbnz	r4, 9000fcb0 <osMessageQueuePut+0x7c>
9000fc50:	fab0 f480 	clz	r4, r0
9000fc54:	0964      	lsrs	r4, r4, #5
9000fc56:	b358      	cbz	r0, 9000fcb0 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fc58:	4623      	mov	r3, r4
9000fc5a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fc5c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fc5e:	f000 ff83 	bl	90010b68 <xQueueGenericSendFromISR>
9000fc62:	2801      	cmp	r0, #1
9000fc64:	d120      	bne.n	9000fca8 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fc66:	9b01      	ldr	r3, [sp, #4]
9000fc68:	b1db      	cbz	r3, 9000fca2 <osMessageQueuePut+0x6e>
9000fc6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fc6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fc72:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fc76:	f3bf 8f4f 	dsb	sy
9000fc7a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fc7e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000fc80:	b003      	add	sp, #12
9000fc82:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fc84:	b1a0      	cbz	r0, 9000fcb0 <osMessageQueuePut+0x7c>
9000fc86:	fab1 f381 	clz	r3, r1
9000fc8a:	095b      	lsrs	r3, r3, #5
9000fc8c:	b181      	cbz	r1, 9000fcb0 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fc8e:	4622      	mov	r2, r4
9000fc90:	f000 fd40 	bl	90010714 <xQueueGenericSend>
9000fc94:	2801      	cmp	r0, #1
9000fc96:	d004      	beq.n	9000fca2 <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000fc98:	b134      	cbz	r4, 9000fca8 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000fc9a:	f06f 0001 	mvn.w	r0, #1
}
9000fc9e:	b003      	add	sp, #12
9000fca0:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000fca2:	2000      	movs	r0, #0
}
9000fca4:	b003      	add	sp, #12
9000fca6:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000fca8:	f06f 0002 	mvn.w	r0, #2
}
9000fcac:	b003      	add	sp, #12
9000fcae:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000fcb0:	f06f 0003 	mvn.w	r0, #3
9000fcb4:	e7e4      	b.n	9000fc80 <osMessageQueuePut+0x4c>
9000fcb6:	bf00      	nop

9000fcb8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000fcb8:	b530      	push	{r4, r5, lr}
9000fcba:	461c      	mov	r4, r3
9000fcbc:	b083      	sub	sp, #12
9000fcbe:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000fcc2:	b303      	cbz	r3, 9000fd06 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fcc4:	3c00      	subs	r4, #0
9000fcc6:	bf18      	it	ne
9000fcc8:	2401      	movne	r4, #1
9000fcca:	2900      	cmp	r1, #0
9000fccc:	bf08      	it	eq
9000fcce:	f044 0401 	orreq.w	r4, r4, #1
9000fcd2:	bb5c      	cbnz	r4, 9000fd2c <osMessageQueueGet+0x74>
9000fcd4:	fab0 f480 	clz	r4, r0
9000fcd8:	0964      	lsrs	r4, r4, #5
9000fcda:	b338      	cbz	r0, 9000fd2c <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fcdc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fcde:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fce0:	f001 fb2a 	bl	90011338 <xQueueReceiveFromISR>
9000fce4:	2801      	cmp	r0, #1
9000fce6:	d11d      	bne.n	9000fd24 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fce8:	9b01      	ldr	r3, [sp, #4]
9000fcea:	b1c3      	cbz	r3, 9000fd1e <osMessageQueueGet+0x66>
9000fcec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fcf0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fcf4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fcf8:	f3bf 8f4f 	dsb	sy
9000fcfc:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fd00:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000fd02:	b003      	add	sp, #12
9000fd04:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fd06:	b188      	cbz	r0, 9000fd2c <osMessageQueueGet+0x74>
9000fd08:	b181      	cbz	r1, 9000fd2c <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fd0a:	4622      	mov	r2, r4
9000fd0c:	f000 ffee 	bl	90010cec <xQueueReceive>
9000fd10:	2801      	cmp	r0, #1
9000fd12:	d004      	beq.n	9000fd1e <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000fd14:	b134      	cbz	r4, 9000fd24 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000fd16:	f06f 0001 	mvn.w	r0, #1
}
9000fd1a:	b003      	add	sp, #12
9000fd1c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000fd1e:	2000      	movs	r0, #0
}
9000fd20:	b003      	add	sp, #12
9000fd22:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000fd24:	f06f 0002 	mvn.w	r0, #2
}
9000fd28:	b003      	add	sp, #12
9000fd2a:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000fd2c:	f06f 0003 	mvn.w	r0, #3
9000fd30:	e7e7      	b.n	9000fd02 <osMessageQueueGet+0x4a>
9000fd32:	bf00      	nop

9000fd34 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fd34:	4b04      	ldr	r3, [pc, #16]	; (9000fd48 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000fd36:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fd38:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fd3a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000fd3c:	4c03      	ldr	r4, [pc, #12]	; (9000fd4c <vApplicationGetIdleTaskMemory+0x18>)
9000fd3e:	600c      	str	r4, [r1, #0]
}
9000fd40:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fd44:	6013      	str	r3, [r2, #0]
}
9000fd46:	4770      	bx	lr
9000fd48:	240208cc 	.word	0x240208cc
9000fd4c:	240206cc 	.word	0x240206cc

9000fd50 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fd50:	4b05      	ldr	r3, [pc, #20]	; (9000fd68 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000fd52:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fd54:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fd56:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000fd5a:	4c04      	ldr	r4, [pc, #16]	; (9000fd6c <vApplicationGetTimerTaskMemory+0x1c>)
9000fd5c:	600c      	str	r4, [r1, #0]
}
9000fd5e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fd62:	6013      	str	r3, [r2, #0]
}
9000fd64:	4770      	bx	lr
9000fd66:	bf00      	nop
9000fd68:	24020d30 	.word	0x24020d30
9000fd6c:	24020930 	.word	0x24020930

9000fd70 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fd70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fd74:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fd76:	f002 f861 	bl	90011e3c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fd7a:	4a54      	ldr	r2, [pc, #336]	; (9000fecc <pvPortMalloc+0x15c>)
9000fd7c:	6816      	ldr	r6, [r2, #0]
9000fd7e:	2e00      	cmp	r6, #0
9000fd80:	d06f      	beq.n	9000fe62 <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000fd82:	4b53      	ldr	r3, [pc, #332]	; (9000fed0 <pvPortMalloc+0x160>)
9000fd84:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000fd86:	423d      	tst	r5, r7
9000fd88:	d12e      	bne.n	9000fde8 <pvPortMalloc+0x78>
9000fd8a:	b36d      	cbz	r5, 9000fde8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000fd8c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000fd90:	076d      	lsls	r5, r5, #29
9000fd92:	d002      	beq.n	9000fd9a <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000fd94:	f024 0407 	bic.w	r4, r4, #7
9000fd98:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000fd9a:	b32c      	cbz	r4, 9000fde8 <pvPortMalloc+0x78>
9000fd9c:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000fee8 <pvPortMalloc+0x178>
9000fda0:	f8dc 5000 	ldr.w	r5, [ip]
9000fda4:	42a5      	cmp	r5, r4
9000fda6:	d31f      	bcc.n	9000fde8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000fda8:	484a      	ldr	r0, [pc, #296]	; (9000fed4 <pvPortMalloc+0x164>)
9000fdaa:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000fdac:	e003      	b.n	9000fdb6 <pvPortMalloc+0x46>
9000fdae:	681a      	ldr	r2, [r3, #0]
9000fdb0:	b122      	cbz	r2, 9000fdbc <pvPortMalloc+0x4c>
9000fdb2:	4618      	mov	r0, r3
9000fdb4:	4613      	mov	r3, r2
9000fdb6:	6859      	ldr	r1, [r3, #4]
9000fdb8:	42a1      	cmp	r1, r4
9000fdba:	d3f8      	bcc.n	9000fdae <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000fdbc:	42b3      	cmp	r3, r6
9000fdbe:	d013      	beq.n	9000fde8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000fdc0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fdc2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fdc4:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fdc8:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fdca:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fdce:	d929      	bls.n	9000fe24 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000fdd0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000fdd2:	0748      	lsls	r0, r1, #29
9000fdd4:	d00f      	beq.n	9000fdf6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000fdd6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fdda:	f383 8811 	msr	BASEPRI, r3
9000fdde:	f3bf 8f6f 	isb	sy
9000fde2:	f3bf 8f4f 	dsb	sy
9000fde6:	e7fe      	b.n	9000fde6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000fde8:	f04f 0800 	mov.w	r8, #0
9000fdec:	f002 f82e 	bl	90011e4c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000fdf0:	4640      	mov	r0, r8
9000fdf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000fdf6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fdf8:	4a36      	ldr	r2, [pc, #216]	; (9000fed4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000fdfa:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fdfc:	4614      	mov	r4, r2
9000fdfe:	6812      	ldr	r2, [r2, #0]
9000fe00:	4291      	cmp	r1, r2
9000fe02:	d8fb      	bhi.n	9000fdfc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fe04:	6860      	ldr	r0, [r4, #4]
9000fe06:	eb04 0e00 	add.w	lr, r4, r0
9000fe0a:	4571      	cmp	r1, lr
9000fe0c:	d04a      	beq.n	9000fea4 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fe0e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fe12:	eb01 000e 	add.w	r0, r1, lr
9000fe16:	4282      	cmp	r2, r0
9000fe18:	d050      	beq.n	9000febc <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000fe1a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fe1c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fe1e:	bf18      	it	ne
9000fe20:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fe22:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fe24:	4a2c      	ldr	r2, [pc, #176]	; (9000fed8 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fe26:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fe28:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fe2a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fe2c:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fe30:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000fe32:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000fe36:	bf38      	it	cc
9000fe38:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000fe3a:	4a28      	ldr	r2, [pc, #160]	; (9000fedc <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000fe3c:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000fe40:	6813      	ldr	r3, [r2, #0]
9000fe42:	3301      	adds	r3, #1
9000fe44:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000fe46:	f002 f801 	bl	90011e4c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000fe4a:	f018 0f07 	tst.w	r8, #7
9000fe4e:	d0cf      	beq.n	9000fdf0 <pvPortMalloc+0x80>
9000fe50:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fe54:	f383 8811 	msr	BASEPRI, r3
9000fe58:	f3bf 8f6f 	isb	sy
9000fe5c:	f3bf 8f4f 	dsb	sy
9000fe60:	e7fe      	b.n	9000fe60 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000fe62:	4b1f      	ldr	r3, [pc, #124]	; (9000fee0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000fe64:	075e      	lsls	r6, r3, #29
9000fe66:	d117      	bne.n	9000fe98 <pvPortMalloc+0x128>
9000fe68:	4e1e      	ldr	r6, [pc, #120]	; (9000fee4 <pvPortMalloc+0x174>)
9000fe6a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000fe6c:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fe6e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fe72:	4818      	ldr	r0, [pc, #96]	; (9000fed4 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fe74:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000fe78:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000fe7a:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fe7c:	4a16      	ldr	r2, [pc, #88]	; (9000fed8 <pvPortMalloc+0x168>)
9000fe7e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fe80:	4a19      	ldr	r2, [pc, #100]	; (9000fee8 <pvPortMalloc+0x178>)
9000fe82:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fe84:	4a12      	ldr	r2, [pc, #72]	; (9000fed0 <pvPortMalloc+0x160>)
9000fe86:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000fe88:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fe8a:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000fe8e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000fe92:	e9c1 6300 	strd	r6, r3, [r1]
}
9000fe96:	e776      	b.n	9000fd86 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000fe98:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000fe9a:	4e12      	ldr	r6, [pc, #72]	; (9000fee4 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000fe9c:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fea0:	460b      	mov	r3, r1
9000fea2:	e7e3      	b.n	9000fe6c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fea4:	6849      	ldr	r1, [r1, #4]
9000fea6:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000feaa:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000feae:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000feb2:	428a      	cmp	r2, r1
9000feb4:	d001      	beq.n	9000feba <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000feb6:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000feb8:	e7b3      	b.n	9000fe22 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000feba:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000febc:	42b2      	cmp	r2, r6
9000febe:	d0ac      	beq.n	9000fe1a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fec0:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fec2:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fec4:	4470      	add	r0, lr
9000fec6:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fec8:	e7a7      	b.n	9000fe1a <pvPortMalloc+0xaa>
9000feca:	bf00      	nop
9000fecc:	24020d90 	.word	0x24020d90
9000fed0:	24039434 	.word	0x24039434
9000fed4:	24039448 	.word	0x24039448
9000fed8:	2403943c 	.word	0x2403943c
9000fedc:	24039440 	.word	0x24039440
9000fee0:	24020d94 	.word	0x24020d94
9000fee4:	24039434 	.word	0x24039434
9000fee8:	24039438 	.word	0x24039438

9000feec <vPortFree>:
	if( pv != NULL )
9000feec:	b1d0      	cbz	r0, 9000ff24 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000feee:	4a2c      	ldr	r2, [pc, #176]	; (9000ffa0 <vPortFree+0xb4>)
9000fef0:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000fef4:	6812      	ldr	r2, [r2, #0]
9000fef6:	4213      	tst	r3, r2
9000fef8:	d00b      	beq.n	9000ff12 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000fefa:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000fefe:	b191      	cbz	r1, 9000ff26 <vPortFree+0x3a>
9000ff00:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ff04:	f383 8811 	msr	BASEPRI, r3
9000ff08:	f3bf 8f6f 	isb	sy
9000ff0c:	f3bf 8f4f 	dsb	sy
9000ff10:	e7fe      	b.n	9000ff10 <vPortFree+0x24>
9000ff12:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ff16:	f383 8811 	msr	BASEPRI, r3
9000ff1a:	f3bf 8f6f 	isb	sy
9000ff1e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000ff22:	e7fe      	b.n	9000ff22 <vPortFree+0x36>
9000ff24:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ff26:	ea23 0302 	bic.w	r3, r3, r2
{
9000ff2a:	b530      	push	{r4, r5, lr}
9000ff2c:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ff2e:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000ff32:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ff36:	4d1b      	ldr	r5, [pc, #108]	; (9000ffa4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000ff38:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000ff3a:	f001 ff7f 	bl	90011e3c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ff3e:	9801      	ldr	r0, [sp, #4]
9000ff40:	682a      	ldr	r2, [r5, #0]
9000ff42:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ff46:	4b18      	ldr	r3, [pc, #96]	; (9000ffa8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000ff48:	440a      	add	r2, r1
9000ff4a:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ff4c:	461a      	mov	r2, r3
9000ff4e:	681b      	ldr	r3, [r3, #0]
9000ff50:	429c      	cmp	r4, r3
9000ff52:	d8fb      	bhi.n	9000ff4c <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000ff54:	6850      	ldr	r0, [r2, #4]
9000ff56:	eb02 0c00 	add.w	ip, r2, r0
9000ff5a:	4564      	cmp	r4, ip
9000ff5c:	d00f      	beq.n	9000ff7e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ff5e:	1860      	adds	r0, r4, r1
9000ff60:	4283      	cmp	r3, r0
9000ff62:	d014      	beq.n	9000ff8e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000ff64:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ff66:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000ff68:	bf18      	it	ne
9000ff6a:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000ff6c:	4a0f      	ldr	r2, [pc, #60]	; (9000ffac <vPortFree+0xc0>)
9000ff6e:	6813      	ldr	r3, [r2, #0]
9000ff70:	3301      	adds	r3, #1
9000ff72:	6013      	str	r3, [r2, #0]
}
9000ff74:	b003      	add	sp, #12
9000ff76:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000ff7a:	f001 bf67 	b.w	90011e4c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ff7e:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ff80:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ff82:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ff84:	4283      	cmp	r3, r0
9000ff86:	d001      	beq.n	9000ff8c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ff88:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000ff8a:	e7ef      	b.n	9000ff6c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ff8c:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000ff8e:	4808      	ldr	r0, [pc, #32]	; (9000ffb0 <vPortFree+0xc4>)
9000ff90:	6800      	ldr	r0, [r0, #0]
9000ff92:	4283      	cmp	r3, r0
9000ff94:	d0e6      	beq.n	9000ff64 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ff96:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000ff9a:	4401      	add	r1, r0
9000ff9c:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ff9e:	e7e1      	b.n	9000ff64 <vPortFree+0x78>
9000ffa0:	24039434 	.word	0x24039434
9000ffa4:	24039438 	.word	0x24039438
9000ffa8:	24039448 	.word	0x24039448
9000ffac:	24039444 	.word	0x24039444
9000ffb0:	24020d90 	.word	0x24020d90

9000ffb4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ffb4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000ffb8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000ffbc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000ffbe:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000ffc0:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ffc2:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000ffc4:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000ffc8:	4770      	bx	lr
9000ffca:	bf00      	nop

9000ffcc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000ffcc:	2300      	movs	r3, #0
9000ffce:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000ffd0:	4770      	bx	lr
9000ffd2:	bf00      	nop

9000ffd4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000ffd4:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000ffd6:	6802      	ldr	r2, [r0, #0]
{
9000ffd8:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000ffda:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000ffdc:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000ffde:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000ffe0:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000ffe2:	689c      	ldr	r4, [r3, #8]
9000ffe4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000ffe6:	6099      	str	r1, [r3, #8]
}
9000ffe8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000ffec:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000ffee:	6002      	str	r2, [r0, #0]
}
9000fff0:	4770      	bx	lr
9000fff2:	bf00      	nop

9000fff4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000fff4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000fff6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000fff8:	1c6b      	adds	r3, r5, #1
9000fffa:	d010      	beq.n	9001001e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000fffc:	f100 0308 	add.w	r3, r0, #8
90010000:	461c      	mov	r4, r3
90010002:	685b      	ldr	r3, [r3, #4]
90010004:	681a      	ldr	r2, [r3, #0]
90010006:	42aa      	cmp	r2, r5
90010008:	d9fa      	bls.n	90010000 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9001000a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9001000c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9001000e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90010010:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
90010012:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
90010014:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
90010016:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90010018:	6002      	str	r2, [r0, #0]
}
9001001a:	bc30      	pop	{r4, r5}
9001001c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9001001e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
90010020:	6863      	ldr	r3, [r4, #4]
90010022:	e7f2      	b.n	9001000a <vListInsert+0x16>

90010024 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
90010024:	6903      	ldr	r3, [r0, #16]
{
90010026:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
90010028:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9001002a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9001002e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
90010030:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90010034:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
90010036:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
90010038:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9001003c:	bf08      	it	eq
9001003e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
90010040:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
90010042:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
90010044:	3a01      	subs	r2, #1
90010046:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
90010048:	6818      	ldr	r0, [r3, #0]
}
9001004a:	4770      	bx	lr

9001004c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9001004c:	4808      	ldr	r0, [pc, #32]	; (90010070 <prvPortStartFirstTask+0x24>)
9001004e:	6800      	ldr	r0, [r0, #0]
90010050:	6800      	ldr	r0, [r0, #0]
90010052:	f380 8808 	msr	MSP, r0
90010056:	f04f 0000 	mov.w	r0, #0
9001005a:	f380 8814 	msr	CONTROL, r0
9001005e:	b662      	cpsie	i
90010060:	b661      	cpsie	f
90010062:	f3bf 8f4f 	dsb	sy
90010066:	f3bf 8f6f 	isb	sy
9001006a:	df00      	svc	0
9001006c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9001006e:	0000      	.short	0x0000
90010070:	e000ed08 	.word	0xe000ed08

90010074 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
90010074:	f8df 000c 	ldr.w	r0, [pc, #12]	; 90010084 <vPortEnableVFP+0x10>
90010078:	6801      	ldr	r1, [r0, #0]
9001007a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9001007e:	6001      	str	r1, [r0, #0]
90010080:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
90010082:	0000      	.short	0x0000
90010084:	e000ed88 	.word	0xe000ed88

90010088 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
90010088:	4b0e      	ldr	r3, [pc, #56]	; (900100c4 <prvTaskExitError+0x3c>)
{
9001008a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9001008c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9001008e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
90010090:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
90010092:	3301      	adds	r3, #1
90010094:	d008      	beq.n	900100a8 <prvTaskExitError+0x20>
90010096:	f04f 0350 	mov.w	r3, #80	; 0x50
9001009a:	f383 8811 	msr	BASEPRI, r3
9001009e:	f3bf 8f6f 	isb	sy
900100a2:	f3bf 8f4f 	dsb	sy
900100a6:	e7fe      	b.n	900100a6 <prvTaskExitError+0x1e>
900100a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900100ac:	f383 8811 	msr	BASEPRI, r3
900100b0:	f3bf 8f6f 	isb	sy
900100b4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
900100b8:	9b01      	ldr	r3, [sp, #4]
900100ba:	2b00      	cmp	r3, #0
900100bc:	d0fc      	beq.n	900100b8 <prvTaskExitError+0x30>
}
900100be:	b002      	add	sp, #8
900100c0:	4770      	bx	lr
900100c2:	bf00      	nop
900100c4:	24000080 	.word	0x24000080

900100c8 <pxPortInitialiseStack>:
{
900100c8:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
900100ca:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
900100ce:	4809      	ldr	r0, [pc, #36]	; (900100f4 <pxPortInitialiseStack+0x2c>)
{
900100d0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
900100d2:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
900100d6:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
900100da:	f843 2c20 	str.w	r2, [r3, #-32]
}
900100de:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
900100e2:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
900100e6:	f06f 0102 	mvn.w	r1, #2
}
900100ea:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
900100ee:	f843 1c24 	str.w	r1, [r3, #-36]
}
900100f2:	4770      	bx	lr
900100f4:	90010089 	.word	0x90010089
	...

90010100 <SVC_Handler>:
	__asm volatile (
90010100:	4b07      	ldr	r3, [pc, #28]	; (90010120 <pxCurrentTCBConst2>)
90010102:	6819      	ldr	r1, [r3, #0]
90010104:	6808      	ldr	r0, [r1, #0]
90010106:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001010a:	f380 8809 	msr	PSP, r0
9001010e:	f3bf 8f6f 	isb	sy
90010112:	f04f 0000 	mov.w	r0, #0
90010116:	f380 8811 	msr	BASEPRI, r0
9001011a:	4770      	bx	lr
9001011c:	f3af 8000 	nop.w

90010120 <pxCurrentTCBConst2>:
90010120:	24039498 	.word	0x24039498

90010124 <vPortEnterCritical>:
90010124:	f04f 0350 	mov.w	r3, #80	; 0x50
90010128:	f383 8811 	msr	BASEPRI, r3
9001012c:	f3bf 8f6f 	isb	sy
90010130:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
90010134:	4a0b      	ldr	r2, [pc, #44]	; (90010164 <vPortEnterCritical+0x40>)
90010136:	6813      	ldr	r3, [r2, #0]
90010138:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9001013a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9001013c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9001013e:	d000      	beq.n	90010142 <vPortEnterCritical+0x1e>
}
90010140:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
90010142:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010146:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9001014a:	b2db      	uxtb	r3, r3
9001014c:	2b00      	cmp	r3, #0
9001014e:	d0f7      	beq.n	90010140 <vPortEnterCritical+0x1c>
90010150:	f04f 0350 	mov.w	r3, #80	; 0x50
90010154:	f383 8811 	msr	BASEPRI, r3
90010158:	f3bf 8f6f 	isb	sy
9001015c:	f3bf 8f4f 	dsb	sy
90010160:	e7fe      	b.n	90010160 <vPortEnterCritical+0x3c>
90010162:	bf00      	nop
90010164:	24000080 	.word	0x24000080

90010168 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
90010168:	4a08      	ldr	r2, [pc, #32]	; (9001018c <vPortExitCritical+0x24>)
9001016a:	6813      	ldr	r3, [r2, #0]
9001016c:	b943      	cbnz	r3, 90010180 <vPortExitCritical+0x18>
9001016e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010172:	f383 8811 	msr	BASEPRI, r3
90010176:	f3bf 8f6f 	isb	sy
9001017a:	f3bf 8f4f 	dsb	sy
9001017e:	e7fe      	b.n	9001017e <vPortExitCritical+0x16>
	uxCriticalNesting--;
90010180:	3b01      	subs	r3, #1
90010182:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90010184:	b90b      	cbnz	r3, 9001018a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90010186:	f383 8811 	msr	BASEPRI, r3
}
9001018a:	4770      	bx	lr
9001018c:	24000080 	.word	0x24000080

90010190 <PendSV_Handler>:
	__asm volatile
90010190:	f3ef 8009 	mrs	r0, PSP
90010194:	f3bf 8f6f 	isb	sy
90010198:	4b15      	ldr	r3, [pc, #84]	; (900101f0 <pxCurrentTCBConst>)
9001019a:	681a      	ldr	r2, [r3, #0]
9001019c:	f01e 0f10 	tst.w	lr, #16
900101a0:	bf08      	it	eq
900101a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
900101a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900101aa:	6010      	str	r0, [r2, #0]
900101ac:	e92d 0009 	stmdb	sp!, {r0, r3}
900101b0:	f04f 0050 	mov.w	r0, #80	; 0x50
900101b4:	f380 8811 	msr	BASEPRI, r0
900101b8:	f3bf 8f4f 	dsb	sy
900101bc:	f3bf 8f6f 	isb	sy
900101c0:	f001 fe80 	bl	90011ec4 <vTaskSwitchContext>
900101c4:	f04f 0000 	mov.w	r0, #0
900101c8:	f380 8811 	msr	BASEPRI, r0
900101cc:	bc09      	pop	{r0, r3}
900101ce:	6819      	ldr	r1, [r3, #0]
900101d0:	6808      	ldr	r0, [r1, #0]
900101d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900101d6:	f01e 0f10 	tst.w	lr, #16
900101da:	bf08      	it	eq
900101dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
900101e0:	f380 8809 	msr	PSP, r0
900101e4:	f3bf 8f6f 	isb	sy
900101e8:	4770      	bx	lr
900101ea:	bf00      	nop
900101ec:	f3af 8000 	nop.w

900101f0 <pxCurrentTCBConst>:
900101f0:	24039498 	.word	0x24039498

900101f4 <xPortSysTickHandler>:
{
900101f4:	b508      	push	{r3, lr}
	__asm volatile
900101f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900101fa:	f383 8811 	msr	BASEPRI, r3
900101fe:	f3bf 8f6f 	isb	sy
90010202:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
90010206:	f001 fe37 	bl	90011e78 <xTaskIncrementTick>
9001020a:	b128      	cbz	r0, 90010218 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9001020c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010210:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010214:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
90010218:	2300      	movs	r3, #0
9001021a:	f383 8811 	msr	BASEPRI, r3
}
9001021e:	bd08      	pop	{r3, pc}

90010220 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010220:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
90010224:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010226:	4806      	ldr	r0, [pc, #24]	; (90010240 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010228:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001022a:	4906      	ldr	r1, [pc, #24]	; (90010244 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9001022c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001022e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
90010230:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010232:	fba1 1303 	umull	r1, r3, r1, r3
90010236:	099b      	lsrs	r3, r3, #6
90010238:	3b01      	subs	r3, #1
9001023a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9001023c:	6110      	str	r0, [r2, #16]
}
9001023e:	4770      	bx	lr
90010240:	24000070 	.word	0x24000070
90010244:	10624dd3 	.word	0x10624dd3

90010248 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
90010248:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001024c:	4a48      	ldr	r2, [pc, #288]	; (90010370 <xPortStartScheduler+0x128>)
9001024e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
90010252:	4291      	cmp	r1, r2
90010254:	d041      	beq.n	900102da <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010256:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9001025a:	4b46      	ldr	r3, [pc, #280]	; (90010374 <xPortStartScheduler+0x12c>)
9001025c:	429a      	cmp	r2, r3
9001025e:	d033      	beq.n	900102c8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010260:	4b45      	ldr	r3, [pc, #276]	; (90010378 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010262:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010264:	4945      	ldr	r1, [pc, #276]	; (9001037c <xPortStartScheduler+0x134>)
{
90010266:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010268:	781a      	ldrb	r2, [r3, #0]
{
9001026a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001026c:	4c44      	ldr	r4, [pc, #272]	; (90010380 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9001026e:	b2d2      	uxtb	r2, r2
90010270:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010272:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010274:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
90010276:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010278:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001027a:	b2db      	uxtb	r3, r3
9001027c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010280:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010284:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010288:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001028c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001028e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010290:	d511      	bpl.n	900102b6 <xPortStartScheduler+0x6e>
90010292:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010294:	f89d 3007 	ldrb.w	r3, [sp, #7]
90010298:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001029a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9001029c:	005b      	lsls	r3, r3, #1
9001029e:	b2db      	uxtb	r3, r3
900102a0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
900102a4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900102a8:	0609      	lsls	r1, r1, #24
900102aa:	d4f3      	bmi.n	90010294 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
900102ac:	2803      	cmp	r0, #3
900102ae:	6020      	str	r0, [r4, #0]
900102b0:	f88d 3007 	strb.w	r3, [sp, #7]
900102b4:	d01a      	beq.n	900102ec <xPortStartScheduler+0xa4>
	__asm volatile
900102b6:	f04f 0350 	mov.w	r3, #80	; 0x50
900102ba:	f383 8811 	msr	BASEPRI, r3
900102be:	f3bf 8f6f 	isb	sy
900102c2:	f3bf 8f4f 	dsb	sy
900102c6:	e7fe      	b.n	900102c6 <xPortStartScheduler+0x7e>
900102c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900102cc:	f383 8811 	msr	BASEPRI, r3
900102d0:	f3bf 8f6f 	isb	sy
900102d4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900102d8:	e7fe      	b.n	900102d8 <xPortStartScheduler+0x90>
900102da:	f04f 0350 	mov.w	r3, #80	; 0x50
900102de:	f383 8811 	msr	BASEPRI, r3
900102e2:	f3bf 8f6f 	isb	sy
900102e6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900102ea:	e7fe      	b.n	900102ea <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900102ec:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900102ee:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900102f2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900102f6:	4a20      	ldr	r2, [pc, #128]	; (90010378 <xPortStartScheduler+0x130>)
900102f8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
900102fa:	4e22      	ldr	r6, [pc, #136]	; (90010384 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900102fc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
900102fe:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010300:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
90010302:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010306:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9001030a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9001030e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010312:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
90010316:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9001031a:	f7ff ff81 	bl	90010220 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9001031e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
90010320:	f7ff fea8 	bl	90010074 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
90010324:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
90010328:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9001032c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
90010330:	f7ff fe8c 	bl	9001004c <prvPortStartFirstTask>
	vTaskSwitchContext();
90010334:	f001 fdc6 	bl	90011ec4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
90010338:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9001033a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9001033c:	3301      	adds	r3, #1
9001033e:	d008      	beq.n	90010352 <xPortStartScheduler+0x10a>
90010340:	f04f 0350 	mov.w	r3, #80	; 0x50
90010344:	f383 8811 	msr	BASEPRI, r3
90010348:	f3bf 8f6f 	isb	sy
9001034c:	f3bf 8f4f 	dsb	sy
90010350:	e7fe      	b.n	90010350 <xPortStartScheduler+0x108>
90010352:	f04f 0350 	mov.w	r3, #80	; 0x50
90010356:	f383 8811 	msr	BASEPRI, r3
9001035a:	f3bf 8f6f 	isb	sy
9001035e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010362:	9b03      	ldr	r3, [sp, #12]
90010364:	2b00      	cmp	r3, #0
90010366:	d0fc      	beq.n	90010362 <xPortStartScheduler+0x11a>
}
90010368:	2000      	movs	r0, #0
9001036a:	b004      	add	sp, #16
9001036c:	bd70      	pop	{r4, r5, r6, pc}
9001036e:	bf00      	nop
90010370:	410fc271 	.word	0x410fc271
90010374:	410fc270 	.word	0x410fc270
90010378:	e000e400 	.word	0xe000e400
9001037c:	24039450 	.word	0x24039450
90010380:	24039454 	.word	0x24039454
90010384:	24000080 	.word	0x24000080

90010388 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010388:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001038c:	2b0f      	cmp	r3, #15
9001038e:	d90e      	bls.n	900103ae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010390:	4911      	ldr	r1, [pc, #68]	; (900103d8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010392:	4a12      	ldr	r2, [pc, #72]	; (900103dc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010394:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010396:	7812      	ldrb	r2, [r2, #0]
90010398:	429a      	cmp	r2, r3
9001039a:	d908      	bls.n	900103ae <vPortValidateInterruptPriority+0x26>
9001039c:	f04f 0350 	mov.w	r3, #80	; 0x50
900103a0:	f383 8811 	msr	BASEPRI, r3
900103a4:	f3bf 8f6f 	isb	sy
900103a8:	f3bf 8f4f 	dsb	sy
900103ac:	e7fe      	b.n	900103ac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
900103ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900103b2:	4a0b      	ldr	r2, [pc, #44]	; (900103e0 <vPortValidateInterruptPriority+0x58>)
900103b4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
900103b8:	6812      	ldr	r2, [r2, #0]
900103ba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
900103be:	4293      	cmp	r3, r2
900103c0:	d908      	bls.n	900103d4 <vPortValidateInterruptPriority+0x4c>
900103c2:	f04f 0350 	mov.w	r3, #80	; 0x50
900103c6:	f383 8811 	msr	BASEPRI, r3
900103ca:	f3bf 8f6f 	isb	sy
900103ce:	f3bf 8f4f 	dsb	sy
900103d2:	e7fe      	b.n	900103d2 <vPortValidateInterruptPriority+0x4a>
	}
900103d4:	4770      	bx	lr
900103d6:	bf00      	nop
900103d8:	e000e3f0 	.word	0xe000e3f0
900103dc:	24039450 	.word	0x24039450
900103e0:	24039454 	.word	0x24039454

900103e4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
900103e4:	b570      	push	{r4, r5, r6, lr}
900103e6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900103e8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
900103ea:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900103ec:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900103ee:	b92a      	cbnz	r2, 900103fc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900103f0:	6805      	ldr	r5, [r0, #0]
900103f2:	b365      	cbz	r5, 9001044e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900103f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900103f6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900103f8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
900103fa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
900103fc:	b97d      	cbnz	r5, 9001041e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900103fe:	6840      	ldr	r0, [r0, #4]
90010400:	f019 fb46 	bl	90029a90 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010404:	6863      	ldr	r3, [r4, #4]
90010406:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010408:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001040a:	68a2      	ldr	r2, [r4, #8]
9001040c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001040e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010410:	d319      	bcc.n	90010446 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010412:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010414:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010416:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010418:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001041a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001041c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9001041e:	68c0      	ldr	r0, [r0, #12]
90010420:	f019 fb36 	bl	90029a90 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010424:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010426:	68e3      	ldr	r3, [r4, #12]
90010428:	4251      	negs	r1, r2
9001042a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001042c:	6822      	ldr	r2, [r4, #0]
9001042e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010430:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010432:	d202      	bcs.n	9001043a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90010434:	68a3      	ldr	r3, [r4, #8]
90010436:	440b      	add	r3, r1
90010438:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9001043a:	2d02      	cmp	r5, #2
9001043c:	d00d      	beq.n	9001045a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001043e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010440:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010442:	63a6      	str	r6, [r4, #56]	; 0x38
}
90010444:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010446:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010448:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001044a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001044c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9001044e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010450:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90010452:	f001 ff1f 	bl	90012294 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90010456:	60a5      	str	r5, [r4, #8]
90010458:	e7ce      	b.n	900103f8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001045a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9001045c:	f04f 0000 	mov.w	r0, #0
90010460:	bf38      	it	cc
90010462:	2601      	movcc	r6, #1
90010464:	e7c8      	b.n	900103f8 <prvCopyDataToQueue+0x14>
90010466:	bf00      	nop

90010468 <xQueueGenericCreateStatic>:
	{
90010468:	b530      	push	{r4, r5, lr}
9001046a:	b083      	sub	sp, #12
9001046c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010470:	b940      	cbnz	r0, 90010484 <xQueueGenericCreateStatic+0x1c>
90010472:	f04f 0350 	mov.w	r3, #80	; 0x50
90010476:	f383 8811 	msr	BASEPRI, r3
9001047a:	f3bf 8f6f 	isb	sy
9001047e:	f3bf 8f4f 	dsb	sy
90010482:	e7fe      	b.n	90010482 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010484:	461d      	mov	r5, r3
90010486:	b153      	cbz	r3, 9001049e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010488:	b30a      	cbz	r2, 900104ce <xQueueGenericCreateStatic+0x66>
9001048a:	b989      	cbnz	r1, 900104b0 <xQueueGenericCreateStatic+0x48>
9001048c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010490:	f383 8811 	msr	BASEPRI, r3
90010494:	f3bf 8f6f 	isb	sy
90010498:	f3bf 8f4f 	dsb	sy
9001049c:	e7fe      	b.n	9001049c <xQueueGenericCreateStatic+0x34>
9001049e:	f04f 0350 	mov.w	r3, #80	; 0x50
900104a2:	f383 8811 	msr	BASEPRI, r3
900104a6:	f3bf 8f6f 	isb	sy
900104aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
900104ae:	e7fe      	b.n	900104ae <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900104b0:	b16a      	cbz	r2, 900104ce <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
900104b2:	2350      	movs	r3, #80	; 0x50
900104b4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
900104b6:	9b01      	ldr	r3, [sp, #4]
900104b8:	2b50      	cmp	r3, #80	; 0x50
900104ba:	d013      	beq.n	900104e4 <xQueueGenericCreateStatic+0x7c>
900104bc:	f04f 0350 	mov.w	r3, #80	; 0x50
900104c0:	f383 8811 	msr	BASEPRI, r3
900104c4:	f3bf 8f6f 	isb	sy
900104c8:	f3bf 8f4f 	dsb	sy
900104cc:	e7fe      	b.n	900104cc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900104ce:	2900      	cmp	r1, #0
900104d0:	d0ef      	beq.n	900104b2 <xQueueGenericCreateStatic+0x4a>
900104d2:	f04f 0350 	mov.w	r3, #80	; 0x50
900104d6:	f383 8811 	msr	BASEPRI, r3
900104da:	f3bf 8f6f 	isb	sy
900104de:	f3bf 8f4f 	dsb	sy
900104e2:	e7fe      	b.n	900104e2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
900104e4:	2900      	cmp	r1, #0
900104e6:	bf08      	it	eq
900104e8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
900104ea:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
900104ec:	6429      	str	r1, [r5, #64]	; 0x40
900104ee:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900104f0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900104f2:	2201      	movs	r2, #1
900104f4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
900104f8:	f7ff fe14 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104fc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900104fe:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010500:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010502:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010504:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
90010508:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001050c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001050e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010510:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010512:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010514:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010516:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001051a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001051c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010520:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010524:	f7ff fd46 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010528:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001052c:	f7ff fd42 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
90010530:	f7ff fe1a 	bl	90010168 <vPortExitCritical>
	}
90010534:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
90010536:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9001053a:	b003      	add	sp, #12
9001053c:	bd30      	pop	{r4, r5, pc}
9001053e:	bf00      	nop

90010540 <xQueueGenericCreate>:
	{
90010540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010542:	b940      	cbnz	r0, 90010556 <xQueueGenericCreate+0x16>
90010544:	f04f 0350 	mov.w	r3, #80	; 0x50
90010548:	f383 8811 	msr	BASEPRI, r3
9001054c:	f3bf 8f6f 	isb	sy
90010550:	f3bf 8f4f 	dsb	sy
90010554:	e7fe      	b.n	90010554 <xQueueGenericCreate+0x14>
90010556:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010558:	fb01 f000 	mul.w	r0, r1, r0
9001055c:	460e      	mov	r6, r1
9001055e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010560:	3050      	adds	r0, #80	; 0x50
90010562:	f7ff fc05 	bl	9000fd70 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010566:	4604      	mov	r4, r0
90010568:	b340      	cbz	r0, 900105bc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001056a:	2300      	movs	r3, #0
9001056c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90010570:	b336      	cbz	r6, 900105c0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010572:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90010576:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90010578:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9001057c:	f7ff fdd2 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010580:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010582:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010586:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010588:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9001058c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010590:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010592:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010594:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010596:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010598:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9001059a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001059c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001059e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
900105a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900105a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900105a8:	f7ff fd04 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900105ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
900105b0:	f7ff fd00 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
900105b4:	f7ff fdd8 	bl	90010168 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900105b8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
900105bc:	4620      	mov	r0, r4
900105be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900105c0:	4603      	mov	r3, r0
900105c2:	e7d8      	b.n	90010576 <xQueueGenericCreate+0x36>

900105c4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
900105c4:	b940      	cbnz	r0, 900105d8 <xQueueCreateCountingSemaphoreStatic+0x14>
900105c6:	f04f 0350 	mov.w	r3, #80	; 0x50
900105ca:	f383 8811 	msr	BASEPRI, r3
900105ce:	f3bf 8f6f 	isb	sy
900105d2:	f3bf 8f4f 	dsb	sy
900105d6:	e7fe      	b.n	900105d6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
900105d8:	4288      	cmp	r0, r1
900105da:	d208      	bcs.n	900105ee <xQueueCreateCountingSemaphoreStatic+0x2a>
900105dc:	f04f 0350 	mov.w	r3, #80	; 0x50
900105e0:	f383 8811 	msr	BASEPRI, r3
900105e4:	f3bf 8f6f 	isb	sy
900105e8:	f3bf 8f4f 	dsb	sy
900105ec:	e7fe      	b.n	900105ec <xQueueCreateCountingSemaphoreStatic+0x28>
	{
900105ee:	b530      	push	{r4, r5, lr}
900105f0:	4615      	mov	r5, r2
900105f2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
900105f4:	2a00      	cmp	r2, #0
900105f6:	d03d      	beq.n	90010674 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
900105f8:	2350      	movs	r3, #80	; 0x50
900105fa:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
900105fc:	9b03      	ldr	r3, [sp, #12]
900105fe:	2b50      	cmp	r3, #80	; 0x50
90010600:	d008      	beq.n	90010614 <xQueueCreateCountingSemaphoreStatic+0x50>
90010602:	f04f 0350 	mov.w	r3, #80	; 0x50
90010606:	f383 8811 	msr	BASEPRI, r3
9001060a:	f3bf 8f6f 	isb	sy
9001060e:	f3bf 8f4f 	dsb	sy
90010612:	e7fe      	b.n	90010612 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90010614:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010616:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010618:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001061a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001061c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010620:	6414      	str	r4, [r2, #64]	; 0x40
90010622:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010624:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
90010626:	f7ff fd7d 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001062a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001062c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001062e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010630:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
90010634:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010638:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001063c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001063e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010640:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010642:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010644:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010648:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001064c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010650:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010654:	f7ff fcae 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010658:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001065c:	f7ff fcaa 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
90010660:	f7ff fd82 	bl	90010168 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010664:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90010666:	9901      	ldr	r1, [sp, #4]
	}
90010668:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9001066a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001066e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
90010670:	b005      	add	sp, #20
90010672:	bd30      	pop	{r4, r5, pc}
90010674:	f04f 0350 	mov.w	r3, #80	; 0x50
90010678:	f383 8811 	msr	BASEPRI, r3
9001067c:	f3bf 8f6f 	isb	sy
90010680:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010684:	e7fe      	b.n	90010684 <xQueueCreateCountingSemaphoreStatic+0xc0>
90010686:	bf00      	nop

90010688 <xQueueCreateCountingSemaphore>:
	{
90010688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9001068a:	b940      	cbnz	r0, 9001069e <xQueueCreateCountingSemaphore+0x16>
9001068c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010690:	f383 8811 	msr	BASEPRI, r3
90010694:	f3bf 8f6f 	isb	sy
90010698:	f3bf 8f4f 	dsb	sy
9001069c:	e7fe      	b.n	9001069c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9001069e:	4288      	cmp	r0, r1
900106a0:	4604      	mov	r4, r0
900106a2:	460e      	mov	r6, r1
900106a4:	d208      	bcs.n	900106b8 <xQueueCreateCountingSemaphore+0x30>
900106a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900106aa:	f383 8811 	msr	BASEPRI, r3
900106ae:	f3bf 8f6f 	isb	sy
900106b2:	f3bf 8f4f 	dsb	sy
900106b6:	e7fe      	b.n	900106b6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900106b8:	2050      	movs	r0, #80	; 0x50
900106ba:	f7ff fb59 	bl	9000fd70 <pvPortMalloc>
		if( pxNewQueue != NULL )
900106be:	4605      	mov	r5, r0
900106c0:	b330      	cbz	r0, 90010710 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900106c2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900106c4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
900106c6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900106c8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900106cc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
900106ce:	f7ff fd29 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106d2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900106d4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900106d6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900106da:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106dc:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
900106e0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106e4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106e6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106ea:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900106ec:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900106ee:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900106f0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900106f4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900106f8:	f7ff fc5c 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900106fc:	f105 0024 	add.w	r0, r5, #36	; 0x24
90010700:	f7ff fc58 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
90010704:	f7ff fd30 	bl	90010168 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010708:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001070a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9001070c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
90010710:	4628      	mov	r0, r5
90010712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90010714 <xQueueGenericSend>:
{
90010714:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90010718:	b084      	sub	sp, #16
9001071a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9001071c:	2800      	cmp	r0, #0
9001071e:	f000 8103 	beq.w	90010928 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010722:	4688      	mov	r8, r1
90010724:	4604      	mov	r4, r0
90010726:	461f      	mov	r7, r3
90010728:	2900      	cmp	r1, #0
9001072a:	f000 8097 	beq.w	9001085c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9001072e:	2f02      	cmp	r7, #2
90010730:	d10b      	bne.n	9001074a <xQueueGenericSend+0x36>
90010732:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010734:	2b01      	cmp	r3, #1
90010736:	d008      	beq.n	9001074a <xQueueGenericSend+0x36>
90010738:	f04f 0350 	mov.w	r3, #80	; 0x50
9001073c:	f383 8811 	msr	BASEPRI, r3
90010740:	f3bf 8f6f 	isb	sy
90010744:	f3bf 8f4f 	dsb	sy
90010748:	e7fe      	b.n	90010748 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001074a:	f001 fd4d 	bl	900121e8 <xTaskGetSchedulerState>
9001074e:	2800      	cmp	r0, #0
90010750:	f000 80f3 	beq.w	9001093a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010754:	f1a7 0902 	sub.w	r9, r7, #2
90010758:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001075a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001075e:	fab9 f989 	clz	r9, r9
90010762:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
90010766:	f7ff fcdd 	bl	90010124 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001076a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001076c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001076e:	429a      	cmp	r2, r3
90010770:	f0c0 80f0 	bcc.w	90010954 <xQueueGenericSend+0x240>
90010774:	f1b9 0f00 	cmp.w	r9, #0
90010778:	f040 80ec 	bne.w	90010954 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9001077c:	9b01      	ldr	r3, [sp, #4]
9001077e:	2b00      	cmp	r3, #0
90010780:	f000 8101 	beq.w	90010986 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90010784:	2d00      	cmp	r5, #0
90010786:	f000 80cb 	beq.w	90010920 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9001078a:	f7ff fced 	bl	90010168 <vPortExitCritical>
		vTaskSuspendAll();
9001078e:	f001 fb55 	bl	90011e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010792:	f7ff fcc7 	bl	90010124 <vPortEnterCritical>
90010796:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001079a:	2bff      	cmp	r3, #255	; 0xff
9001079c:	d102      	bne.n	900107a4 <xQueueGenericSend+0x90>
9001079e:	2300      	movs	r3, #0
900107a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
900107a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900107a8:	2bff      	cmp	r3, #255	; 0xff
900107aa:	d102      	bne.n	900107b2 <xQueueGenericSend+0x9e>
900107ac:	2300      	movs	r3, #0
900107ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
900107b2:	f7ff fcd9 	bl	90010168 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900107b6:	a901      	add	r1, sp, #4
900107b8:	a802      	add	r0, sp, #8
900107ba:	f001 fcc1 	bl	90012140 <xTaskCheckForTimeOut>
900107be:	2800      	cmp	r0, #0
900107c0:	f040 80e5 	bne.w	9001098e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
900107c4:	f7ff fcae 	bl	90010124 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
900107c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900107ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900107cc:	429a      	cmp	r2, r3
900107ce:	d052      	beq.n	90010876 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
900107d0:	f7ff fcca 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
900107d4:	f7ff fca6 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900107d8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
900107dc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900107de:	2d00      	cmp	r5, #0
900107e0:	dc04      	bgt.n	900107ec <xQueueGenericSend+0xd8>
900107e2:	e011      	b.n	90010808 <xQueueGenericSend+0xf4>
			--cTxLock;
900107e4:	1e6a      	subs	r2, r5, #1
900107e6:	b2d3      	uxtb	r3, r2
900107e8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900107ea:	b16b      	cbz	r3, 90010808 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900107ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107ee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900107f0:	b153      	cbz	r3, 90010808 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107f2:	f001 fc4f 	bl	90012094 <xTaskRemoveFromEventList>
900107f6:	2800      	cmp	r0, #0
900107f8:	d0f4      	beq.n	900107e4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
900107fa:	f001 fce9 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
900107fe:	1e6a      	subs	r2, r5, #1
90010800:	b2d3      	uxtb	r3, r2
90010802:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010804:	2b00      	cmp	r3, #0
90010806:	d1f1      	bne.n	900107ec <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90010808:	23ff      	movs	r3, #255	; 0xff
9001080a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001080e:	f7ff fcab 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90010812:	f7ff fc87 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010816:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9001081a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001081c:	2d00      	cmp	r5, #0
9001081e:	dd14      	ble.n	9001084a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010820:	f104 0a10 	add.w	sl, r4, #16
90010824:	e003      	b.n	9001082e <xQueueGenericSend+0x11a>
				--cRxLock;
90010826:	1e6a      	subs	r2, r5, #1
90010828:	b2d3      	uxtb	r3, r2
9001082a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001082c:	b16b      	cbz	r3, 9001084a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001082e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010830:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010832:	b153      	cbz	r3, 9001084a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010834:	f001 fc2e 	bl	90012094 <xTaskRemoveFromEventList>
90010838:	2800      	cmp	r0, #0
9001083a:	d0f4      	beq.n	90010826 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9001083c:	f001 fcc8 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90010840:	1e6a      	subs	r2, r5, #1
90010842:	b2d3      	uxtb	r3, r2
90010844:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010846:	2b00      	cmp	r3, #0
90010848:	d1f1      	bne.n	9001082e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9001084a:	23ff      	movs	r3, #255	; 0xff
9001084c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010850:	f7ff fc8a 	bl	90010168 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010854:	f001 fafa 	bl	90011e4c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010858:	2501      	movs	r5, #1
9001085a:	e784      	b.n	90010766 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001085c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001085e:	2b00      	cmp	r3, #0
90010860:	f43f af65 	beq.w	9001072e <xQueueGenericSend+0x1a>
90010864:	f04f 0350 	mov.w	r3, #80	; 0x50
90010868:	f383 8811 	msr	BASEPRI, r3
9001086c:	f3bf 8f6f 	isb	sy
90010870:	f3bf 8f4f 	dsb	sy
90010874:	e7fe      	b.n	90010874 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010876:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9001087a:	f7ff fc75 	bl	90010168 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9001087e:	9901      	ldr	r1, [sp, #4]
90010880:	4650      	mov	r0, sl
90010882:	f001 fb79 	bl	90011f78 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010886:	f7ff fc4d 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001088a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001088e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010890:	2d00      	cmp	r5, #0
90010892:	dc04      	bgt.n	9001089e <xQueueGenericSend+0x18a>
90010894:	e011      	b.n	900108ba <xQueueGenericSend+0x1a6>
			--cTxLock;
90010896:	1e6b      	subs	r3, r5, #1
90010898:	b2da      	uxtb	r2, r3
9001089a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001089c:	b16a      	cbz	r2, 900108ba <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001089e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900108a0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900108a2:	b153      	cbz	r3, 900108ba <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900108a4:	f001 fbf6 	bl	90012094 <xTaskRemoveFromEventList>
900108a8:	2800      	cmp	r0, #0
900108aa:	d0f4      	beq.n	90010896 <xQueueGenericSend+0x182>
						vTaskMissedYield();
900108ac:	f001 fc90 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
900108b0:	1e6b      	subs	r3, r5, #1
900108b2:	b2da      	uxtb	r2, r3
900108b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900108b6:	2a00      	cmp	r2, #0
900108b8:	d1f1      	bne.n	9001089e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
900108ba:	23ff      	movs	r3, #255	; 0xff
900108bc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900108c0:	f7ff fc52 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
900108c4:	f7ff fc2e 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900108c8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900108cc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900108ce:	2d00      	cmp	r5, #0
900108d0:	dc04      	bgt.n	900108dc <xQueueGenericSend+0x1c8>
900108d2:	e011      	b.n	900108f8 <xQueueGenericSend+0x1e4>
				--cRxLock;
900108d4:	1e6b      	subs	r3, r5, #1
900108d6:	b2da      	uxtb	r2, r3
900108d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900108da:	b16a      	cbz	r2, 900108f8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900108dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900108de:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900108e0:	b153      	cbz	r3, 900108f8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900108e2:	f001 fbd7 	bl	90012094 <xTaskRemoveFromEventList>
900108e6:	2800      	cmp	r0, #0
900108e8:	d0f4      	beq.n	900108d4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
900108ea:	f001 fc71 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
900108ee:	1e6b      	subs	r3, r5, #1
900108f0:	b2da      	uxtb	r2, r3
900108f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900108f4:	2a00      	cmp	r2, #0
900108f6:	d1f1      	bne.n	900108dc <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
900108f8:	23ff      	movs	r3, #255	; 0xff
900108fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900108fe:	f7ff fc33 	bl	90010168 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010902:	f001 faa3 	bl	90011e4c <xTaskResumeAll>
90010906:	2800      	cmp	r0, #0
90010908:	d1a6      	bne.n	90010858 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9001090a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001090e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010912:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010916:	f3bf 8f4f 	dsb	sy
9001091a:	f3bf 8f6f 	isb	sy
9001091e:	e79b      	b.n	90010858 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010920:	a802      	add	r0, sp, #8
90010922:	f001 fc01 	bl	90012128 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90010926:	e730      	b.n	9001078a <xQueueGenericSend+0x76>
90010928:	f04f 0350 	mov.w	r3, #80	; 0x50
9001092c:	f383 8811 	msr	BASEPRI, r3
90010930:	f3bf 8f6f 	isb	sy
90010934:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010938:	e7fe      	b.n	90010938 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001093a:	9b01      	ldr	r3, [sp, #4]
9001093c:	2b00      	cmp	r3, #0
9001093e:	f43f af09 	beq.w	90010754 <xQueueGenericSend+0x40>
90010942:	f04f 0350 	mov.w	r3, #80	; 0x50
90010946:	f383 8811 	msr	BASEPRI, r3
9001094a:	f3bf 8f6f 	isb	sy
9001094e:	f3bf 8f4f 	dsb	sy
90010952:	e7fe      	b.n	90010952 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010954:	463a      	mov	r2, r7
90010956:	4641      	mov	r1, r8
90010958:	4620      	mov	r0, r4
9001095a:	f7ff fd43 	bl	900103e4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001095e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010960:	2b00      	cmp	r3, #0
90010962:	d152      	bne.n	90010a0a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
90010964:	b148      	cbz	r0, 9001097a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90010966:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001096a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9001096e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010972:	f3bf 8f4f 	dsb	sy
90010976:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9001097a:	f7ff fbf5 	bl	90010168 <vPortExitCritical>
				return pdPASS;
9001097e:	2001      	movs	r0, #1
}
90010980:	b004      	add	sp, #16
90010982:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90010986:	f7ff fbef 	bl	90010168 <vPortExitCritical>
					return errQUEUE_FULL;
9001098a:	4648      	mov	r0, r9
9001098c:	e7f8      	b.n	90010980 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9001098e:	f7ff fbc9 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010992:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010996:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010998:	2d00      	cmp	r5, #0
9001099a:	dd10      	ble.n	900109be <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001099c:	f104 0624 	add.w	r6, r4, #36	; 0x24
900109a0:	e003      	b.n	900109aa <xQueueGenericSend+0x296>
			--cTxLock;
900109a2:	1e6b      	subs	r3, r5, #1
900109a4:	b2da      	uxtb	r2, r3
900109a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109a8:	b14a      	cbz	r2, 900109be <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109ac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109ae:	b133      	cbz	r3, 900109be <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109b0:	f001 fb70 	bl	90012094 <xTaskRemoveFromEventList>
900109b4:	2800      	cmp	r0, #0
900109b6:	d0f4      	beq.n	900109a2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
900109b8:	f001 fc0a 	bl	900121d0 <vTaskMissedYield>
900109bc:	e7f1      	b.n	900109a2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
900109be:	23ff      	movs	r3, #255	; 0xff
900109c0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900109c4:	f7ff fbd0 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
900109c8:	f7ff fbac 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900109cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900109d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109d2:	2d00      	cmp	r5, #0
900109d4:	dd10      	ble.n	900109f8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109d6:	f104 0610 	add.w	r6, r4, #16
900109da:	e003      	b.n	900109e4 <xQueueGenericSend+0x2d0>
				--cRxLock;
900109dc:	1e6b      	subs	r3, r5, #1
900109de:	b2da      	uxtb	r2, r3
900109e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109e2:	b14a      	cbz	r2, 900109f8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109e8:	b133      	cbz	r3, 900109f8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109ea:	f001 fb53 	bl	90012094 <xTaskRemoveFromEventList>
900109ee:	2800      	cmp	r0, #0
900109f0:	d0f4      	beq.n	900109dc <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
900109f2:	f001 fbed 	bl	900121d0 <vTaskMissedYield>
900109f6:	e7f1      	b.n	900109dc <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
900109f8:	23ff      	movs	r3, #255	; 0xff
900109fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900109fe:	f7ff fbb3 	bl	90010168 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010a02:	f001 fa23 	bl	90011e4c <xTaskResumeAll>
			return errQUEUE_FULL;
90010a06:	2000      	movs	r0, #0
90010a08:	e7ba      	b.n	90010980 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010a0e:	f001 fb41 	bl	90012094 <xTaskRemoveFromEventList>
90010a12:	2800      	cmp	r0, #0
90010a14:	d0b1      	beq.n	9001097a <xQueueGenericSend+0x266>
90010a16:	e7a6      	b.n	90010966 <xQueueGenericSend+0x252>

90010a18 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
90010a18:	b179      	cbz	r1, 90010a3a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010a1a:	2350      	movs	r3, #80	; 0x50
	{
90010a1c:	b570      	push	{r4, r5, r6, lr}
90010a1e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90010a20:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010a22:	9b01      	ldr	r3, [sp, #4]
90010a24:	2b50      	cmp	r3, #80	; 0x50
90010a26:	d011      	beq.n	90010a4c <xQueueCreateMutexStatic+0x34>
90010a28:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a2c:	f383 8811 	msr	BASEPRI, r3
90010a30:	f3bf 8f6f 	isb	sy
90010a34:	f3bf 8f4f 	dsb	sy
90010a38:	e7fe      	b.n	90010a38 <xQueueCreateMutexStatic+0x20>
90010a3a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a3e:	f383 8811 	msr	BASEPRI, r3
90010a42:	f3bf 8f6f 	isb	sy
90010a46:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010a4a:	e7fe      	b.n	90010a4a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
90010a4c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010a4e:	2301      	movs	r3, #1
90010a50:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010a52:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010a54:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
90010a58:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010a5a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
90010a5c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
90010a60:	f7ff fb60 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a64:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
90010a66:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010a68:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010a6a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
90010a6c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010a70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a74:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
90010a78:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a7c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a7e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a80:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010a82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010a86:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010a8a:	f7ff fa93 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010a8e:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010a92:	f7ff fa8f 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
90010a96:	f7ff fb67 	bl	90010168 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010a9a:	4633      	mov	r3, r6
90010a9c:	4632      	mov	r2, r6
90010a9e:	4631      	mov	r1, r6
90010aa0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010aa2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010aa6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010aa8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010aaa:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010aac:	f7ff fe32 	bl	90010714 <xQueueGenericSend>
	}
90010ab0:	4620      	mov	r0, r4
90010ab2:	b002      	add	sp, #8
90010ab4:	bd70      	pop	{r4, r5, r6, pc}
90010ab6:	bf00      	nop

90010ab8 <xQueueGiveMutexRecursive>:
	{
90010ab8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
90010aba:	b138      	cbz	r0, 90010acc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90010abc:	6885      	ldr	r5, [r0, #8]
90010abe:	4604      	mov	r4, r0
90010ac0:	f001 fb8c 	bl	900121dc <xTaskGetCurrentTaskHandle>
90010ac4:	4285      	cmp	r5, r0
90010ac6:	d00a      	beq.n	90010ade <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
90010ac8:	2000      	movs	r0, #0
	}
90010aca:	bd38      	pop	{r3, r4, r5, pc}
90010acc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010ad0:	f383 8811 	msr	BASEPRI, r3
90010ad4:	f3bf 8f6f 	isb	sy
90010ad8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90010adc:	e7fe      	b.n	90010adc <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
90010ade:	68e3      	ldr	r3, [r4, #12]
90010ae0:	3b01      	subs	r3, #1
90010ae2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
90010ae4:	b10b      	cbz	r3, 90010aea <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
90010ae6:	2001      	movs	r0, #1
	}
90010ae8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
90010aea:	461a      	mov	r2, r3
90010aec:	4619      	mov	r1, r3
90010aee:	4620      	mov	r0, r4
90010af0:	f7ff fe10 	bl	90010714 <xQueueGenericSend>
			xReturn = pdPASS;
90010af4:	2001      	movs	r0, #1
	}
90010af6:	bd38      	pop	{r3, r4, r5, pc}

90010af8 <xQueueCreateMutex>:
	{
90010af8:	b570      	push	{r4, r5, r6, lr}
90010afa:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010afc:	2050      	movs	r0, #80	; 0x50
90010afe:	f7ff f937 	bl	9000fd70 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010b02:	4604      	mov	r4, r0
90010b04:	b370      	cbz	r0, 90010b64 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010b06:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
90010b08:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010b0a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010b0c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010b10:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
90010b14:	f7ff fb06 	bl	90010124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b18:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010b1a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010b1c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010b20:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b22:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
90010b26:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b2a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b2c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b2e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90010b30:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b32:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010b36:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010b3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010b3e:	f7ff fa39 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010b42:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010b46:	f7ff fa35 	bl	9000ffb4 <vListInitialise>
	taskEXIT_CRITICAL();
90010b4a:	f7ff fb0d 	bl	90010168 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010b4e:	4633      	mov	r3, r6
90010b50:	4632      	mov	r2, r6
90010b52:	4631      	mov	r1, r6
90010b54:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010b56:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010b5a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010b5c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010b5e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010b60:	f7ff fdd8 	bl	90010714 <xQueueGenericSend>
	}
90010b64:	4620      	mov	r0, r4
90010b66:	bd70      	pop	{r4, r5, r6, pc}

90010b68 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90010b68:	2800      	cmp	r0, #0
90010b6a:	d04e      	beq.n	90010c0a <xQueueGenericSendFromISR+0xa2>
{
90010b6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010b70:	460e      	mov	r6, r1
90010b72:	4604      	mov	r4, r0
90010b74:	4617      	mov	r7, r2
90010b76:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010b78:	b339      	cbz	r1, 90010bca <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90010b7a:	2d02      	cmp	r5, #2
90010b7c:	d10b      	bne.n	90010b96 <xQueueGenericSendFromISR+0x2e>
90010b7e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010b80:	2b01      	cmp	r3, #1
90010b82:	d008      	beq.n	90010b96 <xQueueGenericSendFromISR+0x2e>
90010b84:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b88:	f383 8811 	msr	BASEPRI, r3
90010b8c:	f3bf 8f6f 	isb	sy
90010b90:	f3bf 8f4f 	dsb	sy
90010b94:	e7fe      	b.n	90010b94 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010b96:	f7ff fbf7 	bl	90010388 <vPortValidateInterruptPriority>
	__asm volatile
90010b9a:	f3ef 8811 	mrs	r8, BASEPRI
90010b9e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010ba2:	f383 8811 	msr	BASEPRI, r3
90010ba6:	f3bf 8f6f 	isb	sy
90010baa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010bae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90010bb0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010bb2:	429a      	cmp	r2, r3
90010bb4:	d315      	bcc.n	90010be2 <xQueueGenericSendFromISR+0x7a>
90010bb6:	f1a5 0002 	sub.w	r0, r5, #2
90010bba:	fab0 f080 	clz	r0, r0
90010bbe:	0940      	lsrs	r0, r0, #5
90010bc0:	b978      	cbnz	r0, 90010be2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90010bc2:	f388 8811 	msr	BASEPRI, r8
}
90010bc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010bca:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010bcc:	2b00      	cmp	r3, #0
90010bce:	d0d4      	beq.n	90010b7a <xQueueGenericSendFromISR+0x12>
	__asm volatile
90010bd0:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bd4:	f383 8811 	msr	BASEPRI, r3
90010bd8:	f3bf 8f6f 	isb	sy
90010bdc:	f3bf 8f4f 	dsb	sy
90010be0:	e7fe      	b.n	90010be0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010be2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90010be4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010be8:	4631      	mov	r1, r6
90010bea:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010bec:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010bee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010bf0:	f7ff fbf8 	bl	900103e4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90010bf4:	1c6b      	adds	r3, r5, #1
90010bf6:	d011      	beq.n	90010c1c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010bf8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
90010bfa:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010bfc:	b25b      	sxtb	r3, r3
90010bfe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
90010c02:	f388 8811 	msr	BASEPRI, r8
}
90010c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
90010c0a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c0e:	f383 8811 	msr	BASEPRI, r3
90010c12:	f3bf 8f6f 	isb	sy
90010c16:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010c1a:	e7fe      	b.n	90010c1a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010c1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010c1e:	b90b      	cbnz	r3, 90010c24 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
90010c20:	2001      	movs	r0, #1
90010c22:	e7ce      	b.n	90010bc2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c24:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010c28:	f001 fa34 	bl	90012094 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010c2c:	2800      	cmp	r0, #0
90010c2e:	d0f7      	beq.n	90010c20 <xQueueGenericSendFromISR+0xb8>
90010c30:	2f00      	cmp	r7, #0
90010c32:	d0f5      	beq.n	90010c20 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010c34:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010c36:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010c38:	603b      	str	r3, [r7, #0]
90010c3a:	e7c2      	b.n	90010bc2 <xQueueGenericSendFromISR+0x5a>

90010c3c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
90010c3c:	b360      	cbz	r0, 90010c98 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
90010c3e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
90010c40:	b570      	push	{r4, r5, r6, lr}
90010c42:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
90010c44:	b143      	cbz	r3, 90010c58 <xQueueGiveFromISR+0x1c>
90010c46:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c4a:	f383 8811 	msr	BASEPRI, r3
90010c4e:	f3bf 8f6f 	isb	sy
90010c52:	f3bf 8f4f 	dsb	sy
90010c56:	e7fe      	b.n	90010c56 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010c58:	6803      	ldr	r3, [r0, #0]
90010c5a:	460d      	mov	r5, r1
90010c5c:	b32b      	cbz	r3, 90010caa <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010c5e:	f7ff fb93 	bl	90010388 <vPortValidateInterruptPriority>
	__asm volatile
90010c62:	f3ef 8611 	mrs	r6, BASEPRI
90010c66:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c6a:	f383 8811 	msr	BASEPRI, r3
90010c6e:	f3bf 8f6f 	isb	sy
90010c72:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010c76:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90010c78:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90010c7a:	429a      	cmp	r2, r3
90010c7c:	d921      	bls.n	90010cc2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
90010c7e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010c82:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90010c84:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010c86:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90010c88:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
90010c8a:	d01e      	beq.n	90010cca <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010c8c:	3301      	adds	r3, #1
			xReturn = pdPASS;
90010c8e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010c90:	b25b      	sxtb	r3, r3
90010c92:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90010c96:	e015      	b.n	90010cc4 <xQueueGiveFromISR+0x88>
	__asm volatile
90010c98:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c9c:	f383 8811 	msr	BASEPRI, r3
90010ca0:	f3bf 8f6f 	isb	sy
90010ca4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010ca8:	e7fe      	b.n	90010ca8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010caa:	6883      	ldr	r3, [r0, #8]
90010cac:	2b00      	cmp	r3, #0
90010cae:	d0d6      	beq.n	90010c5e <xQueueGiveFromISR+0x22>
90010cb0:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cb4:	f383 8811 	msr	BASEPRI, r3
90010cb8:	f3bf 8f6f 	isb	sy
90010cbc:	f3bf 8f4f 	dsb	sy
90010cc0:	e7fe      	b.n	90010cc0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010cc2:	2000      	movs	r0, #0
	__asm volatile
90010cc4:	f386 8811 	msr	BASEPRI, r6
}
90010cc8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010cca:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010ccc:	b90b      	cbnz	r3, 90010cd2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
90010cce:	2001      	movs	r0, #1
90010cd0:	e7f8      	b.n	90010cc4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010cd6:	f001 f9dd 	bl	90012094 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010cda:	2d00      	cmp	r5, #0
90010cdc:	d0f7      	beq.n	90010cce <xQueueGiveFromISR+0x92>
90010cde:	2800      	cmp	r0, #0
90010ce0:	d0f5      	beq.n	90010cce <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010ce2:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010ce4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010ce6:	602b      	str	r3, [r5, #0]
90010ce8:	e7ec      	b.n	90010cc4 <xQueueGiveFromISR+0x88>
90010cea:	bf00      	nop

90010cec <xQueueReceive>:
{
90010cec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010cf0:	b085      	sub	sp, #20
90010cf2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010cf4:	2800      	cmp	r0, #0
90010cf6:	f000 815c 	beq.w	90010fb2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010cfa:	460f      	mov	r7, r1
90010cfc:	4604      	mov	r4, r0
90010cfe:	2900      	cmp	r1, #0
90010d00:	d079      	beq.n	90010df6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010d02:	f001 fa71 	bl	900121e8 <xTaskGetSchedulerState>
90010d06:	2800      	cmp	r0, #0
90010d08:	f000 8081 	beq.w	90010e0e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
90010d0c:	f7ff fa0a 	bl	90010124 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010d10:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010d12:	2d00      	cmp	r5, #0
90010d14:	f040 8138 	bne.w	90010f88 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90010d18:	9b01      	ldr	r3, [sp, #4]
90010d1a:	2b00      	cmp	r3, #0
90010d1c:	f000 80d5 	beq.w	90010eca <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
90010d20:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d22:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010d26:	a802      	add	r0, sp, #8
90010d28:	f001 f9fe 	bl	90012128 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010d2c:	f7ff fa1c 	bl	90010168 <vPortExitCritical>
		vTaskSuspendAll();
90010d30:	f001 f884 	bl	90011e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010d34:	f7ff f9f6 	bl	90010124 <vPortEnterCritical>
90010d38:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010d3c:	2bff      	cmp	r3, #255	; 0xff
90010d3e:	d101      	bne.n	90010d44 <xQueueReceive+0x58>
90010d40:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
90010d44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010d48:	2bff      	cmp	r3, #255	; 0xff
90010d4a:	d101      	bne.n	90010d50 <xQueueReceive+0x64>
90010d4c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
90010d50:	f7ff fa0a 	bl	90010168 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010d54:	a901      	add	r1, sp, #4
90010d56:	a802      	add	r0, sp, #8
90010d58:	f001 f9f2 	bl	90012140 <xTaskCheckForTimeOut>
90010d5c:	2800      	cmp	r0, #0
90010d5e:	d163      	bne.n	90010e28 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
90010d60:	f7ff f9e0 	bl	90010124 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010d64:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90010d66:	2b00      	cmp	r3, #0
90010d68:	f000 80b5 	beq.w	90010ed6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
90010d6c:	f7ff f9fc 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90010d70:	f7ff f9d8 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010d74:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010d78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d7a:	2d00      	cmp	r5, #0
90010d7c:	dc04      	bgt.n	90010d88 <xQueueReceive+0x9c>
90010d7e:	e011      	b.n	90010da4 <xQueueReceive+0xb8>
			--cTxLock;
90010d80:	1e6b      	subs	r3, r5, #1
90010d82:	b2da      	uxtb	r2, r3
90010d84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d86:	b16a      	cbz	r2, 90010da4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d88:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d8a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d8c:	b153      	cbz	r3, 90010da4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d8e:	f001 f981 	bl	90012094 <xTaskRemoveFromEventList>
90010d92:	2800      	cmp	r0, #0
90010d94:	d0f4      	beq.n	90010d80 <xQueueReceive+0x94>
						vTaskMissedYield();
90010d96:	f001 fa1b 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
90010d9a:	1e6b      	subs	r3, r5, #1
90010d9c:	b2da      	uxtb	r2, r3
90010d9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010da0:	2a00      	cmp	r2, #0
90010da2:	d1f1      	bne.n	90010d88 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
90010da4:	23ff      	movs	r3, #255	; 0xff
90010da6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010daa:	f7ff f9dd 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90010dae:	f7ff f9b9 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010db2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010db6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010db8:	2d00      	cmp	r5, #0
90010dba:	dd14      	ble.n	90010de6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010dbc:	f104 0910 	add.w	r9, r4, #16
90010dc0:	e003      	b.n	90010dca <xQueueReceive+0xde>
				--cRxLock;
90010dc2:	1e6b      	subs	r3, r5, #1
90010dc4:	b2da      	uxtb	r2, r3
90010dc6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010dc8:	b16a      	cbz	r2, 90010de6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010dca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010dcc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010dce:	b153      	cbz	r3, 90010de6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010dd0:	f001 f960 	bl	90012094 <xTaskRemoveFromEventList>
90010dd4:	2800      	cmp	r0, #0
90010dd6:	d0f4      	beq.n	90010dc2 <xQueueReceive+0xd6>
					vTaskMissedYield();
90010dd8:	f001 f9fa 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90010ddc:	1e6b      	subs	r3, r5, #1
90010dde:	b2da      	uxtb	r2, r3
90010de0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010de2:	2a00      	cmp	r2, #0
90010de4:	d1f1      	bne.n	90010dca <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
90010de6:	23ff      	movs	r3, #255	; 0xff
90010de8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010dec:	f7ff f9bc 	bl	90010168 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010df0:	f001 f82c 	bl	90011e4c <xTaskResumeAll>
		taskENTER_CRITICAL();
90010df4:	e060      	b.n	90010eb8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010df6:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010df8:	2b00      	cmp	r3, #0
90010dfa:	d082      	beq.n	90010d02 <xQueueReceive+0x16>
	__asm volatile
90010dfc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e00:	f383 8811 	msr	BASEPRI, r3
90010e04:	f3bf 8f6f 	isb	sy
90010e08:	f3bf 8f4f 	dsb	sy
90010e0c:	e7fe      	b.n	90010e0c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010e0e:	9b01      	ldr	r3, [sp, #4]
90010e10:	2b00      	cmp	r3, #0
90010e12:	f43f af7b 	beq.w	90010d0c <xQueueReceive+0x20>
90010e16:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e1a:	f383 8811 	msr	BASEPRI, r3
90010e1e:	f3bf 8f6f 	isb	sy
90010e22:	f3bf 8f4f 	dsb	sy
90010e26:	e7fe      	b.n	90010e26 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
90010e28:	f7ff f97c 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010e2c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010e30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e32:	2d00      	cmp	r5, #0
90010e34:	dc04      	bgt.n	90010e40 <xQueueReceive+0x154>
90010e36:	e011      	b.n	90010e5c <xQueueReceive+0x170>
			--cTxLock;
90010e38:	1e6b      	subs	r3, r5, #1
90010e3a:	b2da      	uxtb	r2, r3
90010e3c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e3e:	b16a      	cbz	r2, 90010e5c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e44:	b153      	cbz	r3, 90010e5c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e46:	f001 f925 	bl	90012094 <xTaskRemoveFromEventList>
90010e4a:	2800      	cmp	r0, #0
90010e4c:	d0f4      	beq.n	90010e38 <xQueueReceive+0x14c>
						vTaskMissedYield();
90010e4e:	f001 f9bf 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
90010e52:	1e6b      	subs	r3, r5, #1
90010e54:	b2da      	uxtb	r2, r3
90010e56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e58:	2a00      	cmp	r2, #0
90010e5a:	d1f1      	bne.n	90010e40 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
90010e5c:	23ff      	movs	r3, #255	; 0xff
90010e5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010e62:	f7ff f981 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e66:	f7ff f95d 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010e6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010e6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e70:	2d00      	cmp	r5, #0
90010e72:	dd14      	ble.n	90010e9e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e74:	f104 0910 	add.w	r9, r4, #16
90010e78:	e003      	b.n	90010e82 <xQueueReceive+0x196>
				--cRxLock;
90010e7a:	1e6b      	subs	r3, r5, #1
90010e7c:	b2da      	uxtb	r2, r3
90010e7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e80:	b16a      	cbz	r2, 90010e9e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e84:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e86:	b153      	cbz	r3, 90010e9e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e88:	f001 f904 	bl	90012094 <xTaskRemoveFromEventList>
90010e8c:	2800      	cmp	r0, #0
90010e8e:	d0f4      	beq.n	90010e7a <xQueueReceive+0x18e>
					vTaskMissedYield();
90010e90:	f001 f99e 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90010e94:	1e6b      	subs	r3, r5, #1
90010e96:	b2da      	uxtb	r2, r3
90010e98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e9a:	2a00      	cmp	r2, #0
90010e9c:	d1f1      	bne.n	90010e82 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
90010e9e:	23ff      	movs	r3, #255	; 0xff
90010ea0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010ea4:	f7ff f960 	bl	90010168 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010ea8:	f000 ffd0 	bl	90011e4c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010eac:	f7ff f93a 	bl	90010124 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010eb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90010eb2:	b153      	cbz	r3, 90010eca <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
90010eb4:	f7ff f958 	bl	90010168 <vPortExitCritical>
		taskENTER_CRITICAL();
90010eb8:	f7ff f934 	bl	90010124 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010ebc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010ebe:	2d00      	cmp	r5, #0
90010ec0:	d162      	bne.n	90010f88 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90010ec2:	9b01      	ldr	r3, [sp, #4]
90010ec4:	2b00      	cmp	r3, #0
90010ec6:	f47f af31 	bne.w	90010d2c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90010eca:	f7ff f94d 	bl	90010168 <vPortExitCritical>
					return errQUEUE_EMPTY;
90010ece:	2000      	movs	r0, #0
}
90010ed0:	b005      	add	sp, #20
90010ed2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
90010ed6:	f7ff f947 	bl	90010168 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010eda:	9901      	ldr	r1, [sp, #4]
90010edc:	4630      	mov	r0, r6
90010ede:	f001 f84b 	bl	90011f78 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010ee2:	f7ff f91f 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010ee6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010eea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010eec:	2d00      	cmp	r5, #0
90010eee:	dc04      	bgt.n	90010efa <xQueueReceive+0x20e>
90010ef0:	e011      	b.n	90010f16 <xQueueReceive+0x22a>
			--cTxLock;
90010ef2:	1e6b      	subs	r3, r5, #1
90010ef4:	b2da      	uxtb	r2, r3
90010ef6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ef8:	b16a      	cbz	r2, 90010f16 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010efa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010efc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010efe:	b153      	cbz	r3, 90010f16 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010f00:	f001 f8c8 	bl	90012094 <xTaskRemoveFromEventList>
90010f04:	2800      	cmp	r0, #0
90010f06:	d0f4      	beq.n	90010ef2 <xQueueReceive+0x206>
						vTaskMissedYield();
90010f08:	f001 f962 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
90010f0c:	1e6b      	subs	r3, r5, #1
90010f0e:	b2da      	uxtb	r2, r3
90010f10:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010f12:	2a00      	cmp	r2, #0
90010f14:	d1f1      	bne.n	90010efa <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
90010f16:	23ff      	movs	r3, #255	; 0xff
90010f18:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010f1c:	f7ff f924 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90010f20:	f7ff f900 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010f24:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010f28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f2a:	2d00      	cmp	r5, #0
90010f2c:	dd14      	ble.n	90010f58 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f2e:	f104 0910 	add.w	r9, r4, #16
90010f32:	e003      	b.n	90010f3c <xQueueReceive+0x250>
				--cRxLock;
90010f34:	1e6b      	subs	r3, r5, #1
90010f36:	b2da      	uxtb	r2, r3
90010f38:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f3a:	b16a      	cbz	r2, 90010f58 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f3c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f3e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f40:	b153      	cbz	r3, 90010f58 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f42:	f001 f8a7 	bl	90012094 <xTaskRemoveFromEventList>
90010f46:	2800      	cmp	r0, #0
90010f48:	d0f4      	beq.n	90010f34 <xQueueReceive+0x248>
					vTaskMissedYield();
90010f4a:	f001 f941 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90010f4e:	1e6b      	subs	r3, r5, #1
90010f50:	b2da      	uxtb	r2, r3
90010f52:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f54:	2a00      	cmp	r2, #0
90010f56:	d1f1      	bne.n	90010f3c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
90010f58:	23ff      	movs	r3, #255	; 0xff
90010f5a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010f5e:	f7ff f903 	bl	90010168 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010f62:	f000 ff73 	bl	90011e4c <xTaskResumeAll>
90010f66:	2800      	cmp	r0, #0
90010f68:	d1a6      	bne.n	90010eb8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
90010f6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010f6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010f72:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010f76:	f3bf 8f4f 	dsb	sy
90010f7a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
90010f7e:	f7ff f8d1 	bl	90010124 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010f82:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010f84:	2d00      	cmp	r5, #0
90010f86:	d09c      	beq.n	90010ec2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010f88:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010f8a:	b152      	cbz	r2, 90010fa2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f8c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010f8e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f90:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010f92:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f94:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010f96:	d301      	bcc.n	90010f9c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010f98:	6821      	ldr	r1, [r4, #0]
90010f9a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010f9c:	4638      	mov	r0, r7
90010f9e:	f018 fd77 	bl	90029a90 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010fa2:	3d01      	subs	r5, #1
90010fa4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010fa6:	6923      	ldr	r3, [r4, #16]
90010fa8:	b963      	cbnz	r3, 90010fc4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
90010faa:	f7ff f8dd 	bl	90010168 <vPortExitCritical>
				return pdPASS;
90010fae:	2001      	movs	r0, #1
90010fb0:	e78e      	b.n	90010ed0 <xQueueReceive+0x1e4>
90010fb2:	f04f 0350 	mov.w	r3, #80	; 0x50
90010fb6:	f383 8811 	msr	BASEPRI, r3
90010fba:	f3bf 8f6f 	isb	sy
90010fbe:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010fc2:	e7fe      	b.n	90010fc2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010fc4:	f104 0010 	add.w	r0, r4, #16
90010fc8:	f001 f864 	bl	90012094 <xTaskRemoveFromEventList>
90010fcc:	2800      	cmp	r0, #0
90010fce:	d0ec      	beq.n	90010faa <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
90010fd0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010fd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010fd8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010fdc:	f3bf 8f4f 	dsb	sy
90010fe0:	f3bf 8f6f 	isb	sy
90010fe4:	e7e1      	b.n	90010faa <xQueueReceive+0x2be>
90010fe6:	bf00      	nop

90010fe8 <xQueueSemaphoreTake>:
{
90010fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010fec:	b084      	sub	sp, #16
90010fee:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90010ff0:	2800      	cmp	r0, #0
90010ff2:	d05c      	beq.n	900110ae <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
90010ff4:	6c07      	ldr	r7, [r0, #64]	; 0x40
90010ff6:	4604      	mov	r4, r0
90010ff8:	b147      	cbz	r7, 9001100c <xQueueSemaphoreTake+0x24>
90010ffa:	f04f 0350 	mov.w	r3, #80	; 0x50
90010ffe:	f383 8811 	msr	BASEPRI, r3
90011002:	f3bf 8f6f 	isb	sy
90011006:	f3bf 8f4f 	dsb	sy
9001100a:	e7fe      	b.n	9001100a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001100c:	f001 f8ec 	bl	900121e8 <xTaskGetSchedulerState>
90011010:	4605      	mov	r5, r0
90011012:	2800      	cmp	r0, #0
90011014:	d054      	beq.n	900110c0 <xQueueSemaphoreTake+0xd8>
90011016:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011018:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9001101c:	f7ff f882 	bl	90010124 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90011020:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90011022:	2b00      	cmp	r3, #0
90011024:	f040 8149 	bne.w	900112ba <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
90011028:	9b01      	ldr	r3, [sp, #4]
9001102a:	2b00      	cmp	r3, #0
9001102c:	f000 813a 	beq.w	900112a4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
90011030:	2d00      	cmp	r5, #0
90011032:	f000 809d 	beq.w	90011170 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
90011036:	f7ff f897 	bl	90010168 <vPortExitCritical>
		vTaskSuspendAll();
9001103a:	f000 feff 	bl	90011e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001103e:	f7ff f871 	bl	90010124 <vPortEnterCritical>
90011042:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011046:	2bff      	cmp	r3, #255	; 0xff
90011048:	d102      	bne.n	90011050 <xQueueSemaphoreTake+0x68>
9001104a:	2300      	movs	r3, #0
9001104c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90011050:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011054:	2bff      	cmp	r3, #255	; 0xff
90011056:	d102      	bne.n	9001105e <xQueueSemaphoreTake+0x76>
90011058:	2300      	movs	r3, #0
9001105a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9001105e:	f7ff f883 	bl	90010168 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011062:	a901      	add	r1, sp, #4
90011064:	a802      	add	r0, sp, #8
90011066:	f001 f86b 	bl	90012140 <xTaskCheckForTimeOut>
9001106a:	2800      	cmp	r0, #0
9001106c:	d135      	bne.n	900110da <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9001106e:	f7ff f859 	bl	90010124 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011072:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011074:	2b00      	cmp	r3, #0
90011076:	f000 80a4 	beq.w	900111c2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9001107a:	f7ff f875 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
9001107e:	f7ff f851 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011082:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011086:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011088:	2d00      	cmp	r5, #0
9001108a:	dc05      	bgt.n	90011098 <xQueueSemaphoreTake+0xb0>
9001108c:	e074      	b.n	90011178 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9001108e:	1e6b      	subs	r3, r5, #1
90011090:	b2da      	uxtb	r2, r3
90011092:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011094:	2a00      	cmp	r2, #0
90011096:	d06f      	beq.n	90011178 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011098:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001109a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001109c:	2b00      	cmp	r3, #0
9001109e:	d06b      	beq.n	90011178 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900110a0:	f000 fff8 	bl	90012094 <xTaskRemoveFromEventList>
900110a4:	2800      	cmp	r0, #0
900110a6:	d0f2      	beq.n	9001108e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
900110a8:	f001 f892 	bl	900121d0 <vTaskMissedYield>
900110ac:	e7ef      	b.n	9001108e <xQueueSemaphoreTake+0xa6>
900110ae:	f04f 0350 	mov.w	r3, #80	; 0x50
900110b2:	f383 8811 	msr	BASEPRI, r3
900110b6:	f3bf 8f6f 	isb	sy
900110ba:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
900110be:	e7fe      	b.n	900110be <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900110c0:	9b01      	ldr	r3, [sp, #4]
900110c2:	2b00      	cmp	r3, #0
900110c4:	f000 80d4 	beq.w	90011270 <xQueueSemaphoreTake+0x288>
900110c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900110cc:	f383 8811 	msr	BASEPRI, r3
900110d0:	f3bf 8f6f 	isb	sy
900110d4:	f3bf 8f4f 	dsb	sy
900110d8:	e7fe      	b.n	900110d8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
900110da:	f7ff f823 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900110de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900110e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900110e4:	2d00      	cmp	r5, #0
900110e6:	dc04      	bgt.n	900110f2 <xQueueSemaphoreTake+0x10a>
900110e8:	e011      	b.n	9001110e <xQueueSemaphoreTake+0x126>
			--cTxLock;
900110ea:	1e6b      	subs	r3, r5, #1
900110ec:	b2da      	uxtb	r2, r3
900110ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900110f0:	b16a      	cbz	r2, 9001110e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900110f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900110f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900110f6:	b153      	cbz	r3, 9001110e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900110f8:	f000 ffcc 	bl	90012094 <xTaskRemoveFromEventList>
900110fc:	2800      	cmp	r0, #0
900110fe:	d0f4      	beq.n	900110ea <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
90011100:	f001 f866 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
90011104:	1e6b      	subs	r3, r5, #1
90011106:	b2da      	uxtb	r2, r3
90011108:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001110a:	2a00      	cmp	r2, #0
9001110c:	d1f1      	bne.n	900110f2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9001110e:	23ff      	movs	r3, #255	; 0xff
90011110:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011114:	f7ff f828 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90011118:	f7ff f804 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001111c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011120:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011122:	2d00      	cmp	r5, #0
90011124:	dd14      	ble.n	90011150 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011126:	f104 0810 	add.w	r8, r4, #16
9001112a:	e003      	b.n	90011134 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9001112c:	1e6b      	subs	r3, r5, #1
9001112e:	b2da      	uxtb	r2, r3
90011130:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011132:	b16a      	cbz	r2, 90011150 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011134:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011136:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011138:	b153      	cbz	r3, 90011150 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001113a:	f000 ffab 	bl	90012094 <xTaskRemoveFromEventList>
9001113e:	2800      	cmp	r0, #0
90011140:	d0f4      	beq.n	9001112c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
90011142:	f001 f845 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90011146:	1e6b      	subs	r3, r5, #1
90011148:	b2da      	uxtb	r2, r3
9001114a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001114c:	2a00      	cmp	r2, #0
9001114e:	d1f1      	bne.n	90011134 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
90011150:	23ff      	movs	r3, #255	; 0xff
90011152:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011156:	f7ff f807 	bl	90010168 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001115a:	f000 fe77 	bl	90011e4c <xTaskResumeAll>
	taskENTER_CRITICAL();
9001115e:	f7fe ffe1 	bl	90010124 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011162:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011164:	2b00      	cmp	r3, #0
90011166:	d07c      	beq.n	90011262 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
90011168:	f7fe fffe 	bl	90010168 <vPortExitCritical>
	return xReturn;
9001116c:	2501      	movs	r5, #1
9001116e:	e755      	b.n	9001101c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
90011170:	a802      	add	r0, sp, #8
90011172:	f000 ffd9 	bl	90012128 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90011176:	e75e      	b.n	90011036 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90011178:	23ff      	movs	r3, #255	; 0xff
9001117a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001117e:	f7fe fff3 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90011182:	f7fe ffcf 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011186:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001118a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001118c:	2d00      	cmp	r5, #0
9001118e:	dd10      	ble.n	900111b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011190:	f104 0810 	add.w	r8, r4, #16
90011194:	e003      	b.n	9001119e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
90011196:	1e6b      	subs	r3, r5, #1
90011198:	b2da      	uxtb	r2, r3
9001119a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001119c:	b14a      	cbz	r2, 900111b2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001119e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900111a2:	b133      	cbz	r3, 900111b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900111a4:	f000 ff76 	bl	90012094 <xTaskRemoveFromEventList>
900111a8:	2800      	cmp	r0, #0
900111aa:	d0f4      	beq.n	90011196 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
900111ac:	f001 f810 	bl	900121d0 <vTaskMissedYield>
900111b0:	e7f1      	b.n	90011196 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
900111b2:	23ff      	movs	r3, #255	; 0xff
900111b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900111b8:	f7fe ffd6 	bl	90010168 <vPortExitCritical>
				( void ) xTaskResumeAll();
900111bc:	f000 fe46 	bl	90011e4c <xTaskResumeAll>
900111c0:	e7d4      	b.n	9001116c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
900111c2:	f7fe ffd1 	bl	90010168 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900111c6:	6823      	ldr	r3, [r4, #0]
900111c8:	2b00      	cmp	r3, #0
900111ca:	d062      	beq.n	90011292 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900111cc:	9901      	ldr	r1, [sp, #4]
900111ce:	4630      	mov	r0, r6
900111d0:	f000 fed2 	bl	90011f78 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900111d4:	f7fe ffa6 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900111d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900111dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900111de:	2d00      	cmp	r5, #0
900111e0:	dc04      	bgt.n	900111ec <xQueueSemaphoreTake+0x204>
900111e2:	e00d      	b.n	90011200 <xQueueSemaphoreTake+0x218>
			--cTxLock;
900111e4:	1e6b      	subs	r3, r5, #1
900111e6:	b2da      	uxtb	r2, r3
900111e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900111ea:	b14a      	cbz	r2, 90011200 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900111ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900111ee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900111f0:	b133      	cbz	r3, 90011200 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900111f2:	f000 ff4f 	bl	90012094 <xTaskRemoveFromEventList>
900111f6:	2800      	cmp	r0, #0
900111f8:	d0f4      	beq.n	900111e4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
900111fa:	f000 ffe9 	bl	900121d0 <vTaskMissedYield>
900111fe:	e7f1      	b.n	900111e4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
90011200:	23ff      	movs	r3, #255	; 0xff
90011202:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011206:	f7fe ffaf 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
9001120a:	f7fe ff8b 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001120e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011212:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011214:	2d00      	cmp	r5, #0
90011216:	dd10      	ble.n	9001123a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011218:	f104 0810 	add.w	r8, r4, #16
9001121c:	e003      	b.n	90011226 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9001121e:	1e6b      	subs	r3, r5, #1
90011220:	b2da      	uxtb	r2, r3
90011222:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011224:	b14a      	cbz	r2, 9001123a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011226:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011228:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001122a:	b133      	cbz	r3, 9001123a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001122c:	f000 ff32 	bl	90012094 <xTaskRemoveFromEventList>
90011230:	2800      	cmp	r0, #0
90011232:	d0f4      	beq.n	9001121e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
90011234:	f000 ffcc 	bl	900121d0 <vTaskMissedYield>
90011238:	e7f1      	b.n	9001121e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9001123a:	23ff      	movs	r3, #255	; 0xff
9001123c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011240:	f7fe ff92 	bl	90010168 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90011244:	f000 fe02 	bl	90011e4c <xTaskResumeAll>
90011248:	2800      	cmp	r0, #0
9001124a:	d18f      	bne.n	9001116c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9001124c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011250:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011254:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011258:	f3bf 8f4f 	dsb	sy
9001125c:	f3bf 8f6f 	isb	sy
90011260:	e784      	b.n	9001116c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
90011262:	f7fe ff81 	bl	90010168 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90011266:	b92f      	cbnz	r7, 90011274 <xQueueSemaphoreTake+0x28c>
}
90011268:	4638      	mov	r0, r7
9001126a:	b004      	add	sp, #16
9001126c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011270:	4607      	mov	r7, r0
90011272:	e6d1      	b.n	90011018 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90011274:	f7fe ff56 	bl	90010124 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90011278:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001127a:	b119      	cbz	r1, 90011284 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9001127c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001127e:	6819      	ldr	r1, [r3, #0]
90011280:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011284:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
90011286:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011288:	f001 f84a 	bl	90012320 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9001128c:	f7fe ff6c 	bl	90010168 <vPortExitCritical>
90011290:	e7ea      	b.n	90011268 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
90011292:	f7fe ff47 	bl	90010124 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90011296:	68a0      	ldr	r0, [r4, #8]
90011298:	f000 ffb6 	bl	90012208 <xTaskPriorityInherit>
9001129c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9001129e:	f7fe ff63 	bl	90010168 <vPortExitCritical>
900112a2:	e793      	b.n	900111cc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
900112a4:	2f00      	cmp	r7, #0
900112a6:	d0f1      	beq.n	9001128c <xQueueSemaphoreTake+0x2a4>
900112a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900112ac:	f383 8811 	msr	BASEPRI, r3
900112b0:	f3bf 8f6f 	isb	sy
900112b4:	f3bf 8f4f 	dsb	sy
900112b8:	e7fe      	b.n	900112b8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
900112ba:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900112bc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
900112be:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900112c0:	b12a      	cbz	r2, 900112ce <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900112c2:	6923      	ldr	r3, [r4, #16]
900112c4:	b93b      	cbnz	r3, 900112d6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
900112c6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
900112c8:	f7fe ff4e 	bl	90010168 <vPortExitCritical>
				return pdPASS;
900112cc:	e7cc      	b.n	90011268 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
900112ce:	f001 f87b 	bl	900123c8 <pvTaskIncrementMutexHeldCount>
900112d2:	60a0      	str	r0, [r4, #8]
900112d4:	e7f5      	b.n	900112c2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900112d6:	f104 0010 	add.w	r0, r4, #16
900112da:	f000 fedb 	bl	90012094 <xTaskRemoveFromEventList>
900112de:	2800      	cmp	r0, #0
900112e0:	d0f1      	beq.n	900112c6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
900112e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900112e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900112ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900112ee:	f3bf 8f4f 	dsb	sy
900112f2:	f3bf 8f6f 	isb	sy
900112f6:	e7e6      	b.n	900112c6 <xQueueSemaphoreTake+0x2de>

900112f8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
900112f8:	b1a8      	cbz	r0, 90011326 <xQueueTakeMutexRecursive+0x2e>
	{
900112fa:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
900112fc:	6886      	ldr	r6, [r0, #8]
900112fe:	4604      	mov	r4, r0
90011300:	460d      	mov	r5, r1
90011302:	f000 ff6b 	bl	900121dc <xTaskGetCurrentTaskHandle>
90011306:	4286      	cmp	r6, r0
90011308:	d008      	beq.n	9001131c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9001130a:	4629      	mov	r1, r5
9001130c:	4620      	mov	r0, r4
9001130e:	f7ff fe6b 	bl	90010fe8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
90011312:	b110      	cbz	r0, 9001131a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90011314:	68e3      	ldr	r3, [r4, #12]
90011316:	3301      	adds	r3, #1
90011318:	60e3      	str	r3, [r4, #12]
	}
9001131a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9001131c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9001131e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90011320:	4403      	add	r3, r0
90011322:	60e3      	str	r3, [r4, #12]
	}
90011324:	bd70      	pop	{r4, r5, r6, pc}
90011326:	f04f 0350 	mov.w	r3, #80	; 0x50
9001132a:	f383 8811 	msr	BASEPRI, r3
9001132e:	f3bf 8f6f 	isb	sy
90011332:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90011336:	e7fe      	b.n	90011336 <xQueueTakeMutexRecursive+0x3e>

90011338 <xQueueReceiveFromISR>:
{
90011338:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9001133c:	b310      	cbz	r0, 90011384 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001133e:	460e      	mov	r6, r1
90011340:	4604      	mov	r4, r0
90011342:	4617      	mov	r7, r2
90011344:	b191      	cbz	r1, 9001136c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90011346:	f7ff f81f 	bl	90010388 <vPortValidateInterruptPriority>
	__asm volatile
9001134a:	f3ef 8911 	mrs	r9, BASEPRI
9001134e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011352:	f383 8811 	msr	BASEPRI, r3
90011356:	f3bf 8f6f 	isb	sy
9001135a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001135e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011360:	b9cd      	cbnz	r5, 90011396 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90011362:	4628      	mov	r0, r5
	__asm volatile
90011364:	f389 8811 	msr	BASEPRI, r9
}
90011368:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001136c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001136e:	2b00      	cmp	r3, #0
90011370:	d0e9      	beq.n	90011346 <xQueueReceiveFromISR+0xe>
	__asm volatile
90011372:	f04f 0350 	mov.w	r3, #80	; 0x50
90011376:	f383 8811 	msr	BASEPRI, r3
9001137a:	f3bf 8f6f 	isb	sy
9001137e:	f3bf 8f4f 	dsb	sy
90011382:	e7fe      	b.n	90011382 <xQueueReceiveFromISR+0x4a>
90011384:	f04f 0350 	mov.w	r3, #80	; 0x50
90011388:	f383 8811 	msr	BASEPRI, r3
9001138c:	f3bf 8f6f 	isb	sy
90011390:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011394:	e7fe      	b.n	90011394 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90011396:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001139a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001139c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
900113a0:	b142      	cbz	r2, 900113b4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900113a2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900113a4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900113a6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900113a8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900113aa:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900113ac:	d215      	bcs.n	900113da <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900113ae:	4630      	mov	r0, r6
900113b0:	f018 fb6e 	bl	90029a90 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900113b4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
900113b6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900113ba:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
900113bc:	d009      	beq.n	900113d2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
900113be:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
900113c2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
900113c4:	b25b      	sxtb	r3, r3
900113c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
900113ca:	f389 8811 	msr	BASEPRI, r9
}
900113ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900113d2:	6923      	ldr	r3, [r4, #16]
900113d4:	b923      	cbnz	r3, 900113e0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
900113d6:	2001      	movs	r0, #1
900113d8:	e7c4      	b.n	90011364 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900113da:	6821      	ldr	r1, [r4, #0]
900113dc:	60e1      	str	r1, [r4, #12]
900113de:	e7e6      	b.n	900113ae <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900113e0:	f104 0010 	add.w	r0, r4, #16
900113e4:	f000 fe56 	bl	90012094 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
900113e8:	2f00      	cmp	r7, #0
900113ea:	d0f4      	beq.n	900113d6 <xQueueReceiveFromISR+0x9e>
900113ec:	2800      	cmp	r0, #0
900113ee:	d0f2      	beq.n	900113d6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
900113f0:	2301      	movs	r3, #1
			xReturn = pdPASS;
900113f2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
900113f4:	603b      	str	r3, [r7, #0]
900113f6:	e7b5      	b.n	90011364 <xQueueReceiveFromISR+0x2c>

900113f8 <vQueueDelete>:
	configASSERT( pxQueue );
900113f8:	b1e0      	cbz	r0, 90011434 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
900113fa:	4b21      	ldr	r3, [pc, #132]	; (90011480 <vQueueDelete+0x88>)
900113fc:	685a      	ldr	r2, [r3, #4]
900113fe:	4290      	cmp	r0, r2
90011400:	d02b      	beq.n	9001145a <vQueueDelete+0x62>
90011402:	68da      	ldr	r2, [r3, #12]
90011404:	4290      	cmp	r0, r2
90011406:	d02a      	beq.n	9001145e <vQueueDelete+0x66>
90011408:	695a      	ldr	r2, [r3, #20]
9001140a:	4290      	cmp	r0, r2
9001140c:	d029      	beq.n	90011462 <vQueueDelete+0x6a>
9001140e:	69da      	ldr	r2, [r3, #28]
90011410:	4290      	cmp	r0, r2
90011412:	d028      	beq.n	90011466 <vQueueDelete+0x6e>
90011414:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90011416:	4290      	cmp	r0, r2
90011418:	d027      	beq.n	9001146a <vQueueDelete+0x72>
9001141a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9001141c:	4290      	cmp	r0, r2
9001141e:	d014      	beq.n	9001144a <vQueueDelete+0x52>
90011420:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90011422:	4290      	cmp	r0, r2
90011424:	d023      	beq.n	9001146e <vQueueDelete+0x76>
90011426:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90011428:	4290      	cmp	r0, r2
9001142a:	d022      	beq.n	90011472 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9001142c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
90011430:	b14b      	cbz	r3, 90011446 <vQueueDelete+0x4e>
}
90011432:	4770      	bx	lr
	__asm volatile
90011434:	f04f 0350 	mov.w	r3, #80	; 0x50
90011438:	f383 8811 	msr	BASEPRI, r3
9001143c:	f3bf 8f6f 	isb	sy
90011440:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011444:	e7fe      	b.n	90011444 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90011446:	f7fe bd51 	b.w	9000feec <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001144a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9001144c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90011450:	ed9f 7b09 	vldr	d7, [pc, #36]	; 90011478 <vQueueDelete+0x80>
90011454:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90011458:	e7e8      	b.n	9001142c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001145a:	2200      	movs	r2, #0
9001145c:	e7f6      	b.n	9001144c <vQueueDelete+0x54>
9001145e:	2201      	movs	r2, #1
90011460:	e7f4      	b.n	9001144c <vQueueDelete+0x54>
90011462:	2202      	movs	r2, #2
90011464:	e7f2      	b.n	9001144c <vQueueDelete+0x54>
90011466:	2203      	movs	r2, #3
90011468:	e7f0      	b.n	9001144c <vQueueDelete+0x54>
9001146a:	2204      	movs	r2, #4
9001146c:	e7ee      	b.n	9001144c <vQueueDelete+0x54>
9001146e:	2206      	movs	r2, #6
90011470:	e7ec      	b.n	9001144c <vQueueDelete+0x54>
90011472:	2207      	movs	r2, #7
90011474:	e7ea      	b.n	9001144c <vQueueDelete+0x54>
90011476:	bf00      	nop
	...
90011480:	24039458 	.word	0x24039458

90011484 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90011484:	4b12      	ldr	r3, [pc, #72]	; (900114d0 <vQueueAddToRegistry+0x4c>)
90011486:	681a      	ldr	r2, [r3, #0]
90011488:	b17a      	cbz	r2, 900114aa <vQueueAddToRegistry+0x26>
9001148a:	689a      	ldr	r2, [r3, #8]
9001148c:	b162      	cbz	r2, 900114a8 <vQueueAddToRegistry+0x24>
9001148e:	691a      	ldr	r2, [r3, #16]
90011490:	b192      	cbz	r2, 900114b8 <vQueueAddToRegistry+0x34>
90011492:	699a      	ldr	r2, [r3, #24]
90011494:	b192      	cbz	r2, 900114bc <vQueueAddToRegistry+0x38>
90011496:	6a1a      	ldr	r2, [r3, #32]
90011498:	b192      	cbz	r2, 900114c0 <vQueueAddToRegistry+0x3c>
9001149a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9001149c:	b192      	cbz	r2, 900114c4 <vQueueAddToRegistry+0x40>
9001149e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900114a0:	b192      	cbz	r2, 900114c8 <vQueueAddToRegistry+0x44>
900114a2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900114a4:	b192      	cbz	r2, 900114cc <vQueueAddToRegistry+0x48>
	}
900114a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900114a8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
900114aa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
900114ae:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900114b2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900114b6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900114b8:	2202      	movs	r2, #2
900114ba:	e7f6      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114bc:	2203      	movs	r2, #3
900114be:	e7f4      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114c0:	2204      	movs	r2, #4
900114c2:	e7f2      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114c4:	2205      	movs	r2, #5
900114c6:	e7f0      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114c8:	2206      	movs	r2, #6
900114ca:	e7ee      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114cc:	2207      	movs	r2, #7
900114ce:	e7ec      	b.n	900114aa <vQueueAddToRegistry+0x26>
900114d0:	24039458 	.word	0x24039458

900114d4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900114d4:	b570      	push	{r4, r5, r6, lr}
900114d6:	4605      	mov	r5, r0
900114d8:	460e      	mov	r6, r1
900114da:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
900114dc:	f7fe fe22 	bl	90010124 <vPortEnterCritical>
900114e0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
900114e4:	2bff      	cmp	r3, #255	; 0xff
900114e6:	d102      	bne.n	900114ee <vQueueWaitForMessageRestricted+0x1a>
900114e8:	2300      	movs	r3, #0
900114ea:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
900114ee:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
900114f2:	2bff      	cmp	r3, #255	; 0xff
900114f4:	d102      	bne.n	900114fc <vQueueWaitForMessageRestricted+0x28>
900114f6:	2300      	movs	r3, #0
900114f8:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
900114fc:	f7fe fe34 	bl	90010168 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90011500:	6bab      	ldr	r3, [r5, #56]	; 0x38
90011502:	2b00      	cmp	r3, #0
90011504:	d043      	beq.n	9001158e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90011506:	f7fe fe0d 	bl	90010124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001150a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9001150e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011510:	2c00      	cmp	r4, #0
90011512:	dd14      	ble.n	9001153e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011514:	f105 0624 	add.w	r6, r5, #36	; 0x24
90011518:	e003      	b.n	90011522 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9001151a:	1e63      	subs	r3, r4, #1
9001151c:	b2da      	uxtb	r2, r3
9001151e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011520:	b16a      	cbz	r2, 9001153e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011522:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011524:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011526:	b153      	cbz	r3, 9001153e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011528:	f000 fdb4 	bl	90012094 <xTaskRemoveFromEventList>
9001152c:	2800      	cmp	r0, #0
9001152e:	d0f4      	beq.n	9001151a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90011530:	f000 fe4e 	bl	900121d0 <vTaskMissedYield>
			--cTxLock;
90011534:	1e63      	subs	r3, r4, #1
90011536:	b2da      	uxtb	r2, r3
90011538:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001153a:	2a00      	cmp	r2, #0
9001153c:	d1f1      	bne.n	90011522 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001153e:	23ff      	movs	r3, #255	; 0xff
90011540:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
90011544:	f7fe fe10 	bl	90010168 <vPortExitCritical>
	taskENTER_CRITICAL();
90011548:	f7fe fdec 	bl	90010124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001154c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
90011550:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011552:	2c00      	cmp	r4, #0
90011554:	dd14      	ble.n	90011580 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011556:	f105 0610 	add.w	r6, r5, #16
9001155a:	e003      	b.n	90011564 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9001155c:	1e63      	subs	r3, r4, #1
9001155e:	b2da      	uxtb	r2, r3
90011560:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011562:	b16a      	cbz	r2, 90011580 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011564:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011566:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011568:	b153      	cbz	r3, 90011580 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001156a:	f000 fd93 	bl	90012094 <xTaskRemoveFromEventList>
9001156e:	2800      	cmp	r0, #0
90011570:	d0f4      	beq.n	9001155c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90011572:	f000 fe2d 	bl	900121d0 <vTaskMissedYield>
				--cRxLock;
90011576:	1e63      	subs	r3, r4, #1
90011578:	b2da      	uxtb	r2, r3
9001157a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001157c:	2a00      	cmp	r2, #0
9001157e:	d1f1      	bne.n	90011564 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90011580:	23ff      	movs	r3, #255	; 0xff
90011582:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90011586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9001158a:	f7fe bded 	b.w	90010168 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001158e:	4622      	mov	r2, r4
90011590:	4631      	mov	r1, r6
90011592:	f105 0024 	add.w	r0, r5, #36	; 0x24
90011596:	f000 fd33 	bl	90012000 <vTaskPlaceOnEventListRestricted>
9001159a:	e7b4      	b.n	90011506 <vQueueWaitForMessageRestricted+0x32>

9001159c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9001159c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900115a0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
900115a2:	f7fe fdbf 	bl	90010124 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900115a6:	4a34      	ldr	r2, [pc, #208]	; (90011678 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
900115a8:	4e34      	ldr	r6, [pc, #208]	; (9001167c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
900115aa:	6813      	ldr	r3, [r2, #0]
900115ac:	3301      	adds	r3, #1
900115ae:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900115b0:	6833      	ldr	r3, [r6, #0]
900115b2:	2b00      	cmp	r3, #0
900115b4:	d032      	beq.n	9001161c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900115b6:	4c32      	ldr	r4, [pc, #200]	; (90011680 <prvAddNewTaskToReadyList+0xe4>)
900115b8:	6823      	ldr	r3, [r4, #0]
900115ba:	b33b      	cbz	r3, 9001160c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900115bc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900115be:	4f31      	ldr	r7, [pc, #196]	; (90011684 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900115c0:	4a31      	ldr	r2, [pc, #196]	; (90011688 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900115c2:	4932      	ldr	r1, [pc, #200]	; (9001168c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
900115c4:	6813      	ldr	r3, [r2, #0]
900115c6:	3301      	adds	r3, #1
900115c8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900115ca:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
900115cc:	680b      	ldr	r3, [r1, #0]
900115ce:	4283      	cmp	r3, r0
900115d0:	d200      	bcs.n	900115d4 <prvAddNewTaskToReadyList+0x38>
900115d2:	6008      	str	r0, [r1, #0]
900115d4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900115d8:	1d29      	adds	r1, r5, #4
900115da:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900115de:	f7fe fcf9 	bl	9000ffd4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
900115e2:	f7fe fdc1 	bl	90010168 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
900115e6:	6823      	ldr	r3, [r4, #0]
900115e8:	b173      	cbz	r3, 90011608 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
900115ea:	6832      	ldr	r2, [r6, #0]
900115ec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900115ee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900115f0:	429a      	cmp	r2, r3
900115f2:	d209      	bcs.n	90011608 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
900115f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900115f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900115fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011600:	f3bf 8f4f 	dsb	sy
90011604:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90011608:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001160c:	6833      	ldr	r3, [r6, #0]
9001160e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90011610:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011612:	4f1c      	ldr	r7, [pc, #112]	; (90011684 <prvAddNewTaskToReadyList+0xe8>)
90011614:	4283      	cmp	r3, r0
90011616:	d8d3      	bhi.n	900115c0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90011618:	6035      	str	r5, [r6, #0]
9001161a:	e7d1      	b.n	900115c0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9001161c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9001161e:	6813      	ldr	r3, [r2, #0]
90011620:	2b01      	cmp	r3, #1
90011622:	d003      	beq.n	9001162c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90011624:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90011626:	4f17      	ldr	r7, [pc, #92]	; (90011684 <prvAddNewTaskToReadyList+0xe8>)
90011628:	4c15      	ldr	r4, [pc, #84]	; (90011680 <prvAddNewTaskToReadyList+0xe4>)
9001162a:	e7c9      	b.n	900115c0 <prvAddNewTaskToReadyList+0x24>
9001162c:	4f15      	ldr	r7, [pc, #84]	; (90011684 <prvAddNewTaskToReadyList+0xe8>)
9001162e:	463c      	mov	r4, r7
90011630:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011634:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90011636:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011638:	f7fe fcbc 	bl	9000ffb4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001163c:	45a0      	cmp	r8, r4
9001163e:	d1f9      	bne.n	90011634 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
90011640:	f8df 9060 	ldr.w	r9, [pc, #96]	; 900116a4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90011644:	f8df 8060 	ldr.w	r8, [pc, #96]	; 900116a8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90011648:	4648      	mov	r0, r9
9001164a:	4c0d      	ldr	r4, [pc, #52]	; (90011680 <prvAddNewTaskToReadyList+0xe4>)
9001164c:	f7fe fcb2 	bl	9000ffb4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90011650:	4640      	mov	r0, r8
90011652:	f7fe fcaf 	bl	9000ffb4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90011656:	480e      	ldr	r0, [pc, #56]	; (90011690 <prvAddNewTaskToReadyList+0xf4>)
90011658:	f7fe fcac 	bl	9000ffb4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001165c:	480d      	ldr	r0, [pc, #52]	; (90011694 <prvAddNewTaskToReadyList+0xf8>)
9001165e:	f7fe fca9 	bl	9000ffb4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90011662:	480d      	ldr	r0, [pc, #52]	; (90011698 <prvAddNewTaskToReadyList+0xfc>)
90011664:	f7fe fca6 	bl	9000ffb4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90011668:	4b0c      	ldr	r3, [pc, #48]	; (9001169c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9001166a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001166c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90011670:	4b0b      	ldr	r3, [pc, #44]	; (900116a0 <prvAddNewTaskToReadyList+0x104>)
90011672:	f8c3 8000 	str.w	r8, [r3]
}
90011676:	e7a3      	b.n	900115c0 <prvAddNewTaskToReadyList+0x24>
90011678:	24039904 	.word	0x24039904
9001167c:	24039498 	.word	0x24039498
90011680:	24039960 	.word	0x24039960
90011684:	240394a4 	.word	0x240394a4
90011688:	24039910 	.word	0x24039910
9001168c:	24039914 	.word	0x24039914
90011690:	2403994c 	.word	0x2403994c
90011694:	24039978 	.word	0x24039978
90011698:	24039964 	.word	0x24039964
9001169c:	2403949c 	.word	0x2403949c
900116a0:	240394a0 	.word	0x240394a0
900116a4:	24039918 	.word	0x24039918
900116a8:	2403992c 	.word	0x2403992c

900116ac <prvIdleTask>:
{
900116ac:	b580      	push	{r7, lr}
900116ae:	4c22      	ldr	r4, [pc, #136]	; (90011738 <prvIdleTask+0x8c>)
				taskYIELD();
900116b0:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
900116b4:	4e21      	ldr	r6, [pc, #132]	; (9001173c <prvIdleTask+0x90>)
900116b6:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
900116ba:	4d21      	ldr	r5, [pc, #132]	; (90011740 <prvIdleTask+0x94>)
900116bc:	4f21      	ldr	r7, [pc, #132]	; (90011744 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900116be:	6823      	ldr	r3, [r4, #0]
900116c0:	b353      	cbz	r3, 90011718 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
900116c2:	f7fe fd2f 	bl	90010124 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900116c6:	68f3      	ldr	r3, [r6, #12]
900116c8:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900116cc:	f10a 0004 	add.w	r0, sl, #4
900116d0:	f7fe fca8 	bl	90010024 <uxListRemove>
				--uxCurrentNumberOfTasks;
900116d4:	682b      	ldr	r3, [r5, #0]
900116d6:	3b01      	subs	r3, #1
900116d8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
900116da:	6823      	ldr	r3, [r4, #0]
900116dc:	3b01      	subs	r3, #1
900116de:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
900116e0:	f7fe fd42 	bl	90010168 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900116e4:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
900116e8:	b163      	cbz	r3, 90011704 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
900116ea:	2b01      	cmp	r3, #1
900116ec:	d020      	beq.n	90011730 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
900116ee:	2b02      	cmp	r3, #2
900116f0:	d0e5      	beq.n	900116be <prvIdleTask+0x12>
900116f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900116f6:	f383 8811 	msr	BASEPRI, r3
900116fa:	f3bf 8f6f 	isb	sy
900116fe:	f3bf 8f4f 	dsb	sy
90011702:	e7fe      	b.n	90011702 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
90011704:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
90011708:	f7fe fbf0 	bl	9000feec <vPortFree>
				vPortFree( pxTCB );
9001170c:	4650      	mov	r0, sl
9001170e:	f7fe fbed 	bl	9000feec <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90011712:	6823      	ldr	r3, [r4, #0]
90011714:	2b00      	cmp	r3, #0
90011716:	d1d4      	bne.n	900116c2 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011718:	683b      	ldr	r3, [r7, #0]
9001171a:	2b01      	cmp	r3, #1
9001171c:	d905      	bls.n	9001172a <prvIdleTask+0x7e>
				taskYIELD();
9001171e:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
90011722:	f3bf 8f4f 	dsb	sy
90011726:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9001172a:	f7f1 f935 	bl	90002998 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9001172e:	e7c6      	b.n	900116be <prvIdleTask+0x12>
				vPortFree( pxTCB );
90011730:	4650      	mov	r0, sl
90011732:	f7fe fbdb 	bl	9000feec <vPortFree>
90011736:	e7c2      	b.n	900116be <prvIdleTask+0x12>
90011738:	24039908 	.word	0x24039908
9001173c:	24039978 	.word	0x24039978
90011740:	24039904 	.word	0x24039904
90011744:	240394a4 	.word	0x240394a4

90011748 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011748:	4b4a      	ldr	r3, [pc, #296]	; (90011874 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9001174a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001174e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90011750:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011752:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90011754:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90011756:	2e00      	cmp	r6, #0
90011758:	d040      	beq.n	900117dc <xTaskIncrementTick.part.0+0x94>
9001175a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90011888 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9001175e:	f8db 3000 	ldr.w	r3, [fp]
90011762:	429e      	cmp	r6, r3
90011764:	d347      	bcc.n	900117f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011766:	4f44      	ldr	r7, [pc, #272]	; (90011878 <xTaskIncrementTick.part.0+0x130>)
90011768:	683b      	ldr	r3, [r7, #0]
9001176a:	681d      	ldr	r5, [r3, #0]
9001176c:	2d00      	cmp	r5, #0
9001176e:	d077      	beq.n	90011860 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90011770:	2500      	movs	r5, #0
90011772:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9001188c <xTaskIncrementTick.part.0+0x144>
90011776:	f8df a118 	ldr.w	sl, [pc, #280]	; 90011890 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9001177a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 90011894 <xTaskIncrementTick.part.0+0x14c>
9001177e:	e022      	b.n	900117c6 <xTaskIncrementTick.part.0+0x7e>
90011780:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011782:	f7fe fc4f 	bl	90010024 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011786:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011788:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9001178c:	9901      	ldr	r1, [sp, #4]
9001178e:	b113      	cbz	r3, 90011796 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011790:	f7fe fc48 	bl	90010024 <uxListRemove>
90011794:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
90011796:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90011798:	f8d8 2000 	ldr.w	r2, [r8]
9001179c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900117a0:	4293      	cmp	r3, r2
900117a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900117a6:	d901      	bls.n	900117ac <xTaskIncrementTick.part.0+0x64>
900117a8:	f8c8 3000 	str.w	r3, [r8]
900117ac:	f7fe fc12 	bl	9000ffd4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900117b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900117b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900117b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900117b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900117ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900117bc:	4291      	cmp	r1, r2
900117be:	bf28      	it	cs
900117c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900117c2:	2b00      	cmp	r3, #0
900117c4:	d050      	beq.n	90011868 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900117c6:	683b      	ldr	r3, [r7, #0]
900117c8:	68db      	ldr	r3, [r3, #12]
900117ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900117cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900117ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
900117d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900117d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
900117d4:	d2d4      	bcs.n	90011780 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
900117d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900117da:	e011      	b.n	90011800 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
900117dc:	4b26      	ldr	r3, [pc, #152]	; (90011878 <xTaskIncrementTick.part.0+0x130>)
900117de:	681a      	ldr	r2, [r3, #0]
900117e0:	6812      	ldr	r2, [r2, #0]
900117e2:	b30a      	cbz	r2, 90011828 <xTaskIncrementTick.part.0+0xe0>
900117e4:	f04f 0350 	mov.w	r3, #80	; 0x50
900117e8:	f383 8811 	msr	BASEPRI, r3
900117ec:	f3bf 8f6f 	isb	sy
900117f0:	f3bf 8f4f 	dsb	sy
900117f4:	e7fe      	b.n	900117f4 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
900117f6:	2500      	movs	r5, #0
900117f8:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9001188c <xTaskIncrementTick.part.0+0x144>
900117fc:	f8df a090 	ldr.w	sl, [pc, #144]	; 90011890 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011800:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90011804:	491d      	ldr	r1, [pc, #116]	; (9001187c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011806:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011808:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001180c:	009b      	lsls	r3, r3, #2
9001180e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90011812:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90011814:	2a02      	cmp	r2, #2
90011816:	bf28      	it	cs
90011818:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9001181a:	2b00      	cmp	r3, #0
}
9001181c:	bf0c      	ite	eq
9001181e:	4628      	moveq	r0, r5
90011820:	2001      	movne	r0, #1
90011822:	b003      	add	sp, #12
90011824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011828:	4a15      	ldr	r2, [pc, #84]	; (90011880 <xTaskIncrementTick.part.0+0x138>)
9001182a:	6818      	ldr	r0, [r3, #0]
9001182c:	6811      	ldr	r1, [r2, #0]
9001182e:	6019      	str	r1, [r3, #0]
90011830:	4914      	ldr	r1, [pc, #80]	; (90011884 <xTaskIncrementTick.part.0+0x13c>)
90011832:	6010      	str	r0, [r2, #0]
90011834:	680a      	ldr	r2, [r1, #0]
90011836:	3201      	adds	r2, #1
90011838:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001183a:	681a      	ldr	r2, [r3, #0]
9001183c:	6812      	ldr	r2, [r2, #0]
9001183e:	b932      	cbnz	r2, 9001184e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90011840:	f8df b044 	ldr.w	fp, [pc, #68]	; 90011888 <xTaskIncrementTick.part.0+0x140>
90011844:	f04f 33ff 	mov.w	r3, #4294967295
90011848:	f8cb 3000 	str.w	r3, [fp]
9001184c:	e787      	b.n	9001175e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001184e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011850:	f8df b034 	ldr.w	fp, [pc, #52]	; 90011888 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011854:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011856:	68db      	ldr	r3, [r3, #12]
90011858:	685b      	ldr	r3, [r3, #4]
9001185a:	f8cb 3000 	str.w	r3, [fp]
	}
}
9001185e:	e77e      	b.n	9001175e <xTaskIncrementTick.part.0+0x16>
90011860:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9001188c <xTaskIncrementTick.part.0+0x144>
90011864:	f8df a028 	ldr.w	sl, [pc, #40]	; 90011890 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011868:	f04f 33ff 	mov.w	r3, #4294967295
9001186c:	f8cb 3000 	str.w	r3, [fp]
					break;
90011870:	e7c6      	b.n	90011800 <xTaskIncrementTick.part.0+0xb8>
90011872:	bf00      	nop
90011874:	2403998c 	.word	0x2403998c
90011878:	2403949c 	.word	0x2403949c
9001187c:	24039990 	.word	0x24039990
90011880:	240394a0 	.word	0x240394a0
90011884:	24039944 	.word	0x24039944
90011888:	24039940 	.word	0x24039940
9001188c:	240394a4 	.word	0x240394a4
90011890:	24039498 	.word	0x24039498
90011894:	24039914 	.word	0x24039914

90011898 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90011898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9001189c:	4d41      	ldr	r5, [pc, #260]	; (900119a4 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9001189e:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
900118a0:	f7fe fc40 	bl	90010124 <vPortEnterCritical>
		--uxSchedulerSuspended;
900118a4:	682b      	ldr	r3, [r5, #0]
900118a6:	3b01      	subs	r3, #1
900118a8:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900118aa:	682b      	ldr	r3, [r5, #0]
900118ac:	2b00      	cmp	r3, #0
900118ae:	d161      	bne.n	90011974 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900118b0:	4b3d      	ldr	r3, [pc, #244]	; (900119a8 <xTaskResumeAll.part.0+0x110>)
900118b2:	681b      	ldr	r3, [r3, #0]
900118b4:	2b00      	cmp	r3, #0
900118b6:	d05d      	beq.n	90011974 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900118b8:	4e3c      	ldr	r6, [pc, #240]	; (900119ac <xTaskResumeAll.part.0+0x114>)
900118ba:	6833      	ldr	r3, [r6, #0]
900118bc:	2b00      	cmp	r3, #0
900118be:	d06e      	beq.n	9001199e <xTaskResumeAll.part.0+0x106>
900118c0:	4f3b      	ldr	r7, [pc, #236]	; (900119b0 <xTaskResumeAll.part.0+0x118>)
900118c2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 900119c0 <xTaskResumeAll.part.0+0x128>
900118c6:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 900119c4 <xTaskResumeAll.part.0+0x12c>
900118ca:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 900119c8 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900118ce:	68f3      	ldr	r3, [r6, #12]
900118d0:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900118d2:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900118d6:	f104 0018 	add.w	r0, r4, #24
900118da:	f7fe fba3 	bl	90010024 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900118de:	4658      	mov	r0, fp
900118e0:	f7fe fba0 	bl	90010024 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900118e4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900118e6:	683a      	ldr	r2, [r7, #0]
900118e8:	4659      	mov	r1, fp
900118ea:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900118ee:	4293      	cmp	r3, r2
900118f0:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900118f4:	d900      	bls.n	900118f8 <xTaskResumeAll.part.0+0x60>
900118f6:	603b      	str	r3, [r7, #0]
900118f8:	f7fe fb6c 	bl	9000ffd4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900118fc:	f8d8 3000 	ldr.w	r3, [r8]
90011900:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90011902:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011904:	429a      	cmp	r2, r3
90011906:	d33d      	bcc.n	90011984 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90011908:	2301      	movs	r3, #1
9001190a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001190e:	6833      	ldr	r3, [r6, #0]
90011910:	2b00      	cmp	r3, #0
90011912:	d1dc      	bne.n	900118ce <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011914:	4b27      	ldr	r3, [pc, #156]	; (900119b4 <xTaskResumeAll.part.0+0x11c>)
90011916:	681a      	ldr	r2, [r3, #0]
90011918:	6812      	ldr	r2, [r2, #0]
9001191a:	2a00      	cmp	r2, #0
9001191c:	d03a      	beq.n	90011994 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001191e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011920:	4b25      	ldr	r3, [pc, #148]	; (900119b8 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011922:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011924:	68d2      	ldr	r2, [r2, #12]
90011926:	6852      	ldr	r2, [r2, #4]
90011928:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9001192a:	4e24      	ldr	r6, [pc, #144]	; (900119bc <xTaskResumeAll.part.0+0x124>)
9001192c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9001192e:	b194      	cbz	r4, 90011956 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90011930:	2701      	movs	r7, #1
90011932:	e006      	b.n	90011942 <xTaskResumeAll.part.0+0xaa>
90011934:	f7ff ff08 	bl	90011748 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90011938:	b108      	cbz	r0, 9001193e <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9001193a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001193e:	3c01      	subs	r4, #1
90011940:	d008      	beq.n	90011954 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011942:	682b      	ldr	r3, [r5, #0]
90011944:	2b00      	cmp	r3, #0
90011946:	d0f5      	beq.n	90011934 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90011948:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001194a:	3c01      	subs	r4, #1
		++xPendedTicks;
9001194c:	f103 0301 	add.w	r3, r3, #1
90011950:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011952:	d1f6      	bne.n	90011942 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90011954:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90011956:	f8da 3000 	ldr.w	r3, [sl]
9001195a:	b15b      	cbz	r3, 90011974 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9001195c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011960:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011964:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011968:	f3bf 8f4f 	dsb	sy
9001196c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90011970:	2001      	movs	r0, #1
90011972:	e000      	b.n	90011976 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90011974:	2000      	movs	r0, #0
90011976:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90011978:	f7fe fbf6 	bl	90010168 <vPortExitCritical>
}
9001197c:	9801      	ldr	r0, [sp, #4]
9001197e:	b003      	add	sp, #12
90011980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011984:	6833      	ldr	r3, [r6, #0]
90011986:	2b00      	cmp	r3, #0
90011988:	d1a1      	bne.n	900118ce <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001198a:	4b0a      	ldr	r3, [pc, #40]	; (900119b4 <xTaskResumeAll.part.0+0x11c>)
9001198c:	681a      	ldr	r2, [r3, #0]
9001198e:	6812      	ldr	r2, [r2, #0]
90011990:	2a00      	cmp	r2, #0
90011992:	d1c4      	bne.n	9001191e <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
90011994:	4b08      	ldr	r3, [pc, #32]	; (900119b8 <xTaskResumeAll.part.0+0x120>)
90011996:	f04f 32ff 	mov.w	r2, #4294967295
9001199a:	601a      	str	r2, [r3, #0]
9001199c:	e7c5      	b.n	9001192a <xTaskResumeAll.part.0+0x92>
9001199e:	f8df a028 	ldr.w	sl, [pc, #40]	; 900119c8 <xTaskResumeAll.part.0+0x130>
900119a2:	e7c2      	b.n	9001192a <xTaskResumeAll.part.0+0x92>
900119a4:	2403990c 	.word	0x2403990c
900119a8:	24039904 	.word	0x24039904
900119ac:	2403994c 	.word	0x2403994c
900119b0:	24039914 	.word	0x24039914
900119b4:	2403949c 	.word	0x2403949c
900119b8:	24039940 	.word	0x24039940
900119bc:	24039948 	.word	0x24039948
900119c0:	240394a4 	.word	0x240394a4
900119c4:	24039498 	.word	0x24039498
900119c8:	24039990 	.word	0x24039990

900119cc <xTaskCreateStatic>:
	{
900119cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900119d0:	b083      	sub	sp, #12
900119d2:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
900119d4:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
900119d8:	b1bb      	cbz	r3, 90011a0a <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
900119da:	b16c      	cbz	r4, 900119f8 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
900119dc:	2360      	movs	r3, #96	; 0x60
900119de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
900119e0:	9b01      	ldr	r3, [sp, #4]
900119e2:	2b60      	cmp	r3, #96	; 0x60
900119e4:	d01a      	beq.n	90011a1c <xTaskCreateStatic+0x50>
900119e6:	f04f 0350 	mov.w	r3, #80	; 0x50
900119ea:	f383 8811 	msr	BASEPRI, r3
900119ee:	f3bf 8f6f 	isb	sy
900119f2:	f3bf 8f4f 	dsb	sy
900119f6:	e7fe      	b.n	900119f6 <xTaskCreateStatic+0x2a>
900119f8:	f04f 0350 	mov.w	r3, #80	; 0x50
900119fc:	f383 8811 	msr	BASEPRI, r3
90011a00:	f3bf 8f6f 	isb	sy
90011a04:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011a08:	e7fe      	b.n	90011a08 <xTaskCreateStatic+0x3c>
90011a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
90011a0e:	f383 8811 	msr	BASEPRI, r3
90011a12:	f3bf 8f6f 	isb	sy
90011a16:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011a1a:	e7fe      	b.n	90011a1a <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011a1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011a1e:	0096      	lsls	r6, r2, #2
90011a20:	4607      	mov	r7, r0
90011a22:	460d      	mov	r5, r1
90011a24:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011a26:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011a28:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011a2a:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011a2c:	4632      	mov	r2, r6
90011a2e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011a30:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011a34:	f017 ff4c 	bl	900298d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011a38:	1f32      	subs	r2, r6, #4
90011a3a:	6b23      	ldr	r3, [r4, #48]	; 0x30
90011a3c:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011a3e:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
90011a42:	2d00      	cmp	r5, #0
90011a44:	d069      	beq.n	90011b1a <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a46:	782b      	ldrb	r3, [r5, #0]
90011a48:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011a4c:	2b00      	cmp	r3, #0
90011a4e:	d03b      	beq.n	90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a50:	786b      	ldrb	r3, [r5, #1]
90011a52:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011a56:	2b00      	cmp	r3, #0
90011a58:	d036      	beq.n	90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a5a:	78ab      	ldrb	r3, [r5, #2]
90011a5c:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011a60:	b393      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a62:	78eb      	ldrb	r3, [r5, #3]
90011a64:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011a68:	b373      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a6a:	792b      	ldrb	r3, [r5, #4]
90011a6c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011a70:	b353      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a72:	796b      	ldrb	r3, [r5, #5]
90011a74:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011a78:	b333      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a7a:	79ab      	ldrb	r3, [r5, #6]
90011a7c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011a80:	b313      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a82:	79eb      	ldrb	r3, [r5, #7]
90011a84:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011a88:	b1f3      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a8a:	7a2b      	ldrb	r3, [r5, #8]
90011a8c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011a90:	b1d3      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a92:	7a6b      	ldrb	r3, [r5, #9]
90011a94:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011a98:	b1b3      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011a9a:	7aab      	ldrb	r3, [r5, #10]
90011a9c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011aa0:	b193      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011aa2:	7aeb      	ldrb	r3, [r5, #11]
90011aa4:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011aa8:	b173      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011aaa:	7b2b      	ldrb	r3, [r5, #12]
90011aac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011ab0:	b153      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ab2:	7b6b      	ldrb	r3, [r5, #13]
90011ab4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011ab8:	b133      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011aba:	7bab      	ldrb	r3, [r5, #14]
90011abc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011ac0:	b113      	cbz	r3, 90011ac8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ac2:	7beb      	ldrb	r3, [r5, #15]
90011ac4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011ac8:	2300      	movs	r3, #0
90011aca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011ace:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
90011ad0:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011ad2:	1d20      	adds	r0, r4, #4
90011ad4:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011ad6:	6526      	str	r6, [r4, #80]	; 0x50
90011ad8:	bf28      	it	cs
90011ada:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011adc:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011ade:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ae0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011ae4:	f7fe fa72 	bl	9000ffcc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011ae8:	f104 0018 	add.w	r0, r4, #24
90011aec:	f7fe fa6e 	bl	9000ffcc <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011af0:	4642      	mov	r2, r8
90011af2:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90011af4:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011af6:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011af8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011afa:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011afc:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011afe:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011b00:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011b04:	f7fe fae0 	bl	900100c8 <pxPortInitialiseStack>
90011b08:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90011b0a:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011b0c:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011b0e:	f7ff fd45 	bl	9001159c <prvAddNewTaskToReadyList>
	}
90011b12:	4620      	mov	r0, r4
90011b14:	b003      	add	sp, #12
90011b16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011b1a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011b1e:	e7d6      	b.n	90011ace <xTaskCreateStatic+0x102>

90011b20 <xTaskCreate>:
	{
90011b20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011b24:	0096      	lsls	r6, r2, #2
	{
90011b26:	4680      	mov	r8, r0
90011b28:	460d      	mov	r5, r1
90011b2a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011b2c:	4630      	mov	r0, r6
90011b2e:	f7fe f91f 	bl	9000fd70 <pvPortMalloc>
			if( pxStack != NULL )
90011b32:	2800      	cmp	r0, #0
90011b34:	f000 8083 	beq.w	90011c3e <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90011b38:	4607      	mov	r7, r0
90011b3a:	2060      	movs	r0, #96	; 0x60
90011b3c:	f7fe f918 	bl	9000fd70 <pvPortMalloc>
				if( pxNewTCB != NULL )
90011b40:	4604      	mov	r4, r0
90011b42:	2800      	cmp	r0, #0
90011b44:	d07f      	beq.n	90011c46 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011b46:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90011b48:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011b4a:	4632      	mov	r2, r6
90011b4c:	4638      	mov	r0, r7
90011b4e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011b50:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011b54:	f017 febc 	bl	900298d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011b58:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
90011b5c:	2d00      	cmp	r5, #0
90011b5e:	d078      	beq.n	90011c52 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b60:	782b      	ldrb	r3, [r5, #0]
90011b62:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011b66:	2b00      	cmp	r3, #0
90011b68:	d03b      	beq.n	90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b6a:	786b      	ldrb	r3, [r5, #1]
90011b6c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011b70:	2b00      	cmp	r3, #0
90011b72:	d036      	beq.n	90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b74:	78ab      	ldrb	r3, [r5, #2]
90011b76:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011b7a:	b393      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b7c:	78eb      	ldrb	r3, [r5, #3]
90011b7e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011b82:	b373      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b84:	792b      	ldrb	r3, [r5, #4]
90011b86:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011b8a:	b353      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b8c:	796b      	ldrb	r3, [r5, #5]
90011b8e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011b92:	b333      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b94:	79ab      	ldrb	r3, [r5, #6]
90011b96:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011b9a:	b313      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b9c:	79eb      	ldrb	r3, [r5, #7]
90011b9e:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011ba2:	b1f3      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ba4:	7a2b      	ldrb	r3, [r5, #8]
90011ba6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011baa:	b1d3      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bac:	7a6b      	ldrb	r3, [r5, #9]
90011bae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011bb2:	b1b3      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bb4:	7aab      	ldrb	r3, [r5, #10]
90011bb6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011bba:	b193      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bbc:	7aeb      	ldrb	r3, [r5, #11]
90011bbe:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011bc2:	b173      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bc4:	7b2b      	ldrb	r3, [r5, #12]
90011bc6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011bca:	b153      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bcc:	7b6b      	ldrb	r3, [r5, #13]
90011bce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011bd2:	b133      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bd4:	7bab      	ldrb	r3, [r5, #14]
90011bd6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011bda:	b113      	cbz	r3, 90011be2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bdc:	7beb      	ldrb	r3, [r5, #15]
90011bde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011be2:	2300      	movs	r3, #0
90011be4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011be8:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90011bea:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011bec:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011bee:	3e04      	subs	r6, #4
90011bf0:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011bf2:	6527      	str	r7, [r4, #80]	; 0x50
90011bf4:	bf28      	it	cs
90011bf6:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011bf8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011bfa:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011bfc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011c00:	f7fe f9e4 	bl	9000ffcc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011c04:	f104 0018 	add.w	r0, r4, #24
90011c08:	f7fe f9e0 	bl	9000ffcc <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011c0c:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
90011c10:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011c12:	464a      	mov	r2, r9
90011c14:	4641      	mov	r1, r8
90011c16:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011c1a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011c1c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011c1e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011c20:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011c22:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011c26:	f7fe fa4f 	bl	900100c8 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011c2c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011c2e:	b103      	cbz	r3, 90011c32 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011c30:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011c32:	4620      	mov	r0, r4
90011c34:	f7ff fcb2 	bl	9001159c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90011c38:	2001      	movs	r0, #1
	}
90011c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011c3e:	f04f 30ff 	mov.w	r0, #4294967295
	}
90011c42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90011c46:	4638      	mov	r0, r7
90011c48:	f7fe f950 	bl	9000feec <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011c4c:	f04f 30ff 	mov.w	r0, #4294967295
90011c50:	e7f3      	b.n	90011c3a <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011c52:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011c56:	e7c7      	b.n	90011be8 <xTaskCreate+0xc8>

90011c58 <vTaskDelay>:
	{
90011c58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90011c5a:	b950      	cbnz	r0, 90011c72 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90011c5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011c60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011c64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011c68:	f3bf 8f4f 	dsb	sy
90011c6c:	f3bf 8f6f 	isb	sy
	}
90011c70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011c72:	4d1e      	ldr	r5, [pc, #120]	; (90011cec <vTaskDelay+0x94>)
90011c74:	682b      	ldr	r3, [r5, #0]
90011c76:	b143      	cbz	r3, 90011c8a <vTaskDelay+0x32>
90011c78:	f04f 0350 	mov.w	r3, #80	; 0x50
90011c7c:	f383 8811 	msr	BASEPRI, r3
90011c80:	f3bf 8f6f 	isb	sy
90011c84:	f3bf 8f4f 	dsb	sy
90011c88:	e7fe      	b.n	90011c88 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
90011c8a:	682b      	ldr	r3, [r5, #0]
90011c8c:	4604      	mov	r4, r0
90011c8e:	3301      	adds	r3, #1
90011c90:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011c92:	4b17      	ldr	r3, [pc, #92]	; (90011cf0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c94:	4e17      	ldr	r6, [pc, #92]	; (90011cf4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90011c96:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c98:	6830      	ldr	r0, [r6, #0]
90011c9a:	3004      	adds	r0, #4
90011c9c:	f7fe f9c2 	bl	90010024 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011ca0:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011ca2:	6833      	ldr	r3, [r6, #0]
90011ca4:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011ca6:	d315      	bcc.n	90011cd4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011ca8:	4b13      	ldr	r3, [pc, #76]	; (90011cf8 <vTaskDelay+0xa0>)
90011caa:	6818      	ldr	r0, [r3, #0]
90011cac:	6831      	ldr	r1, [r6, #0]
90011cae:	3104      	adds	r1, #4
90011cb0:	f7fe f9a0 	bl	9000fff4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011cb4:	682b      	ldr	r3, [r5, #0]
90011cb6:	b943      	cbnz	r3, 90011cca <vTaskDelay+0x72>
90011cb8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011cbc:	f383 8811 	msr	BASEPRI, r3
90011cc0:	f3bf 8f6f 	isb	sy
90011cc4:	f3bf 8f4f 	dsb	sy
90011cc8:	e7fe      	b.n	90011cc8 <vTaskDelay+0x70>
90011cca:	f7ff fde5 	bl	90011898 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90011cce:	2800      	cmp	r0, #0
90011cd0:	d0c4      	beq.n	90011c5c <vTaskDelay+0x4>
	}
90011cd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011cd4:	4b09      	ldr	r3, [pc, #36]	; (90011cfc <vTaskDelay+0xa4>)
90011cd6:	6818      	ldr	r0, [r3, #0]
90011cd8:	6831      	ldr	r1, [r6, #0]
90011cda:	3104      	adds	r1, #4
90011cdc:	f7fe f98a 	bl	9000fff4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011ce0:	4b07      	ldr	r3, [pc, #28]	; (90011d00 <vTaskDelay+0xa8>)
90011ce2:	681a      	ldr	r2, [r3, #0]
90011ce4:	4294      	cmp	r4, r2
90011ce6:	d2e5      	bcs.n	90011cb4 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011ce8:	601c      	str	r4, [r3, #0]
90011cea:	e7e3      	b.n	90011cb4 <vTaskDelay+0x5c>
90011cec:	2403990c 	.word	0x2403990c
90011cf0:	2403998c 	.word	0x2403998c
90011cf4:	24039498 	.word	0x24039498
90011cf8:	240394a0 	.word	0x240394a0
90011cfc:	2403949c 	.word	0x2403949c
90011d00:	24039940 	.word	0x24039940

90011d04 <vTaskStartScheduler>:
{
90011d04:	b570      	push	{r4, r5, r6, lr}
90011d06:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90011d08:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011d0a:	4668      	mov	r0, sp
90011d0c:	aa02      	add	r2, sp, #8
90011d0e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90011d10:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011d14:	f7fe f80e 	bl	9000fd34 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90011d18:	9d00      	ldr	r5, [sp, #0]
90011d1a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
90011d1e:	b1b8      	cbz	r0, 90011d50 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011d20:	b16d      	cbz	r5, 90011d3e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011d22:	2260      	movs	r2, #96	; 0x60
90011d24:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011d26:	9a03      	ldr	r2, [sp, #12]
90011d28:	2a60      	cmp	r2, #96	; 0x60
90011d2a:	d01a      	beq.n	90011d62 <vTaskStartScheduler+0x5e>
90011d2c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011d30:	f383 8811 	msr	BASEPRI, r3
90011d34:	f3bf 8f6f 	isb	sy
90011d38:	f3bf 8f4f 	dsb	sy
90011d3c:	e7fe      	b.n	90011d3c <vTaskStartScheduler+0x38>
90011d3e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011d42:	f383 8811 	msr	BASEPRI, r3
90011d46:	f3bf 8f6f 	isb	sy
90011d4a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011d4e:	e7fe      	b.n	90011d4e <vTaskStartScheduler+0x4a>
90011d50:	f04f 0350 	mov.w	r3, #80	; 0x50
90011d54:	f383 8811 	msr	BASEPRI, r3
90011d58:	f3bf 8f6f 	isb	sy
90011d5c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011d60:	e7fe      	b.n	90011d60 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011d62:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011d64:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011d66:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011d68:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011d6a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011d6c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011d70:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011d72:	f017 fdad 	bl	900298d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011d76:	1f33      	subs	r3, r6, #4
90011d78:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d7a:	492a      	ldr	r1, [pc, #168]	; (90011e24 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011d7c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011d7e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011d80:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90011d84:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011d86:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011d8a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
90011d8e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90011d90:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011d94:	f7fe f91a 	bl	9000ffcc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011d98:	f105 0018 	add.w	r0, r5, #24
90011d9c:	f7fe f916 	bl	9000ffcc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011da0:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011da2:	4622      	mov	r2, r4
90011da4:	4920      	ldr	r1, [pc, #128]	; (90011e28 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90011da6:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011da8:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011daa:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011dac:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011dae:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011db0:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011db2:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011db6:	f7fe f987 	bl	900100c8 <pxPortInitialiseStack>
90011dba:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90011dbc:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011dbe:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011dc0:	f7ff fbec 	bl	9001159c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90011dc4:	f000 fca4 	bl	90012710 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90011dc8:	2801      	cmp	r0, #1
90011dca:	d00c      	beq.n	90011de6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011dcc:	3001      	adds	r0, #1
90011dce:	d001      	beq.n	90011dd4 <vTaskStartScheduler+0xd0>
}
90011dd0:	b004      	add	sp, #16
90011dd2:	bd70      	pop	{r4, r5, r6, pc}
90011dd4:	f04f 0350 	mov.w	r3, #80	; 0x50
90011dd8:	f383 8811 	msr	BASEPRI, r3
90011ddc:	f3bf 8f6f 	isb	sy
90011de0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011de4:	e7fe      	b.n	90011de4 <vTaskStartScheduler+0xe0>
90011de6:	f04f 0350 	mov.w	r3, #80	; 0x50
90011dea:	f383 8811 	msr	BASEPRI, r3
90011dee:	f3bf 8f6f 	isb	sy
90011df2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90011df6:	4b0d      	ldr	r3, [pc, #52]	; (90011e2c <vTaskStartScheduler+0x128>)
90011df8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90011dfc:	490c      	ldr	r1, [pc, #48]	; (90011e30 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90011dfe:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011e00:	4b0c      	ldr	r3, [pc, #48]	; (90011e34 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90011e02:	4a0d      	ldr	r2, [pc, #52]	; (90011e38 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90011e04:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011e06:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90011e08:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90011e0a:	b143      	cbz	r3, 90011e1e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90011e0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011e0e:	b10b      	cbz	r3, 90011e14 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011e10:	2000      	movs	r0, #0
90011e12:	4798      	blx	r3
}
90011e14:	b004      	add	sp, #16
90011e16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90011e1a:	f7fe ba15 	b.w	90010248 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90011e1e:	6813      	ldr	r3, [r2, #0]
90011e20:	e7f4      	b.n	90011e0c <vTaskStartScheduler+0x108>
90011e22:	bf00      	nop
90011e24:	454c4449 	.word	0x454c4449
90011e28:	900116ad 	.word	0x900116ad
90011e2c:	24039940 	.word	0x24039940
90011e30:	24039960 	.word	0x24039960
90011e34:	2403998c 	.word	0x2403998c
90011e38:	24039498 	.word	0x24039498

90011e3c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011e3c:	4a02      	ldr	r2, [pc, #8]	; (90011e48 <vTaskSuspendAll+0xc>)
90011e3e:	6813      	ldr	r3, [r2, #0]
90011e40:	3301      	adds	r3, #1
90011e42:	6013      	str	r3, [r2, #0]
}
90011e44:	4770      	bx	lr
90011e46:	bf00      	nop
90011e48:	2403990c 	.word	0x2403990c

90011e4c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011e4c:	4b06      	ldr	r3, [pc, #24]	; (90011e68 <xTaskResumeAll+0x1c>)
90011e4e:	681b      	ldr	r3, [r3, #0]
90011e50:	b943      	cbnz	r3, 90011e64 <xTaskResumeAll+0x18>
90011e52:	f04f 0350 	mov.w	r3, #80	; 0x50
90011e56:	f383 8811 	msr	BASEPRI, r3
90011e5a:	f3bf 8f6f 	isb	sy
90011e5e:	f3bf 8f4f 	dsb	sy
90011e62:	e7fe      	b.n	90011e62 <xTaskResumeAll+0x16>
90011e64:	f7ff bd18 	b.w	90011898 <xTaskResumeAll.part.0>
90011e68:	2403990c 	.word	0x2403990c

90011e6c <xTaskGetTickCount>:
		xTicks = xTickCount;
90011e6c:	4b01      	ldr	r3, [pc, #4]	; (90011e74 <xTaskGetTickCount+0x8>)
90011e6e:	6818      	ldr	r0, [r3, #0]
}
90011e70:	4770      	bx	lr
90011e72:	bf00      	nop
90011e74:	2403998c 	.word	0x2403998c

90011e78 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011e78:	4b05      	ldr	r3, [pc, #20]	; (90011e90 <xTaskIncrementTick+0x18>)
90011e7a:	681b      	ldr	r3, [r3, #0]
90011e7c:	b90b      	cbnz	r3, 90011e82 <xTaskIncrementTick+0xa>
90011e7e:	f7ff bc63 	b.w	90011748 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011e82:	4a04      	ldr	r2, [pc, #16]	; (90011e94 <xTaskIncrementTick+0x1c>)
}
90011e84:	2000      	movs	r0, #0
		++xPendedTicks;
90011e86:	6813      	ldr	r3, [r2, #0]
90011e88:	3301      	adds	r3, #1
90011e8a:	6013      	str	r3, [r2, #0]
}
90011e8c:	4770      	bx	lr
90011e8e:	bf00      	nop
90011e90:	2403990c 	.word	0x2403990c
90011e94:	24039948 	.word	0x24039948

90011e98 <vTaskSetApplicationTaskTag>:
	{
90011e98:	b538      	push	{r3, r4, r5, lr}
90011e9a:	460d      	mov	r5, r1
		if( xTask == NULL )
90011e9c:	b138      	cbz	r0, 90011eae <vTaskSetApplicationTaskTag+0x16>
90011e9e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011ea0:	f7fe f940 	bl	90010124 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011ea4:	6565      	str	r5, [r4, #84]	; 0x54
	}
90011ea6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011eaa:	f7fe b95d 	b.w	90010168 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011eae:	4b04      	ldr	r3, [pc, #16]	; (90011ec0 <vTaskSetApplicationTaskTag+0x28>)
90011eb0:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011eb2:	f7fe f937 	bl	90010124 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011eb6:	6565      	str	r5, [r4, #84]	; 0x54
	}
90011eb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011ebc:	f7fe b954 	b.w	90010168 <vPortExitCritical>
90011ec0:	24039498 	.word	0x24039498

90011ec4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90011ec4:	4b27      	ldr	r3, [pc, #156]	; (90011f64 <vTaskSwitchContext+0xa0>)
90011ec6:	681b      	ldr	r3, [r3, #0]
90011ec8:	b11b      	cbz	r3, 90011ed2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90011eca:	4b27      	ldr	r3, [pc, #156]	; (90011f68 <vTaskSwitchContext+0xa4>)
90011ecc:	2201      	movs	r2, #1
90011ece:	601a      	str	r2, [r3, #0]
90011ed0:	4770      	bx	lr
{
90011ed2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90011ed4:	4a24      	ldr	r2, [pc, #144]	; (90011f68 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90011ed6:	4c25      	ldr	r4, [pc, #148]	; (90011f6c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90011ed8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90011eda:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011edc:	2b00      	cmp	r3, #0
90011ede:	d036      	beq.n	90011f4e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90011ee0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011ee2:	b10b      	cbz	r3, 90011ee8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011ee4:	2001      	movs	r0, #1
90011ee6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011ee8:	4d21      	ldr	r5, [pc, #132]	; (90011f70 <vTaskSwitchContext+0xac>)
90011eea:	4922      	ldr	r1, [pc, #136]	; (90011f74 <vTaskSwitchContext+0xb0>)
90011eec:	682b      	ldr	r3, [r5, #0]
90011eee:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011ef2:	0098      	lsls	r0, r3, #2
90011ef4:	0092      	lsls	r2, r2, #2
90011ef6:	588a      	ldr	r2, [r1, r2]
90011ef8:	b942      	cbnz	r2, 90011f0c <vTaskSwitchContext+0x48>
90011efa:	b1fb      	cbz	r3, 90011f3c <vTaskSwitchContext+0x78>
90011efc:	3b01      	subs	r3, #1
90011efe:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011f02:	0098      	lsls	r0, r3, #2
90011f04:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90011f08:	2a00      	cmp	r2, #0
90011f0a:	d0f6      	beq.n	90011efa <vTaskSwitchContext+0x36>
90011f0c:	4418      	add	r0, r3
90011f0e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90011f12:	f8dc 1004 	ldr.w	r1, [ip, #4]
90011f16:	4662      	mov	r2, ip
90011f18:	6849      	ldr	r1, [r1, #4]
90011f1a:	3208      	adds	r2, #8
90011f1c:	4291      	cmp	r1, r2
90011f1e:	f8cc 1004 	str.w	r1, [ip, #4]
90011f22:	d01b      	beq.n	90011f5c <vTaskSwitchContext+0x98>
90011f24:	68ca      	ldr	r2, [r1, #12]
90011f26:	6022      	str	r2, [r4, #0]
90011f28:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90011f2a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011f2c:	b1a3      	cbz	r3, 90011f58 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90011f2e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011f30:	b11b      	cbz	r3, 90011f3a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011f32:	2000      	movs	r0, #0
}
90011f34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90011f38:	4718      	bx	r3
}
90011f3a:	bd70      	pop	{r4, r5, r6, pc}
90011f3c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011f40:	f383 8811 	msr	BASEPRI, r3
90011f44:	f3bf 8f6f 	isb	sy
90011f48:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011f4c:	e7fe      	b.n	90011f4c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90011f4e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90011f50:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011f52:	2b00      	cmp	r3, #0
90011f54:	d1c6      	bne.n	90011ee4 <vTaskSwitchContext+0x20>
90011f56:	e7c7      	b.n	90011ee8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011f58:	6823      	ldr	r3, [r4, #0]
90011f5a:	e7e8      	b.n	90011f2e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011f5c:	6849      	ldr	r1, [r1, #4]
90011f5e:	f8cc 1004 	str.w	r1, [ip, #4]
90011f62:	e7df      	b.n	90011f24 <vTaskSwitchContext+0x60>
90011f64:	2403990c 	.word	0x2403990c
90011f68:	24039990 	.word	0x24039990
90011f6c:	24039498 	.word	0x24039498
90011f70:	24039914 	.word	0x24039914
90011f74:	240394a4 	.word	0x240394a4

90011f78 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011f78:	b1f0      	cbz	r0, 90011fb8 <vTaskPlaceOnEventList+0x40>
{
90011f7a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011f7c:	4d1a      	ldr	r5, [pc, #104]	; (90011fe8 <vTaskPlaceOnEventList+0x70>)
90011f7e:	460c      	mov	r4, r1
90011f80:	6829      	ldr	r1, [r5, #0]
90011f82:	3118      	adds	r1, #24
90011f84:	f7fe f836 	bl	9000fff4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011f88:	4b18      	ldr	r3, [pc, #96]	; (90011fec <vTaskPlaceOnEventList+0x74>)
90011f8a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f8c:	6828      	ldr	r0, [r5, #0]
90011f8e:	3004      	adds	r0, #4
90011f90:	f7fe f848 	bl	90010024 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90011f94:	1c63      	adds	r3, r4, #1
90011f96:	d020      	beq.n	90011fda <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011f98:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011f9a:	682b      	ldr	r3, [r5, #0]
90011f9c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011f9e:	d214      	bcs.n	90011fca <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011fa0:	4b13      	ldr	r3, [pc, #76]	; (90011ff0 <vTaskPlaceOnEventList+0x78>)
90011fa2:	6818      	ldr	r0, [r3, #0]
90011fa4:	6829      	ldr	r1, [r5, #0]
90011fa6:	3104      	adds	r1, #4
90011fa8:	f7fe f824 	bl	9000fff4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011fac:	4b11      	ldr	r3, [pc, #68]	; (90011ff4 <vTaskPlaceOnEventList+0x7c>)
90011fae:	681a      	ldr	r2, [r3, #0]
90011fb0:	4294      	cmp	r4, r2
90011fb2:	d200      	bcs.n	90011fb6 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90011fb4:	601c      	str	r4, [r3, #0]
}
90011fb6:	bd70      	pop	{r4, r5, r6, pc}
90011fb8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011fbc:	f383 8811 	msr	BASEPRI, r3
90011fc0:	f3bf 8f6f 	isb	sy
90011fc4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90011fc8:	e7fe      	b.n	90011fc8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011fca:	4b0b      	ldr	r3, [pc, #44]	; (90011ff8 <vTaskPlaceOnEventList+0x80>)
90011fcc:	6818      	ldr	r0, [r3, #0]
90011fce:	6829      	ldr	r1, [r5, #0]
}
90011fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011fd4:	3104      	adds	r1, #4
90011fd6:	f7fe b80d 	b.w	9000fff4 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011fda:	6829      	ldr	r1, [r5, #0]
90011fdc:	4807      	ldr	r0, [pc, #28]	; (90011ffc <vTaskPlaceOnEventList+0x84>)
90011fde:	3104      	adds	r1, #4
}
90011fe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011fe4:	f7fd bff6 	b.w	9000ffd4 <vListInsertEnd>
90011fe8:	24039498 	.word	0x24039498
90011fec:	2403998c 	.word	0x2403998c
90011ff0:	2403949c 	.word	0x2403949c
90011ff4:	24039940 	.word	0x24039940
90011ff8:	240394a0 	.word	0x240394a0
90011ffc:	24039964 	.word	0x24039964

90012000 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90012000:	b358      	cbz	r0, 9001205a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90012002:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90012004:	4e1d      	ldr	r6, [pc, #116]	; (9001207c <vTaskPlaceOnEventListRestricted+0x7c>)
90012006:	460c      	mov	r4, r1
90012008:	4615      	mov	r5, r2
9001200a:	6831      	ldr	r1, [r6, #0]
9001200c:	3118      	adds	r1, #24
9001200e:	f7fd ffe1 	bl	9000ffd4 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90012012:	b165      	cbz	r5, 9001202e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90012014:	4b1a      	ldr	r3, [pc, #104]	; (90012080 <vTaskPlaceOnEventListRestricted+0x80>)
90012016:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012018:	6830      	ldr	r0, [r6, #0]
9001201a:	3004      	adds	r0, #4
9001201c:	f7fe f802 	bl	90010024 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012020:	6831      	ldr	r1, [r6, #0]
90012022:	4818      	ldr	r0, [pc, #96]	; (90012084 <vTaskPlaceOnEventListRestricted+0x84>)
90012024:	3104      	adds	r1, #4
	}
90012026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001202a:	f7fd bfd3 	b.w	9000ffd4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001202e:	4b14      	ldr	r3, [pc, #80]	; (90012080 <vTaskPlaceOnEventListRestricted+0x80>)
90012030:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012032:	6830      	ldr	r0, [r6, #0]
90012034:	3004      	adds	r0, #4
90012036:	f7fd fff5 	bl	90010024 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001203a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001203c:	6833      	ldr	r3, [r6, #0]
9001203e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90012040:	d214      	bcs.n	9001206c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012042:	4b11      	ldr	r3, [pc, #68]	; (90012088 <vTaskPlaceOnEventListRestricted+0x88>)
90012044:	6818      	ldr	r0, [r3, #0]
90012046:	6831      	ldr	r1, [r6, #0]
90012048:	3104      	adds	r1, #4
9001204a:	f7fd ffd3 	bl	9000fff4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001204e:	4b0f      	ldr	r3, [pc, #60]	; (9001208c <vTaskPlaceOnEventListRestricted+0x8c>)
90012050:	681a      	ldr	r2, [r3, #0]
90012052:	4294      	cmp	r4, r2
90012054:	d200      	bcs.n	90012058 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90012056:	601c      	str	r4, [r3, #0]
	}
90012058:	bd70      	pop	{r4, r5, r6, pc}
9001205a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001205e:	f383 8811 	msr	BASEPRI, r3
90012062:	f3bf 8f6f 	isb	sy
90012066:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001206a:	e7fe      	b.n	9001206a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001206c:	4b08      	ldr	r3, [pc, #32]	; (90012090 <vTaskPlaceOnEventListRestricted+0x90>)
9001206e:	6818      	ldr	r0, [r3, #0]
90012070:	6831      	ldr	r1, [r6, #0]
	}
90012072:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012076:	3104      	adds	r1, #4
90012078:	f7fd bfbc 	b.w	9000fff4 <vListInsert>
9001207c:	24039498 	.word	0x24039498
90012080:	2403998c 	.word	0x2403998c
90012084:	24039964 	.word	0x24039964
90012088:	2403949c 	.word	0x2403949c
9001208c:	24039940 	.word	0x24039940
90012090:	240394a0 	.word	0x240394a0

90012094 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012094:	68c3      	ldr	r3, [r0, #12]
{
90012096:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012098:	68dc      	ldr	r4, [r3, #12]
{
9001209a:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9001209c:	b35c      	cbz	r4, 900120f6 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9001209e:	f104 0518 	add.w	r5, r4, #24
900120a2:	4628      	mov	r0, r5
900120a4:	f7fd ffbe 	bl	90010024 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900120a8:	4b19      	ldr	r3, [pc, #100]	; (90012110 <xTaskRemoveFromEventList+0x7c>)
900120aa:	681b      	ldr	r3, [r3, #0]
900120ac:	b17b      	cbz	r3, 900120ce <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900120ae:	4629      	mov	r1, r5
900120b0:	4818      	ldr	r0, [pc, #96]	; (90012114 <xTaskRemoveFromEventList+0x80>)
900120b2:	f7fd ff8f 	bl	9000ffd4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900120b6:	4b18      	ldr	r3, [pc, #96]	; (90012118 <xTaskRemoveFromEventList+0x84>)
900120b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900120ba:	681b      	ldr	r3, [r3, #0]
900120bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900120be:	429a      	cmp	r2, r3
900120c0:	d922      	bls.n	90012108 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900120c2:	2301      	movs	r3, #1
900120c4:	4a15      	ldr	r2, [pc, #84]	; (9001211c <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900120c6:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900120c8:	6013      	str	r3, [r2, #0]
}
900120ca:	b003      	add	sp, #12
900120cc:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900120ce:	1d21      	adds	r1, r4, #4
900120d0:	4608      	mov	r0, r1
900120d2:	9101      	str	r1, [sp, #4]
900120d4:	f7fd ffa6 	bl	90010024 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900120d8:	4a11      	ldr	r2, [pc, #68]	; (90012120 <xTaskRemoveFromEventList+0x8c>)
900120da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900120dc:	6810      	ldr	r0, [r2, #0]
900120de:	9901      	ldr	r1, [sp, #4]
900120e0:	4283      	cmp	r3, r0
900120e2:	d900      	bls.n	900120e6 <xTaskRemoveFromEventList+0x52>
900120e4:	6013      	str	r3, [r2, #0]
900120e6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900120ea:	480e      	ldr	r0, [pc, #56]	; (90012124 <xTaskRemoveFromEventList+0x90>)
900120ec:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900120f0:	f7fd ff70 	bl	9000ffd4 <vListInsertEnd>
900120f4:	e7df      	b.n	900120b6 <xTaskRemoveFromEventList+0x22>
900120f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900120fa:	f383 8811 	msr	BASEPRI, r3
900120fe:	f3bf 8f6f 	isb	sy
90012102:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90012106:	e7fe      	b.n	90012106 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90012108:	2000      	movs	r0, #0
}
9001210a:	b003      	add	sp, #12
9001210c:	bd30      	pop	{r4, r5, pc}
9001210e:	bf00      	nop
90012110:	2403990c 	.word	0x2403990c
90012114:	2403994c 	.word	0x2403994c
90012118:	24039498 	.word	0x24039498
9001211c:	24039990 	.word	0x24039990
90012120:	24039914 	.word	0x24039914
90012124:	240394a4 	.word	0x240394a4

90012128 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90012128:	4a03      	ldr	r2, [pc, #12]	; (90012138 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001212a:	4b04      	ldr	r3, [pc, #16]	; (9001213c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001212c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001212e:	681b      	ldr	r3, [r3, #0]
90012130:	e9c0 2300 	strd	r2, r3, [r0]
}
90012134:	4770      	bx	lr
90012136:	bf00      	nop
90012138:	24039944 	.word	0x24039944
9001213c:	2403998c 	.word	0x2403998c

90012140 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90012140:	b328      	cbz	r0, 9001218e <xTaskCheckForTimeOut+0x4e>
{
90012142:	b5f0      	push	{r4, r5, r6, r7, lr}
90012144:	460d      	mov	r5, r1
90012146:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90012148:	b1c1      	cbz	r1, 9001217c <xTaskCheckForTimeOut+0x3c>
9001214a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001214c:	f7fd ffea 	bl	90010124 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90012150:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90012152:	4a1d      	ldr	r2, [pc, #116]	; (900121c8 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90012154:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90012156:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90012158:	d030      	beq.n	900121bc <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001215a:	f8df c070 	ldr.w	ip, [pc, #112]	; 900121cc <xTaskCheckForTimeOut+0x8c>
9001215e:	6826      	ldr	r6, [r4, #0]
90012160:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90012164:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90012166:	42be      	cmp	r6, r7
90012168:	d01a      	beq.n	900121a0 <xTaskCheckForTimeOut+0x60>
9001216a:	4288      	cmp	r0, r1
9001216c:	d818      	bhi.n	900121a0 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9001216e:	2001      	movs	r0, #1
90012170:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90012172:	f7fd fff9 	bl	90010168 <vPortExitCritical>
}
90012176:	9801      	ldr	r0, [sp, #4]
90012178:	b003      	add	sp, #12
9001217a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001217c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012180:	f383 8811 	msr	BASEPRI, r3
90012184:	f3bf 8f6f 	isb	sy
90012188:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001218c:	e7fe      	b.n	9001218c <xTaskCheckForTimeOut+0x4c>
9001218e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012192:	f383 8811 	msr	BASEPRI, r3
90012196:	f3bf 8f6f 	isb	sy
9001219a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001219e:	e7fe      	b.n	9001219e <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900121a0:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900121a4:	4573      	cmp	r3, lr
900121a6:	d90b      	bls.n	900121c0 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
900121a8:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900121aa:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900121ae:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900121b0:	4403      	add	r3, r0
			xReturn = pdFALSE;
900121b2:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
900121b4:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900121b6:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
900121ba:	e7d9      	b.n	90012170 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
900121bc:	2000      	movs	r0, #0
900121be:	e7d7      	b.n	90012170 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
900121c0:	2300      	movs	r3, #0
			xReturn = pdTRUE;
900121c2:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
900121c4:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900121c6:	e7d3      	b.n	90012170 <xTaskCheckForTimeOut+0x30>
900121c8:	2403998c 	.word	0x2403998c
900121cc:	24039944 	.word	0x24039944

900121d0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900121d0:	4b01      	ldr	r3, [pc, #4]	; (900121d8 <vTaskMissedYield+0x8>)
900121d2:	2201      	movs	r2, #1
900121d4:	601a      	str	r2, [r3, #0]
}
900121d6:	4770      	bx	lr
900121d8:	24039990 	.word	0x24039990

900121dc <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
900121dc:	4b01      	ldr	r3, [pc, #4]	; (900121e4 <xTaskGetCurrentTaskHandle+0x8>)
900121de:	6818      	ldr	r0, [r3, #0]
	}
900121e0:	4770      	bx	lr
900121e2:	bf00      	nop
900121e4:	24039498 	.word	0x24039498

900121e8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900121e8:	4b05      	ldr	r3, [pc, #20]	; (90012200 <xTaskGetSchedulerState+0x18>)
900121ea:	681b      	ldr	r3, [r3, #0]
900121ec:	b133      	cbz	r3, 900121fc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900121ee:	4b05      	ldr	r3, [pc, #20]	; (90012204 <xTaskGetSchedulerState+0x1c>)
900121f0:	6818      	ldr	r0, [r3, #0]
900121f2:	fab0 f080 	clz	r0, r0
900121f6:	0940      	lsrs	r0, r0, #5
900121f8:	0040      	lsls	r0, r0, #1
900121fa:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900121fc:	2001      	movs	r0, #1
	}
900121fe:	4770      	bx	lr
90012200:	24039960 	.word	0x24039960
90012204:	2403990c 	.word	0x2403990c

90012208 <xTaskPriorityInherit>:
	{
90012208:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9001220a:	4604      	mov	r4, r0
	{
9001220c:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9001220e:	b1c8      	cbz	r0, 90012244 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90012210:	4d1d      	ldr	r5, [pc, #116]	; (90012288 <xTaskPriorityInherit+0x80>)
90012212:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012214:	682a      	ldr	r2, [r5, #0]
90012216:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012218:	4293      	cmp	r3, r2
9001221a:	d215      	bcs.n	90012248 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001221c:	6982      	ldr	r2, [r0, #24]
9001221e:	2a00      	cmp	r2, #0
90012220:	db04      	blt.n	9001222c <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012222:	682a      	ldr	r2, [r5, #0]
90012224:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012226:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9001222a:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9001222c:	4e17      	ldr	r6, [pc, #92]	; (9001228c <xTaskPriorityInherit+0x84>)
9001222e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012232:	6962      	ldr	r2, [r4, #20]
90012234:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90012238:	429a      	cmp	r2, r3
9001223a:	d00e      	beq.n	9001225a <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001223c:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9001223e:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012240:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012242:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90012244:	b002      	add	sp, #8
90012246:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90012248:	682b      	ldr	r3, [r5, #0]
9001224a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001224c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001224e:	4298      	cmp	r0, r3
90012250:	bf2c      	ite	cs
90012252:	2000      	movcs	r0, #0
90012254:	2001      	movcc	r0, #1
	}
90012256:	b002      	add	sp, #8
90012258:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001225a:	1d21      	adds	r1, r4, #4
9001225c:	4608      	mov	r0, r1
9001225e:	9101      	str	r1, [sp, #4]
90012260:	f7fd fee0 	bl	90010024 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012264:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90012266:	4b0a      	ldr	r3, [pc, #40]	; (90012290 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012268:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001226a:	681a      	ldr	r2, [r3, #0]
9001226c:	9901      	ldr	r1, [sp, #4]
9001226e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012270:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90012272:	d900      	bls.n	90012276 <xTaskPriorityInherit+0x6e>
90012274:	6018      	str	r0, [r3, #0]
90012276:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001227a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001227e:	f7fd fea9 	bl	9000ffd4 <vListInsertEnd>
				xReturn = pdTRUE;
90012282:	2001      	movs	r0, #1
90012284:	e7de      	b.n	90012244 <xTaskPriorityInherit+0x3c>
90012286:	bf00      	nop
90012288:	24039498 	.word	0x24039498
9001228c:	240394a4 	.word	0x240394a4
90012290:	24039914 	.word	0x24039914

90012294 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90012294:	b318      	cbz	r0, 900122de <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90012296:	4b1f      	ldr	r3, [pc, #124]	; (90012314 <xTaskPriorityDisinherit+0x80>)
	{
90012298:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9001229a:	681c      	ldr	r4, [r3, #0]
	{
9001229c:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9001229e:	4284      	cmp	r4, r0
900122a0:	d008      	beq.n	900122b4 <xTaskPriorityDisinherit+0x20>
900122a2:	f04f 0350 	mov.w	r3, #80	; 0x50
900122a6:	f383 8811 	msr	BASEPRI, r3
900122aa:	f3bf 8f6f 	isb	sy
900122ae:	f3bf 8f4f 	dsb	sy
900122b2:	e7fe      	b.n	900122b2 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
900122b4:	6d23      	ldr	r3, [r4, #80]	; 0x50
900122b6:	b14b      	cbz	r3, 900122cc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900122b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
900122ba:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900122bc:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
900122be:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900122c0:	4291      	cmp	r1, r2
900122c2:	d000      	beq.n	900122c6 <xTaskPriorityDisinherit+0x32>
900122c4:	b16b      	cbz	r3, 900122e2 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
900122c6:	2000      	movs	r0, #0
	}
900122c8:	b002      	add	sp, #8
900122ca:	bd10      	pop	{r4, pc}
900122cc:	f04f 0350 	mov.w	r3, #80	; 0x50
900122d0:	f383 8811 	msr	BASEPRI, r3
900122d4:	f3bf 8f6f 	isb	sy
900122d8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900122dc:	e7fe      	b.n	900122dc <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
900122de:	2000      	movs	r0, #0
	}
900122e0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900122e2:	1d21      	adds	r1, r4, #4
900122e4:	4608      	mov	r0, r1
900122e6:	9101      	str	r1, [sp, #4]
900122e8:	f7fd fe9c 	bl	90010024 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900122ec:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
900122ee:	4b0a      	ldr	r3, [pc, #40]	; (90012318 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900122f0:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
900122f4:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900122f6:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900122f8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900122fa:	681a      	ldr	r2, [r3, #0]
900122fc:	4290      	cmp	r0, r2
900122fe:	d900      	bls.n	90012302 <xTaskPriorityDisinherit+0x6e>
90012300:	6018      	str	r0, [r3, #0]
90012302:	4b06      	ldr	r3, [pc, #24]	; (9001231c <xTaskPriorityDisinherit+0x88>)
90012304:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012308:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9001230c:	f7fd fe62 	bl	9000ffd4 <vListInsertEnd>
					xReturn = pdTRUE;
90012310:	2001      	movs	r0, #1
		return xReturn;
90012312:	e7d9      	b.n	900122c8 <xTaskPriorityDisinherit+0x34>
90012314:	24039498 	.word	0x24039498
90012318:	24039914 	.word	0x24039914
9001231c:	240394a4 	.word	0x240394a4

90012320 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90012320:	2800      	cmp	r0, #0
90012322:	d040      	beq.n	900123a6 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90012324:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90012326:	b530      	push	{r4, r5, lr}
90012328:	4604      	mov	r4, r0
9001232a:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9001232c:	b153      	cbz	r3, 90012344 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9001232e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90012330:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012332:	4281      	cmp	r1, r0
90012334:	bf38      	it	cc
90012336:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90012338:	2b01      	cmp	r3, #1
9001233a:	d101      	bne.n	90012340 <vTaskPriorityDisinheritAfterTimeout+0x20>
9001233c:	428a      	cmp	r2, r1
9001233e:	d10a      	bne.n	90012356 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90012340:	b003      	add	sp, #12
90012342:	bd30      	pop	{r4, r5, pc}
90012344:	f04f 0350 	mov.w	r3, #80	; 0x50
90012348:	f383 8811 	msr	BASEPRI, r3
9001234c:	f3bf 8f6f 	isb	sy
90012350:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90012354:	e7fe      	b.n	90012354 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90012356:	4b19      	ldr	r3, [pc, #100]	; (900123bc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90012358:	681b      	ldr	r3, [r3, #0]
9001235a:	42a3      	cmp	r3, r4
9001235c:	d024      	beq.n	900123a8 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001235e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90012360:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90012362:	2b00      	cmp	r3, #0
90012364:	db02      	blt.n	9001236c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012366:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001236a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001236c:	4d14      	ldr	r5, [pc, #80]	; (900123c0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001236e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90012372:	6961      	ldr	r1, [r4, #20]
90012374:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90012378:	4299      	cmp	r1, r3
9001237a:	d1e1      	bne.n	90012340 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001237c:	1d21      	adds	r1, r4, #4
9001237e:	4608      	mov	r0, r1
90012380:	9101      	str	r1, [sp, #4]
90012382:	f7fd fe4f 	bl	90010024 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90012386:	4b0f      	ldr	r3, [pc, #60]	; (900123c4 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90012388:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001238a:	681a      	ldr	r2, [r3, #0]
9001238c:	9901      	ldr	r1, [sp, #4]
9001238e:	4290      	cmp	r0, r2
90012390:	d900      	bls.n	90012394 <vTaskPriorityDisinheritAfterTimeout+0x74>
90012392:	6018      	str	r0, [r3, #0]
90012394:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012398:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001239c:	b003      	add	sp, #12
9001239e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
900123a2:	f7fd be17 	b.w	9000ffd4 <vListInsertEnd>
900123a6:	4770      	bx	lr
900123a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900123ac:	f383 8811 	msr	BASEPRI, r3
900123b0:	f3bf 8f6f 	isb	sy
900123b4:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
900123b8:	e7fe      	b.n	900123b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
900123ba:	bf00      	nop
900123bc:	24039498 	.word	0x24039498
900123c0:	240394a4 	.word	0x240394a4
900123c4:	24039914 	.word	0x24039914

900123c8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900123c8:	4b04      	ldr	r3, [pc, #16]	; (900123dc <pvTaskIncrementMutexHeldCount+0x14>)
900123ca:	681a      	ldr	r2, [r3, #0]
900123cc:	b11a      	cbz	r2, 900123d6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900123ce:	6819      	ldr	r1, [r3, #0]
900123d0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900123d2:	3201      	adds	r2, #1
900123d4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900123d6:	6818      	ldr	r0, [r3, #0]
	}
900123d8:	4770      	bx	lr
900123da:	bf00      	nop
900123dc:	24039498 	.word	0x24039498

900123e0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900123e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900123e4:	4e22      	ldr	r6, [pc, #136]	; (90012470 <prvSwitchTimerLists+0x90>)
900123e6:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
900123e8:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90012478 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
900123ec:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900123f0:	e00d      	b.n	9001240e <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900123f2:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900123f4:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900123f6:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900123f8:	1d25      	adds	r5, r4, #4
900123fa:	4628      	mov	r0, r5
900123fc:	f7fd fe12 	bl	90010024 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012400:	6a23      	ldr	r3, [r4, #32]
90012402:	4620      	mov	r0, r4
90012404:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012406:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9001240a:	075b      	lsls	r3, r3, #29
9001240c:	d40a      	bmi.n	90012424 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001240e:	6833      	ldr	r3, [r6, #0]
90012410:	681a      	ldr	r2, [r3, #0]
90012412:	2a00      	cmp	r2, #0
90012414:	d1ed      	bne.n	900123f2 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90012416:	4a17      	ldr	r2, [pc, #92]	; (90012474 <prvSwitchTimerLists+0x94>)
90012418:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9001241a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9001241c:	6031      	str	r1, [r6, #0]
}
9001241e:	b005      	add	sp, #20
90012420:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012424:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012426:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012428:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001242a:	429f      	cmp	r7, r3
9001242c:	d205      	bcs.n	9001243a <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001242e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90012430:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012432:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012434:	f7fd fdde 	bl	9000fff4 <vListInsert>
90012438:	e7e9      	b.n	9001240e <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9001243a:	f8d9 3000 	ldr.w	r3, [r9]
9001243e:	b16b      	cbz	r3, 9001245c <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012440:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012442:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90012446:	f7ff fecf 	bl	900121e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001244a:	2300      	movs	r3, #0
9001244c:	4669      	mov	r1, sp
9001244e:	f8d9 0000 	ldr.w	r0, [r9]
90012452:	461a      	mov	r2, r3
90012454:	f7fe f95e 	bl	90010714 <xQueueGenericSend>
				configASSERT( xResult );
90012458:	2800      	cmp	r0, #0
9001245a:	d1d8      	bne.n	9001240e <prvSwitchTimerLists+0x2e>
9001245c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012460:	f383 8811 	msr	BASEPRI, r3
90012464:	f3bf 8f6f 	isb	sy
90012468:	f3bf 8f4f 	dsb	sy
9001246c:	e7fe      	b.n	9001246c <prvSwitchTimerLists+0x8c>
9001246e:	bf00      	nop
90012470:	24039994 	.word	0x24039994
90012474:	24039998 	.word	0x24039998
90012478:	24039ab8 	.word	0x24039ab8

9001247c <prvTimerTask>:
{
9001247c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012480:	4e9f      	ldr	r6, [pc, #636]	; (90012700 <prvTimerTask+0x284>)
90012482:	b089      	sub	sp, #36	; 0x24
90012484:	4d9f      	ldr	r5, [pc, #636]	; (90012704 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90012486:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001248a:	4c9f      	ldr	r4, [pc, #636]	; (90012708 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001248c:	6833      	ldr	r3, [r6, #0]
9001248e:	681f      	ldr	r7, [r3, #0]
90012490:	2f00      	cmp	r7, #0
90012492:	f000 80b2 	beq.w	900125fa <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90012496:	68db      	ldr	r3, [r3, #12]
90012498:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001249a:	f7ff fccf 	bl	90011e3c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001249e:	f7ff fce5 	bl	90011e6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900124a2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900124a4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900124a6:	4290      	cmp	r0, r2
900124a8:	f0c0 80af 	bcc.w	9001260a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900124ac:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900124ae:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900124b0:	f200 80d0 	bhi.w	90012654 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
900124b4:	f7ff fcca 	bl	90011e4c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900124b8:	6832      	ldr	r2, [r6, #0]
900124ba:	68d2      	ldr	r2, [r2, #12]
900124bc:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900124c0:	f10b 0804 	add.w	r8, fp, #4
900124c4:	4640      	mov	r0, r8
900124c6:	f7fd fdad 	bl	90010024 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900124ca:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
900124ce:	0741      	lsls	r1, r0, #29
900124d0:	f100 80d0 	bmi.w	90012674 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900124d4:	f020 0001 	bic.w	r0, r0, #1
900124d8:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900124dc:	f8db 3020 	ldr.w	r3, [fp, #32]
900124e0:	4658      	mov	r0, fp
900124e2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900124e4:	2200      	movs	r2, #0
900124e6:	4669      	mov	r1, sp
900124e8:	6820      	ldr	r0, [r4, #0]
900124ea:	f7fe fbff 	bl	90010cec <xQueueReceive>
900124ee:	2800      	cmp	r0, #0
900124f0:	d0cc      	beq.n	9001248c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900124f2:	9b00      	ldr	r3, [sp, #0]
900124f4:	2b00      	cmp	r3, #0
900124f6:	db77      	blt.n	900125e8 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900124f8:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900124fa:	697b      	ldr	r3, [r7, #20]
900124fc:	b113      	cbz	r3, 90012504 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900124fe:	1d38      	adds	r0, r7, #4
90012500:	f7fd fd90 	bl	90010024 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90012504:	f7ff fcb2 	bl	90011e6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012508:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001250a:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9001250c:	4298      	cmp	r0, r3
9001250e:	f0c0 8083 	bcc.w	90012618 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90012512:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90012514:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90012518:	2b09      	cmp	r3, #9
9001251a:	d8e3      	bhi.n	900124e4 <prvTimerTask+0x68>
9001251c:	e8df f003 	tbb	[pc, r3]
90012520:	54050505 	.word	0x54050505
90012524:	05055b3e 	.word	0x05055b3e
90012528:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001252a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001252e:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012530:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012534:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012536:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001253a:	9b01      	ldr	r3, [sp, #4]
9001253c:	1899      	adds	r1, r3, r2
9001253e:	bf2c      	ite	cs
90012540:	2001      	movcs	r0, #1
90012542:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90012544:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012546:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90012548:	f200 8086 	bhi.w	90012658 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001254c:	eba8 0303 	sub.w	r3, r8, r3
90012550:	429a      	cmp	r2, r3
90012552:	f200 80c0 	bhi.w	900126d6 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012556:	6a3b      	ldr	r3, [r7, #32]
90012558:	4638      	mov	r0, r7
9001255a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001255c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90012560:	075b      	lsls	r3, r3, #29
90012562:	d5bf      	bpl.n	900124e4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90012564:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90012566:	9901      	ldr	r1, [sp, #4]
90012568:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9001256a:	b172      	cbz	r2, 9001258a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001256c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9001256e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90012572:	2300      	movs	r3, #0
90012574:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90012576:	f7ff fe37 	bl	900121e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001257a:	2300      	movs	r3, #0
9001257c:	a904      	add	r1, sp, #16
9001257e:	6820      	ldr	r0, [r4, #0]
90012580:	461a      	mov	r2, r3
90012582:	f7fe f8c7 	bl	90010714 <xQueueGenericSend>
							configASSERT( xResult );
90012586:	2800      	cmp	r0, #0
90012588:	d1ac      	bne.n	900124e4 <prvTimerTask+0x68>
9001258a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001258e:	f383 8811 	msr	BASEPRI, r3
90012592:	f3bf 8f6f 	isb	sy
90012596:	f3bf 8f4f 	dsb	sy
9001259a:	e7fe      	b.n	9001259a <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001259c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900125a0:	f043 0301 	orr.w	r3, r3, #1
900125a4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900125a8:	9b01      	ldr	r3, [sp, #4]
900125aa:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900125ac:	2b00      	cmp	r3, #0
900125ae:	f000 809e 	beq.w	900126ee <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900125b2:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900125b4:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900125b6:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900125b8:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900125ba:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900125bc:	d856      	bhi.n	9001266c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900125be:	4b53      	ldr	r3, [pc, #332]	; (9001270c <prvTimerTask+0x290>)
900125c0:	6818      	ldr	r0, [r3, #0]
900125c2:	f7fd fd17 	bl	9000fff4 <vListInsert>
	return xProcessTimerNow;
900125c6:	e78d      	b.n	900124e4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900125c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900125cc:	f023 0301 	bic.w	r3, r3, #1
900125d0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900125d4:	e786      	b.n	900124e4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900125d6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900125da:	079a      	lsls	r2, r3, #30
900125dc:	d572      	bpl.n	900126c4 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900125de:	f023 0301 	bic.w	r3, r3, #1
900125e2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
900125e6:	e77d      	b.n	900124e4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900125e8:	9b01      	ldr	r3, [sp, #4]
900125ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
900125ee:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900125f0:	9b00      	ldr	r3, [sp, #0]
900125f2:	2b00      	cmp	r3, #0
900125f4:	f6ff af76 	blt.w	900124e4 <prvTimerTask+0x68>
900125f8:	e77e      	b.n	900124f8 <prvTimerTask+0x7c>
	vTaskSuspendAll();
900125fa:	f7ff fc1f 	bl	90011e3c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900125fe:	f7ff fc35 	bl	90011e6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012602:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012604:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90012606:	4282      	cmp	r2, r0
90012608:	d909      	bls.n	9001261e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001260a:	f7ff fee9 	bl	900123e0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001260e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90012612:	f7ff fc1b 	bl	90011e4c <xTaskResumeAll>
90012616:	e765      	b.n	900124e4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90012618:	f7ff fee2 	bl	900123e0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9001261c:	e779      	b.n	90012512 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9001261e:	4b3b      	ldr	r3, [pc, #236]	; (9001270c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90012620:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90012624:	681a      	ldr	r2, [r3, #0]
90012626:	6812      	ldr	r2, [r2, #0]
90012628:	fab2 f282 	clz	r2, r2
9001262c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9001262e:	eba7 010a 	sub.w	r1, r7, sl
90012632:	6820      	ldr	r0, [r4, #0]
90012634:	f7fe ff4e 	bl	900114d4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90012638:	f7ff fc08 	bl	90011e4c <xTaskResumeAll>
9001263c:	2800      	cmp	r0, #0
9001263e:	f47f af51 	bne.w	900124e4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90012642:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90012646:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9001264a:	f3bf 8f4f 	dsb	sy
9001264e:	f3bf 8f6f 	isb	sy
90012652:	e747      	b.n	900124e4 <prvTimerTask+0x68>
90012654:	2200      	movs	r2, #0
90012656:	e7ea      	b.n	9001262e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90012658:	4543      	cmp	r3, r8
9001265a:	d902      	bls.n	90012662 <prvTimerTask+0x1e6>
9001265c:	2800      	cmp	r0, #0
9001265e:	f43f af7a 	beq.w	90012556 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012662:	1d39      	adds	r1, r7, #4
90012664:	6830      	ldr	r0, [r6, #0]
90012666:	f7fd fcc5 	bl	9000fff4 <vListInsert>
	return xProcessTimerNow;
9001266a:	e73b      	b.n	900124e4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001266c:	6830      	ldr	r0, [r6, #0]
9001266e:	f7fd fcc1 	bl	9000fff4 <vListInsert>
90012672:	e737      	b.n	900124e4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012674:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012678:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9001267c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9001267e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012680:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90012684:	d322      	bcc.n	900126cc <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012686:	ebaa 0307 	sub.w	r3, sl, r7
9001268a:	429a      	cmp	r2, r3
9001268c:	d829      	bhi.n	900126e2 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9001268e:	6823      	ldr	r3, [r4, #0]
90012690:	b17b      	cbz	r3, 900126b2 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90012692:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012694:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012696:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001269a:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001269c:	f7ff fda4 	bl	900121e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900126a0:	2300      	movs	r3, #0
900126a2:	a904      	add	r1, sp, #16
900126a4:	6820      	ldr	r0, [r4, #0]
900126a6:	461a      	mov	r2, r3
900126a8:	f7fe f834 	bl	90010714 <xQueueGenericSend>
			configASSERT( xResult );
900126ac:	2800      	cmp	r0, #0
900126ae:	f47f af15 	bne.w	900124dc <prvTimerTask+0x60>
900126b2:	f04f 0350 	mov.w	r3, #80	; 0x50
900126b6:	f383 8811 	msr	BASEPRI, r3
900126ba:	f3bf 8f6f 	isb	sy
900126be:	f3bf 8f4f 	dsb	sy
900126c2:	e7fe      	b.n	900126c2 <prvTimerTask+0x246>
							vPortFree( pxTimer );
900126c4:	4638      	mov	r0, r7
900126c6:	f7fd fc11 	bl	9000feec <vPortFree>
900126ca:	e70b      	b.n	900124e4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900126cc:	4641      	mov	r1, r8
900126ce:	6830      	ldr	r0, [r6, #0]
900126d0:	f7fd fc90 	bl	9000fff4 <vListInsert>
	return xProcessTimerNow;
900126d4:	e702      	b.n	900124dc <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900126d6:	4b0d      	ldr	r3, [pc, #52]	; (9001270c <prvTimerTask+0x290>)
900126d8:	1d39      	adds	r1, r7, #4
900126da:	6818      	ldr	r0, [r3, #0]
900126dc:	f7fd fc8a 	bl	9000fff4 <vListInsert>
	return xProcessTimerNow;
900126e0:	e700      	b.n	900124e4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900126e2:	4b0a      	ldr	r3, [pc, #40]	; (9001270c <prvTimerTask+0x290>)
900126e4:	4641      	mov	r1, r8
900126e6:	6818      	ldr	r0, [r3, #0]
900126e8:	f7fd fc84 	bl	9000fff4 <vListInsert>
	return xProcessTimerNow;
900126ec:	e6f6      	b.n	900124dc <prvTimerTask+0x60>
900126ee:	f04f 0350 	mov.w	r3, #80	; 0x50
900126f2:	f383 8811 	msr	BASEPRI, r3
900126f6:	f3bf 8f6f 	isb	sy
900126fa:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900126fe:	e7fe      	b.n	900126fe <prvTimerTask+0x282>
90012700:	24039994 	.word	0x24039994
90012704:	24039a64 	.word	0x24039a64
90012708:	24039ab8 	.word	0x24039ab8
9001270c:	24039998 	.word	0x24039998

90012710 <xTimerCreateTimerTask>:
{
90012710:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90012712:	4c23      	ldr	r4, [pc, #140]	; (900127a0 <xTimerCreateTimerTask+0x90>)
{
90012714:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90012716:	f7fd fd05 	bl	90010124 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001271a:	6825      	ldr	r5, [r4, #0]
9001271c:	b335      	cbz	r5, 9001276c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9001271e:	f7fd fd23 	bl	90010168 <vPortExitCritical>
	if( xTimerQueue != NULL )
90012722:	6823      	ldr	r3, [r4, #0]
90012724:	b1cb      	cbz	r3, 9001275a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90012726:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012728:	aa07      	add	r2, sp, #28
9001272a:	a906      	add	r1, sp, #24
9001272c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001272e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90012730:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012734:	f7fd fb0c 	bl	9000fd50 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90012738:	4623      	mov	r3, r4
9001273a:	9a07      	ldr	r2, [sp, #28]
9001273c:	9500      	str	r5, [sp, #0]
9001273e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90012742:	e9cd 1001 	strd	r1, r0, [sp, #4]
90012746:	4917      	ldr	r1, [pc, #92]	; (900127a4 <xTimerCreateTimerTask+0x94>)
90012748:	4817      	ldr	r0, [pc, #92]	; (900127a8 <xTimerCreateTimerTask+0x98>)
9001274a:	f7ff f93f 	bl	900119cc <xTaskCreateStatic>
9001274e:	4b17      	ldr	r3, [pc, #92]	; (900127ac <xTimerCreateTimerTask+0x9c>)
90012750:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90012752:	b110      	cbz	r0, 9001275a <xTimerCreateTimerTask+0x4a>
}
90012754:	2001      	movs	r0, #1
90012756:	b009      	add	sp, #36	; 0x24
90012758:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001275a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001275e:	f383 8811 	msr	BASEPRI, r3
90012762:	f3bf 8f6f 	isb	sy
90012766:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001276a:	e7fe      	b.n	9001276a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9001276c:	4f10      	ldr	r7, [pc, #64]	; (900127b0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9001276e:	4e11      	ldr	r6, [pc, #68]	; (900127b4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90012770:	4638      	mov	r0, r7
90012772:	f7fd fc1f 	bl	9000ffb4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90012776:	4630      	mov	r0, r6
90012778:	f7fd fc1c 	bl	9000ffb4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9001277c:	4a0e      	ldr	r2, [pc, #56]	; (900127b8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001277e:	9500      	str	r5, [sp, #0]
90012780:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90012782:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012784:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90012786:	4a0d      	ldr	r2, [pc, #52]	; (900127bc <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012788:	4b0d      	ldr	r3, [pc, #52]	; (900127c0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001278a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001278c:	4a0d      	ldr	r2, [pc, #52]	; (900127c4 <xTimerCreateTimerTask+0xb4>)
9001278e:	f7fd fe6b 	bl	90010468 <xQueueGenericCreateStatic>
90012792:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90012794:	2800      	cmp	r0, #0
90012796:	d0c2      	beq.n	9001271e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90012798:	490b      	ldr	r1, [pc, #44]	; (900127c8 <xTimerCreateTimerTask+0xb8>)
9001279a:	f7fe fe73 	bl	90011484 <vQueueAddToRegistry>
9001279e:	e7be      	b.n	9001271e <xTimerCreateTimerTask+0xe>
900127a0:	24039ab8 	.word	0x24039ab8
900127a4:	9002d3d8 	.word	0x9002d3d8
900127a8:	9001247d 	.word	0x9001247d
900127ac:	24039abc 	.word	0x24039abc
900127b0:	24039a3c 	.word	0x24039a3c
900127b4:	24039a50 	.word	0x24039a50
900127b8:	24039994 	.word	0x24039994
900127bc:	24039998 	.word	0x24039998
900127c0:	24039a68 	.word	0x24039a68
900127c4:	2403999c 	.word	0x2403999c
900127c8:	9002d3d0 	.word	0x9002d3d0

900127cc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900127cc:	8880      	ldrh	r0, [r0, #4]
900127ce:	4770      	bx	lr

900127d0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900127d0:	b570      	push	{r4, r5, r6, lr}
900127d2:	6803      	ldr	r3, [r0, #0]
900127d4:	460c      	mov	r4, r1
900127d6:	2100      	movs	r1, #0
900127d8:	4605      	mov	r5, r0
900127da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900127dc:	4798      	blx	r3
900127de:	4606      	mov	r6, r0
900127e0:	682b      	ldr	r3, [r5, #0]
900127e2:	4628      	mov	r0, r5
900127e4:	1ba4      	subs	r4, r4, r6
900127e6:	6a1b      	ldr	r3, [r3, #32]
900127e8:	b2a4      	uxth	r4, r4
900127ea:	4798      	blx	r3
900127ec:	fbb4 f0f0 	udiv	r0, r4, r0
900127f0:	bd70      	pop	{r4, r5, r6, pc}

900127f2 <_ZN8touchgfx17AbstractPartition5clearEv>:
900127f2:	2300      	movs	r3, #0
900127f4:	8083      	strh	r3, [r0, #4]
900127f6:	4770      	bx	lr

900127f8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
900127f8:	b510      	push	{r4, lr}
900127fa:	6803      	ldr	r3, [r0, #0]
900127fc:	4604      	mov	r4, r0
900127fe:	8881      	ldrh	r1, [r0, #4]
90012800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012802:	4798      	blx	r3
90012804:	88a3      	ldrh	r3, [r4, #4]
90012806:	3301      	adds	r3, #1
90012808:	80a3      	strh	r3, [r4, #4]
9001280a:	bd10      	pop	{r4, pc}

9001280c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9001280c:	6803      	ldr	r3, [r0, #0]
9001280e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012810:	4718      	bx	r3

90012812 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90012812:	4770      	bx	lr

90012814 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90012814:	4a02      	ldr	r2, [pc, #8]	; (90012820 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90012816:	6002      	str	r2, [r0, #0]
90012818:	2200      	movs	r2, #0
9001281a:	8082      	strh	r2, [r0, #4]
9001281c:	4770      	bx	lr
9001281e:	bf00      	nop
90012820:	9002d3e8 	.word	0x9002d3e8

90012824 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90012824:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012826:	2000      	movs	r0, #0
90012828:	b12b      	cbz	r3, 90012836 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001282a:	b920      	cbnz	r0, 90012836 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001282c:	1a5a      	subs	r2, r3, r1
9001282e:	699b      	ldr	r3, [r3, #24]
90012830:	4250      	negs	r0, r2
90012832:	4150      	adcs	r0, r2
90012834:	e7f8      	b.n	90012828 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90012836:	4770      	bx	lr

90012838 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90012838:	2300      	movs	r3, #0
9001283a:	6148      	str	r0, [r1, #20]
9001283c:	618b      	str	r3, [r1, #24]
9001283e:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012840:	b913      	cbnz	r3, 90012848 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90012842:	6281      	str	r1, [r0, #40]	; 0x28
90012844:	4770      	bx	lr
90012846:	4613      	mov	r3, r2
90012848:	699a      	ldr	r2, [r3, #24]
9001284a:	2a00      	cmp	r2, #0
9001284c:	d1fb      	bne.n	90012846 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001284e:	6199      	str	r1, [r3, #24]
90012850:	4770      	bx	lr

90012852 <_ZN8touchgfx9Container9removeAllEv>:
90012852:	2200      	movs	r2, #0
90012854:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012856:	b123      	cbz	r3, 90012862 <_ZN8touchgfx9Container9removeAllEv+0x10>
90012858:	6999      	ldr	r1, [r3, #24]
9001285a:	6281      	str	r1, [r0, #40]	; 0x28
9001285c:	e9c3 2205 	strd	r2, r2, [r3, #20]
90012860:	e7f8      	b.n	90012854 <_ZN8touchgfx9Container9removeAllEv+0x2>
90012862:	4770      	bx	lr

90012864 <_ZN8touchgfx9Container6unlinkEv>:
90012864:	2300      	movs	r3, #0
90012866:	6283      	str	r3, [r0, #40]	; 0x28
90012868:	4770      	bx	lr

9001286a <_ZNK8touchgfx9Container12getSolidRectEv>:
9001286a:	2200      	movs	r2, #0
9001286c:	8002      	strh	r2, [r0, #0]
9001286e:	8042      	strh	r2, [r0, #2]
90012870:	8082      	strh	r2, [r0, #4]
90012872:	80c2      	strh	r2, [r0, #6]
90012874:	4770      	bx	lr

90012876 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90012876:	b570      	push	{r4, r5, r6, lr}
90012878:	460d      	mov	r5, r1
9001287a:	4616      	mov	r6, r2
9001287c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001287e:	b13c      	cbz	r4, 90012890 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90012880:	6823      	ldr	r3, [r4, #0]
90012882:	4620      	mov	r0, r4
90012884:	4632      	mov	r2, r6
90012886:	4629      	mov	r1, r5
90012888:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001288a:	4798      	blx	r3
9001288c:	69a4      	ldr	r4, [r4, #24]
9001288e:	e7f6      	b.n	9001287e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90012890:	bd70      	pop	{r4, r5, r6, pc}

90012892 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90012892:	b538      	push	{r3, r4, r5, lr}
90012894:	460d      	mov	r5, r1
90012896:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012898:	b134      	cbz	r4, 900128a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001289a:	682b      	ldr	r3, [r5, #0]
9001289c:	4621      	mov	r1, r4
9001289e:	4628      	mov	r0, r5
900128a0:	689b      	ldr	r3, [r3, #8]
900128a2:	4798      	blx	r3
900128a4:	69a4      	ldr	r4, [r4, #24]
900128a6:	e7f7      	b.n	90012898 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900128a8:	bd38      	pop	{r3, r4, r5, pc}

900128aa <_ZN8touchgfx9ContainerD1Ev>:
900128aa:	4770      	bx	lr

900128ac <_ZN8touchgfx9ContainerD0Ev>:
900128ac:	b510      	push	{r4, lr}
900128ae:	4604      	mov	r4, r0
900128b0:	212c      	movs	r1, #44	; 0x2c
900128b2:	f016 fd57 	bl	90029364 <_ZdlPvj>
900128b6:	4620      	mov	r0, r4
900128b8:	bd10      	pop	{r4, pc}

900128ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900128ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
900128bc:	b19b      	cbz	r3, 900128e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900128be:	428b      	cmp	r3, r1
900128c0:	d109      	bne.n	900128d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900128c2:	699a      	ldr	r2, [r3, #24]
900128c4:	2100      	movs	r1, #0
900128c6:	6159      	str	r1, [r3, #20]
900128c8:	6282      	str	r2, [r0, #40]	; 0x28
900128ca:	b902      	cbnz	r2, 900128ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900128cc:	4770      	bx	lr
900128ce:	6199      	str	r1, [r3, #24]
900128d0:	4770      	bx	lr
900128d2:	4613      	mov	r3, r2
900128d4:	b13a      	cbz	r2, 900128e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900128d6:	699a      	ldr	r2, [r3, #24]
900128d8:	428a      	cmp	r2, r1
900128da:	d1fa      	bne.n	900128d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900128dc:	698a      	ldr	r2, [r1, #24]
900128de:	619a      	str	r2, [r3, #24]
900128e0:	2300      	movs	r3, #0
900128e2:	e9c1 3305 	strd	r3, r3, [r1, #20]
900128e6:	4770      	bx	lr

900128e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900128e8:	b410      	push	{r4}
900128ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
900128ec:	4604      	mov	r4, r0
900128ee:	b92b      	cbnz	r3, 900128fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
900128f0:	6803      	ldr	r3, [r0, #0]
900128f2:	4611      	mov	r1, r2
900128f4:	f85d 4b04 	ldr.w	r4, [sp], #4
900128f8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900128fa:	4718      	bx	r3
900128fc:	b941      	cbnz	r1, 90012910 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
900128fe:	6193      	str	r3, [r2, #24]
90012900:	6282      	str	r2, [r0, #40]	; 0x28
90012902:	6154      	str	r4, [r2, #20]
90012904:	f85d 4b04 	ldr.w	r4, [sp], #4
90012908:	4770      	bx	lr
9001290a:	4603      	mov	r3, r0
9001290c:	2800      	cmp	r0, #0
9001290e:	d0f9      	beq.n	90012904 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90012910:	4299      	cmp	r1, r3
90012912:	6998      	ldr	r0, [r3, #24]
90012914:	d1f9      	bne.n	9001290a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90012916:	6190      	str	r0, [r2, #24]
90012918:	618a      	str	r2, [r1, #24]
9001291a:	e7f2      	b.n	90012902 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9001291c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9001291c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012920:	461f      	mov	r7, r3
90012922:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90012926:	460d      	mov	r5, r1
90012928:	4616      	mov	r6, r2
9001292a:	b103      	cbz	r3, 9001292e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9001292c:	6038      	str	r0, [r7, #0]
9001292e:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012930:	b314      	cbz	r4, 90012978 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90012932:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012936:	b1eb      	cbz	r3, 90012974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012938:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001293c:	428d      	cmp	r5, r1
9001293e:	db19      	blt.n	90012974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012940:	b289      	uxth	r1, r1
90012942:	8923      	ldrh	r3, [r4, #8]
90012944:	440b      	add	r3, r1
90012946:	b21b      	sxth	r3, r3
90012948:	429d      	cmp	r5, r3
9001294a:	da13      	bge.n	90012974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001294c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90012950:	4296      	cmp	r6, r2
90012952:	db0f      	blt.n	90012974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012954:	b292      	uxth	r2, r2
90012956:	8963      	ldrh	r3, [r4, #10]
90012958:	4413      	add	r3, r2
9001295a:	b21b      	sxth	r3, r3
9001295c:	429e      	cmp	r6, r3
9001295e:	da09      	bge.n	90012974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012960:	6823      	ldr	r3, [r4, #0]
90012962:	1ab2      	subs	r2, r6, r2
90012964:	1a69      	subs	r1, r5, r1
90012966:	4620      	mov	r0, r4
90012968:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9001296c:	b212      	sxth	r2, r2
9001296e:	463b      	mov	r3, r7
90012970:	b209      	sxth	r1, r1
90012972:	47c0      	blx	r8
90012974:	69a4      	ldr	r4, [r4, #24]
90012976:	e7db      	b.n	90012930 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90012978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001297c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9001297c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012980:	4c6d      	ldr	r4, [pc, #436]	; (90012b38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90012982:	b0a1      	sub	sp, #132	; 0x84
90012984:	4606      	mov	r6, r0
90012986:	6824      	ldr	r4, [r4, #0]
90012988:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001298a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9001298e:	2400      	movs	r4, #0
90012990:	9303      	str	r3, [sp, #12]
90012992:	802c      	strh	r4, [r5, #0]
90012994:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90012996:	802c      	strh	r4, [r5, #0]
90012998:	601c      	str	r4, [r3, #0]
9001299a:	e9cd 1201 	strd	r1, r2, [sp, #4]
9001299e:	f7ff ffbd 	bl	9001291c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900129a2:	f1b9 0f03 	cmp.w	r9, #3
900129a6:	f340 80c1 	ble.w	90012b2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900129aa:	4631      	mov	r1, r6
900129ac:	a80c      	add	r0, sp, #48	; 0x30
900129ae:	f006 fcd7 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900129b2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
900129b6:	9306      	str	r3, [sp, #24]
900129b8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900129bc:	9307      	str	r3, [sp, #28]
900129be:	9b03      	ldr	r3, [sp, #12]
900129c0:	f8d3 a000 	ldr.w	sl, [r3]
900129c4:	f1ba 0f00 	cmp.w	sl, #0
900129c8:	f000 80b3 	beq.w	90012b32 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
900129cc:	4651      	mov	r1, sl
900129ce:	a810      	add	r0, sp, #64	; 0x40
900129d0:	f006 fcc6 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900129d4:	2002      	movs	r0, #2
900129d6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
900129da:	9b01      	ldr	r3, [sp, #4]
900129dc:	9a06      	ldr	r2, [sp, #24]
900129de:	fb91 f1f0 	sdiv	r1, r1, r0
900129e2:	189d      	adds	r5, r3, r2
900129e4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
900129e8:	9a07      	ldr	r2, [sp, #28]
900129ea:	4419      	add	r1, r3
900129ec:	9b02      	ldr	r3, [sp, #8]
900129ee:	4413      	add	r3, r2
900129f0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
900129f4:	1a6d      	subs	r5, r5, r1
900129f6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
900129fa:	fb92 f2f0 	sdiv	r2, r2, r0
900129fe:	440a      	add	r2, r1
90012a00:	1a9b      	subs	r3, r3, r2
90012a02:	435b      	muls	r3, r3
90012a04:	fb05 3505 	mla	r5, r5, r5, r3
90012a08:	4f4c      	ldr	r7, [pc, #304]	; (90012b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90012a0a:	ac10      	add	r4, sp, #64	; 0x40
90012a0c:	f1b9 0f0c 	cmp.w	r9, #12
90012a10:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012a12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012a14:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012a16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012a18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012a1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012a1c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90012a20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012a24:	f04f 0303 	mov.w	r3, #3
90012a28:	bfd8      	it	le
90012a2a:	f109 32ff 	addle.w	r2, r9, #4294967295
90012a2e:	f04f 0400 	mov.w	r4, #0
90012a32:	f8cd 9000 	str.w	r9, [sp]
90012a36:	bfcc      	ite	gt
90012a38:	4698      	movgt	r8, r3
90012a3a:	fb92 f8f3 	sdivle	r8, r2, r3
90012a3e:	1c63      	adds	r3, r4, #1
90012a40:	aa10      	add	r2, sp, #64	; 0x40
90012a42:	f004 0401 	and.w	r4, r4, #1
90012a46:	f04f 0b00 	mov.w	fp, #0
90012a4a:	9308      	str	r3, [sp, #32]
90012a4c:	9b00      	ldr	r3, [sp, #0]
90012a4e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90012a52:	fb93 f3f8 	sdiv	r3, r3, r8
90012a56:	3404      	adds	r4, #4
90012a58:	b29b      	uxth	r3, r3
90012a5a:	9304      	str	r3, [sp, #16]
90012a5c:	9a04      	ldr	r2, [sp, #16]
90012a5e:	f854 3c04 	ldr.w	r3, [r4, #-4]
90012a62:	fb13 f302 	smulbb	r3, r3, r2
90012a66:	9a01      	ldr	r2, [sp, #4]
90012a68:	b29b      	uxth	r3, r3
90012a6a:	1899      	adds	r1, r3, r2
90012a6c:	9305      	str	r3, [sp, #20]
90012a6e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90012a72:	b209      	sxth	r1, r1
90012a74:	4299      	cmp	r1, r3
90012a76:	db4d      	blt.n	90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012a78:	8932      	ldrh	r2, [r6, #8]
90012a7a:	4413      	add	r3, r2
90012a7c:	b21b      	sxth	r3, r3
90012a7e:	4299      	cmp	r1, r3
90012a80:	da48      	bge.n	90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012a82:	9b04      	ldr	r3, [sp, #16]
90012a84:	6827      	ldr	r7, [r4, #0]
90012a86:	fb17 f703 	smulbb	r7, r7, r3
90012a8a:	9b02      	ldr	r3, [sp, #8]
90012a8c:	b2bf      	uxth	r7, r7
90012a8e:	18fa      	adds	r2, r7, r3
90012a90:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012a94:	b212      	sxth	r2, r2
90012a96:	429a      	cmp	r2, r3
90012a98:	db3c      	blt.n	90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012a9a:	8970      	ldrh	r0, [r6, #10]
90012a9c:	4403      	add	r3, r0
90012a9e:	b21b      	sxth	r3, r3
90012aa0:	429a      	cmp	r2, r3
90012aa2:	da37      	bge.n	90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012aa4:	2300      	movs	r3, #0
90012aa6:	4630      	mov	r0, r6
90012aa8:	930b      	str	r3, [sp, #44]	; 0x2c
90012aaa:	ab0b      	add	r3, sp, #44	; 0x2c
90012aac:	f7ff ff36 	bl	9001291c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90012ab0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90012ab2:	b37a      	cbz	r2, 90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012ab4:	4552      	cmp	r2, sl
90012ab6:	d02d      	beq.n	90012b14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012ab8:	4611      	mov	r1, r2
90012aba:	a80e      	add	r0, sp, #56	; 0x38
90012abc:	9209      	str	r2, [sp, #36]	; 0x24
90012abe:	f006 fc4f 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012ac2:	f04f 0e02 	mov.w	lr, #2
90012ac6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90012aca:	9a06      	ldr	r2, [sp, #24]
90012acc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90012ad0:	9b01      	ldr	r3, [sp, #4]
90012ad2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90012ad6:	4413      	add	r3, r2
90012ad8:	9a07      	ldr	r2, [sp, #28]
90012ada:	fb91 f1fe 	sdiv	r1, r1, lr
90012ade:	fb9c fcfe 	sdiv	ip, ip, lr
90012ae2:	4401      	add	r1, r0
90012ae4:	1a58      	subs	r0, r3, r1
90012ae6:	9b02      	ldr	r3, [sp, #8]
90012ae8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90012aec:	4413      	add	r3, r2
90012aee:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012af0:	448c      	add	ip, r1
90012af2:	eba3 030c 	sub.w	r3, r3, ip
90012af6:	435b      	muls	r3, r3
90012af8:	fb00 3300 	mla	r3, r0, r0, r3
90012afc:	42ab      	cmp	r3, r5
90012afe:	d208      	bcs.n	90012b12 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90012b00:	990b      	ldr	r1, [sp, #44]	; 0x2c
90012b02:	461d      	mov	r5, r3
90012b04:	9803      	ldr	r0, [sp, #12]
90012b06:	6001      	str	r1, [r0, #0]
90012b08:	992a      	ldr	r1, [sp, #168]	; 0xa8
90012b0a:	9805      	ldr	r0, [sp, #20]
90012b0c:	8008      	strh	r0, [r1, #0]
90012b0e:	992b      	ldr	r1, [sp, #172]	; 0xac
90012b10:	800f      	strh	r7, [r1, #0]
90012b12:	4692      	mov	sl, r2
90012b14:	f10b 0b01 	add.w	fp, fp, #1
90012b18:	3408      	adds	r4, #8
90012b1a:	f1bb 0f04 	cmp.w	fp, #4
90012b1e:	d19d      	bne.n	90012a5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90012b20:	9b00      	ldr	r3, [sp, #0]
90012b22:	9c08      	ldr	r4, [sp, #32]
90012b24:	444b      	add	r3, r9
90012b26:	4544      	cmp	r4, r8
90012b28:	9300      	str	r3, [sp, #0]
90012b2a:	d188      	bne.n	90012a3e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90012b2c:	b021      	add	sp, #132	; 0x84
90012b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012b32:	f04f 35ff 	mov.w	r5, #4294967295
90012b36:	e767      	b.n	90012a08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90012b38:	24039acc 	.word	0x24039acc
90012b3c:	9002a440 	.word	0x9002a440

90012b40 <_ZN8touchgfx4RectaNERKS0_>:
90012b40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012b44:	f9b1 7000 	ldrsh.w	r7, [r1]
90012b48:	888c      	ldrh	r4, [r1, #4]
90012b4a:	f9b0 9000 	ldrsh.w	r9, [r0]
90012b4e:	443c      	add	r4, r7
90012b50:	b2a4      	uxth	r4, r4
90012b52:	fa0f f884 	sxth.w	r8, r4
90012b56:	45c1      	cmp	r9, r8
90012b58:	da2f      	bge.n	90012bba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012b5a:	8882      	ldrh	r2, [r0, #4]
90012b5c:	444a      	add	r2, r9
90012b5e:	b292      	uxth	r2, r2
90012b60:	fa0f fe82 	sxth.w	lr, r2
90012b64:	4577      	cmp	r7, lr
90012b66:	da28      	bge.n	90012bba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012b68:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90012b6c:	88cb      	ldrh	r3, [r1, #6]
90012b6e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90012b72:	442b      	add	r3, r5
90012b74:	b21b      	sxth	r3, r3
90012b76:	429e      	cmp	r6, r3
90012b78:	da1f      	bge.n	90012bba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012b7a:	88c3      	ldrh	r3, [r0, #6]
90012b7c:	4433      	add	r3, r6
90012b7e:	b29b      	uxth	r3, r3
90012b80:	fa0f fc83 	sxth.w	ip, r3
90012b84:	4565      	cmp	r5, ip
90012b86:	da18      	bge.n	90012bba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012b88:	454f      	cmp	r7, r9
90012b8a:	bfb8      	it	lt
90012b8c:	464f      	movlt	r7, r9
90012b8e:	42b5      	cmp	r5, r6
90012b90:	bfb8      	it	lt
90012b92:	4635      	movlt	r5, r6
90012b94:	45f0      	cmp	r8, lr
90012b96:	bfd8      	it	le
90012b98:	4622      	movle	r2, r4
90012b9a:	1bd2      	subs	r2, r2, r7
90012b9c:	8082      	strh	r2, [r0, #4]
90012b9e:	884a      	ldrh	r2, [r1, #2]
90012ba0:	88c9      	ldrh	r1, [r1, #6]
90012ba2:	8007      	strh	r7, [r0, #0]
90012ba4:	440a      	add	r2, r1
90012ba6:	8045      	strh	r5, [r0, #2]
90012ba8:	b292      	uxth	r2, r2
90012baa:	b211      	sxth	r1, r2
90012bac:	458c      	cmp	ip, r1
90012bae:	bfa8      	it	ge
90012bb0:	4613      	movge	r3, r2
90012bb2:	1b5b      	subs	r3, r3, r5
90012bb4:	80c3      	strh	r3, [r0, #6]
90012bb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012bba:	2300      	movs	r3, #0
90012bbc:	8003      	strh	r3, [r0, #0]
90012bbe:	8043      	strh	r3, [r0, #2]
90012bc0:	8083      	strh	r3, [r0, #4]
90012bc2:	80c3      	strh	r3, [r0, #6]
90012bc4:	e7f7      	b.n	90012bb6 <_ZN8touchgfx4RectaNERKS0_+0x76>

90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>:
90012bc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90012bca:	2b00      	cmp	r3, #0
90012bcc:	dd06      	ble.n	90012bdc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90012bce:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90012bd2:	2800      	cmp	r0, #0
90012bd4:	bfcc      	ite	gt
90012bd6:	2000      	movgt	r0, #0
90012bd8:	2001      	movle	r0, #1
90012bda:	4770      	bx	lr
90012bdc:	2001      	movs	r0, #1
90012bde:	4770      	bx	lr

90012be0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90012be0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012be4:	2300      	movs	r3, #0
90012be6:	4604      	mov	r4, r0
90012be8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90012bea:	8003      	strh	r3, [r0, #0]
90012bec:	8043      	strh	r3, [r0, #2]
90012bee:	8083      	strh	r3, [r0, #4]
90012bf0:	80c3      	strh	r3, [r0, #6]
90012bf2:	2d00      	cmp	r5, #0
90012bf4:	d040      	beq.n	90012c78 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90012bf6:	1d28      	adds	r0, r5, #4
90012bf8:	f7ff ffe5 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012bfc:	b988      	cbnz	r0, 90012c22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012bfe:	4620      	mov	r0, r4
90012c00:	f7ff ffe1 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012c04:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90012c08:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90012c0c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90012c10:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90012c14:	b138      	cbz	r0, 90012c26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90012c16:	8022      	strh	r2, [r4, #0]
90012c18:	8063      	strh	r3, [r4, #2]
90012c1a:	f8a4 e004 	strh.w	lr, [r4, #4]
90012c1e:	f8a4 c006 	strh.w	ip, [r4, #6]
90012c22:	69ad      	ldr	r5, [r5, #24]
90012c24:	e7e5      	b.n	90012bf2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90012c26:	f9b4 0000 	ldrsh.w	r0, [r4]
90012c2a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90012c2e:	4290      	cmp	r0, r2
90012c30:	4607      	mov	r7, r0
90012c32:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90012c36:	460e      	mov	r6, r1
90012c38:	bfa8      	it	ge
90012c3a:	4617      	movge	r7, r2
90012c3c:	4299      	cmp	r1, r3
90012c3e:	4472      	add	r2, lr
90012c40:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90012c44:	bfa8      	it	ge
90012c46:	461e      	movge	r6, r3
90012c48:	4440      	add	r0, r8
90012c4a:	4471      	add	r1, lr
90012c4c:	4463      	add	r3, ip
90012c4e:	b200      	sxth	r0, r0
90012c50:	8027      	strh	r7, [r4, #0]
90012c52:	b212      	sxth	r2, r2
90012c54:	8066      	strh	r6, [r4, #2]
90012c56:	b209      	sxth	r1, r1
90012c58:	b21b      	sxth	r3, r3
90012c5a:	4290      	cmp	r0, r2
90012c5c:	bfac      	ite	ge
90012c5e:	ebc7 0200 	rsbge	r2, r7, r0
90012c62:	ebc7 0202 	rsblt	r2, r7, r2
90012c66:	4299      	cmp	r1, r3
90012c68:	bfac      	ite	ge
90012c6a:	ebc6 0301 	rsbge	r3, r6, r1
90012c6e:	ebc6 0303 	rsblt	r3, r6, r3
90012c72:	80a2      	strh	r2, [r4, #4]
90012c74:	80e3      	strh	r3, [r4, #6]
90012c76:	e7d4      	b.n	90012c22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012c78:	4620      	mov	r0, r4
90012c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012c7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90012c7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90012c82:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012c86:	b383      	cbz	r3, 90012cea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012c88:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012c8a:	b374      	cbz	r4, 90012cea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012c8c:	f9b1 5000 	ldrsh.w	r5, [r1]
90012c90:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90012c94:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90012c98:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90012c9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012ca0:	b303      	cbz	r3, 90012ce4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012ca2:	4668      	mov	r0, sp
90012ca4:	1d21      	adds	r1, r4, #4
90012ca6:	f8ad 5000 	strh.w	r5, [sp]
90012caa:	f8ad 6002 	strh.w	r6, [sp, #2]
90012cae:	f8ad 7004 	strh.w	r7, [sp, #4]
90012cb2:	f8ad 8006 	strh.w	r8, [sp, #6]
90012cb6:	f7ff ff43 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90012cba:	4668      	mov	r0, sp
90012cbc:	f7ff ff83 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012cc0:	b980      	cbnz	r0, 90012ce4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012cc2:	f8bd 3000 	ldrh.w	r3, [sp]
90012cc6:	4669      	mov	r1, sp
90012cc8:	88a2      	ldrh	r2, [r4, #4]
90012cca:	4620      	mov	r0, r4
90012ccc:	1a9b      	subs	r3, r3, r2
90012cce:	88e2      	ldrh	r2, [r4, #6]
90012cd0:	f8ad 3000 	strh.w	r3, [sp]
90012cd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012cd8:	1a9b      	subs	r3, r3, r2
90012cda:	f8ad 3002 	strh.w	r3, [sp, #2]
90012cde:	6823      	ldr	r3, [r4, #0]
90012ce0:	689b      	ldr	r3, [r3, #8]
90012ce2:	4798      	blx	r3
90012ce4:	69a4      	ldr	r4, [r4, #24]
90012ce6:	2c00      	cmp	r4, #0
90012ce8:	d1d8      	bne.n	90012c9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90012cea:	b002      	add	sp, #8
90012cec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012cf0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90012cf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012cf2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012cf6:	460d      	mov	r5, r1
90012cf8:	4616      	mov	r6, r2
90012cfa:	b323      	cbz	r3, 90012d46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012cfc:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012cfe:	b314      	cbz	r4, 90012d46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012d00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012d04:	b1eb      	cbz	r3, 90012d42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012d06:	6828      	ldr	r0, [r5, #0]
90012d08:	466b      	mov	r3, sp
90012d0a:	6869      	ldr	r1, [r5, #4]
90012d0c:	c303      	stmia	r3!, {r0, r1}
90012d0e:	4668      	mov	r0, sp
90012d10:	1d21      	adds	r1, r4, #4
90012d12:	f7ff ff15 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90012d16:	4668      	mov	r0, sp
90012d18:	f7ff ff55 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012d1c:	b988      	cbnz	r0, 90012d42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012d1e:	f8bd 3000 	ldrh.w	r3, [sp]
90012d22:	4669      	mov	r1, sp
90012d24:	88a2      	ldrh	r2, [r4, #4]
90012d26:	4620      	mov	r0, r4
90012d28:	1a9b      	subs	r3, r3, r2
90012d2a:	88e2      	ldrh	r2, [r4, #6]
90012d2c:	f8ad 3000 	strh.w	r3, [sp]
90012d30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012d34:	1a9b      	subs	r3, r3, r2
90012d36:	4632      	mov	r2, r6
90012d38:	f8ad 3002 	strh.w	r3, [sp, #2]
90012d3c:	6823      	ldr	r3, [r4, #0]
90012d3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90012d40:	4798      	blx	r3
90012d42:	69a4      	ldr	r4, [r4, #24]
90012d44:	e7db      	b.n	90012cfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90012d46:	b002      	add	sp, #8
90012d48:	bd70      	pop	{r4, r5, r6, pc}

90012d4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90012d4a:	6803      	ldr	r3, [r0, #0]
90012d4c:	b513      	push	{r0, r1, r4, lr}
90012d4e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90012d52:	2300      	movs	r3, #0
90012d54:	e9cd 3300 	strd	r3, r3, [sp]
90012d58:	466b      	mov	r3, sp
90012d5a:	47a0      	blx	r4
90012d5c:	b002      	add	sp, #8
90012d5e:	bd10      	pop	{r4, pc}

90012d60 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90012d60:	2301      	movs	r3, #1
90012d62:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012d66:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012d6a:	4770      	bx	lr

90012d6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90012d6c:	2301      	movs	r3, #1
90012d6e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012d72:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012d76:	4770      	bx	lr

90012d78 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90012d78:	6843      	ldr	r3, [r0, #4]
90012d7a:	2201      	movs	r2, #1
90012d7c:	725a      	strb	r2, [r3, #9]
90012d7e:	6840      	ldr	r0, [r0, #4]
90012d80:	6803      	ldr	r3, [r0, #0]
90012d82:	691b      	ldr	r3, [r3, #16]
90012d84:	4718      	bx	r3

90012d86 <_ZN8touchgfx3HAL8flushDMAEv>:
90012d86:	6840      	ldr	r0, [r0, #4]
90012d88:	6803      	ldr	r3, [r0, #0]
90012d8a:	689b      	ldr	r3, [r3, #8]
90012d8c:	4718      	bx	r3

90012d8e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90012d8e:	b530      	push	{r4, r5, lr}
90012d90:	b08b      	sub	sp, #44	; 0x2c
90012d92:	6804      	ldr	r4, [r0, #0]
90012d94:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90012d98:	9509      	str	r5, [sp, #36]	; 0x24
90012d9a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90012d9e:	9508      	str	r5, [sp, #32]
90012da0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90012da4:	9507      	str	r5, [sp, #28]
90012da6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90012daa:	9506      	str	r5, [sp, #24]
90012dac:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90012db0:	9505      	str	r5, [sp, #20]
90012db2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90012db6:	9504      	str	r5, [sp, #16]
90012db8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90012dbc:	9503      	str	r5, [sp, #12]
90012dbe:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90012dc2:	9502      	str	r5, [sp, #8]
90012dc4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90012dc8:	e9cd 3500 	strd	r3, r5, [sp]
90012dcc:	4613      	mov	r3, r2
90012dce:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90012dd0:	2200      	movs	r2, #0
90012dd2:	47a0      	blx	r4
90012dd4:	b00b      	add	sp, #44	; 0x2c
90012dd6:	bd30      	pop	{r4, r5, pc}

90012dd8 <_ZN8touchgfx3HAL10beginFrameEv>:
90012dd8:	4b04      	ldr	r3, [pc, #16]	; (90012dec <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90012dda:	781b      	ldrb	r3, [r3, #0]
90012ddc:	b123      	cbz	r3, 90012de8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90012dde:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90012de2:	f080 0001 	eor.w	r0, r0, #1
90012de6:	4770      	bx	lr
90012de8:	2001      	movs	r0, #1
90012dea:	4770      	bx	lr
90012dec:	24039aca 	.word	0x24039aca

90012df0 <_ZN8touchgfx3HAL8endFrameEv>:
90012df0:	b510      	push	{r4, lr}
90012df2:	4604      	mov	r4, r0
90012df4:	6840      	ldr	r0, [r0, #4]
90012df6:	6803      	ldr	r3, [r0, #0]
90012df8:	689b      	ldr	r3, [r3, #8]
90012dfa:	4798      	blx	r3
90012dfc:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90012e00:	b113      	cbz	r3, 90012e08 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90012e02:	2301      	movs	r3, #1
90012e04:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90012e08:	bd10      	pop	{r4, pc}

90012e0a <_ZN8touchgfx3HAL10initializeEv>:
90012e0a:	b510      	push	{r4, lr}
90012e0c:	4604      	mov	r4, r0
90012e0e:	f7ee fd11 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90012e12:	f7ed fb75 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90012e16:	6860      	ldr	r0, [r4, #4]
90012e18:	6803      	ldr	r3, [r0, #0]
90012e1a:	68db      	ldr	r3, [r3, #12]
90012e1c:	4798      	blx	r3
90012e1e:	68e0      	ldr	r0, [r4, #12]
90012e20:	6803      	ldr	r3, [r0, #0]
90012e22:	689b      	ldr	r3, [r3, #8]
90012e24:	4798      	blx	r3
90012e26:	6823      	ldr	r3, [r4, #0]
90012e28:	4620      	mov	r0, r4
90012e2a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90012e2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012e30:	4718      	bx	r3
	...

90012e34 <_ZN8touchgfx3HAL4tickEv>:
90012e34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012e36:	6803      	ldr	r3, [r0, #0]
90012e38:	4604      	mov	r4, r0
90012e3a:	4d5b      	ldr	r5, [pc, #364]	; (90012fa8 <_ZN8touchgfx3HAL4tickEv+0x174>)
90012e3c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90012e40:	4798      	blx	r3
90012e42:	2800      	cmp	r0, #0
90012e44:	f000 8095 	beq.w	90012f72 <_ZN8touchgfx3HAL4tickEv+0x13e>
90012e48:	2001      	movs	r0, #1
90012e4a:	2600      	movs	r6, #0
90012e4c:	f7ed fb82 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012e50:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90012e54:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90012e58:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90012e5c:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90012e60:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90012e64:	b133      	cbz	r3, 90012e74 <_ZN8touchgfx3HAL4tickEv+0x40>
90012e66:	6823      	ldr	r3, [r4, #0]
90012e68:	4620      	mov	r0, r4
90012e6a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90012e6e:	4798      	blx	r3
90012e70:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90012e74:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90012e78:	2601      	movs	r6, #1
90012e7a:	6862      	ldr	r2, [r4, #4]
90012e7c:	f083 0301 	eor.w	r3, r3, #1
90012e80:	702e      	strb	r6, [r5, #0]
90012e82:	7253      	strb	r3, [r2, #9]
90012e84:	f005 f930 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90012e88:	6803      	ldr	r3, [r0, #0]
90012e8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90012e8c:	4798      	blx	r3
90012e8e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90012e92:	b90b      	cbnz	r3, 90012e98 <_ZN8touchgfx3HAL4tickEv+0x64>
90012e94:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90012e98:	f005 f926 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90012e9c:	6803      	ldr	r3, [r0, #0]
90012e9e:	695b      	ldr	r3, [r3, #20]
90012ea0:	4798      	blx	r3
90012ea2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90012ea4:	6803      	ldr	r3, [r0, #0]
90012ea6:	691b      	ldr	r3, [r3, #16]
90012ea8:	4798      	blx	r3
90012eaa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90012eae:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90012eb2:	3b01      	subs	r3, #1
90012eb4:	b2db      	uxtb	r3, r3
90012eb6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90012eba:	b10a      	cbz	r2, 90012ec0 <_ZN8touchgfx3HAL4tickEv+0x8c>
90012ebc:	2b00      	cmp	r3, #0
90012ebe:	d1eb      	bne.n	90012e98 <_ZN8touchgfx3HAL4tickEv+0x64>
90012ec0:	4a3a      	ldr	r2, [pc, #232]	; (90012fac <_ZN8touchgfx3HAL4tickEv+0x178>)
90012ec2:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90012ec6:	7813      	ldrb	r3, [r2, #0]
90012ec8:	3301      	adds	r3, #1
90012eca:	b25b      	sxtb	r3, r3
90012ecc:	4299      	cmp	r1, r3
90012ece:	7013      	strb	r3, [r2, #0]
90012ed0:	dc10      	bgt.n	90012ef4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90012ed2:	2300      	movs	r3, #0
90012ed4:	68e0      	ldr	r0, [r4, #12]
90012ed6:	a902      	add	r1, sp, #8
90012ed8:	7013      	strb	r3, [r2, #0]
90012eda:	aa03      	add	r2, sp, #12
90012edc:	6803      	ldr	r3, [r0, #0]
90012ede:	68db      	ldr	r3, [r3, #12]
90012ee0:	4798      	blx	r3
90012ee2:	6823      	ldr	r3, [r4, #0]
90012ee4:	2800      	cmp	r0, #0
90012ee6:	d050      	beq.n	90012f8a <_ZN8touchgfx3HAL4tickEv+0x156>
90012ee8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90012eec:	4620      	mov	r0, r4
90012eee:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90012ef2:	4798      	blx	r3
90012ef4:	2300      	movs	r3, #0
90012ef6:	6960      	ldr	r0, [r4, #20]
90012ef8:	f88d 3007 	strb.w	r3, [sp, #7]
90012efc:	b158      	cbz	r0, 90012f16 <_ZN8touchgfx3HAL4tickEv+0xe2>
90012efe:	6803      	ldr	r3, [r0, #0]
90012f00:	f10d 0107 	add.w	r1, sp, #7
90012f04:	68db      	ldr	r3, [r3, #12]
90012f06:	4798      	blx	r3
90012f08:	b128      	cbz	r0, 90012f16 <_ZN8touchgfx3HAL4tickEv+0xe2>
90012f0a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90012f0c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90012f10:	6803      	ldr	r3, [r0, #0]
90012f12:	68db      	ldr	r3, [r3, #12]
90012f14:	4798      	blx	r3
90012f16:	f104 001c 	add.w	r0, r4, #28
90012f1a:	f015 fe27 	bl	90028b6c <_ZN8touchgfx8Gestures4tickEv>
90012f1e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90012f22:	b30b      	cbz	r3, 90012f68 <_ZN8touchgfx3HAL4tickEv+0x134>
90012f24:	6920      	ldr	r0, [r4, #16]
90012f26:	6803      	ldr	r3, [r0, #0]
90012f28:	691b      	ldr	r3, [r3, #16]
90012f2a:	4798      	blx	r3
90012f2c:	6f63      	ldr	r3, [r4, #116]	; 0x74
90012f2e:	4606      	mov	r6, r0
90012f30:	b903      	cbnz	r3, 90012f34 <_ZN8touchgfx3HAL4tickEv+0x100>
90012f32:	6760      	str	r0, [r4, #116]	; 0x74
90012f34:	6f63      	ldr	r3, [r4, #116]	; 0x74
90012f36:	4a1e      	ldr	r2, [pc, #120]	; (90012fb0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90012f38:	1af3      	subs	r3, r6, r3
90012f3a:	4293      	cmp	r3, r2
90012f3c:	d914      	bls.n	90012f68 <_ZN8touchgfx3HAL4tickEv+0x134>
90012f3e:	6920      	ldr	r0, [r4, #16]
90012f40:	6803      	ldr	r3, [r0, #0]
90012f42:	699b      	ldr	r3, [r3, #24]
90012f44:	4798      	blx	r3
90012f46:	6f63      	ldr	r3, [r4, #116]	; 0x74
90012f48:	2264      	movs	r2, #100	; 0x64
90012f4a:	1af3      	subs	r3, r6, r3
90012f4c:	fbb3 f3f2 	udiv	r3, r3, r2
90012f50:	fbb0 f0f3 	udiv	r0, r0, r3
90012f54:	2800      	cmp	r0, #0
90012f56:	dc1d      	bgt.n	90012f94 <_ZN8touchgfx3HAL4tickEv+0x160>
90012f58:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
90012f5c:	6920      	ldr	r0, [r4, #16]
90012f5e:	2100      	movs	r1, #0
90012f60:	6803      	ldr	r3, [r0, #0]
90012f62:	69db      	ldr	r3, [r3, #28]
90012f64:	4798      	blx	r3
90012f66:	6766      	str	r6, [r4, #116]	; 0x74
90012f68:	f005 f8be 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90012f6c:	6803      	ldr	r3, [r0, #0]
90012f6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012f70:	4798      	blx	r3
90012f72:	6823      	ldr	r3, [r4, #0]
90012f74:	4620      	mov	r0, r4
90012f76:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90012f7a:	4798      	blx	r3
90012f7c:	2001      	movs	r0, #1
90012f7e:	f7ed fb1d 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012f82:	2300      	movs	r3, #0
90012f84:	702b      	strb	r3, [r5, #0]
90012f86:	b004      	add	sp, #16
90012f88:	bd70      	pop	{r4, r5, r6, pc}
90012f8a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90012f8e:	4620      	mov	r0, r4
90012f90:	4798      	blx	r3
90012f92:	e7af      	b.n	90012ef4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90012f94:	2863      	cmp	r0, #99	; 0x63
90012f96:	bfcb      	itete	gt
90012f98:	2300      	movgt	r3, #0
90012f9a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90012f9e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
90012fa2:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
90012fa6:	e7d9      	b.n	90012f5c <_ZN8touchgfx3HAL4tickEv+0x128>
90012fa8:	24039ad0 	.word	0x24039ad0
90012fac:	24039ad1 	.word	0x24039ad1
90012fb0:	05f5e100 	.word	0x05f5e100

90012fb4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90012fb4:	b510      	push	{r4, lr}
90012fb6:	4604      	mov	r4, r0
90012fb8:	f7ee fc6e 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90012fbc:	2200      	movs	r2, #0
90012fbe:	6863      	ldr	r3, [r4, #4]
90012fc0:	729a      	strb	r2, [r3, #10]
90012fc2:	bd10      	pop	{r4, pc}

90012fc4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90012fc4:	65c1      	str	r1, [r0, #92]	; 0x5c
90012fc6:	301c      	adds	r0, #28
90012fc8:	f015 bdce 	b.w	90028b68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90012fcc <_ZN8touchgfx3HAL5touchEll>:
90012fcc:	b530      	push	{r4, r5, lr}
90012fce:	b087      	sub	sp, #28
90012fd0:	4604      	mov	r4, r0
90012fd2:	a804      	add	r0, sp, #16
90012fd4:	e9cd 1204 	strd	r1, r2, [sp, #16]
90012fd8:	f004 fe50 	bl	90017c7c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90012fdc:	9b04      	ldr	r3, [sp, #16]
90012fde:	a906      	add	r1, sp, #24
90012fe0:	a803      	add	r0, sp, #12
90012fe2:	f8ad 300c 	strh.w	r3, [sp, #12]
90012fe6:	9b05      	ldr	r3, [sp, #20]
90012fe8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90012fec:	f004 fe98 	bl	90017d20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90012ff0:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90012ff4:	f104 001c 	add.w	r0, r4, #28
90012ff8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012ffc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90013000:	b189      	cbz	r1, 90013026 <_ZN8touchgfx3HAL5touchEll+0x5a>
90013002:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90013006:	9300      	str	r3, [sp, #0]
90013008:	4613      	mov	r3, r2
9001300a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
9001300e:	462a      	mov	r2, r5
90013010:	f015 fdba 	bl	90028b88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90013014:	b128      	cbz	r0, 90013022 <_ZN8touchgfx3HAL5touchEll+0x56>
90013016:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001301a:	6623      	str	r3, [r4, #96]	; 0x60
9001301c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013020:	6663      	str	r3, [r4, #100]	; 0x64
90013022:	b007      	add	sp, #28
90013024:	bd30      	pop	{r4, r5, pc}
90013026:	f015 fdef 	bl	90028c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001302a:	2301      	movs	r3, #1
9001302c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90013030:	e7f1      	b.n	90013016 <_ZN8touchgfx3HAL5touchEll+0x4a>

90013032 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90013032:	b510      	push	{r4, lr}
90013034:	2b00      	cmp	r3, #0
90013036:	d046      	beq.n	900130c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013038:	ea81 0002 	eor.w	r0, r1, r2
9001303c:	07c4      	lsls	r4, r0, #31
9001303e:	d508      	bpl.n	90013052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90013040:	440b      	add	r3, r1
90013042:	3a01      	subs	r2, #1
90013044:	428b      	cmp	r3, r1
90013046:	d93e      	bls.n	900130c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013048:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001304c:	f801 0b01 	strb.w	r0, [r1], #1
90013050:	e7f8      	b.n	90013044 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90013052:	07d0      	lsls	r0, r2, #31
90013054:	bf42      	ittt	mi
90013056:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001305a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001305e:	f801 0b01 	strbmi.w	r0, [r1], #1
90013062:	2b01      	cmp	r3, #1
90013064:	d911      	bls.n	9001308a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013066:	ea81 0402 	eor.w	r4, r1, r2
9001306a:	4610      	mov	r0, r2
9001306c:	07a4      	lsls	r4, r4, #30
9001306e:	d022      	beq.n	900130b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90013070:	f023 0401 	bic.w	r4, r3, #1
90013074:	440c      	add	r4, r1
90013076:	428c      	cmp	r4, r1
90013078:	4602      	mov	r2, r0
9001307a:	d904      	bls.n	90013086 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001307c:	8812      	ldrh	r2, [r2, #0]
9001307e:	3002      	adds	r0, #2
90013080:	f821 2b02 	strh.w	r2, [r1], #2
90013084:	e7f7      	b.n	90013076 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90013086:	f003 0301 	and.w	r3, r3, #1
9001308a:	f023 0003 	bic.w	r0, r3, #3
9001308e:	4408      	add	r0, r1
90013090:	4288      	cmp	r0, r1
90013092:	4614      	mov	r4, r2
90013094:	d904      	bls.n	900130a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90013096:	6824      	ldr	r4, [r4, #0]
90013098:	3204      	adds	r2, #4
9001309a:	f841 4b04 	str.w	r4, [r1], #4
9001309e:	e7f7      	b.n	90013090 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900130a0:	f003 0303 	and.w	r3, r3, #3
900130a4:	3a01      	subs	r2, #1
900130a6:	440b      	add	r3, r1
900130a8:	428b      	cmp	r3, r1
900130aa:	d90c      	bls.n	900130c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900130ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900130b0:	f801 0b01 	strb.w	r0, [r1], #1
900130b4:	e7f8      	b.n	900130a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900130b6:	0790      	lsls	r0, r2, #30
900130b8:	d0e7      	beq.n	9001308a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900130ba:	f832 0b02 	ldrh.w	r0, [r2], #2
900130be:	3b02      	subs	r3, #2
900130c0:	f821 0b02 	strh.w	r0, [r1], #2
900130c4:	e7e1      	b.n	9001308a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900130c6:	2001      	movs	r0, #1
900130c8:	bd10      	pop	{r4, pc}

900130ca <_ZN8touchgfx3HAL7noTouchEv>:
900130ca:	b510      	push	{r4, lr}
900130cc:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900130d0:	4604      	mov	r4, r0
900130d2:	b153      	cbz	r3, 900130ea <_ZN8touchgfx3HAL7noTouchEv+0x20>
900130d4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900130d8:	2101      	movs	r1, #1
900130da:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900130de:	301c      	adds	r0, #28
900130e0:	f015 fd92 	bl	90028c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900130e4:	2300      	movs	r3, #0
900130e6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900130ea:	bd10      	pop	{r4, pc}

900130ec <_ZN8touchgfx8Drawable5setXYEss>:
900130ec:	b570      	push	{r4, r5, r6, lr}
900130ee:	6803      	ldr	r3, [r0, #0]
900130f0:	4604      	mov	r4, r0
900130f2:	4615      	mov	r5, r2
900130f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900130f6:	4798      	blx	r3
900130f8:	6823      	ldr	r3, [r4, #0]
900130fa:	4629      	mov	r1, r5
900130fc:	4620      	mov	r0, r4
900130fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013104:	4718      	bx	r3
	...

90013108 <_ZN8touchgfx3HAL3lcdEv>:
90013108:	4b04      	ldr	r3, [pc, #16]	; (9001311c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001310a:	681b      	ldr	r3, [r3, #0]
9001310c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013110:	b10a      	cbz	r2, 90013116 <_ZN8touchgfx3HAL3lcdEv+0xe>
90013112:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013114:	b900      	cbnz	r0, 90013118 <_ZN8touchgfx3HAL3lcdEv+0x10>
90013116:	6898      	ldr	r0, [r3, #8]
90013118:	4770      	bx	lr
9001311a:	bf00      	nop
9001311c:	24039acc 	.word	0x24039acc

90013120 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90013120:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013124:	b085      	sub	sp, #20
90013126:	4604      	mov	r4, r0
90013128:	2000      	movs	r0, #0
9001312a:	4699      	mov	r9, r3
9001312c:	ad04      	add	r5, sp, #16
9001312e:	460f      	mov	r7, r1
90013130:	4690      	mov	r8, r2
90013132:	f845 0d04 	str.w	r0, [r5, #-4]!
90013136:	69a0      	ldr	r0, [r4, #24]
90013138:	6806      	ldr	r6, [r0, #0]
9001313a:	9501      	str	r5, [sp, #4]
9001313c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90013140:	9500      	str	r5, [sp, #0]
90013142:	6835      	ldr	r5, [r6, #0]
90013144:	47a8      	blx	r5
90013146:	4d10      	ldr	r5, [pc, #64]	; (90013188 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90013148:	4606      	mov	r6, r0
9001314a:	f8a5 9000 	strh.w	r9, [r5]
9001314e:	f7ff ffdb 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90013152:	6803      	ldr	r3, [r0, #0]
90013154:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013156:	4798      	blx	r3
90013158:	b128      	cbz	r0, 90013166 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001315a:	2801      	cmp	r0, #1
9001315c:	d00b      	beq.n	90013176 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001315e:	4630      	mov	r0, r6
90013160:	b005      	add	sp, #20
90013162:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013166:	882b      	ldrh	r3, [r5, #0]
90013168:	fb08 7203 	mla	r2, r8, r3, r7
9001316c:	9b03      	ldr	r3, [sp, #12]
9001316e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90013172:	63e3      	str	r3, [r4, #60]	; 0x3c
90013174:	e7f3      	b.n	9001315e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013176:	882a      	ldrh	r2, [r5, #0]
90013178:	9b03      	ldr	r3, [sp, #12]
9001317a:	fb08 7202 	mla	r2, r8, r2, r7
9001317e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90013182:	1a9a      	subs	r2, r3, r2
90013184:	63e2      	str	r2, [r4, #60]	; 0x3c
90013186:	e7ea      	b.n	9001315e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013188:	24039ac6 	.word	0x24039ac6

9001318c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001318c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001318e:	b08b      	sub	sp, #44	; 0x2c
90013190:	4617      	mov	r7, r2
90013192:	4604      	mov	r4, r0
90013194:	460e      	mov	r6, r1
90013196:	461d      	mov	r5, r3
90013198:	f7ff ffb6 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001319c:	6803      	ldr	r3, [r0, #0]
9001319e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900131a0:	4798      	blx	r3
900131a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900131a6:	9007      	str	r0, [sp, #28]
900131a8:	4631      	mov	r1, r6
900131aa:	6822      	ldr	r2, [r4, #0]
900131ac:	e9cd 0308 	strd	r0, r3, [sp, #32]
900131b0:	4b0c      	ldr	r3, [pc, #48]	; (900131e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900131b2:	4620      	mov	r0, r4
900131b4:	881b      	ldrh	r3, [r3, #0]
900131b6:	9306      	str	r3, [sp, #24]
900131b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900131bc:	9305      	str	r3, [sp, #20]
900131be:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900131c2:	9304      	str	r3, [sp, #16]
900131c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900131c8:	9303      	str	r3, [sp, #12]
900131ca:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900131ce:	9302      	str	r3, [sp, #8]
900131d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900131d4:	e9cd 5300 	strd	r5, r3, [sp]
900131d8:	463b      	mov	r3, r7
900131da:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
900131dc:	2200      	movs	r2, #0
900131de:	47a8      	blx	r5
900131e0:	b00b      	add	sp, #44	; 0x2c
900131e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900131e4:	24039ac6 	.word	0x24039ac6

900131e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900131e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900131ec:	4698      	mov	r8, r3
900131ee:	6803      	ldr	r3, [r0, #0]
900131f0:	b08b      	sub	sp, #44	; 0x2c
900131f2:	4617      	mov	r7, r2
900131f4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
900131f6:	460e      	mov	r6, r1
900131f8:	4b13      	ldr	r3, [pc, #76]	; (90013248 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900131fa:	4604      	mov	r4, r0
900131fc:	f8b3 9000 	ldrh.w	r9, [r3]
90013200:	f7ff ff82 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90013204:	6803      	ldr	r3, [r0, #0]
90013206:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013208:	4798      	blx	r3
9001320a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001320e:	2200      	movs	r2, #0
90013210:	4631      	mov	r1, r6
90013212:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013216:	2302      	movs	r3, #2
90013218:	4620      	mov	r0, r4
9001321a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001321e:	2301      	movs	r3, #1
90013220:	9305      	str	r3, [sp, #20]
90013222:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90013226:	9304      	str	r3, [sp, #16]
90013228:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001322c:	9303      	str	r3, [sp, #12]
9001322e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90013232:	9302      	str	r3, [sp, #8]
90013234:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013238:	e9cd 8300 	strd	r8, r3, [sp]
9001323c:	463b      	mov	r3, r7
9001323e:	47a8      	blx	r5
90013240:	b00b      	add	sp, #44	; 0x2c
90013242:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013246:	bf00      	nop
90013248:	24039ac6 	.word	0x24039ac6

9001324c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
9001324c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013250:	4698      	mov	r8, r3
90013252:	6803      	ldr	r3, [r0, #0]
90013254:	b087      	sub	sp, #28
90013256:	460e      	mov	r6, r1
90013258:	6d9d      	ldr	r5, [r3, #88]	; 0x58
9001325a:	4617      	mov	r7, r2
9001325c:	4b0f      	ldr	r3, [pc, #60]	; (9001329c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
9001325e:	4604      	mov	r4, r0
90013260:	f8b3 9000 	ldrh.w	r9, [r3]
90013264:	f7ff ff50 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90013268:	6803      	ldr	r3, [r0, #0]
9001326a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001326c:	4798      	blx	r3
9001326e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90013272:	463a      	mov	r2, r7
90013274:	4631      	mov	r1, r6
90013276:	f8cd 900c 	str.w	r9, [sp, #12]
9001327a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001327e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90013282:	4620      	mov	r0, r4
90013284:	9302      	str	r3, [sp, #8]
90013286:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001328a:	9301      	str	r3, [sp, #4]
9001328c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013290:	9300      	str	r3, [sp, #0]
90013292:	4643      	mov	r3, r8
90013294:	47a8      	blx	r5
90013296:	b007      	add	sp, #28
90013298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001329c:	24039ac6 	.word	0x24039ac6

900132a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900132a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900132a4:	4604      	mov	r4, r0
900132a6:	b08f      	sub	sp, #60	; 0x3c
900132a8:	4610      	mov	r0, r2
900132aa:	460d      	mov	r5, r1
900132ac:	4691      	mov	r9, r2
900132ae:	461e      	mov	r6, r3
900132b0:	f008 f830 	bl	9001b314 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900132b4:	2800      	cmp	r0, #0
900132b6:	f000 809d 	beq.w	900133f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900132ba:	6823      	ldr	r3, [r4, #0]
900132bc:	4620      	mov	r0, r4
900132be:	f8df b198 	ldr.w	fp, [pc, #408]	; 90013458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900132c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900132c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900132c8:	4798      	blx	r3
900132ca:	6823      	ldr	r3, [r4, #0]
900132cc:	4620      	mov	r0, r4
900132ce:	f8df a18c 	ldr.w	sl, [pc, #396]	; 9001345c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900132d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900132d4:	4798      	blx	r3
900132d6:	f8bb 3000 	ldrh.w	r3, [fp]
900132da:	4f5c      	ldr	r7, [pc, #368]	; (9001344c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900132dc:	9301      	str	r3, [sp, #4]
900132de:	f8ba 3000 	ldrh.w	r3, [sl]
900132e2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900132e6:	4640      	mov	r0, r8
900132e8:	9302      	str	r3, [sp, #8]
900132ea:	883b      	ldrh	r3, [r7, #0]
900132ec:	9303      	str	r3, [sp, #12]
900132ee:	4b58      	ldr	r3, [pc, #352]	; (90013450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900132f0:	881a      	ldrh	r2, [r3, #0]
900132f2:	9305      	str	r3, [sp, #20]
900132f4:	9204      	str	r2, [sp, #16]
900132f6:	f008 f8a1 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
900132fa:	8038      	strh	r0, [r7, #0]
900132fc:	4640      	mov	r0, r8
900132fe:	f008 f8d1 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013302:	9b05      	ldr	r3, [sp, #20]
90013304:	b280      	uxth	r0, r0
90013306:	8018      	strh	r0, [r3, #0]
90013308:	4b52      	ldr	r3, [pc, #328]	; (90013454 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001330a:	781b      	ldrb	r3, [r3, #0]
9001330c:	2b00      	cmp	r3, #0
9001330e:	d174      	bne.n	900133fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90013310:	883b      	ldrh	r3, [r7, #0]
90013312:	f8aa 0000 	strh.w	r0, [sl]
90013316:	f8ab 3000 	strh.w	r3, [fp]
9001331a:	4648      	mov	r0, r9
9001331c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90013320:	f007 fff8 	bl	9001b314 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013324:	2200      	movs	r2, #0
90013326:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9001332a:	4611      	mov	r1, r2
9001332c:	4628      	mov	r0, r5
9001332e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90013332:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90013336:	f7ff fed9 	bl	900130ec <_ZN8touchgfx8Drawable5setXYEss>
9001333a:	2301      	movs	r3, #1
9001333c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90013340:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90013344:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013348:	2b00      	cmp	r3, #0
9001334a:	dd5c      	ble.n	90013406 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001334c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013350:	2b00      	cmp	r3, #0
90013352:	dd58      	ble.n	90013406 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013354:	462a      	mov	r2, r5
90013356:	ab0a      	add	r3, sp, #40	; 0x28
90013358:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001335c:	6851      	ldr	r1, [r2, #4]
9001335e:	c303      	stmia	r3!, {r0, r1}
90013360:	4631      	mov	r1, r6
90013362:	a80a      	add	r0, sp, #40	; 0x28
90013364:	f7ff fbec 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90013368:	4b38      	ldr	r3, [pc, #224]	; (9001344c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001336a:	2100      	movs	r1, #0
9001336c:	f9b3 2000 	ldrsh.w	r2, [r3]
90013370:	4b37      	ldr	r3, [pc, #220]	; (90013450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013372:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90013376:	aa0a      	add	r2, sp, #40	; 0x28
90013378:	f9b3 3000 	ldrsh.w	r3, [r3]
9001337c:	910c      	str	r1, [sp, #48]	; 0x30
9001337e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013382:	ab08      	add	r3, sp, #32
90013384:	e892 0003 	ldmia.w	r2, {r0, r1}
90013388:	e883 0003 	stmia.w	r3, {r0, r1}
9001338c:	4618      	mov	r0, r3
9001338e:	a90c      	add	r1, sp, #48	; 0x30
90013390:	f7ff fbd6 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90013394:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90013396:	2b00      	cmp	r3, #0
90013398:	d13c      	bne.n	90013414 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001339a:	2000      	movs	r0, #0
9001339c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900133a0:	2600      	movs	r6, #0
900133a2:	696b      	ldr	r3, [r5, #20]
900133a4:	a908      	add	r1, sp, #32
900133a6:	682a      	ldr	r2, [r5, #0]
900133a8:	4628      	mov	r0, r5
900133aa:	9305      	str	r3, [sp, #20]
900133ac:	616e      	str	r6, [r5, #20]
900133ae:	6892      	ldr	r2, [r2, #8]
900133b0:	4790      	blx	r2
900133b2:	9b05      	ldr	r3, [sp, #20]
900133b4:	4652      	mov	r2, sl
900133b6:	4649      	mov	r1, r9
900133b8:	616b      	str	r3, [r5, #20]
900133ba:	4628      	mov	r0, r5
900133bc:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
900133c0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900133c4:	f7ff fe92 	bl	900130ec <_ZN8touchgfx8Drawable5setXYEss>
900133c8:	9a01      	ldr	r2, [sp, #4]
900133ca:	4b23      	ldr	r3, [pc, #140]	; (90013458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900133cc:	4620      	mov	r0, r4
900133ce:	801a      	strh	r2, [r3, #0]
900133d0:	9a02      	ldr	r2, [sp, #8]
900133d2:	4b22      	ldr	r3, [pc, #136]	; (9001345c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900133d4:	801a      	strh	r2, [r3, #0]
900133d6:	9a03      	ldr	r2, [sp, #12]
900133d8:	4b1c      	ldr	r3, [pc, #112]	; (9001344c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900133da:	801a      	strh	r2, [r3, #0]
900133dc:	4b1c      	ldr	r3, [pc, #112]	; (90013450 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900133de:	9a04      	ldr	r2, [sp, #16]
900133e0:	801a      	strh	r2, [r3, #0]
900133e2:	6823      	ldr	r3, [r4, #0]
900133e4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900133e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900133ea:	4798      	blx	r3
900133ec:	6823      	ldr	r3, [r4, #0]
900133ee:	4620      	mov	r0, r4
900133f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900133f2:	4798      	blx	r3
900133f4:	b00f      	add	sp, #60	; 0x3c
900133f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900133fa:	883b      	ldrh	r3, [r7, #0]
900133fc:	f8ab 0000 	strh.w	r0, [fp]
90013400:	f8aa 3000 	strh.w	r3, [sl]
90013404:	e789      	b.n	9001331a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90013406:	462a      	mov	r2, r5
90013408:	ab0a      	add	r3, sp, #40	; 0x28
9001340a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001340e:	6851      	ldr	r1, [r2, #4]
90013410:	c303      	stmia	r3!, {r0, r1}
90013412:	e7a9      	b.n	90013368 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90013414:	a807      	add	r0, sp, #28
90013416:	f008 f981 	bl	9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001341a:	4606      	mov	r6, r0
9001341c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9001341e:	6803      	ldr	r3, [r0, #0]
90013420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013422:	4798      	blx	r3
90013424:	4286      	cmp	r6, r0
90013426:	d1b8      	bne.n	9001339a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90013428:	f7ff fe6e 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001342c:	6803      	ldr	r3, [r0, #0]
9001342e:	4606      	mov	r6, r0
90013430:	a807      	add	r0, sp, #28
90013432:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013434:	9305      	str	r3, [sp, #20]
90013436:	f008 f971 	bl	9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001343a:	9b05      	ldr	r3, [sp, #20]
9001343c:	4601      	mov	r1, r0
9001343e:	4630      	mov	r0, r6
90013440:	4798      	blx	r3
90013442:	f080 0001 	eor.w	r0, r0, #1
90013446:	b2c0      	uxtb	r0, r0
90013448:	e7a8      	b.n	9001339c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001344a:	bf00      	nop
9001344c:	24039ac0 	.word	0x24039ac0
90013450:	24039ac2 	.word	0x24039ac2
90013454:	24039ac4 	.word	0x24039ac4
90013458:	24039ac6 	.word	0x24039ac6
9001345c:	24039ac8 	.word	0x24039ac8

90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90013460:	4b07      	ldr	r3, [pc, #28]	; (90013480 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90013462:	b510      	push	{r4, lr}
90013464:	781b      	ldrb	r3, [r3, #0]
90013466:	4604      	mov	r4, r0
90013468:	b13b      	cbz	r3, 9001347a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001346a:	6803      	ldr	r3, [r0, #0]
9001346c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001346e:	4798      	blx	r3
90013470:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90013472:	4283      	cmp	r3, r0
90013474:	d101      	bne.n	9001347a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013476:	6c20      	ldr	r0, [r4, #64]	; 0x40
90013478:	bd10      	pop	{r4, pc}
9001347a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001347c:	e7fc      	b.n	90013478 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001347e:	bf00      	nop
90013480:	24039aca 	.word	0x24039aca

90013484 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90013484:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013488:	461d      	mov	r5, r3
9001348a:	b08a      	sub	sp, #40	; 0x28
9001348c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90013490:	4690      	mov	r8, r2
90013492:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90013496:	2400      	movs	r4, #0
90013498:	4607      	mov	r7, r0
9001349a:	fb06 8505 	mla	r5, r6, r5, r8
9001349e:	9404      	str	r4, [sp, #16]
900134a0:	f88d 4020 	strb.w	r4, [sp, #32]
900134a4:	e9cd 3101 	strd	r3, r1, [sp, #4]
900134a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900134ac:	f8ad 3018 	strh.w	r3, [sp, #24]
900134b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900134b4:	f8ad 301a 	strh.w	r3, [sp, #26]
900134b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900134bc:	f8ad 301c 	strh.w	r3, [sp, #28]
900134c0:	f7ff ffce 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900134c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900134c8:	6878      	ldr	r0, [r7, #4]
900134ca:	f8ad 601e 	strh.w	r6, [sp, #30]
900134ce:	a901      	add	r1, sp, #4
900134d0:	9505      	str	r5, [sp, #20]
900134d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900134d6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900134da:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900134de:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900134e2:	6803      	ldr	r3, [r0, #0]
900134e4:	685b      	ldr	r3, [r3, #4]
900134e6:	4798      	blx	r3
900134e8:	b00a      	add	sp, #40	; 0x28
900134ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900134ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900134ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900134f2:	b08b      	sub	sp, #44	; 0x2c
900134f4:	2400      	movs	r4, #0
900134f6:	4691      	mov	r9, r2
900134f8:	461d      	mov	r5, r3
900134fa:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
900134fe:	f44f 6300 	mov.w	r3, #2048	; 0x800
90013502:	4688      	mov	r8, r1
90013504:	4607      	mov	r7, r0
90013506:	9404      	str	r4, [sp, #16]
90013508:	fb06 9505 	mla	r5, r6, r5, r9
9001350c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013510:	f7ff ffa6 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013514:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013518:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001351c:	6878      	ldr	r0, [r7, #4]
9001351e:	f8ad 3018 	strh.w	r3, [sp, #24]
90013522:	a901      	add	r1, sp, #4
90013524:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90013528:	9505      	str	r5, [sp, #20]
9001352a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001352e:	f8ad 401c 	strh.w	r4, [sp, #28]
90013532:	f8ad 601e 	strh.w	r6, [sp, #30]
90013536:	f8cd 8010 	str.w	r8, [sp, #16]
9001353a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001353e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013542:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90013546:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001354a:	6803      	ldr	r3, [r0, #0]
9001354c:	685b      	ldr	r3, [r3, #4]
9001354e:	4798      	blx	r3
90013550:	b00b      	add	sp, #44	; 0x2c
90013552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90013558 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90013558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001355c:	b08a      	sub	sp, #40	; 0x28
9001355e:	4698      	mov	r8, r3
90013560:	2300      	movs	r3, #0
90013562:	4606      	mov	r6, r0
90013564:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90013568:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001356c:	2d0b      	cmp	r5, #11
9001356e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90013572:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90013576:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001357a:	9304      	str	r3, [sp, #16]
9001357c:	d137      	bne.n	900135ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001357e:	2380      	movs	r3, #128	; 0x80
90013580:	f88d 0020 	strb.w	r0, [sp, #32]
90013584:	4630      	mov	r0, r6
90013586:	9203      	str	r2, [sp, #12]
90013588:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001358c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90013590:	f8ad 3018 	strh.w	r3, [sp, #24]
90013594:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013598:	f8ad 301a 	strh.w	r3, [sp, #26]
9001359c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900135a0:	f8ad 301c 	strh.w	r3, [sp, #28]
900135a4:	f7ff ff5c 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900135a8:	2c0b      	cmp	r4, #11
900135aa:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900135ae:	f8ad 701e 	strh.w	r7, [sp, #30]
900135b2:	bf94      	ite	ls
900135b4:	4b19      	ldrls	r3, [pc, #100]	; (9001361c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900135b6:	2100      	movhi	r1, #0
900135b8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900135bc:	bf98      	it	ls
900135be:	5d19      	ldrbls	r1, [r3, r4]
900135c0:	fb02 8307 	mla	r3, r2, r7, r8
900135c4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900135c8:	10c9      	asrs	r1, r1, #3
900135ca:	fb01 0003 	mla	r0, r1, r3, r0
900135ce:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900135d2:	a901      	add	r1, sp, #4
900135d4:	9005      	str	r0, [sp, #20]
900135d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900135da:	2300      	movs	r3, #0
900135dc:	6870      	ldr	r0, [r6, #4]
900135de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900135e2:	6803      	ldr	r3, [r0, #0]
900135e4:	685b      	ldr	r3, [r3, #4]
900135e6:	4798      	blx	r3
900135e8:	b00a      	add	sp, #40	; 0x28
900135ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900135ee:	2d02      	cmp	r5, #2
900135f0:	d109      	bne.n	90013606 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900135f2:	28ff      	cmp	r0, #255	; 0xff
900135f4:	d105      	bne.n	90013602 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900135f6:	f1bc 0f00 	cmp.w	ip, #0
900135fa:	bf14      	ite	ne
900135fc:	2340      	movne	r3, #64	; 0x40
900135fe:	2320      	moveq	r3, #32
90013600:	e7be      	b.n	90013580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013602:	2340      	movs	r3, #64	; 0x40
90013604:	e7bc      	b.n	90013580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013606:	28ff      	cmp	r0, #255	; 0xff
90013608:	d105      	bne.n	90013616 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001360a:	f1bc 0f00 	cmp.w	ip, #0
9001360e:	bf14      	ite	ne
90013610:	2304      	movne	r3, #4
90013612:	2301      	moveq	r3, #1
90013614:	e7b4      	b.n	90013580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013616:	2304      	movs	r3, #4
90013618:	e7b2      	b.n	90013580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001361a:	bf00      	nop
9001361c:	9002d4a4 	.word	0x9002d4a4

90013620 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90013620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013624:	b08b      	sub	sp, #44	; 0x2c
90013626:	461d      	mov	r5, r3
90013628:	2400      	movs	r4, #0
9001362a:	4688      	mov	r8, r1
9001362c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90013630:	4693      	mov	fp, r2
90013632:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90013636:	4607      	mov	r7, r0
90013638:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001363c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90013640:	9404      	str	r4, [sp, #16]
90013642:	bf14      	ite	ne
90013644:	2308      	movne	r3, #8
90013646:	2302      	moveq	r3, #2
90013648:	fb05 b50a 	mla	r5, r5, sl, fp
9001364c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013650:	f7ff ff06 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013654:	2e0b      	cmp	r6, #11
90013656:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001365a:	a901      	add	r1, sp, #4
9001365c:	bf98      	it	ls
9001365e:	4b13      	ldrls	r3, [pc, #76]	; (900136ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90013660:	f8ad a01e 	strh.w	sl, [sp, #30]
90013664:	bf98      	it	ls
90013666:	5d9c      	ldrbls	r4, [r3, r6]
90013668:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001366c:	10e4      	asrs	r4, r4, #3
9001366e:	f8cd 8010 	str.w	r8, [sp, #16]
90013672:	f8ad 3018 	strh.w	r3, [sp, #24]
90013676:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001367a:	fb04 0405 	mla	r4, r4, r5, r0
9001367e:	6878      	ldr	r0, [r7, #4]
90013680:	f8ad 301a 	strh.w	r3, [sp, #26]
90013684:	2300      	movs	r3, #0
90013686:	9405      	str	r4, [sp, #20]
90013688:	f8ad 301c 	strh.w	r3, [sp, #28]
9001368c:	f88d 9020 	strb.w	r9, [sp, #32]
90013690:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90013694:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90013698:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
9001369c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
900136a0:	6803      	ldr	r3, [r0, #0]
900136a2:	685b      	ldr	r3, [r3, #4]
900136a4:	4798      	blx	r3
900136a6:	b00b      	add	sp, #44	; 0x2c
900136a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900136ac:	9002d4a4 	.word	0x9002d4a4

900136b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900136b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900136b4:	461e      	mov	r6, r3
900136b6:	4b0a      	ldr	r3, [pc, #40]	; (900136e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900136b8:	460f      	mov	r7, r1
900136ba:	4690      	mov	r8, r2
900136bc:	881d      	ldrh	r5, [r3, #0]
900136be:	f7ff fd23 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
900136c2:	6803      	ldr	r3, [r0, #0]
900136c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900136c6:	4798      	blx	r3
900136c8:	280b      	cmp	r0, #11
900136ca:	bf96      	itet	ls
900136cc:	4b05      	ldrls	r3, [pc, #20]	; (900136e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900136ce:	2400      	movhi	r4, #0
900136d0:	5c1c      	ldrbls	r4, [r3, r0]
900136d2:	fb08 7005 	mla	r0, r8, r5, r7
900136d6:	10e4      	asrs	r4, r4, #3
900136d8:	fb04 6000 	mla	r0, r4, r0, r6
900136dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900136e0:	24039ac6 	.word	0x24039ac6
900136e4:	9002d4a4 	.word	0x9002d4a4

900136e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900136e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900136ea:	b08b      	sub	sp, #44	; 0x2c
900136ec:	461f      	mov	r7, r3
900136ee:	4604      	mov	r4, r0
900136f0:	4616      	mov	r6, r2
900136f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900136f6:	2500      	movs	r5, #0
900136f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900136fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90013700:	9504      	str	r5, [sp, #16]
90013702:	f8ad 3018 	strh.w	r3, [sp, #24]
90013706:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001370a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001370e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013712:	f8ad 301c 	strh.w	r3, [sp, #28]
90013716:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001371a:	f88d 3020 	strb.w	r3, [sp, #32]
9001371e:	f7ff fe9f 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013722:	463a      	mov	r2, r7
90013724:	4631      	mov	r1, r6
90013726:	4603      	mov	r3, r0
90013728:	4620      	mov	r0, r4
9001372a:	f7ff ffc1 	bl	900136b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001372e:	4b0e      	ldr	r3, [pc, #56]	; (90013768 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90013730:	9005      	str	r0, [sp, #20]
90013732:	881b      	ldrh	r3, [r3, #0]
90013734:	f8ad 301e 	strh.w	r3, [sp, #30]
90013738:	f7ff fce6 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001373c:	6803      	ldr	r3, [r0, #0]
9001373e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013740:	4798      	blx	r3
90013742:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013744:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90013748:	a901      	add	r1, sp, #4
9001374a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
9001374e:	9304      	str	r3, [sp, #16]
90013750:	6860      	ldr	r0, [r4, #4]
90013752:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90013756:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001375a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
9001375e:	6803      	ldr	r3, [r0, #0]
90013760:	685b      	ldr	r3, [r3, #4]
90013762:	4798      	blx	r3
90013764:	b00b      	add	sp, #44	; 0x2c
90013766:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013768:	24039ac6 	.word	0x24039ac6

9001376c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9001376c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001376e:	b08d      	sub	sp, #52	; 0x34
90013770:	2501      	movs	r5, #1
90013772:	4604      	mov	r4, r0
90013774:	466b      	mov	r3, sp
90013776:	9503      	str	r5, [sp, #12]
90013778:	e883 0006 	stmia.w	r3, {r1, r2}
9001377c:	2300      	movs	r3, #0
9001377e:	f8bd 6000 	ldrh.w	r6, [sp]
90013782:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90013786:	9306      	str	r3, [sp, #24]
90013788:	6803      	ldr	r3, [r0, #0]
9001378a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001378c:	4798      	blx	r3
9001378e:	463a      	mov	r2, r7
90013790:	4631      	mov	r1, r6
90013792:	4603      	mov	r3, r0
90013794:	4620      	mov	r0, r4
90013796:	f7ff ff8b 	bl	900136b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001379a:	6c63      	ldr	r3, [r4, #68]	; 0x44
9001379c:	9004      	str	r0, [sp, #16]
9001379e:	9307      	str	r3, [sp, #28]
900137a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900137a4:	f8ad 3020 	strh.w	r3, [sp, #32]
900137a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900137ac:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900137b0:	4b0e      	ldr	r3, [pc, #56]	; (900137ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900137b2:	881b      	ldrh	r3, [r3, #0]
900137b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
900137b8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
900137bc:	f7ff fca4 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
900137c0:	6803      	ldr	r3, [r0, #0]
900137c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900137c4:	4798      	blx	r3
900137c6:	23ff      	movs	r3, #255	; 0xff
900137c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
900137cc:	a903      	add	r1, sp, #12
900137ce:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900137d2:	6860      	ldr	r0, [r4, #4]
900137d4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900137d8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
900137dc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
900137e0:	6803      	ldr	r3, [r0, #0]
900137e2:	685b      	ldr	r3, [r3, #4]
900137e4:	4798      	blx	r3
900137e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900137e8:	b00d      	add	sp, #52	; 0x34
900137ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
900137ec:	24039ac6 	.word	0x24039ac6

900137f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900137f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900137f4:	b08c      	sub	sp, #48	; 0x30
900137f6:	461e      	mov	r6, r3
900137f8:	2300      	movs	r3, #0
900137fa:	4604      	mov	r4, r0
900137fc:	466d      	mov	r5, sp
900137fe:	9306      	str	r3, [sp, #24]
90013800:	6803      	ldr	r3, [r0, #0]
90013802:	e885 0006 	stmia.w	r5, {r1, r2}
90013806:	2501      	movs	r5, #1
90013808:	f8bd 7000 	ldrh.w	r7, [sp]
9001380c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90013810:	9503      	str	r5, [sp, #12]
90013812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013814:	4798      	blx	r3
90013816:	4642      	mov	r2, r8
90013818:	4639      	mov	r1, r7
9001381a:	4603      	mov	r3, r0
9001381c:	4620      	mov	r0, r4
9001381e:	f7ff ff47 	bl	900136b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013822:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90013826:	9004      	str	r0, [sp, #16]
90013828:	f8ad 3020 	strh.w	r3, [sp, #32]
9001382c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90013830:	9607      	str	r6, [sp, #28]
90013832:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90013836:	4b10      	ldr	r3, [pc, #64]	; (90013878 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90013838:	881b      	ldrh	r3, [r3, #0]
9001383a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
9001383e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90013840:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90013844:	f7ff fc60 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90013848:	6803      	ldr	r3, [r0, #0]
9001384a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001384c:	4798      	blx	r3
9001384e:	23ff      	movs	r3, #255	; 0xff
90013850:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90013854:	a903      	add	r1, sp, #12
90013856:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001385a:	6860      	ldr	r0, [r4, #4]
9001385c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90013860:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90013864:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90013868:	6803      	ldr	r3, [r0, #0]
9001386a:	685b      	ldr	r3, [r3, #4]
9001386c:	4798      	blx	r3
9001386e:	4630      	mov	r0, r6
90013870:	b00c      	add	sp, #48	; 0x30
90013872:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013876:	bf00      	nop
90013878:	24039ac6 	.word	0x24039ac6

9001387c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001387c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001387e:	b085      	sub	sp, #20
90013880:	4605      	mov	r5, r0
90013882:	ac02      	add	r4, sp, #8
90013884:	e884 0006 	stmia.w	r4, {r1, r2}
90013888:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001388c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90013890:	f7ff fde6 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013894:	4631      	mov	r1, r6
90013896:	4603      	mov	r3, r0
90013898:	463a      	mov	r2, r7
9001389a:	4628      	mov	r0, r5
9001389c:	f7ff ff08 	bl	900136b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900138a0:	4a05      	ldr	r2, [pc, #20]	; (900138b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900138a2:	682b      	ldr	r3, [r5, #0]
900138a4:	8812      	ldrh	r2, [r2, #0]
900138a6:	9200      	str	r2, [sp, #0]
900138a8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
900138aa:	4603      	mov	r3, r0
900138ac:	4628      	mov	r0, r5
900138ae:	e894 0006 	ldmia.w	r4, {r1, r2}
900138b2:	47b0      	blx	r6
900138b4:	b005      	add	sp, #20
900138b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900138b8:	24039ac6 	.word	0x24039ac6

900138bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900138bc:	b570      	push	{r4, r5, r6, lr}
900138be:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
900138c2:	4604      	mov	r4, r0
900138c4:	b19b      	cbz	r3, 900138ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900138c6:	2002      	movs	r0, #2
900138c8:	f7ec feac 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900138cc:	2300      	movs	r3, #0
900138ce:	4620      	mov	r0, r4
900138d0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900138d4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
900138d8:	6823      	ldr	r3, [r4, #0]
900138da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
900138de:	f7ff fdbf 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900138e2:	4601      	mov	r1, r0
900138e4:	4620      	mov	r0, r4
900138e6:	462b      	mov	r3, r5
900138e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900138ec:	4718      	bx	r3
900138ee:	bd70      	pop	{r4, r5, r6, pc}

900138f0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900138f0:	b570      	push	{r4, r5, r6, lr}
900138f2:	4605      	mov	r5, r0
900138f4:	460c      	mov	r4, r1
900138f6:	2003      	movs	r0, #3
900138f8:	b149      	cbz	r1, 9001390e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900138fa:	f7ec fe2b 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900138fe:	6928      	ldr	r0, [r5, #16]
90013900:	b168      	cbz	r0, 9001391e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013902:	6803      	ldr	r3, [r0, #0]
90013904:	2101      	movs	r1, #1
90013906:	695b      	ldr	r3, [r3, #20]
90013908:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001390c:	4718      	bx	r3
9001390e:	f7ec fe55 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013912:	6928      	ldr	r0, [r5, #16]
90013914:	b118      	cbz	r0, 9001391e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013916:	6803      	ldr	r3, [r0, #0]
90013918:	4621      	mov	r1, r4
9001391a:	695b      	ldr	r3, [r3, #20]
9001391c:	e7f4      	b.n	90013908 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
9001391e:	bd70      	pop	{r4, r5, r6, pc}

90013920 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90013920:	b538      	push	{r3, r4, r5, lr}
90013922:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90013926:	4604      	mov	r4, r0
90013928:	460d      	mov	r5, r1
9001392a:	428b      	cmp	r3, r1
9001392c:	d006      	beq.n	9001393c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
9001392e:	6803      	ldr	r3, [r0, #0]
90013930:	b929      	cbnz	r1, 9001393e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90013932:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90013936:	4798      	blx	r3
90013938:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
9001393c:	bd38      	pop	{r3, r4, r5, pc}
9001393e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90013942:	e7f8      	b.n	90013936 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90013944 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90013944:	4b0d      	ldr	r3, [pc, #52]	; (9001397c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90013946:	b510      	push	{r4, lr}
90013948:	781b      	ldrb	r3, [r3, #0]
9001394a:	4604      	mov	r4, r0
9001394c:	b95b      	cbnz	r3, 90013966 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001394e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90013952:	2b02      	cmp	r3, #2
90013954:	d007      	beq.n	90013966 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013956:	6840      	ldr	r0, [r0, #4]
90013958:	f000 f91a 	bl	90013b90 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001395c:	b118      	cbz	r0, 90013966 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001395e:	6862      	ldr	r2, [r4, #4]
90013960:	7a53      	ldrb	r3, [r2, #9]
90013962:	2b00      	cmp	r3, #0
90013964:	d0fc      	beq.n	90013960 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90013966:	f7ed ff8f 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001396a:	4620      	mov	r0, r4
9001396c:	2100      	movs	r1, #0
9001396e:	f7ff ffd7 	bl	90013920 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013972:	4620      	mov	r0, r4
90013974:	f7ff fd74 	bl	90013460 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013978:	bd10      	pop	{r4, pc}
9001397a:	bf00      	nop
9001397c:	24039aca 	.word	0x24039aca

90013980 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90013980:	b570      	push	{r4, r5, r6, lr}
90013982:	4604      	mov	r4, r0
90013984:	6803      	ldr	r3, [r0, #0]
90013986:	b919      	cbnz	r1, 90013990 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90013988:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001398a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001398e:	4718      	bx	r3
90013990:	2200      	movs	r2, #0
90013992:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90013996:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
9001399a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001399c:	4798      	blx	r3
9001399e:	6863      	ldr	r3, [r4, #4]
900139a0:	2101      	movs	r1, #1
900139a2:	4605      	mov	r5, r0
900139a4:	4620      	mov	r0, r4
900139a6:	7299      	strb	r1, [r3, #10]
900139a8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
900139ac:	f7ff ffb8 	bl	90013920 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900139b0:	4628      	mov	r0, r5
900139b2:	bd70      	pop	{r4, r5, r6, pc}

900139b4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
900139b4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
900139b8:	1a13      	subs	r3, r2, r0
900139ba:	4258      	negs	r0, r3
900139bc:	4158      	adcs	r0, r3
900139be:	4770      	bx	lr

900139c0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900139c0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900139c4:	1a9b      	subs	r3, r3, r2
900139c6:	2b00      	cmp	r3, #0
900139c8:	bfdc      	itt	le
900139ca:	6882      	ldrle	r2, [r0, #8]
900139cc:	189b      	addle	r3, r3, r2
900139ce:	2b01      	cmp	r3, #1
900139d0:	bfcc      	ite	gt
900139d2:	2000      	movgt	r0, #0
900139d4:	2001      	movle	r0, #1
900139d6:	4770      	bx	lr

900139d8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900139d8:	6902      	ldr	r2, [r0, #16]
900139da:	6843      	ldr	r3, [r0, #4]
900139dc:	2024      	movs	r0, #36	; 0x24
900139de:	fb00 3002 	mla	r0, r0, r2, r3
900139e2:	4770      	bx	lr

900139e4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900139e4:	6803      	ldr	r3, [r0, #0]
900139e6:	691b      	ldr	r3, [r3, #16]
900139e8:	4718      	bx	r3

900139ea <_ZN8touchgfx13DMA_Interface7executeEv>:
900139ea:	2301      	movs	r3, #1
900139ec:	b570      	push	{r4, r5, r6, lr}
900139ee:	7203      	strb	r3, [r0, #8]
900139f0:	4604      	mov	r4, r0
900139f2:	6840      	ldr	r0, [r0, #4]
900139f4:	6803      	ldr	r3, [r0, #0]
900139f6:	699b      	ldr	r3, [r3, #24]
900139f8:	4798      	blx	r3
900139fa:	6803      	ldr	r3, [r0, #0]
900139fc:	4605      	mov	r5, r0
900139fe:	2b40      	cmp	r3, #64	; 0x40
90013a00:	d00c      	beq.n	90013a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013a02:	d810      	bhi.n	90013a26 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90013a04:	2b04      	cmp	r3, #4
90013a06:	d01d      	beq.n	90013a44 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90013a08:	d804      	bhi.n	90013a14 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90013a0a:	2b01      	cmp	r3, #1
90013a0c:	d006      	beq.n	90013a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013a0e:	2b02      	cmp	r3, #2
90013a10:	d02c      	beq.n	90013a6c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90013a12:	bd70      	pop	{r4, r5, r6, pc}
90013a14:	2b08      	cmp	r3, #8
90013a16:	d01d      	beq.n	90013a54 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90013a18:	2b20      	cmp	r3, #32
90013a1a:	d1fa      	bne.n	90013a12 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90013a1c:	6823      	ldr	r3, [r4, #0]
90013a1e:	4620      	mov	r0, r4
90013a20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013a22:	4798      	blx	r3
90013a24:	e013      	b.n	90013a4e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90013a26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90013a2a:	d0f7      	beq.n	90013a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013a2c:	d804      	bhi.n	90013a38 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90013a2e:	2b80      	cmp	r3, #128	; 0x80
90013a30:	d0f4      	beq.n	90013a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013a32:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90013a36:	e7f0      	b.n	90013a1a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90013a38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90013a3c:	d0ee      	beq.n	90013a1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013a3e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90013a42:	e7e5      	b.n	90013a10 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90013a44:	6823      	ldr	r3, [r4, #0]
90013a46:	7f01      	ldrb	r1, [r0, #28]
90013a48:	4620      	mov	r0, r4
90013a4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013a4c:	4798      	blx	r3
90013a4e:	6823      	ldr	r3, [r4, #0]
90013a50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013a52:	e006      	b.n	90013a62 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90013a54:	6823      	ldr	r3, [r4, #0]
90013a56:	7f01      	ldrb	r1, [r0, #28]
90013a58:	4620      	mov	r0, r4
90013a5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013a5c:	4798      	blx	r3
90013a5e:	6823      	ldr	r3, [r4, #0]
90013a60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013a62:	4629      	mov	r1, r5
90013a64:	4620      	mov	r0, r4
90013a66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013a6a:	4718      	bx	r3
90013a6c:	6823      	ldr	r3, [r4, #0]
90013a6e:	4620      	mov	r0, r4
90013a70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013a72:	4798      	blx	r3
90013a74:	e7f3      	b.n	90013a5e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90013a76 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90013a76:	4770      	bx	lr

90013a78 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90013a78:	4770      	bx	lr

90013a7a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90013a7a:	4770      	bx	lr

90013a7c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90013a7c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90013a80:	b510      	push	{r4, lr}
90013a82:	1ad2      	subs	r2, r2, r3
90013a84:	2a00      	cmp	r2, #0
90013a86:	bfdc      	itt	le
90013a88:	6884      	ldrle	r4, [r0, #8]
90013a8a:	1912      	addle	r2, r2, r4
90013a8c:	2a01      	cmp	r2, #1
90013a8e:	dd16      	ble.n	90013abe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90013a90:	6842      	ldr	r2, [r0, #4]
90013a92:	2424      	movs	r4, #36	; 0x24
90013a94:	fb04 2303 	mla	r3, r4, r3, r2
90013a98:	f101 0220 	add.w	r2, r1, #32
90013a9c:	f851 4b04 	ldr.w	r4, [r1], #4
90013aa0:	4291      	cmp	r1, r2
90013aa2:	f843 4b04 	str.w	r4, [r3], #4
90013aa6:	d1f9      	bne.n	90013a9c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90013aa8:	780a      	ldrb	r2, [r1, #0]
90013aaa:	701a      	strb	r2, [r3, #0]
90013aac:	68c3      	ldr	r3, [r0, #12]
90013aae:	6882      	ldr	r2, [r0, #8]
90013ab0:	f3bf 8f5b 	dmb	ish
90013ab4:	3301      	adds	r3, #1
90013ab6:	429a      	cmp	r2, r3
90013ab8:	bfd8      	it	le
90013aba:	1a9b      	suble	r3, r3, r2
90013abc:	60c3      	str	r3, [r0, #12]
90013abe:	bd10      	pop	{r4, pc}

90013ac0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90013ac0:	6903      	ldr	r3, [r0, #16]
90013ac2:	6882      	ldr	r2, [r0, #8]
90013ac4:	f3bf 8f5b 	dmb	ish
90013ac8:	3301      	adds	r3, #1
90013aca:	429a      	cmp	r2, r3
90013acc:	bfd8      	it	le
90013ace:	1a9b      	suble	r3, r3, r2
90013ad0:	6103      	str	r3, [r0, #16]
90013ad2:	4770      	bx	lr

90013ad4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90013ad4:	b570      	push	{r4, r5, r6, lr}
90013ad6:	4604      	mov	r4, r0
90013ad8:	460e      	mov	r6, r1
90013ada:	6860      	ldr	r0, [r4, #4]
90013adc:	6803      	ldr	r3, [r0, #0]
90013ade:	685b      	ldr	r3, [r3, #4]
90013ae0:	4798      	blx	r3
90013ae2:	2800      	cmp	r0, #0
90013ae4:	d1f9      	bne.n	90013ada <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90013ae6:	4d0d      	ldr	r5, [pc, #52]	; (90013b1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90013ae8:	6828      	ldr	r0, [r5, #0]
90013aea:	6803      	ldr	r3, [r0, #0]
90013aec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013aee:	4798      	blx	r3
90013af0:	f7ed fed8 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90013af4:	6828      	ldr	r0, [r5, #0]
90013af6:	2101      	movs	r1, #1
90013af8:	f7ff ff12 	bl	90013920 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013afc:	6860      	ldr	r0, [r4, #4]
90013afe:	4631      	mov	r1, r6
90013b00:	6803      	ldr	r3, [r0, #0]
90013b02:	689b      	ldr	r3, [r3, #8]
90013b04:	4798      	blx	r3
90013b06:	6823      	ldr	r3, [r4, #0]
90013b08:	4620      	mov	r0, r4
90013b0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013b0c:	4798      	blx	r3
90013b0e:	6828      	ldr	r0, [r5, #0]
90013b10:	6803      	ldr	r3, [r0, #0]
90013b12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b16:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90013b18:	4718      	bx	r3
90013b1a:	bf00      	nop
90013b1c:	24039acc 	.word	0x24039acc

90013b20 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90013b20:	b508      	push	{r3, lr}
90013b22:	f7ed feb1 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90013b2a:	f7ed beb5 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90013b2e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90013b2e:	b510      	push	{r4, lr}
90013b30:	4604      	mov	r4, r0
90013b32:	2114      	movs	r1, #20
90013b34:	f015 fc16 	bl	90029364 <_ZdlPvj>
90013b38:	4620      	mov	r0, r4
90013b3a:	bd10      	pop	{r4, pc}

90013b3c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90013b3c:	b570      	push	{r4, r5, r6, lr}
90013b3e:	4604      	mov	r4, r0
90013b40:	6840      	ldr	r0, [r0, #4]
90013b42:	6803      	ldr	r3, [r0, #0]
90013b44:	681b      	ldr	r3, [r3, #0]
90013b46:	4798      	blx	r3
90013b48:	4605      	mov	r5, r0
90013b4a:	b930      	cbnz	r0, 90013b5a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013b4c:	7a23      	ldrb	r3, [r4, #8]
90013b4e:	b123      	cbz	r3, 90013b5a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013b50:	6860      	ldr	r0, [r4, #4]
90013b52:	6803      	ldr	r3, [r0, #0]
90013b54:	695b      	ldr	r3, [r3, #20]
90013b56:	4798      	blx	r3
90013b58:	7225      	strb	r5, [r4, #8]
90013b5a:	6860      	ldr	r0, [r4, #4]
90013b5c:	6803      	ldr	r3, [r0, #0]
90013b5e:	681b      	ldr	r3, [r3, #0]
90013b60:	4798      	blx	r3
90013b62:	b928      	cbnz	r0, 90013b70 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90013b64:	6823      	ldr	r3, [r4, #0]
90013b66:	4620      	mov	r0, r4
90013b68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90013b6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b6e:	4718      	bx	r3
90013b70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b74:	f7ed be9e 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90013b78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90013b78:	b510      	push	{r4, lr}
90013b7a:	6082      	str	r2, [r0, #8]
90013b7c:	2200      	movs	r2, #0
90013b7e:	4c03      	ldr	r4, [pc, #12]	; (90013b8c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90013b80:	e9c0 2203 	strd	r2, r2, [r0, #12]
90013b84:	e9c0 4100 	strd	r4, r1, [r0]
90013b88:	bd10      	pop	{r4, pc}
90013b8a:	bf00      	nop
90013b8c:	9002d4b8 	.word	0x9002d4b8

90013b90 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90013b90:	6840      	ldr	r0, [r0, #4]
90013b92:	6803      	ldr	r3, [r0, #0]
90013b94:	681b      	ldr	r3, [r3, #0]
90013b96:	4718      	bx	r3

90013b98 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013b98:	094a      	lsrs	r2, r1, #5
90013b9a:	4b06      	ldr	r3, [pc, #24]	; (90013bb4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90013b9c:	60c1      	str	r1, [r0, #12]
90013b9e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90013ba2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90013ba6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90013baa:	4313      	orrs	r3, r2
90013bac:	4319      	orrs	r1, r3
90013bae:	8201      	strh	r1, [r0, #16]
90013bb0:	4770      	bx	lr
90013bb2:	bf00      	nop
90013bb4:	fffff800 	.word	0xfffff800

90013bb8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013bb8:	f1a0 0008 	sub.w	r0, r0, #8
90013bbc:	e7ec      	b.n	90013b98 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90013bbe:	bf00      	nop

90013bc0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90013bc0:	b508      	push	{r3, lr}
90013bc2:	4b05      	ldr	r3, [pc, #20]	; (90013bd8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90013bc4:	6818      	ldr	r0, [r3, #0]
90013bc6:	6803      	ldr	r3, [r0, #0]
90013bc8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90013bcc:	4798      	blx	r3
90013bce:	1e43      	subs	r3, r0, #1
90013bd0:	4258      	negs	r0, r3
90013bd2:	4158      	adcs	r0, r3
90013bd4:	bd08      	pop	{r3, pc}
90013bd6:	bf00      	nop
90013bd8:	24039acc 	.word	0x24039acc

90013bdc <_ZN8touchgfx13PainterRGB565D1Ev>:
90013bdc:	4770      	bx	lr

90013bde <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90013bde:	3808      	subs	r0, #8
90013be0:	4770      	bx	lr

90013be2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90013be2:	b430      	push	{r4, r5}
90013be4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013be8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90013bec:	8a02      	ldrh	r2, [r0, #16]
90013bee:	f89d 3010 	ldrb.w	r3, [sp, #16]
90013bf2:	4629      	mov	r1, r5
90013bf4:	9202      	str	r2, [sp, #8]
90013bf6:	68c2      	ldr	r2, [r0, #12]
90013bf8:	4620      	mov	r0, r4
90013bfa:	bc30      	pop	{r4, r5}
90013bfc:	f7ee b930 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013c00 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013c00:	f7ee b924 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

90013c04 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013c04:	b510      	push	{r4, lr}
90013c06:	4604      	mov	r4, r0
90013c08:	2114      	movs	r1, #20
90013c0a:	f015 fbab 	bl	90029364 <_ZdlPvj>
90013c0e:	4620      	mov	r0, r4
90013c10:	bd10      	pop	{r4, pc}

90013c12 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013c12:	f1a0 0008 	sub.w	r0, r0, #8
90013c16:	e7f5      	b.n	90013c04 <_ZN8touchgfx13PainterRGB565D0Ev>

90013c18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013c18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013c1a:	6803      	ldr	r3, [r0, #0]
90013c1c:	460d      	mov	r5, r1
90013c1e:	4604      	mov	r4, r0
90013c20:	4601      	mov	r1, r0
90013c22:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013c24:	a802      	add	r0, sp, #8
90013c26:	4798      	blx	r3
90013c28:	6828      	ldr	r0, [r5, #0]
90013c2a:	6869      	ldr	r1, [r5, #4]
90013c2c:	466b      	mov	r3, sp
90013c2e:	c303      	stmia	r3!, {r0, r1}
90013c30:	4668      	mov	r0, sp
90013c32:	4619      	mov	r1, r3
90013c34:	f7fe ff84 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90013c38:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90013c3a:	b188      	cbz	r0, 90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c3c:	6803      	ldr	r3, [r0, #0]
90013c3e:	1d21      	adds	r1, r4, #4
90013c40:	68db      	ldr	r3, [r3, #12]
90013c42:	4798      	blx	r3
90013c44:	b160      	cbz	r0, 90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c46:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013c4a:	2b00      	cmp	r3, #0
90013c4c:	dd08      	ble.n	90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c4e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013c52:	2d00      	cmp	r5, #0
90013c54:	dd04      	ble.n	90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c56:	4a2b      	ldr	r2, [pc, #172]	; (90013d04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013c58:	7812      	ldrb	r2, [r2, #0]
90013c5a:	b11a      	cbz	r2, 90013c64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013c5c:	2a01      	cmp	r2, #1
90013c5e:	d029      	beq.n	90013cb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013c60:	b004      	add	sp, #16
90013c62:	bd70      	pop	{r4, r5, r6, pc}
90013c64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013c68:	441d      	add	r5, r3
90013c6a:	b2ad      	uxth	r5, r5
90013c6c:	b22e      	sxth	r6, r5
90013c6e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013c72:	42b3      	cmp	r3, r6
90013c74:	daf4      	bge.n	90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013c76:	6823      	ldr	r3, [r4, #0]
90013c78:	4669      	mov	r1, sp
90013c7a:	4620      	mov	r0, r4
90013c7c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013c7e:	4798      	blx	r3
90013c80:	b940      	cbnz	r0, 90013c94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013c82:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013c86:	2b01      	cmp	r3, #1
90013c88:	d004      	beq.n	90013c94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013c8a:	3301      	adds	r3, #1
90013c8c:	105b      	asrs	r3, r3, #1
90013c8e:	f8ad 3006 	strh.w	r3, [sp, #6]
90013c92:	e7f0      	b.n	90013c76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013c94:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013c98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013c9c:	4413      	add	r3, r2
90013c9e:	b29b      	uxth	r3, r3
90013ca0:	441a      	add	r2, r3
90013ca2:	f8ad 3002 	strh.w	r3, [sp, #2]
90013ca6:	b212      	sxth	r2, r2
90013ca8:	4296      	cmp	r6, r2
90013caa:	dae0      	bge.n	90013c6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013cac:	1aeb      	subs	r3, r5, r3
90013cae:	f8ad 3006 	strh.w	r3, [sp, #6]
90013cb2:	e7dc      	b.n	90013c6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013cb4:	f8bd 5000 	ldrh.w	r5, [sp]
90013cb8:	441d      	add	r5, r3
90013cba:	b2ad      	uxth	r5, r5
90013cbc:	b22e      	sxth	r6, r5
90013cbe:	f9bd 3000 	ldrsh.w	r3, [sp]
90013cc2:	42b3      	cmp	r3, r6
90013cc4:	dacc      	bge.n	90013c60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013cc6:	6823      	ldr	r3, [r4, #0]
90013cc8:	4669      	mov	r1, sp
90013cca:	4620      	mov	r0, r4
90013ccc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013cce:	4798      	blx	r3
90013cd0:	b940      	cbnz	r0, 90013ce4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013cd2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013cd6:	2b01      	cmp	r3, #1
90013cd8:	d004      	beq.n	90013ce4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013cda:	3301      	adds	r3, #1
90013cdc:	105b      	asrs	r3, r3, #1
90013cde:	f8ad 3004 	strh.w	r3, [sp, #4]
90013ce2:	e7f0      	b.n	90013cc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013ce4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013ce8:	f8bd 3000 	ldrh.w	r3, [sp]
90013cec:	4413      	add	r3, r2
90013cee:	b29b      	uxth	r3, r3
90013cf0:	441a      	add	r2, r3
90013cf2:	f8ad 3000 	strh.w	r3, [sp]
90013cf6:	b212      	sxth	r2, r2
90013cf8:	4296      	cmp	r6, r2
90013cfa:	dae0      	bge.n	90013cbe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013cfc:	1aeb      	subs	r3, r5, r3
90013cfe:	f8ad 3004 	strh.w	r3, [sp, #4]
90013d02:	e7dc      	b.n	90013cbe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013d04:	24039ac4 	.word	0x24039ac4

90013d08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013d08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013d0a:	6803      	ldr	r3, [r0, #0]
90013d0c:	4604      	mov	r4, r0
90013d0e:	4601      	mov	r1, r0
90013d10:	4668      	mov	r0, sp
90013d12:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013d14:	4798      	blx	r3
90013d16:	2100      	movs	r1, #0
90013d18:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013d1c:	4668      	mov	r0, sp
90013d1e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013d22:	9102      	str	r1, [sp, #8]
90013d24:	a902      	add	r1, sp, #8
90013d26:	f8ad 200c 	strh.w	r2, [sp, #12]
90013d2a:	f8ad 300e 	strh.w	r3, [sp, #14]
90013d2e:	f7fe ff07 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90013d32:	6823      	ldr	r3, [r4, #0]
90013d34:	4669      	mov	r1, sp
90013d36:	4620      	mov	r0, r4
90013d38:	691b      	ldr	r3, [r3, #16]
90013d3a:	4798      	blx	r3
90013d3c:	b004      	add	sp, #16
90013d3e:	bd10      	pop	{r4, pc}

90013d40 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013d40:	2101      	movs	r1, #1
90013d42:	2200      	movs	r2, #0
90013d44:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013d48:	490a      	ldr	r1, [pc, #40]	; (90013d74 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013d4a:	8082      	strh	r2, [r0, #4]
90013d4c:	6001      	str	r1, [r0, #0]
90013d4e:	21ff      	movs	r1, #255	; 0xff
90013d50:	80c2      	strh	r2, [r0, #6]
90013d52:	8102      	strh	r2, [r0, #8]
90013d54:	8142      	strh	r2, [r0, #10]
90013d56:	8182      	strh	r2, [r0, #12]
90013d58:	81c2      	strh	r2, [r0, #14]
90013d5a:	8202      	strh	r2, [r0, #16]
90013d5c:	8242      	strh	r2, [r0, #18]
90013d5e:	61c2      	str	r2, [r0, #28]
90013d60:	8402      	strh	r2, [r0, #32]
90013d62:	8442      	strh	r2, [r0, #34]	; 0x22
90013d64:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90013d68:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90013d6c:	6282      	str	r2, [r0, #40]	; 0x28
90013d6e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013d72:	4770      	bx	lr
90013d74:	9002d514 	.word	0x9002d514

90013d78 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90013d78:	f101 0364 	add.w	r3, r1, #100	; 0x64
90013d7c:	4602      	mov	r2, r0
90013d7e:	cb03      	ldmia	r3!, {r0, r1}
90013d80:	6010      	str	r0, [r2, #0]
90013d82:	4610      	mov	r0, r2
90013d84:	6051      	str	r1, [r2, #4]
90013d86:	4770      	bx	lr

90013d88 <_ZN8touchgfx4LineD1Ev>:
90013d88:	4770      	bx	lr

90013d8a <_ZN8touchgfx4LineD0Ev>:
90013d8a:	b510      	push	{r4, lr}
90013d8c:	4604      	mov	r4, r0
90013d8e:	2170      	movs	r1, #112	; 0x70
90013d90:	f015 fae8 	bl	90029364 <_ZdlPvj>
90013d94:	4620      	mov	r0, r4
90013d96:	bd10      	pop	{r4, pc}

90013d98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90013d98:	b507      	push	{r0, r1, r2, lr}
90013d9a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90013d9e:	ab01      	add	r3, sp, #4
90013da0:	6809      	ldr	r1, [r1, #0]
90013da2:	6800      	ldr	r0, [r0, #0]
90013da4:	f005 fc0e 	bl	900195c4 <_ZN8touchgfx6muldivElllRl>
90013da8:	b003      	add	sp, #12
90013daa:	f85d fb04 	ldr.w	pc, [sp], #4

90013dae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
90013dae:	6800      	ldr	r0, [r0, #0]
90013db0:	2800      	cmp	r0, #0
90013db2:	bfb9      	ittee	lt
90013db4:	2320      	movlt	r3, #32
90013db6:	fb90 f0f3 	sdivlt	r0, r0, r3
90013dba:	301f      	addge	r0, #31
90013dbc:	1140      	asrge	r0, r0, #5
90013dbe:	4770      	bx	lr

90013dc0 <_ZNK8touchgfx4Line17invalidateContentEv>:
90013dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013dc4:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90013dc8:	b089      	sub	sp, #36	; 0x24
90013dca:	4604      	mov	r4, r0
90013dcc:	b353      	cbz	r3, 90013e24 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
90013dce:	6803      	ldr	r3, [r0, #0]
90013dd0:	4601      	mov	r1, r0
90013dd2:	a802      	add	r0, sp, #8
90013dd4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013dd6:	4798      	blx	r3
90013dd8:	2220      	movs	r2, #32
90013dda:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
90013dde:	6b61      	ldr	r1, [r4, #52]	; 0x34
90013de0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90013de2:	f8d4 b000 	ldr.w	fp, [r4]
90013de6:	fb9a f0f2 	sdiv	r0, sl, r2
90013dea:	fb91 f5f2 	sdiv	r5, r1, r2
90013dee:	fb93 f6f2 	sdiv	r6, r3, r2
90013df2:	1b40      	subs	r0, r0, r5
90013df4:	0076      	lsls	r6, r6, #1
90013df6:	2800      	cmp	r0, #0
90013df8:	bfb8      	it	lt
90013dfa:	4240      	neglt	r0, r0
90013dfc:	4286      	cmp	r6, r0
90013dfe:	dc0c      	bgt.n	90013e1a <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90013e00:	6b25      	ldr	r5, [r4, #48]	; 0x30
90013e02:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90013e06:	fb95 f0f2 	sdiv	r0, r5, r2
90013e0a:	fb98 f7f2 	sdiv	r7, r8, r2
90013e0e:	1bc0      	subs	r0, r0, r7
90013e10:	2800      	cmp	r0, #0
90013e12:	bfb8      	it	lt
90013e14:	4240      	neglt	r0, r0
90013e16:	4286      	cmp	r6, r0
90013e18:	dd07      	ble.n	90013e2a <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
90013e1a:	f8db 3010 	ldr.w	r3, [fp, #16]
90013e1e:	a902      	add	r1, sp, #8
90013e20:	4620      	mov	r0, r4
90013e22:	4798      	blx	r3
90013e24:	b009      	add	sp, #36	; 0x24
90013e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013e2a:	eb01 060a 	add.w	r6, r1, sl
90013e2e:	2002      	movs	r0, #2
90013e30:	eb08 0705 	add.w	r7, r8, r5
90013e34:	3301      	adds	r3, #1
90013e36:	f10d 0920 	add.w	r9, sp, #32
90013e3a:	9101      	str	r1, [sp, #4]
90013e3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90013e40:	fb96 f6f0 	sdiv	r6, r6, r0
90013e44:	fb97 f7f0 	sdiv	r7, r7, r0
90013e48:	4103      	asrs	r3, r0
90013e4a:	b236      	sxth	r6, r6
90013e4c:	b23f      	sxth	r7, r7
90013e4e:	f849 3d08 	str.w	r3, [r9, #-8]!
90013e52:	4648      	mov	r0, r9
90013e54:	fb96 f6f2 	sdiv	r6, r6, r2
90013e58:	fb97 f7f2 	sdiv	r7, r7, r2
90013e5c:	f7ff ffa7 	bl	90013dae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90013e60:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013e64:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90013e68:	fa1f fe87 	uxth.w	lr, r7
90013e6c:	9901      	ldr	r1, [sp, #4]
90013e6e:	fa1f fc86 	uxth.w	ip, r6
90013e72:	4293      	cmp	r3, r2
90013e74:	b280      	uxth	r0, r0
90013e76:	eba1 0a0a 	sub.w	sl, r1, sl
90013e7a:	da54      	bge.n	90013f26 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
90013e7c:	ebac 0100 	sub.w	r1, ip, r0
90013e80:	f1ba 0f00 	cmp.w	sl, #0
90013e84:	4460      	add	r0, ip
90013e86:	f9bd a008 	ldrsh.w	sl, [sp, #8]
90013e8a:	b289      	uxth	r1, r1
90013e8c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90013e90:	b280      	uxth	r0, r0
90013e92:	b20e      	sxth	r6, r1
90013e94:	da29      	bge.n	90013eea <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90013e96:	eba8 0505 	sub.w	r5, r8, r5
90013e9a:	2d00      	cmp	r5, #0
90013e9c:	da2a      	bge.n	90013ef4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90013e9e:	fa1f f88a 	uxth.w	r8, sl
90013ea2:	f8ad a010 	strh.w	sl, [sp, #16]
90013ea6:	fa1f f58c 	uxth.w	r5, ip
90013eaa:	f8ad c012 	strh.w	ip, [sp, #18]
90013eae:	eba0 0008 	sub.w	r0, r0, r8
90013eb2:	4443      	add	r3, r8
90013eb4:	f8ad 6018 	strh.w	r6, [sp, #24]
90013eb8:	f8ad 0014 	strh.w	r0, [sp, #20]
90013ebc:	1a59      	subs	r1, r3, r1
90013ebe:	ebae 0005 	sub.w	r0, lr, r5
90013ec2:	f8ad 701a 	strh.w	r7, [sp, #26]
90013ec6:	f8ad 101c 	strh.w	r1, [sp, #28]
90013eca:	f8ad 0016 	strh.w	r0, [sp, #22]
90013ece:	442a      	add	r2, r5
90013ed0:	eba2 0e0e 	sub.w	lr, r2, lr
90013ed4:	f8ad e01e 	strh.w	lr, [sp, #30]
90013ed8:	f8db 3010 	ldr.w	r3, [fp, #16]
90013edc:	a904      	add	r1, sp, #16
90013ede:	4620      	mov	r0, r4
90013ee0:	4798      	blx	r3
90013ee2:	6823      	ldr	r3, [r4, #0]
90013ee4:	4649      	mov	r1, r9
90013ee6:	691b      	ldr	r3, [r3, #16]
90013ee8:	e79a      	b.n	90013e20 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
90013eea:	d003      	beq.n	90013ef4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90013eec:	eba8 0505 	sub.w	r5, r8, r5
90013ef0:	2d00      	cmp	r5, #0
90013ef2:	dcd4      	bgt.n	90013e9e <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90013ef4:	fa1f f88a 	uxth.w	r8, sl
90013ef8:	f8ad 6010 	strh.w	r6, [sp, #16]
90013efc:	fa1f f58c 	uxth.w	r5, ip
90013f00:	f8ad c012 	strh.w	ip, [sp, #18]
90013f04:	4443      	add	r3, r8
90013f06:	eba0 0008 	sub.w	r0, r0, r8
90013f0a:	f8ad a018 	strh.w	sl, [sp, #24]
90013f0e:	1a59      	subs	r1, r3, r1
90013f10:	ebae 0305 	sub.w	r3, lr, r5
90013f14:	f8ad 701a 	strh.w	r7, [sp, #26]
90013f18:	f8ad 1014 	strh.w	r1, [sp, #20]
90013f1c:	f8ad 3016 	strh.w	r3, [sp, #22]
90013f20:	f8ad 001c 	strh.w	r0, [sp, #28]
90013f24:	e7d3      	b.n	90013ece <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90013f26:	ebae 0100 	sub.w	r1, lr, r0
90013f2a:	f1ba 0f00 	cmp.w	sl, #0
90013f2e:	4470      	add	r0, lr
90013f30:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90013f34:	b289      	uxth	r1, r1
90013f36:	f9bd e008 	ldrsh.w	lr, [sp, #8]
90013f3a:	b280      	uxth	r0, r0
90013f3c:	b20f      	sxth	r7, r1
90013f3e:	da20      	bge.n	90013f82 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90013f40:	eba8 0505 	sub.w	r5, r8, r5
90013f44:	2d00      	cmp	r5, #0
90013f46:	da21      	bge.n	90013f8c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90013f48:	fa1f f88e 	uxth.w	r8, lr
90013f4c:	f8ad e010 	strh.w	lr, [sp, #16]
90013f50:	fa1f f58a 	uxth.w	r5, sl
90013f54:	f8ad a012 	strh.w	sl, [sp, #18]
90013f58:	4443      	add	r3, r8
90013f5a:	ebac 0e08 	sub.w	lr, ip, r8
90013f5e:	442a      	add	r2, r5
90013f60:	1b40      	subs	r0, r0, r5
90013f62:	eba3 0c0c 	sub.w	ip, r3, ip
90013f66:	f8ad e014 	strh.w	lr, [sp, #20]
90013f6a:	1a51      	subs	r1, r2, r1
90013f6c:	f8ad 0016 	strh.w	r0, [sp, #22]
90013f70:	f8ad 6018 	strh.w	r6, [sp, #24]
90013f74:	f8ad 701a 	strh.w	r7, [sp, #26]
90013f78:	f8ad c01c 	strh.w	ip, [sp, #28]
90013f7c:	f8ad 101e 	strh.w	r1, [sp, #30]
90013f80:	e7aa      	b.n	90013ed8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90013f82:	d003      	beq.n	90013f8c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90013f84:	eba8 0505 	sub.w	r5, r8, r5
90013f88:	2d00      	cmp	r5, #0
90013f8a:	dcdd      	bgt.n	90013f48 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
90013f8c:	fa1f f58e 	uxth.w	r5, lr
90013f90:	f8ad 7012 	strh.w	r7, [sp, #18]
90013f94:	fa1f f88a 	uxth.w	r8, sl
90013f98:	f8ad e010 	strh.w	lr, [sp, #16]
90013f9c:	442b      	add	r3, r5
90013f9e:	ebac 0705 	sub.w	r7, ip, r5
90013fa2:	4442      	add	r2, r8
90013fa4:	eba0 0008 	sub.w	r0, r0, r8
90013fa8:	eba3 0c0c 	sub.w	ip, r3, ip
90013fac:	f8ad 7014 	strh.w	r7, [sp, #20]
90013fb0:	1a51      	subs	r1, r2, r1
90013fb2:	f8ad 6018 	strh.w	r6, [sp, #24]
90013fb6:	f8ad a01a 	strh.w	sl, [sp, #26]
90013fba:	f8ad 1016 	strh.w	r1, [sp, #22]
90013fbe:	f8ad c01c 	strh.w	ip, [sp, #28]
90013fc2:	f8ad 001e 	strh.w	r0, [sp, #30]
90013fc6:	e787      	b.n	90013ed8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

90013fc8 <_ZN8touchgfx7CWRUtil4sineEi>:
90013fc8:	f44f 73b4 	mov.w	r3, #360	; 0x168
90013fcc:	fb90 f2f3 	sdiv	r2, r0, r3
90013fd0:	fb02 0013 	mls	r0, r2, r3, r0
90013fd4:	2800      	cmp	r0, #0
90013fd6:	bfb8      	it	lt
90013fd8:	18c0      	addlt	r0, r0, r3
90013fda:	4b0a      	ldr	r3, [pc, #40]	; (90014004 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90013fdc:	285a      	cmp	r0, #90	; 0x5a
90013fde:	dc02      	bgt.n	90013fe6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90013fe0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90013fe4:	4770      	bx	lr
90013fe6:	28b4      	cmp	r0, #180	; 0xb4
90013fe8:	dc02      	bgt.n	90013ff0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90013fea:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
90013fee:	e7f7      	b.n	90013fe0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90013ff0:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90013ff4:	bfd4      	ite	le
90013ff6:	38b4      	suble	r0, #180	; 0xb4
90013ff8:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
90013ffc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014000:	4240      	negs	r0, r0
90014002:	4770      	bx	lr
90014004:	9002d5e0 	.word	0x9002d5e0

90014008 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90014008:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
9001400c:	f04f 0300 	mov.w	r3, #0
90014010:	bf2c      	ite	cs
90014012:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90014016:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
9001401a:	1899      	adds	r1, r3, r2
9001401c:	4288      	cmp	r0, r1
9001401e:	bf24      	itt	cs
90014020:	1853      	addcs	r3, r2, r1
90014022:	1a40      	subcs	r0, r0, r1
90014024:	0892      	lsrs	r2, r2, #2
90014026:	ea4f 0353 	mov.w	r3, r3, lsr #1
9001402a:	d1f6      	bne.n	9001401a <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
9001402c:	4618      	mov	r0, r3
9001402e:	4770      	bx	lr

90014030 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90014030:	b510      	push	{r4, lr}
90014032:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90014036:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
9001403a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
9001403e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90014042:	139b      	asrs	r3, r3, #14
90014044:	13a4      	asrs	r4, r4, #14
90014046:	429c      	cmp	r4, r3
90014048:	bfb8      	it	lt
9001404a:	461c      	movlt	r4, r3
9001404c:	2c01      	cmp	r4, #1
9001404e:	dd07      	ble.n	90014060 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90014050:	fb91 f1f4 	sdiv	r1, r1, r4
90014054:	fb90 f0f4 	sdiv	r0, r0, r4
90014058:	f7ff ffea 	bl	90014030 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001405c:	4360      	muls	r0, r4
9001405e:	bd10      	pop	{r4, pc}
90014060:	4340      	muls	r0, r0
90014062:	fb01 0001 	mla	r0, r1, r1, r0
90014066:	f7ff ffcf 	bl	90014008 <_ZN8touchgfx7CWRUtil5isqrtEm>
9001406a:	e7f8      	b.n	9001405e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

9001406c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
9001406c:	2800      	cmp	r0, #0
9001406e:	b508      	push	{r3, lr}
90014070:	da05      	bge.n	9001407e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90014072:	4240      	negs	r0, r0
90014074:	f7ff fffa 	bl	9001406c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014078:	4240      	negs	r0, r0
9001407a:	b240      	sxtb	r0, r0
9001407c:	bd08      	pop	{r3, pc}
9001407e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90014082:	dc11      	bgt.n	900140a8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90014084:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90014088:	dd09      	ble.n	9001409e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001408a:	4340      	muls	r0, r0
9001408c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
90014090:	f7ff ffba 	bl	90014008 <_ZN8touchgfx7CWRUtil5isqrtEm>
90014094:	f7ff ffea 	bl	9001406c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014098:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
9001409c:	e7ed      	b.n	9001407a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
9001409e:	3003      	adds	r0, #3
900140a0:	4b02      	ldr	r3, [pc, #8]	; (900140ac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
900140a2:	10c0      	asrs	r0, r0, #3
900140a4:	5618      	ldrsb	r0, [r3, r0]
900140a6:	e7e9      	b.n	9001407c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900140a8:	2000      	movs	r0, #0
900140aa:	e7e7      	b.n	9001407c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900140ac:	9002d584 	.word	0x9002d584

900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
900140b0:	4281      	cmp	r1, r0
900140b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
900140b4:	460c      	mov	r4, r1
900140b6:	4615      	mov	r5, r2
900140b8:	dd07      	ble.n	900140ca <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
900140ba:	4601      	mov	r1, r0
900140bc:	4620      	mov	r0, r4
900140be:	f7ff fff7 	bl	900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900140c2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900140c6:	b003      	add	sp, #12
900140c8:	bd30      	pop	{r4, r5, pc}
900140ca:	f7ff ffb1 	bl	90014030 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900140ce:	6028      	str	r0, [r5, #0]
900140d0:	2800      	cmp	r0, #0
900140d2:	d0f8      	beq.n	900140c6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
900140d4:	4602      	mov	r2, r0
900140d6:	ab01      	add	r3, sp, #4
900140d8:	f44f 6180 	mov.w	r1, #1024	; 0x400
900140dc:	4620      	mov	r0, r4
900140de:	f005 fa71 	bl	900195c4 <_ZN8touchgfx6muldivElllRl>
900140e2:	f7ff ffc3 	bl	9001406c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900140e6:	e7ee      	b.n	900140c6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

900140e8 <_ZN8touchgfx4LineC1Ev>:
900140e8:	b510      	push	{r4, lr}
900140ea:	4604      	mov	r4, r0
900140ec:	f7ff fe28 	bl	90013d40 <_ZN8touchgfx12CanvasWidgetC1Ev>
900140f0:	4b0c      	ldr	r3, [pc, #48]	; (90014124 <_ZN8touchgfx4LineC1Ev+0x3c>)
900140f2:	2220      	movs	r2, #32
900140f4:	4620      	mov	r0, r4
900140f6:	6023      	str	r3, [r4, #0]
900140f8:	2300      	movs	r3, #0
900140fa:	63e2      	str	r2, [r4, #60]	; 0x3c
900140fc:	2212      	movs	r2, #18
900140fe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90014102:	66e2      	str	r2, [r4, #108]	; 0x6c
90014104:	60a3      	str	r3, [r4, #8]
90014106:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
9001410a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
9001410e:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90014112:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90014116:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
9001411a:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
9001411e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90014122:	bd10      	pop	{r4, pc}
90014124:	9002d6a0 	.word	0x9002d6a0

90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90014128:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001412c:	6b47      	ldr	r7, [r0, #52]	; 0x34
9001412e:	4604      	mov	r4, r0
90014130:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014132:	6b85      	ldr	r5, [r0, #56]	; 0x38
90014134:	6b02      	ldr	r2, [r0, #48]	; 0x30
90014136:	1aff      	subs	r7, r7, r3
90014138:	eba5 0502 	sub.w	r5, r5, r2
9001413c:	d142      	bne.n	900141c4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
9001413e:	b955      	cbnz	r5, 90014156 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90014140:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
90014144:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
90014148:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001414c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
90014150:	b002      	add	sp, #8
90014152:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90014156:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
9001415a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
9001415e:	4629      	mov	r1, r5
90014160:	2502      	movs	r5, #2
90014162:	4642      	mov	r2, r8
90014164:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90014166:	f005 fa4c 	bl	90019602 <_ZN8touchgfx6muldivElll>
9001416a:	4642      	mov	r2, r8
9001416c:	4639      	mov	r1, r7
9001416e:	fb90 f6f5 	sdiv	r6, r0, r5
90014172:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90014174:	f005 fa45 	bl	90019602 <_ZN8touchgfx6muldivElll>
90014178:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
9001417c:	fb90 f5f5 	sdiv	r5, r0, r5
90014180:	f1b9 0f00 	cmp.w	r9, #0
90014184:	d067      	beq.n	90014256 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90014186:	f1b9 0f02 	cmp.w	r9, #2
9001418a:	d878      	bhi.n	9001427e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001418c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001418e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90014190:	1b93      	subs	r3, r2, r6
90014192:	4432      	add	r2, r6
90014194:	1b5b      	subs	r3, r3, r5
90014196:	1b52      	subs	r2, r2, r5
90014198:	6463      	str	r3, [r4, #68]	; 0x44
9001419a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001419c:	6522      	str	r2, [r4, #80]	; 0x50
9001419e:	18e9      	adds	r1, r5, r3
900141a0:	1b5b      	subs	r3, r3, r5
900141a2:	1b89      	subs	r1, r1, r6
900141a4:	1b9b      	subs	r3, r3, r6
900141a6:	6561      	str	r1, [r4, #84]	; 0x54
900141a8:	1b81      	subs	r1, r0, r6
900141aa:	4430      	add	r0, r6
900141ac:	4429      	add	r1, r5
900141ae:	4428      	add	r0, r5
900141b0:	64a1      	str	r1, [r4, #72]	; 0x48
900141b2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
900141b4:	64e0      	str	r0, [r4, #76]	; 0x4c
900141b6:	186f      	adds	r7, r5, r1
900141b8:	1b49      	subs	r1, r1, r5
900141ba:	4437      	add	r7, r6
900141bc:	4431      	add	r1, r6
900141be:	65a7      	str	r7, [r4, #88]	; 0x58
900141c0:	65e1      	str	r1, [r4, #92]	; 0x5c
900141c2:	e05b      	b.n	9001427c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
900141c4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
900141c8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
900141cc:	2d00      	cmp	r5, #0
900141ce:	d0c6      	beq.n	9001415e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900141d0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
900141d4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
900141d8:	fb93 f2f8 	sdiv	r2, r3, r8
900141dc:	fb08 3312 	mls	r3, r8, r2, r3
900141e0:	b353      	cbz	r3, 90014238 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
900141e2:	fb98 f2f3 	sdiv	r2, r8, r3
900141e6:	fb03 8812 	mls	r8, r3, r2, r8
900141ea:	f1b8 0f00 	cmp.w	r8, #0
900141ee:	d1f3      	bne.n	900141d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
900141f0:	2b01      	cmp	r3, #1
900141f2:	f24b 5104 	movw	r1, #46340	; 0xb504
900141f6:	bf1c      	itt	ne
900141f8:	fb97 f7f3 	sdivne	r7, r7, r3
900141fc:	fb95 f5f3 	sdivne	r5, r5, r3
90014200:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90014204:	4608      	mov	r0, r1
90014206:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
9001420a:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
9001420e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90014212:	428b      	cmp	r3, r1
90014214:	dd01      	ble.n	9001421a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90014216:	428a      	cmp	r2, r1
90014218:	dc10      	bgt.n	9001423c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
9001421a:	fb90 f3f3 	sdiv	r3, r0, r3
9001421e:	fb90 f2f2 	sdiv	r2, r0, r2
90014222:	4293      	cmp	r3, r2
90014224:	bfa8      	it	ge
90014226:	4613      	movge	r3, r2
90014228:	435f      	muls	r7, r3
9001422a:	435d      	muls	r5, r3
9001422c:	4629      	mov	r1, r5
9001422e:	4638      	mov	r0, r7
90014230:	f7ff fefe 	bl	90014030 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90014234:	4680      	mov	r8, r0
90014236:	e792      	b.n	9001415e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90014238:	4643      	mov	r3, r8
9001423a:	e7d9      	b.n	900141f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
9001423c:	fb93 f3f1 	sdiv	r3, r3, r1
90014240:	fb92 f2f1 	sdiv	r2, r2, r1
90014244:	4293      	cmp	r3, r2
90014246:	bfcc      	ite	gt
90014248:	3301      	addgt	r3, #1
9001424a:	1c53      	addle	r3, r2, #1
9001424c:	fb97 f7f3 	sdiv	r7, r7, r3
90014250:	fb95 f5f3 	sdiv	r5, r5, r3
90014254:	e7ea      	b.n	9001422c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90014256:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90014258:	6b60      	ldr	r0, [r4, #52]	; 0x34
9001425a:	1b93      	subs	r3, r2, r6
9001425c:	4432      	add	r2, r6
9001425e:	6463      	str	r3, [r4, #68]	; 0x44
90014260:	6b23      	ldr	r3, [r4, #48]	; 0x30
90014262:	6522      	str	r2, [r4, #80]	; 0x50
90014264:	18e9      	adds	r1, r5, r3
90014266:	1b5b      	subs	r3, r3, r5
90014268:	6561      	str	r1, [r4, #84]	; 0x54
9001426a:	1b81      	subs	r1, r0, r6
9001426c:	4430      	add	r0, r6
9001426e:	64a1      	str	r1, [r4, #72]	; 0x48
90014270:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90014272:	64e0      	str	r0, [r4, #76]	; 0x4c
90014274:	186f      	adds	r7, r5, r1
90014276:	1b49      	subs	r1, r1, r5
90014278:	65a7      	str	r7, [r4, #88]	; 0x58
9001427a:	65e1      	str	r1, [r4, #92]	; 0x5c
9001427c:	6623      	str	r3, [r4, #96]	; 0x60
9001427e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90014280:	f104 0148 	add.w	r1, r4, #72	; 0x48
90014284:	6d63      	ldr	r3, [r4, #84]	; 0x54
90014286:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001428a:	9200      	str	r2, [sp, #0]
9001428c:	9301      	str	r3, [sp, #4]
9001428e:	680f      	ldr	r7, [r1, #0]
90014290:	3104      	adds	r1, #4
90014292:	9800      	ldr	r0, [sp, #0]
90014294:	42ba      	cmp	r2, r7
90014296:	bfa8      	it	ge
90014298:	463a      	movge	r2, r7
9001429a:	4287      	cmp	r7, r0
9001429c:	9801      	ldr	r0, [sp, #4]
9001429e:	bfc8      	it	gt
900142a0:	9700      	strgt	r7, [sp, #0]
900142a2:	68cf      	ldr	r7, [r1, #12]
900142a4:	42bb      	cmp	r3, r7
900142a6:	bfa8      	it	ge
900142a8:	463b      	movge	r3, r7
900142aa:	4287      	cmp	r7, r0
900142ac:	bfc8      	it	gt
900142ae:	9701      	strgt	r7, [sp, #4]
900142b0:	458c      	cmp	ip, r1
900142b2:	d1ec      	bne.n	9001428e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
900142b4:	2720      	movs	r7, #32
900142b6:	4668      	mov	r0, sp
900142b8:	fb92 f8f7 	sdiv	r8, r2, r7
900142bc:	fb93 f7f7 	sdiv	r7, r3, r7
900142c0:	f7ff fd75 	bl	90013dae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900142c4:	4682      	mov	sl, r0
900142c6:	a801      	add	r0, sp, #4
900142c8:	f7ff fd71 	bl	90013dae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900142cc:	ebaa 0208 	sub.w	r2, sl, r8
900142d0:	1bc0      	subs	r0, r0, r7
900142d2:	f1b9 0f01 	cmp.w	r9, #1
900142d6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
900142da:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
900142de:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
900142e2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
900142e6:	f47f af33 	bne.w	90014150 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
900142ea:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
900142ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
900142ee:	1b83      	subs	r3, r0, r6
900142f0:	6463      	str	r3, [r4, #68]	; 0x44
900142f2:	6b23      	ldr	r3, [r4, #48]	; 0x30
900142f4:	18ea      	adds	r2, r5, r3
900142f6:	6562      	str	r2, [r4, #84]	; 0x54
900142f8:	1b8a      	subs	r2, r1, r6
900142fa:	4431      	add	r1, r6
900142fc:	4406      	add	r6, r0
900142fe:	64a2      	str	r2, [r4, #72]	; 0x48
90014300:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90014302:	64e1      	str	r1, [r4, #76]	; 0x4c
90014304:	18af      	adds	r7, r5, r2
90014306:	1b52      	subs	r2, r2, r5
90014308:	1b5d      	subs	r5, r3, r5
9001430a:	6526      	str	r6, [r4, #80]	; 0x50
9001430c:	65a7      	str	r7, [r4, #88]	; 0x58
9001430e:	65e2      	str	r2, [r4, #92]	; 0x5c
90014310:	6625      	str	r5, [r4, #96]	; 0x60
90014312:	e71d      	b.n	90014150 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90014314 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90014314:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014316:	428b      	cmp	r3, r1
90014318:	d102      	bne.n	90014320 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
9001431a:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001431c:	4293      	cmp	r3, r2
9001431e:	d003      	beq.n	90014328 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90014320:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
90014324:	f7ff bf00 	b.w	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
90014328:	4770      	bx	lr

9001432a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
9001432a:	6b43      	ldr	r3, [r0, #52]	; 0x34
9001432c:	428b      	cmp	r3, r1
9001432e:	d102      	bne.n	90014336 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90014330:	6b83      	ldr	r3, [r0, #56]	; 0x38
90014332:	4293      	cmp	r3, r2
90014334:	d003      	beq.n	9001433e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90014336:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
9001433a:	f7ff bef5 	b.w	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>
9001433e:	4770      	bx	lr

90014340 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90014340:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
90014344:	f7ff bef0 	b.w	90014128 <_ZN8touchgfx4Line17updateCachedShapeEv>

90014348 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90014348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001434c:	b0a0      	sub	sp, #128	; 0x80
9001434e:	4604      	mov	r4, r0
90014350:	460a      	mov	r2, r1
90014352:	4601      	mov	r1, r0
90014354:	a804      	add	r0, sp, #16
90014356:	f014 fda5 	bl	90028ea4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
9001435a:	2300      	movs	r3, #0
9001435c:	9301      	str	r3, [sp, #4]
9001435e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90014362:	2b01      	cmp	r3, #1
90014364:	d17c      	bne.n	90014460 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90014366:	6c60      	ldr	r0, [r4, #68]	; 0x44
90014368:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001436a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001436c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001436e:	1ac0      	subs	r0, r0, r3
90014370:	eba1 0102 	sub.w	r1, r1, r2
90014374:	d437      	bmi.n	900143e6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90014376:	2900      	cmp	r1, #0
90014378:	aa01      	add	r2, sp, #4
9001437a:	db2e      	blt.n	900143da <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001437c:	f7ff fe98 	bl	900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014380:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90014384:	6d62      	ldr	r2, [r4, #84]	; 0x54
90014386:	a804      	add	r0, sp, #16
90014388:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001438a:	f014 ff0b 	bl	900291a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001438e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90014390:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90014392:	a804      	add	r0, sp, #16
90014394:	f014 ff53 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014398:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001439a:	2db3      	cmp	r5, #179	; 0xb3
9001439c:	dc33      	bgt.n	90014406 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001439e:	eba6 0805 	sub.w	r8, r6, r5
900143a2:	4640      	mov	r0, r8
900143a4:	f7ff fe10 	bl	90013fc8 <_ZN8touchgfx7CWRUtil4sineEi>
900143a8:	a902      	add	r1, sp, #8
900143aa:	9002      	str	r0, [sp, #8]
900143ac:	a801      	add	r0, sp, #4
900143ae:	f7ff fcf3 	bl	90013d98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900143b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
900143b4:	1847      	adds	r7, r0, r1
900143b6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900143ba:	f7ff fe05 	bl	90013fc8 <_ZN8touchgfx7CWRUtil4sineEi>
900143be:	a903      	add	r1, sp, #12
900143c0:	9003      	str	r0, [sp, #12]
900143c2:	a801      	add	r0, sp, #4
900143c4:	f7ff fce8 	bl	90013d98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900143c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900143ca:	4639      	mov	r1, r7
900143cc:	1a12      	subs	r2, r2, r0
900143ce:	a804      	add	r0, sp, #16
900143d0:	f014 ff35 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900143d4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900143d6:	441d      	add	r5, r3
900143d8:	e7df      	b.n	9001439a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
900143da:	4249      	negs	r1, r1
900143dc:	f7ff fe68 	bl	900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900143e0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
900143e4:	e7ce      	b.n	90014384 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900143e6:	2900      	cmp	r1, #0
900143e8:	f1c0 0000 	rsb	r0, r0, #0
900143ec:	aa01      	add	r2, sp, #4
900143ee:	db04      	blt.n	900143fa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
900143f0:	f7ff fe5e 	bl	900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900143f4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
900143f8:	e7c4      	b.n	90014384 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900143fa:	4249      	negs	r1, r1
900143fc:	f7ff fe58 	bl	900140b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014400:	f500 7687 	add.w	r6, r0, #270	; 0x10e
90014404:	e7be      	b.n	90014384 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90014406:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90014408:	a804      	add	r0, sp, #16
9001440a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9001440c:	f014 ff17 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014410:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014412:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014414:	a804      	add	r0, sp, #16
90014416:	f014 ff12 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001441a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001441c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
90014420:	2d00      	cmp	r5, #0
90014422:	dd31      	ble.n	90014488 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
90014424:	eb05 0806 	add.w	r8, r5, r6
90014428:	4640      	mov	r0, r8
9001442a:	f7ff fdcd 	bl	90013fc8 <_ZN8touchgfx7CWRUtil4sineEi>
9001442e:	a902      	add	r1, sp, #8
90014430:	9002      	str	r0, [sp, #8]
90014432:	a801      	add	r0, sp, #4
90014434:	f7ff fcb0 	bl	90013d98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014438:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001443a:	1847      	adds	r7, r0, r1
9001443c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90014440:	f7ff fdc2 	bl	90013fc8 <_ZN8touchgfx7CWRUtil4sineEi>
90014444:	a903      	add	r1, sp, #12
90014446:	9003      	str	r0, [sp, #12]
90014448:	a801      	add	r0, sp, #4
9001444a:	f7ff fca5 	bl	90013d98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001444e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90014450:	4639      	mov	r1, r7
90014452:	1a12      	subs	r2, r2, r0
90014454:	a804      	add	r0, sp, #16
90014456:	f014 fef2 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001445a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
9001445c:	1aed      	subs	r5, r5, r3
9001445e:	e7df      	b.n	90014420 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90014460:	6d62      	ldr	r2, [r4, #84]	; 0x54
90014462:	a804      	add	r0, sp, #16
90014464:	6c61      	ldr	r1, [r4, #68]	; 0x44
90014466:	f014 fe9d 	bl	900291a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001446a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001446c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001446e:	a804      	add	r0, sp, #16
90014470:	f014 fee5 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014474:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90014476:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90014478:	a804      	add	r0, sp, #16
9001447a:	f014 fee0 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001447e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014480:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014482:	a804      	add	r0, sp, #16
90014484:	f014 fedb 	bl	9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014488:	21ff      	movs	r1, #255	; 0xff
9001448a:	a804      	add	r0, sp, #16
9001448c:	f014 fdc6 	bl	9002901c <_ZN8touchgfx6Canvas6renderEh>
90014490:	4b04      	ldr	r3, [pc, #16]	; (900144a4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90014492:	4604      	mov	r4, r0
90014494:	a80c      	add	r0, sp, #48	; 0x30
90014496:	9304      	str	r3, [sp, #16]
90014498:	f001 fa9c 	bl	900159d4 <_ZN8touchgfx7OutlineD1Ev>
9001449c:	4620      	mov	r0, r4
9001449e:	b020      	add	sp, #128	; 0x80
900144a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900144a4:	9002dec4 	.word	0x9002dec4

900144a8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900144a8:	b508      	push	{r3, lr}
900144aa:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900144ae:	b10b      	cbz	r3, 900144b4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900144b0:	f7ed fee2 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900144b4:	bd08      	pop	{r3, pc}

900144b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
900144b6:	6803      	ldr	r3, [r0, #0]
900144b8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
900144bc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900144be:	4718      	bx	r3

900144c0 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
900144c0:	4770      	bx	lr

900144c2 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
900144c2:	b510      	push	{r4, lr}
900144c4:	4604      	mov	r4, r0
900144c6:	212c      	movs	r1, #44	; 0x2c
900144c8:	f014 ff4c 	bl	90029364 <_ZdlPvj>
900144cc:	4620      	mov	r0, r4
900144ce:	bd10      	pop	{r4, pc}

900144d0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
900144d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900144d4:	2bff      	cmp	r3, #255	; 0xff
900144d6:	b510      	push	{r4, lr}
900144d8:	d104      	bne.n	900144e4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
900144da:	8cca      	ldrh	r2, [r1, #38]	; 0x26
900144dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
900144e0:	429a      	cmp	r2, r3
900144e2:	d105      	bne.n	900144f0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
900144e4:	2300      	movs	r3, #0
900144e6:	8003      	strh	r3, [r0, #0]
900144e8:	8043      	strh	r3, [r0, #2]
900144ea:	8083      	strh	r3, [r0, #4]
900144ec:	80c3      	strh	r3, [r0, #6]
900144ee:	bd10      	pop	{r4, pc}
900144f0:	2300      	movs	r3, #0
900144f2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900144f6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900144fa:	8003      	strh	r3, [r0, #0]
900144fc:	8043      	strh	r3, [r0, #2]
900144fe:	8084      	strh	r4, [r0, #4]
90014500:	80c2      	strh	r2, [r0, #6]
90014502:	e7f4      	b.n	900144ee <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90014504 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90014504:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014508:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001450c:	b087      	sub	sp, #28
9001450e:	4604      	mov	r4, r0
90014510:	4689      	mov	r9, r1
90014512:	b363      	cbz	r3, 9001456e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90014514:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
90014516:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001451a:	429a      	cmp	r2, r3
9001451c:	d027      	beq.n	9001456e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001451e:	ad06      	add	r5, sp, #24
90014520:	2700      	movs	r7, #0
90014522:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90014526:	4628      	mov	r0, r5
90014528:	f006 ff88 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001452c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014530:	a904      	add	r1, sp, #16
90014532:	f8ad 0014 	strh.w	r0, [sp, #20]
90014536:	f8ad 3016 	strh.w	r3, [sp, #22]
9001453a:	4620      	mov	r0, r4
9001453c:	6823      	ldr	r3, [r4, #0]
9001453e:	9704      	str	r7, [sp, #16]
90014540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014542:	4798      	blx	r3
90014544:	f7fe fde0 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90014548:	6803      	ldr	r3, [r0, #0]
9001454a:	4606      	mov	r6, r0
9001454c:	4628      	mov	r0, r5
9001454e:	f8d3 800c 	ldr.w	r8, [r3, #12]
90014552:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90014554:	f8ad 300c 	strh.w	r3, [sp, #12]
90014558:	f007 f85c 	bl	9001b614 <_ZNK8touchgfx6Bitmap7getDataEv>
9001455c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90014560:	4601      	mov	r1, r0
90014562:	9701      	str	r7, [sp, #4]
90014564:	aa04      	add	r2, sp, #16
90014566:	9300      	str	r3, [sp, #0]
90014568:	4630      	mov	r0, r6
9001456a:	464b      	mov	r3, r9
9001456c:	47c0      	blx	r8
9001456e:	b007      	add	sp, #28
90014570:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90014574 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90014574:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90014576:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001457a:	460d      	mov	r5, r1
9001457c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90014580:	2100      	movs	r1, #0
90014582:	f8ad 3006 	strh.w	r3, [sp, #6]
90014586:	4604      	mov	r4, r0
90014588:	6803      	ldr	r3, [r0, #0]
9001458a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001458e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014590:	9100      	str	r1, [sp, #0]
90014592:	4669      	mov	r1, sp
90014594:	4798      	blx	r3
90014596:	4621      	mov	r1, r4
90014598:	a802      	add	r0, sp, #8
9001459a:	f004 fee1 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001459e:	f7fe fdb3 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
900145a2:	6803      	ldr	r3, [r0, #0]
900145a4:	aa02      	add	r2, sp, #8
900145a6:	4669      	mov	r1, sp
900145a8:	695e      	ldr	r6, [r3, #20]
900145aa:	462b      	mov	r3, r5
900145ac:	47b0      	blx	r6
900145ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
900145b2:	2800      	cmp	r0, #0
900145b4:	bf08      	it	eq
900145b6:	461d      	moveq	r5, r3
900145b8:	84e5      	strh	r5, [r4, #38]	; 0x26
900145ba:	b004      	add	sp, #16
900145bc:	bd70      	pop	{r4, r5, r6, pc}
	...

900145c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
900145c0:	2200      	movs	r2, #0
900145c2:	8082      	strh	r2, [r0, #4]
900145c4:	80c2      	strh	r2, [r0, #6]
900145c6:	8102      	strh	r2, [r0, #8]
900145c8:	8142      	strh	r2, [r0, #10]
900145ca:	8182      	strh	r2, [r0, #12]
900145cc:	81c2      	strh	r2, [r0, #14]
900145ce:	8202      	strh	r2, [r0, #16]
900145d0:	8242      	strh	r2, [r0, #18]
900145d2:	61c2      	str	r2, [r0, #28]
900145d4:	8402      	strh	r2, [r0, #32]
900145d6:	8442      	strh	r2, [r0, #34]	; 0x22
900145d8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900145dc:	e9c0 2205 	strd	r2, r2, [r0, #20]
900145e0:	2201      	movs	r2, #1
900145e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
900145e6:	4a04      	ldr	r2, [pc, #16]	; (900145f8 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
900145e8:	6002      	str	r2, [r0, #0]
900145ea:	f64f 72ff 	movw	r2, #65535	; 0xffff
900145ee:	84c2      	strh	r2, [r0, #38]	; 0x26
900145f0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900145f4:	4770      	bx	lr
900145f6:	bf00      	nop
900145f8:	9002d718 	.word	0x9002d718

900145fc <_ZNK8touchgfx5Image17invalidateContentEv>:
900145fc:	b508      	push	{r3, lr}
900145fe:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014602:	b10b      	cbz	r3, 90014608 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90014604:	f7ed fe38 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90014608:	bd08      	pop	{r3, pc}

9001460a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
9001460a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001460e:	4770      	bx	lr

90014610 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90014610:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90014614:	4770      	bx	lr

90014616 <_ZN8touchgfx13ScalableImageD1Ev>:
90014616:	4770      	bx	lr

90014618 <_ZN8touchgfx13ScalableImageD0Ev>:
90014618:	b510      	push	{r4, lr}
9001461a:	4604      	mov	r4, r0
9001461c:	212c      	movs	r1, #44	; 0x2c
9001461e:	f014 fea1 	bl	90029364 <_ZdlPvj>
90014622:	4620      	mov	r0, r4
90014624:	bd10      	pop	{r4, pc}

90014626 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90014626:	b5f0      	push	{r4, r5, r6, r7, lr}
90014628:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001462c:	b085      	sub	sp, #20
9001462e:	4604      	mov	r4, r0
90014630:	460d      	mov	r5, r1
90014632:	2bff      	cmp	r3, #255	; 0xff
90014634:	d128      	bne.n	90014688 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014636:	f101 0626 	add.w	r6, r1, #38	; 0x26
9001463a:	4668      	mov	r0, sp
9001463c:	4631      	mov	r1, r6
9001463e:	f006 ff65 	bl	9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014642:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90014646:	4630      	mov	r0, r6
90014648:	f006 fef8 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001464c:	4287      	cmp	r7, r0
9001464e:	d11b      	bne.n	90014688 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014650:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90014654:	4630      	mov	r0, r6
90014656:	f006 ff25 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001465a:	4287      	cmp	r7, r0
9001465c:	d114      	bne.n	90014688 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001465e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90014662:	2100      	movs	r1, #0
90014664:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90014668:	f8ad 300e 	strh.w	r3, [sp, #14]
9001466c:	466b      	mov	r3, sp
9001466e:	9102      	str	r1, [sp, #8]
90014670:	f8ad 200c 	strh.w	r2, [sp, #12]
90014674:	cb03      	ldmia	r3!, {r0, r1}
90014676:	6020      	str	r0, [r4, #0]
90014678:	4620      	mov	r0, r4
9001467a:	6061      	str	r1, [r4, #4]
9001467c:	4619      	mov	r1, r3
9001467e:	f7fe fa5f 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90014682:	4620      	mov	r0, r4
90014684:	b005      	add	sp, #20
90014686:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014688:	2300      	movs	r3, #0
9001468a:	8023      	strh	r3, [r4, #0]
9001468c:	8063      	strh	r3, [r4, #2]
9001468e:	80a3      	strh	r3, [r4, #4]
90014690:	80e3      	strh	r3, [r4, #6]
90014692:	e7f6      	b.n	90014682 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90014694 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90014694:	b538      	push	{r3, r4, r5, lr}
90014696:	2300      	movs	r3, #0
90014698:	2501      	movs	r5, #1
9001469a:	4604      	mov	r4, r0
9001469c:	8083      	strh	r3, [r0, #4]
9001469e:	80c3      	strh	r3, [r0, #6]
900146a0:	8103      	strh	r3, [r0, #8]
900146a2:	8143      	strh	r3, [r0, #10]
900146a4:	8183      	strh	r3, [r0, #12]
900146a6:	81c3      	strh	r3, [r0, #14]
900146a8:	8203      	strh	r3, [r0, #16]
900146aa:	8243      	strh	r3, [r0, #18]
900146ac:	61c3      	str	r3, [r0, #28]
900146ae:	8403      	strh	r3, [r0, #32]
900146b0:	8443      	strh	r3, [r0, #34]	; 0x22
900146b2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
900146b6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
900146ba:	e9c0 3305 	strd	r3, r3, [r0, #20]
900146be:	4b07      	ldr	r3, [pc, #28]	; (900146dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
900146c0:	6003      	str	r3, [r0, #0]
900146c2:	880b      	ldrh	r3, [r1, #0]
900146c4:	84c3      	strh	r3, [r0, #38]	; 0x26
900146c6:	23ff      	movs	r3, #255	; 0xff
900146c8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
900146cc:	f001 f81d 	bl	9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900146d0:	4b03      	ldr	r3, [pc, #12]	; (900146e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900146d2:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
900146d6:	4620      	mov	r0, r4
900146d8:	6023      	str	r3, [r4, #0]
900146da:	bd38      	pop	{r3, r4, r5, pc}
900146dc:	9002d9d4 	.word	0x9002d9d4
900146e0:	9002d788 	.word	0x9002d788

900146e4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900146e4:	4603      	mov	r3, r0
900146e6:	3026      	adds	r0, #38	; 0x26
900146e8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900146ec:	b90b      	cbnz	r3, 900146f2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900146ee:	f004 bedb 	b.w	900194a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900146f2:	f004 bee9 	b.w	900194c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900146f8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900146f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900146fc:	4604      	mov	r4, r0
900146fe:	b0b3      	sub	sp, #204	; 0xcc
90014700:	469b      	mov	fp, r3
90014702:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90014706:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001470a:	2500      	movs	r5, #0
9001470c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90014710:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
90014714:	ab11      	add	r3, sp, #68	; 0x44
90014716:	9206      	str	r2, [sp, #24]
90014718:	4618      	mov	r0, r3
9001471a:	9511      	str	r5, [sp, #68]	; 0x44
9001471c:	9307      	str	r3, [sp, #28]
9001471e:	ad13      	add	r5, sp, #76	; 0x4c
90014720:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
90014724:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90014728:	f7fe fa0a 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
9001472c:	9b07      	ldr	r3, [sp, #28]
9001472e:	e893 0003 	ldmia.w	r3, {r0, r1}
90014732:	e885 0003 	stmia.w	r5, {r0, r1}
90014736:	6821      	ldr	r1, [r4, #0]
90014738:	4620      	mov	r0, r4
9001473a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001473c:	4629      	mov	r1, r5
9001473e:	47b0      	blx	r6
90014740:	4621      	mov	r1, r4
90014742:	a815      	add	r0, sp, #84	; 0x54
90014744:	1d26      	adds	r6, r4, #4
90014746:	f004 fe0b 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001474a:	a815      	add	r0, sp, #84	; 0x54
9001474c:	f003 fb16 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014750:	9b07      	ldr	r3, [sp, #28]
90014752:	4631      	mov	r1, r6
90014754:	4618      	mov	r0, r3
90014756:	f003 fb55 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001475a:	4628      	mov	r0, r5
9001475c:	f104 0526 	add.w	r5, r4, #38	; 0x26
90014760:	f003 fb0c 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014764:	4628      	mov	r0, r5
90014766:	f006 ff55 	bl	9001b614 <_ZNK8touchgfx6Bitmap7getDataEv>
9001476a:	9007      	str	r0, [sp, #28]
9001476c:	2800      	cmp	r0, #0
9001476e:	f000 80ce 	beq.w	9001490e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90014772:	f8db 200c 	ldr.w	r2, [fp, #12]
90014776:	a809      	add	r0, sp, #36	; 0x24
90014778:	f8db 1000 	ldr.w	r1, [fp]
9001477c:	920c      	str	r2, [sp, #48]	; 0x30
9001477e:	f8da 2000 	ldr.w	r2, [sl]
90014782:	9109      	str	r1, [sp, #36]	; 0x24
90014784:	920d      	str	r2, [sp, #52]	; 0x34
90014786:	f8da 2004 	ldr.w	r2, [sl, #4]
9001478a:	f8db 1004 	ldr.w	r1, [fp, #4]
9001478e:	920e      	str	r2, [sp, #56]	; 0x38
90014790:	f8da 2008 	ldr.w	r2, [sl, #8]
90014794:	910a      	str	r1, [sp, #40]	; 0x28
90014796:	920f      	str	r2, [sp, #60]	; 0x3c
90014798:	f8db 1008 	ldr.w	r1, [fp, #8]
9001479c:	f8da 200c 	ldr.w	r2, [sl, #12]
900147a0:	910b      	str	r1, [sp, #44]	; 0x2c
900147a2:	a90d      	add	r1, sp, #52	; 0x34
900147a4:	9210      	str	r2, [sp, #64]	; 0x40
900147a6:	4632      	mov	r2, r6
900147a8:	f003 fb10 	bl	90017dcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900147ac:	4632      	mov	r2, r6
900147ae:	a90e      	add	r1, sp, #56	; 0x38
900147b0:	a80a      	add	r0, sp, #40	; 0x28
900147b2:	f003 fb0b 	bl	90017dcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900147b6:	4632      	mov	r2, r6
900147b8:	a90f      	add	r1, sp, #60	; 0x3c
900147ba:	a80b      	add	r0, sp, #44	; 0x2c
900147bc:	f003 fb06 	bl	90017dcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900147c0:	4632      	mov	r2, r6
900147c2:	a910      	add	r1, sp, #64	; 0x40
900147c4:	a80c      	add	r0, sp, #48	; 0x30
900147c6:	f003 fb01 	bl	90017dcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900147ca:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
900147ce:	ed97 3a00 	vldr	s6, [r7]
900147d2:	eef0 6a67 	vmov.f32	s13, s15
900147d6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
900147da:	edd7 4a01 	vldr	s9, [r7, #4]
900147de:	eeb0 7a67 	vmov.f32	s14, s15
900147e2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900147e6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900147ea:	ed99 2a00 	vldr	s4, [r9]
900147ee:	eeb0 6a67 	vmov.f32	s12, s15
900147f2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900147f6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900147fa:	edd8 2a00 	vldr	s5, [r8]
900147fe:	edd9 3a01 	vldr	s7, [r9, #4]
90014802:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014806:	ed98 4a01 	vldr	s8, [r8, #4]
9001480a:	ed99 5a02 	vldr	s10, [r9, #8]
9001480e:	edd8 5a02 	vldr	s11, [r8, #8]
90014812:	ee16 6a10 	vmov	r6, s12
90014816:	eeb0 6a67 	vmov.f32	s12, s15
9001481a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
9001481e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90014822:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014826:	f8d8 c00c 	ldr.w	ip, [r8, #12]
9001482a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001482e:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90014832:	ee16 0a10 	vmov	r0, s12
90014836:	eeb0 6a67 	vmov.f32	s12, s15
9001483a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9001483e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90014842:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014846:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
9001484a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
9001484e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90014852:	ee16 1a10 	vmov	r1, s12
90014856:	eeb0 6a67 	vmov.f32	s12, s15
9001485a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9001485e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90014862:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014866:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
9001486a:	f8d7 a008 	ldr.w	sl, [r7, #8]
9001486e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90014872:	68ff      	ldr	r7, [r7, #12]
90014874:	ee16 2a10 	vmov	r2, s12
90014878:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
9001487c:	9624      	str	r6, [sp, #144]	; 0x90
9001487e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014882:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90014886:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
9001488a:	4628      	mov	r0, r5
9001488c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90014890:	9b06      	ldr	r3, [sp, #24]
90014892:	922d      	str	r2, [sp, #180]	; 0xb4
90014894:	4a1f      	ldr	r2, [pc, #124]	; (90014914 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90014896:	9317      	str	r3, [sp, #92]	; 0x5c
90014898:	8812      	ldrh	r2, [r2, #0]
9001489a:	9b07      	ldr	r3, [sp, #28]
9001489c:	9218      	str	r2, [sp, #96]	; 0x60
9001489e:	9319      	str	r3, [sp, #100]	; 0x64
900148a0:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
900148a4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
900148a8:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
900148ac:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
900148b0:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
900148b4:	9731      	str	r7, [sp, #196]	; 0xc4
900148b6:	f006 fedd 	bl	9001b674 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900148ba:	901a      	str	r0, [sp, #104]	; 0x68
900148bc:	4628      	mov	r0, r5
900148be:	f006 fdbd 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
900148c2:	901b      	str	r0, [sp, #108]	; 0x6c
900148c4:	4628      	mov	r0, r5
900148c6:	f006 fded 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900148ca:	901c      	str	r0, [sp, #112]	; 0x70
900148cc:	4628      	mov	r0, r5
900148ce:	f006 fdb5 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
900148d2:	4b11      	ldr	r3, [pc, #68]	; (90014918 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
900148d4:	901d      	str	r0, [sp, #116]	; 0x74
900148d6:	681b      	ldr	r3, [r3, #0]
900148d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900148dc:	b10a      	cbz	r2, 900148e2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
900148de:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
900148e0:	b905      	cbnz	r5, 900148e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
900148e2:	689d      	ldr	r5, [r3, #8]
900148e4:	682b      	ldr	r3, [r5, #0]
900148e6:	4620      	mov	r0, r4
900148e8:	6c1e      	ldr	r6, [r3, #64]	; 0x40
900148ea:	f7ff fefb 	bl	900146e4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900148ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
900148f2:	aa1e      	add	r2, sp, #120	; 0x78
900148f4:	a917      	add	r1, sp, #92	; 0x5c
900148f6:	9304      	str	r3, [sp, #16]
900148f8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900148fc:	e9cd 0302 	strd	r0, r3, [sp, #8]
90014900:	ab13      	add	r3, sp, #76	; 0x4c
90014902:	4628      	mov	r0, r5
90014904:	9301      	str	r3, [sp, #4]
90014906:	ab15      	add	r3, sp, #84	; 0x54
90014908:	9300      	str	r3, [sp, #0]
9001490a:	ab19      	add	r3, sp, #100	; 0x64
9001490c:	47b0      	blx	r6
9001490e:	b033      	add	sp, #204	; 0xcc
90014910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014914:	24039ac6 	.word	0x24039ac6
90014918:	24039acc 	.word	0x24039acc

9001491c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
9001491c:	b570      	push	{r4, r5, r6, lr}
9001491e:	ed2d 8b04 	vpush	{d8-d9}
90014922:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014926:	b098      	sub	sp, #96	; 0x60
90014928:	4604      	mov	r4, r0
9001492a:	460e      	mov	r6, r1
9001492c:	2b00      	cmp	r3, #0
9001492e:	d065      	beq.n	900149fc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90014930:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014934:	f100 0526 	add.w	r5, r0, #38	; 0x26
90014938:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90014a18 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
9001493c:	ee09 3a10 	vmov	s18, r3
90014940:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014944:	4628      	mov	r0, r5
90014946:	ee08 3a90 	vmov	s17, r3
9001494a:	4b34      	ldr	r3, [pc, #208]	; (90014a1c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
9001494c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90014950:	930c      	str	r3, [sp, #48]	; 0x30
90014952:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90014956:	930d      	str	r3, [sp, #52]	; 0x34
90014958:	930e      	str	r3, [sp, #56]	; 0x38
9001495a:	ee39 9a08 	vadd.f32	s18, s18, s16
9001495e:	930f      	str	r3, [sp, #60]	; 0x3c
90014960:	f006 fd6c 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
90014964:	ee07 0a90 	vmov	s15, r0
90014968:	4628      	mov	r0, r5
9001496a:	ee78 8a88 	vadd.f32	s17, s17, s16
9001496e:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90014972:	f006 fd97 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014976:	4b2a      	ldr	r3, [pc, #168]	; (90014a20 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90014978:	ee07 0a90 	vmov	s15, r0
9001497c:	781b      	ldrb	r3, [r3, #0]
9001497e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90014982:	eef0 7a48 	vmov.f32	s15, s16
90014986:	2b01      	cmp	r3, #1
90014988:	d13c      	bne.n	90014a04 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
9001498a:	eef0 6a69 	vmov.f32	s13, s19
9001498e:	ee19 3a90 	vmov	r3, s19
90014992:	eeb0 6a47 	vmov.f32	s12, s14
90014996:	eef0 5a47 	vmov.f32	s11, s14
9001499a:	eef0 9a48 	vmov.f32	s19, s16
9001499e:	eeb0 7a48 	vmov.f32	s14, s16
900149a2:	9314      	str	r3, [sp, #80]	; 0x50
900149a4:	ab14      	add	r3, sp, #80	; 0x50
900149a6:	2200      	movs	r2, #0
900149a8:	4631      	mov	r1, r6
900149aa:	9303      	str	r3, [sp, #12]
900149ac:	ab10      	add	r3, sp, #64	; 0x40
900149ae:	4620      	mov	r0, r4
900149b0:	edcd 7a04 	vstr	s15, [sp, #16]
900149b4:	9302      	str	r3, [sp, #8]
900149b6:	ab0c      	add	r3, sp, #48	; 0x30
900149b8:	ed8d 9a05 	vstr	s18, [sp, #20]
900149bc:	9301      	str	r3, [sp, #4]
900149be:	ab08      	add	r3, sp, #32
900149c0:	ed8d 9a06 	vstr	s18, [sp, #24]
900149c4:	9300      	str	r3, [sp, #0]
900149c6:	ab04      	add	r3, sp, #16
900149c8:	edcd 7a07 	vstr	s15, [sp, #28]
900149cc:	edcd 7a08 	vstr	s15, [sp, #32]
900149d0:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
900149d4:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
900149d8:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
900149dc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
900149e0:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
900149e4:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
900149e8:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
900149ec:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
900149f0:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
900149f4:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
900149f8:	f7ff fe7e 	bl	900146f8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900149fc:	b018      	add	sp, #96	; 0x60
900149fe:	ecbd 8b04 	vpop	{d8-d9}
90014a02:	bd70      	pop	{r4, r5, r6, pc}
90014a04:	eef0 6a47 	vmov.f32	s13, s14
90014a08:	ee18 3a10 	vmov	r3, s16
90014a0c:	eef0 5a69 	vmov.f32	s11, s19
90014a10:	eeb0 6a48 	vmov.f32	s12, s16
90014a14:	e7c5      	b.n	900149a2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90014a16:	bf00      	nop
90014a18:	00000000 	.word	0x00000000
90014a1c:	42c80000 	.word	0x42c80000
90014a20:	24039ac4 	.word	0x24039ac4

90014a24 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90014a24:	2000      	movs	r0, #0
90014a26:	4770      	bx	lr

90014a28 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014a28:	4b07      	ldr	r3, [pc, #28]	; (90014a48 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90014a2a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90014a2c:	881b      	ldrh	r3, [r3, #0]
90014a2e:	4293      	cmp	r3, r2
90014a30:	bf81      	itttt	hi
90014a32:	4b06      	ldrhi	r3, [pc, #24]	; (90014a4c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014a34:	681b      	ldrhi	r3, [r3, #0]
90014a36:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90014a3a:	7858      	ldrbhi	r0, [r3, #1]
90014a3c:	bf8c      	ite	hi
90014a3e:	f000 0003 	andhi.w	r0, r0, #3
90014a42:	2000      	movls	r0, #0
90014a44:	4770      	bx	lr
90014a46:	bf00      	nop
90014a48:	24039b28 	.word	0x24039b28
90014a4c:	24039b24 	.word	0x24039b24

90014a50 <_ZN8touchgfx8TextAreaD1Ev>:
90014a50:	4770      	bx	lr
	...

90014a54 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90014a54:	4b11      	ldr	r3, [pc, #68]	; (90014a9c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90014a56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014a5a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014a5c:	4604      	mov	r4, r0
90014a5e:	881b      	ldrh	r3, [r3, #0]
90014a60:	428b      	cmp	r3, r1
90014a62:	d918      	bls.n	90014a96 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90014a64:	6803      	ldr	r3, [r0, #0]
90014a66:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90014a68:	4b0d      	ldr	r3, [pc, #52]	; (90014aa0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90014a6a:	6818      	ldr	r0, [r3, #0]
90014a6c:	f7ef fdec 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014a70:	6823      	ldr	r3, [r4, #0]
90014a72:	4606      	mov	r6, r0
90014a74:	4620      	mov	r0, r4
90014a76:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014a78:	4798      	blx	r3
90014a7a:	6823      	ldr	r3, [r4, #0]
90014a7c:	4607      	mov	r7, r0
90014a7e:	4620      	mov	r0, r4
90014a80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014a84:	4798      	blx	r3
90014a86:	463a      	mov	r2, r7
90014a88:	4603      	mov	r3, r0
90014a8a:	4631      	mov	r1, r6
90014a8c:	4620      	mov	r0, r4
90014a8e:	46ac      	mov	ip, r5
90014a90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014a94:	4760      	bx	ip
90014a96:	2000      	movs	r0, #0
90014a98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014a9c:	24039b28 	.word	0x24039b28
90014aa0:	24039b30 	.word	0x24039b30

90014aa4 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014aa4:	4b18      	ldr	r3, [pc, #96]	; (90014b08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014aa6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014aaa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014aac:	4604      	mov	r4, r0
90014aae:	881b      	ldrh	r3, [r3, #0]
90014ab0:	428b      	cmp	r3, r1
90014ab2:	d926      	bls.n	90014b02 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014ab4:	4b15      	ldr	r3, [pc, #84]	; (90014b0c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014ab6:	681b      	ldr	r3, [r3, #0]
90014ab8:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014abc:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014ac0:	4b13      	ldr	r3, [pc, #76]	; (90014b10 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90014ac2:	7855      	ldrb	r5, [r2, #1]
90014ac4:	681b      	ldr	r3, [r3, #0]
90014ac6:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014aca:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90014ace:	6833      	ldr	r3, [r6, #0]
90014ad0:	69df      	ldr	r7, [r3, #28]
90014ad2:	4b10      	ldr	r3, [pc, #64]	; (90014b14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90014ad4:	6818      	ldr	r0, [r3, #0]
90014ad6:	f7ef fdb7 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014ada:	6823      	ldr	r3, [r4, #0]
90014adc:	4680      	mov	r8, r0
90014ade:	4620      	mov	r0, r4
90014ae0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014ae2:	4798      	blx	r3
90014ae4:	6823      	ldr	r3, [r4, #0]
90014ae6:	4681      	mov	r9, r0
90014ae8:	4620      	mov	r0, r4
90014aea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014aee:	4798      	blx	r3
90014af0:	464b      	mov	r3, r9
90014af2:	9000      	str	r0, [sp, #0]
90014af4:	4642      	mov	r2, r8
90014af6:	4629      	mov	r1, r5
90014af8:	4630      	mov	r0, r6
90014afa:	47b8      	blx	r7
90014afc:	b003      	add	sp, #12
90014afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014b02:	2000      	movs	r0, #0
90014b04:	e7fa      	b.n	90014afc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90014b06:	bf00      	nop
90014b08:	24039b28 	.word	0x24039b28
90014b0c:	24039b24 	.word	0x24039b24
90014b10:	24039b2c 	.word	0x24039b2c
90014b14:	24039b30 	.word	0x24039b30

90014b18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014b18:	b40e      	push	{r1, r2, r3}
90014b1a:	4b30      	ldr	r3, [pc, #192]	; (90014bdc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90014b1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014b20:	881a      	ldrh	r2, [r3, #0]
90014b22:	b09d      	sub	sp, #116	; 0x74
90014b24:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90014b26:	4604      	mov	r4, r0
90014b28:	429a      	cmp	r2, r3
90014b2a:	d954      	bls.n	90014bd6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90014b2c:	aa26      	add	r2, sp, #152	; 0x98
90014b2e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90014be0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90014b32:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90014be4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014b36:	9202      	str	r2, [sp, #8]
90014b38:	f8d9 2000 	ldr.w	r2, [r9]
90014b3c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014b40:	f8d8 3000 	ldr.w	r3, [r8]
90014b44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014b48:	682b      	ldr	r3, [r5, #0]
90014b4a:	4628      	mov	r0, r5
90014b4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014b4e:	4798      	blx	r3
90014b50:	4606      	mov	r6, r0
90014b52:	b207      	sxth	r7, r0
90014b54:	a803      	add	r0, sp, #12
90014b56:	f005 f8e4 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90014b5a:	682b      	ldr	r3, [r5, #0]
90014b5c:	4628      	mov	r0, r5
90014b5e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014b60:	4798      	blx	r3
90014b62:	682b      	ldr	r3, [r5, #0]
90014b64:	4682      	mov	sl, r0
90014b66:	4628      	mov	r0, r5
90014b68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014b6a:	4798      	blx	r3
90014b6c:	4653      	mov	r3, sl
90014b6e:	9000      	str	r0, [sp, #0]
90014b70:	a803      	add	r0, sp, #12
90014b72:	9a02      	ldr	r2, [sp, #8]
90014b74:	9925      	ldr	r1, [sp, #148]	; 0x94
90014b76:	f005 f92f 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014b7a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014b7c:	f8d9 3000 	ldr.w	r3, [r9]
90014b80:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90014b84:	8925      	ldrh	r5, [r4, #8]
90014b86:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90014b8a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90014b8e:	eba5 050c 	sub.w	r5, r5, ip
90014b92:	784a      	ldrb	r2, [r1, #1]
90014b94:	f8d8 3000 	ldr.w	r3, [r8]
90014b98:	b22d      	sxth	r5, r5
90014b9a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90014b9e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014ba2:	9500      	str	r5, [sp, #0]
90014ba4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014ba8:	a803      	add	r0, sp, #12
90014baa:	f002 fded 	bl	90017788 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90014bae:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90014bb2:	b203      	sxth	r3, r0
90014bb4:	18b9      	adds	r1, r7, r2
90014bb6:	2900      	cmp	r1, #0
90014bb8:	dd0b      	ble.n	90014bd2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014bba:	3b01      	subs	r3, #1
90014bbc:	fb13 f302 	smulbb	r3, r3, r2
90014bc0:	fb16 3300 	smlabb	r3, r6, r0, r3
90014bc4:	b21f      	sxth	r7, r3
90014bc6:	4638      	mov	r0, r7
90014bc8:	b01d      	add	sp, #116	; 0x74
90014bca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014bce:	b003      	add	sp, #12
90014bd0:	4770      	bx	lr
90014bd2:	2b00      	cmp	r3, #0
90014bd4:	dcf7      	bgt.n	90014bc6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014bd6:	2700      	movs	r7, #0
90014bd8:	e7f5      	b.n	90014bc6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014bda:	bf00      	nop
90014bdc:	24039b28 	.word	0x24039b28
90014be0:	24039b24 	.word	0x24039b24
90014be4:	24039b2c 	.word	0x24039b2c

90014be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014be8:	4bbd      	ldr	r3, [pc, #756]	; (90014ee0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014bea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014bee:	460c      	mov	r4, r1
90014bf0:	881b      	ldrh	r3, [r3, #0]
90014bf2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90014bf4:	b0a9      	sub	sp, #164	; 0xa4
90014bf6:	4680      	mov	r8, r0
90014bf8:	428b      	cmp	r3, r1
90014bfa:	d809      	bhi.n	90014c10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014bfc:	2300      	movs	r3, #0
90014bfe:	f04f 32ff 	mov.w	r2, #4294967295
90014c02:	6083      	str	r3, [r0, #8]
90014c04:	e9c0 3200 	strd	r3, r2, [r0]
90014c08:	4640      	mov	r0, r8
90014c0a:	b029      	add	sp, #164	; 0xa4
90014c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014c10:	4eb4      	ldr	r6, [pc, #720]	; (90014ee4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90014c12:	6833      	ldr	r3, [r6, #0]
90014c14:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014c18:	4bb3      	ldr	r3, [pc, #716]	; (90014ee8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014c1a:	681b      	ldr	r3, [r3, #0]
90014c1c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014c20:	4bb2      	ldr	r3, [pc, #712]	; (90014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014c22:	6818      	ldr	r0, [r3, #0]
90014c24:	f7ef fd10 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014c28:	682b      	ldr	r3, [r5, #0]
90014c2a:	4681      	mov	r9, r0
90014c2c:	4628      	mov	r0, r5
90014c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014c30:	4798      	blx	r3
90014c32:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90014c34:	b203      	sxth	r3, r0
90014c36:	4682      	mov	sl, r0
90014c38:	4407      	add	r7, r0
90014c3a:	a80f      	add	r0, sp, #60	; 0x3c
90014c3c:	9304      	str	r3, [sp, #16]
90014c3e:	b2bb      	uxth	r3, r7
90014c40:	9303      	str	r3, [sp, #12]
90014c42:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90014c46:	2b00      	cmp	r3, #0
90014c48:	f040 80a5 	bne.w	90014d96 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90014c4c:	f005 f869 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90014c50:	682b      	ldr	r3, [r5, #0]
90014c52:	4628      	mov	r0, r5
90014c54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014c56:	4798      	blx	r3
90014c58:	682b      	ldr	r3, [r5, #0]
90014c5a:	4606      	mov	r6, r0
90014c5c:	4628      	mov	r0, r5
90014c5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014c60:	4798      	blx	r3
90014c62:	6823      	ldr	r3, [r4, #0]
90014c64:	4607      	mov	r7, r0
90014c66:	4620      	mov	r0, r4
90014c68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014c6a:	4798      	blx	r3
90014c6c:	6823      	ldr	r3, [r4, #0]
90014c6e:	4683      	mov	fp, r0
90014c70:	4620      	mov	r0, r4
90014c72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014c76:	4798      	blx	r3
90014c78:	463b      	mov	r3, r7
90014c7a:	4649      	mov	r1, r9
90014c7c:	4632      	mov	r2, r6
90014c7e:	2600      	movs	r6, #0
90014c80:	e9cd b000 	strd	fp, r0, [sp]
90014c84:	a80f      	add	r0, sp, #60	; 0x3c
90014c86:	4637      	mov	r7, r6
90014c88:	f005 f8bb 	bl	90019e02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014c8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014c90:	f8df b250 	ldr.w	fp, [pc, #592]	; 90014ee4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90014c94:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014c98:	bf0c      	ite	eq
90014c9a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90014c9e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90014ca2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014ca4:	4629      	mov	r1, r5
90014ca6:	f8db 3000 	ldr.w	r3, [fp]
90014caa:	a80f      	add	r0, sp, #60	; 0x3c
90014cac:	3701      	adds	r7, #1
90014cae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014cb2:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014cb6:	b2bf      	uxth	r7, r7
90014cb8:	785b      	ldrb	r3, [r3, #1]
90014cba:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014cbe:	f002 fa7e 	bl	900171be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014cc2:	9b03      	ldr	r3, [sp, #12]
90014cc4:	4286      	cmp	r6, r0
90014cc6:	eba9 0903 	sub.w	r9, r9, r3
90014cca:	bfb8      	it	lt
90014ccc:	4606      	movlt	r6, r0
90014cce:	a80f      	add	r0, sp, #60	; 0x3c
90014cd0:	fa0f f989 	sxth.w	r9, r9
90014cd4:	b236      	sxth	r6, r6
90014cd6:	f005 f84b 	bl	90019d70 <_ZN8touchgfx12TextProvider11endOfStringEv>
90014cda:	b918      	cbnz	r0, 90014ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014cdc:	7a2b      	ldrb	r3, [r5, #8]
90014cde:	444b      	add	r3, r9
90014ce0:	2b00      	cmp	r3, #0
90014ce2:	dcde      	bgt.n	90014ca2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90014ce4:	9b03      	ldr	r3, [sp, #12]
90014ce6:	4620      	mov	r0, r4
90014ce8:	9a04      	ldr	r2, [sp, #16]
90014cea:	fb13 f707 	smulbb	r7, r3, r7
90014cee:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90014cf0:	f895 9009 	ldrb.w	r9, [r5, #9]
90014cf4:	1aff      	subs	r7, r7, r3
90014cf6:	b2bf      	uxth	r7, r7
90014cf8:	b23b      	sxth	r3, r7
90014cfa:	429a      	cmp	r2, r3
90014cfc:	bfa8      	it	ge
90014cfe:	4657      	movge	r7, sl
90014d00:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014d04:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014d08:	6823      	ldr	r3, [r4, #0]
90014d0a:	444f      	add	r7, r9
90014d0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90014d0e:	bf08      	it	eq
90014d10:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90014d14:	fa1f f987 	uxth.w	r9, r7
90014d18:	bf18      	it	ne
90014d1a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90014d1e:	4798      	blx	r3
90014d20:	2801      	cmp	r0, #1
90014d22:	fa0f f789 	sxth.w	r7, r9
90014d26:	b2b3      	uxth	r3, r6
90014d28:	f000 80e2 	beq.w	90014ef0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90014d2c:	2802      	cmp	r0, #2
90014d2e:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90014d32:	f000 80e3 	beq.w	90014efc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90014d36:	7aea      	ldrb	r2, [r5, #11]
90014d38:	b236      	sxth	r6, r6
90014d3a:	7b2d      	ldrb	r5, [r5, #12]
90014d3c:	1ab6      	subs	r6, r6, r2
90014d3e:	442a      	add	r2, r5
90014d40:	fa1f fa86 	uxth.w	sl, r6
90014d44:	4413      	add	r3, r2
90014d46:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90014d4a:	fa0f fb8a 	sxth.w	fp, sl
90014d4e:	b29b      	uxth	r3, r3
90014d50:	2a02      	cmp	r2, #2
90014d52:	b21e      	sxth	r6, r3
90014d54:	f000 80d6 	beq.w	90014f04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90014d58:	2a03      	cmp	r2, #3
90014d5a:	f000 80de 	beq.w	90014f1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90014d5e:	2a01      	cmp	r2, #1
90014d60:	f040 80e6 	bne.w	90014f30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90014d64:	8925      	ldrh	r5, [r4, #8]
90014d66:	4633      	mov	r3, r6
90014d68:	463e      	mov	r6, r7
90014d6a:	eba5 0909 	sub.w	r9, r5, r9
90014d6e:	461f      	mov	r7, r3
90014d70:	465d      	mov	r5, fp
90014d72:	fa0f fb89 	sxth.w	fp, r9
90014d76:	4b5d      	ldr	r3, [pc, #372]	; (90014eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014d78:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90014d7a:	6818      	ldr	r0, [r3, #0]
90014d7c:	f7ef fc64 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014d80:	f8a8 b000 	strh.w	fp, [r8]
90014d84:	f8a8 5002 	strh.w	r5, [r8, #2]
90014d88:	f8a8 6004 	strh.w	r6, [r8, #4]
90014d8c:	f8a8 7006 	strh.w	r7, [r8, #6]
90014d90:	f8c8 0008 	str.w	r0, [r8, #8]
90014d94:	e738      	b.n	90014c08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90014d96:	f004 ffc4 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90014d9a:	682b      	ldr	r3, [r5, #0]
90014d9c:	4628      	mov	r0, r5
90014d9e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014da0:	4798      	blx	r3
90014da2:	682b      	ldr	r3, [r5, #0]
90014da4:	4607      	mov	r7, r0
90014da6:	4628      	mov	r0, r5
90014da8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014daa:	4798      	blx	r3
90014dac:	6823      	ldr	r3, [r4, #0]
90014dae:	4683      	mov	fp, r0
90014db0:	4620      	mov	r0, r4
90014db2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014db4:	4798      	blx	r3
90014db6:	6822      	ldr	r2, [r4, #0]
90014db8:	9005      	str	r0, [sp, #20]
90014dba:	4620      	mov	r0, r4
90014dbc:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90014dc0:	4790      	blx	r2
90014dc2:	9b05      	ldr	r3, [sp, #20]
90014dc4:	463a      	mov	r2, r7
90014dc6:	4649      	mov	r1, r9
90014dc8:	9001      	str	r0, [sp, #4]
90014dca:	a80f      	add	r0, sp, #60	; 0x3c
90014dcc:	9300      	str	r3, [sp, #0]
90014dce:	465b      	mov	r3, fp
90014dd0:	f005 f817 	bl	90019e02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014dd4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014dd8:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90014ddc:	af0f      	add	r7, sp, #60	; 0x3c
90014dde:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014de2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014de6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90014de8:	bf0a      	itet	eq
90014dea:	464a      	moveq	r2, r9
90014dec:	461a      	movne	r2, r3
90014dee:	4699      	moveq	r9, r3
90014df0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90014df4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90014df8:	1ad2      	subs	r2, r2, r3
90014dfa:	6833      	ldr	r3, [r6, #0]
90014dfc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90014e00:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014e04:	7859      	ldrb	r1, [r3, #1]
90014e06:	2300      	movs	r3, #0
90014e08:	9707      	str	r7, [sp, #28]
90014e0a:	f3c1 0181 	ubfx	r1, r1, #2, #2
90014e0e:	f8ad 3018 	strh.w	r3, [sp, #24]
90014e12:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90014e16:	f88d 1020 	strb.w	r1, [sp, #32]
90014e1a:	9509      	str	r5, [sp, #36]	; 0x24
90014e1c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90014e20:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90014e24:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90014e28:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90014e2c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90014e30:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90014e34:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90014e38:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014e3c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90014e40:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90014e44:	b350      	cbz	r0, 90014e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014e46:	682b      	ldr	r3, [r5, #0]
90014e48:	4628      	mov	r0, r5
90014e4a:	695b      	ldr	r3, [r3, #20]
90014e4c:	4798      	blx	r3
90014e4e:	4607      	mov	r7, r0
90014e50:	b320      	cbz	r0, 90014e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014e52:	9809      	ldr	r0, [sp, #36]	; 0x24
90014e54:	4639      	mov	r1, r7
90014e56:	6803      	ldr	r3, [r0, #0]
90014e58:	68db      	ldr	r3, [r3, #12]
90014e5a:	4798      	blx	r3
90014e5c:	4606      	mov	r6, r0
90014e5e:	b1e8      	cbz	r0, 90014e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014e60:	7b43      	ldrb	r3, [r0, #13]
90014e62:	7a82      	ldrb	r2, [r0, #10]
90014e64:	005b      	lsls	r3, r3, #1
90014e66:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014e6a:	4313      	orrs	r3, r2
90014e6c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90014e70:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90014e74:	2b06      	cmp	r3, #6
90014e76:	d111      	bne.n	90014e9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014e78:	9809      	ldr	r0, [sp, #36]	; 0x24
90014e7a:	4632      	mov	r2, r6
90014e7c:	4639      	mov	r1, r7
90014e7e:	6803      	ldr	r3, [r0, #0]
90014e80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014e82:	4798      	blx	r3
90014e84:	7b73      	ldrb	r3, [r6, #13]
90014e86:	005b      	lsls	r3, r3, #1
90014e88:	f403 7280 	and.w	r2, r3, #256	; 0x100
90014e8c:	7ab3      	ldrb	r3, [r6, #10]
90014e8e:	4313      	orrs	r3, r2
90014e90:	4418      	add	r0, r3
90014e92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90014e96:	4418      	add	r0, r3
90014e98:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90014e9c:	2600      	movs	r6, #0
90014e9e:	4637      	mov	r7, r6
90014ea0:	a806      	add	r0, sp, #24
90014ea2:	3701      	adds	r7, #1
90014ea4:	f002 fb6d 	bl	90017582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014ea8:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90014eac:	9b03      	ldr	r3, [sp, #12]
90014eae:	b2bf      	uxth	r7, r7
90014eb0:	4286      	cmp	r6, r0
90014eb2:	eba9 0903 	sub.w	r9, r9, r3
90014eb6:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90014eba:	bfb8      	it	lt
90014ebc:	4606      	movlt	r6, r0
90014ebe:	fa0f f989 	sxth.w	r9, r9
90014ec2:	b236      	sxth	r6, r6
90014ec4:	2b00      	cmp	r3, #0
90014ec6:	f43f af0d 	beq.w	90014ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014eca:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90014ece:	2b00      	cmp	r3, #0
90014ed0:	f47f af08 	bne.w	90014ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014ed4:	7a2b      	ldrb	r3, [r5, #8]
90014ed6:	444b      	add	r3, r9
90014ed8:	2b00      	cmp	r3, #0
90014eda:	dce1      	bgt.n	90014ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90014edc:	e702      	b.n	90014ce4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014ede:	bf00      	nop
90014ee0:	24039b28 	.word	0x24039b28
90014ee4:	24039b24 	.word	0x24039b24
90014ee8:	24039b2c 	.word	0x24039b2c
90014eec:	24039b30 	.word	0x24039b30
90014ef0:	ebaa 0606 	sub.w	r6, sl, r6
90014ef4:	2002      	movs	r0, #2
90014ef6:	fb96 f6f0 	sdiv	r6, r6, r0
90014efa:	e71c      	b.n	90014d36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014efc:	441e      	add	r6, r3
90014efe:	ebaa 0606 	sub.w	r6, sl, r6
90014f02:	e718      	b.n	90014d36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014f04:	8925      	ldrh	r5, [r4, #8]
90014f06:	1aed      	subs	r5, r5, r3
90014f08:	eba5 050a 	sub.w	r5, r5, sl
90014f0c:	fa0f fb85 	sxth.w	fp, r5
90014f10:	8965      	ldrh	r5, [r4, #10]
90014f12:	eba5 0509 	sub.w	r5, r5, r9
90014f16:	b22d      	sxth	r5, r5
90014f18:	e72d      	b.n	90014d76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014f1a:	8965      	ldrh	r5, [r4, #10]
90014f1c:	f04f 0b00 	mov.w	fp, #0
90014f20:	1aed      	subs	r5, r5, r3
90014f22:	4633      	mov	r3, r6
90014f24:	463e      	mov	r6, r7
90014f26:	eba5 050a 	sub.w	r5, r5, sl
90014f2a:	461f      	mov	r7, r3
90014f2c:	b22d      	sxth	r5, r5
90014f2e:	e722      	b.n	90014d76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90014f30:	2500      	movs	r5, #0
90014f32:	e720      	b.n	90014d76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90014f34 <_ZN8touchgfx8TextAreaD0Ev>:
90014f34:	b510      	push	{r4, lr}
90014f36:	4604      	mov	r4, r0
90014f38:	2148      	movs	r1, #72	; 0x48
90014f3a:	f014 fa13 	bl	90029364 <_ZdlPvj>
90014f3e:	4620      	mov	r0, r4
90014f40:	bd10      	pop	{r4, pc}
	...

90014f44 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90014f44:	b513      	push	{r0, r1, r4, lr}
90014f46:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90014f4a:	4604      	mov	r4, r0
90014f4c:	b1fb      	cbz	r3, 90014f8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014f4e:	4b16      	ldr	r3, [pc, #88]	; (90014fa8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90014f50:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014f52:	881b      	ldrh	r3, [r3, #0]
90014f54:	428b      	cmp	r3, r1
90014f56:	d91a      	bls.n	90014f8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014f58:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014f5c:	2b00      	cmp	r3, #0
90014f5e:	dd16      	ble.n	90014f8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014f60:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014f64:	2b00      	cmp	r3, #0
90014f66:	dd12      	ble.n	90014f8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014f68:	4b10      	ldr	r3, [pc, #64]	; (90014fac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90014f6a:	6818      	ldr	r0, [r3, #0]
90014f6c:	f7ef fb6c 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014f70:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90014f74:	6822      	ldr	r2, [r4, #0]
90014f76:	2b00      	cmp	r3, #0
90014f78:	db06      	blt.n	90014f88 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90014f7a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90014f7e:	2b00      	cmp	r3, #0
90014f80:	db02      	blt.n	90014f88 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90014f82:	6c63      	ldr	r3, [r4, #68]	; 0x44
90014f84:	4298      	cmp	r0, r3
90014f86:	d004      	beq.n	90014f92 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90014f88:	6953      	ldr	r3, [r2, #20]
90014f8a:	4620      	mov	r0, r4
90014f8c:	4798      	blx	r3
90014f8e:	b002      	add	sp, #8
90014f90:	bd10      	pop	{r4, pc}
90014f92:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90014f96:	466b      	mov	r3, sp
90014f98:	6912      	ldr	r2, [r2, #16]
90014f9a:	c903      	ldmia	r1, {r0, r1}
90014f9c:	e883 0003 	stmia.w	r3, {r0, r1}
90014fa0:	4619      	mov	r1, r3
90014fa2:	4620      	mov	r0, r4
90014fa4:	4790      	blx	r2
90014fa6:	e7f2      	b.n	90014f8e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90014fa8:	24039b28 	.word	0x24039b28
90014fac:	24039b30 	.word	0x24039b30

90014fb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90014fb0:	4b45      	ldr	r3, [pc, #276]	; (900150c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90014fb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014fb6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90014fb8:	b08e      	sub	sp, #56	; 0x38
90014fba:	881b      	ldrh	r3, [r3, #0]
90014fbc:	4604      	mov	r4, r0
90014fbe:	4293      	cmp	r3, r2
90014fc0:	d97e      	bls.n	900150c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90014fc2:	6808      	ldr	r0, [r1, #0]
90014fc4:	ab05      	add	r3, sp, #20
90014fc6:	6849      	ldr	r1, [r1, #4]
90014fc8:	4d40      	ldr	r5, [pc, #256]	; (900150cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90014fca:	c303      	stmia	r3!, {r0, r1}
90014fcc:	4611      	mov	r1, r2
90014fce:	6828      	ldr	r0, [r5, #0]
90014fd0:	f7ef fb3a 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014fd4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90014fd8:	2b00      	cmp	r3, #0
90014fda:	db11      	blt.n	90015000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014fdc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90014fe0:	2b00      	cmp	r3, #0
90014fe2:	db0d      	blt.n	90015000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014fe4:	6c63      	ldr	r3, [r4, #68]	; 0x44
90014fe6:	4298      	cmp	r0, r3
90014fe8:	d10a      	bne.n	90015000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90014fea:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90014fee:	ab09      	add	r3, sp, #36	; 0x24
90014ff0:	e892 0003 	ldmia.w	r2, {r0, r1}
90014ff4:	e883 0003 	stmia.w	r3, {r0, r1}
90014ff8:	4619      	mov	r1, r3
90014ffa:	a805      	add	r0, sp, #20
90014ffc:	f7fd fda0 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90015000:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015004:	2b00      	cmp	r3, #0
90015006:	dd5b      	ble.n	900150c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015008:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
9001500c:	2b00      	cmp	r3, #0
9001500e:	dd57      	ble.n	900150c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015010:	4f2f      	ldr	r7, [pc, #188]	; (900150d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015012:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015014:	683b      	ldr	r3, [r7, #0]
90015016:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001501a:	4b2e      	ldr	r3, [pc, #184]	; (900150d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
9001501c:	681b      	ldr	r3, [r3, #0]
9001501e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015022:	2e00      	cmp	r6, #0
90015024:	d04c      	beq.n	900150c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015026:	6823      	ldr	r3, [r4, #0]
90015028:	4620      	mov	r0, r4
9001502a:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
9001502e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90015030:	4798      	blx	r3
90015032:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015034:	683b      	ldr	r3, [r7, #0]
90015036:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
9001503a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001503e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90015042:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90015046:	785b      	ldrb	r3, [r3, #1]
90015048:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
9001504c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015050:	6b21      	ldr	r1, [r4, #48]	; 0x30
90015052:	9609      	str	r6, [sp, #36]	; 0x24
90015054:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90015058:	4b1f      	ldr	r3, [pc, #124]	; (900150d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
9001505a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
9001505e:	681b      	ldr	r3, [r3, #0]
90015060:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90015064:	910b      	str	r1, [sp, #44]	; 0x2c
90015066:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
9001506a:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
9001506e:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90015072:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90015076:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001507a:	b10a      	cbz	r2, 90015080 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
9001507c:	6cde      	ldr	r6, [r3, #76]	; 0x4c
9001507e:	b906      	cbnz	r6, 90015082 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90015080:	689e      	ldr	r6, [r3, #8]
90015082:	af07      	add	r7, sp, #28
90015084:	4621      	mov	r1, r4
90015086:	4638      	mov	r0, r7
90015088:	f004 f96a 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001508c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001508e:	6828      	ldr	r0, [r5, #0]
90015090:	f7ef fada 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015094:	6823      	ldr	r3, [r4, #0]
90015096:	4605      	mov	r5, r0
90015098:	4620      	mov	r0, r4
9001509a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001509c:	4798      	blx	r3
9001509e:	6823      	ldr	r3, [r4, #0]
900150a0:	4680      	mov	r8, r0
900150a2:	4620      	mov	r0, r4
900150a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900150a8:	4798      	blx	r3
900150aa:	ab09      	add	r3, sp, #36	; 0x24
900150ac:	9501      	str	r5, [sp, #4]
900150ae:	9300      	str	r3, [sp, #0]
900150b0:	ab05      	add	r3, sp, #20
900150b2:	e9cd 8002 	strd	r8, r0, [sp, #8]
900150b6:	4630      	mov	r0, r6
900150b8:	e897 0006 	ldmia.w	r7, {r1, r2}
900150bc:	f7ef fa74 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900150c0:	b00e      	add	sp, #56	; 0x38
900150c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900150c6:	bf00      	nop
900150c8:	24039b28 	.word	0x24039b28
900150cc:	24039b30 	.word	0x24039b30
900150d0:	24039b24 	.word	0x24039b24
900150d4:	24039b2c 	.word	0x24039b2c
900150d8:	24039acc 	.word	0x24039acc

900150dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900150dc:	b570      	push	{r4, r5, r6, lr}
900150de:	6803      	ldr	r3, [r0, #0]
900150e0:	4604      	mov	r4, r0
900150e2:	4615      	mov	r5, r2
900150e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900150e6:	4798      	blx	r3
900150e8:	6823      	ldr	r3, [r4, #0]
900150ea:	4629      	mov	r1, r5
900150ec:	4620      	mov	r0, r4
900150ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900150f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900150f4:	4718      	bx	r3
	...

900150f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900150f8:	b538      	push	{r3, r4, r5, lr}
900150fa:	4b0e      	ldr	r3, [pc, #56]	; (90015134 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900150fc:	4604      	mov	r4, r0
900150fe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015100:	881b      	ldrh	r3, [r3, #0]
90015102:	429a      	cmp	r2, r3
90015104:	d214      	bcs.n	90015130 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90015106:	6803      	ldr	r3, [r0, #0]
90015108:	6f5b      	ldr	r3, [r3, #116]	; 0x74
9001510a:	4798      	blx	r3
9001510c:	6823      	ldr	r3, [r4, #0]
9001510e:	4605      	mov	r5, r0
90015110:	4620      	mov	r0, r4
90015112:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90015114:	4798      	blx	r3
90015116:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001511a:	b22d      	sxth	r5, r5
9001511c:	4601      	mov	r1, r0
9001511e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90015122:	bf06      	itte	eq
90015124:	4602      	moveq	r2, r0
90015126:	4629      	moveq	r1, r5
90015128:	462a      	movne	r2, r5
9001512a:	4620      	mov	r0, r4
9001512c:	f7ff ffd6 	bl	900150dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015130:	bd38      	pop	{r3, r4, r5, pc}
90015132:	bf00      	nop
90015134:	24039b28 	.word	0x24039b28

90015138 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90015138:	b530      	push	{r4, r5, lr}
9001513a:	888b      	ldrh	r3, [r1, #4]
9001513c:	b085      	sub	sp, #20
9001513e:	4604      	mov	r4, r0
90015140:	8583      	strh	r3, [r0, #44]	; 0x2c
90015142:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015146:	b923      	cbnz	r3, 90015152 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015148:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001514c:	b90b      	cbnz	r3, 90015152 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001514e:	f7ff ffd3 	bl	900150f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90015152:	6823      	ldr	r3, [r4, #0]
90015154:	466d      	mov	r5, sp
90015156:	4621      	mov	r1, r4
90015158:	343c      	adds	r4, #60	; 0x3c
9001515a:	4628      	mov	r0, r5
9001515c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90015160:	4798      	blx	r3
90015162:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90015166:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001516a:	b005      	add	sp, #20
9001516c:	bd30      	pop	{r4, r5, pc}

9001516e <_ZNK8touchgfx3Box12getSolidRectEv>:
9001516e:	2300      	movs	r3, #0
90015170:	8083      	strh	r3, [r0, #4]
90015172:	80c3      	strh	r3, [r0, #6]
90015174:	8003      	strh	r3, [r0, #0]
90015176:	8043      	strh	r3, [r0, #2]
90015178:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
9001517c:	2bff      	cmp	r3, #255	; 0xff
9001517e:	bf01      	itttt	eq
90015180:	890b      	ldrheq	r3, [r1, #8]
90015182:	8083      	strheq	r3, [r0, #4]
90015184:	894b      	ldrheq	r3, [r1, #10]
90015186:	80c3      	strheq	r3, [r0, #6]
90015188:	4770      	bx	lr
	...

9001518c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9001518c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001518e:	4604      	mov	r4, r0
90015190:	466b      	mov	r3, sp
90015192:	6808      	ldr	r0, [r1, #0]
90015194:	6849      	ldr	r1, [r1, #4]
90015196:	c303      	stmia	r3!, {r0, r1}
90015198:	6823      	ldr	r3, [r4, #0]
9001519a:	4669      	mov	r1, sp
9001519c:	4620      	mov	r0, r4
9001519e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900151a0:	4798      	blx	r3
900151a2:	4b08      	ldr	r3, [pc, #32]	; (900151c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900151a4:	681b      	ldr	r3, [r3, #0]
900151a6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900151aa:	b10a      	cbz	r2, 900151b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900151ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900151ae:	b900      	cbnz	r0, 900151b2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900151b0:	6898      	ldr	r0, [r3, #8]
900151b2:	6803      	ldr	r3, [r0, #0]
900151b4:	4669      	mov	r1, sp
900151b6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900151b8:	6a1d      	ldr	r5, [r3, #32]
900151ba:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900151be:	47a8      	blx	r5
900151c0:	b003      	add	sp, #12
900151c2:	bd30      	pop	{r4, r5, pc}
900151c4:	24039acc 	.word	0x24039acc

900151c8 <_ZN8touchgfx3BoxD1Ev>:
900151c8:	4770      	bx	lr

900151ca <_ZN8touchgfx3BoxD0Ev>:
900151ca:	b510      	push	{r4, lr}
900151cc:	4604      	mov	r4, r0
900151ce:	212c      	movs	r1, #44	; 0x2c
900151d0:	f014 f8c8 	bl	90029364 <_ZdlPvj>
900151d4:	4620      	mov	r0, r4
900151d6:	bd10      	pop	{r4, pc}

900151d8 <_ZNK8touchgfx3Box17invalidateContentEv>:
900151d8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
900151dc:	b12a      	cbz	r2, 900151ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900151de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900151e2:	b112      	cbz	r2, 900151ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900151e4:	6803      	ldr	r3, [r0, #0]
900151e6:	695b      	ldr	r3, [r3, #20]
900151e8:	4718      	bx	r3
900151ea:	4770      	bx	lr

900151ec <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900151ec:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900151f0:	4770      	bx	lr

900151f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900151f2:	b570      	push	{r4, r5, r6, lr}
900151f4:	880b      	ldrh	r3, [r1, #0]
900151f6:	4605      	mov	r5, r0
900151f8:	4604      	mov	r4, r0
900151fa:	85c3      	strh	r3, [r0, #46]	; 0x2e
900151fc:	8813      	ldrh	r3, [r2, #0]
900151fe:	f825 3f30 	strh.w	r3, [r5, #48]!
90015202:	4628      	mov	r0, r5
90015204:	f006 f91a 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
90015208:	4606      	mov	r6, r0
9001520a:	4628      	mov	r0, r5
9001520c:	f006 f94a 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015210:	6823      	ldr	r3, [r4, #0]
90015212:	4605      	mov	r5, r0
90015214:	4631      	mov	r1, r6
90015216:	4620      	mov	r0, r4
90015218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001521a:	4798      	blx	r3
9001521c:	6823      	ldr	r3, [r4, #0]
9001521e:	4629      	mov	r1, r5
90015220:	4620      	mov	r0, r4
90015222:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015228:	4718      	bx	r3

9001522a <_ZN8touchgfx14AbstractButton13executeActionEv>:
9001522a:	b510      	push	{r4, lr}
9001522c:	4604      	mov	r4, r0
9001522e:	6a80      	ldr	r0, [r0, #40]	; 0x28
90015230:	b150      	cbz	r0, 90015248 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015232:	6803      	ldr	r3, [r0, #0]
90015234:	68db      	ldr	r3, [r3, #12]
90015236:	4798      	blx	r3
90015238:	b130      	cbz	r0, 90015248 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001523a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001523c:	4621      	mov	r1, r4
9001523e:	6803      	ldr	r3, [r0, #0]
90015240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015244:	689b      	ldr	r3, [r3, #8]
90015246:	4718      	bx	r3
90015248:	bd10      	pop	{r4, pc}

9001524a <_ZNK8touchgfx6Button12getSolidRectEv>:
9001524a:	b510      	push	{r4, lr}
9001524c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90015250:	4604      	mov	r4, r0
90015252:	2bff      	cmp	r3, #255	; 0xff
90015254:	d006      	beq.n	90015264 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90015256:	2300      	movs	r3, #0
90015258:	8003      	strh	r3, [r0, #0]
9001525a:	8043      	strh	r3, [r0, #2]
9001525c:	8083      	strh	r3, [r0, #4]
9001525e:	80c3      	strh	r3, [r0, #6]
90015260:	4620      	mov	r0, r4
90015262:	bd10      	pop	{r4, pc}
90015264:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90015268:	b11b      	cbz	r3, 90015272 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001526a:	3130      	adds	r1, #48	; 0x30
9001526c:	f006 f94e 	bl	9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90015270:	e7f6      	b.n	90015260 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90015272:	312e      	adds	r1, #46	; 0x2e
90015274:	e7fa      	b.n	9001526c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90015278 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90015278:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001527c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015280:	b08a      	sub	sp, #40	; 0x28
90015282:	4604      	mov	r4, r0
90015284:	4688      	mov	r8, r1
90015286:	2b00      	cmp	r3, #0
90015288:	d066      	beq.n	90015358 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001528a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001528c:	a805      	add	r0, sp, #20
9001528e:	f8ad 3014 	strh.w	r3, [sp, #20]
90015292:	f006 f8d3 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
90015296:	4607      	mov	r7, r0
90015298:	a805      	add	r0, sp, #20
9001529a:	f006 f903 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001529e:	f9b8 6000 	ldrsh.w	r6, [r8]
900152a2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900152a6:	2300      	movs	r3, #0
900152a8:	4432      	add	r2, r6
900152aa:	9306      	str	r3, [sp, #24]
900152ac:	b292      	uxth	r2, r2
900152ae:	fa0f fc82 	sxth.w	ip, r2
900152b2:	459c      	cmp	ip, r3
900152b4:	dd52      	ble.n	9001535c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900152b6:	42b7      	cmp	r7, r6
900152b8:	dd50      	ble.n	9001535c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900152ba:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900152be:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900152c2:	442b      	add	r3, r5
900152c4:	b29b      	uxth	r3, r3
900152c6:	b219      	sxth	r1, r3
900152c8:	2900      	cmp	r1, #0
900152ca:	dd47      	ble.n	9001535c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900152cc:	42a8      	cmp	r0, r5
900152ce:	dd45      	ble.n	9001535c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900152d0:	4567      	cmp	r7, ip
900152d2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900152d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900152da:	bfb8      	it	lt
900152dc:	b2ba      	uxthlt	r2, r7
900152de:	4288      	cmp	r0, r1
900152e0:	f8ad 6018 	strh.w	r6, [sp, #24]
900152e4:	bfb8      	it	lt
900152e6:	b283      	uxthlt	r3, r0
900152e8:	1b92      	subs	r2, r2, r6
900152ea:	f8ad 501a 	strh.w	r5, [sp, #26]
900152ee:	1b5b      	subs	r3, r3, r5
900152f0:	f8ad 201c 	strh.w	r2, [sp, #28]
900152f4:	f8ad 301e 	strh.w	r3, [sp, #30]
900152f8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900152fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015300:	429a      	cmp	r2, r3
90015302:	d026      	beq.n	90015352 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015304:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015308:	2b00      	cmp	r3, #0
9001530a:	dd22      	ble.n	90015352 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001530c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015310:	2b00      	cmp	r3, #0
90015312:	dd1e      	ble.n	90015352 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015314:	2300      	movs	r3, #0
90015316:	a908      	add	r1, sp, #32
90015318:	4620      	mov	r0, r4
9001531a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9001531e:	6823      	ldr	r3, [r4, #0]
90015320:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015322:	4798      	blx	r3
90015324:	4b0f      	ldr	r3, [pc, #60]	; (90015364 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90015326:	681b      	ldr	r3, [r3, #0]
90015328:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001532c:	b10a      	cbz	r2, 90015332 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9001532e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90015330:	b900      	cbnz	r0, 90015334 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90015332:	6898      	ldr	r0, [r3, #8]
90015334:	2501      	movs	r5, #1
90015336:	6801      	ldr	r1, [r0, #0]
90015338:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001533c:	9502      	str	r5, [sp, #8]
9001533e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90015342:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90015346:	9401      	str	r4, [sp, #4]
90015348:	ac06      	add	r4, sp, #24
9001534a:	9400      	str	r4, [sp, #0]
9001534c:	688c      	ldr	r4, [r1, #8]
9001534e:	a905      	add	r1, sp, #20
90015350:	47a0      	blx	r4
90015352:	b00a      	add	sp, #40	; 0x28
90015354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015358:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9001535a:	e797      	b.n	9001528c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9001535c:	2300      	movs	r3, #0
9001535e:	9307      	str	r3, [sp, #28]
90015360:	e7ca      	b.n	900152f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90015362:	bf00      	nop
90015364:	24039acc 	.word	0x24039acc

90015368 <_ZNK8touchgfx6Button17invalidateContentEv>:
90015368:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
9001536c:	b12a      	cbz	r2, 9001537a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001536e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90015372:	b112      	cbz	r2, 9001537a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90015374:	6803      	ldr	r3, [r0, #0]
90015376:	695b      	ldr	r3, [r3, #20]
90015378:	4718      	bx	r3
9001537a:	4770      	bx	lr

9001537c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9001537c:	4b30      	ldr	r3, [pc, #192]	; (90015440 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001537e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015382:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015384:	b08d      	sub	sp, #52	; 0x34
90015386:	881b      	ldrh	r3, [r3, #0]
90015388:	4604      	mov	r4, r0
9001538a:	460f      	mov	r7, r1
9001538c:	4293      	cmp	r3, r2
9001538e:	d954      	bls.n	9001543a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015390:	4b2c      	ldr	r3, [pc, #176]	; (90015444 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90015392:	6819      	ldr	r1, [r3, #0]
90015394:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90015398:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001539c:	4a2a      	ldr	r2, [pc, #168]	; (90015448 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001539e:	6812      	ldr	r2, [r2, #0]
900153a0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900153a4:	2900      	cmp	r1, #0
900153a6:	d048      	beq.n	9001543a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900153a8:	785a      	ldrb	r2, [r3, #1]
900153aa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900153ae:	f3c2 0801 	ubfx	r8, r2, #0, #2
900153b2:	f3c2 0281 	ubfx	r2, r2, #2, #2
900153b6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900153ba:	4b24      	ldr	r3, [pc, #144]	; (9001544c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900153bc:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
900153c0:	681a      	ldr	r2, [r3, #0]
900153c2:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
900153c6:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
900153ca:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
900153ce:	6b26      	ldr	r6, [r4, #48]	; 0x30
900153d0:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
900153d4:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
900153d8:	9107      	str	r1, [sp, #28]
900153da:	f88d 8020 	strb.w	r8, [sp, #32]
900153de:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
900153e2:	9609      	str	r6, [sp, #36]	; 0x24
900153e4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900153e8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900153ec:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900153f0:	b10b      	cbz	r3, 900153f6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900153f2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900153f4:	b905      	cbnz	r5, 900153f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900153f6:	6895      	ldr	r5, [r2, #8]
900153f8:	ae05      	add	r6, sp, #20
900153fa:	4621      	mov	r1, r4
900153fc:	4630      	mov	r0, r6
900153fe:	f003 ffaf 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015402:	4b13      	ldr	r3, [pc, #76]	; (90015450 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015404:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015406:	6818      	ldr	r0, [r3, #0]
90015408:	f7ef f91e 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
9001540c:	6823      	ldr	r3, [r4, #0]
9001540e:	4680      	mov	r8, r0
90015410:	4620      	mov	r0, r4
90015412:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015414:	4798      	blx	r3
90015416:	6823      	ldr	r3, [r4, #0]
90015418:	4681      	mov	r9, r0
9001541a:	4620      	mov	r0, r4
9001541c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015420:	4798      	blx	r3
90015422:	ab07      	add	r3, sp, #28
90015424:	f8cd 8004 	str.w	r8, [sp, #4]
90015428:	9300      	str	r3, [sp, #0]
9001542a:	463b      	mov	r3, r7
9001542c:	e9cd 9002 	strd	r9, r0, [sp, #8]
90015430:	4628      	mov	r0, r5
90015432:	e896 0006 	ldmia.w	r6, {r1, r2}
90015436:	f7ef f8b7 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001543a:	b00d      	add	sp, #52	; 0x34
9001543c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015440:	24039b28 	.word	0x24039b28
90015444:	24039b24 	.word	0x24039b24
90015448:	24039b2c 	.word	0x24039b2c
9001544c:	24039acc 	.word	0x24039acc
90015450:	24039b30 	.word	0x24039b30

90015454 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90015454:	4770      	bx	lr

90015456 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90015456:	b510      	push	{r4, lr}
90015458:	4604      	mov	r4, r0
9001545a:	2134      	movs	r1, #52	; 0x34
9001545c:	f013 ff82 	bl	90029364 <_ZdlPvj>
90015460:	4620      	mov	r0, r4
90015462:	bd10      	pop	{r4, pc}

90015464 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90015464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015468:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001546a:	4604      	mov	r4, r0
9001546c:	460e      	mov	r6, r1
9001546e:	b08e      	sub	sp, #56	; 0x38
90015470:	b218      	sxth	r0, r3
90015472:	8921      	ldrh	r1, [r4, #8]
90015474:	005b      	lsls	r3, r3, #1
90015476:	8962      	ldrh	r2, [r4, #10]
90015478:	f8ad 0000 	strh.w	r0, [sp]
9001547c:	b29b      	uxth	r3, r3
9001547e:	f8ad 0002 	strh.w	r0, [sp, #2]
90015482:	1ac9      	subs	r1, r1, r3
90015484:	1ad3      	subs	r3, r2, r3
90015486:	b209      	sxth	r1, r1
90015488:	b21b      	sxth	r3, r3
9001548a:	2900      	cmp	r1, #0
9001548c:	f8ad 1004 	strh.w	r1, [sp, #4]
90015490:	f8ad 3006 	strh.w	r3, [sp, #6]
90015494:	dd5e      	ble.n	90015554 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90015496:	2b00      	cmp	r3, #0
90015498:	dd5c      	ble.n	90015554 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001549a:	6830      	ldr	r0, [r6, #0]
9001549c:	ab02      	add	r3, sp, #8
9001549e:	6871      	ldr	r1, [r6, #4]
900154a0:	c303      	stmia	r3!, {r0, r1}
900154a2:	4669      	mov	r1, sp
900154a4:	a802      	add	r0, sp, #8
900154a6:	f7fd fb4b 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
900154aa:	4620      	mov	r0, r4
900154ac:	a902      	add	r1, sp, #8
900154ae:	f7ff fe6d 	bl	9001518c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900154b2:	8e20      	ldrh	r0, [r4, #48]	; 0x30
900154b4:	2800      	cmp	r0, #0
900154b6:	d05f      	beq.n	90015578 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900154b8:	8963      	ldrh	r3, [r4, #10]
900154ba:	b202      	sxth	r2, r0
900154bc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900154c0:	2500      	movs	r5, #0
900154c2:	1a1f      	subs	r7, r3, r0
900154c4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900154c8:	f8ad 101c 	strh.w	r1, [sp, #28]
900154cc:	b21b      	sxth	r3, r3
900154ce:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900154d2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
900154d6:	af04      	add	r7, sp, #16
900154d8:	1a09      	subs	r1, r1, r0
900154da:	9506      	str	r5, [sp, #24]
900154dc:	f8ad 201e 	strh.w	r2, [sp, #30]
900154e0:	f8ad 5020 	strh.w	r5, [sp, #32]
900154e4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900154e8:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900154ec:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900154f0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900154f4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900154f8:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900154fc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015500:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015504:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015508:	ab06      	add	r3, sp, #24
9001550a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001550e:	e893 0003 	ldmia.w	r3, {r0, r1}
90015512:	e887 0003 	stmia.w	r7, {r0, r1}
90015516:	4631      	mov	r1, r6
90015518:	4638      	mov	r0, r7
9001551a:	f7fd fb11 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
9001551e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90015522:	2b00      	cmp	r3, #0
90015524:	dd12      	ble.n	9001554c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90015526:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001552a:	2b00      	cmp	r3, #0
9001552c:	dd0e      	ble.n	9001554c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001552e:	6823      	ldr	r3, [r4, #0]
90015530:	4639      	mov	r1, r7
90015532:	4620      	mov	r0, r4
90015534:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015536:	4798      	blx	r3
90015538:	f7fd fde6 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001553c:	6803      	ldr	r3, [r0, #0]
9001553e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90015540:	4639      	mov	r1, r7
90015542:	f8d3 8020 	ldr.w	r8, [r3, #32]
90015546:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001554a:	47c0      	blx	r8
9001554c:	3501      	adds	r5, #1
9001554e:	2d04      	cmp	r5, #4
90015550:	d1da      	bne.n	90015508 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90015552:	e011      	b.n	90015578 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90015554:	6830      	ldr	r0, [r6, #0]
90015556:	ab06      	add	r3, sp, #24
90015558:	6871      	ldr	r1, [r6, #4]
9001555a:	c303      	stmia	r3!, {r0, r1}
9001555c:	6823      	ldr	r3, [r4, #0]
9001555e:	a906      	add	r1, sp, #24
90015560:	4620      	mov	r0, r4
90015562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015564:	4798      	blx	r3
90015566:	f7fd fdcf 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001556a:	6803      	ldr	r3, [r0, #0]
9001556c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001556e:	a906      	add	r1, sp, #24
90015570:	6a1d      	ldr	r5, [r3, #32]
90015572:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90015576:	47a8      	blx	r5
90015578:	b00e      	add	sp, #56	; 0x38
9001557a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001557e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001557e:	4770      	bx	lr

90015580 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90015580:	4770      	bx	lr

90015582 <_ZN8touchgfx14ButtonWithIconD0Ev>:
90015582:	b510      	push	{r4, lr}
90015584:	4604      	mov	r4, r0
90015586:	213c      	movs	r1, #60	; 0x3c
90015588:	f013 feec 	bl	90029364 <_ZdlPvj>
9001558c:	4620      	mov	r0, r4
9001558e:	bd10      	pop	{r4, pc}

90015590 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90015590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015594:	461c      	mov	r4, r3
90015596:	4606      	mov	r6, r0
90015598:	9f06      	ldr	r7, [sp, #24]
9001559a:	f7ff fe2a 	bl	900151f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001559e:	8823      	ldrh	r3, [r4, #0]
900155a0:	f04f 0802 	mov.w	r8, #2
900155a4:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
900155a8:	4638      	mov	r0, r7
900155aa:	86b3      	strh	r3, [r6, #52]	; 0x34
900155ac:	883b      	ldrh	r3, [r7, #0]
900155ae:	fb95 f5f8 	sdiv	r5, r5, r8
900155b2:	86f3      	strh	r3, [r6, #54]	; 0x36
900155b4:	b2ad      	uxth	r5, r5
900155b6:	f005 ff41 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
900155ba:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
900155be:	fb90 f0f8 	sdiv	r0, r0, r8
900155c2:	1a2d      	subs	r5, r5, r0
900155c4:	4638      	mov	r0, r7
900155c6:	fb94 f4f8 	sdiv	r4, r4, r8
900155ca:	8735      	strh	r5, [r6, #56]	; 0x38
900155cc:	b2a4      	uxth	r4, r4
900155ce:	f005 ff69 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900155d2:	fb90 f0f8 	sdiv	r0, r0, r8
900155d6:	1a24      	subs	r4, r4, r0
900155d8:	8774      	strh	r4, [r6, #58]	; 0x3a
900155da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

900155e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
900155e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900155e4:	4604      	mov	r4, r0
900155e6:	b08c      	sub	sp, #48	; 0x30
900155e8:	460d      	mov	r5, r1
900155ea:	f7ff fe45 	bl	90015278 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900155ee:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900155f2:	2b00      	cmp	r3, #0
900155f4:	d05d      	beq.n	900156b2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
900155f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900155f8:	a805      	add	r0, sp, #20
900155fa:	f8ad 3014 	strh.w	r3, [sp, #20]
900155fe:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
90015602:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90015606:	f005 ff19 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001560a:	4606      	mov	r6, r0
9001560c:	a805      	add	r0, sp, #20
9001560e:	f005 ff49 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015612:	6869      	ldr	r1, [r5, #4]
90015614:	f8ad 001e 	strh.w	r0, [sp, #30]
90015618:	ab08      	add	r3, sp, #32
9001561a:	6828      	ldr	r0, [r5, #0]
9001561c:	ad08      	add	r5, sp, #32
9001561e:	f8ad 8018 	strh.w	r8, [sp, #24]
90015622:	f8ad 701a 	strh.w	r7, [sp, #26]
90015626:	f8ad 601c 	strh.w	r6, [sp, #28]
9001562a:	c303      	stmia	r3!, {r0, r1}
9001562c:	a906      	add	r1, sp, #24
9001562e:	4628      	mov	r0, r5
90015630:	f7fd fa86 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90015634:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90015638:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001563c:	429a      	cmp	r2, r3
9001563e:	d035      	beq.n	900156ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015640:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90015644:	2b00      	cmp	r3, #0
90015646:	dd31      	ble.n	900156ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015648:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
9001564c:	2b00      	cmp	r3, #0
9001564e:	dd2d      	ble.n	900156ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015650:	2300      	movs	r3, #0
90015652:	a90a      	add	r1, sp, #40	; 0x28
90015654:	4620      	mov	r0, r4
90015656:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
9001565a:	6823      	ldr	r3, [r4, #0]
9001565c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001565e:	4798      	blx	r3
90015660:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015664:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90015666:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001566a:	1a9b      	subs	r3, r3, r2
9001566c:	f8ad 3020 	strh.w	r3, [sp, #32]
90015670:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
90015672:	1ac9      	subs	r1, r1, r3
90015674:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90015678:	490f      	ldr	r1, [pc, #60]	; (900156b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
9001567a:	6809      	ldr	r1, [r1, #0]
9001567c:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
90015680:	b108      	cbz	r0, 90015686 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90015682:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90015684:	b900      	cbnz	r0, 90015688 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90015686:	6888      	ldr	r0, [r1, #8]
90015688:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
9001568c:	2601      	movs	r6, #1
9001568e:	440b      	add	r3, r1
90015690:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90015694:	440a      	add	r2, r1
90015696:	6801      	ldr	r1, [r0, #0]
90015698:	9602      	str	r6, [sp, #8]
9001569a:	b21b      	sxth	r3, r3
9001569c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900156a0:	b212      	sxth	r2, r2
900156a2:	e9cd 5400 	strd	r5, r4, [sp]
900156a6:	688c      	ldr	r4, [r1, #8]
900156a8:	a905      	add	r1, sp, #20
900156aa:	47a0      	blx	r4
900156ac:	b00c      	add	sp, #48	; 0x30
900156ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900156b2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900156b4:	e7a0      	b.n	900155f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
900156b6:	bf00      	nop
900156b8:	24039acc 	.word	0x24039acc

900156bc <_ZN8touchgfx14ButtonWithIconC1Ev>:
900156bc:	2101      	movs	r1, #1
900156be:	2200      	movs	r2, #0
900156c0:	b510      	push	{r4, lr}
900156c2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900156c6:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
900156ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
900156ce:	4c0d      	ldr	r4, [pc, #52]	; (90015704 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
900156d0:	8082      	strh	r2, [r0, #4]
900156d2:	80c2      	strh	r2, [r0, #6]
900156d4:	8102      	strh	r2, [r0, #8]
900156d6:	8142      	strh	r2, [r0, #10]
900156d8:	8182      	strh	r2, [r0, #12]
900156da:	81c2      	strh	r2, [r0, #14]
900156dc:	8202      	strh	r2, [r0, #16]
900156de:	8242      	strh	r2, [r0, #18]
900156e0:	61c2      	str	r2, [r0, #28]
900156e2:	8402      	strh	r2, [r0, #32]
900156e4:	8442      	strh	r2, [r0, #34]	; 0x22
900156e6:	6282      	str	r2, [r0, #40]	; 0x28
900156e8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900156ec:	85c1      	strh	r1, [r0, #46]	; 0x2e
900156ee:	8601      	strh	r1, [r0, #48]	; 0x30
900156f0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900156f4:	6004      	str	r4, [r0, #0]
900156f6:	8681      	strh	r1, [r0, #52]	; 0x34
900156f8:	86c1      	strh	r1, [r0, #54]	; 0x36
900156fa:	8702      	strh	r2, [r0, #56]	; 0x38
900156fc:	8742      	strh	r2, [r0, #58]	; 0x3a
900156fe:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015702:	bd10      	pop	{r4, pc}
90015704:	9002d95c 	.word	0x9002d95c

90015708 <_ZN8touchgfx5ImageD1Ev>:
90015708:	4770      	bx	lr

9001570a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001570a:	b570      	push	{r4, r5, r6, lr}
9001570c:	880b      	ldrh	r3, [r1, #0]
9001570e:	460d      	mov	r5, r1
90015710:	4604      	mov	r4, r0
90015712:	84c3      	strh	r3, [r0, #38]	; 0x26
90015714:	4608      	mov	r0, r1
90015716:	f005 fe91 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001571a:	4606      	mov	r6, r0
9001571c:	4628      	mov	r0, r5
9001571e:	f005 fec1 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015722:	6823      	ldr	r3, [r4, #0]
90015724:	4605      	mov	r5, r0
90015726:	4631      	mov	r1, r6
90015728:	4620      	mov	r0, r4
9001572a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001572c:	4798      	blx	r3
9001572e:	6823      	ldr	r3, [r4, #0]
90015730:	4629      	mov	r1, r5
90015732:	4620      	mov	r0, r4
90015734:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015736:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001573a:	4718      	bx	r3

9001573c <_ZN8touchgfx5ImageD0Ev>:
9001573c:	b510      	push	{r4, lr}
9001573e:	4604      	mov	r4, r0
90015740:	212c      	movs	r1, #44	; 0x2c
90015742:	f013 fe0f 	bl	90029364 <_ZdlPvj>
90015746:	4620      	mov	r0, r4
90015748:	bd10      	pop	{r4, pc}

9001574a <_ZNK8touchgfx5Image12getSolidRectEv>:
9001574a:	b510      	push	{r4, lr}
9001574c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90015750:	4604      	mov	r4, r0
90015752:	2bff      	cmp	r3, #255	; 0xff
90015754:	d006      	beq.n	90015764 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90015756:	2300      	movs	r3, #0
90015758:	8003      	strh	r3, [r0, #0]
9001575a:	8043      	strh	r3, [r0, #2]
9001575c:	8083      	strh	r3, [r0, #4]
9001575e:	80c3      	strh	r3, [r0, #6]
90015760:	4620      	mov	r0, r4
90015762:	bd10      	pop	{r4, pc}
90015764:	3126      	adds	r1, #38	; 0x26
90015766:	f005 fed1 	bl	9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001576a:	e7f9      	b.n	90015760 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9001576c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
9001576c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015770:	4604      	mov	r4, r0
90015772:	b088      	sub	sp, #32
90015774:	2500      	movs	r5, #0
90015776:	460f      	mov	r7, r1
90015778:	f854 3b26 	ldr.w	r3, [r4], #38
9001577c:	a904      	add	r1, sp, #16
9001577e:	4606      	mov	r6, r0
90015780:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015782:	e9cd 5504 	strd	r5, r5, [sp, #16]
90015786:	4798      	blx	r3
90015788:	4620      	mov	r0, r4
9001578a:	f005 fe57 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001578e:	4680      	mov	r8, r0
90015790:	4620      	mov	r0, r4
90015792:	f005 fe87 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015796:	9506      	str	r5, [sp, #24]
90015798:	ad06      	add	r5, sp, #24
9001579a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001579e:	4639      	mov	r1, r7
900157a0:	f8ad 801c 	strh.w	r8, [sp, #28]
900157a4:	4628      	mov	r0, r5
900157a6:	f7fd f9cb 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
900157aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900157ae:	2b00      	cmp	r3, #0
900157b0:	dd19      	ble.n	900157e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900157b2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900157b6:	2b00      	cmp	r3, #0
900157b8:	dd15      	ble.n	900157e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900157ba:	4b0c      	ldr	r3, [pc, #48]	; (900157ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900157bc:	681b      	ldr	r3, [r3, #0]
900157be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900157c2:	b10a      	cbz	r2, 900157c8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900157c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900157c6:	b900      	cbnz	r0, 900157ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900157c8:	6898      	ldr	r0, [r3, #8]
900157ca:	2701      	movs	r7, #1
900157cc:	6801      	ldr	r1, [r0, #0]
900157ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900157d2:	9702      	str	r7, [sp, #8]
900157d4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
900157d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900157dc:	e9cd 5600 	strd	r5, r6, [sp]
900157e0:	688d      	ldr	r5, [r1, #8]
900157e2:	4621      	mov	r1, r4
900157e4:	47a8      	blx	r5
900157e6:	b008      	add	sp, #32
900157e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900157ec:	24039acc 	.word	0x24039acc

900157f0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900157f0:	4770      	bx	lr

900157f2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900157f2:	b510      	push	{r4, lr}
900157f4:	4604      	mov	r4, r0
900157f6:	2148      	movs	r1, #72	; 0x48
900157f8:	f013 fdb4 	bl	90029364 <_ZdlPvj>
900157fc:	4620      	mov	r0, r4
900157fe:	bd10      	pop	{r4, pc}

90015800 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90015800:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015804:	b08d      	sub	sp, #52	; 0x34
90015806:	4604      	mov	r4, r0
90015808:	460f      	mov	r7, r1
9001580a:	f7ff fd35 	bl	90015278 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001580e:	4a55      	ldr	r2, [pc, #340]	; (90015964 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90015810:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90015812:	8812      	ldrh	r2, [r2, #0]
90015814:	429a      	cmp	r2, r3
90015816:	f240 8082 	bls.w	9001591e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001581a:	4d53      	ldr	r5, [pc, #332]	; (90015968 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
9001581c:	682a      	ldr	r2, [r5, #0]
9001581e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90015822:	4b52      	ldr	r3, [pc, #328]	; (9001596c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90015824:	681b      	ldr	r3, [r3, #0]
90015826:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001582a:	2200      	movs	r2, #0
9001582c:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90015830:	e9cd 2203 	strd	r2, r2, [sp, #12]
90015834:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90015838:	2a03      	cmp	r2, #3
9001583a:	d811      	bhi.n	90015860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001583c:	e8df f002 	tbb	[pc, r2]
90015840:	89727902 	.word	0x89727902
90015844:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015848:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001584c:	1ad2      	subs	r2, r2, r3
9001584e:	2002      	movs	r0, #2
90015850:	f8ad 1010 	strh.w	r1, [sp, #16]
90015854:	f8ad 3012 	strh.w	r3, [sp, #18]
90015858:	fb92 f2f0 	sdiv	r2, r2, r0
9001585c:	f8ad 200e 	strh.w	r2, [sp, #14]
90015860:	f10d 080c 	add.w	r8, sp, #12
90015864:	f10d 0914 	add.w	r9, sp, #20
90015868:	e898 0003 	ldmia.w	r8, {r0, r1}
9001586c:	e889 0003 	stmia.w	r9, {r0, r1}
90015870:	4639      	mov	r1, r7
90015872:	4648      	mov	r0, r9
90015874:	f7fd f964 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90015878:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001587c:	2b00      	cmp	r3, #0
9001587e:	dd4e      	ble.n	9001591e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015880:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015884:	2b00      	cmp	r3, #0
90015886:	dd4a      	ble.n	9001591e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015888:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001588c:	4641      	mov	r1, r8
9001588e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015892:	4620      	mov	r0, r4
90015894:	1a9b      	subs	r3, r3, r2
90015896:	f8bd 200e 	ldrh.w	r2, [sp, #14]
9001589a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001589e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
900158a2:	1a9b      	subs	r3, r3, r2
900158a4:	f8ad 3016 	strh.w	r3, [sp, #22]
900158a8:	6823      	ldr	r3, [r4, #0]
900158aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900158ac:	4798      	blx	r3
900158ae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900158b2:	2b00      	cmp	r3, #0
900158b4:	d053      	beq.n	9001595e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
900158b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
900158b8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
900158ba:	682b      	ldr	r3, [r5, #0]
900158bc:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
900158c0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900158c4:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
900158c8:	785b      	ldrb	r3, [r3, #1]
900158ca:	9209      	str	r2, [sp, #36]	; 0x24
900158cc:	f3c3 0501 	ubfx	r5, r3, #0, #2
900158d0:	f3c3 0381 	ubfx	r3, r3, #2, #2
900158d4:	9607      	str	r6, [sp, #28]
900158d6:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
900158da:	2300      	movs	r3, #0
900158dc:	f88d 5020 	strb.w	r5, [sp, #32]
900158e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
900158e4:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
900158e8:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900158ec:	4b20      	ldr	r3, [pc, #128]	; (90015970 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900158ee:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900158f2:	681b      	ldr	r3, [r3, #0]
900158f4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900158f8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900158fc:	b10a      	cbz	r2, 90015902 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900158fe:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
90015900:	b904      	cbnz	r4, 90015904 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90015902:	689c      	ldr	r4, [r3, #8]
90015904:	4b1b      	ldr	r3, [pc, #108]	; (90015974 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90015906:	6818      	ldr	r0, [r3, #0]
90015908:	f7ee fe9e 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
9001590c:	ab07      	add	r3, sp, #28
9001590e:	9001      	str	r0, [sp, #4]
90015910:	4620      	mov	r0, r4
90015912:	9300      	str	r3, [sp, #0]
90015914:	464b      	mov	r3, r9
90015916:	e898 0006 	ldmia.w	r8, {r1, r2}
9001591a:	f7ee fe45 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001591e:	b00d      	add	sp, #52	; 0x34
90015920:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015924:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015928:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001592c:	1ad2      	subs	r2, r2, r3
9001592e:	3201      	adds	r2, #1
90015930:	e78d      	b.n	9001584e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90015932:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015936:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001593a:	1ad2      	subs	r2, r2, r3
9001593c:	3201      	adds	r2, #1
9001593e:	2002      	movs	r0, #2
90015940:	f8ad 3010 	strh.w	r3, [sp, #16]
90015944:	f8ad 1012 	strh.w	r1, [sp, #18]
90015948:	fb92 f2f0 	sdiv	r2, r2, r0
9001594c:	f8ad 200c 	strh.w	r2, [sp, #12]
90015950:	e786      	b.n	90015860 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015952:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015956:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001595a:	1ad2      	subs	r2, r2, r3
9001595c:	e7ef      	b.n	9001593e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
9001595e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90015960:	e7aa      	b.n	900158b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90015962:	bf00      	nop
90015964:	24039b28 	.word	0x24039b28
90015968:	24039b24 	.word	0x24039b24
9001596c:	24039b2c 	.word	0x24039b2c
90015970:	24039acc 	.word	0x24039acc
90015974:	24039b30 	.word	0x24039b30

90015978 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90015978:	2101      	movs	r1, #1
9001597a:	2200      	movs	r2, #0
9001597c:	b510      	push	{r4, lr}
9001597e:	4c13      	ldr	r4, [pc, #76]	; (900159cc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90015980:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90015984:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90015988:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001598c:	6004      	str	r4, [r0, #0]
9001598e:	4c10      	ldr	r4, [pc, #64]	; (900159d0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90015990:	8082      	strh	r2, [r0, #4]
90015992:	80c2      	strh	r2, [r0, #6]
90015994:	8102      	strh	r2, [r0, #8]
90015996:	8142      	strh	r2, [r0, #10]
90015998:	8182      	strh	r2, [r0, #12]
9001599a:	81c2      	strh	r2, [r0, #14]
9001599c:	8202      	strh	r2, [r0, #16]
9001599e:	8242      	strh	r2, [r0, #18]
900159a0:	61c2      	str	r2, [r0, #28]
900159a2:	8402      	strh	r2, [r0, #32]
900159a4:	8442      	strh	r2, [r0, #34]	; 0x22
900159a6:	6282      	str	r2, [r0, #40]	; 0x28
900159a8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900159ac:	85c1      	strh	r1, [r0, #46]	; 0x2e
900159ae:	8601      	strh	r1, [r0, #48]	; 0x30
900159b0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900159b4:	6344      	str	r4, [r0, #52]	; 0x34
900159b6:	8701      	strh	r1, [r0, #56]	; 0x38
900159b8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
900159bc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
900159c0:	e9c0 2205 	strd	r2, r2, [r0, #20]
900159c4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
900159c8:	bd10      	pop	{r4, pc}
900159ca:	bf00      	nop
900159cc:	9002da40 	.word	0x9002da40
900159d0:	9002bfac 	.word	0x9002bfac

900159d4 <_ZN8touchgfx7OutlineD1Ev>:
900159d4:	4770      	bx	lr

900159d6 <_ZN8touchgfx7OutlineD0Ev>:
900159d6:	b510      	push	{r4, lr}
900159d8:	4604      	mov	r4, r0
900159da:	2130      	movs	r1, #48	; 0x30
900159dc:	f013 fcc2 	bl	90029364 <_ZdlPvj>
900159e0:	4620      	mov	r0, r4
900159e2:	bd10      	pop	{r4, pc}

900159e4 <_ZN8touchgfx7Outline5resetEv>:
900159e4:	b510      	push	{r4, lr}
900159e6:	4604      	mov	r4, r0
900159e8:	f000 fe86 	bl	900166f8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900159ec:	60e0      	str	r0, [r4, #12]
900159ee:	f000 fe89 	bl	90016704 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900159f2:	68e3      	ldr	r3, [r4, #12]
900159f4:	08c0      	lsrs	r0, r0, #3
900159f6:	2200      	movs	r2, #0
900159f8:	f647 71ff 	movw	r1, #32767	; 0x7fff
900159fc:	6123      	str	r3, [r4, #16]
900159fe:	3801      	subs	r0, #1
90015a00:	60a2      	str	r2, [r4, #8]
90015a02:	6060      	str	r0, [r4, #4]
90015a04:	8019      	strh	r1, [r3, #0]
90015a06:	8059      	strh	r1, [r3, #2]
90015a08:	809a      	strh	r2, [r3, #4]
90015a0a:	80da      	strh	r2, [r3, #6]
90015a0c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90015a0e:	f023 0301 	bic.w	r3, r3, #1
90015a12:	f043 0302 	orr.w	r3, r3, #2
90015a16:	6263      	str	r3, [r4, #36]	; 0x24
90015a18:	bd10      	pop	{r4, pc}
	...

90015a1c <_ZN8touchgfx7OutlineC1Ev>:
90015a1c:	4b0a      	ldr	r3, [pc, #40]	; (90015a48 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90015a1e:	b510      	push	{r4, lr}
90015a20:	6003      	str	r3, [r0, #0]
90015a22:	2300      	movs	r3, #0
90015a24:	4604      	mov	r4, r0
90015a26:	6243      	str	r3, [r0, #36]	; 0x24
90015a28:	e9c0 3301 	strd	r3, r3, [r0, #4]
90015a2c:	e9c0 3303 	strd	r3, r3, [r0, #12]
90015a30:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015a34:	e9c0 3307 	strd	r3, r3, [r0, #28]
90015a38:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90015a3c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90015a40:	f7ff ffd0 	bl	900159e4 <_ZN8touchgfx7Outline5resetEv>
90015a44:	4620      	mov	r0, r4
90015a46:	bd10      	pop	{r4, pc}
90015a48:	9002dab4 	.word	0x9002dab4

90015a4c <_ZN8touchgfx7Outline10renderLineEiiii>:
90015a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015a50:	b093      	sub	sp, #76	; 0x4c
90015a52:	1156      	asrs	r6, r2, #5
90015a54:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90015a56:	9305      	str	r3, [sp, #20]
90015a58:	1153      	asrs	r3, r2, #5
90015a5a:	f004 051f 	and.w	r5, r4, #31
90015a5e:	9303      	str	r3, [sp, #12]
90015a60:	1163      	asrs	r3, r4, #5
90015a62:	9504      	str	r5, [sp, #16]
90015a64:	1165      	asrs	r5, r4, #5
90015a66:	9306      	str	r3, [sp, #24]
90015a68:	f002 031f 	and.w	r3, r2, #31
90015a6c:	42ae      	cmp	r6, r5
90015a6e:	f040 80f4 	bne.w	90015c5a <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90015a72:	9c04      	ldr	r4, [sp, #16]
90015a74:	9a05      	ldr	r2, [sp, #20]
90015a76:	42a3      	cmp	r3, r4
90015a78:	ea4f 1e62 	mov.w	lr, r2, asr #5
90015a7c:	6902      	ldr	r2, [r0, #16]
90015a7e:	d125      	bne.n	90015acc <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90015a80:	f9b2 3000 	ldrsh.w	r3, [r2]
90015a84:	459e      	cmp	lr, r3
90015a86:	d103      	bne.n	90015a90 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90015a88:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015a8c:	429e      	cmp	r6, r3
90015a8e:	d035      	beq.n	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015a90:	88d1      	ldrh	r1, [r2, #6]
90015a92:	8893      	ldrh	r3, [r2, #4]
90015a94:	430b      	orrs	r3, r1
90015a96:	d010      	beq.n	90015aba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015a98:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015a9c:	2b00      	cmp	r3, #0
90015a9e:	db0c      	blt.n	90015aba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015aa0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90015aa2:	428b      	cmp	r3, r1
90015aa4:	da09      	bge.n	90015aba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015aa6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015aaa:	428b      	cmp	r3, r1
90015aac:	f103 0301 	add.w	r3, r3, #1
90015ab0:	bf38      	it	cc
90015ab2:	3208      	addcc	r2, #8
90015ab4:	6083      	str	r3, [r0, #8]
90015ab6:	bf38      	it	cc
90015ab8:	6102      	strcc	r2, [r0, #16]
90015aba:	6903      	ldr	r3, [r0, #16]
90015abc:	9a03      	ldr	r2, [sp, #12]
90015abe:	f8a3 e000 	strh.w	lr, [r3]
90015ac2:	805a      	strh	r2, [r3, #2]
90015ac4:	2200      	movs	r2, #0
90015ac6:	809a      	strh	r2, [r3, #4]
90015ac8:	80da      	strh	r2, [r3, #6]
90015aca:	e017      	b.n	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015acc:	9c05      	ldr	r4, [sp, #20]
90015ace:	114e      	asrs	r6, r1, #5
90015ad0:	f001 0c1f 	and.w	ip, r1, #31
90015ad4:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90015ad8:	f004 041f 	and.w	r4, r4, #31
90015adc:	4576      	cmp	r6, lr
90015ade:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90015ae2:	9402      	str	r4, [sp, #8]
90015ae4:	9c04      	ldr	r4, [sp, #16]
90015ae6:	eba4 0403 	sub.w	r4, r4, r3
90015aea:	d10a      	bne.n	90015b02 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90015aec:	9b02      	ldr	r3, [sp, #8]
90015aee:	44a0      	add	r8, r4
90015af0:	449c      	add	ip, r3
90015af2:	f8a2 8004 	strh.w	r8, [r2, #4]
90015af6:	fb04 a40c 	mla	r4, r4, ip, sl
90015afa:	80d4      	strh	r4, [r2, #6]
90015afc:	b013      	add	sp, #76	; 0x4c
90015afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015b02:	9d05      	ldr	r5, [sp, #20]
90015b04:	1a69      	subs	r1, r5, r1
90015b06:	bf51      	iteee	pl
90015b08:	f1cc 0520 	rsbpl	r5, ip, #32
90015b0c:	fb04 f40c 	mulmi.w	r4, r4, ip
90015b10:	4249      	negmi	r1, r1
90015b12:	2500      	movmi	r5, #0
90015b14:	bf5d      	ittte	pl
90015b16:	436c      	mulpl	r4, r5
90015b18:	2520      	movpl	r5, #32
90015b1a:	f04f 0901 	movpl.w	r9, #1
90015b1e:	f04f 39ff 	movmi.w	r9, #4294967295
90015b22:	9501      	str	r5, [sp, #4]
90015b24:	9f01      	ldr	r7, [sp, #4]
90015b26:	444e      	add	r6, r9
90015b28:	fb94 f5f1 	sdiv	r5, r4, r1
90015b2c:	fb01 4415 	mls	r4, r1, r5, r4
90015b30:	44bc      	add	ip, r7
90015b32:	2c00      	cmp	r4, #0
90015b34:	bfbc      	itt	lt
90015b36:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015b3a:	1864      	addlt	r4, r4, r1
90015b3c:	44a8      	add	r8, r5
90015b3e:	fb05 ac0c 	mla	ip, r5, ip, sl
90015b42:	f8a2 8004 	strh.w	r8, [r2, #4]
90015b46:	f8a2 c006 	strh.w	ip, [r2, #6]
90015b4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015b4e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015b52:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90015b56:	ea58 0202 	orrs.w	r2, r8, r2
90015b5a:	d011      	beq.n	90015b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015b5c:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015b60:	f1b8 0f00 	cmp.w	r8, #0
90015b64:	db0c      	blt.n	90015b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015b66:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90015b68:	4590      	cmp	r8, r2
90015b6a:	da09      	bge.n	90015b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015b6c:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90015b70:	4590      	cmp	r8, r2
90015b72:	bf3c      	itt	cc
90015b74:	f10c 0208 	addcc.w	r2, ip, #8
90015b78:	6102      	strcc	r2, [r0, #16]
90015b7a:	f108 0201 	add.w	r2, r8, #1
90015b7e:	6082      	str	r2, [r0, #8]
90015b80:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015b84:	2700      	movs	r7, #0
90015b86:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90015b8a:	45b6      	cmp	lr, r6
90015b8c:	f8ac 6000 	strh.w	r6, [ip]
90015b90:	442b      	add	r3, r5
90015b92:	f8ac 2002 	strh.w	r2, [ip, #2]
90015b96:	f8ac 7004 	strh.w	r7, [ip, #4]
90015b9a:	f8ac 7006 	strh.w	r7, [ip, #6]
90015b9e:	d04b      	beq.n	90015c38 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90015ba0:	9f04      	ldr	r7, [sp, #16]
90015ba2:	1a64      	subs	r4, r4, r1
90015ba4:	f04f 0a00 	mov.w	sl, #0
90015ba8:	1aff      	subs	r7, r7, r3
90015baa:	443d      	add	r5, r7
90015bac:	016d      	lsls	r5, r5, #5
90015bae:	fb95 f8f1 	sdiv	r8, r5, r1
90015bb2:	fb01 5518 	mls	r5, r1, r8, r5
90015bb6:	2d00      	cmp	r5, #0
90015bb8:	bfbc      	itt	lt
90015bba:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015bbe:	186d      	addlt	r5, r5, r1
90015bc0:	f108 0701 	add.w	r7, r8, #1
90015bc4:	9703      	str	r7, [sp, #12]
90015bc6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015bca:	1964      	adds	r4, r4, r5
90015bcc:	444e      	add	r6, r9
90015bce:	bf54      	ite	pl
90015bd0:	9f03      	ldrpl	r7, [sp, #12]
90015bd2:	4647      	movmi	r7, r8
90015bd4:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015bd8:	bf58      	it	pl
90015bda:	1a64      	subpl	r4, r4, r1
90015bdc:	443b      	add	r3, r7
90015bde:	44bb      	add	fp, r7
90015be0:	f8ac b004 	strh.w	fp, [ip, #4]
90015be4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015be8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015bec:	f8ac b006 	strh.w	fp, [ip, #6]
90015bf0:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015bf4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015bf8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015bfc:	ea5b 0707 	orrs.w	r7, fp, r7
90015c00:	d011      	beq.n	90015c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c02:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90015c06:	f1bb 0f00 	cmp.w	fp, #0
90015c0a:	db0c      	blt.n	90015c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c0c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90015c0e:	45bb      	cmp	fp, r7
90015c10:	da09      	bge.n	90015c26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015c12:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015c16:	45bb      	cmp	fp, r7
90015c18:	bf3c      	itt	cc
90015c1a:	f10c 0708 	addcc.w	r7, ip, #8
90015c1e:	6107      	strcc	r7, [r0, #16]
90015c20:	f10b 0701 	add.w	r7, fp, #1
90015c24:	6087      	str	r7, [r0, #8]
90015c26:	6907      	ldr	r7, [r0, #16]
90015c28:	45b6      	cmp	lr, r6
90015c2a:	803e      	strh	r6, [r7, #0]
90015c2c:	807a      	strh	r2, [r7, #2]
90015c2e:	f8a7 a004 	strh.w	sl, [r7, #4]
90015c32:	f8a7 a006 	strh.w	sl, [r7, #6]
90015c36:	d1c6      	bne.n	90015bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90015c38:	9a04      	ldr	r2, [sp, #16]
90015c3a:	1ad3      	subs	r3, r2, r3
90015c3c:	6902      	ldr	r2, [r0, #16]
90015c3e:	8891      	ldrh	r1, [r2, #4]
90015c40:	88d6      	ldrh	r6, [r2, #6]
90015c42:	4419      	add	r1, r3
90015c44:	8091      	strh	r1, [r2, #4]
90015c46:	9902      	ldr	r1, [sp, #8]
90015c48:	f101 0c20 	add.w	ip, r1, #32
90015c4c:	9901      	ldr	r1, [sp, #4]
90015c4e:	ebac 0c01 	sub.w	ip, ip, r1
90015c52:	fb03 630c 	mla	r3, r3, ip, r6
90015c56:	80d3      	strh	r3, [r2, #6]
90015c58:	e750      	b.n	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015c5a:	9d05      	ldr	r5, [sp, #20]
90015c5c:	1aa2      	subs	r2, r4, r2
90015c5e:	eba5 0501 	sub.w	r5, r5, r1
90015c62:	9202      	str	r2, [sp, #8]
90015c64:	9508      	str	r5, [sp, #32]
90015c66:	f140 8128 	bpl.w	90015eba <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90015c6a:	9a03      	ldr	r2, [sp, #12]
90015c6c:	2a00      	cmp	r2, #0
90015c6e:	f6ff af45 	blt.w	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015c72:	9a02      	ldr	r2, [sp, #8]
90015c74:	f04f 34ff 	mov.w	r4, #4294967295
90015c78:	4252      	negs	r2, r2
90015c7a:	940b      	str	r4, [sp, #44]	; 0x2c
90015c7c:	2400      	movs	r4, #0
90015c7e:	9202      	str	r2, [sp, #8]
90015c80:	9a06      	ldr	r2, [sp, #24]
90015c82:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90015c86:	9206      	str	r2, [sp, #24]
90015c88:	462a      	mov	r2, r5
90015c8a:	435a      	muls	r2, r3
90015c8c:	9401      	str	r4, [sp, #4]
90015c8e:	9c02      	ldr	r4, [sp, #8]
90015c90:	9d02      	ldr	r5, [sp, #8]
90015c92:	fb92 f4f4 	sdiv	r4, r2, r4
90015c96:	fb05 2214 	mls	r2, r5, r4, r2
90015c9a:	2a00      	cmp	r2, #0
90015c9c:	9207      	str	r2, [sp, #28]
90015c9e:	bfbc      	itt	lt
90015ca0:	1952      	addlt	r2, r2, r5
90015ca2:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015ca6:	6905      	ldr	r5, [r0, #16]
90015ca8:	bfb8      	it	lt
90015caa:	9207      	strlt	r2, [sp, #28]
90015cac:	eb04 0901 	add.w	r9, r4, r1
90015cb0:	9a01      	ldr	r2, [sp, #4]
90015cb2:	ea4f 1669 	mov.w	r6, r9, asr #5
90015cb6:	429a      	cmp	r2, r3
90015cb8:	f040 8111 	bne.w	90015ede <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90015cbc:	f9b5 3000 	ldrsh.w	r3, [r5]
90015cc0:	429e      	cmp	r6, r3
90015cc2:	d104      	bne.n	90015cce <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90015cc4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015cc8:	9a03      	ldr	r2, [sp, #12]
90015cca:	429a      	cmp	r2, r3
90015ccc:	d01b      	beq.n	90015d06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015cce:	88ea      	ldrh	r2, [r5, #6]
90015cd0:	88ab      	ldrh	r3, [r5, #4]
90015cd2:	4313      	orrs	r3, r2
90015cd4:	d010      	beq.n	90015cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015cd6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015cda:	2a00      	cmp	r2, #0
90015cdc:	db0c      	blt.n	90015cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015cde:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015ce0:	429a      	cmp	r2, r3
90015ce2:	da09      	bge.n	90015cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015ce4:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90015ce8:	429a      	cmp	r2, r3
90015cea:	f102 0201 	add.w	r2, r2, #1
90015cee:	bf38      	it	cc
90015cf0:	3508      	addcc	r5, #8
90015cf2:	6082      	str	r2, [r0, #8]
90015cf4:	bf38      	it	cc
90015cf6:	6105      	strcc	r5, [r0, #16]
90015cf8:	6903      	ldr	r3, [r0, #16]
90015cfa:	9a03      	ldr	r2, [sp, #12]
90015cfc:	801e      	strh	r6, [r3, #0]
90015cfe:	805a      	strh	r2, [r3, #2]
90015d00:	2200      	movs	r2, #0
90015d02:	809a      	strh	r2, [r3, #4]
90015d04:	80da      	strh	r2, [r3, #6]
90015d06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90015d08:	9a03      	ldr	r2, [sp, #12]
90015d0a:	6901      	ldr	r1, [r0, #16]
90015d0c:	441a      	add	r2, r3
90015d0e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015d12:	42b3      	cmp	r3, r6
90015d14:	d103      	bne.n	90015d1e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90015d16:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90015d1a:	429a      	cmp	r2, r3
90015d1c:	d01a      	beq.n	90015d54 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90015d1e:	88cc      	ldrh	r4, [r1, #6]
90015d20:	888b      	ldrh	r3, [r1, #4]
90015d22:	4323      	orrs	r3, r4
90015d24:	d010      	beq.n	90015d48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015d26:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015d2a:	2c00      	cmp	r4, #0
90015d2c:	db0c      	blt.n	90015d48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015d2e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015d30:	429c      	cmp	r4, r3
90015d32:	da09      	bge.n	90015d48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015d34:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015d38:	429c      	cmp	r4, r3
90015d3a:	f104 0401 	add.w	r4, r4, #1
90015d3e:	bf38      	it	cc
90015d40:	3108      	addcc	r1, #8
90015d42:	6084      	str	r4, [r0, #8]
90015d44:	bf38      	it	cc
90015d46:	6101      	strcc	r1, [r0, #16]
90015d48:	6903      	ldr	r3, [r0, #16]
90015d4a:	2100      	movs	r1, #0
90015d4c:	801e      	strh	r6, [r3, #0]
90015d4e:	805a      	strh	r2, [r3, #2]
90015d50:	8099      	strh	r1, [r3, #4]
90015d52:	80d9      	strh	r1, [r3, #6]
90015d54:	9b06      	ldr	r3, [sp, #24]
90015d56:	4293      	cmp	r3, r2
90015d58:	f000 8082 	beq.w	90015e60 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90015d5c:	9b08      	ldr	r3, [sp, #32]
90015d5e:	9902      	ldr	r1, [sp, #8]
90015d60:	015b      	lsls	r3, r3, #5
90015d62:	9c02      	ldr	r4, [sp, #8]
90015d64:	fb93 f1f1 	sdiv	r1, r3, r1
90015d68:	fb04 3311 	mls	r3, r4, r1, r3
90015d6c:	9103      	str	r1, [sp, #12]
90015d6e:	2b00      	cmp	r3, #0
90015d70:	9308      	str	r3, [sp, #32]
90015d72:	da04      	bge.n	90015d7e <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90015d74:	1e4b      	subs	r3, r1, #1
90015d76:	9303      	str	r3, [sp, #12]
90015d78:	9b08      	ldr	r3, [sp, #32]
90015d7a:	4423      	add	r3, r4
90015d7c:	9308      	str	r3, [sp, #32]
90015d7e:	9b07      	ldr	r3, [sp, #28]
90015d80:	464f      	mov	r7, r9
90015d82:	9902      	ldr	r1, [sp, #8]
90015d84:	2600      	movs	r6, #0
90015d86:	1a5b      	subs	r3, r3, r1
90015d88:	9307      	str	r3, [sp, #28]
90015d8a:	9b01      	ldr	r3, [sp, #4]
90015d8c:	f1c3 0320 	rsb	r3, r3, #32
90015d90:	930e      	str	r3, [sp, #56]	; 0x38
90015d92:	990e      	ldr	r1, [sp, #56]	; 0x38
90015d94:	9b01      	ldr	r3, [sp, #4]
90015d96:	1a5b      	subs	r3, r3, r1
90015d98:	930a      	str	r3, [sp, #40]	; 0x28
90015d9a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90015d9e:	185b      	adds	r3, r3, r1
90015da0:	bf58      	it	pl
90015da2:	9902      	ldrpl	r1, [sp, #8]
90015da4:	9307      	str	r3, [sp, #28]
90015da6:	bf57      	itett	pl
90015da8:	1a5b      	subpl	r3, r3, r1
90015daa:	9903      	ldrmi	r1, [sp, #12]
90015dac:	9307      	strpl	r3, [sp, #28]
90015dae:	9b03      	ldrpl	r3, [sp, #12]
90015db0:	bf58      	it	pl
90015db2:	1c59      	addpl	r1, r3, #1
90015db4:	2a00      	cmp	r2, #0
90015db6:	4489      	add	r9, r1
90015db8:	ea4f 1a69 	mov.w	sl, r9, asr #5
90015dbc:	db2e      	blt.n	90015e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015dbe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015dc0:	4293      	cmp	r3, r2
90015dc2:	dd2b      	ble.n	90015e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015dc4:	9c01      	ldr	r4, [sp, #4]
90015dc6:	6905      	ldr	r5, [r0, #16]
90015dc8:	46a0      	mov	r8, r4
90015dca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90015dcc:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90015dd0:	45a0      	cmp	r8, r4
90015dd2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90015dd6:	f040 814c 	bne.w	90016072 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90015dda:	f9b5 1000 	ldrsh.w	r1, [r5]
90015dde:	4551      	cmp	r1, sl
90015de0:	d103      	bne.n	90015dea <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90015de2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015de6:	4291      	cmp	r1, r2
90015de8:	d018      	beq.n	90015e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015dea:	ea5c 010e 	orrs.w	r1, ip, lr
90015dee:	d00f      	beq.n	90015e10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015df0:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015df4:	2900      	cmp	r1, #0
90015df6:	db0b      	blt.n	90015e10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015df8:	428b      	cmp	r3, r1
90015dfa:	dd09      	ble.n	90015e10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015dfc:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90015e00:	4299      	cmp	r1, r3
90015e02:	f101 0101 	add.w	r1, r1, #1
90015e06:	bf38      	it	cc
90015e08:	3508      	addcc	r5, #8
90015e0a:	6081      	str	r1, [r0, #8]
90015e0c:	bf38      	it	cc
90015e0e:	6105      	strcc	r5, [r0, #16]
90015e10:	6903      	ldr	r3, [r0, #16]
90015e12:	f8a3 a000 	strh.w	sl, [r3]
90015e16:	805a      	strh	r2, [r3, #2]
90015e18:	809e      	strh	r6, [r3, #4]
90015e1a:	80de      	strh	r6, [r3, #6]
90015e1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90015e1e:	6901      	ldr	r1, [r0, #16]
90015e20:	441a      	add	r2, r3
90015e22:	88cc      	ldrh	r4, [r1, #6]
90015e24:	888b      	ldrh	r3, [r1, #4]
90015e26:	4323      	orrs	r3, r4
90015e28:	d010      	beq.n	90015e4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015e2a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015e2e:	2c00      	cmp	r4, #0
90015e30:	db0c      	blt.n	90015e4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015e32:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015e34:	429c      	cmp	r4, r3
90015e36:	da09      	bge.n	90015e4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015e38:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015e3c:	429c      	cmp	r4, r3
90015e3e:	f104 0401 	add.w	r4, r4, #1
90015e42:	bf38      	it	cc
90015e44:	3108      	addcc	r1, #8
90015e46:	6084      	str	r4, [r0, #8]
90015e48:	bf38      	it	cc
90015e4a:	6101      	strcc	r1, [r0, #16]
90015e4c:	6903      	ldr	r3, [r0, #16]
90015e4e:	464f      	mov	r7, r9
90015e50:	f8a3 a000 	strh.w	sl, [r3]
90015e54:	805a      	strh	r2, [r3, #2]
90015e56:	809e      	strh	r6, [r3, #4]
90015e58:	80de      	strh	r6, [r3, #6]
90015e5a:	9b06      	ldr	r3, [sp, #24]
90015e5c:	4293      	cmp	r3, r2
90015e5e:	d19c      	bne.n	90015d9a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90015e60:	9b01      	ldr	r3, [sp, #4]
90015e62:	6907      	ldr	r7, [r0, #16]
90015e64:	f1c3 0620 	rsb	r6, r3, #32
90015e68:	9b05      	ldr	r3, [sp, #20]
90015e6a:	ea4f 1e63 	mov.w	lr, r3, asr #5
90015e6e:	9b04      	ldr	r3, [sp, #16]
90015e70:	429e      	cmp	r6, r3
90015e72:	f040 81c7 	bne.w	90016204 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90015e76:	f9b7 3000 	ldrsh.w	r3, [r7]
90015e7a:	459e      	cmp	lr, r3
90015e7c:	d104      	bne.n	90015e88 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90015e7e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015e82:	429a      	cmp	r2, r3
90015e84:	f43f ae3a 	beq.w	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015e88:	88f9      	ldrh	r1, [r7, #6]
90015e8a:	88bb      	ldrh	r3, [r7, #4]
90015e8c:	430b      	orrs	r3, r1
90015e8e:	d010      	beq.n	90015eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015e90:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015e94:	2b00      	cmp	r3, #0
90015e96:	db0c      	blt.n	90015eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015e98:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90015e9a:	428b      	cmp	r3, r1
90015e9c:	da09      	bge.n	90015eb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015e9e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015ea2:	428b      	cmp	r3, r1
90015ea4:	f103 0301 	add.w	r3, r3, #1
90015ea8:	bf38      	it	cc
90015eaa:	3708      	addcc	r7, #8
90015eac:	6083      	str	r3, [r0, #8]
90015eae:	bf38      	it	cc
90015eb0:	6107      	strcc	r7, [r0, #16]
90015eb2:	6903      	ldr	r3, [r0, #16]
90015eb4:	f8a3 e000 	strh.w	lr, [r3]
90015eb8:	e603      	b.n	90015ac2 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90015eba:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90015ebc:	9c03      	ldr	r4, [sp, #12]
90015ebe:	42a2      	cmp	r2, r4
90015ec0:	f6ff ae1c 	blt.w	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015ec4:	9c06      	ldr	r4, [sp, #24]
90015ec6:	42a2      	cmp	r2, r4
90015ec8:	9c08      	ldr	r4, [sp, #32]
90015eca:	bfbc      	itt	lt
90015ecc:	3201      	addlt	r2, #1
90015ece:	9206      	strlt	r2, [sp, #24]
90015ed0:	f1c3 0220 	rsb	r2, r3, #32
90015ed4:	4362      	muls	r2, r4
90015ed6:	2401      	movs	r4, #1
90015ed8:	940b      	str	r4, [sp, #44]	; 0x2c
90015eda:	2420      	movs	r4, #32
90015edc:	e6d6      	b.n	90015c8c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90015ede:	ea4f 1861 	mov.w	r8, r1, asr #5
90015ee2:	f009 021f 	and.w	r2, r9, #31
90015ee6:	f001 011f 	and.w	r1, r1, #31
90015eea:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90015eee:	920c      	str	r2, [sp, #48]	; 0x30
90015ef0:	45b0      	cmp	r8, r6
90015ef2:	9a01      	ldr	r2, [sp, #4]
90015ef4:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90015ef8:	eba2 0203 	sub.w	r2, r2, r3
90015efc:	d108      	bne.n	90015f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90015efe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90015f00:	4496      	add	lr, r2
90015f02:	4419      	add	r1, r3
90015f04:	f8a5 e004 	strh.w	lr, [r5, #4]
90015f08:	fb02 a101 	mla	r1, r2, r1, sl
90015f0c:	80e9      	strh	r1, [r5, #6]
90015f0e:	e6fa      	b.n	90015d06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015f10:	2c00      	cmp	r4, #0
90015f12:	f2c0 80a7 	blt.w	90016064 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90015f16:	2701      	movs	r7, #1
90015f18:	f1c1 0c20 	rsb	ip, r1, #32
90015f1c:	970a      	str	r7, [sp, #40]	; 0x28
90015f1e:	2720      	movs	r7, #32
90015f20:	fb02 f20c 	mul.w	r2, r2, ip
90015f24:	9709      	str	r7, [sp, #36]	; 0x24
90015f26:	9f09      	ldr	r7, [sp, #36]	; 0x24
90015f28:	fb92 fcf4 	sdiv	ip, r2, r4
90015f2c:	fb04 221c 	mls	r2, r4, ip, r2
90015f30:	4439      	add	r1, r7
90015f32:	2a00      	cmp	r2, #0
90015f34:	bfbc      	itt	lt
90015f36:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90015f3a:	1912      	addlt	r2, r2, r4
90015f3c:	fb0c a101 	mla	r1, ip, r1, sl
90015f40:	44e6      	add	lr, ip
90015f42:	80e9      	strh	r1, [r5, #6]
90015f44:	990a      	ldr	r1, [sp, #40]	; 0x28
90015f46:	f8a5 e004 	strh.w	lr, [r5, #4]
90015f4a:	eb08 0501 	add.w	r5, r8, r1
90015f4e:	6901      	ldr	r1, [r0, #16]
90015f50:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90015f54:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90015f58:	ea58 070e 	orrs.w	r7, r8, lr
90015f5c:	d010      	beq.n	90015f80 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015f5e:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90015f62:	f1be 0f00 	cmp.w	lr, #0
90015f66:	db0b      	blt.n	90015f80 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015f68:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90015f6a:	45be      	cmp	lr, r7
90015f6c:	da08      	bge.n	90015f80 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90015f6e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90015f72:	45be      	cmp	lr, r7
90015f74:	bf3c      	itt	cc
90015f76:	3108      	addcc	r1, #8
90015f78:	6101      	strcc	r1, [r0, #16]
90015f7a:	f10e 0101 	add.w	r1, lr, #1
90015f7e:	6081      	str	r1, [r0, #8]
90015f80:	6901      	ldr	r1, [r0, #16]
90015f82:	f04f 0e00 	mov.w	lr, #0
90015f86:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90015f8a:	42ae      	cmp	r6, r5
90015f8c:	800d      	strh	r5, [r1, #0]
90015f8e:	4463      	add	r3, ip
90015f90:	f8a1 8002 	strh.w	r8, [r1, #2]
90015f94:	f8a1 e004 	strh.w	lr, [r1, #4]
90015f98:	f8a1 e006 	strh.w	lr, [r1, #6]
90015f9c:	d053      	beq.n	90016046 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90015f9e:	9901      	ldr	r1, [sp, #4]
90015fa0:	1b12      	subs	r2, r2, r4
90015fa2:	1ac9      	subs	r1, r1, r3
90015fa4:	4461      	add	r1, ip
90015fa6:	0149      	lsls	r1, r1, #5
90015fa8:	fb91 fef4 	sdiv	lr, r1, r4
90015fac:	fb04 111e 	mls	r1, r4, lr, r1
90015fb0:	2900      	cmp	r1, #0
90015fb2:	bfbc      	itt	lt
90015fb4:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90015fb8:	1909      	addlt	r1, r1, r4
90015fba:	f10e 0701 	add.w	r7, lr, #1
90015fbe:	970d      	str	r7, [sp, #52]	; 0x34
90015fc0:	f8d0 a010 	ldr.w	sl, [r0, #16]
90015fc4:	1852      	adds	r2, r2, r1
90015fc6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90015fc8:	bf54      	ite	pl
90015fca:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90015fce:	46f4      	movmi	ip, lr
90015fd0:	f8ba b004 	ldrh.w	fp, [sl, #4]
90015fd4:	bf58      	it	pl
90015fd6:	1b12      	subpl	r2, r2, r4
90015fd8:	4463      	add	r3, ip
90015fda:	443d      	add	r5, r7
90015fdc:	44e3      	add	fp, ip
90015fde:	f8aa b004 	strh.w	fp, [sl, #4]
90015fe2:	f8ba b006 	ldrh.w	fp, [sl, #6]
90015fe6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90015fea:	f8aa b006 	strh.w	fp, [sl, #6]
90015fee:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015ff2:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015ff6:	f8bc a004 	ldrh.w	sl, [ip, #4]
90015ffa:	ea5b 070a 	orrs.w	r7, fp, sl
90015ffe:	d014      	beq.n	9001602a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016000:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016004:	f1ba 0f00 	cmp.w	sl, #0
90016008:	db0f      	blt.n	9001602a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001600a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001600c:	45ba      	cmp	sl, r7
9001600e:	da0c      	bge.n	9001602a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016010:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90016014:	45ba      	cmp	sl, r7
90016016:	f10a 0a01 	add.w	sl, sl, #1
9001601a:	bf38      	it	cc
9001601c:	f10c 0c08 	addcc.w	ip, ip, #8
90016020:	f8c0 a008 	str.w	sl, [r0, #8]
90016024:	bf38      	it	cc
90016026:	f8c0 c010 	strcc.w	ip, [r0, #16]
9001602a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001602e:	f04f 0700 	mov.w	r7, #0
90016032:	42ae      	cmp	r6, r5
90016034:	f8ac 5000 	strh.w	r5, [ip]
90016038:	f8ac 8002 	strh.w	r8, [ip, #2]
9001603c:	f8ac 7004 	strh.w	r7, [ip, #4]
90016040:	f8ac 7006 	strh.w	r7, [ip, #6]
90016044:	d1bc      	bne.n	90015fc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90016046:	6904      	ldr	r4, [r0, #16]
90016048:	9a01      	ldr	r2, [sp, #4]
9001604a:	990c      	ldr	r1, [sp, #48]	; 0x30
9001604c:	1ad3      	subs	r3, r2, r3
9001604e:	88a2      	ldrh	r2, [r4, #4]
90016050:	3120      	adds	r1, #32
90016052:	441a      	add	r2, r3
90016054:	80a2      	strh	r2, [r4, #4]
90016056:	9a09      	ldr	r2, [sp, #36]	; 0x24
90016058:	1a89      	subs	r1, r1, r2
9001605a:	88e2      	ldrh	r2, [r4, #6]
9001605c:	fb03 2301 	mla	r3, r3, r1, r2
90016060:	80e3      	strh	r3, [r4, #6]
90016062:	e650      	b.n	90015d06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016064:	f04f 37ff 	mov.w	r7, #4294967295
90016068:	434a      	muls	r2, r1
9001606a:	4264      	negs	r4, r4
9001606c:	970a      	str	r7, [sp, #40]	; 0x28
9001606e:	2700      	movs	r7, #0
90016070:	e758      	b.n	90015f24 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90016072:	ea4f 1867 	mov.w	r8, r7, asr #5
90016076:	f009 031f 	and.w	r3, r9, #31
9001607a:	f007 071f 	and.w	r7, r7, #31
9001607e:	fa1f fc8c 	uxth.w	ip, ip
90016082:	45d0      	cmp	r8, sl
90016084:	930f      	str	r3, [sp, #60]	; 0x3c
90016086:	fa1f fe8e 	uxth.w	lr, lr
9001608a:	d10a      	bne.n	900160a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
9001608c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001608e:	449c      	add	ip, r3
90016090:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016092:	441f      	add	r7, r3
90016094:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90016096:	f8a5 c004 	strh.w	ip, [r5, #4]
9001609a:	fb03 e707 	mla	r7, r3, r7, lr
9001609e:	80ef      	strh	r7, [r5, #6]
900160a0:	e6bc      	b.n	90015e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900160a2:	2900      	cmp	r1, #0
900160a4:	f2c0 80a6 	blt.w	900161f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900160a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900160aa:	f1c7 0320 	rsb	r3, r7, #32
900160ae:	4363      	muls	r3, r4
900160b0:	2401      	movs	r4, #1
900160b2:	940d      	str	r4, [sp, #52]	; 0x34
900160b4:	2420      	movs	r4, #32
900160b6:	940c      	str	r4, [sp, #48]	; 0x30
900160b8:	fb93 f4f1 	sdiv	r4, r3, r1
900160bc:	fb01 3b14 	mls	fp, r1, r4, r3
900160c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900160c2:	f1bb 0f00 	cmp.w	fp, #0
900160c6:	441f      	add	r7, r3
900160c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900160ca:	bfbc      	itt	lt
900160cc:	f104 34ff 	addlt.w	r4, r4, #4294967295
900160d0:	448b      	addlt	fp, r1
900160d2:	fb04 e707 	mla	r7, r4, r7, lr
900160d6:	44a4      	add	ip, r4
900160d8:	80ef      	strh	r7, [r5, #6]
900160da:	f8a5 c004 	strh.w	ip, [r5, #4]
900160de:	eb08 0503 	add.w	r5, r8, r3
900160e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900160e6:	f8bc e006 	ldrh.w	lr, [ip, #6]
900160ea:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900160ee:	ea5e 0307 	orrs.w	r3, lr, r7
900160f2:	d011      	beq.n	90016118 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900160f4:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900160f8:	f1be 0f00 	cmp.w	lr, #0
900160fc:	db0c      	blt.n	90016118 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900160fe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016100:	45be      	cmp	lr, r7
90016102:	da09      	bge.n	90016118 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016104:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016108:	45be      	cmp	lr, r7
9001610a:	bf3c      	itt	cc
9001610c:	f10c 0708 	addcc.w	r7, ip, #8
90016110:	6107      	strcc	r7, [r0, #16]
90016112:	f10e 0701 	add.w	r7, lr, #1
90016116:	6087      	str	r7, [r0, #8]
90016118:	6907      	ldr	r7, [r0, #16]
9001611a:	b213      	sxth	r3, r2
9001611c:	4555      	cmp	r5, sl
9001611e:	9310      	str	r3, [sp, #64]	; 0x40
90016120:	807b      	strh	r3, [r7, #2]
90016122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90016124:	803d      	strh	r5, [r7, #0]
90016126:	80be      	strh	r6, [r7, #4]
90016128:	eb04 0c03 	add.w	ip, r4, r3
9001612c:	80fe      	strh	r6, [r7, #6]
9001612e:	d050      	beq.n	900161d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90016130:	9b01      	ldr	r3, [sp, #4]
90016132:	eba3 070c 	sub.w	r7, r3, ip
90016136:	ebab 0301 	sub.w	r3, fp, r1
9001613a:	443c      	add	r4, r7
9001613c:	9309      	str	r3, [sp, #36]	; 0x24
9001613e:	0164      	lsls	r4, r4, #5
90016140:	fb94 f8f1 	sdiv	r8, r4, r1
90016144:	fb01 4418 	mls	r4, r1, r8, r4
90016148:	2c00      	cmp	r4, #0
9001614a:	bfbc      	itt	lt
9001614c:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016150:	1864      	addlt	r4, r4, r1
90016152:	f108 0701 	add.w	r7, r8, #1
90016156:	9711      	str	r7, [sp, #68]	; 0x44
90016158:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001615a:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001615e:	191b      	adds	r3, r3, r4
90016160:	f8be b004 	ldrh.w	fp, [lr, #4]
90016164:	bf54      	ite	pl
90016166:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90016168:	4647      	movmi	r7, r8
9001616a:	9309      	str	r3, [sp, #36]	; 0x24
9001616c:	bf58      	it	pl
9001616e:	1a5b      	subpl	r3, r3, r1
90016170:	44bb      	add	fp, r7
90016172:	44bc      	add	ip, r7
90016174:	bf58      	it	pl
90016176:	9309      	strpl	r3, [sp, #36]	; 0x24
90016178:	f8ae b004 	strh.w	fp, [lr, #4]
9001617c:	f8be b006 	ldrh.w	fp, [lr, #6]
90016180:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016184:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90016186:	f8ae b006 	strh.w	fp, [lr, #6]
9001618a:	443d      	add	r5, r7
9001618c:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016190:	f8be b006 	ldrh.w	fp, [lr, #6]
90016194:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016198:	ea5b 0307 	orrs.w	r3, fp, r7
9001619c:	d011      	beq.n	900161c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001619e:	f9be b002 	ldrsh.w	fp, [lr, #2]
900161a2:	f1bb 0f00 	cmp.w	fp, #0
900161a6:	db0c      	blt.n	900161c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900161a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900161aa:	45bb      	cmp	fp, r7
900161ac:	da09      	bge.n	900161c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900161ae:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900161b2:	45bb      	cmp	fp, r7
900161b4:	bf3c      	itt	cc
900161b6:	f10e 0708 	addcc.w	r7, lr, #8
900161ba:	6107      	strcc	r7, [r0, #16]
900161bc:	f10b 0701 	add.w	r7, fp, #1
900161c0:	6087      	str	r7, [r0, #8]
900161c2:	6907      	ldr	r7, [r0, #16]
900161c4:	4555      	cmp	r5, sl
900161c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900161c8:	803d      	strh	r5, [r7, #0]
900161ca:	807b      	strh	r3, [r7, #2]
900161cc:	80be      	strh	r6, [r7, #4]
900161ce:	80fe      	strh	r6, [r7, #6]
900161d0:	d1c2      	bne.n	90016158 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900161d2:	9b01      	ldr	r3, [sp, #4]
900161d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900161d6:	eba3 0c0c 	sub.w	ip, r3, ip
900161da:	6903      	ldr	r3, [r0, #16]
900161dc:	3720      	adds	r7, #32
900161de:	8899      	ldrh	r1, [r3, #4]
900161e0:	4461      	add	r1, ip
900161e2:	8099      	strh	r1, [r3, #4]
900161e4:	990c      	ldr	r1, [sp, #48]	; 0x30
900161e6:	1a7f      	subs	r7, r7, r1
900161e8:	88d9      	ldrh	r1, [r3, #6]
900161ea:	fb0c 1c07 	mla	ip, ip, r7, r1
900161ee:	f8a3 c006 	strh.w	ip, [r3, #6]
900161f2:	e613      	b.n	90015e1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900161f4:	f04f 34ff 	mov.w	r4, #4294967295
900161f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900161fa:	4249      	negs	r1, r1
900161fc:	940d      	str	r4, [sp, #52]	; 0x34
900161fe:	2400      	movs	r4, #0
90016200:	437b      	muls	r3, r7
90016202:	e758      	b.n	900160b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90016204:	9905      	ldr	r1, [sp, #20]
90016206:	ea4f 1b69 	mov.w	fp, r9, asr #5
9001620a:	f009 0c1f 	and.w	ip, r9, #31
9001620e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90016212:	f001 011f 	and.w	r1, r1, #31
90016216:	45f3      	cmp	fp, lr
90016218:	f8b7 a006 	ldrh.w	sl, [r7, #6]
9001621c:	9102      	str	r1, [sp, #8]
9001621e:	9904      	ldr	r1, [sp, #16]
90016220:	eba1 0406 	sub.w	r4, r1, r6
90016224:	d108      	bne.n	90016238 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90016226:	9b02      	ldr	r3, [sp, #8]
90016228:	44a0      	add	r8, r4
9001622a:	449c      	add	ip, r3
9001622c:	f8a7 8004 	strh.w	r8, [r7, #4]
90016230:	fb04 a40c 	mla	r4, r4, ip, sl
90016234:	80fc      	strh	r4, [r7, #6]
90016236:	e461      	b.n	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016238:	9905      	ldr	r1, [sp, #20]
9001623a:	ebb1 0109 	subs.w	r1, r1, r9
9001623e:	bf51      	iteee	pl
90016240:	f1cc 0520 	rsbpl	r5, ip, #32
90016244:	fb04 f40c 	mulmi.w	r4, r4, ip
90016248:	4249      	negmi	r1, r1
9001624a:	2500      	movmi	r5, #0
9001624c:	bf5d      	ittte	pl
9001624e:	436c      	mulpl	r4, r5
90016250:	2520      	movpl	r5, #32
90016252:	f04f 0901 	movpl.w	r9, #1
90016256:	f04f 39ff 	movmi.w	r9, #4294967295
9001625a:	9501      	str	r5, [sp, #4]
9001625c:	9b01      	ldr	r3, [sp, #4]
9001625e:	fb94 f5f1 	sdiv	r5, r4, r1
90016262:	fb01 4415 	mls	r4, r1, r5, r4
90016266:	449c      	add	ip, r3
90016268:	eb0b 0309 	add.w	r3, fp, r9
9001626c:	2c00      	cmp	r4, #0
9001626e:	bfbc      	itt	lt
90016270:	f105 35ff 	addlt.w	r5, r5, #4294967295
90016274:	1864      	addlt	r4, r4, r1
90016276:	44a8      	add	r8, r5
90016278:	fb05 ac0c 	mla	ip, r5, ip, sl
9001627c:	f8a7 8004 	strh.w	r8, [r7, #4]
90016280:	f8a7 c006 	strh.w	ip, [r7, #6]
90016284:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016288:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001628c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016290:	ea58 0707 	orrs.w	r7, r8, r7
90016294:	d011      	beq.n	900162ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016296:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001629a:	f1b8 0f00 	cmp.w	r8, #0
9001629e:	db0c      	blt.n	900162ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900162a0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900162a2:	45b8      	cmp	r8, r7
900162a4:	da09      	bge.n	900162ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900162a6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900162aa:	45b8      	cmp	r8, r7
900162ac:	bf3c      	itt	cc
900162ae:	f10c 0708 	addcc.w	r7, ip, #8
900162b2:	6107      	strcc	r7, [r0, #16]
900162b4:	f108 0701 	add.w	r7, r8, #1
900162b8:	6087      	str	r7, [r0, #8]
900162ba:	6907      	ldr	r7, [r0, #16]
900162bc:	f04f 0c00 	mov.w	ip, #0
900162c0:	b212      	sxth	r2, r2
900162c2:	459e      	cmp	lr, r3
900162c4:	803b      	strh	r3, [r7, #0]
900162c6:	442e      	add	r6, r5
900162c8:	807a      	strh	r2, [r7, #2]
900162ca:	f8a7 c004 	strh.w	ip, [r7, #4]
900162ce:	f8a7 c006 	strh.w	ip, [r7, #6]
900162d2:	d04b      	beq.n	9001636c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900162d4:	9f04      	ldr	r7, [sp, #16]
900162d6:	1a64      	subs	r4, r4, r1
900162d8:	f04f 0a00 	mov.w	sl, #0
900162dc:	1bbf      	subs	r7, r7, r6
900162de:	443d      	add	r5, r7
900162e0:	016d      	lsls	r5, r5, #5
900162e2:	fb95 f8f1 	sdiv	r8, r5, r1
900162e6:	fb01 5518 	mls	r5, r1, r8, r5
900162ea:	4565      	cmp	r5, ip
900162ec:	bfbc      	itt	lt
900162ee:	f108 38ff 	addlt.w	r8, r8, #4294967295
900162f2:	186d      	addlt	r5, r5, r1
900162f4:	f108 0701 	add.w	r7, r8, #1
900162f8:	9703      	str	r7, [sp, #12]
900162fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900162fe:	1964      	adds	r4, r4, r5
90016300:	444b      	add	r3, r9
90016302:	bf54      	ite	pl
90016304:	9f03      	ldrpl	r7, [sp, #12]
90016306:	4647      	movmi	r7, r8
90016308:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001630c:	bf58      	it	pl
9001630e:	1a64      	subpl	r4, r4, r1
90016310:	443e      	add	r6, r7
90016312:	44bb      	add	fp, r7
90016314:	f8ac b004 	strh.w	fp, [ip, #4]
90016318:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001631c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016320:	f8ac b006 	strh.w	fp, [ip, #6]
90016324:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016328:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001632c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016330:	ea5b 0707 	orrs.w	r7, fp, r7
90016334:	d011      	beq.n	9001635a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016336:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001633a:	f1bb 0f00 	cmp.w	fp, #0
9001633e:	db0c      	blt.n	9001635a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016340:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016342:	45bb      	cmp	fp, r7
90016344:	da09      	bge.n	9001635a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016346:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001634a:	45bb      	cmp	fp, r7
9001634c:	bf3c      	itt	cc
9001634e:	f10c 0708 	addcc.w	r7, ip, #8
90016352:	6107      	strcc	r7, [r0, #16]
90016354:	f10b 0701 	add.w	r7, fp, #1
90016358:	6087      	str	r7, [r0, #8]
9001635a:	6907      	ldr	r7, [r0, #16]
9001635c:	459e      	cmp	lr, r3
9001635e:	803b      	strh	r3, [r7, #0]
90016360:	807a      	strh	r2, [r7, #2]
90016362:	f8a7 a004 	strh.w	sl, [r7, #4]
90016366:	f8a7 a006 	strh.w	sl, [r7, #6]
9001636a:	d1c6      	bne.n	900162fa <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
9001636c:	9b04      	ldr	r3, [sp, #16]
9001636e:	1b9e      	subs	r6, r3, r6
90016370:	6903      	ldr	r3, [r0, #16]
90016372:	889a      	ldrh	r2, [r3, #4]
90016374:	4432      	add	r2, r6
90016376:	809a      	strh	r2, [r3, #4]
90016378:	9a02      	ldr	r2, [sp, #8]
9001637a:	f102 0c20 	add.w	ip, r2, #32
9001637e:	9a01      	ldr	r2, [sp, #4]
90016380:	ebac 0c02 	sub.w	ip, ip, r2
90016384:	88da      	ldrh	r2, [r3, #6]
90016386:	fb06 260c 	mla	r6, r6, ip, r2
9001638a:	80de      	strh	r6, [r3, #6]
9001638c:	f7ff bbb6 	b.w	90015afc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016390 <_ZN8touchgfx7Outline6lineToEii>:
90016390:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016392:	079b      	lsls	r3, r3, #30
90016394:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90016396:	460e      	mov	r6, r1
90016398:	4615      	mov	r5, r2
9001639a:	d511      	bpl.n	900163c0 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001639c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900163a0:	ea86 0701 	eor.w	r7, r6, r1
900163a4:	ea85 0302 	eor.w	r3, r5, r2
900163a8:	433b      	orrs	r3, r7
900163aa:	d009      	beq.n	900163c0 <_ZN8touchgfx7Outline6lineToEii+0x30>
900163ac:	4633      	mov	r3, r6
900163ae:	9500      	str	r5, [sp, #0]
900163b0:	f7ff fb4c 	bl	90015a4c <_ZN8touchgfx7Outline10renderLineEiiii>
900163b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
900163b6:	f043 0301 	orr.w	r3, r3, #1
900163ba:	e9c0 6505 	strd	r6, r5, [r0, #20]
900163be:	6243      	str	r3, [r0, #36]	; 0x24
900163c0:	b003      	add	sp, #12
900163c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900163c4 <_ZN8touchgfx7Outline6moveToEii>:
900163c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900163c6:	6a43      	ldr	r3, [r0, #36]	; 0x24
900163c8:	4615      	mov	r5, r2
900163ca:	4604      	mov	r4, r0
900163cc:	460e      	mov	r6, r1
900163ce:	079a      	lsls	r2, r3, #30
900163d0:	d401      	bmi.n	900163d6 <_ZN8touchgfx7Outline6moveToEii+0x12>
900163d2:	f7ff fb07 	bl	900159e4 <_ZN8touchgfx7Outline5resetEv>
900163d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
900163d8:	07db      	lsls	r3, r3, #31
900163da:	d504      	bpl.n	900163e6 <_ZN8touchgfx7Outline6moveToEii+0x22>
900163dc:	4620      	mov	r0, r4
900163de:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900163e2:	f7ff ffd5 	bl	90016390 <_ZN8touchgfx7Outline6lineToEii>
900163e6:	6923      	ldr	r3, [r4, #16]
900163e8:	1170      	asrs	r0, r6, #5
900163ea:	1169      	asrs	r1, r5, #5
900163ec:	f9b3 2000 	ldrsh.w	r2, [r3]
900163f0:	4290      	cmp	r0, r2
900163f2:	d103      	bne.n	900163fc <_ZN8touchgfx7Outline6moveToEii+0x38>
900163f4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900163f8:	4291      	cmp	r1, r2
900163fa:	d01a      	beq.n	90016432 <_ZN8touchgfx7Outline6moveToEii+0x6e>
900163fc:	88df      	ldrh	r7, [r3, #6]
900163fe:	889a      	ldrh	r2, [r3, #4]
90016400:	433a      	orrs	r2, r7
90016402:	d010      	beq.n	90016426 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016404:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016408:	2a00      	cmp	r2, #0
9001640a:	db0c      	blt.n	90016426 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001640c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9001640e:	42ba      	cmp	r2, r7
90016410:	da09      	bge.n	90016426 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016412:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90016416:	42ba      	cmp	r2, r7
90016418:	f102 0201 	add.w	r2, r2, #1
9001641c:	bf38      	it	cc
9001641e:	3308      	addcc	r3, #8
90016420:	60a2      	str	r2, [r4, #8]
90016422:	bf38      	it	cc
90016424:	6123      	strcc	r3, [r4, #16]
90016426:	6923      	ldr	r3, [r4, #16]
90016428:	2200      	movs	r2, #0
9001642a:	8018      	strh	r0, [r3, #0]
9001642c:	8059      	strh	r1, [r3, #2]
9001642e:	809a      	strh	r2, [r3, #4]
90016430:	80da      	strh	r2, [r3, #6]
90016432:	6166      	str	r6, [r4, #20]
90016434:	6225      	str	r5, [r4, #32]
90016436:	e9c4 5606 	strd	r5, r6, [r4, #24]
9001643a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001643c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
9001643c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016440:	b0d0      	sub	sp, #320	; 0x140
90016442:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90016446:	466c      	mov	r4, sp
90016448:	4627      	mov	r7, r4
9001644a:	1a0d      	subs	r5, r1, r0
9001644c:	f100 0308 	add.w	r3, r0, #8
90016450:	2d48      	cmp	r5, #72	; 0x48
90016452:	f340 80d5 	ble.w	90016600 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016456:	112d      	asrs	r5, r5, #4
90016458:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001645c:	f9b0 9000 	ldrsh.w	r9, [r0]
90016460:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90016464:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90016468:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001646c:	6816      	ldr	r6, [r2, #0]
9001646e:	6006      	str	r6, [r0, #0]
90016470:	6856      	ldr	r6, [r2, #4]
90016472:	6046      	str	r6, [r0, #4]
90016474:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016478:	f8a2 8002 	strh.w	r8, [r2, #2]
9001647c:	f8a2 e004 	strh.w	lr, [r2, #4]
90016480:	f8a2 c006 	strh.w	ip, [r2, #6]
90016484:	f1a1 0208 	sub.w	r2, r1, #8
90016488:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001648c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016490:	4565      	cmp	r5, ip
90016492:	db06      	blt.n	900164a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90016494:	d119      	bne.n	900164ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016496:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001649a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001649e:	42ae      	cmp	r6, r5
900164a0:	dd13      	ble.n	900164ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900164a2:	460e      	mov	r6, r1
900164a4:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900164a8:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900164ac:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900164b0:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900164b4:	601d      	str	r5, [r3, #0]
900164b6:	6875      	ldr	r5, [r6, #4]
900164b8:	605d      	str	r5, [r3, #4]
900164ba:	f821 9c08 	strh.w	r9, [r1, #-8]
900164be:	f821 cc06 	strh.w	ip, [r1, #-6]
900164c2:	f821 8c04 	strh.w	r8, [r1, #-4]
900164c6:	f821 ec02 	strh.w	lr, [r1, #-2]
900164ca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900164ce:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900164d2:	42ae      	cmp	r6, r5
900164d4:	db06      	blt.n	900164e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900164d6:	d116      	bne.n	90016506 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900164d8:	f9b0 c000 	ldrsh.w	ip, [r0]
900164dc:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900164e0:	45ac      	cmp	ip, r5
900164e2:	da10      	bge.n	90016506 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900164e4:	681d      	ldr	r5, [r3, #0]
900164e6:	f9b0 8000 	ldrsh.w	r8, [r0]
900164ea:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900164ee:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900164f2:	6005      	str	r5, [r0, #0]
900164f4:	685d      	ldr	r5, [r3, #4]
900164f6:	f8a0 8008 	strh.w	r8, [r0, #8]
900164fa:	6045      	str	r5, [r0, #4]
900164fc:	8146      	strh	r6, [r0, #10]
900164fe:	f8a0 e00c 	strh.w	lr, [r0, #12]
90016502:	f8a0 c00e 	strh.w	ip, [r0, #14]
90016506:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001650a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001650e:	4565      	cmp	r5, ip
90016510:	db06      	blt.n	90016520 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90016512:	d119      	bne.n	90016548 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016514:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016518:	f9b0 5000 	ldrsh.w	r5, [r0]
9001651c:	42ae      	cmp	r6, r5
9001651e:	da13      	bge.n	90016548 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016520:	460e      	mov	r6, r1
90016522:	f9b0 9000 	ldrsh.w	r9, [r0]
90016526:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
9001652a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001652e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90016532:	6005      	str	r5, [r0, #0]
90016534:	6875      	ldr	r5, [r6, #4]
90016536:	6045      	str	r5, [r0, #4]
90016538:	f821 9c08 	strh.w	r9, [r1, #-8]
9001653c:	f821 cc06 	strh.w	ip, [r1, #-6]
90016540:	f821 8c04 	strh.w	r8, [r1, #-4]
90016544:	f821 ec02 	strh.w	lr, [r1, #-2]
90016548:	3308      	adds	r3, #8
9001654a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001654e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90016552:	45e6      	cmp	lr, ip
90016554:	dbf8      	blt.n	90016548 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016556:	d105      	bne.n	90016564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016558:	f9b3 6000 	ldrsh.w	r6, [r3]
9001655c:	f9b0 5000 	ldrsh.w	r5, [r0]
90016560:	42ae      	cmp	r6, r5
90016562:	dbf1      	blt.n	90016548 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016564:	4615      	mov	r5, r2
90016566:	3a08      	subs	r2, #8
90016568:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
9001656c:	45b4      	cmp	ip, r6
9001656e:	dbf9      	blt.n	90016564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016570:	d105      	bne.n	9001657e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90016572:	f9b0 8000 	ldrsh.w	r8, [r0]
90016576:	f9b2 6000 	ldrsh.w	r6, [r2]
9001657a:	45b0      	cmp	r8, r6
9001657c:	dbf2      	blt.n	90016564 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001657e:	4293      	cmp	r3, r2
90016580:	f1a5 0608 	sub.w	r6, r5, #8
90016584:	d816      	bhi.n	900165b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90016586:	f8d6 c000 	ldr.w	ip, [r6]
9001658a:	f9b3 a000 	ldrsh.w	sl, [r3]
9001658e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90016592:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90016596:	f8c3 c000 	str.w	ip, [r3]
9001659a:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001659e:	f8c3 c004 	str.w	ip, [r3, #4]
900165a2:	f825 ac08 	strh.w	sl, [r5, #-8]
900165a6:	f825 ec06 	strh.w	lr, [r5, #-6]
900165aa:	f825 9c04 	strh.w	r9, [r5, #-4]
900165ae:	f825 8c02 	strh.w	r8, [r5, #-2]
900165b2:	e7c9      	b.n	90016548 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900165b4:	f8d6 e000 	ldr.w	lr, [r6]
900165b8:	f9b0 a000 	ldrsh.w	sl, [r0]
900165bc:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900165c0:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900165c4:	f8c0 e000 	str.w	lr, [r0]
900165c8:	f8d6 e004 	ldr.w	lr, [r6, #4]
900165cc:	1a16      	subs	r6, r2, r0
900165ce:	f8c0 e004 	str.w	lr, [r0, #4]
900165d2:	f825 ac08 	strh.w	sl, [r5, #-8]
900165d6:	f825 cc06 	strh.w	ip, [r5, #-6]
900165da:	f825 9c04 	strh.w	r9, [r5, #-4]
900165de:	f825 8c02 	strh.w	r8, [r5, #-2]
900165e2:	1acd      	subs	r5, r1, r3
900165e4:	10ed      	asrs	r5, r5, #3
900165e6:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900165ea:	bfb5      	itete	lt
900165ec:	e9c4 0200 	strdlt	r0, r2, [r4]
900165f0:	e9c4 3100 	strdge	r3, r1, [r4]
900165f4:	460a      	movlt	r2, r1
900165f6:	4603      	movge	r3, r0
900165f8:	3408      	adds	r4, #8
900165fa:	4618      	mov	r0, r3
900165fc:	4611      	mov	r1, r2
900165fe:	e724      	b.n	9001644a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016600:	4299      	cmp	r1, r3
90016602:	d927      	bls.n	90016654 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90016604:	f1a3 0210 	sub.w	r2, r3, #16
90016608:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
9001660c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016610:	45ac      	cmp	ip, r5
90016612:	db06      	blt.n	90016622 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90016614:	d11c      	bne.n	90016650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016616:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001661a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001661e:	42ae      	cmp	r6, r5
90016620:	da16      	bge.n	90016650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016622:	4615      	mov	r5, r2
90016624:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90016628:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
9001662c:	3a08      	subs	r2, #8
9001662e:	f855 6f08 	ldr.w	r6, [r5, #8]!
90016632:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90016636:	6196      	str	r6, [r2, #24]
90016638:	42a8      	cmp	r0, r5
9001663a:	686e      	ldr	r6, [r5, #4]
9001663c:	f8a2 9010 	strh.w	r9, [r2, #16]
90016640:	61d6      	str	r6, [r2, #28]
90016642:	f8a2 c012 	strh.w	ip, [r2, #18]
90016646:	f8a2 8014 	strh.w	r8, [r2, #20]
9001664a:	f8a2 e016 	strh.w	lr, [r2, #22]
9001664e:	d1db      	bne.n	90016608 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90016650:	3308      	adds	r3, #8
90016652:	e7d5      	b.n	90016600 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016654:	42bc      	cmp	r4, r7
90016656:	d903      	bls.n	90016660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90016658:	e954 0102 	ldrd	r0, r1, [r4, #-8]
9001665c:	3c08      	subs	r4, #8
9001665e:	e6f4      	b.n	9001644a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016660:	b050      	add	sp, #320	; 0x140
90016662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90016666 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90016666:	b510      	push	{r4, lr}
90016668:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001666a:	4604      	mov	r4, r0
9001666c:	07da      	lsls	r2, r3, #31
9001666e:	d507      	bpl.n	90016680 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90016670:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90016674:	f7ff fe8c 	bl	90016390 <_ZN8touchgfx7Outline6lineToEii>
90016678:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001667a:	f023 0301 	bic.w	r3, r3, #1
9001667e:	6243      	str	r3, [r0, #36]	; 0x24
90016680:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016682:	079b      	lsls	r3, r3, #30
90016684:	d521      	bpl.n	900166ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90016686:	6923      	ldr	r3, [r4, #16]
90016688:	88d9      	ldrh	r1, [r3, #6]
9001668a:	889a      	ldrh	r2, [r3, #4]
9001668c:	430a      	orrs	r2, r1
9001668e:	d010      	beq.n	900166b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016690:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016694:	2a00      	cmp	r2, #0
90016696:	db0c      	blt.n	900166b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016698:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001669a:	428a      	cmp	r2, r1
9001669c:	da09      	bge.n	900166b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001669e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900166a2:	4291      	cmp	r1, r2
900166a4:	f102 0201 	add.w	r2, r2, #1
900166a8:	bf88      	it	hi
900166aa:	3308      	addhi	r3, #8
900166ac:	60a2      	str	r2, [r4, #8]
900166ae:	bf88      	it	hi
900166b0:	6123      	strhi	r3, [r4, #16]
900166b2:	68a1      	ldr	r1, [r4, #8]
900166b4:	b129      	cbz	r1, 900166c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900166b6:	6863      	ldr	r3, [r4, #4]
900166b8:	4299      	cmp	r1, r3
900166ba:	d802      	bhi.n	900166c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900166bc:	68e0      	ldr	r0, [r4, #12]
900166be:	f7ff febd 	bl	9001643c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900166c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900166c4:	f023 0302 	bic.w	r3, r3, #2
900166c8:	6263      	str	r3, [r4, #36]	; 0x24
900166ca:	68e0      	ldr	r0, [r4, #12]
900166cc:	bd10      	pop	{r4, pc}
	...

900166d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
900166d0:	4b02      	ldr	r3, [pc, #8]	; (900166dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
900166d2:	6018      	str	r0, [r3, #0]
900166d4:	4b02      	ldr	r3, [pc, #8]	; (900166e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900166d6:	6019      	str	r1, [r3, #0]
900166d8:	4770      	bx	lr
900166da:	bf00      	nop
900166dc:	24039ad4 	.word	0x24039ad4
900166e0:	24039ad8 	.word	0x24039ad8

900166e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900166e4:	2300      	movs	r3, #0
900166e6:	4a02      	ldr	r2, [pc, #8]	; (900166f0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900166e8:	6013      	str	r3, [r2, #0]
900166ea:	4a02      	ldr	r2, [pc, #8]	; (900166f4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900166ec:	6013      	str	r3, [r2, #0]
900166ee:	4770      	bx	lr
900166f0:	24039ad4 	.word	0x24039ad4
900166f4:	24039ad8 	.word	0x24039ad8

900166f8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900166f8:	4b01      	ldr	r3, [pc, #4]	; (90016700 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900166fa:	6818      	ldr	r0, [r3, #0]
900166fc:	4770      	bx	lr
900166fe:	bf00      	nop
90016700:	24039ad4 	.word	0x24039ad4

90016704 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90016704:	4b01      	ldr	r3, [pc, #4]	; (9001670c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90016706:	6818      	ldr	r0, [r3, #0]
90016708:	4770      	bx	lr
9001670a:	bf00      	nop
9001670c:	24039ad8 	.word	0x24039ad8

90016710 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016710:	b510      	push	{r4, lr}
90016712:	6803      	ldr	r3, [r0, #0]
90016714:	460c      	mov	r4, r1
90016716:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016718:	4798      	blx	r3
9001671a:	1b03      	subs	r3, r0, r4
9001671c:	4258      	negs	r0, r3
9001671e:	4158      	adcs	r0, r3
90016720:	bd10      	pop	{r4, pc}
	...

90016724 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90016724:	4b01      	ldr	r3, [pc, #4]	; (9001672c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90016726:	6019      	str	r1, [r3, #0]
90016728:	4770      	bx	lr
9001672a:	bf00      	nop
9001672c:	24039adc 	.word	0x24039adc

90016730 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016734:	4696      	mov	lr, r2
90016736:	b097      	sub	sp, #92	; 0x5c
90016738:	4605      	mov	r5, r0
9001673a:	4614      	mov	r4, r2
9001673c:	460e      	mov	r6, r1
9001673e:	461f      	mov	r7, r3
90016740:	f10d 0c1c 	add.w	ip, sp, #28
90016744:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90016748:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
9001674c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90016750:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016754:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016758:	f8de 3000 	ldr.w	r3, [lr]
9001675c:	f104 0e14 	add.w	lr, r4, #20
90016760:	f8cc 3000 	str.w	r3, [ip]
90016764:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016768:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001676c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016770:	f8de 3000 	ldr.w	r3, [lr]
90016774:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90016778:	f8cc 3000 	str.w	r3, [ip]
9001677c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90016780:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016784:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016788:	f8de 3000 	ldr.w	r3, [lr]
9001678c:	4631      	mov	r1, r6
9001678e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90016790:	4628      	mov	r0, r5
90016792:	f8cc 3000 	str.w	r3, [ip]
90016796:	682b      	ldr	r3, [r5, #0]
90016798:	9201      	str	r2, [sp, #4]
9001679a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001679c:	f8cd 8008 	str.w	r8, [sp, #8]
900167a0:	9200      	str	r2, [sp, #0]
900167a2:	aa07      	add	r2, sp, #28
900167a4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900167a8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
900167ac:	463b      	mov	r3, r7
900167ae:	47d8      	blx	fp
900167b0:	46a6      	mov	lr, r4
900167b2:	f10d 0c1c 	add.w	ip, sp, #28
900167b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900167ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167be:	f8de 3000 	ldr.w	r3, [lr]
900167c2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900167c6:	343c      	adds	r4, #60	; 0x3c
900167c8:	f8cc 3000 	str.w	r3, [ip]
900167cc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900167d0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900167d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167d8:	f8de 3000 	ldr.w	r3, [lr]
900167dc:	f8cc 3000 	str.w	r3, [ip]
900167e0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900167e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900167e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900167ea:	6823      	ldr	r3, [r4, #0]
900167ec:	4631      	mov	r1, r6
900167ee:	4628      	mov	r0, r5
900167f0:	f8cc 3000 	str.w	r3, [ip]
900167f4:	682b      	ldr	r3, [r5, #0]
900167f6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900167fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
900167fc:	f8cd 8008 	str.w	r8, [sp, #8]
90016800:	9201      	str	r2, [sp, #4]
90016802:	9a20      	ldr	r2, [sp, #128]	; 0x80
90016804:	9200      	str	r2, [sp, #0]
90016806:	aa07      	add	r2, sp, #28
90016808:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
9001680a:	463b      	mov	r3, r7
9001680c:	47a0      	blx	r4
9001680e:	b017      	add	sp, #92	; 0x5c
90016810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016814 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90016814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016818:	b08d      	sub	sp, #52	; 0x34
9001681a:	4688      	mov	r8, r1
9001681c:	f8d3 c000 	ldr.w	ip, [r3]
90016820:	9916      	ldr	r1, [sp, #88]	; 0x58
90016822:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90016826:	680f      	ldr	r7, [r1, #0]
90016828:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
9001682c:	eba7 070c 	sub.w	r7, r7, ip
90016830:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90016834:	edd3 6a07 	vldr	s13, [r3, #28]
90016838:	42bc      	cmp	r4, r7
9001683a:	9918      	ldr	r1, [sp, #96]	; 0x60
9001683c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90016840:	bfa8      	it	ge
90016842:	463c      	movge	r4, r7
90016844:	f9b1 9000 	ldrsh.w	r9, [r1]
90016848:	f9ba 1000 	ldrsh.w	r1, [sl]
9001684c:	ee07 4a90 	vmov	s15, r4
90016850:	eb09 0e0c 	add.w	lr, r9, ip
90016854:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90016858:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001685c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90016860:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90016864:	4571      	cmp	r1, lr
90016866:	ee25 4a04 	vmul.f32	s8, s10, s8
9001686a:	ee65 4a24 	vmul.f32	s9, s10, s9
9001686e:	ee25 5a27 	vmul.f32	s10, s10, s15
90016872:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90016876:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001687a:	ee32 1a05 	vadd.f32	s2, s4, s10
9001687e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90016882:	ee36 0a84 	vadd.f32	s0, s13, s8
90016886:	ee61 1a87 	vmul.f32	s3, s3, s14
9001688a:	ee22 2a07 	vmul.f32	s4, s4, s14
9001688e:	f340 808c 	ble.w	900169aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90016892:	eba1 060e 	sub.w	r6, r1, lr
90016896:	fb96 f5f4 	sdiv	r5, r6, r4
9001689a:	ee07 5a10 	vmov	s14, r5
9001689e:	2d00      	cmp	r5, #0
900168a0:	fb04 6615 	mls	r6, r4, r5, r6
900168a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900168a8:	eea7 0a04 	vfma.f32	s0, s14, s8
900168ac:	eee7 0a24 	vfma.f32	s1, s14, s9
900168b0:	eea7 1a05 	vfma.f32	s2, s14, s10
900168b4:	dd12      	ble.n	900168dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900168b6:	ee70 6a44 	vsub.f32	s13, s0, s8
900168ba:	ee70 1ae4 	vsub.f32	s3, s1, s9
900168be:	ee31 2a45 	vsub.f32	s4, s2, s10
900168c2:	eef5 6a40 	vcmp.f32	s13, #0.0
900168c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900168ca:	bf14      	ite	ne
900168cc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900168d0:	eeb0 7a67 	vmoveq.f32	s14, s15
900168d4:	ee61 1a87 	vmul.f32	s3, s3, s14
900168d8:	ee22 2a07 	vmul.f32	s4, s4, s14
900168dc:	fb05 f204 	mul.w	r2, r5, r4
900168e0:	1abf      	subs	r7, r7, r2
900168e2:	4494      	add	ip, r2
900168e4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900168e8:	4411      	add	r1, r2
900168ea:	eb09 020c 	add.w	r2, r9, ip
900168ee:	b209      	sxth	r1, r1
900168f0:	443a      	add	r2, r7
900168f2:	428a      	cmp	r2, r1
900168f4:	bfc4      	itt	gt
900168f6:	eba1 0209 	subgt.w	r2, r1, r9
900168fa:	eba2 070c 	subgt.w	r7, r2, ip
900168fe:	2f00      	cmp	r7, #0
90016900:	dd50      	ble.n	900169a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90016902:	fb97 f1f4 	sdiv	r1, r7, r4
90016906:	fb04 7211 	mls	r2, r4, r1, r7
9001690a:	b90a      	cbnz	r2, 90016910 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
9001690c:	3901      	subs	r1, #1
9001690e:	4622      	mov	r2, r4
90016910:	eec7 3a80 	vdiv.f32	s7, s15, s0
90016914:	6840      	ldr	r0, [r0, #4]
90016916:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
9001691a:	44b6      	add	lr, r6
9001691c:	f8d0 a000 	ldr.w	sl, [r0]
90016920:	2900      	cmp	r1, #0
90016922:	bfcc      	ite	gt
90016924:	46a1      	movgt	r9, r4
90016926:	4691      	movle	r9, r2
90016928:	900b      	str	r0, [sp, #44]	; 0x2c
9001692a:	9817      	ldr	r0, [sp, #92]	; 0x5c
9001692c:	fb04 e505 	mla	r5, r4, r5, lr
90016930:	eef0 6a42 	vmov.f32	s13, s4
90016934:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90016938:	9008      	str	r0, [sp, #32]
9001693a:	eeb0 7a61 	vmov.f32	s14, s3
9001693e:	9818      	ldr	r0, [sp, #96]	; 0x60
90016940:	695b      	ldr	r3, [r3, #20]
90016942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90016946:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
9001694a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001694e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90016950:	445b      	add	r3, fp
90016952:	9307      	str	r3, [sp, #28]
90016954:	ee16 3a90 	vmov	r3, s13
90016958:	e9cd 8505 	strd	r8, r5, [sp, #20]
9001695c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90016960:	ee21 3a23 	vmul.f32	s6, s2, s7
90016964:	ee72 7ae1 	vsub.f32	s15, s5, s3
90016968:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001696c:	ee17 7a90 	vmov	r7, s15
90016970:	ee73 7a42 	vsub.f32	s15, s6, s4
90016974:	fb97 f7f4 	sdiv	r7, r7, r4
90016978:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001697c:	ee17 ca90 	vmov	ip, s15
90016980:	fb9c fcf4 	sdiv	ip, ip, r4
90016984:	fb0c 3306 	mla	r3, ip, r6, r3
90016988:	9302      	str	r3, [sp, #8]
9001698a:	ee17 3a10 	vmov	r3, s14
9001698e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90016992:	fb07 3706 	mla	r7, r7, r6, r3
90016996:	eba9 0306 	sub.w	r3, r9, r6
9001699a:	e9cd 4700 	strd	r4, r7, [sp]
9001699e:	f8da 4008 	ldr.w	r4, [sl, #8]
900169a2:	47a0      	blx	r4
900169a4:	b00d      	add	sp, #52	; 0x34
900169a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900169aa:	2500      	movs	r5, #0
900169ac:	462e      	mov	r6, r5
900169ae:	e799      	b.n	900168e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900169b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900169b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900169b4:	b0db      	sub	sp, #364	; 0x16c
900169b6:	461d      	mov	r5, r3
900169b8:	4614      	mov	r4, r2
900169ba:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
900169be:	910f      	str	r1, [sp, #60]	; 0x3c
900169c0:	4629      	mov	r1, r5
900169c2:	930a      	str	r3, [sp, #40]	; 0x28
900169c4:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
900169c8:	9009      	str	r0, [sp, #36]	; 0x24
900169ca:	930b      	str	r3, [sp, #44]	; 0x2c
900169cc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
900169d0:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
900169d4:	9310      	str	r3, [sp, #64]	; 0x40
900169d6:	6803      	ldr	r3, [r0, #0]
900169d8:	6c5f      	ldr	r7, [r3, #68]	; 0x44
900169da:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
900169de:	47b8      	blx	r7
900169e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900169e2:	6058      	str	r0, [r3, #4]
900169e4:	2800      	cmp	r0, #0
900169e6:	f000 83a1 	beq.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900169ea:	682b      	ldr	r3, [r5, #0]
900169ec:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
900169f0:	ed94 7a02 	vldr	s14, [r4, #8]
900169f4:	9314      	str	r3, [sp, #80]	; 0x50
900169f6:	686b      	ldr	r3, [r5, #4]
900169f8:	eeb4 7ae7 	vcmpe.f32	s14, s15
900169fc:	9315      	str	r3, [sp, #84]	; 0x54
900169fe:	4bc1      	ldr	r3, [pc, #772]	; (90016d04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90016a00:	7819      	ldrb	r1, [r3, #0]
90016a02:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90016a06:	2900      	cmp	r1, #0
90016a08:	bf16      	itet	ne
90016a0a:	4619      	movne	r1, r3
90016a0c:	4611      	moveq	r1, r2
90016a0e:	4613      	movne	r3, r2
90016a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a14:	9116      	str	r1, [sp, #88]	; 0x58
90016a16:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90016a1a:	f240 8387 	bls.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a1e:	ed94 7a07 	vldr	s14, [r4, #28]
90016a22:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a2a:	f240 837f 	bls.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a2e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90016a32:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016a36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a3a:	f240 8377 	bls.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a3e:	6822      	ldr	r2, [r4, #0]
90016a40:	4bb1      	ldr	r3, [pc, #708]	; (90016d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90016a42:	429a      	cmp	r2, r3
90016a44:	f2c0 8372 	blt.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a48:	49b0      	ldr	r1, [pc, #704]	; (90016d0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90016a4a:	6963      	ldr	r3, [r4, #20]
90016a4c:	428a      	cmp	r2, r1
90016a4e:	f300 836d 	bgt.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a52:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016a56:	48ae      	ldr	r0, [pc, #696]	; (90016d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90016a58:	33ff      	adds	r3, #255	; 0xff
90016a5a:	4283      	cmp	r3, r0
90016a5c:	f200 8366 	bhi.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a60:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016a62:	4dac      	ldr	r5, [pc, #688]	; (90016d14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90016a64:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016a68:	33ff      	adds	r3, #255	; 0xff
90016a6a:	42ab      	cmp	r3, r5
90016a6c:	f200 835e 	bhi.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a70:	6862      	ldr	r2, [r4, #4]
90016a72:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90016a76:	33ff      	adds	r3, #255	; 0xff
90016a78:	4283      	cmp	r3, r0
90016a7a:	f200 8357 	bhi.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a7e:	69a1      	ldr	r1, [r4, #24]
90016a80:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90016a84:	33ff      	adds	r3, #255	; 0xff
90016a86:	4283      	cmp	r3, r0
90016a88:	f200 8350 	bhi.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90016a8e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90016a92:	30ff      	adds	r0, #255	; 0xff
90016a94:	42a8      	cmp	r0, r5
90016a96:	f200 8349 	bhi.w	9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016a9a:	428a      	cmp	r2, r1
90016a9c:	f280 8110 	bge.w	90016cc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90016aa0:	429a      	cmp	r2, r3
90016aa2:	f300 8119 	bgt.w	90016cd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90016aa6:	4299      	cmp	r1, r3
90016aa8:	f280 811d 	bge.w	90016ce6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90016aac:	2502      	movs	r5, #2
90016aae:	2701      	movs	r7, #1
90016ab0:	46a9      	mov	r9, r5
90016ab2:	46b8      	mov	r8, r7
90016ab4:	f04f 0a00 	mov.w	sl, #0
90016ab8:	4621      	mov	r1, r4
90016aba:	a849      	add	r0, sp, #292	; 0x124
90016abc:	f003 fe7c 	bl	9001a7b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90016ac0:	4622      	mov	r2, r4
90016ac2:	4653      	mov	r3, sl
90016ac4:	a949      	add	r1, sp, #292	; 0x124
90016ac6:	f8cd 9000 	str.w	r9, [sp]
90016aca:	a819      	add	r0, sp, #100	; 0x64
90016acc:	f003 ffa4 	bl	9001aa18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016ad0:	4622      	mov	r2, r4
90016ad2:	4653      	mov	r3, sl
90016ad4:	a949      	add	r1, sp, #292	; 0x124
90016ad6:	f8cd 8000 	str.w	r8, [sp]
90016ada:	a829      	add	r0, sp, #164	; 0xa4
90016adc:	f003 ff9c 	bl	9001aa18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016ae0:	4643      	mov	r3, r8
90016ae2:	4622      	mov	r2, r4
90016ae4:	a949      	add	r1, sp, #292	; 0x124
90016ae6:	f8cd 9000 	str.w	r9, [sp]
90016aea:	a839      	add	r0, sp, #228	; 0xe4
90016aec:	f003 ff94 	bl	9001aa18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016af0:	42af      	cmp	r7, r5
90016af2:	af12      	add	r7, sp, #72	; 0x48
90016af4:	bfb7      	itett	lt
90016af6:	2300      	movlt	r3, #0
90016af8:	2301      	movge	r3, #1
90016afa:	ad29      	addlt	r5, sp, #164	; 0xa4
90016afc:	ac19      	addlt	r4, sp, #100	; 0x64
90016afe:	bfb1      	iteee	lt
90016b00:	930e      	strlt	r3, [sp, #56]	; 0x38
90016b02:	ad19      	addge	r5, sp, #100	; 0x64
90016b04:	930e      	strge	r3, [sp, #56]	; 0x38
90016b06:	ac29      	addge	r4, sp, #164	; 0xa4
90016b08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016b0a:	e893 0003 	ldmia.w	r3, {r0, r1}
90016b0e:	e887 0003 	stmia.w	r7, {r0, r1}
90016b12:	b928      	cbnz	r0, 90016b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90016b14:	4b80      	ldr	r3, [pc, #512]	; (90016d18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90016b16:	6818      	ldr	r0, [r3, #0]
90016b18:	6803      	ldr	r3, [r0, #0]
90016b1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016b1c:	4798      	blx	r3
90016b1e:	6038      	str	r0, [r7, #0]
90016b20:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016b22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016b26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016b2a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90016b2c:	930c      	str	r3, [sp, #48]	; 0x30
90016b2e:	990c      	ldr	r1, [sp, #48]	; 0x30
90016b30:	6963      	ldr	r3, [r4, #20]
90016b32:	440b      	add	r3, r1
90016b34:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016b38:	4408      	add	r0, r1
90016b3a:	b200      	sxth	r0, r0
90016b3c:	4283      	cmp	r3, r0
90016b3e:	900d      	str	r0, [sp, #52]	; 0x34
90016b40:	f280 80dd 	bge.w	90016cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90016b44:	428b      	cmp	r3, r1
90016b46:	da08      	bge.n	90016b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016b48:	2a00      	cmp	r2, #0
90016b4a:	dd06      	ble.n	90016b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016b4c:	1acb      	subs	r3, r1, r3
90016b4e:	429a      	cmp	r2, r3
90016b50:	f2c0 80e4 	blt.w	90016d1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90016b54:	2b00      	cmp	r3, #0
90016b56:	f300 80e2 	bgt.w	90016d1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90016b5a:	6967      	ldr	r7, [r4, #20]
90016b5c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90016b60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016b62:	443b      	add	r3, r7
90016b64:	461f      	mov	r7, r3
90016b66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016b68:	1bdf      	subs	r7, r3, r7
90016b6a:	4297      	cmp	r7, r2
90016b6c:	bfa8      	it	ge
90016b6e:	4617      	movge	r7, r2
90016b70:	2f00      	cmp	r7, #0
90016b72:	f340 8166 	ble.w	90016e42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90016b76:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016b78:	6829      	ldr	r1, [r5, #0]
90016b7a:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b7e:	f9bb 3000 	ldrsh.w	r3, [fp]
90016b82:	4411      	add	r1, r2
90016b84:	6820      	ldr	r0, [r4, #0]
90016b86:	4299      	cmp	r1, r3
90016b88:	dd1a      	ble.n	90016bc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016b8a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016b8e:	4402      	add	r2, r0
90016b90:	440b      	add	r3, r1
90016b92:	b21b      	sxth	r3, r3
90016b94:	429a      	cmp	r2, r3
90016b96:	dc13      	bgt.n	90016bc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016b98:	9a10      	ldr	r2, [sp, #64]	; 0x40
90016b9a:	a912      	add	r1, sp, #72	; 0x48
90016b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016b9e:	9809      	ldr	r0, [sp, #36]	; 0x24
90016ba0:	681b      	ldr	r3, [r3, #0]
90016ba2:	9206      	str	r2, [sp, #24]
90016ba4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016ba6:	9500      	str	r5, [sp, #0]
90016ba8:	9205      	str	r2, [sp, #20]
90016baa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90016bac:	e9cd b203 	strd	fp, r2, [sp, #12]
90016bb0:	9a64      	ldr	r2, [sp, #400]	; 0x190
90016bb2:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016bb6:	aa49      	add	r2, sp, #292	; 0x124
90016bb8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90016bbc:	4623      	mov	r3, r4
90016bbe:	47c8      	blx	r9
90016bc0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90016bc4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90016bc8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90016bcc:	ee37 7a27 	vadd.f32	s14, s14, s15
90016bd0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90016bd4:	68a1      	ldr	r1, [r4, #8]
90016bd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016bda:	ed94 6a08 	vldr	s12, [r4, #32]
90016bde:	edd4 6a07 	vldr	s13, [r4, #28]
90016be2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016be6:	ee76 6a86 	vadd.f32	s13, s13, s12
90016bea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016bee:	e9d4 2300 	ldrd	r2, r3, [r4]
90016bf2:	edc4 6a07 	vstr	s13, [r4, #28]
90016bf6:	441a      	add	r2, r3
90016bf8:	6963      	ldr	r3, [r4, #20]
90016bfa:	3301      	adds	r3, #1
90016bfc:	6022      	str	r2, [r4, #0]
90016bfe:	6163      	str	r3, [r4, #20]
90016c00:	69a3      	ldr	r3, [r4, #24]
90016c02:	3b01      	subs	r3, #1
90016c04:	61a3      	str	r3, [r4, #24]
90016c06:	6923      	ldr	r3, [r4, #16]
90016c08:	440b      	add	r3, r1
90016c0a:	68e1      	ldr	r1, [r4, #12]
90016c0c:	428b      	cmp	r3, r1
90016c0e:	6123      	str	r3, [r4, #16]
90016c10:	db15      	blt.n	90016c3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90016c12:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90016c16:	3201      	adds	r2, #1
90016c18:	1a5b      	subs	r3, r3, r1
90016c1a:	ee76 6a26 	vadd.f32	s13, s12, s13
90016c1e:	6022      	str	r2, [r4, #0]
90016c20:	6123      	str	r3, [r4, #16]
90016c22:	edc4 6a07 	vstr	s13, [r4, #28]
90016c26:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90016c2a:	ee36 7a87 	vadd.f32	s14, s13, s14
90016c2e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016c32:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90016c36:	ee77 7a27 	vadd.f32	s15, s14, s15
90016c3a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016c3e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90016c42:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90016c46:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90016c4a:	ee37 7a27 	vadd.f32	s14, s14, s15
90016c4e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90016c52:	68a9      	ldr	r1, [r5, #8]
90016c54:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016c58:	ed95 6a08 	vldr	s12, [r5, #32]
90016c5c:	edd5 6a07 	vldr	s13, [r5, #28]
90016c60:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016c64:	ee76 6a86 	vadd.f32	s13, s13, s12
90016c68:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016c6c:	e9d5 2300 	ldrd	r2, r3, [r5]
90016c70:	edc5 6a07 	vstr	s13, [r5, #28]
90016c74:	441a      	add	r2, r3
90016c76:	696b      	ldr	r3, [r5, #20]
90016c78:	3301      	adds	r3, #1
90016c7a:	602a      	str	r2, [r5, #0]
90016c7c:	616b      	str	r3, [r5, #20]
90016c7e:	69ab      	ldr	r3, [r5, #24]
90016c80:	3b01      	subs	r3, #1
90016c82:	61ab      	str	r3, [r5, #24]
90016c84:	692b      	ldr	r3, [r5, #16]
90016c86:	440b      	add	r3, r1
90016c88:	68e9      	ldr	r1, [r5, #12]
90016c8a:	428b      	cmp	r3, r1
90016c8c:	612b      	str	r3, [r5, #16]
90016c8e:	db15      	blt.n	90016cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90016c90:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90016c94:	3201      	adds	r2, #1
90016c96:	1a5b      	subs	r3, r3, r1
90016c98:	ee76 6a26 	vadd.f32	s13, s12, s13
90016c9c:	602a      	str	r2, [r5, #0]
90016c9e:	612b      	str	r3, [r5, #16]
90016ca0:	edc5 6a07 	vstr	s13, [r5, #28]
90016ca4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90016ca8:	ee36 7a87 	vadd.f32	s14, s13, s14
90016cac:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016cb0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90016cb4:	ee77 7a27 	vadd.f32	s15, s14, s15
90016cb8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016cbc:	3f01      	subs	r7, #1
90016cbe:	e757      	b.n	90016b70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90016cc0:	4299      	cmp	r1, r3
90016cc2:	dc13      	bgt.n	90016cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90016cc4:	429a      	cmp	r2, r3
90016cc6:	da14      	bge.n	90016cf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90016cc8:	2502      	movs	r5, #2
90016cca:	2703      	movs	r7, #3
90016ccc:	f04f 0800 	mov.w	r8, #0
90016cd0:	46a9      	mov	r9, r5
90016cd2:	f04f 0a01 	mov.w	sl, #1
90016cd6:	e6ef      	b.n	90016ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016cd8:	2501      	movs	r5, #1
90016cda:	2700      	movs	r7, #0
90016cdc:	46a9      	mov	r9, r5
90016cde:	46b8      	mov	r8, r7
90016ce0:	f04f 0a02 	mov.w	sl, #2
90016ce4:	e6e8      	b.n	90016ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016ce6:	2501      	movs	r5, #1
90016ce8:	2702      	movs	r7, #2
90016cea:	e6e1      	b.n	90016ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90016cec:	2500      	movs	r5, #0
90016cee:	2701      	movs	r7, #1
90016cf0:	e7f4      	b.n	90016cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90016cf2:	2702      	movs	r7, #2
90016cf4:	2503      	movs	r5, #3
90016cf6:	f04f 0900 	mov.w	r9, #0
90016cfa:	46b8      	mov	r8, r7
90016cfc:	e7e9      	b.n	90016cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90016cfe:	4613      	mov	r3, r2
90016d00:	e728      	b.n	90016b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90016d02:	bf00      	nop
90016d04:	24039ac4 	.word	0x24039ac4
90016d08:	fffd8f01 	.word	0xfffd8f01
90016d0c:	00027100 	.word	0x00027100
90016d10:	0004e1ff 	.word	0x0004e1ff
90016d14:	0004e1fe 	.word	0x0004e1fe
90016d18:	24039acc 	.word	0x24039acc
90016d1c:	4613      	mov	r3, r2
90016d1e:	992b      	ldr	r1, [sp, #172]	; 0xac
90016d20:	469e      	mov	lr, r3
90016d22:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90016d24:	469c      	mov	ip, r3
90016d26:	9111      	str	r1, [sp, #68]	; 0x44
90016d28:	f04f 0900 	mov.w	r9, #0
90016d2c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90016d30:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90016d34:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90016d38:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90016d3c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90016d40:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90016d44:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90016d48:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90016d4c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90016d50:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90016d54:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90016d58:	f1bc 0f00 	cmp.w	ip, #0
90016d5c:	d147      	bne.n	90016dee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90016d5e:	eb03 0c07 	add.w	ip, r3, r7
90016d62:	1ad7      	subs	r7, r2, r3
90016d64:	f1b9 0f00 	cmp.w	r9, #0
90016d68:	d009      	beq.n	90016d7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90016d6a:	9029      	str	r0, [sp, #164]	; 0xa4
90016d6c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90016d70:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90016d74:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90016d78:	912d      	str	r1, [sp, #180]	; 0xb4
90016d7a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90016d7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
90016d80:	f04f 0800 	mov.w	r8, #0
90016d84:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90016d88:	9111      	str	r1, [sp, #68]	; 0x44
90016d8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90016d8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90016d92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90016d96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90016d9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90016d9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90016da2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90016da6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90016daa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90016dae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90016db2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90016db6:	f1be 0f00 	cmp.w	lr, #0
90016dba:	d031      	beq.n	90016e20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90016dbc:	9e11      	ldr	r6, [sp, #68]	; 0x44
90016dbe:	4450      	add	r0, sl
90016dc0:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016dc4:	4431      	add	r1, r6
90016dc6:	ee37 7a04 	vadd.f32	s14, s14, s8
90016dca:	ee77 7aa3 	vadd.f32	s15, s15, s7
90016dce:	4549      	cmp	r1, r9
90016dd0:	db08      	blt.n	90016de4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90016dd2:	ee77 7a85 	vadd.f32	s15, s15, s10
90016dd6:	3001      	adds	r0, #1
90016dd8:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016ddc:	eba1 0109 	sub.w	r1, r1, r9
90016de0:	ee37 7a06 	vadd.f32	s14, s14, s12
90016de4:	f10e 3eff 	add.w	lr, lr, #4294967295
90016de8:	f04f 0801 	mov.w	r8, #1
90016dec:	e7e3      	b.n	90016db6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90016dee:	9e11      	ldr	r6, [sp, #68]	; 0x44
90016df0:	4450      	add	r0, sl
90016df2:	ee37 7a24 	vadd.f32	s14, s14, s9
90016df6:	4431      	add	r1, r6
90016df8:	ee77 7a84 	vadd.f32	s15, s15, s8
90016dfc:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016e00:	4541      	cmp	r1, r8
90016e02:	db08      	blt.n	90016e16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90016e04:	ee76 6a85 	vadd.f32	s13, s13, s10
90016e08:	3001      	adds	r0, #1
90016e0a:	ee37 7a25 	vadd.f32	s14, s14, s11
90016e0e:	eba1 0108 	sub.w	r1, r1, r8
90016e12:	ee77 7a86 	vadd.f32	s15, s15, s12
90016e16:	f10c 3cff 	add.w	ip, ip, #4294967295
90016e1a:	f04f 0901 	mov.w	r9, #1
90016e1e:	e79b      	b.n	90016d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90016e20:	449c      	add	ip, r3
90016e22:	1aff      	subs	r7, r7, r3
90016e24:	f1b8 0f00 	cmp.w	r8, #0
90016e28:	d009      	beq.n	90016e3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90016e2a:	9019      	str	r0, [sp, #100]	; 0x64
90016e2c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90016e30:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90016e34:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90016e38:	911d      	str	r1, [sp, #116]	; 0x74
90016e3a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90016e3e:	1ad2      	subs	r2, r2, r3
90016e40:	e68b      	b.n	90016b5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016e42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90016e44:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90016e46:	2b00      	cmp	r3, #0
90016e48:	f000 80d1 	beq.w	90016fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90016e4c:	ad19      	add	r5, sp, #100	; 0x64
90016e4e:	ac39      	add	r4, sp, #228	; 0xe4
90016e50:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016e52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016e56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016e5a:	930c      	str	r3, [sp, #48]	; 0x30
90016e5c:	990c      	ldr	r1, [sp, #48]	; 0x30
90016e5e:	6963      	ldr	r3, [r4, #20]
90016e60:	440b      	add	r3, r1
90016e62:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016e66:	4408      	add	r0, r1
90016e68:	b200      	sxth	r0, r0
90016e6a:	4283      	cmp	r3, r0
90016e6c:	900d      	str	r0, [sp, #52]	; 0x34
90016e6e:	f280 80c1 	bge.w	90016ff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90016e72:	428b      	cmp	r3, r1
90016e74:	da08      	bge.n	90016e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016e76:	2a00      	cmp	r2, #0
90016e78:	dd06      	ble.n	90016e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016e7a:	1acb      	subs	r3, r1, r3
90016e7c:	429a      	cmp	r2, r3
90016e7e:	f2c0 80bb 	blt.w	90016ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90016e82:	2b00      	cmp	r3, #0
90016e84:	f300 80b9 	bgt.w	90016ffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90016e88:	6967      	ldr	r7, [r4, #20]
90016e8a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90016e8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016e90:	443b      	add	r3, r7
90016e92:	461f      	mov	r7, r3
90016e94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016e96:	1bdf      	subs	r7, r3, r7
90016e98:	4297      	cmp	r7, r2
90016e9a:	bfa8      	it	ge
90016e9c:	4617      	movge	r7, r2
90016e9e:	2f00      	cmp	r7, #0
90016ea0:	f340 813c 	ble.w	9001711c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90016ea4:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016ea6:	6829      	ldr	r1, [r5, #0]
90016ea8:	f9b3 2000 	ldrsh.w	r2, [r3]
90016eac:	f9bb 3000 	ldrsh.w	r3, [fp]
90016eb0:	4411      	add	r1, r2
90016eb2:	6820      	ldr	r0, [r4, #0]
90016eb4:	4299      	cmp	r1, r3
90016eb6:	dd1a      	ble.n	90016eee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016eb8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016ebc:	4402      	add	r2, r0
90016ebe:	440b      	add	r3, r1
90016ec0:	b21b      	sxth	r3, r3
90016ec2:	429a      	cmp	r2, r3
90016ec4:	dc13      	bgt.n	90016eee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016ec6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90016ec8:	a912      	add	r1, sp, #72	; 0x48
90016eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016ecc:	9809      	ldr	r0, [sp, #36]	; 0x24
90016ece:	681b      	ldr	r3, [r3, #0]
90016ed0:	9206      	str	r2, [sp, #24]
90016ed2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016ed4:	9500      	str	r5, [sp, #0]
90016ed6:	9205      	str	r2, [sp, #20]
90016ed8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90016eda:	e9cd b203 	strd	fp, r2, [sp, #12]
90016ede:	9a64      	ldr	r2, [sp, #400]	; 0x190
90016ee0:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016ee4:	aa49      	add	r2, sp, #292	; 0x124
90016ee6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90016eea:	4623      	mov	r3, r4
90016eec:	47c8      	blx	r9
90016eee:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90016ef2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90016ef6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90016efa:	ee37 7a27 	vadd.f32	s14, s14, s15
90016efe:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90016f02:	68a1      	ldr	r1, [r4, #8]
90016f04:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016f08:	ed94 6a08 	vldr	s12, [r4, #32]
90016f0c:	edd4 6a07 	vldr	s13, [r4, #28]
90016f10:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016f14:	ee76 6a86 	vadd.f32	s13, s13, s12
90016f18:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016f1c:	e9d4 2300 	ldrd	r2, r3, [r4]
90016f20:	edc4 6a07 	vstr	s13, [r4, #28]
90016f24:	441a      	add	r2, r3
90016f26:	6963      	ldr	r3, [r4, #20]
90016f28:	3301      	adds	r3, #1
90016f2a:	6022      	str	r2, [r4, #0]
90016f2c:	6163      	str	r3, [r4, #20]
90016f2e:	69a3      	ldr	r3, [r4, #24]
90016f30:	3b01      	subs	r3, #1
90016f32:	61a3      	str	r3, [r4, #24]
90016f34:	6923      	ldr	r3, [r4, #16]
90016f36:	440b      	add	r3, r1
90016f38:	68e1      	ldr	r1, [r4, #12]
90016f3a:	428b      	cmp	r3, r1
90016f3c:	6123      	str	r3, [r4, #16]
90016f3e:	db15      	blt.n	90016f6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90016f40:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90016f44:	3201      	adds	r2, #1
90016f46:	1a5b      	subs	r3, r3, r1
90016f48:	ee76 6a26 	vadd.f32	s13, s12, s13
90016f4c:	6022      	str	r2, [r4, #0]
90016f4e:	6123      	str	r3, [r4, #16]
90016f50:	edc4 6a07 	vstr	s13, [r4, #28]
90016f54:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90016f58:	ee36 7a87 	vadd.f32	s14, s13, s14
90016f5c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016f60:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90016f64:	ee77 7a27 	vadd.f32	s15, s14, s15
90016f68:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016f6c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90016f70:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90016f74:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90016f78:	ee37 7a27 	vadd.f32	s14, s14, s15
90016f7c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90016f80:	68a9      	ldr	r1, [r5, #8]
90016f82:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016f86:	ed95 6a08 	vldr	s12, [r5, #32]
90016f8a:	edd5 6a07 	vldr	s13, [r5, #28]
90016f8e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016f92:	ee76 6a86 	vadd.f32	s13, s13, s12
90016f96:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016f9a:	e9d5 2300 	ldrd	r2, r3, [r5]
90016f9e:	edc5 6a07 	vstr	s13, [r5, #28]
90016fa2:	441a      	add	r2, r3
90016fa4:	696b      	ldr	r3, [r5, #20]
90016fa6:	3301      	adds	r3, #1
90016fa8:	602a      	str	r2, [r5, #0]
90016faa:	616b      	str	r3, [r5, #20]
90016fac:	69ab      	ldr	r3, [r5, #24]
90016fae:	3b01      	subs	r3, #1
90016fb0:	61ab      	str	r3, [r5, #24]
90016fb2:	692b      	ldr	r3, [r5, #16]
90016fb4:	440b      	add	r3, r1
90016fb6:	68e9      	ldr	r1, [r5, #12]
90016fb8:	428b      	cmp	r3, r1
90016fba:	612b      	str	r3, [r5, #16]
90016fbc:	db15      	blt.n	90016fea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90016fbe:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90016fc2:	3201      	adds	r2, #1
90016fc4:	1a5b      	subs	r3, r3, r1
90016fc6:	ee76 6a26 	vadd.f32	s13, s12, s13
90016fca:	602a      	str	r2, [r5, #0]
90016fcc:	612b      	str	r3, [r5, #16]
90016fce:	edc5 6a07 	vstr	s13, [r5, #28]
90016fd2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90016fd6:	ee36 7a87 	vadd.f32	s14, s13, s14
90016fda:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016fde:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90016fe2:	ee77 7a27 	vadd.f32	s15, s14, s15
90016fe6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016fea:	3f01      	subs	r7, #1
90016fec:	e757      	b.n	90016e9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90016fee:	ad39      	add	r5, sp, #228	; 0xe4
90016ff0:	ac19      	add	r4, sp, #100	; 0x64
90016ff2:	e72d      	b.n	90016e50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90016ff4:	4613      	mov	r3, r2
90016ff6:	e744      	b.n	90016e82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90016ff8:	4613      	mov	r3, r2
90016ffa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90016ffc:	469e      	mov	lr, r3
90016ffe:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90017002:	461f      	mov	r7, r3
90017004:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90017008:	f04f 0900 	mov.w	r9, #0
9001700c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90017010:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90017014:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90017018:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
9001701c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90017020:	993d      	ldr	r1, [sp, #244]	; 0xf4
90017022:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90017026:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
9001702a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
9001702e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90017032:	960e      	str	r6, [sp, #56]	; 0x38
90017034:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90017038:	2f00      	cmp	r7, #0
9001703a:	d146      	bne.n	900170ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001703c:	449c      	add	ip, r3
9001703e:	1ad7      	subs	r7, r2, r3
90017040:	f1b9 0f00 	cmp.w	r9, #0
90017044:	d009      	beq.n	9001705a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90017046:	9039      	str	r0, [sp, #228]	; 0xe4
90017048:	913d      	str	r1, [sp, #244]	; 0xf4
9001704a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9001704e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90017052:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90017056:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
9001705a:	991b      	ldr	r1, [sp, #108]	; 0x6c
9001705c:	f04f 0800 	mov.w	r8, #0
90017060:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90017064:	910e      	str	r1, [sp, #56]	; 0x38
90017066:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9001706a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9001706e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90017072:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90017076:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9001707a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9001707e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90017082:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90017086:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9001708a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001708e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90017092:	f1be 0f00 	cmp.w	lr, #0
90017096:	d030      	beq.n	900170fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90017098:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9001709a:	4450      	add	r0, sl
9001709c:	ee76 6aa4 	vadd.f32	s13, s13, s9
900170a0:	4431      	add	r1, r6
900170a2:	ee37 7a04 	vadd.f32	s14, s14, s8
900170a6:	ee77 7aa3 	vadd.f32	s15, s15, s7
900170aa:	4549      	cmp	r1, r9
900170ac:	db08      	blt.n	900170c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900170ae:	ee77 7a85 	vadd.f32	s15, s15, s10
900170b2:	3001      	adds	r0, #1
900170b4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900170b8:	eba1 0109 	sub.w	r1, r1, r9
900170bc:	ee37 7a06 	vadd.f32	s14, s14, s12
900170c0:	f10e 3eff 	add.w	lr, lr, #4294967295
900170c4:	f04f 0801 	mov.w	r8, #1
900170c8:	e7e3      	b.n	90017092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
900170ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
900170cc:	4450      	add	r0, sl
900170ce:	ee37 7a24 	vadd.f32	s14, s14, s9
900170d2:	4431      	add	r1, r6
900170d4:	ee77 7a84 	vadd.f32	s15, s15, s8
900170d8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900170dc:	4541      	cmp	r1, r8
900170de:	db08      	blt.n	900170f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900170e0:	ee76 6a85 	vadd.f32	s13, s13, s10
900170e4:	3001      	adds	r0, #1
900170e6:	ee37 7a25 	vadd.f32	s14, s14, s11
900170ea:	eba1 0108 	sub.w	r1, r1, r8
900170ee:	ee77 7a86 	vadd.f32	s15, s15, s12
900170f2:	3f01      	subs	r7, #1
900170f4:	f04f 0901 	mov.w	r9, #1
900170f8:	e79e      	b.n	90017038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900170fa:	449c      	add	ip, r3
900170fc:	1aff      	subs	r7, r7, r3
900170fe:	f1b8 0f00 	cmp.w	r8, #0
90017102:	d009      	beq.n	90017118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90017104:	9019      	str	r0, [sp, #100]	; 0x64
90017106:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9001710a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9001710e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90017112:	911d      	str	r1, [sp, #116]	; 0x74
90017114:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90017118:	1ad2      	subs	r2, r2, r3
9001711a:	e6b5      	b.n	90016e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001711c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001711e:	681b      	ldr	r3, [r3, #0]
90017120:	b923      	cbnz	r3, 9001712c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017122:	4b04      	ldr	r3, [pc, #16]	; (90017134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90017124:	6818      	ldr	r0, [r3, #0]
90017126:	6803      	ldr	r3, [r0, #0]
90017128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001712a:	4798      	blx	r3
9001712c:	b05b      	add	sp, #364	; 0x16c
9001712e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017132:	bf00      	nop
90017134:	24039acc 	.word	0x24039acc

90017138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90017138:	b570      	push	{r4, r5, r6, lr}
9001713a:	4604      	mov	r4, r0
9001713c:	2500      	movs	r5, #0
9001713e:	9805      	ldr	r0, [sp, #20]
90017140:	f89d 601c 	ldrb.w	r6, [sp, #28]
90017144:	6061      	str	r1, [r4, #4]
90017146:	8263      	strh	r3, [r4, #18]
90017148:	f89d 1010 	ldrb.w	r1, [sp, #16]
9001714c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017150:	8025      	strh	r5, [r4, #0]
90017152:	7221      	strb	r1, [r4, #8]
90017154:	7266      	strb	r6, [r4, #9]
90017156:	60e0      	str	r0, [r4, #12]
90017158:	8222      	strh	r2, [r4, #16]
9001715a:	82a3      	strh	r3, [r4, #20]
9001715c:	82e5      	strh	r5, [r4, #22]
9001715e:	8325      	strh	r5, [r4, #24]
90017160:	8365      	strh	r5, [r4, #26]
90017162:	83a5      	strh	r5, [r4, #28]
90017164:	83e5      	strh	r5, [r4, #30]
90017166:	8425      	strh	r5, [r4, #32]
90017168:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
9001716c:	b32e      	cbz	r6, 900171ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001716e:	6803      	ldr	r3, [r0, #0]
90017170:	695b      	ldr	r3, [r3, #20]
90017172:	4798      	blx	r3
90017174:	4606      	mov	r6, r0
90017176:	b300      	cbz	r0, 900171ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017178:	68e0      	ldr	r0, [r4, #12]
9001717a:	4631      	mov	r1, r6
9001717c:	6803      	ldr	r3, [r0, #0]
9001717e:	68db      	ldr	r3, [r3, #12]
90017180:	4798      	blx	r3
90017182:	4605      	mov	r5, r0
90017184:	b1c8      	cbz	r0, 900171ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017186:	7b43      	ldrb	r3, [r0, #13]
90017188:	7a82      	ldrb	r2, [r0, #10]
9001718a:	005b      	lsls	r3, r3, #1
9001718c:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017190:	4313      	orrs	r3, r2
90017192:	8423      	strh	r3, [r4, #32]
90017194:	7a63      	ldrb	r3, [r4, #9]
90017196:	2b06      	cmp	r3, #6
90017198:	d10f      	bne.n	900171ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001719a:	68e0      	ldr	r0, [r4, #12]
9001719c:	462a      	mov	r2, r5
9001719e:	4631      	mov	r1, r6
900171a0:	6803      	ldr	r3, [r0, #0]
900171a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900171a4:	4798      	blx	r3
900171a6:	7b6b      	ldrb	r3, [r5, #13]
900171a8:	005b      	lsls	r3, r3, #1
900171aa:	f403 7280 	and.w	r2, r3, #256	; 0x100
900171ae:	7aab      	ldrb	r3, [r5, #10]
900171b0:	4313      	orrs	r3, r2
900171b2:	4418      	add	r0, r3
900171b4:	8c23      	ldrh	r3, [r4, #32]
900171b6:	4418      	add	r0, r3
900171b8:	8420      	strh	r0, [r4, #32]
900171ba:	4620      	mov	r0, r4
900171bc:	bd70      	pop	{r4, r5, r6, pc}

900171be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900171be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900171c2:	2400      	movs	r4, #0
900171c4:	b085      	sub	sp, #20
900171c6:	4681      	mov	r9, r0
900171c8:	4688      	mov	r8, r1
900171ca:	4692      	mov	sl, r2
900171cc:	469b      	mov	fp, r3
900171ce:	4627      	mov	r7, r4
900171d0:	4625      	mov	r5, r4
900171d2:	4626      	mov	r6, r4
900171d4:	4554      	cmp	r4, sl
900171d6:	da2a      	bge.n	9001722e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900171d8:	2300      	movs	r3, #0
900171da:	9303      	str	r3, [sp, #12]
900171dc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900171e0:	429d      	cmp	r5, r3
900171e2:	d004      	beq.n	900171ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900171e4:	f242 030b 	movw	r3, #8203	; 0x200b
900171e8:	429d      	cmp	r5, r3
900171ea:	bf18      	it	ne
900171ec:	462f      	movne	r7, r5
900171ee:	ab03      	add	r3, sp, #12
900171f0:	4642      	mov	r2, r8
900171f2:	4659      	mov	r1, fp
900171f4:	4648      	mov	r0, r9
900171f6:	f003 f8f5 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900171fa:	4605      	mov	r5, r0
900171fc:	b1b8      	cbz	r0, 9001722e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900171fe:	280a      	cmp	r0, #10
90017200:	d015      	beq.n	9001722e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017202:	9a03      	ldr	r2, [sp, #12]
90017204:	b18a      	cbz	r2, 9001722a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90017206:	7b50      	ldrb	r0, [r2, #13]
90017208:	4639      	mov	r1, r7
9001720a:	7a93      	ldrb	r3, [r2, #10]
9001720c:	0040      	lsls	r0, r0, #1
9001720e:	8895      	ldrh	r5, [r2, #4]
90017210:	f400 7080 	and.w	r0, r0, #256	; 0x100
90017214:	4303      	orrs	r3, r0
90017216:	4640      	mov	r0, r8
90017218:	9301      	str	r3, [sp, #4]
9001721a:	f8d8 3000 	ldr.w	r3, [r8]
9001721e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017220:	4798      	blx	r3
90017222:	9b01      	ldr	r3, [sp, #4]
90017224:	4418      	add	r0, r3
90017226:	4406      	add	r6, r0
90017228:	b2b6      	uxth	r6, r6
9001722a:	3401      	adds	r4, #1
9001722c:	e7d2      	b.n	900171d4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001722e:	4630      	mov	r0, r6
90017230:	b005      	add	sp, #20
90017232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017236 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90017236:	2a02      	cmp	r2, #2
90017238:	b530      	push	{r4, r5, lr}
9001723a:	d011      	beq.n	90017260 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9001723c:	2a03      	cmp	r2, #3
9001723e:	d01c      	beq.n	9001727a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90017240:	2a01      	cmp	r2, #1
90017242:	d10c      	bne.n	9001725e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90017244:	888b      	ldrh	r3, [r1, #4]
90017246:	8801      	ldrh	r1, [r0, #0]
90017248:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9001724c:	1a5b      	subs	r3, r3, r1
9001724e:	8844      	ldrh	r4, [r0, #2]
90017250:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017254:	1a9b      	subs	r3, r3, r2
90017256:	8004      	strh	r4, [r0, #0]
90017258:	8081      	strh	r1, [r0, #4]
9001725a:	8043      	strh	r3, [r0, #2]
9001725c:	80c2      	strh	r2, [r0, #6]
9001725e:	bd30      	pop	{r4, r5, pc}
90017260:	88cb      	ldrh	r3, [r1, #6]
90017262:	8842      	ldrh	r2, [r0, #2]
90017264:	1a9b      	subs	r3, r3, r2
90017266:	88c2      	ldrh	r2, [r0, #6]
90017268:	1a9b      	subs	r3, r3, r2
9001726a:	888a      	ldrh	r2, [r1, #4]
9001726c:	8801      	ldrh	r1, [r0, #0]
9001726e:	8043      	strh	r3, [r0, #2]
90017270:	1a52      	subs	r2, r2, r1
90017272:	8881      	ldrh	r1, [r0, #4]
90017274:	1a52      	subs	r2, r2, r1
90017276:	8002      	strh	r2, [r0, #0]
90017278:	e7f1      	b.n	9001725e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001727a:	88cb      	ldrh	r3, [r1, #6]
9001727c:	8841      	ldrh	r1, [r0, #2]
9001727e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90017282:	1a5b      	subs	r3, r3, r1
90017284:	f9b0 5000 	ldrsh.w	r5, [r0]
90017288:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
9001728c:	1a9b      	subs	r3, r3, r2
9001728e:	8045      	strh	r5, [r0, #2]
90017290:	8082      	strh	r2, [r0, #4]
90017292:	8003      	strh	r3, [r0, #0]
90017294:	80c4      	strh	r4, [r0, #6]
90017296:	e7e2      	b.n	9001725e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90017298 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90017298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001729c:	b09f      	sub	sp, #124	; 0x7c
9001729e:	9116      	str	r1, [sp, #88]	; 0x58
900172a0:	9317      	str	r3, [sp, #92]	; 0x5c
900172a2:	9929      	ldr	r1, [sp, #164]	; 0xa4
900172a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900172a6:	8809      	ldrh	r1, [r1, #0]
900172a8:	889b      	ldrh	r3, [r3, #4]
900172aa:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
900172ae:	440b      	add	r3, r1
900172b0:	9212      	str	r2, [sp, #72]	; 0x48
900172b2:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
900172b6:	b21b      	sxth	r3, r3
900172b8:	9011      	str	r0, [sp, #68]	; 0x44
900172ba:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
900172be:	9310      	str	r3, [sp, #64]	; 0x40
900172c0:	f8d8 3000 	ldr.w	r3, [r8]
900172c4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
900172c8:	7b19      	ldrb	r1, [r3, #12]
900172ca:	7adb      	ldrb	r3, [r3, #11]
900172cc:	9114      	str	r1, [sp, #80]	; 0x50
900172ce:	9315      	str	r3, [sp, #84]	; 0x54
900172d0:	2a00      	cmp	r2, #0
900172d2:	d06a      	beq.n	900173aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
900172d4:	f898 3010 	ldrb.w	r3, [r8, #16]
900172d8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900172da:	2b06      	cmp	r3, #6
900172dc:	bf14      	ite	ne
900172de:	2301      	movne	r3, #1
900172e0:	2302      	moveq	r3, #2
900172e2:	4413      	add	r3, r2
900172e4:	f04f 0900 	mov.w	r9, #0
900172e8:	930f      	str	r3, [sp, #60]	; 0x3c
900172ea:	464c      	mov	r4, r9
900172ec:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
900172f0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
900172f4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
900172f8:	4293      	cmp	r3, r2
900172fa:	f280 808f 	bge.w	9001741c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900172fe:	2300      	movs	r3, #0
90017300:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90017304:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90017308:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001730c:	429c      	cmp	r4, r3
9001730e:	d006      	beq.n	9001731e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90017310:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017312:	f242 020b 	movw	r2, #8203	; 0x200b
90017316:	4294      	cmp	r4, r2
90017318:	bf18      	it	ne
9001731a:	4623      	movne	r3, r4
9001731c:	930d      	str	r3, [sp, #52]	; 0x34
9001731e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017320:	992d      	ldr	r1, [sp, #180]	; 0xb4
90017322:	f8d8 2000 	ldr.w	r2, [r8]
90017326:	428b      	cmp	r3, r1
90017328:	db41      	blt.n	900173ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
9001732a:	6813      	ldr	r3, [r2, #0]
9001732c:	4610      	mov	r0, r2
9001732e:	695b      	ldr	r3, [r3, #20]
90017330:	4798      	blx	r3
90017332:	4604      	mov	r4, r0
90017334:	f8d8 0000 	ldr.w	r0, [r8]
90017338:	aa1d      	add	r2, sp, #116	; 0x74
9001733a:	4621      	mov	r1, r4
9001733c:	6803      	ldr	r3, [r0, #0]
9001733e:	689d      	ldr	r5, [r3, #8]
90017340:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90017344:	47a8      	blx	r5
90017346:	901c      	str	r0, [sp, #112]	; 0x70
90017348:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001734c:	429c      	cmp	r4, r3
9001734e:	f000 80ec 	beq.w	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017352:	f242 030b 	movw	r3, #8203	; 0x200b
90017356:	429c      	cmp	r4, r3
90017358:	f000 80e7 	beq.w	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001735c:	2c00      	cmp	r4, #0
9001735e:	f000 80f9 	beq.w	90017554 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90017362:	2c0a      	cmp	r4, #10
90017364:	d060      	beq.n	90017428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90017366:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90017368:	b36a      	cbz	r2, 900173c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001736a:	8894      	ldrh	r4, [r2, #4]
9001736c:	f1bb 0f00 	cmp.w	fp, #0
90017370:	d03b      	beq.n	900173ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90017372:	f892 900d 	ldrb.w	r9, [r2, #13]
90017376:	f1bb 0f01 	cmp.w	fp, #1
9001737a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001737e:	f409 7380 	and.w	r3, r9, #256	; 0x100
90017382:	f892 900a 	ldrb.w	r9, [r2, #10]
90017386:	ea49 0903 	orr.w	r9, r9, r3
9001738a:	d134      	bne.n	900173f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
9001738c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001738e:	eba6 0609 	sub.w	r6, r6, r9
90017392:	2b00      	cmp	r3, #0
90017394:	d14f      	bne.n	90017436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017396:	9a14      	ldr	r2, [sp, #80]	; 0x50
90017398:	eb09 0306 	add.w	r3, r9, r6
9001739c:	4413      	add	r3, r2
9001739e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900173a0:	f9b2 2000 	ldrsh.w	r2, [r2]
900173a4:	4293      	cmp	r3, r2
900173a6:	da51      	bge.n	9001744c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
900173a8:	e038      	b.n	9001741c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900173aa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900173ac:	e79a      	b.n	900172e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
900173ae:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900173b2:	4659      	mov	r1, fp
900173b4:	982c      	ldr	r0, [sp, #176]	; 0xb0
900173b6:	9301      	str	r3, [sp, #4]
900173b8:	ab1d      	add	r3, sp, #116	; 0x74
900173ba:	9300      	str	r3, [sp, #0]
900173bc:	ab1c      	add	r3, sp, #112	; 0x70
900173be:	f003 f85a 	bl	9001a476 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900173c2:	4604      	mov	r4, r0
900173c4:	e7c0      	b.n	90017348 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900173c6:	f8d8 0000 	ldr.w	r0, [r8]
900173ca:	6803      	ldr	r3, [r0, #0]
900173cc:	691b      	ldr	r3, [r3, #16]
900173ce:	4798      	blx	r3
900173d0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900173d4:	4298      	cmp	r0, r3
900173d6:	f000 80a8 	beq.w	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900173da:	f242 030b 	movw	r3, #8203	; 0x200b
900173de:	4298      	cmp	r0, r3
900173e0:	f000 80a3 	beq.w	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900173e4:	f1bb 0f00 	cmp.w	fp, #0
900173e8:	d100      	bne.n	900173ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
900173ea:	444e      	add	r6, r9
900173ec:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900173ee:	2a00      	cmp	r2, #0
900173f0:	d1bf      	bne.n	90017372 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900173f2:	4691      	mov	r9, r2
900173f4:	e099      	b.n	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900173f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900173f8:	2b00      	cmp	r3, #0
900173fa:	f000 80ad 	beq.w	90017558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
900173fe:	f1bb 0f00 	cmp.w	fp, #0
90017402:	d118      	bne.n	90017436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017404:	f8d8 0000 	ldr.w	r0, [r8]
90017408:	990d      	ldr	r1, [sp, #52]	; 0x34
9001740a:	6803      	ldr	r3, [r0, #0]
9001740c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001740e:	4798      	blx	r3
90017410:	4406      	add	r6, r0
90017412:	9b15      	ldr	r3, [sp, #84]	; 0x54
90017414:	9a10      	ldr	r2, [sp, #64]	; 0x40
90017416:	1af3      	subs	r3, r6, r3
90017418:	4293      	cmp	r3, r2
9001741a:	dd17      	ble.n	9001744c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
9001741c:	2c00      	cmp	r4, #0
9001741e:	f000 8099 	beq.w	90017554 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90017422:	2c0a      	cmp	r4, #10
90017424:	f040 8087 	bne.w	90017536 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
90017428:	240a      	movs	r4, #10
9001742a:	fab4 f084 	clz	r0, r4
9001742e:	0940      	lsrs	r0, r0, #5
90017430:	b01f      	add	sp, #124	; 0x7c
90017432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017436:	f8d8 0000 	ldr.w	r0, [r8]
9001743a:	990d      	ldr	r1, [sp, #52]	; 0x34
9001743c:	6803      	ldr	r3, [r0, #0]
9001743e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017440:	4798      	blx	r3
90017442:	f1bb 0f01 	cmp.w	fp, #1
90017446:	eba6 0600 	sub.w	r6, r6, r0
9001744a:	d0a4      	beq.n	90017396 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001744c:	981c      	ldr	r0, [sp, #112]	; 0x70
9001744e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017450:	f990 1009 	ldrsb.w	r1, [r0, #9]
90017454:	f9b3 7000 	ldrsh.w	r7, [r3]
90017458:	7b43      	ldrb	r3, [r0, #13]
9001745a:	4431      	add	r1, r6
9001745c:	015b      	lsls	r3, r3, #5
9001745e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017462:	7983      	ldrb	r3, [r0, #6]
90017464:	4313      	orrs	r3, r2
90017466:	440b      	add	r3, r1
90017468:	42bb      	cmp	r3, r7
9001746a:	db5e      	blt.n	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001746c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001746e:	4299      	cmp	r1, r3
90017470:	da5b      	bge.n	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017472:	f8d8 0000 	ldr.w	r0, [r8]
90017476:	42b7      	cmp	r7, r6
90017478:	6803      	ldr	r3, [r0, #0]
9001747a:	bfcc      	ite	gt
9001747c:	1bbf      	subgt	r7, r7, r6
9001747e:	2700      	movle	r7, #0
90017480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017482:	bfc8      	it	gt
90017484:	b2bf      	uxthgt	r7, r7
90017486:	4798      	blx	r3
90017488:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001748a:	7b5a      	ldrb	r2, [r3, #13]
9001748c:	00d1      	lsls	r1, r2, #3
9001748e:	f401 7580 	and.w	r5, r1, #256	; 0x100
90017492:	7a19      	ldrb	r1, [r3, #8]
90017494:	4329      	orrs	r1, r5
90017496:	0655      	lsls	r5, r2, #25
90017498:	9d17      	ldr	r5, [sp, #92]	; 0x5c
9001749a:	bf48      	it	mi
9001749c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
900174a0:	4405      	add	r5, r0
900174a2:	bf48      	it	mi
900174a4:	b209      	sxthmi	r1, r1
900174a6:	1a6d      	subs	r5, r5, r1
900174a8:	9929      	ldr	r1, [sp, #164]	; 0xa4
900174aa:	b2ad      	uxth	r5, r5
900174ac:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900174b0:	fa0f fa85 	sxth.w	sl, r5
900174b4:	4551      	cmp	r1, sl
900174b6:	dd3c      	ble.n	90017532 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
900174b8:	0112      	lsls	r2, r2, #4
900174ba:	79d8      	ldrb	r0, [r3, #7]
900174bc:	f402 7280 	and.w	r2, r2, #256	; 0x100
900174c0:	4302      	orrs	r2, r0
900174c2:	4492      	add	sl, r2
900174c4:	4551      	cmp	r1, sl
900174c6:	dc30      	bgt.n	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900174c8:	1b4d      	subs	r5, r1, r5
900174ca:	468a      	mov	sl, r1
900174cc:	b22d      	sxth	r5, r5
900174ce:	9319      	str	r3, [sp, #100]	; 0x64
900174d0:	b2ad      	uxth	r5, r5
900174d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
900174d4:	f8d8 0000 	ldr.w	r0, [r8]
900174d8:	681a      	ldr	r2, [r3, #0]
900174da:	6801      	ldr	r1, [r0, #0]
900174dc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
900174de:	9a1d      	ldr	r2, [sp, #116]	; 0x74
900174e0:	9313      	str	r3, [sp, #76]	; 0x4c
900174e2:	9218      	str	r2, [sp, #96]	; 0x60
900174e4:	6c09      	ldr	r1, [r1, #64]	; 0x40
900174e6:	4788      	blx	r1
900174e8:	f898 1006 	ldrb.w	r1, [r8, #6]
900174ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
900174ee:	910b      	str	r1, [sp, #44]	; 0x2c
900174f0:	f898 100e 	ldrb.w	r1, [r8, #14]
900174f4:	9a18      	ldr	r2, [sp, #96]	; 0x60
900174f6:	910a      	str	r1, [sp, #40]	; 0x28
900174f8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
900174fc:	9109      	str	r1, [sp, #36]	; 0x24
900174fe:	f8d8 1008 	ldr.w	r1, [r8, #8]
90017502:	9305      	str	r3, [sp, #20]
90017504:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017506:	9206      	str	r2, [sp, #24]
90017508:	9304      	str	r3, [sp, #16]
9001750a:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001750c:	f8cd a004 	str.w	sl, [sp, #4]
90017510:	e9cd 7502 	strd	r7, r5, [sp, #8]
90017514:	4437      	add	r7, r6
90017516:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90017518:	b23f      	sxth	r7, r7
9001751a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001751e:	9700      	str	r7, [sp, #0]
90017520:	9916      	ldr	r1, [sp, #88]	; 0x58
90017522:	681a      	ldr	r2, [r3, #0]
90017524:	9811      	ldr	r0, [sp, #68]	; 0x44
90017526:	685b      	ldr	r3, [r3, #4]
90017528:	47a8      	blx	r5
9001752a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001752c:	3301      	adds	r3, #1
9001752e:	930e      	str	r3, [sp, #56]	; 0x38
90017530:	e6e0      	b.n	900172f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
90017532:	2500      	movs	r5, #0
90017534:	e7cb      	b.n	900174ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
90017536:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90017538:	3501      	adds	r5, #1
9001753a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001753c:	429d      	cmp	r5, r3
9001753e:	f6bf af74 	bge.w	9001742a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90017542:	4659      	mov	r1, fp
90017544:	982c      	ldr	r0, [sp, #176]	; 0xb0
90017546:	f7ec ffdd 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001754a:	4604      	mov	r4, r0
9001754c:	b110      	cbz	r0, 90017554 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001754e:	280a      	cmp	r0, #10
90017550:	d1f2      	bne.n	90017538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
90017552:	e769      	b.n	90017428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90017554:	2400      	movs	r4, #0
90017556:	e768      	b.n	9001742a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90017558:	f1bb 0f00 	cmp.w	fp, #0
9001755c:	f43f af59 	beq.w	90017412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
90017560:	e774      	b.n	9001744c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

90017562 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90017562:	b530      	push	{r4, r5, lr}
90017564:	8ac4      	ldrh	r4, [r0, #22]
90017566:	8b45      	ldrh	r5, [r0, #26]
90017568:	8343      	strh	r3, [r0, #26]
9001756a:	442c      	add	r4, r5
9001756c:	1ae4      	subs	r4, r4, r3
9001756e:	8b83      	ldrh	r3, [r0, #28]
90017570:	82c4      	strh	r4, [r0, #22]
90017572:	8b04      	ldrh	r4, [r0, #24]
90017574:	4422      	add	r2, r4
90017576:	440c      	add	r4, r1
90017578:	1a59      	subs	r1, r3, r1
9001757a:	83c2      	strh	r2, [r0, #30]
9001757c:	8304      	strh	r4, [r0, #24]
9001757e:	8381      	strh	r1, [r0, #28]
90017580:	bd30      	pop	{r4, r5, pc}

90017582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017582:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017586:	4604      	mov	r4, r0
90017588:	8a47      	ldrh	r7, [r0, #18]
9001758a:	68c0      	ldr	r0, [r0, #12]
9001758c:	b085      	sub	sp, #20
9001758e:	6803      	ldr	r3, [r0, #0]
90017590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017592:	4798      	blx	r3
90017594:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017598:	7a63      	ldrb	r3, [r4, #9]
9001759a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001759e:	3b01      	subs	r3, #1
900175a0:	42b7      	cmp	r7, r6
900175a2:	bfac      	ite	ge
900175a4:	f04f 0900 	movge.w	r9, #0
900175a8:	f04f 0901 	movlt.w	r9, #1
900175ac:	2b05      	cmp	r3, #5
900175ae:	d804      	bhi.n	900175ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900175b0:	e8df f003 	tbb	[pc, r3]
900175b4:	470f0854 	.word	0x470f0854
900175b8:	4c4c      	.short	0x4c4c
900175ba:	2500      	movs	r5, #0
900175bc:	46a9      	mov	r9, r5
900175be:	462e      	mov	r6, r5
900175c0:	462f      	mov	r7, r5
900175c2:	e00e      	b.n	900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900175c4:	42b7      	cmp	r7, r6
900175c6:	f04f 0500 	mov.w	r5, #0
900175ca:	bfb4      	ite	lt
900175cc:	2600      	movlt	r6, #0
900175ce:	2601      	movge	r6, #1
900175d0:	e7f6      	b.n	900175c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900175d2:	42b7      	cmp	r7, r6
900175d4:	464d      	mov	r5, r9
900175d6:	f04f 0900 	mov.w	r9, #0
900175da:	bfb4      	ite	lt
900175dc:	2600      	movlt	r6, #0
900175de:	2601      	movge	r6, #1
900175e0:	464f      	mov	r7, r9
900175e2:	f04f 0800 	mov.w	r8, #0
900175e6:	f8a4 8016 	strh.w	r8, [r4, #22]
900175ea:	f8a4 8018 	strh.w	r8, [r4, #24]
900175ee:	f8cd 8004 	str.w	r8, [sp, #4]
900175f2:	2300      	movs	r3, #0
900175f4:	9303      	str	r3, [sp, #12]
900175f6:	8823      	ldrh	r3, [r4, #0]
900175f8:	2b20      	cmp	r3, #32
900175fa:	d033      	beq.n	90017664 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900175fc:	f242 010b 	movw	r1, #8203	; 0x200b
90017600:	1a5a      	subs	r2, r3, r1
90017602:	f1d2 0a00 	rsbs	sl, r2, #0
90017606:	eb4a 0a02 	adc.w	sl, sl, r2
9001760a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001760e:	4293      	cmp	r3, r2
90017610:	d008      	beq.n	90017624 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017612:	428b      	cmp	r3, r1
90017614:	9a01      	ldr	r2, [sp, #4]
90017616:	bf0e      	itee	eq
90017618:	f04f 0a01 	moveq.w	sl, #1
9001761c:	461a      	movne	r2, r3
9001761e:	f04f 0a00 	movne.w	sl, #0
90017622:	9201      	str	r2, [sp, #4]
90017624:	ab03      	add	r3, sp, #12
90017626:	68e2      	ldr	r2, [r4, #12]
90017628:	7a21      	ldrb	r1, [r4, #8]
9001762a:	6860      	ldr	r0, [r4, #4]
9001762c:	f002 feda 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017630:	8020      	strh	r0, [r4, #0]
90017632:	b9d8      	cbnz	r0, 9001766c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90017634:	8ba2      	ldrh	r2, [r4, #28]
90017636:	2300      	movs	r3, #0
90017638:	4611      	mov	r1, r2
9001763a:	4620      	mov	r0, r4
9001763c:	f7ff ff91 	bl	90017562 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017640:	e06e      	b.n	90017720 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017642:	2500      	movs	r5, #0
90017644:	2701      	movs	r7, #1
90017646:	46a9      	mov	r9, r5
90017648:	462e      	mov	r6, r5
9001764a:	e7ca      	b.n	900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001764c:	42b7      	cmp	r7, r6
9001764e:	f04f 0500 	mov.w	r5, #0
90017652:	bfb4      	ite	lt
90017654:	2700      	movlt	r7, #0
90017656:	2701      	movge	r7, #1
90017658:	462e      	mov	r6, r5
9001765a:	e7c2      	b.n	900175e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001765c:	2500      	movs	r5, #0
9001765e:	2601      	movs	r6, #1
90017660:	46a9      	mov	r9, r5
90017662:	e7ad      	b.n	900175c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017664:	9301      	str	r3, [sp, #4]
90017666:	f04f 0a01 	mov.w	sl, #1
9001766a:	e7db      	b.n	90017624 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001766c:	8b63      	ldrh	r3, [r4, #26]
9001766e:	280a      	cmp	r0, #10
90017670:	f103 0301 	add.w	r3, r3, #1
90017674:	8363      	strh	r3, [r4, #26]
90017676:	d0dd      	beq.n	90017634 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90017678:	9a03      	ldr	r2, [sp, #12]
9001767a:	bb62      	cbnz	r2, 900176d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001767c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017680:	4298      	cmp	r0, r3
90017682:	d003      	beq.n	9001768c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017684:	f242 030b 	movw	r3, #8203	; 0x200b
90017688:	4298      	cmp	r0, r3
9001768a:	d1b2      	bne.n	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001768c:	8823      	ldrh	r3, [r4, #0]
9001768e:	8ba1      	ldrh	r1, [r4, #28]
90017690:	2b20      	cmp	r3, #32
90017692:	d003      	beq.n	9001769c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017694:	f242 000b 	movw	r0, #8203	; 0x200b
90017698:	4283      	cmp	r3, r0
9001769a:	d131      	bne.n	90017700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001769c:	f1ba 0f00 	cmp.w	sl, #0
900176a0:	bf0a      	itet	eq
900176a2:	4688      	moveq	r8, r1
900176a4:	4650      	movne	r0, sl
900176a6:	2001      	moveq	r0, #1
900176a8:	440a      	add	r2, r1
900176aa:	8b23      	ldrh	r3, [r4, #24]
900176ac:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900176b0:	b292      	uxth	r2, r2
900176b2:	83a2      	strh	r2, [r4, #28]
900176b4:	4413      	add	r3, r2
900176b6:	f1b9 0f00 	cmp.w	r9, #0
900176ba:	d102      	bne.n	900176c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900176bc:	2d00      	cmp	r5, #0
900176be:	d042      	beq.n	90017746 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900176c0:	b300      	cbz	r0, 90017704 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900176c2:	8c21      	ldrh	r1, [r4, #32]
900176c4:	4419      	add	r1, r3
900176c6:	458c      	cmp	ip, r1
900176c8:	da37      	bge.n	9001773a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900176ca:	8ae1      	ldrh	r1, [r4, #22]
900176cc:	2900      	cmp	r1, #0
900176ce:	d034      	beq.n	9001773a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900176d0:	4563      	cmp	r3, ip
900176d2:	dd8e      	ble.n	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900176d4:	e01d      	b.n	90017712 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900176d6:	8893      	ldrh	r3, [r2, #4]
900176d8:	9901      	ldr	r1, [sp, #4]
900176da:	8023      	strh	r3, [r4, #0]
900176dc:	f892 b00d 	ldrb.w	fp, [r2, #13]
900176e0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900176e4:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900176e8:	f892 b00a 	ldrb.w	fp, [r2, #10]
900176ec:	ea4b 0b00 	orr.w	fp, fp, r0
900176f0:	68e0      	ldr	r0, [r4, #12]
900176f2:	6803      	ldr	r3, [r0, #0]
900176f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900176f6:	4798      	blx	r3
900176f8:	eb0b 0200 	add.w	r2, fp, r0
900176fc:	b292      	uxth	r2, r2
900176fe:	e7c5      	b.n	9001768c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017700:	2000      	movs	r0, #0
90017702:	e7d1      	b.n	900176a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017704:	4563      	cmp	r3, ip
90017706:	f77f af74 	ble.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001770a:	8ae3      	ldrh	r3, [r4, #22]
9001770c:	2b00      	cmp	r3, #0
9001770e:	f43f af70 	beq.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017712:	2301      	movs	r3, #1
90017714:	8c22      	ldrh	r2, [r4, #32]
90017716:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001771a:	8be3      	ldrh	r3, [r4, #30]
9001771c:	4413      	add	r3, r2
9001771e:	83e3      	strh	r3, [r4, #30]
90017720:	68e0      	ldr	r0, [r4, #12]
90017722:	6803      	ldr	r3, [r0, #0]
90017724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017726:	4798      	blx	r3
90017728:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001772c:	4418      	add	r0, r3
9001772e:	8a63      	ldrh	r3, [r4, #18]
90017730:	1a18      	subs	r0, r3, r0
90017732:	8260      	strh	r0, [r4, #18]
90017734:	b005      	add	sp, #20
90017736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001773a:	2300      	movs	r3, #0
9001773c:	4611      	mov	r1, r2
9001773e:	4620      	mov	r0, r4
90017740:	f7ff ff0f 	bl	90017562 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017744:	e755      	b.n	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017746:	4563      	cmp	r3, ip
90017748:	dd14      	ble.n	90017774 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001774a:	b117      	cbz	r7, 90017752 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001774c:	2301      	movs	r3, #1
9001774e:	460a      	mov	r2, r1
90017750:	e772      	b.n	90017638 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90017752:	2e00      	cmp	r6, #0
90017754:	f43f af4d 	beq.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017758:	2800      	cmp	r0, #0
9001775a:	f47f af4a 	bne.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001775e:	f1ba 0f00 	cmp.w	sl, #0
90017762:	d002      	beq.n	9001776a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90017764:	2301      	movs	r3, #1
90017766:	4642      	mov	r2, r8
90017768:	e767      	b.n	9001763a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001776a:	8ae3      	ldrh	r3, [r4, #22]
9001776c:	2b00      	cmp	r3, #0
9001776e:	f43f af40 	beq.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017772:	e7d5      	b.n	90017720 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017774:	2800      	cmp	r0, #0
90017776:	f47f af3c 	bne.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001777a:	f1ba 0f00 	cmp.w	sl, #0
9001777e:	f43f af38 	beq.w	900175f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017782:	2301      	movs	r3, #1
90017784:	4642      	mov	r2, r8
90017786:	e7da      	b.n	9001773e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90017788 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90017788:	b5f0      	push	{r4, r5, r6, r7, lr}
9001778a:	4605      	mov	r5, r0
9001778c:	b08f      	sub	sp, #60	; 0x3c
9001778e:	4617      	mov	r7, r2
90017790:	461c      	mov	r4, r3
90017792:	460e      	mov	r6, r1
90017794:	b1d1      	cbz	r1, 900177cc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90017796:	681b      	ldr	r3, [r3, #0]
90017798:	4620      	mov	r0, r4
9001779a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001779c:	4798      	blx	r3
9001779e:	4240      	negs	r0, r0
900177a0:	9603      	str	r6, [sp, #12]
900177a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
900177a6:	b200      	sxth	r0, r0
900177a8:	9700      	str	r7, [sp, #0]
900177aa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900177ae:	4629      	mov	r1, r5
900177b0:	e9cd 4001 	strd	r4, r0, [sp, #4]
900177b4:	2401      	movs	r4, #1
900177b6:	a805      	add	r0, sp, #20
900177b8:	f7ff fcbe 	bl	90017138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900177bc:	a805      	add	r0, sp, #20
900177be:	f7ff fee0 	bl	90017582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900177c2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900177c6:	b163      	cbz	r3, 900177e2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900177c8:	3401      	adds	r4, #1
900177ca:	e7f7      	b.n	900177bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900177cc:	2401      	movs	r4, #1
900177ce:	f002 fed5 	bl	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
900177d2:	280a      	cmp	r0, #10
900177d4:	4628      	mov	r0, r5
900177d6:	bf08      	it	eq
900177d8:	3401      	addeq	r4, #1
900177da:	f002 fecf 	bl	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
900177de:	2800      	cmp	r0, #0
900177e0:	d1f7      	bne.n	900177d2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900177e2:	b2a0      	uxth	r0, r4
900177e4:	b00f      	add	sp, #60	; 0x3c
900177e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900177e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900177e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900177ec:	b0e3      	sub	sp, #396	; 0x18c
900177ee:	461c      	mov	r4, r3
900177f0:	4683      	mov	fp, r0
900177f2:	4688      	mov	r8, r1
900177f4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900177f6:	2b00      	cmp	r3, #0
900177f8:	f000 8112 	beq.w	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900177fc:	6823      	ldr	r3, [r4, #0]
900177fe:	2b00      	cmp	r3, #0
90017800:	f000 810e 	beq.w	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017804:	7ba3      	ldrb	r3, [r4, #14]
90017806:	2b00      	cmp	r3, #0
90017808:	f000 810a 	beq.w	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001780c:	ad0a      	add	r5, sp, #40	; 0x28
9001780e:	6810      	ldr	r0, [r2, #0]
90017810:	6851      	ldr	r1, [r2, #4]
90017812:	462b      	mov	r3, r5
90017814:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90017818:	c303      	stmia	r3!, {r0, r1}
9001781a:	2100      	movs	r1, #0
9001781c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017820:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90017824:	4628      	mov	r0, r5
90017826:	910c      	str	r1, [sp, #48]	; 0x30
90017828:	a90c      	add	r1, sp, #48	; 0x30
9001782a:	79a2      	ldrb	r2, [r4, #6]
9001782c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017830:	f7ff fd01 	bl	90017236 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017834:	a90c      	add	r1, sp, #48	; 0x30
90017836:	79a2      	ldrb	r2, [r4, #6]
90017838:	4608      	mov	r0, r1
9001783a:	f7ff fcfc 	bl	90017236 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001783e:	a817      	add	r0, sp, #92	; 0x5c
90017840:	f002 fa6f 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90017844:	6820      	ldr	r0, [r4, #0]
90017846:	6803      	ldr	r3, [r0, #0]
90017848:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001784a:	4798      	blx	r3
9001784c:	4606      	mov	r6, r0
9001784e:	6820      	ldr	r0, [r4, #0]
90017850:	6803      	ldr	r3, [r0, #0]
90017852:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017854:	4798      	blx	r3
90017856:	4633      	mov	r3, r6
90017858:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001785a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001785c:	9000      	str	r0, [sp, #0]
9001785e:	a817      	add	r0, sp, #92	; 0x5c
90017860:	f002 faba 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017864:	6820      	ldr	r0, [r4, #0]
90017866:	f894 a004 	ldrb.w	sl, [r4, #4]
9001786a:	6803      	ldr	r3, [r0, #0]
9001786c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001786e:	4798      	blx	r3
90017870:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90017874:	6823      	ldr	r3, [r4, #0]
90017876:	4607      	mov	r7, r0
90017878:	4406      	add	r6, r0
9001787a:	a830      	add	r0, sp, #192	; 0xc0
9001787c:	f893 9009 	ldrb.w	r9, [r3, #9]
90017880:	f002 fa4f 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90017884:	7c23      	ldrb	r3, [r4, #16]
90017886:	b17b      	cbz	r3, 900178a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90017888:	6820      	ldr	r0, [r4, #0]
9001788a:	6803      	ldr	r3, [r0, #0]
9001788c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001788e:	4798      	blx	r3
90017890:	9009      	str	r0, [sp, #36]	; 0x24
90017892:	6820      	ldr	r0, [r4, #0]
90017894:	6802      	ldr	r2, [r0, #0]
90017896:	6d12      	ldr	r2, [r2, #80]	; 0x50
90017898:	4790      	blx	r2
9001789a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001789c:	9000      	str	r0, [sp, #0]
9001789e:	a830      	add	r0, sp, #192	; 0xc0
900178a0:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
900178a2:	996c      	ldr	r1, [sp, #432]	; 0x1b0
900178a4:	f002 fa98 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900178a8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
900178ac:	a80e      	add	r0, sp, #56	; 0x38
900178ae:	7be2      	ldrb	r2, [r4, #15]
900178b0:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900178b4:	1a8a      	subs	r2, r1, r2
900178b6:	7c21      	ldrb	r1, [r4, #16]
900178b8:	9103      	str	r1, [sp, #12]
900178ba:	b292      	uxth	r2, r2
900178bc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900178c0:	9102      	str	r1, [sp, #8]
900178c2:	6821      	ldr	r1, [r4, #0]
900178c4:	9101      	str	r1, [sp, #4]
900178c6:	7961      	ldrb	r1, [r4, #5]
900178c8:	9100      	str	r1, [sp, #0]
900178ca:	a930      	add	r1, sp, #192	; 0xc0
900178cc:	f7ff fc34 	bl	90017138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900178d0:	2e00      	cmp	r6, #0
900178d2:	dc5b      	bgt.n	9001798c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900178d4:	af17      	add	r7, sp, #92	; 0x5c
900178d6:	f04f 0900 	mov.w	r9, #0
900178da:	7c23      	ldrb	r3, [r4, #16]
900178dc:	2b00      	cmp	r3, #0
900178de:	f000 80b1 	beq.w	90017a44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900178e2:	a80e      	add	r0, sp, #56	; 0x38
900178e4:	f7ff fe4d 	bl	90017582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900178e8:	f1ba 0f00 	cmp.w	sl, #0
900178ec:	f000 80a5 	beq.w	90017a3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900178f0:	7c23      	ldrb	r3, [r4, #16]
900178f2:	2264      	movs	r2, #100	; 0x64
900178f4:	4639      	mov	r1, r7
900178f6:	a849      	add	r0, sp, #292	; 0x124
900178f8:	9309      	str	r3, [sp, #36]	; 0x24
900178fa:	f012 f8c9 	bl	90029a90 <memcpy>
900178fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017900:	2b00      	cmp	r3, #0
90017902:	f000 80a7 	beq.w	90017a54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90017906:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
9001790a:	7922      	ldrb	r2, [r4, #4]
9001790c:	2a01      	cmp	r2, #1
9001790e:	f040 808a 	bne.w	90017a26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90017912:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90017916:	1ac0      	subs	r0, r0, r3
90017918:	2302      	movs	r3, #2
9001791a:	fb90 f0f3 	sdiv	r0, r0, r3
9001791e:	b200      	sxth	r0, r0
90017920:	7c23      	ldrb	r3, [r4, #16]
90017922:	2b00      	cmp	r3, #0
90017924:	f000 808b 	beq.w	90017a3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90017928:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
9001792c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90017930:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017934:	e9cd 2105 	strd	r2, r1, [sp, #20]
90017938:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001793c:	2100      	movs	r1, #0
9001793e:	4410      	add	r0, r2
90017940:	4642      	mov	r2, r8
90017942:	b200      	sxth	r0, r0
90017944:	e9cd 9703 	strd	r9, r7, [sp, #12]
90017948:	9000      	str	r0, [sp, #0]
9001794a:	4658      	mov	r0, fp
9001794c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90017950:	f7ff fca2 	bl	90017298 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90017954:	2800      	cmp	r0, #0
90017956:	d163      	bne.n	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017958:	b2b2      	uxth	r2, r6
9001795a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001795e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90017962:	4413      	add	r3, r2
90017964:	1a8a      	subs	r2, r1, r2
90017966:	b21b      	sxth	r3, r3
90017968:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001796c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90017970:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017974:	2a00      	cmp	r2, #0
90017976:	d153      	bne.n	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017978:	6822      	ldr	r2, [r4, #0]
9001797a:	8869      	ldrh	r1, [r5, #2]
9001797c:	7a12      	ldrb	r2, [r2, #8]
9001797e:	1a9b      	subs	r3, r3, r2
90017980:	88ea      	ldrh	r2, [r5, #6]
90017982:	440a      	add	r2, r1
90017984:	b212      	sxth	r2, r2
90017986:	4293      	cmp	r3, r2
90017988:	dda7      	ble.n	900178da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001798a:	e049      	b.n	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001798c:	7c23      	ldrb	r3, [r4, #16]
9001798e:	444f      	add	r7, r9
90017990:	b1c3      	cbz	r3, 900179c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90017992:	f64f 79ff 	movw	r9, #65535	; 0xffff
90017996:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001799a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001799e:	443b      	add	r3, r7
900179a0:	4293      	cmp	r3, r2
900179a2:	da97      	bge.n	900178d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900179a4:	a80e      	add	r0, sp, #56	; 0x38
900179a6:	f7ff fdec 	bl	90017582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900179aa:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
900179ae:	3b01      	subs	r3, #1
900179b0:	b29b      	uxth	r3, r3
900179b2:	454b      	cmp	r3, r9
900179b4:	9309      	str	r3, [sp, #36]	; 0x24
900179b6:	d021      	beq.n	900179fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900179b8:	7961      	ldrb	r1, [r4, #5]
900179ba:	a817      	add	r0, sp, #92	; 0x5c
900179bc:	f7ec fda2 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900179c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900179c2:	e7f4      	b.n	900179ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900179c4:	fa1f f986 	uxth.w	r9, r6
900179c8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900179cc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900179d0:	443b      	add	r3, r7
900179d2:	4293      	cmp	r3, r2
900179d4:	f6bf af7e 	bge.w	900178d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900179d8:	a817      	add	r0, sp, #92	; 0x5c
900179da:	f002 fdcf 	bl	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
900179de:	b1f8      	cbz	r0, 90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900179e0:	280a      	cmp	r0, #10
900179e2:	d1f1      	bne.n	900179c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900179e4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900179e8:	444b      	add	r3, r9
900179ea:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900179ee:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900179f2:	eba3 0309 	sub.w	r3, r3, r9
900179f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900179fa:	e7e5      	b.n	900179c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900179fc:	b2b3      	uxth	r3, r6
900179fe:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90017a02:	441a      	add	r2, r3
90017a04:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90017a08:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
90017a0c:	1ad3      	subs	r3, r2, r3
90017a0e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017a12:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90017a16:	b11b      	cbz	r3, 90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a18:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
90017a1c:	2b00      	cmp	r3, #0
90017a1e:	d0ba      	beq.n	90017996 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90017a20:	b063      	add	sp, #396	; 0x18c
90017a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017a26:	2a02      	cmp	r2, #2
90017a28:	d105      	bne.n	90017a36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90017a2a:	7be2      	ldrb	r2, [r4, #15]
90017a2c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90017a30:	1a80      	subs	r0, r0, r2
90017a32:	1ac0      	subs	r0, r0, r3
90017a34:	e773      	b.n	9001791e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90017a36:	2000      	movs	r0, #0
90017a38:	e772      	b.n	90017920 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017a3a:	7be0      	ldrb	r0, [r4, #15]
90017a3c:	e770      	b.n	90017920 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017a3e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017a42:	e773      	b.n	9001792c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90017a44:	f1ba 0f00 	cmp.w	sl, #0
90017a48:	d0f7      	beq.n	90017a3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017a4a:	2264      	movs	r2, #100	; 0x64
90017a4c:	4639      	mov	r1, r7
90017a4e:	a849      	add	r0, sp, #292	; 0x124
90017a50:	f012 f81e 	bl	90029a90 <memcpy>
90017a54:	2300      	movs	r3, #0
90017a56:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017a5a:	6821      	ldr	r1, [r4, #0]
90017a5c:	a849      	add	r0, sp, #292	; 0x124
90017a5e:	f7ff fbae 	bl	900171be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017a62:	b203      	sxth	r3, r0
90017a64:	e751      	b.n	9001790a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90017a66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90017a66:	2b03      	cmp	r3, #3
90017a68:	d818      	bhi.n	90017a9c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90017a6a:	e8df f003 	tbb	[pc, r3]
90017a6e:	0602      	.short	0x0602
90017a70:	130d      	.short	0x130d
90017a72:	f9b0 2000 	ldrsh.w	r2, [r0]
90017a76:	1850      	adds	r0, r2, r1
90017a78:	4770      	bx	lr
90017a7a:	8803      	ldrh	r3, [r0, #0]
90017a7c:	8880      	ldrh	r0, [r0, #4]
90017a7e:	4418      	add	r0, r3
90017a80:	b200      	sxth	r0, r0
90017a82:	1a80      	subs	r0, r0, r2
90017a84:	3801      	subs	r0, #1
90017a86:	4770      	bx	lr
90017a88:	8803      	ldrh	r3, [r0, #0]
90017a8a:	8880      	ldrh	r0, [r0, #4]
90017a8c:	4418      	add	r0, r3
90017a8e:	b200      	sxth	r0, r0
90017a90:	1a40      	subs	r0, r0, r1
90017a92:	e7f7      	b.n	90017a84 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90017a94:	f9b0 0000 	ldrsh.w	r0, [r0]
90017a98:	4410      	add	r0, r2
90017a9a:	4770      	bx	lr
90017a9c:	2000      	movs	r0, #0
90017a9e:	4770      	bx	lr

90017aa0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90017aa0:	2b03      	cmp	r3, #3
90017aa2:	d817      	bhi.n	90017ad4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90017aa4:	e8df f003 	tbb	[pc, r3]
90017aa8:	10090602 	.word	0x10090602
90017aac:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017ab0:	1850      	adds	r0, r2, r1
90017ab2:	4770      	bx	lr
90017ab4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017ab8:	e7fa      	b.n	90017ab0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90017aba:	8843      	ldrh	r3, [r0, #2]
90017abc:	88c0      	ldrh	r0, [r0, #6]
90017abe:	4418      	add	r0, r3
90017ac0:	b200      	sxth	r0, r0
90017ac2:	1a80      	subs	r0, r0, r2
90017ac4:	3801      	subs	r0, #1
90017ac6:	4770      	bx	lr
90017ac8:	8843      	ldrh	r3, [r0, #2]
90017aca:	88c0      	ldrh	r0, [r0, #6]
90017acc:	4418      	add	r0, r3
90017ace:	b200      	sxth	r0, r0
90017ad0:	1a40      	subs	r0, r0, r1
90017ad2:	e7f7      	b.n	90017ac4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90017ad4:	2000      	movs	r0, #0
90017ad6:	4770      	bx	lr

90017ad8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90017ad8:	4b01      	ldr	r3, [pc, #4]	; (90017ae0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90017ada:	2200      	movs	r2, #0
90017adc:	601a      	str	r2, [r3, #0]
90017ade:	4770      	bx	lr
90017ae0:	24039adc 	.word	0x24039adc

90017ae4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90017ae4:	4603      	mov	r3, r0
90017ae6:	b1c8      	cbz	r0, 90017b1c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90017ae8:	0c02      	lsrs	r2, r0, #16
90017aea:	0412      	lsls	r2, r2, #16
90017aec:	b9a2      	cbnz	r2, 90017b18 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90017aee:	0403      	lsls	r3, r0, #16
90017af0:	2010      	movs	r0, #16
90017af2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90017af6:	bf04      	itt	eq
90017af8:	021b      	lsleq	r3, r3, #8
90017afa:	3008      	addeq	r0, #8
90017afc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90017b00:	bf04      	itt	eq
90017b02:	011b      	lsleq	r3, r3, #4
90017b04:	3004      	addeq	r0, #4
90017b06:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90017b0a:	bf04      	itt	eq
90017b0c:	009b      	lsleq	r3, r3, #2
90017b0e:	3002      	addeq	r0, #2
90017b10:	2b00      	cmp	r3, #0
90017b12:	db04      	blt.n	90017b1e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90017b14:	3001      	adds	r0, #1
90017b16:	4770      	bx	lr
90017b18:	2000      	movs	r0, #0
90017b1a:	e7ea      	b.n	90017af2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90017b1c:	2020      	movs	r0, #32
90017b1e:	4770      	bx	lr

90017b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90017b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017b24:	b087      	sub	sp, #28
90017b26:	460d      	mov	r5, r1
90017b28:	4616      	mov	r6, r2
90017b2a:	4698      	mov	r8, r3
90017b2c:	4601      	mov	r1, r0
90017b2e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90017b32:	b120      	cbz	r0, 90017b3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017b34:	b11a      	cbz	r2, 90017b3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017b36:	2d1f      	cmp	r5, #31
90017b38:	d801      	bhi.n	90017b3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017b3a:	2b1f      	cmp	r3, #31
90017b3c:	d904      	bls.n	90017b48 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90017b3e:	2000      	movs	r0, #0
90017b40:	6038      	str	r0, [r7, #0]
90017b42:	b007      	add	sp, #28
90017b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017b48:	b97d      	cbnz	r5, 90017b6a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90017b4a:	b143      	cbz	r3, 90017b5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90017b4c:	4602      	mov	r2, r0
90017b4e:	462b      	mov	r3, r5
90017b50:	4641      	mov	r1, r8
90017b52:	4630      	mov	r0, r6
90017b54:	e9cd 4700 	strd	r4, r7, [sp]
90017b58:	f7ff ffe2 	bl	90017b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017b5c:	e7f1      	b.n	90017b42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017b5e:	f04f 33ff 	mov.w	r3, #4294967295
90017b62:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90017b66:	603b      	str	r3, [r7, #0]
90017b68:	e7eb      	b.n	90017b42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017b6a:	fa32 fa05 	lsrs.w	sl, r2, r5
90017b6e:	d106      	bne.n	90017b7e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90017b70:	4346      	muls	r6, r0
90017b72:	fbb6 f0f4 	udiv	r0, r6, r4
90017b76:	fb04 6610 	mls	r6, r4, r0, r6
90017b7a:	603e      	str	r6, [r7, #0]
90017b7c:	e7e1      	b.n	90017b42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017b7e:	2201      	movs	r2, #1
90017b80:	fa00 fb05 	lsl.w	fp, r0, r5
90017b84:	40aa      	lsls	r2, r5
90017b86:	fbbb f9f4 	udiv	r9, fp, r4
90017b8a:	3a01      	subs	r2, #1
90017b8c:	fb0a f309 	mul.w	r3, sl, r9
90017b90:	fb04 b919 	mls	r9, r4, r9, fp
90017b94:	4016      	ands	r6, r2
90017b96:	9303      	str	r3, [sp, #12]
90017b98:	4630      	mov	r0, r6
90017b9a:	f7ff ffa3 	bl	90017ae4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017b9e:	462b      	mov	r3, r5
90017ba0:	460a      	mov	r2, r1
90017ba2:	4601      	mov	r1, r0
90017ba4:	4630      	mov	r0, r6
90017ba6:	e9cd 4700 	strd	r4, r7, [sp]
90017baa:	f7ff ffb9 	bl	90017b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017bae:	4606      	mov	r6, r0
90017bb0:	4648      	mov	r0, r9
90017bb2:	eb05 0108 	add.w	r1, r5, r8
90017bb6:	f7ff ff95 	bl	90017ae4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017bba:	ab05      	add	r3, sp, #20
90017bbc:	464a      	mov	r2, r9
90017bbe:	e9cd 4300 	strd	r4, r3, [sp]
90017bc2:	4603      	mov	r3, r0
90017bc4:	4650      	mov	r0, sl
90017bc6:	f7ff ffab 	bl	90017b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017bca:	6839      	ldr	r1, [r7, #0]
90017bcc:	9a05      	ldr	r2, [sp, #20]
90017bce:	9b03      	ldr	r3, [sp, #12]
90017bd0:	4411      	add	r1, r2
90017bd2:	fbb1 f2f4 	udiv	r2, r1, r4
90017bd6:	18d3      	adds	r3, r2, r3
90017bd8:	fb04 1412 	mls	r4, r4, r2, r1
90017bdc:	441e      	add	r6, r3
90017bde:	603c      	str	r4, [r7, #0]
90017be0:	4430      	add	r0, r6
90017be2:	e7ae      	b.n	90017b42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90017be4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90017be4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017be8:	b085      	sub	sp, #20
90017bea:	f1b0 0900 	subs.w	r9, r0, #0
90017bee:	461d      	mov	r5, r3
90017bf0:	4617      	mov	r7, r2
90017bf2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90017bf4:	bfbb      	ittet	lt
90017bf6:	f1c9 0900 	rsblt	r9, r9, #0
90017bfa:	f04f 36ff 	movlt.w	r6, #4294967295
90017bfe:	2601      	movge	r6, #1
90017c00:	6823      	ldrlt	r3, [r4, #0]
90017c02:	bfbc      	itt	lt
90017c04:	425b      	neglt	r3, r3
90017c06:	6023      	strlt	r3, [r4, #0]
90017c08:	2a00      	cmp	r2, #0
90017c0a:	da04      	bge.n	90017c16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90017c0c:	6823      	ldr	r3, [r4, #0]
90017c0e:	4257      	negs	r7, r2
90017c10:	4276      	negs	r6, r6
90017c12:	425b      	negs	r3, r3
90017c14:	6023      	str	r3, [r4, #0]
90017c16:	2d00      	cmp	r5, #0
90017c18:	4638      	mov	r0, r7
90017c1a:	bfba      	itte	lt
90017c1c:	426d      	neglt	r5, r5
90017c1e:	f04f 38ff 	movlt.w	r8, #4294967295
90017c22:	f04f 0801 	movge.w	r8, #1
90017c26:	f7ff ff5d 	bl	90017ae4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017c2a:	ab03      	add	r3, sp, #12
90017c2c:	463a      	mov	r2, r7
90017c2e:	e9cd 5300 	strd	r5, r3, [sp]
90017c32:	4603      	mov	r3, r0
90017c34:	4648      	mov	r0, r9
90017c36:	f7ff ff73 	bl	90017b20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017c3a:	6823      	ldr	r3, [r4, #0]
90017c3c:	9a03      	ldr	r2, [sp, #12]
90017c3e:	4546      	cmp	r6, r8
90017c40:	441a      	add	r2, r3
90017c42:	fb92 f3f5 	sdiv	r3, r2, r5
90017c46:	4418      	add	r0, r3
90017c48:	fb05 2313 	mls	r3, r5, r3, r2
90017c4c:	bf18      	it	ne
90017c4e:	4240      	negne	r0, r0
90017c50:	1c72      	adds	r2, r6, #1
90017c52:	6023      	str	r3, [r4, #0]
90017c54:	d105      	bne.n	90017c62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90017c56:	2b00      	cmp	r3, #0
90017c58:	f1c3 0200 	rsb	r2, r3, #0
90017c5c:	db0b      	blt.n	90017c76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017c5e:	6022      	str	r2, [r4, #0]
90017c60:	e006      	b.n	90017c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017c62:	2e01      	cmp	r6, #1
90017c64:	d104      	bne.n	90017c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017c66:	2b00      	cmp	r3, #0
90017c68:	da02      	bge.n	90017c70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017c6a:	442b      	add	r3, r5
90017c6c:	3801      	subs	r0, #1
90017c6e:	6023      	str	r3, [r4, #0]
90017c70:	b005      	add	sp, #20
90017c72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017c76:	3801      	subs	r0, #1
90017c78:	1b52      	subs	r2, r2, r5
90017c7a:	e7f0      	b.n	90017c5e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90017c7c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90017c7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90017c80:	4c1c      	ldr	r4, [pc, #112]	; (90017cf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90017c82:	4605      	mov	r5, r0
90017c84:	6807      	ldr	r7, [r0, #0]
90017c86:	69a3      	ldr	r3, [r4, #24]
90017c88:	b92b      	cbnz	r3, 90017c96 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90017c8a:	6840      	ldr	r0, [r0, #4]
90017c8c:	e9c5 7000 	strd	r7, r0, [r5]
90017c90:	b004      	add	sp, #16
90017c92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017c96:	f04f 0802 	mov.w	r8, #2
90017c9a:	68a2      	ldr	r2, [r4, #8]
90017c9c:	ae04      	add	r6, sp, #16
90017c9e:	6820      	ldr	r0, [r4, #0]
90017ca0:	fb93 f1f8 	sdiv	r1, r3, r8
90017ca4:	440a      	add	r2, r1
90017ca6:	69e1      	ldr	r1, [r4, #28]
90017ca8:	f846 2d04 	str.w	r2, [r6, #-4]!
90017cac:	463a      	mov	r2, r7
90017cae:	9600      	str	r6, [sp, #0]
90017cb0:	f7ff ff98 	bl	90017be4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017cb4:	69a3      	ldr	r3, [r4, #24]
90017cb6:	4607      	mov	r7, r0
90017cb8:	686a      	ldr	r2, [r5, #4]
90017cba:	6a21      	ldr	r1, [r4, #32]
90017cbc:	9600      	str	r6, [sp, #0]
90017cbe:	6860      	ldr	r0, [r4, #4]
90017cc0:	f7ff ff90 	bl	90017be4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017cc4:	69a3      	ldr	r3, [r4, #24]
90017cc6:	6962      	ldr	r2, [r4, #20]
90017cc8:	4407      	add	r7, r0
90017cca:	6a61      	ldr	r1, [r4, #36]	; 0x24
90017ccc:	9600      	str	r6, [sp, #0]
90017cce:	68e0      	ldr	r0, [r4, #12]
90017cd0:	fb93 f8f8 	sdiv	r8, r3, r8
90017cd4:	4442      	add	r2, r8
90017cd6:	9203      	str	r2, [sp, #12]
90017cd8:	682a      	ldr	r2, [r5, #0]
90017cda:	f7ff ff83 	bl	90017be4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017cde:	4680      	mov	r8, r0
90017ce0:	9600      	str	r6, [sp, #0]
90017ce2:	69a3      	ldr	r3, [r4, #24]
90017ce4:	686a      	ldr	r2, [r5, #4]
90017ce6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90017ce8:	6920      	ldr	r0, [r4, #16]
90017cea:	f7ff ff7b 	bl	90017be4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017cee:	4440      	add	r0, r8
90017cf0:	e7cc      	b.n	90017c8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90017cf2:	bf00      	nop
90017cf4:	24039ae0 	.word	0x24039ae0

90017cf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90017cf8:	4b07      	ldr	r3, [pc, #28]	; (90017d18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90017cfa:	781b      	ldrb	r3, [r3, #0]
90017cfc:	2b01      	cmp	r3, #1
90017cfe:	d109      	bne.n	90017d14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90017d00:	f9b1 3000 	ldrsh.w	r3, [r1]
90017d04:	f9b0 2000 	ldrsh.w	r2, [r0]
90017d08:	8003      	strh	r3, [r0, #0]
90017d0a:	4b04      	ldr	r3, [pc, #16]	; (90017d1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90017d0c:	881b      	ldrh	r3, [r3, #0]
90017d0e:	3b01      	subs	r3, #1
90017d10:	1a9b      	subs	r3, r3, r2
90017d12:	800b      	strh	r3, [r1, #0]
90017d14:	4770      	bx	lr
90017d16:	bf00      	nop
90017d18:	24039ac4 	.word	0x24039ac4
90017d1c:	24039ac0 	.word	0x24039ac0

90017d20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90017d20:	4b07      	ldr	r3, [pc, #28]	; (90017d40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90017d22:	b510      	push	{r4, lr}
90017d24:	781b      	ldrb	r3, [r3, #0]
90017d26:	2b01      	cmp	r3, #1
90017d28:	d108      	bne.n	90017d3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90017d2a:	4b06      	ldr	r3, [pc, #24]	; (90017d44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90017d2c:	880c      	ldrh	r4, [r1, #0]
90017d2e:	881b      	ldrh	r3, [r3, #0]
90017d30:	f9b0 2000 	ldrsh.w	r2, [r0]
90017d34:	3b01      	subs	r3, #1
90017d36:	1b1b      	subs	r3, r3, r4
90017d38:	8003      	strh	r3, [r0, #0]
90017d3a:	800a      	strh	r2, [r1, #0]
90017d3c:	bd10      	pop	{r4, pc}
90017d3e:	bf00      	nop
90017d40:	24039ac4 	.word	0x24039ac4
90017d44:	24039ac0 	.word	0x24039ac0

90017d48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90017d48:	4b0a      	ldr	r3, [pc, #40]	; (90017d74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90017d4a:	b510      	push	{r4, lr}
90017d4c:	781b      	ldrb	r3, [r3, #0]
90017d4e:	2b01      	cmp	r3, #1
90017d50:	d10e      	bne.n	90017d70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90017d52:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017d56:	8843      	ldrh	r3, [r0, #2]
90017d58:	f9b0 4000 	ldrsh.w	r4, [r0]
90017d5c:	18ca      	adds	r2, r1, r3
90017d5e:	4b06      	ldr	r3, [pc, #24]	; (90017d78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90017d60:	8044      	strh	r4, [r0, #2]
90017d62:	881b      	ldrh	r3, [r3, #0]
90017d64:	1a9b      	subs	r3, r3, r2
90017d66:	8003      	strh	r3, [r0, #0]
90017d68:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017d6c:	8081      	strh	r1, [r0, #4]
90017d6e:	80c3      	strh	r3, [r0, #6]
90017d70:	bd10      	pop	{r4, pc}
90017d72:	bf00      	nop
90017d74:	24039ac4 	.word	0x24039ac4
90017d78:	24039ac0 	.word	0x24039ac0

90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90017d7c:	4b08      	ldr	r3, [pc, #32]	; (90017da0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90017d7e:	781b      	ldrb	r3, [r3, #0]
90017d80:	2b01      	cmp	r3, #1
90017d82:	d10c      	bne.n	90017d9e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90017d84:	8803      	ldrh	r3, [r0, #0]
90017d86:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90017d8a:	8842      	ldrh	r2, [r0, #2]
90017d8c:	8002      	strh	r2, [r0, #0]
90017d8e:	185a      	adds	r2, r3, r1
90017d90:	4b04      	ldr	r3, [pc, #16]	; (90017da4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90017d92:	881b      	ldrh	r3, [r3, #0]
90017d94:	1a9b      	subs	r3, r3, r2
90017d96:	8043      	strh	r3, [r0, #2]
90017d98:	88c3      	ldrh	r3, [r0, #6]
90017d9a:	80c1      	strh	r1, [r0, #6]
90017d9c:	8083      	strh	r3, [r0, #4]
90017d9e:	4770      	bx	lr
90017da0:	24039ac4 	.word	0x24039ac4
90017da4:	24039ac0 	.word	0x24039ac0

90017da8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90017da8:	4b07      	ldr	r3, [pc, #28]	; (90017dc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90017daa:	b510      	push	{r4, lr}
90017dac:	781b      	ldrb	r3, [r3, #0]
90017dae:	2b01      	cmp	r3, #1
90017db0:	d108      	bne.n	90017dc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90017db2:	f9b1 3000 	ldrsh.w	r3, [r1]
90017db6:	f9b0 4000 	ldrsh.w	r4, [r0]
90017dba:	8003      	strh	r3, [r0, #0]
90017dbc:	8893      	ldrh	r3, [r2, #4]
90017dbe:	3b01      	subs	r3, #1
90017dc0:	1b1b      	subs	r3, r3, r4
90017dc2:	800b      	strh	r3, [r1, #0]
90017dc4:	bd10      	pop	{r4, pc}
90017dc6:	bf00      	nop
90017dc8:	24039ac4 	.word	0x24039ac4

90017dcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90017dcc:	4b0b      	ldr	r3, [pc, #44]	; (90017dfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90017dce:	781b      	ldrb	r3, [r3, #0]
90017dd0:	2b01      	cmp	r3, #1
90017dd2:	d111      	bne.n	90017df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90017dd4:	680b      	ldr	r3, [r1, #0]
90017dd6:	ed90 7a00 	vldr	s14, [r0]
90017dda:	6003      	str	r3, [r0, #0]
90017ddc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90017de0:	eddf 6a07 	vldr	s13, [pc, #28]	; 90017e00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90017de4:	ee07 3a90 	vmov	s15, r3
90017de8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017dec:	ee77 7ae6 	vsub.f32	s15, s15, s13
90017df0:	ee77 7ac7 	vsub.f32	s15, s15, s14
90017df4:	edc1 7a00 	vstr	s15, [r1]
90017df8:	4770      	bx	lr
90017dfa:	bf00      	nop
90017dfc:	24039ac4 	.word	0x24039ac4
90017e00:	38d1b717 	.word	0x38d1b717

90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90017e04:	4b0a      	ldr	r3, [pc, #40]	; (90017e30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90017e06:	460a      	mov	r2, r1
90017e08:	b510      	push	{r4, lr}
90017e0a:	781b      	ldrb	r3, [r3, #0]
90017e0c:	2b01      	cmp	r3, #1
90017e0e:	d10d      	bne.n	90017e2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90017e10:	8881      	ldrh	r1, [r0, #4]
90017e12:	8803      	ldrh	r3, [r0, #0]
90017e14:	440b      	add	r3, r1
90017e16:	4601      	mov	r1, r0
90017e18:	3b01      	subs	r3, #1
90017e1a:	f821 3b02 	strh.w	r3, [r1], #2
90017e1e:	f7ff ffc3 	bl	90017da8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90017e22:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017e26:	88c2      	ldrh	r2, [r0, #6]
90017e28:	80c3      	strh	r3, [r0, #6]
90017e2a:	8082      	strh	r2, [r0, #4]
90017e2c:	bd10      	pop	{r4, pc}
90017e2e:	bf00      	nop
90017e30:	24039ac4 	.word	0x24039ac4

90017e34 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90017e34:	4770      	bx	lr
	...

90017e38 <_ZN8touchgfx11Application13requestRedrawEv>:
90017e38:	4b06      	ldr	r3, [pc, #24]	; (90017e54 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90017e3a:	2100      	movs	r1, #0
90017e3c:	f9b3 2000 	ldrsh.w	r2, [r3]
90017e40:	4b05      	ldr	r3, [pc, #20]	; (90017e58 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90017e42:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90017e46:	f9b3 3000 	ldrsh.w	r3, [r3]
90017e4a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90017e4e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90017e52:	4770      	bx	lr
90017e54:	24039ac0 	.word	0x24039ac0
90017e58:	24039ac2 	.word	0x24039ac2

90017e5c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90017e5c:	4b03      	ldr	r3, [pc, #12]	; (90017e6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90017e5e:	6818      	ldr	r0, [r3, #0]
90017e60:	b110      	cbz	r0, 90017e68 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90017e62:	6803      	ldr	r3, [r0, #0]
90017e64:	699b      	ldr	r3, [r3, #24]
90017e66:	4718      	bx	r3
90017e68:	4770      	bx	lr
90017e6a:	bf00      	nop
90017e6c:	24039b10 	.word	0x24039b10

90017e70 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90017e70:	4770      	bx	lr
	...

90017e74 <_ZN8touchgfx11Application4drawEv>:
90017e74:	4b09      	ldr	r3, [pc, #36]	; (90017e9c <_ZN8touchgfx11Application4drawEv+0x28>)
90017e76:	b507      	push	{r0, r1, r2, lr}
90017e78:	f9b3 2000 	ldrsh.w	r2, [r3]
90017e7c:	2100      	movs	r1, #0
90017e7e:	4b08      	ldr	r3, [pc, #32]	; (90017ea0 <_ZN8touchgfx11Application4drawEv+0x2c>)
90017e80:	9100      	str	r1, [sp, #0]
90017e82:	4669      	mov	r1, sp
90017e84:	f9b3 3000 	ldrsh.w	r3, [r3]
90017e88:	f8ad 2004 	strh.w	r2, [sp, #4]
90017e8c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017e90:	6803      	ldr	r3, [r0, #0]
90017e92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017e94:	4798      	blx	r3
90017e96:	b003      	add	sp, #12
90017e98:	f85d fb04 	ldr.w	pc, [sp], #4
90017e9c:	24039ac0 	.word	0x24039ac0
90017ea0:	24039ac2 	.word	0x24039ac2

90017ea4 <_ZN8touchgfx11Application10invalidateEv>:
90017ea4:	4b09      	ldr	r3, [pc, #36]	; (90017ecc <_ZN8touchgfx11Application10invalidateEv+0x28>)
90017ea6:	b082      	sub	sp, #8
90017ea8:	2100      	movs	r1, #0
90017eaa:	f9b3 2000 	ldrsh.w	r2, [r3]
90017eae:	4b08      	ldr	r3, [pc, #32]	; (90017ed0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90017eb0:	f8ad 2004 	strh.w	r2, [sp, #4]
90017eb4:	aa02      	add	r2, sp, #8
90017eb6:	f9b3 3000 	ldrsh.w	r3, [r3]
90017eba:	9100      	str	r1, [sp, #0]
90017ebc:	f8ad 3006 	strh.w	r3, [sp, #6]
90017ec0:	6803      	ldr	r3, [r0, #0]
90017ec2:	e912 0006 	ldmdb	r2, {r1, r2}
90017ec6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017ec8:	b002      	add	sp, #8
90017eca:	4718      	bx	r3
90017ecc:	24039ac0 	.word	0x24039ac0
90017ed0:	24039ac2 	.word	0x24039ac2

90017ed4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90017ed4:	4b03      	ldr	r3, [pc, #12]	; (90017ee4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90017ed6:	6818      	ldr	r0, [r3, #0]
90017ed8:	b110      	cbz	r0, 90017ee0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90017eda:	6803      	ldr	r3, [r0, #0]
90017edc:	69db      	ldr	r3, [r3, #28]
90017ede:	4718      	bx	r3
90017ee0:	4770      	bx	lr
90017ee2:	bf00      	nop
90017ee4:	24039b10 	.word	0x24039b10

90017ee8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90017ee8:	4b03      	ldr	r3, [pc, #12]	; (90017ef8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90017eea:	6818      	ldr	r0, [r3, #0]
90017eec:	b110      	cbz	r0, 90017ef4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90017eee:	6803      	ldr	r3, [r0, #0]
90017ef0:	6a1b      	ldr	r3, [r3, #32]
90017ef2:	4718      	bx	r3
90017ef4:	4770      	bx	lr
90017ef6:	bf00      	nop
90017ef8:	24039b10 	.word	0x24039b10

90017efc <_ZN8touchgfx11Application16clearCachedAreasEv>:
90017efc:	2300      	movs	r3, #0
90017efe:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90017f02:	4770      	bx	lr

90017f04 <_ZN8touchgfx11Application14handleKeyEventEh>:
90017f04:	4b03      	ldr	r3, [pc, #12]	; (90017f14 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90017f06:	6818      	ldr	r0, [r3, #0]
90017f08:	b110      	cbz	r0, 90017f10 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90017f0a:	6803      	ldr	r3, [r0, #0]
90017f0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017f0e:	4718      	bx	r3
90017f10:	4770      	bx	lr
90017f12:	bf00      	nop
90017f14:	24039b10 	.word	0x24039b10

90017f18 <_ZN8touchgfx11ApplicationD1Ev>:
90017f18:	4770      	bx	lr

90017f1a <_ZN8touchgfx11ApplicationD0Ev>:
90017f1a:	b510      	push	{r4, lr}
90017f1c:	4604      	mov	r4, r0
90017f1e:	f44f 719e 	mov.w	r1, #316	; 0x13c
90017f22:	f011 fa1f 	bl	90029364 <_ZdlPvj>
90017f26:	4620      	mov	r0, r4
90017f28:	bd10      	pop	{r4, pc}

90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>:
90017f2a:	b510      	push	{r4, lr}
90017f2c:	f9b1 4000 	ldrsh.w	r4, [r1]
90017f30:	888a      	ldrh	r2, [r1, #4]
90017f32:	f9b0 3000 	ldrsh.w	r3, [r0]
90017f36:	4422      	add	r2, r4
90017f38:	b212      	sxth	r2, r2
90017f3a:	4293      	cmp	r3, r2
90017f3c:	da15      	bge.n	90017f6a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017f3e:	8882      	ldrh	r2, [r0, #4]
90017f40:	4413      	add	r3, r2
90017f42:	b21b      	sxth	r3, r3
90017f44:	429c      	cmp	r4, r3
90017f46:	da10      	bge.n	90017f6a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017f48:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90017f4c:	88c9      	ldrh	r1, [r1, #6]
90017f4e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017f52:	4419      	add	r1, r3
90017f54:	b209      	sxth	r1, r1
90017f56:	428a      	cmp	r2, r1
90017f58:	da07      	bge.n	90017f6a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90017f5a:	88c0      	ldrh	r0, [r0, #6]
90017f5c:	4410      	add	r0, r2
90017f5e:	b200      	sxth	r0, r0
90017f60:	4283      	cmp	r3, r0
90017f62:	bfac      	ite	ge
90017f64:	2000      	movge	r0, #0
90017f66:	2001      	movlt	r0, #1
90017f68:	bd10      	pop	{r4, pc}
90017f6a:	2000      	movs	r0, #0
90017f6c:	e7fc      	b.n	90017f68 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90017f6e <_ZN8touchgfx4Rect10restrictToEss>:
90017f6e:	f9b0 3000 	ldrsh.w	r3, [r0]
90017f72:	2b00      	cmp	r3, #0
90017f74:	b510      	push	{r4, lr}
90017f76:	da04      	bge.n	90017f82 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90017f78:	8884      	ldrh	r4, [r0, #4]
90017f7a:	4423      	add	r3, r4
90017f7c:	8083      	strh	r3, [r0, #4]
90017f7e:	2300      	movs	r3, #0
90017f80:	8003      	strh	r3, [r0, #0]
90017f82:	f9b0 4000 	ldrsh.w	r4, [r0]
90017f86:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017f8a:	1b09      	subs	r1, r1, r4
90017f8c:	428b      	cmp	r3, r1
90017f8e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90017f92:	bfc8      	it	gt
90017f94:	8081      	strhgt	r1, [r0, #4]
90017f96:	2b00      	cmp	r3, #0
90017f98:	da04      	bge.n	90017fa4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90017f9a:	88c1      	ldrh	r1, [r0, #6]
90017f9c:	440b      	add	r3, r1
90017f9e:	80c3      	strh	r3, [r0, #6]
90017fa0:	2300      	movs	r3, #0
90017fa2:	8043      	strh	r3, [r0, #2]
90017fa4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017fa8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90017fac:	1a52      	subs	r2, r2, r1
90017fae:	4293      	cmp	r3, r2
90017fb0:	bfc8      	it	gt
90017fb2:	80c2      	strhgt	r2, [r0, #6]
90017fb4:	bd10      	pop	{r4, pc}
	...

90017fb8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90017fb8:	4b10      	ldr	r3, [pc, #64]	; (90017ffc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90017fba:	b510      	push	{r4, lr}
90017fbc:	460c      	mov	r4, r1
90017fbe:	f9b3 2000 	ldrsh.w	r2, [r3]
90017fc2:	4b0f      	ldr	r3, [pc, #60]	; (90018000 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90017fc4:	4620      	mov	r0, r4
90017fc6:	f9b3 1000 	ldrsh.w	r1, [r3]
90017fca:	f7ff ffd0 	bl	90017f6e <_ZN8touchgfx4Rect10restrictToEss>
90017fce:	4b0d      	ldr	r3, [pc, #52]	; (90018004 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90017fd0:	6818      	ldr	r0, [r3, #0]
90017fd2:	b190      	cbz	r0, 90017ffa <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90017fd4:	6803      	ldr	r3, [r0, #0]
90017fd6:	4621      	mov	r1, r4
90017fd8:	689b      	ldr	r3, [r3, #8]
90017fda:	4798      	blx	r3
90017fdc:	4b0a      	ldr	r3, [pc, #40]	; (90018008 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90017fde:	6818      	ldr	r0, [r3, #0]
90017fe0:	b118      	cbz	r0, 90017fea <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90017fe2:	6803      	ldr	r3, [r0, #0]
90017fe4:	4621      	mov	r1, r4
90017fe6:	689b      	ldr	r3, [r3, #8]
90017fe8:	4798      	blx	r3
90017fea:	4b08      	ldr	r3, [pc, #32]	; (9001800c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90017fec:	4621      	mov	r1, r4
90017fee:	6818      	ldr	r0, [r3, #0]
90017ff0:	6803      	ldr	r3, [r0, #0]
90017ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90017ff6:	69db      	ldr	r3, [r3, #28]
90017ff8:	4718      	bx	r3
90017ffa:	bd10      	pop	{r4, pc}
90017ffc:	24039ac2 	.word	0x24039ac2
90018000:	24039ac0 	.word	0x24039ac0
90018004:	24039b10 	.word	0x24039b10
90018008:	24039b0c 	.word	0x24039b0c
9001800c:	24039acc 	.word	0x24039acc

90018010 <_ZNK8touchgfx4Rect8includesERKS0_>:
90018010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018012:	4606      	mov	r6, r0
90018014:	4608      	mov	r0, r1
90018016:	460f      	mov	r7, r1
90018018:	f7fa fdd5 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001801c:	b9e8      	cbnz	r0, 9001805a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001801e:	f9b7 5000 	ldrsh.w	r5, [r7]
90018022:	f9b6 4000 	ldrsh.w	r4, [r6]
90018026:	42a5      	cmp	r5, r4
90018028:	db17      	blt.n	9001805a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001802a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001802e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90018032:	429a      	cmp	r2, r3
90018034:	db11      	blt.n	9001805a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018036:	88b9      	ldrh	r1, [r7, #4]
90018038:	440d      	add	r5, r1
9001803a:	88b1      	ldrh	r1, [r6, #4]
9001803c:	440c      	add	r4, r1
9001803e:	b22d      	sxth	r5, r5
90018040:	b224      	sxth	r4, r4
90018042:	42a5      	cmp	r5, r4
90018044:	dc09      	bgt.n	9001805a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018046:	88f8      	ldrh	r0, [r7, #6]
90018048:	4410      	add	r0, r2
9001804a:	88f2      	ldrh	r2, [r6, #6]
9001804c:	4413      	add	r3, r2
9001804e:	b200      	sxth	r0, r0
90018050:	b21b      	sxth	r3, r3
90018052:	4298      	cmp	r0, r3
90018054:	bfcc      	ite	gt
90018056:	2000      	movgt	r0, #0
90018058:	2001      	movle	r0, #1
9001805a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001805c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001805c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001805e:	4604      	mov	r4, r0
90018060:	4608      	mov	r0, r1
90018062:	460d      	mov	r5, r1
90018064:	f7fa fdaf 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018068:	b978      	cbnz	r0, 9001808a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001806a:	4620      	mov	r0, r4
9001806c:	f7fa fdab 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018070:	f9b5 6000 	ldrsh.w	r6, [r5]
90018074:	b150      	cbz	r0, 9001808c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90018076:	8026      	strh	r6, [r4, #0]
90018078:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001807c:	8063      	strh	r3, [r4, #2]
9001807e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90018082:	80a3      	strh	r3, [r4, #4]
90018084:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90018088:	80e3      	strh	r3, [r4, #6]
9001808a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001808c:	f9b4 1000 	ldrsh.w	r1, [r4]
90018090:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018094:	42b1      	cmp	r1, r6
90018096:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001809a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001809e:	460f      	mov	r7, r1
900180a0:	88ed      	ldrh	r5, [r5, #6]
900180a2:	bfa8      	it	ge
900180a4:	4637      	movge	r7, r6
900180a6:	4293      	cmp	r3, r2
900180a8:	4618      	mov	r0, r3
900180aa:	4466      	add	r6, ip
900180ac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900180b0:	bfa8      	it	ge
900180b2:	4610      	movge	r0, r2
900180b4:	442a      	add	r2, r5
900180b6:	88e5      	ldrh	r5, [r4, #6]
900180b8:	4461      	add	r1, ip
900180ba:	b236      	sxth	r6, r6
900180bc:	8027      	strh	r7, [r4, #0]
900180be:	442b      	add	r3, r5
900180c0:	b209      	sxth	r1, r1
900180c2:	b212      	sxth	r2, r2
900180c4:	8060      	strh	r0, [r4, #2]
900180c6:	b21b      	sxth	r3, r3
900180c8:	428e      	cmp	r6, r1
900180ca:	bfac      	ite	ge
900180cc:	ebc7 0106 	rsbge	r1, r7, r6
900180d0:	ebc7 0101 	rsblt	r1, r7, r1
900180d4:	429a      	cmp	r2, r3
900180d6:	bfac      	ite	ge
900180d8:	ebc0 0202 	rsbge	r2, r0, r2
900180dc:	ebc0 0203 	rsblt	r2, r0, r3
900180e0:	80a1      	strh	r1, [r4, #4]
900180e2:	80e2      	strh	r2, [r4, #6]
900180e4:	e7d1      	b.n	9001808a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900180e8 <_ZN8touchgfx11Application11getInstanceEv>:
900180e8:	4b01      	ldr	r3, [pc, #4]	; (900180f0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900180ea:	6818      	ldr	r0, [r3, #0]
900180ec:	4770      	bx	lr
900180ee:	bf00      	nop
900180f0:	24039b20 	.word	0x24039b20

900180f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
900180f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900180f6:	4b10      	ldr	r3, [pc, #64]	; (90018138 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
900180f8:	4605      	mov	r5, r0
900180fa:	781b      	ldrb	r3, [r3, #0]
900180fc:	b1d3      	cbz	r3, 90018134 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
900180fe:	4b0f      	ldr	r3, [pc, #60]	; (9001813c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
90018100:	f100 06ee 	add.w	r6, r0, #238	; 0xee
90018104:	4f0e      	ldr	r7, [pc, #56]	; (90018140 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90018106:	881c      	ldrh	r4, [r3, #0]
90018108:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
9001810c:	42a3      	cmp	r3, r4
9001810e:	d90e      	bls.n	9001812e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90018110:	683b      	ldr	r3, [r7, #0]
90018112:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90018116:	b10a      	cbz	r2, 9001811c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90018118:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001811a:	b900      	cbnz	r0, 9001811e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
9001811c:	6898      	ldr	r0, [r3, #8]
9001811e:	6803      	ldr	r3, [r0, #0]
90018120:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
90018124:	3401      	adds	r4, #1
90018126:	69db      	ldr	r3, [r3, #28]
90018128:	4798      	blx	r3
9001812a:	b2a4      	uxth	r4, r4
9001812c:	e7ec      	b.n	90018108 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
9001812e:	2300      	movs	r3, #0
90018130:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
90018134:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018136:	bf00      	nop
90018138:	24039aca 	.word	0x24039aca
9001813c:	24000084 	.word	0x24000084
90018140:	24039acc 	.word	0x24039acc

90018144 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90018144:	2300      	movs	r3, #0
90018146:	b510      	push	{r4, lr}
90018148:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
9001814c:	4604      	mov	r4, r0
9001814e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90018152:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90018156:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
9001815a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
9001815e:	429a      	cmp	r2, r3
90018160:	d90e      	bls.n	90018180 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90018162:	18e2      	adds	r2, r4, r3
90018164:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90018168:	b122      	cbz	r2, 90018174 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001816a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001816e:	6803      	ldr	r3, [r0, #0]
90018170:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90018172:	4798      	blx	r3
90018174:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90018178:	3301      	adds	r3, #1
9001817a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001817e:	e7ea      	b.n	90018156 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90018180:	bd10      	pop	{r4, pc}

90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90018182:	2300      	movs	r3, #0
90018184:	f100 0284 	add.w	r2, r0, #132	; 0x84
90018188:	30a4      	adds	r0, #164	; 0xa4
9001818a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001818e:	f802 3b01 	strb.w	r3, [r2], #1
90018192:	4282      	cmp	r2, r0
90018194:	d1fb      	bne.n	9001818e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90018196:	4770      	bx	lr

90018198 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90018198:	b570      	push	{r4, r5, r6, lr}
9001819a:	4c0b      	ldr	r4, [pc, #44]	; (900181c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001819c:	4605      	mov	r5, r0
9001819e:	460e      	mov	r6, r1
900181a0:	6820      	ldr	r0, [r4, #0]
900181a2:	b110      	cbz	r0, 900181aa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900181a4:	6803      	ldr	r3, [r0, #0]
900181a6:	695b      	ldr	r3, [r3, #20]
900181a8:	4798      	blx	r3
900181aa:	1d28      	adds	r0, r5, #4
900181ac:	f7ff ffe9 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900181b0:	6026      	str	r6, [r4, #0]
900181b2:	6833      	ldr	r3, [r6, #0]
900181b4:	4630      	mov	r0, r6
900181b6:	68db      	ldr	r3, [r3, #12]
900181b8:	4798      	blx	r3
900181ba:	682b      	ldr	r3, [r5, #0]
900181bc:	4628      	mov	r0, r5
900181be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900181c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900181c4:	4718      	bx	r3
900181c6:	bf00      	nop
900181c8:	24039b10 	.word	0x24039b10

900181cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900181cc:	2300      	movs	r3, #0
900181ce:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
900181d2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
900181d6:	461a      	mov	r2, r3
900181d8:	b5f0      	push	{r4, r5, r6, r7, lr}
900181da:	461c      	mov	r4, r3
900181dc:	461d      	mov	r5, r3
900181de:	459c      	cmp	ip, r3
900181e0:	dd1a      	ble.n	90018218 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900181e2:	18c6      	adds	r6, r0, r3
900181e4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
900181e8:	b16e      	cbz	r6, 90018206 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900181ea:	429a      	cmp	r2, r3
900181ec:	d008      	beq.n	90018200 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900181ee:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900181f2:	fa1f fe82 	uxth.w	lr, r2
900181f6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900181fa:	1887      	adds	r7, r0, r2
900181fc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90018200:	3201      	adds	r2, #1
90018202:	3301      	adds	r3, #1
90018204:	e7eb      	b.n	900181de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90018206:	4299      	cmp	r1, r3
90018208:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
9001820c:	bfa8      	it	ge
9001820e:	3501      	addge	r5, #1
90018210:	429e      	cmp	r6, r3
90018212:	bfc8      	it	gt
90018214:	3401      	addgt	r4, #1
90018216:	e7f4      	b.n	90018202 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018218:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
9001821c:	1b49      	subs	r1, r1, r5
9001821e:	1b1b      	subs	r3, r3, r4
90018220:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90018224:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90018228:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001822c:	4293      	cmp	r3, r2
9001822e:	dd03      	ble.n	90018238 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90018230:	3b01      	subs	r3, #1
90018232:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90018236:	e7f7      	b.n	90018228 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90018238:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001823c <_ZN8touchgfx11Application15handleTickEventEv>:
9001823c:	b570      	push	{r4, r5, r6, lr}
9001823e:	4d16      	ldr	r5, [pc, #88]	; (90018298 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90018240:	4604      	mov	r4, r0
90018242:	6828      	ldr	r0, [r5, #0]
90018244:	b140      	cbz	r0, 90018258 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90018246:	7a03      	ldrb	r3, [r0, #8]
90018248:	b933      	cbnz	r3, 90018258 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001824a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001824e:	6803      	ldr	r3, [r0, #0]
90018250:	689b      	ldr	r3, [r3, #8]
90018252:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018256:	4718      	bx	r3
90018258:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
9001825c:	4e0f      	ldr	r6, [pc, #60]	; (9001829c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001825e:	b973      	cbnz	r3, 9001827e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018260:	b168      	cbz	r0, 9001827e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018262:	7a03      	ldrb	r3, [r0, #8]
90018264:	b15b      	cbz	r3, 9001827e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018266:	6830      	ldr	r0, [r6, #0]
90018268:	b110      	cbz	r0, 90018270 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001826a:	6803      	ldr	r3, [r0, #0]
9001826c:	691b      	ldr	r3, [r3, #16]
9001826e:	4798      	blx	r3
90018270:	6828      	ldr	r0, [r5, #0]
90018272:	6803      	ldr	r3, [r0, #0]
90018274:	68db      	ldr	r3, [r3, #12]
90018276:	4798      	blx	r3
90018278:	2301      	movs	r3, #1
9001827a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001827e:	3404      	adds	r4, #4
90018280:	4620      	mov	r0, r4
90018282:	f7ff ff5f 	bl	90018144 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90018286:	4620      	mov	r0, r4
90018288:	f7ff ffa0 	bl	900181cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001828c:	6830      	ldr	r0, [r6, #0]
9001828e:	b110      	cbz	r0, 90018296 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90018290:	6803      	ldr	r3, [r0, #0]
90018292:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018294:	e7dd      	b.n	90018252 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90018296:	bd70      	pop	{r4, r5, r6, pc}
90018298:	24039b14 	.word	0x24039b14
9001829c:	24039b10 	.word	0x24039b10

900182a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900182a0:	4603      	mov	r3, r0
900182a2:	f100 0140 	add.w	r1, r0, #64	; 0x40
900182a6:	2200      	movs	r2, #0
900182a8:	801a      	strh	r2, [r3, #0]
900182aa:	3308      	adds	r3, #8
900182ac:	f823 2c06 	strh.w	r2, [r3, #-6]
900182b0:	f823 2c04 	strh.w	r2, [r3, #-4]
900182b4:	f823 2c02 	strh.w	r2, [r3, #-2]
900182b8:	428b      	cmp	r3, r1
900182ba:	d1f5      	bne.n	900182a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900182bc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
900182c0:	4770      	bx	lr
	...

900182c4 <_ZN8touchgfx11ApplicationC1Ev>:
900182c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900182c6:	4b1d      	ldr	r3, [pc, #116]	; (9001833c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900182c8:	4606      	mov	r6, r0
900182ca:	4604      	mov	r4, r0
900182cc:	2500      	movs	r5, #0
900182ce:	f846 3b04 	str.w	r3, [r6], #4
900182d2:	22a8      	movs	r2, #168	; 0xa8
900182d4:	2100      	movs	r1, #0
900182d6:	4630      	mov	r0, r6
900182d8:	f011 fafa 	bl	900298d0 <memset>
900182dc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
900182e0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900182e4:	4f16      	ldr	r7, [pc, #88]	; (90018340 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900182e6:	f7ff ffdb 	bl	900182a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900182ea:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900182ee:	f7ff ffd7 	bl	900182a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900182f2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
900182f6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
900182fa:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
900182fe:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90018302:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90018306:	490f      	ldr	r1, [pc, #60]	; (90018344 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018308:	480f      	ldr	r0, [pc, #60]	; (90018348 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001830a:	f010 fbdb 	bl	90028ac4 <CRC_Lock>
9001830e:	4b0f      	ldr	r3, [pc, #60]	; (9001834c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018310:	b158      	cbz	r0, 9001832a <_ZN8touchgfx11ApplicationC1Ev+0x66>
90018312:	801d      	strh	r5, [r3, #0]
90018314:	2300      	movs	r3, #0
90018316:	4a0e      	ldr	r2, [pc, #56]	; (90018350 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018318:	4630      	mov	r0, r6
9001831a:	6013      	str	r3, [r2, #0]
9001831c:	4a0d      	ldr	r2, [pc, #52]	; (90018354 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001831e:	603b      	str	r3, [r7, #0]
90018320:	6013      	str	r3, [r2, #0]
90018322:	f7ff ff2e 	bl	90018182 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90018326:	4620      	mov	r0, r4
90018328:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001832a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001832e:	2002      	movs	r0, #2
90018330:	801a      	strh	r2, [r3, #0]
90018332:	6038      	str	r0, [r7, #0]
90018334:	f001 fb48 	bl	900199c8 <_ZN8touchgfx6Screen4drawEv>
90018338:	e7ec      	b.n	90018314 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001833a:	bf00      	nop
9001833c:	9002dac4 	.word	0x9002dac4
90018340:	24039b10 	.word	0x24039b10
90018344:	b5e8b5cd 	.word	0xb5e8b5cd
90018348:	f407a5c2 	.word	0xf407a5c2
9001834c:	24000084 	.word	0x24000084
90018350:	24039b20 	.word	0x24039b20
90018354:	24039b14 	.word	0x24039b14

90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90018358:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
9001835c:	3b01      	subs	r3, #1
9001835e:	b29b      	uxth	r3, r3
90018360:	428b      	cmp	r3, r1
90018362:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90018366:	b510      	push	{r4, lr}
90018368:	d908      	bls.n	9001837c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001836a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001836e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90018372:	681a      	ldr	r2, [r3, #0]
90018374:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90018378:	685a      	ldr	r2, [r3, #4]
9001837a:	6062      	str	r2, [r4, #4]
9001837c:	bd10      	pop	{r4, pc}
	...

90018380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018384:	b08f      	sub	sp, #60	; 0x3c
90018386:	4b8f      	ldr	r3, [pc, #572]	; (900185c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90018388:	4683      	mov	fp, r0
9001838a:	ac0a      	add	r4, sp, #40	; 0x28
9001838c:	e884 0006 	stmia.w	r4, {r1, r2}
90018390:	f9b3 2000 	ldrsh.w	r2, [r3]
90018394:	4620      	mov	r0, r4
90018396:	4b8c      	ldr	r3, [pc, #560]	; (900185c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90018398:	f9b3 1000 	ldrsh.w	r1, [r3]
9001839c:	f7ff fde7 	bl	90017f6e <_ZN8touchgfx4Rect10restrictToEss>
900183a0:	4620      	mov	r0, r4
900183a2:	f7fa fc10 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
900183a6:	2800      	cmp	r0, #0
900183a8:	d16a      	bne.n	90018480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900183aa:	9403      	str	r4, [sp, #12]
900183ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900183b0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
900183b4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900183b8:	9301      	str	r3, [sp, #4]
900183ba:	35a4      	adds	r5, #164	; 0xa4
900183bc:	b15c      	cbz	r4, 900183d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
900183be:	4629      	mov	r1, r5
900183c0:	9803      	ldr	r0, [sp, #12]
900183c2:	f7ff fe25 	bl	90018010 <_ZNK8touchgfx4Rect8includesERKS0_>
900183c6:	3c01      	subs	r4, #1
900183c8:	b118      	cbz	r0, 900183d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
900183ca:	b2a1      	uxth	r1, r4
900183cc:	9801      	ldr	r0, [sp, #4]
900183ce:	f7ff ffc3 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900183d2:	3d08      	subs	r5, #8
900183d4:	e7f2      	b.n	900183bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900183d6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
900183da:	f10a 33ff 	add.w	r3, sl, #4294967295
900183de:	f8cd a010 	str.w	sl, [sp, #16]
900183e2:	9302      	str	r3, [sp, #8]
900183e4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900183e8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
900183ec:	9306      	str	r3, [sp, #24]
900183ee:	445c      	add	r4, fp
900183f0:	2500      	movs	r5, #0
900183f2:	4626      	mov	r6, r4
900183f4:	f8cd a014 	str.w	sl, [sp, #20]
900183f8:	462f      	mov	r7, r5
900183fa:	9b05      	ldr	r3, [sp, #20]
900183fc:	2b00      	cmp	r3, #0
900183fe:	d073      	beq.n	900184e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90018400:	9903      	ldr	r1, [sp, #12]
90018402:	4630      	mov	r0, r6
90018404:	f7ff fd91 	bl	90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018408:	b350      	cbz	r0, 90018460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001840a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001840e:	f9b6 c000 	ldrsh.w	ip, [r6]
90018412:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90018416:	45e6      	cmp	lr, ip
90018418:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001841c:	db33      	blt.n	90018486 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001841e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90018422:	88b3      	ldrh	r3, [r6, #4]
90018424:	4472      	add	r2, lr
90018426:	4463      	add	r3, ip
90018428:	b212      	sxth	r2, r2
9001842a:	b21b      	sxth	r3, r3
9001842c:	429a      	cmp	r2, r3
9001842e:	dc2a      	bgt.n	90018486 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018430:	fa1f f289 	uxth.w	r2, r9
90018434:	88f3      	ldrh	r3, [r6, #6]
90018436:	45c8      	cmp	r8, r9
90018438:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001843c:	4413      	add	r3, r2
9001843e:	fa1f fc88 	uxth.w	ip, r8
90018442:	b29b      	uxth	r3, r3
90018444:	fa0f fe83 	sxth.w	lr, r3
90018448:	db0f      	blt.n	9001846a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001844a:	eba3 030c 	sub.w	r3, r3, ip
9001844e:	1ac9      	subs	r1, r1, r3
90018450:	b209      	sxth	r1, r1
90018452:	2900      	cmp	r1, #0
90018454:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018458:	dd12      	ble.n	90018480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001845a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001845e:	4605      	mov	r5, r0
90018460:	9b05      	ldr	r3, [sp, #20]
90018462:	3e08      	subs	r6, #8
90018464:	3b01      	subs	r3, #1
90018466:	9305      	str	r3, [sp, #20]
90018468:	e7c7      	b.n	900183fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001846a:	4461      	add	r1, ip
9001846c:	b209      	sxth	r1, r1
9001846e:	4571      	cmp	r1, lr
90018470:	dc38      	bgt.n	900184e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018472:	eba2 020c 	sub.w	r2, r2, ip
90018476:	b212      	sxth	r2, r2
90018478:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001847c:	2a00      	cmp	r2, #0
9001847e:	dcee      	bgt.n	9001845e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018480:	b00f      	add	sp, #60	; 0x3c
90018482:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018486:	45c8      	cmp	r8, r9
90018488:	db2c      	blt.n	900184e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001848a:	88f3      	ldrh	r3, [r6, #6]
9001848c:	4499      	add	r9, r3
9001848e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90018492:	4498      	add	r8, r3
90018494:	fa0f f989 	sxth.w	r9, r9
90018498:	fa0f f888 	sxth.w	r8, r8
9001849c:	45c1      	cmp	r9, r8
9001849e:	db21      	blt.n	900184e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900184a0:	fa1f f28c 	uxth.w	r2, ip
900184a4:	88b3      	ldrh	r3, [r6, #4]
900184a6:	45e6      	cmp	lr, ip
900184a8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
900184ac:	4413      	add	r3, r2
900184ae:	fa1f f88e 	uxth.w	r8, lr
900184b2:	b29b      	uxth	r3, r3
900184b4:	fa0f f983 	sxth.w	r9, r3
900184b8:	db0a      	blt.n	900184d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
900184ba:	eba3 0308 	sub.w	r3, r3, r8
900184be:	1ac9      	subs	r1, r1, r3
900184c0:	b209      	sxth	r1, r1
900184c2:	2900      	cmp	r1, #0
900184c4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
900184c8:	ddda      	ble.n	90018480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900184ca:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900184ce:	e7c6      	b.n	9001845e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900184d0:	4441      	add	r1, r8
900184d2:	b209      	sxth	r1, r1
900184d4:	4549      	cmp	r1, r9
900184d6:	dc05      	bgt.n	900184e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900184d8:	eba2 0208 	sub.w	r2, r2, r8
900184dc:	b212      	sxth	r2, r2
900184de:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900184e2:	e7cb      	b.n	9001847c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900184e4:	4607      	mov	r7, r0
900184e6:	e7bb      	b.n	90018460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900184e8:	2d00      	cmp	r5, #0
900184ea:	d181      	bne.n	900183f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900184ec:	2f00      	cmp	r7, #0
900184ee:	f000 81dd 	beq.w	900188ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900184f2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
900184f6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
900184fa:	b2b3      	uxth	r3, r6
900184fc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90018500:	9305      	str	r3, [sp, #20]
90018502:	9a05      	ldr	r2, [sp, #20]
90018504:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90018508:	4413      	add	r3, r2
9001850a:	b2ba      	uxth	r2, r7
9001850c:	4492      	add	sl, r2
9001850e:	b29b      	uxth	r3, r3
90018510:	fa1f fa8a 	uxth.w	sl, sl
90018514:	fa0f f883 	sxth.w	r8, r3
90018518:	fa0f f98a 	sxth.w	r9, sl
9001851c:	e9cd 2307 	strd	r2, r3, [sp, #28]
90018520:	9b04      	ldr	r3, [sp, #16]
90018522:	2b00      	cmp	r3, #0
90018524:	d052      	beq.n	900185cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90018526:	9903      	ldr	r1, [sp, #12]
90018528:	4620      	mov	r0, r4
9001852a:	f7ff fcfe 	bl	90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001852e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90018532:	b1c0      	cbz	r0, 90018566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018534:	f9b4 e000 	ldrsh.w	lr, [r4]
90018538:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001853c:	4576      	cmp	r6, lr
9001853e:	dc22      	bgt.n	90018586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018540:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018544:	44f4      	add	ip, lr
90018546:	fa0f fc8c 	sxth.w	ip, ip
9001854a:	45e0      	cmp	r8, ip
9001854c:	db1b      	blt.n	90018586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001854e:	428f      	cmp	r7, r1
90018550:	fa1f fc81 	uxth.w	ip, r1
90018554:	88e1      	ldrh	r1, [r4, #6]
90018556:	dc0d      	bgt.n	90018574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018558:	ebaa 0c0c 	sub.w	ip, sl, ip
9001855c:	f8a4 9002 	strh.w	r9, [r4, #2]
90018560:	eba1 010c 	sub.w	r1, r1, ip
90018564:	80e1      	strh	r1, [r4, #6]
90018566:	4628      	mov	r0, r5
90018568:	9904      	ldr	r1, [sp, #16]
9001856a:	3c08      	subs	r4, #8
9001856c:	4605      	mov	r5, r0
9001856e:	3901      	subs	r1, #1
90018570:	9104      	str	r1, [sp, #16]
90018572:	e7d3      	b.n	9001851c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90018574:	4461      	add	r1, ip
90018576:	b209      	sxth	r1, r1
90018578:	4549      	cmp	r1, r9
9001857a:	dcf5      	bgt.n	90018568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001857c:	eba2 0c0c 	sub.w	ip, r2, ip
90018580:	f8a4 c006 	strh.w	ip, [r4, #6]
90018584:	e7ef      	b.n	90018566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018586:	428f      	cmp	r7, r1
90018588:	dcee      	bgt.n	90018568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001858a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001858e:	4461      	add	r1, ip
90018590:	b209      	sxth	r1, r1
90018592:	4589      	cmp	r9, r1
90018594:	dbe8      	blt.n	90018568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018596:	4576      	cmp	r6, lr
90018598:	fa1f fc8e 	uxth.w	ip, lr
9001859c:	88a1      	ldrh	r1, [r4, #4]
9001859e:	dc07      	bgt.n	900185b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900185a0:	eba3 0c0c 	sub.w	ip, r3, ip
900185a4:	f8a4 8000 	strh.w	r8, [r4]
900185a8:	eba1 010c 	sub.w	r1, r1, ip
900185ac:	80a1      	strh	r1, [r4, #4]
900185ae:	e7da      	b.n	90018566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900185b0:	4461      	add	r1, ip
900185b2:	b209      	sxth	r1, r1
900185b4:	4588      	cmp	r8, r1
900185b6:	dbd7      	blt.n	90018568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900185b8:	9905      	ldr	r1, [sp, #20]
900185ba:	eba1 0c0c 	sub.w	ip, r1, ip
900185be:	f8a4 c004 	strh.w	ip, [r4, #4]
900185c2:	e7d0      	b.n	90018566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900185c4:	24039ac2 	.word	0x24039ac2
900185c8:	24039ac0 	.word	0x24039ac0
900185cc:	2d00      	cmp	r5, #0
900185ce:	f000 816d 	beq.w	900188ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900185d2:	9b06      	ldr	r3, [sp, #24]
900185d4:	445b      	add	r3, fp
900185d6:	461c      	mov	r4, r3
900185d8:	9b02      	ldr	r3, [sp, #8]
900185da:	3301      	adds	r3, #1
900185dc:	f000 8166 	beq.w	900188ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900185e0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
900185e4:	9803      	ldr	r0, [sp, #12]
900185e6:	4629      	mov	r1, r5
900185e8:	f7ff fd12 	bl	90018010 <_ZNK8touchgfx4Rect8includesERKS0_>
900185ec:	b120      	cbz	r0, 900185f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900185ee:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900185f2:	9801      	ldr	r0, [sp, #4]
900185f4:	f7ff feb0 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900185f8:	9903      	ldr	r1, [sp, #12]
900185fa:	4628      	mov	r0, r5
900185fc:	f7ff fc95 	bl	90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018600:	2800      	cmp	r0, #0
90018602:	f000 809c 	beq.w	9001873e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018606:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001860a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001860e:	fa1f f189 	uxth.w	r1, r9
90018612:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018616:	9309      	str	r3, [sp, #36]	; 0x24
90018618:	eb01 0c03 	add.w	ip, r1, r3
9001861c:	b283      	uxth	r3, r0
9001861e:	4548      	cmp	r0, r9
90018620:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90018624:	fa1f fa8c 	uxth.w	sl, ip
90018628:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001862c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90018630:	eb03 050c 	add.w	r5, r3, ip
90018634:	b2ad      	uxth	r5, r5
90018636:	9505      	str	r5, [sp, #20]
90018638:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001863c:	9504      	str	r5, [sp, #16]
9001863e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90018642:	f340 8099 	ble.w	90018778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90018646:	1a5b      	subs	r3, r3, r1
90018648:	4596      	cmp	lr, r2
9001864a:	fa0f f08a 	sxth.w	r0, sl
9001864e:	b29b      	uxth	r3, r3
90018650:	b21e      	sxth	r6, r3
90018652:	dd2e      	ble.n	900186b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90018654:	9f02      	ldr	r7, [sp, #8]
90018656:	fa1f fe8e 	uxth.w	lr, lr
9001865a:	b292      	uxth	r2, r2
9001865c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90018660:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90018664:	9f04      	ldr	r7, [sp, #16]
90018666:	ebae 0102 	sub.w	r1, lr, r2
9001866a:	44a6      	add	lr, r4
9001866c:	1a3f      	subs	r7, r7, r0
9001866e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90018672:	b289      	uxth	r1, r1
90018674:	4402      	add	r2, r0
90018676:	fa0f fe8e 	sxth.w	lr, lr
9001867a:	b20d      	sxth	r5, r1
9001867c:	b212      	sxth	r2, r2
9001867e:	436f      	muls	r7, r5
90018680:	ebae 0202 	sub.w	r2, lr, r2
90018684:	4372      	muls	r2, r6
90018686:	4297      	cmp	r7, r2
90018688:	db09      	blt.n	9001869e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001868a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001868e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90018692:	449c      	add	ip, r3
90018694:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90018698:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001869c:	e686      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001869e:	4421      	add	r1, r4
900186a0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
900186a4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
900186a8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900186ac:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900186b0:	e67c      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900186b2:	9f04      	ldr	r7, [sp, #16]
900186b4:	42b8      	cmp	r0, r7
900186b6:	da27      	bge.n	90018708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
900186b8:	9902      	ldr	r1, [sp, #8]
900186ba:	1a3f      	subs	r7, r7, r0
900186bc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
900186c0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900186c4:	eb05 010e 	add.w	r1, r5, lr
900186c8:	fa1f f881 	uxth.w	r8, r1
900186cc:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
900186d0:	4411      	add	r1, r2
900186d2:	fa0f f988 	sxth.w	r9, r8
900186d6:	eba2 020e 	sub.w	r2, r2, lr
900186da:	eba1 0108 	sub.w	r1, r1, r8
900186de:	4372      	muls	r2, r6
900186e0:	b289      	uxth	r1, r1
900186e2:	fa0f f881 	sxth.w	r8, r1
900186e6:	fb08 f707 	mul.w	r7, r8, r7
900186ea:	42ba      	cmp	r2, r7
900186ec:	dc06      	bgt.n	900186fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900186ee:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
900186f2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
900186f6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
900186fa:	e7ca      	b.n	90018692 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900186fc:	4429      	add	r1, r5
900186fe:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90018702:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018706:	e651      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018708:	9805      	ldr	r0, [sp, #20]
9001870a:	2d06      	cmp	r5, #6
9001870c:	ebaa 0000 	sub.w	r0, sl, r0
90018710:	b280      	uxth	r0, r0
90018712:	fa0f fe80 	sxth.w	lr, r0
90018716:	d817      	bhi.n	90018748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90018718:	9b04      	ldr	r3, [sp, #16]
9001871a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001871e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90018722:	1c6b      	adds	r3, r5, #1
90018724:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90018728:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001872c:	9b01      	ldr	r3, [sp, #4]
9001872e:	9801      	ldr	r0, [sp, #4]
90018730:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018734:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90018738:	805a      	strh	r2, [r3, #2]
9001873a:	809e      	strh	r6, [r3, #4]
9001873c:	80d9      	strh	r1, [r3, #6]
9001873e:	9b02      	ldr	r3, [sp, #8]
90018740:	3c08      	subs	r4, #8
90018742:	3b01      	subs	r3, #1
90018744:	9302      	str	r3, [sp, #8]
90018746:	e747      	b.n	900185d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90018748:	9a02      	ldr	r2, [sp, #8]
9001874a:	45b6      	cmp	lr, r6
9001874c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018750:	db0d      	blt.n	9001876e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90018752:	449c      	add	ip, r3
90018754:	445a      	add	r2, fp
90018756:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001875a:	fa1f fc8c 	uxth.w	ip, ip
9001875e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90018762:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90018766:	448c      	add	ip, r1
90018768:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001876c:	e61e      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001876e:	445a      	add	r2, fp
90018770:	4484      	add	ip, r0
90018772:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90018776:	e78f      	b.n	90018698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018778:	fa1f f18e 	uxth.w	r1, lr
9001877c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90018780:	b293      	uxth	r3, r2
90018782:	4596      	cmp	lr, r2
90018784:	eb01 0806 	add.w	r8, r1, r6
90018788:	9306      	str	r3, [sp, #24]
9001878a:	fa1f f888 	uxth.w	r8, r8
9001878e:	9f06      	ldr	r7, [sp, #24]
90018790:	fa0f f388 	sxth.w	r3, r8
90018794:	9307      	str	r3, [sp, #28]
90018796:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001879a:	443b      	add	r3, r7
9001879c:	b29b      	uxth	r3, r3
9001879e:	9308      	str	r3, [sp, #32]
900187a0:	da24      	bge.n	900187ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
900187a2:	9905      	ldr	r1, [sp, #20]
900187a4:	eba3 0308 	sub.w	r3, r3, r8
900187a8:	eba2 020e 	sub.w	r2, r2, lr
900187ac:	eba9 0000 	sub.w	r0, r9, r0
900187b0:	ebaa 0401 	sub.w	r4, sl, r1
900187b4:	b29b      	uxth	r3, r3
900187b6:	b2a4      	uxth	r4, r4
900187b8:	b219      	sxth	r1, r3
900187ba:	b225      	sxth	r5, r4
900187bc:	4348      	muls	r0, r1
900187be:	436a      	muls	r2, r5
900187c0:	4282      	cmp	r2, r0
900187c2:	9a02      	ldr	r2, [sp, #8]
900187c4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900187c8:	445a      	add	r2, fp
900187ca:	dc06      	bgt.n	900187da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
900187cc:	9b07      	ldr	r3, [sp, #28]
900187ce:	44a4      	add	ip, r4
900187d0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
900187d4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
900187d8:	e75e      	b.n	90018698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900187da:	9904      	ldr	r1, [sp, #16]
900187dc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
900187e0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
900187e4:	4433      	add	r3, r6
900187e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900187ea:	e5df      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900187ec:	9f06      	ldr	r7, [sp, #24]
900187ee:	9b04      	ldr	r3, [sp, #16]
900187f0:	1bc9      	subs	r1, r1, r7
900187f2:	fa0f f78a 	sxth.w	r7, sl
900187f6:	b289      	uxth	r1, r1
900187f8:	429f      	cmp	r7, r3
900187fa:	fa0f fe81 	sxth.w	lr, r1
900187fe:	dd23      	ble.n	90018848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90018800:	9a05      	ldr	r2, [sp, #20]
90018802:	eba9 0000 	sub.w	r0, r9, r0
90018806:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001880a:	ebaa 0202 	sub.w	r2, sl, r2
9001880e:	9d07      	ldr	r5, [sp, #28]
90018810:	fb0e f000 	mul.w	r0, lr, r0
90018814:	b292      	uxth	r2, r2
90018816:	eba5 0a03 	sub.w	sl, r5, r3
9001881a:	9b02      	ldr	r3, [sp, #8]
9001881c:	b214      	sxth	r4, r2
9001881e:	00db      	lsls	r3, r3, #3
90018820:	fb04 fa0a 	mul.w	sl, r4, sl
90018824:	445b      	add	r3, fp
90018826:	4550      	cmp	r0, sl
90018828:	db03      	blt.n	90018832 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001882a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001882e:	4494      	add	ip, r2
90018830:	e732      	b.n	90018698 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018832:	9a04      	ldr	r2, [sp, #16]
90018834:	4431      	add	r1, r6
90018836:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001883a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001883e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90018842:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90018846:	e75c      	b.n	90018702 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90018848:	9b08      	ldr	r3, [sp, #32]
9001884a:	2d06      	cmp	r5, #6
9001884c:	eba3 0308 	sub.w	r3, r3, r8
90018850:	b29b      	uxth	r3, r3
90018852:	b218      	sxth	r0, r3
90018854:	d813      	bhi.n	9001887e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90018856:	9b07      	ldr	r3, [sp, #28]
90018858:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001885c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90018860:	1c6b      	adds	r3, r5, #1
90018862:	9901      	ldr	r1, [sp, #4]
90018864:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90018868:	9b01      	ldr	r3, [sp, #4]
9001886a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001886e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018872:	805a      	strh	r2, [r3, #2]
90018874:	9a09      	ldr	r2, [sp, #36]	; 0x24
90018876:	f8a3 e006 	strh.w	lr, [r3, #6]
9001887a:	809a      	strh	r2, [r3, #4]
9001887c:	e75f      	b.n	9001873e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001887e:	9c02      	ldr	r4, [sp, #8]
90018880:	4570      	cmp	r0, lr
90018882:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90018886:	db0d      	blt.n	900188a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90018888:	4431      	add	r1, r6
9001888a:	9b06      	ldr	r3, [sp, #24]
9001888c:	445c      	add	r4, fp
9001888e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90018892:	b289      	uxth	r1, r1
90018894:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90018898:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001889c:	4419      	add	r1, r3
9001889e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
900188a2:	e583      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900188a4:	445c      	add	r4, fp
900188a6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
900188aa:	e79b      	b.n	900187e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
900188ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900188b0:	f64f 76ff 	movw	r6, #65535	; 0xffff
900188b4:	1e65      	subs	r5, r4, #1
900188b6:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900188ba:	b2ad      	uxth	r5, r5
900188bc:	42b5      	cmp	r5, r6
900188be:	d044      	beq.n	9001894a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
900188c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
900188c4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
900188c8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
900188cc:	4282      	cmp	r2, r0
900188ce:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
900188d2:	d11f      	bne.n	90018914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900188d4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
900188d8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900188dc:	459c      	cmp	ip, r3
900188de:	d119      	bne.n	90018914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900188e0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
900188e4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900188e8:	19d8      	adds	r0, r3, r7
900188ea:	b200      	sxth	r0, r0
900188ec:	4288      	cmp	r0, r1
900188ee:	d109      	bne.n	90018904 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900188f0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
900188f4:	4413      	add	r3, r2
900188f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900188fa:	4629      	mov	r1, r5
900188fc:	9801      	ldr	r0, [sp, #4]
900188fe:	f7ff fd2b 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018902:	e003      	b.n	9001890c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018904:	4411      	add	r1, r2
90018906:	b209      	sxth	r1, r1
90018908:	42b9      	cmp	r1, r7
9001890a:	d0f3      	beq.n	900188f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
9001890c:	3d01      	subs	r5, #1
9001890e:	3c08      	subs	r4, #8
90018910:	b2ad      	uxth	r5, r5
90018912:	e7d3      	b.n	900188bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018914:	42b9      	cmp	r1, r7
90018916:	d1f9      	bne.n	9001890c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018918:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
9001891c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018920:	4299      	cmp	r1, r3
90018922:	d1f3      	bne.n	9001890c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018924:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90018928:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001892c:	181f      	adds	r7, r3, r0
9001892e:	b23f      	sxth	r7, r7
90018930:	42ba      	cmp	r2, r7
90018932:	d105      	bne.n	90018940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90018934:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90018938:	440b      	add	r3, r1
9001893a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001893e:	e7dc      	b.n	900188fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90018940:	440a      	add	r2, r1
90018942:	b212      	sxth	r2, r2
90018944:	4290      	cmp	r0, r2
90018946:	d1e1      	bne.n	9001890c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018948:	e7f6      	b.n	90018938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
9001894a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001894e:	2e07      	cmp	r6, #7
90018950:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90018954:	d812      	bhi.n	9001897c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90018956:	1c75      	adds	r5, r6, #1
90018958:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001895c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90018960:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90018964:	9d01      	ldr	r5, [sp, #4]
90018966:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001896a:	442c      	add	r4, r5
9001896c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90018970:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90018974:	8061      	strh	r1, [r4, #2]
90018976:	80a2      	strh	r2, [r4, #4]
90018978:	80e3      	strh	r3, [r4, #6]
9001897a:	e581      	b.n	90018480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001897c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90018980:	3e01      	subs	r6, #1
90018982:	445c      	add	r4, fp
90018984:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90018988:	f04f 37ff 	mov.w	r7, #4294967295
9001898c:	2500      	movs	r5, #0
9001898e:	9305      	str	r3, [sp, #20]
90018990:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018994:	1e72      	subs	r2, r6, #1
90018996:	9302      	str	r3, [sp, #8]
90018998:	4691      	mov	r9, r2
9001899a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001899e:	9304      	str	r3, [sp, #16]
900189a0:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
900189a4:	f1b9 3fff 	cmp.w	r9, #4294967295
900189a8:	6818      	ldr	r0, [r3, #0]
900189aa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900189ae:	9207      	str	r2, [sp, #28]
900189b0:	bf16      	itet	ne
900189b2:	9905      	ldrne	r1, [sp, #20]
900189b4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
900189b8:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
900189bc:	9306      	str	r3, [sp, #24]
900189be:	f8be 1006 	ldrh.w	r1, [lr, #6]
900189c2:	f8be 8004 	ldrh.w	r8, [lr, #4]
900189c6:	fb18 f801 	smulbb	r8, r8, r1
900189ca:	6859      	ldr	r1, [r3, #4]
900189cc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900189d0:	4671      	mov	r1, lr
900189d2:	a80c      	add	r0, sp, #48	; 0x30
900189d4:	f7ff fb42 	bl	9001805c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900189d8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900189dc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900189e0:	f04f 0c08 	mov.w	ip, #8
900189e4:	9b04      	ldr	r3, [sp, #16]
900189e6:	9a02      	ldr	r2, [sp, #8]
900189e8:	fb10 f001 	smulbb	r0, r0, r1
900189ec:	fb02 8803 	mla	r8, r2, r3, r8
900189f0:	eba0 0108 	sub.w	r1, r0, r8
900189f4:	fb90 f0fc 	sdiv	r0, r0, ip
900189f8:	4288      	cmp	r0, r1
900189fa:	dc20      	bgt.n	90018a3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900189fc:	4551      	cmp	r1, sl
900189fe:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90018a02:	da03      	bge.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90018a04:	b1d9      	cbz	r1, 90018a3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018a06:	468a      	mov	sl, r1
90018a08:	464f      	mov	r7, r9
90018a0a:	4635      	mov	r5, r6
90018a0c:	f109 39ff 	add.w	r9, r9, #4294967295
90018a10:	f119 0f02 	cmn.w	r9, #2
90018a14:	d1c6      	bne.n	900189a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90018a16:	4616      	mov	r6, r2
90018a18:	3201      	adds	r2, #1
90018a1a:	f1a4 0408 	sub.w	r4, r4, #8
90018a1e:	d1b7      	bne.n	90018990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90018a20:	9b01      	ldr	r3, [sp, #4]
90018a22:	b2ac      	uxth	r4, r5
90018a24:	00ed      	lsls	r5, r5, #3
90018a26:	1958      	adds	r0, r3, r5
90018a28:	1c7b      	adds	r3, r7, #1
90018a2a:	d10b      	bne.n	90018a44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90018a2c:	4601      	mov	r1, r0
90018a2e:	9803      	ldr	r0, [sp, #12]
90018a30:	f7ff fb14 	bl	9001805c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018a34:	4621      	mov	r1, r4
90018a36:	9801      	ldr	r0, [sp, #4]
90018a38:	f7ff fc8e 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018a3c:	e4b6      	b.n	900183ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018a3e:	464f      	mov	r7, r9
90018a40:	4635      	mov	r5, r6
90018a42:	e7ed      	b.n	90018a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90018a44:	9b01      	ldr	r3, [sp, #4]
90018a46:	00ff      	lsls	r7, r7, #3
90018a48:	445d      	add	r5, fp
90018a4a:	19d9      	adds	r1, r3, r7
90018a4c:	445f      	add	r7, fp
90018a4e:	f7ff fb05 	bl	9001805c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018a52:	9b03      	ldr	r3, [sp, #12]
90018a54:	cb03      	ldmia	r3!, {r0, r1}
90018a56:	9b03      	ldr	r3, [sp, #12]
90018a58:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90018a5c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90018a60:	f855 0fac 	ldr.w	r0, [r5, #172]!
90018a64:	6869      	ldr	r1, [r5, #4]
90018a66:	c303      	stmia	r3!, {r0, r1}
90018a68:	e7e4      	b.n	90018a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90018a6a:	bf00      	nop

90018a6c <_ZN8touchgfx11Application15drawCachedAreasEv>:
90018a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018a70:	f500 7698 	add.w	r6, r0, #304	; 0x130
90018a74:	b09b      	sub	sp, #108	; 0x6c
90018a76:	4604      	mov	r4, r0
90018a78:	4630      	mov	r0, r6
90018a7a:	f7fa f8a4 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018a7e:	4605      	mov	r5, r0
90018a80:	b948      	cbnz	r0, 90018a96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90018a82:	6823      	ldr	r3, [r4, #0]
90018a84:	4620      	mov	r0, r4
90018a86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018a88:	e896 0006 	ldmia.w	r6, {r1, r2}
90018a8c:	4798      	blx	r3
90018a8e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90018a92:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90018a96:	4bc5      	ldr	r3, [pc, #788]	; (90018dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90018a98:	681b      	ldr	r3, [r3, #0]
90018a9a:	2b00      	cmp	r3, #0
90018a9c:	d03f      	beq.n	90018b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018a9e:	4dc4      	ldr	r5, [pc, #784]	; (90018db0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90018aa0:	4628      	mov	r0, r5
90018aa2:	f7fa f890 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018aa6:	4606      	mov	r6, r0
90018aa8:	2800      	cmp	r0, #0
90018aaa:	d138      	bne.n	90018b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018aac:	4628      	mov	r0, r5
90018aae:	f7ff f94b 	bl	90017d48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018ab2:	6823      	ldr	r3, [r4, #0]
90018ab4:	6829      	ldr	r1, [r5, #0]
90018ab6:	4620      	mov	r0, r4
90018ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018aba:	686a      	ldr	r2, [r5, #4]
90018abc:	4798      	blx	r3
90018abe:	802e      	strh	r6, [r5, #0]
90018ac0:	806e      	strh	r6, [r5, #2]
90018ac2:	80ae      	strh	r6, [r5, #4]
90018ac4:	80ee      	strh	r6, [r5, #6]
90018ac6:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90018aca:	4dba      	ldr	r5, [pc, #744]	; (90018db4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90018acc:	4640      	mov	r0, r8
90018ace:	f7ff fbe7 	bl	900182a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018ad2:	882e      	ldrh	r6, [r5, #0]
90018ad4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018ad8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90018adc:	4633      	mov	r3, r6
90018ade:	42bb      	cmp	r3, r7
90018ae0:	d224      	bcs.n	90018b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018ae2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90018ae6:	2907      	cmp	r1, #7
90018ae8:	d816      	bhi.n	90018b18 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90018aea:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018aee:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90018af2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90018af6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90018afa:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90018afe:	1c4a      	adds	r2, r1, #1
90018b00:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90018b04:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90018b08:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90018b0c:	f8a2 a002 	strh.w	sl, [r2, #2]
90018b10:	f8a2 e004 	strh.w	lr, [r2, #4]
90018b14:	f8a2 c006 	strh.w	ip, [r2, #6]
90018b18:	3301      	adds	r3, #1
90018b1a:	b29b      	uxth	r3, r3
90018b1c:	e7df      	b.n	90018ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90018b1e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018b22:	2b00      	cmp	r3, #0
90018b24:	d1cf      	bne.n	90018ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90018b26:	b01b      	add	sp, #108	; 0x6c
90018b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018b2c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90018b30:	42b3      	cmp	r3, r6
90018b32:	d90c      	bls.n	90018b4e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90018b34:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90018b38:	6822      	ldr	r2, [r4, #0]
90018b3a:	3601      	adds	r6, #1
90018b3c:	4620      	mov	r0, r4
90018b3e:	6c17      	ldr	r7, [r2, #64]	; 0x40
90018b40:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90018b44:	b2b6      	uxth	r6, r6
90018b46:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90018b4a:	47b8      	blx	r7
90018b4c:	e7ee      	b.n	90018b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018b4e:	4a9a      	ldr	r2, [pc, #616]	; (90018db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018b50:	6813      	ldr	r3, [r2, #0]
90018b52:	4691      	mov	r9, r2
90018b54:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90018b58:	2b01      	cmp	r3, #1
90018b5a:	f040 80e0 	bne.w	90018d1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90018b5e:	8829      	ldrh	r1, [r5, #0]
90018b60:	2600      	movs	r6, #0
90018b62:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018b66:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90018b6a:	33ae      	adds	r3, #174	; 0xae
90018b6c:	428f      	cmp	r7, r1
90018b6e:	f103 0308 	add.w	r3, r3, #8
90018b72:	dd0a      	ble.n	90018b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90018b74:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90018b78:	3101      	adds	r1, #1
90018b7a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90018b7e:	4402      	add	r2, r0
90018b80:	b212      	sxth	r2, r2
90018b82:	4296      	cmp	r6, r2
90018b84:	bfb8      	it	lt
90018b86:	4616      	movlt	r6, r2
90018b88:	e7f0      	b.n	90018b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90018b8a:	4b8c      	ldr	r3, [pc, #560]	; (90018dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90018b8c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90018db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90018b90:	881b      	ldrh	r3, [r3, #0]
90018b92:	2b0f      	cmp	r3, #15
90018b94:	bf8c      	ite	hi
90018b96:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90018b9a:	f04f 0b01 	movls.w	fp, #1
90018b9e:	2300      	movs	r3, #0
90018ba0:	e9cd 3305 	strd	r3, r3, [sp, #20]
90018ba4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90018ba8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90018bac:	4b82      	ldr	r3, [pc, #520]	; (90018db8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018bae:	4438      	add	r0, r7
90018bb0:	b207      	sxth	r7, r0
90018bb2:	6818      	ldr	r0, [r3, #0]
90018bb4:	42b7      	cmp	r7, r6
90018bb6:	6803      	ldr	r3, [r0, #0]
90018bb8:	f280 8083 	bge.w	90018cc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90018bbc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90018bc0:	4798      	blx	r3
90018bc2:	eb07 030b 	add.w	r3, r7, fp
90018bc6:	4298      	cmp	r0, r3
90018bc8:	da07      	bge.n	90018bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018bca:	42b0      	cmp	r0, r6
90018bcc:	da05      	bge.n	90018bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018bce:	4287      	cmp	r7, r0
90018bd0:	dd6c      	ble.n	90018cac <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018bd2:	2f00      	cmp	r7, #0
90018bd4:	dd6a      	ble.n	90018cac <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018bd6:	4630      	mov	r0, r6
90018bd8:	e004      	b.n	90018be4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90018bda:	4287      	cmp	r7, r0
90018bdc:	dcfb      	bgt.n	90018bd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90018bde:	42b0      	cmp	r0, r6
90018be0:	bfa8      	it	ge
90018be2:	4630      	movge	r0, r6
90018be4:	4b76      	ldr	r3, [pc, #472]	; (90018dc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90018be6:	1bc0      	subs	r0, r0, r7
90018be8:	2200      	movs	r2, #0
90018bea:	f8ad 7016 	strh.w	r7, [sp, #22]
90018bee:	f9b3 3000 	ldrsh.w	r3, [r3]
90018bf2:	882f      	ldrh	r7, [r5, #0]
90018bf4:	f8ad 2014 	strh.w	r2, [sp, #20]
90018bf8:	f8ad 3018 	strh.w	r3, [sp, #24]
90018bfc:	f8ad 001a 	strh.w	r0, [sp, #26]
90018c00:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018c04:	42bb      	cmp	r3, r7
90018c06:	d9cd      	bls.n	90018ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018c08:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90018c0c:	ab07      	add	r3, sp, #28
90018c0e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018c12:	6851      	ldr	r1, [r2, #4]
90018c14:	c303      	stmia	r3!, {r0, r1}
90018c16:	a905      	add	r1, sp, #20
90018c18:	a807      	add	r0, sp, #28
90018c1a:	f7ff f986 	bl	90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018c1e:	2800      	cmp	r0, #0
90018c20:	d04c      	beq.n	90018cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90018c22:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90018c26:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90018c2a:	f8bd a020 	ldrh.w	sl, [sp, #32]
90018c2e:	4686      	mov	lr, r0
90018c30:	4290      	cmp	r0, r2
90018c32:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90018c36:	4450      	add	r0, sl
90018c38:	f8bd a018 	ldrh.w	sl, [sp, #24]
90018c3c:	bfb8      	it	lt
90018c3e:	4696      	movlt	lr, r2
90018c40:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018c44:	4452      	add	r2, sl
90018c46:	b280      	uxth	r0, r0
90018c48:	4299      	cmp	r1, r3
90018c4a:	468c      	mov	ip, r1
90018c4c:	b292      	uxth	r2, r2
90018c4e:	9302      	str	r3, [sp, #8]
90018c50:	bfb8      	it	lt
90018c52:	469c      	movlt	ip, r3
90018c54:	b203      	sxth	r3, r0
90018c56:	fa0f fa82 	sxth.w	sl, r2
90018c5a:	f8ad e01c 	strh.w	lr, [sp, #28]
90018c5e:	f8ad c01e 	strh.w	ip, [sp, #30]
90018c62:	4553      	cmp	r3, sl
90018c64:	bfb8      	it	lt
90018c66:	4602      	movlt	r2, r0
90018c68:	9b02      	ldr	r3, [sp, #8]
90018c6a:	eba2 020e 	sub.w	r2, r2, lr
90018c6e:	f8ad 2020 	strh.w	r2, [sp, #32]
90018c72:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90018c76:	4411      	add	r1, r2
90018c78:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90018c7c:	4413      	add	r3, r2
90018c7e:	b289      	uxth	r1, r1
90018c80:	b29b      	uxth	r3, r3
90018c82:	b208      	sxth	r0, r1
90018c84:	b21a      	sxth	r2, r3
90018c86:	4290      	cmp	r0, r2
90018c88:	bfb8      	it	lt
90018c8a:	460b      	movlt	r3, r1
90018c8c:	eba3 030c 	sub.w	r3, r3, ip
90018c90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90018c94:	a807      	add	r0, sp, #28
90018c96:	f7f9 ff96 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018c9a:	b920      	cbnz	r0, 90018ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90018c9c:	6823      	ldr	r3, [r4, #0]
90018c9e:	a907      	add	r1, sp, #28
90018ca0:	4620      	mov	r0, r4
90018ca2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018ca4:	4798      	blx	r3
90018ca6:	3701      	adds	r7, #1
90018ca8:	b2bf      	uxth	r7, r7
90018caa:	e7a9      	b.n	90018c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90018cac:	f8d9 0000 	ldr.w	r0, [r9]
90018cb0:	2101      	movs	r1, #1
90018cb2:	6803      	ldr	r3, [r0, #0]
90018cb4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90018cb8:	4798      	blx	r3
90018cba:	e773      	b.n	90018ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018cbc:	e9cd 0007 	strd	r0, r0, [sp, #28]
90018cc0:	e7e8      	b.n	90018c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90018cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018cc4:	4798      	blx	r3
90018cc6:	4b3f      	ldr	r3, [pc, #252]	; (90018dc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90018cc8:	781b      	ldrb	r3, [r3, #0]
90018cca:	2b00      	cmp	r3, #0
90018ccc:	f43f af2b 	beq.w	90018b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018cd0:	2300      	movs	r3, #0
90018cd2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90018cd6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90018cda:	882b      	ldrh	r3, [r5, #0]
90018cdc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90018ce0:	42ab      	cmp	r3, r5
90018ce2:	f4bf af20 	bcs.w	90018b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018ce6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90018cea:	2907      	cmp	r1, #7
90018cec:	d814      	bhi.n	90018d18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90018cee:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90018cf2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90018cf6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90018cfa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90018cfe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90018d02:	1c4a      	adds	r2, r1, #1
90018d04:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90018d08:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90018d0c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90018d10:	f8a2 c002 	strh.w	ip, [r2, #2]
90018d14:	8097      	strh	r7, [r2, #4]
90018d16:	80d6      	strh	r6, [r2, #6]
90018d18:	3301      	adds	r3, #1
90018d1a:	b29b      	uxth	r3, r3
90018d1c:	e7e0      	b.n	90018ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90018d1e:	2b02      	cmp	r3, #2
90018d20:	f040 8133 	bne.w	90018f8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90018d24:	4b28      	ldr	r3, [pc, #160]	; (90018dc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90018d26:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90018d2a:	781b      	ldrb	r3, [r3, #0]
90018d2c:	2b01      	cmp	r3, #1
90018d2e:	f000 8098 	beq.w	90018e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018d32:	882a      	ldrh	r2, [r5, #0]
90018d34:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90018d38:	3201      	adds	r2, #1
90018d3a:	b292      	uxth	r2, r2
90018d3c:	2900      	cmp	r1, #0
90018d3e:	d0c2      	beq.n	90018cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018d40:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90018d44:	4694      	mov	ip, r2
90018d46:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90018d4a:	f04f 0900 	mov.w	r9, #0
90018d4e:	441e      	add	r6, r3
90018d50:	b236      	sxth	r6, r6
90018d52:	fa1f f38c 	uxth.w	r3, ip
90018d56:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90018d5a:	4299      	cmp	r1, r3
90018d5c:	f240 80be 	bls.w	90018edc <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90018d60:	4427      	add	r7, r4
90018d62:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90018d66:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90018d6a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90018d6e:	4283      	cmp	r3, r0
90018d70:	f340 80a0 	ble.w	90018eb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90018d74:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90018d78:	46e1      	mov	r9, ip
90018d7a:	4406      	add	r6, r0
90018d7c:	b236      	sxth	r6, r6
90018d7e:	429e      	cmp	r6, r3
90018d80:	bfa8      	it	ge
90018d82:	461e      	movge	r6, r3
90018d84:	f10c 0c01 	add.w	ip, ip, #1
90018d88:	e7e3      	b.n	90018d52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90018d8a:	d10a      	bne.n	90018da2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90018d8c:	4562      	cmp	r2, ip
90018d8e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90018d92:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90018d96:	bfb8      	it	lt
90018d98:	4662      	movlt	r2, ip
90018d9a:	4288      	cmp	r0, r1
90018d9c:	bfb8      	it	lt
90018d9e:	461f      	movlt	r7, r3
90018da0:	e086      	b.n	90018eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90018da2:	428a      	cmp	r2, r1
90018da4:	bfb8      	it	lt
90018da6:	460a      	movlt	r2, r1
90018da8:	e082      	b.n	90018eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90018daa:	bf00      	nop
90018dac:	24039b0c 	.word	0x24039b0c
90018db0:	24039b18 	.word	0x24039b18
90018db4:	24000084 	.word	0x24000084
90018db8:	24039acc 	.word	0x24039acc
90018dbc:	24039ac2 	.word	0x24039ac2
90018dc0:	24039ac0 	.word	0x24039ac0
90018dc4:	24039aca 	.word	0x24039aca
90018dc8:	24039ac4 	.word	0x24039ac4
90018dcc:	19a1      	adds	r1, r4, r6
90018dce:	ab07      	add	r3, sp, #28
90018dd0:	f851 0fac 	ldr.w	r0, [r1, #172]!
90018dd4:	6849      	ldr	r1, [r1, #4]
90018dd6:	c303      	stmia	r3!, {r0, r1}
90018dd8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90018ddc:	a807      	add	r0, sp, #28
90018dde:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90018de2:	2b13      	cmp	r3, #19
90018de4:	440b      	add	r3, r1
90018de6:	bfd8      	it	le
90018de8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90018dec:	1a9b      	subs	r3, r3, r2
90018dee:	f8ad 201c 	strh.w	r2, [sp, #28]
90018df2:	f8ad 3020 	strh.w	r3, [sp, #32]
90018df6:	f7fe ffc1 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90018dfa:	a807      	add	r0, sp, #28
90018dfc:	f7f9 fee3 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018e00:	bb78      	cbnz	r0, 90018e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018e02:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90018e06:	4426      	add	r6, r4
90018e08:	f8d9 0000 	ldr.w	r0, [r9]
90018e0c:	f1bc 0f14 	cmp.w	ip, #20
90018e10:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90018e14:	f8d0 e000 	ldr.w	lr, [r0]
90018e18:	bfa8      	it	ge
90018e1a:	f04f 0c14 	movge.w	ip, #20
90018e1e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90018e22:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90018e26:	fa1f fc8c 	uxth.w	ip, ip
90018e2a:	f8cd c000 	str.w	ip, [sp]
90018e2e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90018e32:	47d8      	blx	fp
90018e34:	4683      	mov	fp, r0
90018e36:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90018e3a:	a807      	add	r0, sp, #28
90018e3c:	f7fe ff84 	bl	90017d48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018e40:	6823      	ldr	r3, [r4, #0]
90018e42:	4620      	mov	r0, r4
90018e44:	a907      	add	r1, sp, #28
90018e46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018e48:	4798      	blx	r3
90018e4a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90018e4e:	eba0 000b 	sub.w	r0, r0, fp
90018e52:	b200      	sxth	r0, r0
90018e54:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90018e58:	b918      	cbnz	r0, 90018e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018e5a:	b2b9      	uxth	r1, r7
90018e5c:	4650      	mov	r0, sl
90018e5e:	f7ff fa7b 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018e62:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90018e66:	f1bb 0f00 	cmp.w	fp, #0
90018e6a:	f43f af2c 	beq.w	90018cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018e6e:	882b      	ldrh	r3, [r5, #0]
90018e70:	2700      	movs	r7, #0
90018e72:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90018e76:	3301      	adds	r3, #1
90018e78:	b29b      	uxth	r3, r3
90018e7a:	b299      	uxth	r1, r3
90018e7c:	00fe      	lsls	r6, r7, #3
90018e7e:	458b      	cmp	fp, r1
90018e80:	d9a4      	bls.n	90018dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90018e82:	4426      	add	r6, r4
90018e84:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90018e88:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90018e8c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90018e90:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90018e94:	4408      	add	r0, r1
90018e96:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90018e9a:	4461      	add	r1, ip
90018e9c:	b200      	sxth	r0, r0
90018e9e:	b209      	sxth	r1, r1
90018ea0:	4288      	cmp	r0, r1
90018ea2:	f6bf af72 	bge.w	90018d8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90018ea6:	4584      	cmp	ip, r0
90018ea8:	4662      	mov	r2, ip
90018eaa:	461f      	mov	r7, r3
90018eac:	bfb8      	it	lt
90018eae:	4602      	movlt	r2, r0
90018eb0:	3301      	adds	r3, #1
90018eb2:	e7e2      	b.n	90018e7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90018eb4:	d10e      	bne.n	90018ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90018eb6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90018eba:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90018ebe:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90018ec2:	4473      	add	r3, lr
90018ec4:	b21b      	sxth	r3, r3
90018ec6:	429e      	cmp	r6, r3
90018ec8:	bfa8      	it	ge
90018eca:	461e      	movge	r6, r3
90018ecc:	4287      	cmp	r7, r0
90018ece:	bfb8      	it	lt
90018ed0:	46e1      	movlt	r9, ip
90018ed2:	e757      	b.n	90018d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018ed4:	4286      	cmp	r6, r0
90018ed6:	bfa8      	it	ge
90018ed8:	4606      	movge	r6, r0
90018eda:	e753      	b.n	90018d84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018edc:	eb0a 0007 	add.w	r0, sl, r7
90018ee0:	4427      	add	r7, r4
90018ee2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90018ee6:	f1bb 0f13 	cmp.w	fp, #19
90018eea:	bfdc      	itt	le
90018eec:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90018ef0:	445e      	addle	r6, fp
90018ef2:	e9cd 2102 	strd	r2, r1, [sp, #8]
90018ef6:	bfd8      	it	le
90018ef8:	b236      	sxthle	r6, r6
90018efa:	f7f9 fe64 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018efe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90018f02:	2800      	cmp	r0, #0
90018f04:	f47f af1a 	bne.w	90018d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90018f08:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90018f0c:	fa1f fb8b 	uxth.w	fp, fp
90018f10:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90018f14:	1ab6      	subs	r6, r6, r2
90018f16:	4829      	ldr	r0, [pc, #164]	; (90018fbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90018f18:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90018f1c:	2e14      	cmp	r6, #20
90018f1e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90018f22:	6800      	ldr	r0, [r0, #0]
90018f24:	bfa8      	it	ge
90018f26:	2614      	movge	r6, #20
90018f28:	f8ad 101c 	strh.w	r1, [sp, #28]
90018f2c:	f8ad 201e 	strh.w	r2, [sp, #30]
90018f30:	b289      	uxth	r1, r1
90018f32:	f8ad 3020 	strh.w	r3, [sp, #32]
90018f36:	b2b6      	uxth	r6, r6
90018f38:	f8d0 c000 	ldr.w	ip, [r0]
90018f3c:	b292      	uxth	r2, r2
90018f3e:	455e      	cmp	r6, fp
90018f40:	bf94      	ite	ls
90018f42:	9600      	strls	r6, [sp, #0]
90018f44:	f8cd b000 	strhi.w	fp, [sp]
90018f48:	b29b      	uxth	r3, r3
90018f4a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90018f4e:	47b0      	blx	r6
90018f50:	6823      	ldr	r3, [r4, #0]
90018f52:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90018f56:	a907      	add	r1, sp, #28
90018f58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018f5a:	4620      	mov	r0, r4
90018f5c:	4798      	blx	r3
90018f5e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90018f62:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90018f66:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90018f6a:	1a5b      	subs	r3, r3, r1
90018f6c:	440a      	add	r2, r1
90018f6e:	b21b      	sxth	r3, r3
90018f70:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90018f74:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90018f78:	2b00      	cmp	r3, #0
90018f7a:	f47f aeda 	bne.w	90018d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90018f7e:	fa1f f189 	uxth.w	r1, r9
90018f82:	4650      	mov	r0, sl
90018f84:	f7ff f9e8 	bl	90018358 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018f88:	e6d3      	b.n	90018d32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90018f8a:	882e      	ldrh	r6, [r5, #0]
90018f8c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018f90:	42b3      	cmp	r3, r6
90018f92:	f67f ae98 	bls.w	90018cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018f96:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90018f9a:	ab07      	add	r3, sp, #28
90018f9c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018fa0:	6851      	ldr	r1, [r2, #4]
90018fa2:	c303      	stmia	r3!, {r0, r1}
90018fa4:	a807      	add	r0, sp, #28
90018fa6:	f7f9 fe0e 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018faa:	b920      	cbnz	r0, 90018fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90018fac:	6823      	ldr	r3, [r4, #0]
90018fae:	a907      	add	r1, sp, #28
90018fb0:	4620      	mov	r0, r4
90018fb2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018fb4:	4798      	blx	r3
90018fb6:	3601      	adds	r6, #1
90018fb8:	b2b6      	uxth	r6, r6
90018fba:	e7e7      	b.n	90018f8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90018fbc:	24039acc 	.word	0x24039acc

90018fc0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90018fc0:	4b03      	ldr	r3, [pc, #12]	; (90018fd0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90018fc2:	2200      	movs	r2, #0
90018fc4:	801a      	strh	r2, [r3, #0]
90018fc6:	805a      	strh	r2, [r3, #2]
90018fc8:	809a      	strh	r2, [r3, #4]
90018fca:	80da      	strh	r2, [r3, #6]
90018fcc:	4770      	bx	lr
90018fce:	bf00      	nop
90018fd0:	24039b18 	.word	0x24039b18

90018fd4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90018fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018fd8:	b09d      	sub	sp, #116	; 0x74
90018fda:	4606      	mov	r6, r0
90018fdc:	4614      	mov	r4, r2
90018fde:	468a      	mov	sl, r1
90018fe0:	a803      	add	r0, sp, #12
90018fe2:	461d      	mov	r5, r3
90018fe4:	f000 fe9d 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90018fe8:	6833      	ldr	r3, [r6, #0]
90018fea:	4630      	mov	r0, r6
90018fec:	f242 0b0b 	movw	fp, #8203	; 0x200b
90018ff0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90018ff2:	4798      	blx	r3
90018ff4:	6833      	ldr	r3, [r6, #0]
90018ff6:	4607      	mov	r7, r0
90018ff8:	4630      	mov	r0, r6
90018ffa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90018ffc:	4798      	blx	r3
90018ffe:	462a      	mov	r2, r5
90019000:	2500      	movs	r5, #0
90019002:	4621      	mov	r1, r4
90019004:	9000      	str	r0, [sp, #0]
90019006:	463b      	mov	r3, r7
90019008:	462c      	mov	r4, r5
9001900a:	46a9      	mov	r9, r5
9001900c:	46a8      	mov	r8, r5
9001900e:	a803      	add	r0, sp, #12
90019010:	f000 fee2 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019014:	2300      	movs	r3, #0
90019016:	9302      	str	r3, [sp, #8]
90019018:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001901c:	429c      	cmp	r4, r3
9001901e:	d002      	beq.n	90019026 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90019020:	455c      	cmp	r4, fp
90019022:	bf18      	it	ne
90019024:	4625      	movne	r5, r4
90019026:	ab02      	add	r3, sp, #8
90019028:	4632      	mov	r2, r6
9001902a:	4651      	mov	r1, sl
9001902c:	a803      	add	r0, sp, #12
9001902e:	f001 f9d9 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019032:	4604      	mov	r4, r0
90019034:	b108      	cbz	r0, 9001903a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90019036:	280a      	cmp	r0, #10
90019038:	d10a      	bne.n	90019050 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001903a:	45c1      	cmp	r9, r8
9001903c:	bf38      	it	cc
9001903e:	46c1      	movcc	r9, r8
90019040:	f04f 0800 	mov.w	r8, #0
90019044:	2c00      	cmp	r4, #0
90019046:	d1e5      	bne.n	90019014 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019048:	4648      	mov	r0, r9
9001904a:	b01d      	add	sp, #116	; 0x74
9001904c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019050:	9a02      	ldr	r2, [sp, #8]
90019052:	2a00      	cmp	r2, #0
90019054:	d0de      	beq.n	90019014 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019056:	7b57      	ldrb	r7, [r2, #13]
90019058:	4629      	mov	r1, r5
9001905a:	6833      	ldr	r3, [r6, #0]
9001905c:	007f      	lsls	r7, r7, #1
9001905e:	8894      	ldrh	r4, [r2, #4]
90019060:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019062:	f407 7080 	and.w	r0, r7, #256	; 0x100
90019066:	7a97      	ldrb	r7, [r2, #10]
90019068:	4307      	orrs	r7, r0
9001906a:	4630      	mov	r0, r6
9001906c:	4798      	blx	r3
9001906e:	4438      	add	r0, r7
90019070:	4480      	add	r8, r0
90019072:	fa1f f888 	uxth.w	r8, r8
90019076:	e7e5      	b.n	90019044 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90019078 <_ZNK8touchgfx4Font12getCharWidthEt>:
90019078:	b508      	push	{r3, lr}
9001907a:	6803      	ldr	r3, [r0, #0]
9001907c:	68db      	ldr	r3, [r3, #12]
9001907e:	4798      	blx	r3
90019080:	b128      	cbz	r0, 9001908e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90019082:	7b43      	ldrb	r3, [r0, #13]
90019084:	7a80      	ldrb	r0, [r0, #10]
90019086:	005b      	lsls	r3, r3, #1
90019088:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001908c:	4318      	orrs	r0, r3
9001908e:	bd08      	pop	{r3, pc}

90019090 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90019090:	b40e      	push	{r1, r2, r3}
90019092:	b5f0      	push	{r4, r5, r6, r7, lr}
90019094:	b09e      	sub	sp, #120	; 0x78
90019096:	4605      	mov	r5, r0
90019098:	ab23      	add	r3, sp, #140	; 0x8c
9001909a:	a805      	add	r0, sp, #20
9001909c:	f853 4b04 	ldr.w	r4, [r3], #4
900190a0:	9303      	str	r3, [sp, #12]
900190a2:	f000 fe3e 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
900190a6:	682b      	ldr	r3, [r5, #0]
900190a8:	4628      	mov	r0, r5
900190aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900190ac:	4798      	blx	r3
900190ae:	682b      	ldr	r3, [r5, #0]
900190b0:	4606      	mov	r6, r0
900190b2:	4628      	mov	r0, r5
900190b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900190b6:	4798      	blx	r3
900190b8:	4633      	mov	r3, r6
900190ba:	4621      	mov	r1, r4
900190bc:	ae1e      	add	r6, sp, #120	; 0x78
900190be:	2400      	movs	r4, #0
900190c0:	9000      	str	r0, [sp, #0]
900190c2:	9a03      	ldr	r2, [sp, #12]
900190c4:	a805      	add	r0, sp, #20
900190c6:	f000 fe87 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900190ca:	f846 4d68 	str.w	r4, [r6, #-104]!
900190ce:	462a      	mov	r2, r5
900190d0:	4633      	mov	r3, r6
900190d2:	4621      	mov	r1, r4
900190d4:	a805      	add	r0, sp, #20
900190d6:	f001 f985 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900190da:	b300      	cbz	r0, 9001911e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900190dc:	280a      	cmp	r0, #10
900190de:	d01a      	beq.n	90019116 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900190e0:	9f04      	ldr	r7, [sp, #16]
900190e2:	b1c7      	cbz	r7, 90019116 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900190e4:	7b78      	ldrb	r0, [r7, #13]
900190e6:	7a3b      	ldrb	r3, [r7, #8]
900190e8:	00c1      	lsls	r1, r0, #3
900190ea:	88ea      	ldrh	r2, [r5, #6]
900190ec:	f401 7180 	and.w	r1, r1, #256	; 0x100
900190f0:	4319      	orrs	r1, r3
900190f2:	0643      	lsls	r3, r0, #25
900190f4:	ea4f 1000 	mov.w	r0, r0, lsl #4
900190f8:	bf48      	it	mi
900190fa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
900190fe:	f400 7080 	and.w	r0, r0, #256	; 0x100
90019102:	bf48      	it	mi
90019104:	b219      	sxthmi	r1, r3
90019106:	79fb      	ldrb	r3, [r7, #7]
90019108:	4303      	orrs	r3, r0
9001910a:	4413      	add	r3, r2
9001910c:	1a5b      	subs	r3, r3, r1
9001910e:	b21b      	sxth	r3, r3
90019110:	429c      	cmp	r4, r3
90019112:	bfb8      	it	lt
90019114:	461c      	movlt	r4, r3
90019116:	4633      	mov	r3, r6
90019118:	462a      	mov	r2, r5
9001911a:	2100      	movs	r1, #0
9001911c:	e7da      	b.n	900190d4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001911e:	b2a0      	uxth	r0, r4
90019120:	b01e      	add	sp, #120	; 0x78
90019122:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019126:	b003      	add	sp, #12
90019128:	4770      	bx	lr

9001912a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001912a:	7a43      	ldrb	r3, [r0, #9]
9001912c:	8880      	ldrh	r0, [r0, #4]
9001912e:	4418      	add	r0, r3
90019130:	b280      	uxth	r0, r0
90019132:	4770      	bx	lr

90019134 <_ZNK8touchgfx4Font13getFontHeightEv>:
90019134:	6803      	ldr	r3, [r0, #0]
90019136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90019138:	4718      	bx	r3

9001913a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001913a:	b40e      	push	{r1, r2, r3}
9001913c:	b570      	push	{r4, r5, r6, lr}
9001913e:	b09d      	sub	sp, #116	; 0x74
90019140:	4604      	mov	r4, r0
90019142:	ab21      	add	r3, sp, #132	; 0x84
90019144:	a803      	add	r0, sp, #12
90019146:	f853 5b04 	ldr.w	r5, [r3], #4
9001914a:	9302      	str	r3, [sp, #8]
9001914c:	f000 fde9 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
90019150:	6823      	ldr	r3, [r4, #0]
90019152:	4620      	mov	r0, r4
90019154:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019156:	4798      	blx	r3
90019158:	6823      	ldr	r3, [r4, #0]
9001915a:	4606      	mov	r6, r0
9001915c:	4620      	mov	r0, r4
9001915e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019160:	2401      	movs	r4, #1
90019162:	4798      	blx	r3
90019164:	4633      	mov	r3, r6
90019166:	9000      	str	r0, [sp, #0]
90019168:	4629      	mov	r1, r5
9001916a:	9a02      	ldr	r2, [sp, #8]
9001916c:	a803      	add	r0, sp, #12
9001916e:	f000 fe33 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019172:	a803      	add	r0, sp, #12
90019174:	f001 fa02 	bl	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
90019178:	b2a3      	uxth	r3, r4
9001917a:	b138      	cbz	r0, 9001918c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001917c:	280a      	cmp	r0, #10
9001917e:	a803      	add	r0, sp, #12
90019180:	bf04      	itt	eq
90019182:	3301      	addeq	r3, #1
90019184:	b21c      	sxtheq	r4, r3
90019186:	f001 f9f9 	bl	9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001918a:	e7f5      	b.n	90019178 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001918c:	4618      	mov	r0, r3
9001918e:	b01d      	add	sp, #116	; 0x74
90019190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019194:	b003      	add	sp, #12
90019196:	4770      	bx	lr

90019198 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90019198:	b40e      	push	{r1, r2, r3}
9001919a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001919c:	b09e      	sub	sp, #120	; 0x78
9001919e:	4604      	mov	r4, r0
900191a0:	ab23      	add	r3, sp, #140	; 0x8c
900191a2:	a805      	add	r0, sp, #20
900191a4:	f853 5b04 	ldr.w	r5, [r3], #4
900191a8:	9303      	str	r3, [sp, #12]
900191aa:	f000 fdba 	bl	90019d22 <_ZN8touchgfx12TextProviderC1Ev>
900191ae:	6823      	ldr	r3, [r4, #0]
900191b0:	4620      	mov	r0, r4
900191b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900191b4:	4798      	blx	r3
900191b6:	6823      	ldr	r3, [r4, #0]
900191b8:	4606      	mov	r6, r0
900191ba:	4620      	mov	r0, r4
900191bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900191be:	4798      	blx	r3
900191c0:	4633      	mov	r3, r6
900191c2:	4629      	mov	r1, r5
900191c4:	9000      	str	r0, [sp, #0]
900191c6:	9a03      	ldr	r2, [sp, #12]
900191c8:	a805      	add	r0, sp, #20
900191ca:	f000 fe05 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900191ce:	ad1e      	add	r5, sp, #120	; 0x78
900191d0:	2100      	movs	r1, #0
900191d2:	f647 76ff 	movw	r6, #32767	; 0x7fff
900191d6:	4622      	mov	r2, r4
900191d8:	a805      	add	r0, sp, #20
900191da:	f845 1d68 	str.w	r1, [r5, #-104]!
900191de:	462b      	mov	r3, r5
900191e0:	f001 f900 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900191e4:	b1d8      	cbz	r0, 9001921e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900191e6:	280a      	cmp	r0, #10
900191e8:	d012      	beq.n	90019210 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900191ea:	9804      	ldr	r0, [sp, #16]
900191ec:	b180      	cbz	r0, 90019210 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900191ee:	7b47      	ldrb	r7, [r0, #13]
900191f0:	88e2      	ldrh	r2, [r4, #6]
900191f2:	00fb      	lsls	r3, r7, #3
900191f4:	f403 7180 	and.w	r1, r3, #256	; 0x100
900191f8:	7a03      	ldrb	r3, [r0, #8]
900191fa:	430b      	orrs	r3, r1
900191fc:	0679      	lsls	r1, r7, #25
900191fe:	bf44      	itt	mi
90019200:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019204:	b21b      	sxthmi	r3, r3
90019206:	1ad3      	subs	r3, r2, r3
90019208:	b21b      	sxth	r3, r3
9001920a:	429e      	cmp	r6, r3
9001920c:	bfa8      	it	ge
9001920e:	461e      	movge	r6, r3
90019210:	462b      	mov	r3, r5
90019212:	4622      	mov	r2, r4
90019214:	2100      	movs	r1, #0
90019216:	a805      	add	r0, sp, #20
90019218:	f001 f8e4 	bl	9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001921c:	e7e2      	b.n	900191e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001921e:	4630      	mov	r0, r6
90019220:	b01e      	add	sp, #120	; 0x78
90019222:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019226:	b003      	add	sp, #12
90019228:	4770      	bx	lr

9001922a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001922a:	b513      	push	{r0, r1, r4, lr}
9001922c:	6803      	ldr	r3, [r0, #0]
9001922e:	2400      	movs	r4, #0
90019230:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90019234:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019238:	f8ad 1004 	strh.w	r1, [sp, #4]
9001923c:	4669      	mov	r1, sp
9001923e:	691b      	ldr	r3, [r3, #16]
90019240:	9400      	str	r4, [sp, #0]
90019242:	f8ad 2006 	strh.w	r2, [sp, #6]
90019246:	4798      	blx	r3
90019248:	b002      	add	sp, #8
9001924a:	bd10      	pop	{r4, pc}

9001924c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001924c:	b538      	push	{r3, r4, r5, lr}
9001924e:	680b      	ldr	r3, [r1, #0]
90019250:	460c      	mov	r4, r1
90019252:	4605      	mov	r5, r0
90019254:	68db      	ldr	r3, [r3, #12]
90019256:	4798      	blx	r3
90019258:	6823      	ldr	r3, [r4, #0]
9001925a:	4620      	mov	r0, r4
9001925c:	4629      	mov	r1, r5
9001925e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019260:	4798      	blx	r3
90019262:	4628      	mov	r0, r5
90019264:	bd38      	pop	{r3, r4, r5, pc}

90019266 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90019266:	b410      	push	{r4}
90019268:	880a      	ldrh	r2, [r1, #0]
9001926a:	8884      	ldrh	r4, [r0, #4]
9001926c:	4422      	add	r2, r4
9001926e:	800a      	strh	r2, [r1, #0]
90019270:	884a      	ldrh	r2, [r1, #2]
90019272:	88c4      	ldrh	r4, [r0, #6]
90019274:	4422      	add	r2, r4
90019276:	804a      	strh	r2, [r1, #2]
90019278:	6940      	ldr	r0, [r0, #20]
9001927a:	b120      	cbz	r0, 90019286 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001927c:	6803      	ldr	r3, [r0, #0]
9001927e:	f85d 4b04 	ldr.w	r4, [sp], #4
90019282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019284:	4718      	bx	r3
90019286:	f85d 4b04 	ldr.w	r4, [sp], #4
9001928a:	4770      	bx	lr

9001928c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001928c:	b570      	push	{r4, r5, r6, lr}
9001928e:	8882      	ldrh	r2, [r0, #4]
90019290:	460c      	mov	r4, r1
90019292:	880b      	ldrh	r3, [r1, #0]
90019294:	4605      	mov	r5, r0
90019296:	4413      	add	r3, r2
90019298:	800b      	strh	r3, [r1, #0]
9001929a:	884b      	ldrh	r3, [r1, #2]
9001929c:	88c2      	ldrh	r2, [r0, #6]
9001929e:	4413      	add	r3, r2
900192a0:	804b      	strh	r3, [r1, #2]
900192a2:	1d01      	adds	r1, r0, #4
900192a4:	4620      	mov	r0, r4
900192a6:	f7f9 fc4b 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
900192aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900192ae:	2b00      	cmp	r3, #0
900192b0:	dd0b      	ble.n	900192ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900192b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900192b6:	2b00      	cmp	r3, #0
900192b8:	dd07      	ble.n	900192ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900192ba:	6968      	ldr	r0, [r5, #20]
900192bc:	b128      	cbz	r0, 900192ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900192be:	6803      	ldr	r3, [r0, #0]
900192c0:	4621      	mov	r1, r4
900192c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900192c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900192c8:	4718      	bx	r3
900192ca:	bd70      	pop	{r4, r5, r6, pc}

900192cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900192cc:	b570      	push	{r4, r5, r6, lr}
900192ce:	8882      	ldrh	r2, [r0, #4]
900192d0:	460c      	mov	r4, r1
900192d2:	880b      	ldrh	r3, [r1, #0]
900192d4:	4605      	mov	r5, r0
900192d6:	4413      	add	r3, r2
900192d8:	800b      	strh	r3, [r1, #0]
900192da:	884b      	ldrh	r3, [r1, #2]
900192dc:	88c2      	ldrh	r2, [r0, #6]
900192de:	4413      	add	r3, r2
900192e0:	804b      	strh	r3, [r1, #2]
900192e2:	1d01      	adds	r1, r0, #4
900192e4:	4620      	mov	r0, r4
900192e6:	f7f9 fc2b 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
900192ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900192ee:	2b00      	cmp	r3, #0
900192f0:	dd19      	ble.n	90019326 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900192f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900192f6:	2b00      	cmp	r3, #0
900192f8:	dd15      	ble.n	90019326 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900192fa:	6968      	ldr	r0, [r5, #20]
900192fc:	b128      	cbz	r0, 9001930a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900192fe:	6803      	ldr	r3, [r0, #0]
90019300:	4621      	mov	r1, r4
90019302:	691b      	ldr	r3, [r3, #16]
90019304:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019308:	4718      	bx	r3
9001930a:	4b07      	ldr	r3, [pc, #28]	; (90019328 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001930c:	681b      	ldr	r3, [r3, #0]
9001930e:	3304      	adds	r3, #4
90019310:	429d      	cmp	r5, r3
90019312:	d108      	bne.n	90019326 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019314:	f7fe fee8 	bl	900180e8 <_ZN8touchgfx11Application11getInstanceEv>
90019318:	6803      	ldr	r3, [r0, #0]
9001931a:	6821      	ldr	r1, [r4, #0]
9001931c:	6862      	ldr	r2, [r4, #4]
9001931e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90019320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019324:	4718      	bx	r3
90019326:	bd70      	pop	{r4, r5, r6, pc}
90019328:	24039b10 	.word	0x24039b10

9001932c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001932c:	b570      	push	{r4, r5, r6, lr}
9001932e:	4604      	mov	r4, r0
90019330:	4616      	mov	r6, r2
90019332:	460d      	mov	r5, r1
90019334:	b901      	cbnz	r1, 90019338 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90019336:	b192      	cbz	r2, 9001935e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90019338:	6823      	ldr	r3, [r4, #0]
9001933a:	4620      	mov	r0, r4
9001933c:	699b      	ldr	r3, [r3, #24]
9001933e:	4798      	blx	r3
90019340:	88e2      	ldrh	r2, [r4, #6]
90019342:	88a1      	ldrh	r1, [r4, #4]
90019344:	4620      	mov	r0, r4
90019346:	4432      	add	r2, r6
90019348:	4429      	add	r1, r5
9001934a:	b212      	sxth	r2, r2
9001934c:	b209      	sxth	r1, r1
9001934e:	f7f9 fecd 	bl	900130ec <_ZN8touchgfx8Drawable5setXYEss>
90019352:	6823      	ldr	r3, [r4, #0]
90019354:	4620      	mov	r0, r4
90019356:	699b      	ldr	r3, [r3, #24]
90019358:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001935c:	4718      	bx	r3
9001935e:	bd70      	pop	{r4, r5, r6, pc}

90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90019360:	b510      	push	{r4, lr}
90019362:	2300      	movs	r3, #0
90019364:	4604      	mov	r4, r0
90019366:	4608      	mov	r0, r1
90019368:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001936c:	8023      	strh	r3, [r4, #0]
9001936e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019372:	8063      	strh	r3, [r4, #2]
90019374:	6803      	ldr	r3, [r0, #0]
90019376:	80a1      	strh	r1, [r4, #4]
90019378:	4621      	mov	r1, r4
9001937a:	80e2      	strh	r2, [r4, #6]
9001937c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001937e:	4798      	blx	r3
90019380:	4620      	mov	r0, r4
90019382:	bd10      	pop	{r4, pc}

90019384 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019384:	b530      	push	{r4, r5, lr}
90019386:	8083      	strh	r3, [r0, #4]
90019388:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001938c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019390:	80c3      	strh	r3, [r0, #6]
90019392:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019396:	6141      	str	r1, [r0, #20]
90019398:	7203      	strb	r3, [r0, #8]
9001939a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001939e:	8302      	strh	r2, [r0, #24]
900193a0:	7243      	strb	r3, [r0, #9]
900193a2:	7a83      	ldrb	r3, [r0, #10]
900193a4:	f365 0306 	bfi	r3, r5, #0, #7
900193a8:	f89d 501c 	ldrb.w	r5, [sp, #28]
900193ac:	f365 13c7 	bfi	r3, r5, #7, #1
900193b0:	7283      	strb	r3, [r0, #10]
900193b2:	f89d 3020 	ldrb.w	r3, [sp, #32]
900193b6:	72c3      	strb	r3, [r0, #11]
900193b8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
900193bc:	7303      	strb	r3, [r0, #12]
900193be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900193c2:	81c3      	strh	r3, [r0, #14]
900193c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900193c8:	8203      	strh	r3, [r0, #16]
900193ca:	4b01      	ldr	r3, [pc, #4]	; (900193d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
900193cc:	6003      	str	r3, [r0, #0]
900193ce:	bd30      	pop	{r4, r5, pc}
900193d0:	9002db18 	.word	0x9002db18

900193d4 <_ZNK8touchgfx9ConstFont4findEt>:
900193d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900193d6:	6944      	ldr	r4, [r0, #20]
900193d8:	b3bc      	cbz	r4, 9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900193da:	88a3      	ldrh	r3, [r4, #4]
900193dc:	8b02      	ldrh	r2, [r0, #24]
900193de:	1acb      	subs	r3, r1, r3
900193e0:	f102 32ff 	add.w	r2, r2, #4294967295
900193e4:	d431      	bmi.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900193e6:	4293      	cmp	r3, r2
900193e8:	dd0c      	ble.n	90019404 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900193ea:	230e      	movs	r3, #14
900193ec:	fb03 4302 	mla	r3, r3, r2, r4
900193f0:	889b      	ldrh	r3, [r3, #4]
900193f2:	1a5b      	subs	r3, r3, r1
900193f4:	1ad3      	subs	r3, r2, r3
900193f6:	429a      	cmp	r2, r3
900193f8:	db27      	blt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900193fa:	2b00      	cmp	r3, #0
900193fc:	bfbc      	itt	lt
900193fe:	2302      	movlt	r3, #2
90019400:	fb92 f3f3 	sdivlt	r3, r2, r3
90019404:	2500      	movs	r5, #0
90019406:	260e      	movs	r6, #14
90019408:	4295      	cmp	r5, r2
9001940a:	dc1e      	bgt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001940c:	fb06 4003 	mla	r0, r6, r3, r4
90019410:	8887      	ldrh	r7, [r0, #4]
90019412:	42b9      	cmp	r1, r7
90019414:	d01a      	beq.n	9001944c <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019416:	d20d      	bcs.n	90019434 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019418:	1e5a      	subs	r2, r3, #1
9001941a:	4295      	cmp	r5, r2
9001941c:	dc15      	bgt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001941e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90019422:	1a5b      	subs	r3, r3, r1
90019424:	1ad3      	subs	r3, r2, r3
90019426:	429a      	cmp	r2, r3
90019428:	db0f      	blt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001942a:	429d      	cmp	r5, r3
9001942c:	ddec      	ble.n	90019408 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001942e:	1953      	adds	r3, r2, r5
90019430:	105b      	asrs	r3, r3, #1
90019432:	e7e9      	b.n	90019408 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019434:	1c5d      	adds	r5, r3, #1
90019436:	42aa      	cmp	r2, r5
90019438:	db07      	blt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001943a:	8a43      	ldrh	r3, [r0, #18]
9001943c:	1acb      	subs	r3, r1, r3
9001943e:	442b      	add	r3, r5
90019440:	429d      	cmp	r5, r3
90019442:	dc02      	bgt.n	9001944a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019444:	429a      	cmp	r2, r3
90019446:	dadf      	bge.n	90019408 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019448:	e7f1      	b.n	9001942e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001944a:	2000      	movs	r0, #0
9001944c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001944e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001944e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019450:	4604      	mov	r4, r0
90019452:	4617      	mov	r7, r2
90019454:	461e      	mov	r6, r3
90019456:	b911      	cbnz	r1, 9001945e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90019458:	2500      	movs	r5, #0
9001945a:	4628      	mov	r0, r5
9001945c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001945e:	290a      	cmp	r1, #10
90019460:	d0fa      	beq.n	90019458 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019462:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90019466:	4291      	cmp	r1, r2
90019468:	d0f6      	beq.n	90019458 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001946a:	f242 020b 	movw	r2, #8203	; 0x200b
9001946e:	4291      	cmp	r1, r2
90019470:	d0f2      	beq.n	90019458 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019472:	f7ff ffaf 	bl	900193d4 <_ZNK8touchgfx9ConstFont4findEt>
90019476:	4605      	mov	r5, r0
90019478:	b950      	cbnz	r0, 90019490 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001947a:	6823      	ldr	r3, [r4, #0]
9001947c:	4620      	mov	r0, r4
9001947e:	691b      	ldr	r3, [r3, #16]
90019480:	4798      	blx	r3
90019482:	4601      	mov	r1, r0
90019484:	4620      	mov	r0, r4
90019486:	f7ff ffa5 	bl	900193d4 <_ZNK8touchgfx9ConstFont4findEt>
9001948a:	4605      	mov	r5, r0
9001948c:	2800      	cmp	r0, #0
9001948e:	d0e3      	beq.n	90019458 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019490:	6823      	ldr	r3, [r4, #0]
90019492:	4629      	mov	r1, r5
90019494:	4620      	mov	r0, r4
90019496:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90019498:	4798      	blx	r3
9001949a:	6038      	str	r0, [r7, #0]
9001949c:	6823      	ldr	r3, [r4, #0]
9001949e:	4620      	mov	r0, r4
900194a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900194a2:	4798      	blx	r3
900194a4:	7030      	strb	r0, [r6, #0]
900194a6:	e7d8      	b.n	9001945a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

900194a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
900194a8:	b538      	push	{r3, r4, r5, lr}
900194aa:	4605      	mov	r5, r0
900194ac:	f002 f936 	bl	9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>
900194b0:	4604      	mov	r4, r0
900194b2:	4628      	mov	r0, r5
900194b4:	f002 f876 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900194b8:	2800      	cmp	r0, #0
900194ba:	bf14      	ite	ne
900194bc:	2002      	movne	r0, #2
900194be:	2000      	moveq	r0, #0
900194c0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900194c4:	b280      	uxth	r0, r0
900194c6:	bd38      	pop	{r3, r4, r5, pc}

900194c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
900194c8:	b538      	push	{r3, r4, r5, lr}
900194ca:	4605      	mov	r5, r0
900194cc:	f002 f926 	bl	9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>
900194d0:	4604      	mov	r4, r0
900194d2:	4628      	mov	r0, r5
900194d4:	f002 f866 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900194d8:	2800      	cmp	r0, #0
900194da:	bf14      	ite	ne
900194dc:	2002      	movne	r0, #2
900194de:	2000      	moveq	r0, #0
900194e0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900194e4:	f040 0001 	orr.w	r0, r0, #1
900194e8:	b280      	uxth	r0, r0
900194ea:	bd38      	pop	{r3, r4, r5, pc}

900194ec <_ZN8touchgfx4clzuEm>:
900194ec:	4603      	mov	r3, r0
900194ee:	b1c8      	cbz	r0, 90019524 <_ZN8touchgfx4clzuEm+0x38>
900194f0:	0c02      	lsrs	r2, r0, #16
900194f2:	0412      	lsls	r2, r2, #16
900194f4:	b9a2      	cbnz	r2, 90019520 <_ZN8touchgfx4clzuEm+0x34>
900194f6:	0403      	lsls	r3, r0, #16
900194f8:	2010      	movs	r0, #16
900194fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900194fe:	bf04      	itt	eq
90019500:	021b      	lsleq	r3, r3, #8
90019502:	3008      	addeq	r0, #8
90019504:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90019508:	bf04      	itt	eq
9001950a:	011b      	lsleq	r3, r3, #4
9001950c:	3004      	addeq	r0, #4
9001950e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90019512:	bf04      	itt	eq
90019514:	009b      	lsleq	r3, r3, #2
90019516:	3002      	addeq	r0, #2
90019518:	2b00      	cmp	r3, #0
9001951a:	db04      	blt.n	90019526 <_ZN8touchgfx4clzuEm+0x3a>
9001951c:	3001      	adds	r0, #1
9001951e:	4770      	bx	lr
90019520:	2000      	movs	r0, #0
90019522:	e7ea      	b.n	900194fa <_ZN8touchgfx4clzuEm+0xe>
90019524:	2020      	movs	r0, #32
90019526:	4770      	bx	lr

90019528 <_ZN8touchgfx7muldivuEmmmRm>:
90019528:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001952c:	460f      	mov	r7, r1
9001952e:	4615      	mov	r5, r2
90019530:	461e      	mov	r6, r3
90019532:	4601      	mov	r1, r0
90019534:	b100      	cbz	r0, 90019538 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90019536:	b927      	cbnz	r7, 90019542 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90019538:	2000      	movs	r0, #0
9001953a:	6030      	str	r0, [r6, #0]
9001953c:	b002      	add	sp, #8
9001953e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019542:	f7ff ffd3 	bl	900194ec <_ZN8touchgfx4clzuEm>
90019546:	b980      	cbnz	r0, 9001956a <_ZN8touchgfx7muldivuEmmmRm+0x42>
90019548:	4638      	mov	r0, r7
9001954a:	f7ff ffcf 	bl	900194ec <_ZN8touchgfx4clzuEm>
9001954e:	2800      	cmp	r0, #0
90019550:	dd05      	ble.n	9001955e <_ZN8touchgfx7muldivuEmmmRm+0x36>
90019552:	4633      	mov	r3, r6
90019554:	462a      	mov	r2, r5
90019556:	4638      	mov	r0, r7
90019558:	f7ff ffe6 	bl	90019528 <_ZN8touchgfx7muldivuEmmmRm>
9001955c:	e7ee      	b.n	9001953c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001955e:	f04f 33ff 	mov.w	r3, #4294967295
90019562:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90019566:	6033      	str	r3, [r6, #0]
90019568:	e7e8      	b.n	9001953c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001956a:	fa37 f800 	lsrs.w	r8, r7, r0
9001956e:	fb07 f301 	mul.w	r3, r7, r1
90019572:	d105      	bne.n	90019580 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90019574:	fbb3 f0f5 	udiv	r0, r3, r5
90019578:	fb05 3510 	mls	r5, r5, r0, r3
9001957c:	6035      	str	r5, [r6, #0]
9001957e:	e7dd      	b.n	9001953c <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019580:	2301      	movs	r3, #1
90019582:	fa01 fa00 	lsl.w	sl, r1, r0
90019586:	462a      	mov	r2, r5
90019588:	fa03 f000 	lsl.w	r0, r3, r0
9001958c:	4633      	mov	r3, r6
9001958e:	fbba f9f5 	udiv	r9, sl, r5
90019592:	3801      	subs	r0, #1
90019594:	fb08 f409 	mul.w	r4, r8, r9
90019598:	4038      	ands	r0, r7
9001959a:	f7ff ffc5 	bl	90019528 <_ZN8touchgfx7muldivuEmmmRm>
9001959e:	462a      	mov	r2, r5
900195a0:	4607      	mov	r7, r0
900195a2:	ab01      	add	r3, sp, #4
900195a4:	fb05 a119 	mls	r1, r5, r9, sl
900195a8:	4640      	mov	r0, r8
900195aa:	f7ff ffbd 	bl	90019528 <_ZN8touchgfx7muldivuEmmmRm>
900195ae:	9b01      	ldr	r3, [sp, #4]
900195b0:	6832      	ldr	r2, [r6, #0]
900195b2:	441a      	add	r2, r3
900195b4:	fbb2 f3f5 	udiv	r3, r2, r5
900195b8:	441c      	add	r4, r3
900195ba:	fb05 2513 	mls	r5, r5, r3, r2
900195be:	443c      	add	r4, r7
900195c0:	4420      	add	r0, r4
900195c2:	e7db      	b.n	9001957c <_ZN8touchgfx7muldivuEmmmRm+0x54>

900195c4 <_ZN8touchgfx6muldivElllRl>:
900195c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900195c6:	2800      	cmp	r0, #0
900195c8:	461e      	mov	r6, r3
900195ca:	bfba      	itte	lt
900195cc:	4240      	neglt	r0, r0
900195ce:	f04f 34ff 	movlt.w	r4, #4294967295
900195d2:	2401      	movge	r4, #1
900195d4:	2900      	cmp	r1, #0
900195d6:	bfbc      	itt	lt
900195d8:	4249      	neglt	r1, r1
900195da:	4264      	neglt	r4, r4
900195dc:	2a00      	cmp	r2, #0
900195de:	bfb6      	itet	lt
900195e0:	4265      	neglt	r5, r4
900195e2:	4625      	movge	r5, r4
900195e4:	4252      	neglt	r2, r2
900195e6:	4288      	cmp	r0, r1
900195e8:	bfc2      	ittt	gt
900195ea:	4603      	movgt	r3, r0
900195ec:	4608      	movgt	r0, r1
900195ee:	4619      	movgt	r1, r3
900195f0:	ab01      	add	r3, sp, #4
900195f2:	f7ff ff99 	bl	90019528 <_ZN8touchgfx7muldivuEmmmRm>
900195f6:	9b01      	ldr	r3, [sp, #4]
900195f8:	4368      	muls	r0, r5
900195fa:	435c      	muls	r4, r3
900195fc:	6034      	str	r4, [r6, #0]
900195fe:	b002      	add	sp, #8
90019600:	bd70      	pop	{r4, r5, r6, pc}

90019602 <_ZN8touchgfx6muldivElll>:
90019602:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019604:	4606      	mov	r6, r0
90019606:	ab01      	add	r3, sp, #4
90019608:	460d      	mov	r5, r1
9001960a:	4614      	mov	r4, r2
9001960c:	f7ff ffda 	bl	900195c4 <_ZN8touchgfx6muldivElllRl>
90019610:	2e00      	cmp	r6, #0
90019612:	db20      	blt.n	90019656 <_ZN8touchgfx6muldivElll+0x54>
90019614:	bf14      	ite	ne
90019616:	2301      	movne	r3, #1
90019618:	2300      	moveq	r3, #0
9001961a:	2d00      	cmp	r5, #0
9001961c:	db1e      	blt.n	9001965c <_ZN8touchgfx6muldivElll+0x5a>
9001961e:	bf14      	ite	ne
90019620:	2201      	movne	r2, #1
90019622:	2200      	moveq	r2, #0
90019624:	2c00      	cmp	r4, #0
90019626:	fb03 f202 	mul.w	r2, r3, r2
9001962a:	db1a      	blt.n	90019662 <_ZN8touchgfx6muldivElll+0x60>
9001962c:	bf14      	ite	ne
9001962e:	2301      	movne	r3, #1
90019630:	2300      	moveq	r3, #0
90019632:	4353      	muls	r3, r2
90019634:	2b01      	cmp	r3, #1
90019636:	d117      	bne.n	90019668 <_ZN8touchgfx6muldivElll+0x66>
90019638:	2c00      	cmp	r4, #0
9001963a:	9b01      	ldr	r3, [sp, #4]
9001963c:	bfb8      	it	lt
9001963e:	4264      	neglt	r4, r4
90019640:	2b00      	cmp	r3, #0
90019642:	f104 0401 	add.w	r4, r4, #1
90019646:	bfb8      	it	lt
90019648:	425b      	neglt	r3, r3
9001964a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001964e:	db00      	blt.n	90019652 <_ZN8touchgfx6muldivElll+0x50>
90019650:	3001      	adds	r0, #1
90019652:	b002      	add	sp, #8
90019654:	bd70      	pop	{r4, r5, r6, pc}
90019656:	f04f 33ff 	mov.w	r3, #4294967295
9001965a:	e7de      	b.n	9001961a <_ZN8touchgfx6muldivElll+0x18>
9001965c:	f04f 32ff 	mov.w	r2, #4294967295
90019660:	e7e0      	b.n	90019624 <_ZN8touchgfx6muldivElll+0x22>
90019662:	f04f 33ff 	mov.w	r3, #4294967295
90019666:	e7e4      	b.n	90019632 <_ZN8touchgfx6muldivElll+0x30>
90019668:	3301      	adds	r3, #1
9001966a:	d1f2      	bne.n	90019652 <_ZN8touchgfx6muldivElll+0x50>
9001966c:	9b01      	ldr	r3, [sp, #4]
9001966e:	2c00      	cmp	r4, #0
90019670:	bfb8      	it	lt
90019672:	4264      	neglt	r4, r4
90019674:	2b00      	cmp	r3, #0
90019676:	bfb8      	it	lt
90019678:	425b      	neglt	r3, r3
9001967a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001967e:	bfc8      	it	gt
90019680:	f100 30ff 	addgt.w	r0, r0, #4294967295
90019684:	e7e5      	b.n	90019652 <_ZN8touchgfx6muldivElll+0x50>

90019686 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019686:	2000      	movs	r0, #0
90019688:	4770      	bx	lr

9001968a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001968a:	2001      	movs	r0, #1
9001968c:	4770      	bx	lr

9001968e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001968e:	2002      	movs	r0, #2
90019690:	4770      	bx	lr

90019692 <_ZN8touchgfx6ScreenD1Ev>:
90019692:	4770      	bx	lr

90019694 <_ZN8touchgfx6Screen11setupScreenEv>:
90019694:	4770      	bx	lr

90019696 <_ZN8touchgfx12GestureEventD1Ev>:
90019696:	4770      	bx	lr

90019698 <_ZN8touchgfx9DragEventD1Ev>:
90019698:	4770      	bx	lr

9001969a <_ZN8touchgfx10ClickEventD1Ev>:
9001969a:	4770      	bx	lr

9001969c <_ZN8touchgfx10ClickEventD0Ev>:
9001969c:	b510      	push	{r4, lr}
9001969e:	4604      	mov	r4, r0
900196a0:	210c      	movs	r1, #12
900196a2:	f00f fe5f 	bl	90029364 <_ZdlPvj>
900196a6:	4620      	mov	r0, r4
900196a8:	bd10      	pop	{r4, pc}

900196aa <_ZN8touchgfx9DragEventD0Ev>:
900196aa:	b510      	push	{r4, lr}
900196ac:	4604      	mov	r4, r0
900196ae:	2110      	movs	r1, #16
900196b0:	f00f fe58 	bl	90029364 <_ZdlPvj>
900196b4:	4620      	mov	r0, r4
900196b6:	bd10      	pop	{r4, pc}

900196b8 <_ZN8touchgfx12GestureEventD0Ev>:
900196b8:	b510      	push	{r4, lr}
900196ba:	4604      	mov	r4, r0
900196bc:	210c      	movs	r1, #12
900196be:	f00f fe51 	bl	90029364 <_ZdlPvj>
900196c2:	4620      	mov	r0, r4
900196c4:	bd10      	pop	{r4, pc}

900196c6 <_ZN8touchgfx6ScreenD0Ev>:
900196c6:	b510      	push	{r4, lr}
900196c8:	4604      	mov	r4, r0
900196ca:	213c      	movs	r1, #60	; 0x3c
900196cc:	f00f fe4a 	bl	90029364 <_ZdlPvj>
900196d0:	4620      	mov	r0, r4
900196d2:	bd10      	pop	{r4, pc}

900196d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900196d4:	b530      	push	{r4, r5, lr}
900196d6:	460d      	mov	r5, r1
900196d8:	6b01      	ldr	r1, [r0, #48]	; 0x30
900196da:	b087      	sub	sp, #28
900196dc:	4604      	mov	r4, r0
900196de:	b301      	cbz	r1, 90019722 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900196e0:	a801      	add	r0, sp, #4
900196e2:	f7ff fe3d 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900196e6:	892a      	ldrh	r2, [r5, #8]
900196e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900196ec:	7928      	ldrb	r0, [r5, #4]
900196ee:	1ad2      	subs	r2, r2, r3
900196f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900196f2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900196f6:	441a      	add	r2, r3
900196f8:	896b      	ldrh	r3, [r5, #10]
900196fa:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900196fe:	f88d 0010 	strb.w	r0, [sp, #16]
90019702:	1b5b      	subs	r3, r3, r5
90019704:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90019706:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019708:	442b      	add	r3, r5
9001970a:	4d07      	ldr	r5, [pc, #28]	; (90019728 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001970c:	f8ad 1012 	strh.w	r1, [sp, #18]
90019710:	a903      	add	r1, sp, #12
90019712:	9503      	str	r5, [sp, #12]
90019714:	f8ad 2014 	strh.w	r2, [sp, #20]
90019718:	f8ad 3016 	strh.w	r3, [sp, #22]
9001971c:	6803      	ldr	r3, [r0, #0]
9001971e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019720:	4798      	blx	r3
90019722:	b007      	add	sp, #28
90019724:	bd30      	pop	{r4, r5, pc}
90019726:	bf00      	nop
90019728:	9002dba0 	.word	0x9002dba0

9001972c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001972c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019730:	6b03      	ldr	r3, [r0, #48]	; 0x30
90019732:	b08a      	sub	sp, #40	; 0x28
90019734:	4604      	mov	r4, r0
90019736:	460d      	mov	r5, r1
90019738:	b113      	cbz	r3, 90019740 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001973a:	790b      	ldrb	r3, [r1, #4]
9001973c:	2b00      	cmp	r3, #0
9001973e:	d044      	beq.n	900197ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019740:	f104 0804 	add.w	r8, r4, #4
90019744:	a803      	add	r0, sp, #12
90019746:	4641      	mov	r1, r8
90019748:	f7ff fe0a 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001974c:	792b      	ldrb	r3, [r5, #4]
9001974e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90019752:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90019756:	b983      	cbnz	r3, 9001977a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90019758:	f104 0336 	add.w	r3, r4, #54	; 0x36
9001975c:	892a      	ldrh	r2, [r5, #8]
9001975e:	88e9      	ldrh	r1, [r5, #6]
90019760:	4640      	mov	r0, r8
90019762:	1b92      	subs	r2, r2, r6
90019764:	9301      	str	r3, [sp, #4]
90019766:	1bc9      	subs	r1, r1, r7
90019768:	f104 0334 	add.w	r3, r4, #52	; 0x34
9001976c:	b212      	sxth	r2, r2
9001976e:	9300      	str	r3, [sp, #0]
90019770:	b209      	sxth	r1, r1
90019772:	f104 0330 	add.w	r3, r4, #48	; 0x30
90019776:	f7f9 f901 	bl	9001297c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001977a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001977c:	b329      	cbz	r1, 900197ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001977e:	a805      	add	r0, sp, #20
90019780:	f7ff fdee 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019784:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019788:	792b      	ldrb	r3, [r5, #4]
9001978a:	a907      	add	r1, sp, #28
9001978c:	1abf      	subs	r7, r7, r2
9001978e:	88ea      	ldrh	r2, [r5, #6]
90019790:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019792:	4417      	add	r7, r2
90019794:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90019796:	f88d 3020 	strb.w	r3, [sp, #32]
9001979a:	4417      	add	r7, r2
9001979c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
900197a0:	1ab6      	subs	r6, r6, r2
900197a2:	892a      	ldrh	r2, [r5, #8]
900197a4:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900197a8:	4416      	add	r6, r2
900197aa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900197ac:	4416      	add	r6, r2
900197ae:	4a08      	ldr	r2, [pc, #32]	; (900197d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
900197b0:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
900197b4:	2600      	movs	r6, #0
900197b6:	9207      	str	r2, [sp, #28]
900197b8:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
900197bc:	6803      	ldr	r3, [r0, #0]
900197be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900197c0:	4798      	blx	r3
900197c2:	792b      	ldrb	r3, [r5, #4]
900197c4:	b10b      	cbz	r3, 900197ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900197c6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
900197ca:	b00a      	add	sp, #40	; 0x28
900197cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900197d0:	9002db78 	.word	0x9002db78

900197d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900197d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900197d8:	460c      	mov	r4, r1
900197da:	6b01      	ldr	r1, [r0, #48]	; 0x30
900197dc:	b088      	sub	sp, #32
900197de:	4605      	mov	r5, r0
900197e0:	2900      	cmp	r1, #0
900197e2:	d06d      	beq.n	900198c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900197e4:	4668      	mov	r0, sp
900197e6:	f7ff fdbb 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900197ea:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900197ec:	88e3      	ldrh	r3, [r4, #6]
900197ee:	f9bd 8000 	ldrsh.w	r8, [sp]
900197f2:	440b      	add	r3, r1
900197f4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900197f8:	b21b      	sxth	r3, r3
900197fa:	4543      	cmp	r3, r8
900197fc:	db31      	blt.n	90019862 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900197fe:	f8bd c004 	ldrh.w	ip, [sp, #4]
90019802:	44c4      	add	ip, r8
90019804:	fa0f fc8c 	sxth.w	ip, ip
90019808:	4563      	cmp	r3, ip
9001980a:	da2a      	bge.n	90019862 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001980c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
9001980e:	8926      	ldrh	r6, [r4, #8]
90019810:	4416      	add	r6, r2
90019812:	b236      	sxth	r6, r6
90019814:	42be      	cmp	r6, r7
90019816:	db24      	blt.n	90019862 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019818:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001981c:	4438      	add	r0, r7
9001981e:	b200      	sxth	r0, r0
90019820:	4286      	cmp	r6, r0
90019822:	da1e      	bge.n	90019862 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019824:	8963      	ldrh	r3, [r4, #10]
90019826:	4419      	add	r1, r3
90019828:	b209      	sxth	r1, r1
9001982a:	4541      	cmp	r1, r8
9001982c:	db08      	blt.n	90019840 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001982e:	4561      	cmp	r1, ip
90019830:	da06      	bge.n	90019840 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019832:	89a3      	ldrh	r3, [r4, #12]
90019834:	441a      	add	r2, r3
90019836:	b212      	sxth	r2, r2
90019838:	42ba      	cmp	r2, r7
9001983a:	db01      	blt.n	90019840 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001983c:	4282      	cmp	r2, r0
9001983e:	db10      	blt.n	90019862 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019840:	4b21      	ldr	r3, [pc, #132]	; (900198c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90019842:	a904      	add	r1, sp, #16
90019844:	6b28      	ldr	r0, [r5, #48]	; 0x30
90019846:	9304      	str	r3, [sp, #16]
90019848:	2302      	movs	r3, #2
9001984a:	f88d 3014 	strb.w	r3, [sp, #20]
9001984e:	2300      	movs	r3, #0
90019850:	f8ad 3016 	strh.w	r3, [sp, #22]
90019854:	f8ad 3018 	strh.w	r3, [sp, #24]
90019858:	f8ad 301a 	strh.w	r3, [sp, #26]
9001985c:	6803      	ldr	r3, [r0, #0]
9001985e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019860:	4798      	blx	r3
90019862:	1d29      	adds	r1, r5, #4
90019864:	a802      	add	r0, sp, #8
90019866:	f7ff fd7b 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001986a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001986e:	88e0      	ldrh	r0, [r4, #6]
90019870:	eba3 0808 	sub.w	r8, r3, r8
90019874:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019878:	7921      	ldrb	r1, [r4, #4]
9001987a:	fa1f f888 	uxth.w	r8, r8
9001987e:	1bdf      	subs	r7, r3, r7
90019880:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90019884:	b2bb      	uxth	r3, r7
90019886:	4440      	add	r0, r8
90019888:	8922      	ldrh	r2, [r4, #8]
9001988a:	8967      	ldrh	r7, [r4, #10]
9001988c:	4460      	add	r0, ip
9001988e:	89a4      	ldrh	r4, [r4, #12]
90019890:	441a      	add	r2, r3
90019892:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90019894:	44b8      	add	r8, r7
90019896:	4423      	add	r3, r4
90019898:	f8ad 0016 	strh.w	r0, [sp, #22]
9001989c:	4432      	add	r2, r6
9001989e:	44e0      	add	r8, ip
900198a0:	4433      	add	r3, r6
900198a2:	4c0a      	ldr	r4, [pc, #40]	; (900198cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
900198a4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900198a6:	f88d 1014 	strb.w	r1, [sp, #20]
900198aa:	a904      	add	r1, sp, #16
900198ac:	9404      	str	r4, [sp, #16]
900198ae:	f8ad 2018 	strh.w	r2, [sp, #24]
900198b2:	f8ad 801a 	strh.w	r8, [sp, #26]
900198b6:	f8ad 301c 	strh.w	r3, [sp, #28]
900198ba:	6803      	ldr	r3, [r0, #0]
900198bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900198be:	4798      	blx	r3
900198c0:	b008      	add	sp, #32
900198c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900198c6:	bf00      	nop
900198c8:	9002db78 	.word	0x9002db78
900198cc:	9002db8c 	.word	0x9002db8c

900198d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900198d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900198d2:	4604      	mov	r4, r0
900198d4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900198d8:	3201      	adds	r2, #1
900198da:	d112      	bne.n	90019902 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900198dc:	2500      	movs	r5, #0
900198de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900198e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900198e6:	6803      	ldr	r3, [r0, #0]
900198e8:	9500      	str	r5, [sp, #0]
900198ea:	466d      	mov	r5, sp
900198ec:	f8ad 1004 	strh.w	r1, [sp, #4]
900198f0:	f8ad 2006 	strh.w	r2, [sp, #6]
900198f4:	4629      	mov	r1, r5
900198f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900198f8:	4798      	blx	r3
900198fa:	e895 0003 	ldmia.w	r5, {r0, r1}
900198fe:	e884 0003 	stmia.w	r4, {r0, r1}
90019902:	4620      	mov	r0, r4
90019904:	b003      	add	sp, #12
90019906:	bd30      	pop	{r4, r5, pc}

90019908 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90019908:	b513      	push	{r0, r1, r4, lr}
9001990a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001990e:	4604      	mov	r4, r0
90019910:	3301      	adds	r3, #1
90019912:	d109      	bne.n	90019928 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90019914:	4601      	mov	r1, r0
90019916:	4668      	mov	r0, sp
90019918:	f7ff fd22 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001991c:	f8bd 3000 	ldrh.w	r3, [sp]
90019920:	8423      	strh	r3, [r4, #32]
90019922:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019926:	8463      	strh	r3, [r4, #34]	; 0x22
90019928:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001992c:	b002      	add	sp, #8
9001992e:	bd10      	pop	{r4, pc}

90019930 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90019930:	b513      	push	{r0, r1, r4, lr}
90019932:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90019936:	4604      	mov	r4, r0
90019938:	3301      	adds	r3, #1
9001993a:	d109      	bne.n	90019950 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001993c:	4601      	mov	r1, r0
9001993e:	4668      	mov	r0, sp
90019940:	f7ff fd0e 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019944:	f8bd 3000 	ldrh.w	r3, [sp]
90019948:	8423      	strh	r3, [r4, #32]
9001994a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001994e:	8463      	strh	r3, [r4, #34]	; 0x22
90019950:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90019954:	b002      	add	sp, #8
90019956:	bd10      	pop	{r4, pc}

90019958 <_ZN8touchgfx6ScreenC1Ev>:
90019958:	b570      	push	{r4, r5, r6, lr}
9001995a:	4b17      	ldr	r3, [pc, #92]	; (900199b8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001995c:	4605      	mov	r5, r0
9001995e:	4a17      	ldr	r2, [pc, #92]	; (900199bc <_ZN8touchgfx6ScreenC1Ev+0x64>)
90019960:	2101      	movs	r1, #1
90019962:	f845 3b04 	str.w	r3, [r5], #4
90019966:	2300      	movs	r3, #0
90019968:	6042      	str	r2, [r0, #4]
9001996a:	4604      	mov	r4, r0
9001996c:	8103      	strh	r3, [r0, #8]
9001996e:	8143      	strh	r3, [r0, #10]
90019970:	8183      	strh	r3, [r0, #12]
90019972:	81c3      	strh	r3, [r0, #14]
90019974:	8203      	strh	r3, [r0, #16]
90019976:	8243      	strh	r3, [r0, #18]
90019978:	8283      	strh	r3, [r0, #20]
9001997a:	82c3      	strh	r3, [r0, #22]
9001997c:	6203      	str	r3, [r0, #32]
9001997e:	8483      	strh	r3, [r0, #36]	; 0x24
90019980:	84c3      	strh	r3, [r0, #38]	; 0x26
90019982:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90019986:	6343      	str	r3, [r0, #52]	; 0x34
90019988:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001998c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90019990:	e9c0 3306 	strd	r3, r3, [r0, #24]
90019994:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90019998:	4b09      	ldr	r3, [pc, #36]	; (900199c0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001999a:	4628      	mov	r0, r5
9001999c:	f9b3 6000 	ldrsh.w	r6, [r3]
900199a0:	6b93      	ldr	r3, [r2, #56]	; 0x38
900199a2:	4a08      	ldr	r2, [pc, #32]	; (900199c4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
900199a4:	f9b2 1000 	ldrsh.w	r1, [r2]
900199a8:	4798      	blx	r3
900199aa:	6863      	ldr	r3, [r4, #4]
900199ac:	4628      	mov	r0, r5
900199ae:	4631      	mov	r1, r6
900199b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900199b2:	4798      	blx	r3
900199b4:	4620      	mov	r0, r4
900199b6:	bd70      	pop	{r4, r5, r6, pc}
900199b8:	9002dbb4 	.word	0x9002dbb4
900199bc:	9002d41c 	.word	0x9002d41c
900199c0:	24039ac2 	.word	0x24039ac2
900199c4:	24039ac0 	.word	0x24039ac0

900199c8 <_ZN8touchgfx6Screen4drawEv>:
900199c8:	4b09      	ldr	r3, [pc, #36]	; (900199f0 <_ZN8touchgfx6Screen4drawEv+0x28>)
900199ca:	b507      	push	{r0, r1, r2, lr}
900199cc:	f9b3 2000 	ldrsh.w	r2, [r3]
900199d0:	2100      	movs	r1, #0
900199d2:	4b08      	ldr	r3, [pc, #32]	; (900199f4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900199d4:	9100      	str	r1, [sp, #0]
900199d6:	4669      	mov	r1, sp
900199d8:	f9b3 3000 	ldrsh.w	r3, [r3]
900199dc:	f8ad 2004 	strh.w	r2, [sp, #4]
900199e0:	f8ad 3006 	strh.w	r3, [sp, #6]
900199e4:	6803      	ldr	r3, [r0, #0]
900199e6:	689b      	ldr	r3, [r3, #8]
900199e8:	4798      	blx	r3
900199ea:	b003      	add	sp, #12
900199ec:	f85d fb04 	ldr.w	pc, [sp], #4
900199f0:	24039ac0 	.word	0x24039ac0
900199f4:	24039ac2 	.word	0x24039ac2

900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900199f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900199fc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019a00:	b089      	sub	sp, #36	; 0x24
90019a02:	4680      	mov	r8, r0
90019a04:	460c      	mov	r4, r1
90019a06:	2b00      	cmp	r3, #0
90019a08:	4615      	mov	r5, r2
90019a0a:	dd0e      	ble.n	90019a2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019a0c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90019a10:	2b00      	cmp	r3, #0
90019a12:	dd0a      	ble.n	90019a2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019a14:	4628      	mov	r0, r5
90019a16:	f7ff ff5b 	bl	900198d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019a1a:	4621      	mov	r1, r4
90019a1c:	f7fe fa85 	bl	90017f2a <_ZNK8touchgfx4Rect9intersectERKS0_>
90019a20:	69eb      	ldr	r3, [r5, #28]
90019a22:	b928      	cbnz	r0, 90019a30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90019a24:	461d      	mov	r5, r3
90019a26:	2b00      	cmp	r3, #0
90019a28:	d1f4      	bne.n	90019a14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90019a2a:	b009      	add	sp, #36	; 0x24
90019a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019a30:	ae04      	add	r6, sp, #16
90019a32:	2b00      	cmp	r3, #0
90019a34:	f000 80b5 	beq.w	90019ba2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019a38:	682b      	ldr	r3, [r5, #0]
90019a3a:	4629      	mov	r1, r5
90019a3c:	a802      	add	r0, sp, #8
90019a3e:	68db      	ldr	r3, [r3, #12]
90019a40:	4798      	blx	r3
90019a42:	4628      	mov	r0, r5
90019a44:	f7ff ff60 	bl	90019908 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019a48:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90019a4c:	4407      	add	r7, r0
90019a4e:	4628      	mov	r0, r5
90019a50:	f7ff ff6e 	bl	90019930 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019a54:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019a58:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90019a5c:	b23f      	sxth	r7, r7
90019a5e:	4418      	add	r0, r3
90019a60:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90019a64:	4621      	mov	r1, r4
90019a66:	f8ad 2014 	strh.w	r2, [sp, #20]
90019a6a:	f8ad 0012 	strh.w	r0, [sp, #18]
90019a6e:	4630      	mov	r0, r6
90019a70:	f8ad 3016 	strh.w	r3, [sp, #22]
90019a74:	f8ad 7010 	strh.w	r7, [sp, #16]
90019a78:	f7f9 f862 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90019a7c:	4628      	mov	r0, r5
90019a7e:	f7ff ff27 	bl	900198d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019a82:	ab06      	add	r3, sp, #24
90019a84:	4602      	mov	r2, r0
90019a86:	e896 0003 	ldmia.w	r6, {r0, r1}
90019a8a:	e883 0003 	stmia.w	r3, {r0, r1}
90019a8e:	4611      	mov	r1, r2
90019a90:	4618      	mov	r0, r3
90019a92:	f7f9 f855 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90019a96:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019a9a:	f9b4 1000 	ldrsh.w	r1, [r4]
90019a9e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90019aa2:	4299      	cmp	r1, r3
90019aa4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019aa8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019aac:	d10b      	bne.n	90019ac6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019aae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019ab2:	4552      	cmp	r2, sl
90019ab4:	d107      	bne.n	90019ac6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019ab6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019aba:	455a      	cmp	r2, fp
90019abc:	d103      	bne.n	90019ac6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019abe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90019ac2:	454a      	cmp	r2, r9
90019ac4:	d06d      	beq.n	90019ba2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019ac6:	f1bb 0f00 	cmp.w	fp, #0
90019aca:	dd65      	ble.n	90019b98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019acc:	f1b9 0f00 	cmp.w	r9, #0
90019ad0:	dd62      	ble.n	90019b98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019ad2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019ad6:	fa1f f08a 	uxth.w	r0, sl
90019ada:	4552      	cmp	r2, sl
90019adc:	9000      	str	r0, [sp, #0]
90019ade:	da12      	bge.n	90019b06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019ae0:	9301      	str	r3, [sp, #4]
90019ae2:	9b00      	ldr	r3, [sp, #0]
90019ae4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019ae8:	f8ad 2012 	strh.w	r2, [sp, #18]
90019aec:	1a9a      	subs	r2, r3, r2
90019aee:	f8ad 1010 	strh.w	r1, [sp, #16]
90019af2:	4631      	mov	r1, r6
90019af4:	f8ad 0014 	strh.w	r0, [sp, #20]
90019af8:	4640      	mov	r0, r8
90019afa:	f8ad 2016 	strh.w	r2, [sp, #22]
90019afe:	69ea      	ldr	r2, [r5, #28]
90019b00:	f7ff ff7a 	bl	900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019b04:	9b01      	ldr	r3, [sp, #4]
90019b06:	f9b4 2000 	ldrsh.w	r2, [r4]
90019b0a:	b29f      	uxth	r7, r3
90019b0c:	429a      	cmp	r2, r3
90019b0e:	da0d      	bge.n	90019b2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90019b10:	f8ad 2010 	strh.w	r2, [sp, #16]
90019b14:	1aba      	subs	r2, r7, r2
90019b16:	f8ad a012 	strh.w	sl, [sp, #18]
90019b1a:	4631      	mov	r1, r6
90019b1c:	f8ad 2014 	strh.w	r2, [sp, #20]
90019b20:	4640      	mov	r0, r8
90019b22:	f8ad 9016 	strh.w	r9, [sp, #22]
90019b26:	69ea      	ldr	r2, [r5, #28]
90019b28:	f7ff ff66 	bl	900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019b2c:	8822      	ldrh	r2, [r4, #0]
90019b2e:	445f      	add	r7, fp
90019b30:	88a3      	ldrh	r3, [r4, #4]
90019b32:	b2bf      	uxth	r7, r7
90019b34:	4413      	add	r3, r2
90019b36:	b23a      	sxth	r2, r7
90019b38:	b29b      	uxth	r3, r3
90019b3a:	b219      	sxth	r1, r3
90019b3c:	4291      	cmp	r1, r2
90019b3e:	dd0d      	ble.n	90019b5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90019b40:	1bdb      	subs	r3, r3, r7
90019b42:	f8ad 2010 	strh.w	r2, [sp, #16]
90019b46:	f8ad a012 	strh.w	sl, [sp, #18]
90019b4a:	4631      	mov	r1, r6
90019b4c:	f8ad 3014 	strh.w	r3, [sp, #20]
90019b50:	4640      	mov	r0, r8
90019b52:	f8ad 9016 	strh.w	r9, [sp, #22]
90019b56:	69ea      	ldr	r2, [r5, #28]
90019b58:	f7ff ff4e 	bl	900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019b5c:	88e2      	ldrh	r2, [r4, #6]
90019b5e:	8863      	ldrh	r3, [r4, #2]
90019b60:	4413      	add	r3, r2
90019b62:	9a00      	ldr	r2, [sp, #0]
90019b64:	444a      	add	r2, r9
90019b66:	b29b      	uxth	r3, r3
90019b68:	fa1f f982 	uxth.w	r9, r2
90019b6c:	b219      	sxth	r1, r3
90019b6e:	fa0f f289 	sxth.w	r2, r9
90019b72:	428a      	cmp	r2, r1
90019b74:	da15      	bge.n	90019ba2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019b76:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019b7a:	eba3 0309 	sub.w	r3, r3, r9
90019b7e:	f9b4 0000 	ldrsh.w	r0, [r4]
90019b82:	f8ad 1014 	strh.w	r1, [sp, #20]
90019b86:	4631      	mov	r1, r6
90019b88:	f8ad 0010 	strh.w	r0, [sp, #16]
90019b8c:	f8ad 2012 	strh.w	r2, [sp, #18]
90019b90:	f8ad 3016 	strh.w	r3, [sp, #22]
90019b94:	69ea      	ldr	r2, [r5, #28]
90019b96:	e001      	b.n	90019b9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019b98:	69ea      	ldr	r2, [r5, #28]
90019b9a:	4621      	mov	r1, r4
90019b9c:	4640      	mov	r0, r8
90019b9e:	f7ff ff2b 	bl	900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019ba2:	4628      	mov	r0, r5
90019ba4:	f7ff fe94 	bl	900198d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019ba8:	6861      	ldr	r1, [r4, #4]
90019baa:	4602      	mov	r2, r0
90019bac:	4633      	mov	r3, r6
90019bae:	6820      	ldr	r0, [r4, #0]
90019bb0:	c303      	stmia	r3!, {r0, r1}
90019bb2:	4611      	mov	r1, r2
90019bb4:	4630      	mov	r0, r6
90019bb6:	f7f8 ffc3 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90019bba:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019bbe:	2b00      	cmp	r3, #0
90019bc0:	f77f af33 	ble.w	90019a2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019bc4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019bc8:	2b00      	cmp	r3, #0
90019bca:	f77f af2e 	ble.w	90019a2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019bce:	4628      	mov	r0, r5
90019bd0:	f7ff fe9a 	bl	90019908 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019bd4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019bd8:	1a18      	subs	r0, r3, r0
90019bda:	f8ad 0010 	strh.w	r0, [sp, #16]
90019bde:	4628      	mov	r0, r5
90019be0:	f7ff fea6 	bl	90019930 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019be4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90019be8:	4631      	mov	r1, r6
90019bea:	1a18      	subs	r0, r3, r0
90019bec:	f8ad 0012 	strh.w	r0, [sp, #18]
90019bf0:	4628      	mov	r0, r5
90019bf2:	682b      	ldr	r3, [r5, #0]
90019bf4:	689b      	ldr	r3, [r3, #8]
90019bf6:	4798      	blx	r3
90019bf8:	e717      	b.n	90019a2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90019bfa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90019bfa:	b570      	push	{r4, r5, r6, lr}
90019bfc:	1d06      	adds	r6, r0, #4
90019bfe:	b086      	sub	sp, #24
90019c00:	460c      	mov	r4, r1
90019c02:	2300      	movs	r3, #0
90019c04:	4631      	mov	r1, r6
90019c06:	4605      	mov	r5, r0
90019c08:	a802      	add	r0, sp, #8
90019c0a:	9301      	str	r3, [sp, #4]
90019c0c:	f7ff fba8 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019c10:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019c14:	8822      	ldrh	r2, [r4, #0]
90019c16:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90019c1a:	1ad2      	subs	r2, r2, r3
90019c1c:	8863      	ldrh	r3, [r4, #2]
90019c1e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019c22:	1a5b      	subs	r3, r3, r1
90019c24:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90019c28:	f8ad 2010 	strh.w	r2, [sp, #16]
90019c2c:	aa01      	add	r2, sp, #4
90019c2e:	f8ad 0014 	strh.w	r0, [sp, #20]
90019c32:	4630      	mov	r0, r6
90019c34:	f8ad 1016 	strh.w	r1, [sp, #22]
90019c38:	a904      	add	r1, sp, #16
90019c3a:	f8ad 3012 	strh.w	r3, [sp, #18]
90019c3e:	f7f9 f857 	bl	90012cf0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90019c42:	9a01      	ldr	r2, [sp, #4]
90019c44:	b11a      	cbz	r2, 90019c4e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90019c46:	4621      	mov	r1, r4
90019c48:	4628      	mov	r0, r5
90019c4a:	f7ff fed5 	bl	900199f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019c4e:	b006      	add	sp, #24
90019c50:	bd70      	pop	{r4, r5, r6, pc}

90019c52 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90019c52:	4602      	mov	r2, r0
90019c54:	b530      	push	{r4, r5, lr}
90019c56:	4604      	mov	r4, r0
90019c58:	b085      	sub	sp, #20
90019c5a:	f852 0f08 	ldr.w	r0, [r2, #8]!
90019c5e:	460d      	mov	r5, r1
90019c60:	466b      	mov	r3, sp
90019c62:	6851      	ldr	r1, [r2, #4]
90019c64:	c303      	stmia	r3!, {r0, r1}
90019c66:	4629      	mov	r1, r5
90019c68:	4668      	mov	r0, sp
90019c6a:	f7f8 ff69 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90019c6e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90019c72:	b12b      	cbz	r3, 90019c80 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90019c74:	4669      	mov	r1, sp
90019c76:	4620      	mov	r0, r4
90019c78:	f7ff ffbf 	bl	90019bfa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019c7c:	b005      	add	sp, #20
90019c7e:	bd30      	pop	{r4, r5, pc}
90019c80:	3404      	adds	r4, #4
90019c82:	a802      	add	r0, sp, #8
90019c84:	4621      	mov	r1, r4
90019c86:	f7ff fb6b 	bl	90019360 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019c8a:	f8bd 3000 	ldrh.w	r3, [sp]
90019c8e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90019c92:	4669      	mov	r1, sp
90019c94:	4620      	mov	r0, r4
90019c96:	1a9b      	subs	r3, r3, r2
90019c98:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019c9c:	f8ad 3000 	strh.w	r3, [sp]
90019ca0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019ca4:	1a9b      	subs	r3, r3, r2
90019ca6:	f8ad 3002 	strh.w	r3, [sp, #2]
90019caa:	f7f8 ffe8 	bl	90012c7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019cae:	e7e5      	b.n	90019c7c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019cb0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019cb0:	460b      	mov	r3, r1
90019cb2:	680a      	ldr	r2, [r1, #0]
90019cb4:	1d01      	adds	r1, r0, #4
90019cb6:	6992      	ldr	r2, [r2, #24]
90019cb8:	4618      	mov	r0, r3
90019cba:	4710      	bx	r2

90019cbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90019cbc:	4298      	cmp	r0, r3
90019cbe:	d200      	bcs.n	90019cc2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90019cc0:	b913      	cbnz	r3, 90019cc8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90019cc2:	440a      	add	r2, r1
90019cc4:	b210      	sxth	r0, r2
90019cc6:	4770      	bx	lr
90019cc8:	ee07 0a90 	vmov	s15, r0
90019ccc:	eef8 6a67 	vcvt.f32.u32	s13, s15
90019cd0:	ee07 3a90 	vmov	s15, r3
90019cd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019cd8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90019cdc:	ee07 2a90 	vmov	s15, r2
90019ce0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019ce4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90019ce8:	ee07 1a90 	vmov	s15, r1
90019cec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019cf0:	ee37 7a66 	vsub.f32	s14, s14, s13
90019cf4:	ee67 5a07 	vmul.f32	s11, s14, s14
90019cf8:	eee5 6a87 	vfma.f32	s13, s11, s14
90019cfc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90019d00:	eee6 7a26 	vfma.f32	s15, s12, s13
90019d04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90019d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019d0c:	bfcc      	ite	gt
90019d0e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90019d12:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90019d16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90019d1a:	ee17 3a90 	vmov	r3, s15
90019d1e:	b218      	sxth	r0, r3
90019d20:	4770      	bx	lr

90019d22 <_ZN8touchgfx12TextProviderC1Ev>:
90019d22:	b538      	push	{r3, r4, r5, lr}
90019d24:	2500      	movs	r5, #0
90019d26:	2302      	movs	r3, #2
90019d28:	4604      	mov	r4, r0
90019d2a:	220e      	movs	r2, #14
90019d2c:	7403      	strb	r3, [r0, #16]
90019d2e:	4629      	mov	r1, r5
90019d30:	6145      	str	r5, [r0, #20]
90019d32:	7605      	strb	r5, [r0, #24]
90019d34:	83c5      	strh	r5, [r0, #30]
90019d36:	8405      	strh	r5, [r0, #32]
90019d38:	86c5      	strh	r5, [r0, #54]	; 0x36
90019d3a:	8705      	strh	r5, [r0, #56]	; 0x38
90019d3c:	87c5      	strh	r5, [r0, #62]	; 0x3e
90019d3e:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90019d42:	e9c0 5500 	strd	r5, r5, [r0]
90019d46:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90019d4a:	304c      	adds	r0, #76	; 0x4c
90019d4c:	f00f fdc0 	bl	900298d0 <memset>
90019d50:	2301      	movs	r3, #1
90019d52:	4620      	mov	r0, r4
90019d54:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90019d58:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90019d5c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90019d60:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90019d64:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90019d68:	f7ea fc1c 	bl	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90019d6c:	4620      	mov	r0, r4
90019d6e:	bd38      	pop	{r3, r4, r5, pc}

90019d70 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90019d70:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90019d72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019d76:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90019d78:	fab0 f080 	clz	r0, r0
90019d7c:	0940      	lsrs	r0, r0, #5
90019d7e:	4770      	bx	lr

90019d80 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90019d80:	b530      	push	{r4, r5, lr}
90019d82:	2500      	movs	r5, #0
90019d84:	2401      	movs	r4, #1
90019d86:	6843      	ldr	r3, [r0, #4]
90019d88:	b913      	cbnz	r3, 90019d90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90019d8a:	6803      	ldr	r3, [r0, #0]
90019d8c:	b313      	cbz	r3, 90019dd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019d8e:	6043      	str	r3, [r0, #4]
90019d90:	7e03      	ldrb	r3, [r0, #24]
90019d92:	b143      	cbz	r3, 90019da6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90019d94:	6943      	ldr	r3, [r0, #20]
90019d96:	b12b      	cbz	r3, 90019da4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019d98:	881a      	ldrh	r2, [r3, #0]
90019d9a:	b11a      	cbz	r2, 90019da4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019d9c:	1c9a      	adds	r2, r3, #2
90019d9e:	6142      	str	r2, [r0, #20]
90019da0:	8818      	ldrh	r0, [r3, #0]
90019da2:	bd30      	pop	{r4, r5, pc}
90019da4:	7605      	strb	r5, [r0, #24]
90019da6:	6843      	ldr	r3, [r0, #4]
90019da8:	8819      	ldrh	r1, [r3, #0]
90019daa:	b199      	cbz	r1, 90019dd4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019dac:	1c9a      	adds	r2, r3, #2
90019dae:	2902      	cmp	r1, #2
90019db0:	6042      	str	r2, [r0, #4]
90019db2:	d1f5      	bne.n	90019da0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90019db4:	7c03      	ldrb	r3, [r0, #16]
90019db6:	2b01      	cmp	r3, #1
90019db8:	d8e5      	bhi.n	90019d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019dba:	1c5a      	adds	r2, r3, #1
90019dbc:	3302      	adds	r3, #2
90019dbe:	7402      	strb	r2, [r0, #16]
90019dc0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90019dc4:	6143      	str	r3, [r0, #20]
90019dc6:	2b00      	cmp	r3, #0
90019dc8:	d0dd      	beq.n	90019d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019dca:	881b      	ldrh	r3, [r3, #0]
90019dcc:	2b00      	cmp	r3, #0
90019dce:	d0da      	beq.n	90019d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019dd0:	7604      	strb	r4, [r0, #24]
90019dd2:	e7d8      	b.n	90019d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019dd4:	2000      	movs	r0, #0
90019dd6:	e7e4      	b.n	90019da2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90019dd8:	6001      	str	r1, [r0, #0]
90019dda:	2100      	movs	r1, #0
90019ddc:	b430      	push	{r4, r5}
90019dde:	6041      	str	r1, [r0, #4]
90019de0:	6815      	ldr	r5, [r2, #0]
90019de2:	6085      	str	r5, [r0, #8]
90019de4:	6852      	ldr	r2, [r2, #4]
90019de6:	6443      	str	r3, [r0, #68]	; 0x44
90019de8:	9b02      	ldr	r3, [sp, #8]
90019dea:	60c2      	str	r2, [r0, #12]
90019dec:	7401      	strb	r1, [r0, #16]
90019dee:	6141      	str	r1, [r0, #20]
90019df0:	7601      	strb	r1, [r0, #24]
90019df2:	8701      	strh	r1, [r0, #56]	; 0x38
90019df4:	8401      	strh	r1, [r0, #32]
90019df6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90019dfa:	6483      	str	r3, [r0, #72]	; 0x48
90019dfc:	bc30      	pop	{r4, r5}
90019dfe:	f7ea bbd1 	b.w	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90019e02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90019e02:	b408      	push	{r3}
90019e04:	b510      	push	{r4, lr}
90019e06:	b085      	sub	sp, #20
90019e08:	ac07      	add	r4, sp, #28
90019e0a:	f854 3b04 	ldr.w	r3, [r4], #4
90019e0e:	9300      	str	r3, [sp, #0]
90019e10:	4613      	mov	r3, r2
90019e12:	4622      	mov	r2, r4
90019e14:	9403      	str	r4, [sp, #12]
90019e16:	f7ff ffdf 	bl	90019dd8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019e1a:	b005      	add	sp, #20
90019e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019e20:	b001      	add	sp, #4
90019e22:	4770      	bx	lr

90019e24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90019e24:	b5f0      	push	{r4, r5, r6, r7, lr}
90019e26:	4605      	mov	r5, r0
90019e28:	4608      	mov	r0, r1
90019e2a:	b1f1      	cbz	r1, 90019e6a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90019e2c:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90019e30:	460b      	mov	r3, r1
90019e32:	f101 0708 	add.w	r7, r1, #8
90019e36:	4622      	mov	r2, r4
90019e38:	6818      	ldr	r0, [r3, #0]
90019e3a:	3308      	adds	r3, #8
90019e3c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019e40:	4626      	mov	r6, r4
90019e42:	42bb      	cmp	r3, r7
90019e44:	c603      	stmia	r6!, {r0, r1}
90019e46:	4634      	mov	r4, r6
90019e48:	d1f6      	bne.n	90019e38 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90019e4a:	6818      	ldr	r0, [r3, #0]
90019e4c:	6030      	str	r0, [r6, #0]
90019e4e:	4610      	mov	r0, r2
90019e50:	889b      	ldrh	r3, [r3, #4]
90019e52:	80b3      	strh	r3, [r6, #4]
90019e54:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90019e58:	015b      	lsls	r3, r3, #5
90019e5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
90019e5e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90019e62:	430b      	orrs	r3, r1
90019e64:	425b      	negs	r3, r3
90019e66:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90019e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019e6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90019e6c:	b538      	push	{r3, r4, r5, lr}
90019e6e:	460c      	mov	r4, r1
90019e70:	6811      	ldr	r1, [r2, #0]
90019e72:	4610      	mov	r0, r2
90019e74:	68cd      	ldr	r5, [r1, #12]
90019e76:	4619      	mov	r1, r3
90019e78:	47a8      	blx	r5
90019e7a:	2800      	cmp	r0, #0
90019e7c:	bf08      	it	eq
90019e7e:	4620      	moveq	r0, r4
90019e80:	bd38      	pop	{r3, r4, r5, pc}
	...

90019e84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90019e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019e86:	4604      	mov	r4, r0
90019e88:	4615      	mov	r5, r2
90019e8a:	4608      	mov	r0, r1
90019e8c:	b93a      	cbnz	r2, 90019e9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90019e8e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90019e92:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90019e96:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90019e9a:	4628      	mov	r0, r5
90019e9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019e9e:	f892 c00d 	ldrb.w	ip, [r2, #13]
90019ea2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90019ea6:	8893      	ldrh	r3, [r2, #4]
90019ea8:	ea4f 160c 	mov.w	r6, ip, lsl #4
90019eac:	f406 7280 	and.w	r2, r6, #256	; 0x100
90019eb0:	79ee      	ldrb	r6, [r5, #7]
90019eb2:	4316      	orrs	r6, r2
90019eb4:	19da      	adds	r2, r3, r7
90019eb6:	b291      	uxth	r1, r2
90019eb8:	b2b7      	uxth	r7, r6
90019eba:	291d      	cmp	r1, #29
90019ebc:	d87b      	bhi.n	90019fb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90019ebe:	2201      	movs	r2, #1
90019ec0:	10f6      	asrs	r6, r6, #3
90019ec2:	408a      	lsls	r2, r1
90019ec4:	4974      	ldr	r1, [pc, #464]	; (9001a098 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90019ec6:	420a      	tst	r2, r1
90019ec8:	d12e      	bne.n	90019f28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90019eca:	f412 7f60 	tst.w	r2, #896	; 0x380
90019ece:	d072      	beq.n	90019fb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90019ed0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90019ed4:	462b      	mov	r3, r5
90019ed6:	f105 0e08 	add.w	lr, r5, #8
90019eda:	4615      	mov	r5, r2
90019edc:	6818      	ldr	r0, [r3, #0]
90019ede:	3308      	adds	r3, #8
90019ee0:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019ee4:	4694      	mov	ip, r2
90019ee6:	4573      	cmp	r3, lr
90019ee8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019eec:	4662      	mov	r2, ip
90019eee:	d1f5      	bne.n	90019edc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019ef0:	6818      	ldr	r0, [r3, #0]
90019ef2:	f8cc 0000 	str.w	r0, [ip]
90019ef6:	889b      	ldrh	r3, [r3, #4]
90019ef8:	f8ac 3004 	strh.w	r3, [ip, #4]
90019efc:	b2b3      	uxth	r3, r6
90019efe:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90019f02:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90019f06:	1aca      	subs	r2, r1, r3
90019f08:	1bcf      	subs	r7, r1, r7
90019f0a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
90019f0e:	b292      	uxth	r2, r2
90019f10:	1afb      	subs	r3, r7, r3
90019f12:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90019f16:	10d2      	asrs	r2, r2, #3
90019f18:	f002 0260 	and.w	r2, r2, #96	; 0x60
90019f1c:	4302      	orrs	r2, r0
90019f1e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
90019f22:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90019f26:	e7b8      	b.n	90019e9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90019f28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90019f2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90019f2e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
90019f30:	f640 6333 	movw	r3, #3635	; 0xe33
90019f34:	4299      	cmp	r1, r3
90019f36:	d110      	bne.n	90019f5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90019f38:	6803      	ldr	r3, [r0, #0]
90019f3a:	68db      	ldr	r3, [r3, #12]
90019f3c:	4798      	blx	r3
90019f3e:	7b41      	ldrb	r1, [r0, #13]
90019f40:	00cb      	lsls	r3, r1, #3
90019f42:	f403 7280 	and.w	r2, r3, #256	; 0x100
90019f46:	7a03      	ldrb	r3, [r0, #8]
90019f48:	0648      	lsls	r0, r1, #25
90019f4a:	ea43 0302 	orr.w	r3, r3, r2
90019f4e:	bf44      	itt	mi
90019f50:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019f54:	b21b      	sxthmi	r3, r3
90019f56:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90019f5a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
90019f5e:	462a      	mov	r2, r5
90019f60:	f105 0c08 	add.w	ip, r5, #8
90019f64:	443b      	add	r3, r7
90019f66:	4433      	add	r3, r6
90019f68:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90019f6c:	b29b      	uxth	r3, r3
90019f6e:	4635      	mov	r5, r6
90019f70:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90019f74:	6810      	ldr	r0, [r2, #0]
90019f76:	3208      	adds	r2, #8
90019f78:	f852 1c04 	ldr.w	r1, [r2, #-4]
90019f7c:	4637      	mov	r7, r6
90019f7e:	4562      	cmp	r2, ip
90019f80:	c703      	stmia	r7!, {r0, r1}
90019f82:	463e      	mov	r6, r7
90019f84:	d1f6      	bne.n	90019f74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90019f86:	6810      	ldr	r0, [r2, #0]
90019f88:	6038      	str	r0, [r7, #0]
90019f8a:	8892      	ldrh	r2, [r2, #4]
90019f8c:	80ba      	strh	r2, [r7, #4]
90019f8e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90019f92:	10db      	asrs	r3, r3, #3
90019f94:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90019f98:	f003 0360 	and.w	r3, r3, #96	; 0x60
90019f9c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90019fa0:	4313      	orrs	r3, r2
90019fa2:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90019fa6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90019faa:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90019fae:	1a9b      	subs	r3, r3, r2
90019fb0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90019fb4:	e771      	b.n	90019e9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90019fb6:	f023 0204 	bic.w	r2, r3, #4
90019fba:	f640 611b 	movw	r1, #3611	; 0xe1b
90019fbe:	428a      	cmp	r2, r1
90019fc0:	d003      	beq.n	90019fca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90019fc2:	f640 621d 	movw	r2, #3613	; 0xe1d
90019fc6:	4293      	cmp	r3, r2
90019fc8:	d120      	bne.n	9001a00c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90019fca:	3b01      	subs	r3, #1
90019fcc:	4602      	mov	r2, r0
90019fce:	4629      	mov	r1, r5
90019fd0:	4620      	mov	r0, r4
90019fd2:	b29b      	uxth	r3, r3
90019fd4:	f7ff ff4a 	bl	90019e6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90019fd8:	7b41      	ldrb	r1, [r0, #13]
90019fda:	00cb      	lsls	r3, r1, #3
90019fdc:	0649      	lsls	r1, r1, #25
90019fde:	f403 7280 	and.w	r2, r3, #256	; 0x100
90019fe2:	7a03      	ldrb	r3, [r0, #8]
90019fe4:	ea43 0302 	orr.w	r3, r3, r2
90019fe8:	bf44      	itt	mi
90019fea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019fee:	b21b      	sxthmi	r3, r3
90019ff0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90019ff4:	7b6b      	ldrb	r3, [r5, #13]
90019ff6:	7aaa      	ldrb	r2, [r5, #10]
90019ff8:	005b      	lsls	r3, r3, #1
90019ffa:	f403 7380 	and.w	r3, r3, #256	; 0x100
90019ffe:	4313      	orrs	r3, r2
9001a000:	115a      	asrs	r2, r3, #5
9001a002:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a006:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a00a:	e035      	b.n	9001a078 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001a00c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001a010:	f01c 0f40 	tst.w	ip, #64	; 0x40
9001a014:	f402 7180 	and.w	r1, r2, #256	; 0x100
9001a018:	7a2a      	ldrb	r2, [r5, #8]
9001a01a:	ea42 0201 	orr.w	r2, r2, r1
9001a01e:	f640 6109 	movw	r1, #3593	; 0xe09
9001a022:	bf1c      	itt	ne
9001a024:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
9001a028:	b212      	sxthne	r2, r2
9001a02a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a02e:	f023 0210 	bic.w	r2, r3, #16
9001a032:	428a      	cmp	r2, r1
9001a034:	d003      	beq.n	9001a03e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a036:	f640 6213 	movw	r2, #3603	; 0xe13
9001a03a:	4293      	cmp	r3, r2
9001a03c:	d129      	bne.n	9001a092 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001a03e:	7b6e      	ldrb	r6, [r5, #13]
9001a040:	4629      	mov	r1, r5
9001a042:	0076      	lsls	r6, r6, #1
9001a044:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a048:	7aae      	ldrb	r6, [r5, #10]
9001a04a:	4316      	orrs	r6, r2
9001a04c:	f640 6213 	movw	r2, #3603	; 0xe13
9001a050:	4293      	cmp	r3, r2
9001a052:	4602      	mov	r2, r0
9001a054:	4620      	mov	r0, r4
9001a056:	bf16      	itet	ne
9001a058:	f103 33ff 	addne.w	r3, r3, #4294967295
9001a05c:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001a060:	b29b      	uxthne	r3, r3
9001a062:	f7ff ff03 	bl	90019e6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a066:	7b43      	ldrb	r3, [r0, #13]
9001a068:	7a82      	ldrb	r2, [r0, #10]
9001a06a:	005b      	lsls	r3, r3, #1
9001a06c:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a070:	4313      	orrs	r3, r2
9001a072:	1af6      	subs	r6, r6, r3
9001a074:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
9001a078:	7b69      	ldrb	r1, [r5, #13]
9001a07a:	00cb      	lsls	r3, r1, #3
9001a07c:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a080:	7a2b      	ldrb	r3, [r5, #8]
9001a082:	4313      	orrs	r3, r2
9001a084:	064a      	lsls	r2, r1, #25
9001a086:	bf44      	itt	mi
9001a088:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a08c:	b21b      	sxthmi	r3, r3
9001a08e:	1bdb      	subs	r3, r3, r7
9001a090:	e747      	b.n	90019f22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a092:	2300      	movs	r3, #0
9001a094:	e7b7      	b.n	9001a006 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001a096:	bf00      	nop
9001a098:	3fc00079 	.word	0x3fc00079

9001a09c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a09c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a0a0:	4604      	mov	r4, r0
9001a0a2:	b942      	cbnz	r2, 9001a0b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a0a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a0a8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
9001a0ac:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001a0b0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a0b4:	e047      	b.n	9001a146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a0b6:	7b51      	ldrb	r1, [r2, #13]
9001a0b8:	8893      	ldrh	r3, [r2, #4]
9001a0ba:	010d      	lsls	r5, r1, #4
9001a0bc:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001a0c0:	79d5      	ldrb	r5, [r2, #7]
9001a0c2:	4305      	orrs	r5, r0
9001a0c4:	2d04      	cmp	r5, #4
9001a0c6:	bfcc      	ite	gt
9001a0c8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a0cc:	f04f 0e01 	movle.w	lr, #1
9001a0d0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
9001a0d4:	f200 80ab 	bhi.w	9001a22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a0d8:	f240 60e7 	movw	r0, #1767	; 0x6e7
9001a0dc:	4283      	cmp	r3, r0
9001a0de:	d216      	bcs.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a0e0:	f240 605b 	movw	r0, #1627	; 0x65b
9001a0e4:	4283      	cmp	r3, r0
9001a0e6:	d859      	bhi.n	9001a19c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001a0e8:	f240 6057 	movw	r0, #1623	; 0x657
9001a0ec:	4283      	cmp	r3, r0
9001a0ee:	d20e      	bcs.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a0f0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a0f4:	d24a      	bcs.n	9001a18c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001a0f6:	f240 604e 	movw	r0, #1614	; 0x64e
9001a0fa:	4283      	cmp	r3, r0
9001a0fc:	d207      	bcs.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a0fe:	f240 601a 	movw	r0, #1562	; 0x61a
9001a102:	4283      	cmp	r3, r0
9001a104:	d02a      	beq.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a106:	d821      	bhi.n	9001a14c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001a108:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
9001a10c:	d35b      	bcc.n	9001a1c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a10e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001a112:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a116:	f040 80d0 	bne.w	9001a2ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a11a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001a11e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a122:	f040 80ca 	bne.w	9001a2ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a126:	00cb      	lsls	r3, r1, #3
9001a128:	0649      	lsls	r1, r1, #25
9001a12a:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a12e:	7a13      	ldrb	r3, [r2, #8]
9001a130:	ea43 0300 	orr.w	r3, r3, r0
9001a134:	bf44      	itt	mi
9001a136:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a13a:	b21b      	sxthmi	r3, r3
9001a13c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a140:	1b5d      	subs	r5, r3, r5
9001a142:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a146:	4610      	mov	r0, r2
9001a148:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a14c:	f240 604b 	movw	r0, #1611	; 0x64b
9001a150:	4283      	cmp	r3, r0
9001a152:	d338      	bcc.n	9001a1c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a154:	f240 604c 	movw	r0, #1612	; 0x64c
9001a158:	4283      	cmp	r3, r0
9001a15a:	d9d8      	bls.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a15c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001a160:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
9001a164:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a168:	f040 80f3 	bne.w	9001a352 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a16c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a170:	f040 80ef 	bne.w	9001a352 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a174:	00cb      	lsls	r3, r1, #3
9001a176:	064e      	lsls	r6, r1, #25
9001a178:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a17c:	7a13      	ldrb	r3, [r2, #8]
9001a17e:	ea43 0300 	orr.w	r3, r3, r0
9001a182:	bf44      	itt	mi
9001a184:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a188:	b21b      	sxthmi	r3, r3
9001a18a:	e7d9      	b.n	9001a140 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001a18c:	f240 6054 	movw	r0, #1620	; 0x654
9001a190:	4283      	cmp	r3, r0
9001a192:	d8e3      	bhi.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a194:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a198:	d9e0      	bls.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a19a:	e7b8      	b.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a19c:	f240 6074 	movw	r0, #1652	; 0x674
9001a1a0:	4283      	cmp	r3, r0
9001a1a2:	d0b4      	beq.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1a4:	d82d      	bhi.n	9001a202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001a1a6:	f240 605e 	movw	r0, #1630	; 0x65e
9001a1aa:	4283      	cmp	r3, r0
9001a1ac:	d804      	bhi.n	9001a1b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001a1ae:	f240 605d 	movw	r0, #1629	; 0x65d
9001a1b2:	4283      	cmp	r3, r0
9001a1b4:	d3d2      	bcc.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a1b6:	e7aa      	b.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1b8:	f240 605f 	movw	r0, #1631	; 0x65f
9001a1bc:	4283      	cmp	r3, r0
9001a1be:	d0cd      	beq.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a1c0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
9001a1c4:	d0a3      	beq.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1c6:	00cb      	lsls	r3, r1, #3
9001a1c8:	0649      	lsls	r1, r1, #25
9001a1ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a1ce:	7a13      	ldrb	r3, [r2, #8]
9001a1d0:	ea43 0300 	orr.w	r3, r3, r0
9001a1d4:	bf44      	itt	mi
9001a1d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a1da:	b21b      	sxthmi	r3, r3
9001a1dc:	1b5d      	subs	r5, r3, r5
9001a1de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a1e2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a1e6:	7b53      	ldrb	r3, [r2, #13]
9001a1e8:	015b      	lsls	r3, r3, #5
9001a1ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a1ee:	7993      	ldrb	r3, [r2, #6]
9001a1f0:	430b      	orrs	r3, r1
9001a1f2:	2105      	movs	r1, #5
9001a1f4:	005b      	lsls	r3, r3, #1
9001a1f6:	fb93 f3f1 	sdiv	r3, r3, r1
9001a1fa:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001a1fe:	440b      	add	r3, r1
9001a200:	e756      	b.n	9001a0b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001a202:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001a206:	4283      	cmp	r3, r0
9001a208:	d809      	bhi.n	9001a21e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001a20a:	f240 60df 	movw	r0, #1759	; 0x6df
9001a20e:	4283      	cmp	r3, r0
9001a210:	f4bf af7d 	bcs.w	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a214:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001a218:	2b05      	cmp	r3, #5
9001a21a:	d8d4      	bhi.n	9001a1c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a21c:	e777      	b.n	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a21e:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001a222:	4283      	cmp	r3, r0
9001a224:	d09a      	beq.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a226:	f240 60e4 	movw	r0, #1764	; 0x6e4
9001a22a:	4283      	cmp	r3, r0
9001a22c:	e7ca      	b.n	9001a1c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001a22e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001a232:	d22b      	bcs.n	9001a28c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001a234:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001a238:	4283      	cmp	r3, r0
9001a23a:	d28f      	bcs.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a23c:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001a240:	4283      	cmp	r3, r0
9001a242:	d816      	bhi.n	9001a272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001a244:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001a248:	4283      	cmp	r3, r0
9001a24a:	f4bf af60 	bcs.w	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a24e:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001a252:	4283      	cmp	r3, r0
9001a254:	d80a      	bhi.n	9001a26c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001a256:	f240 60eb 	movw	r0, #1771	; 0x6eb
9001a25a:	4283      	cmp	r3, r0
9001a25c:	f4bf af57 	bcs.w	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a260:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001a264:	4283      	cmp	r3, r0
9001a266:	f43f af79 	beq.w	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a26a:	e7ac      	b.n	9001a1c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a26c:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001a270:	e7f8      	b.n	9001a264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001a272:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001a276:	4283      	cmp	r3, r0
9001a278:	d802      	bhi.n	9001a280 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001a27a:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001a27e:	e798      	b.n	9001a1b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001a280:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001a284:	4283      	cmp	r3, r0
9001a286:	f47f af42 	bne.w	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a28a:	e767      	b.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a28c:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001a290:	4283      	cmp	r3, r0
9001a292:	f43f af63 	beq.w	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a296:	d802      	bhi.n	9001a29e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001a298:	f640 00f2 	movw	r0, #2290	; 0x8f2
9001a29c:	e7f2      	b.n	9001a284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001a29e:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001a2a2:	4283      	cmp	r3, r0
9001a2a4:	d805      	bhi.n	9001a2b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001a2a6:	f640 00f9 	movw	r0, #2297	; 0x8f9
9001a2aa:	4283      	cmp	r3, r0
9001a2ac:	f4ff af2f 	bcc.w	9001a10e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a2b0:	e754      	b.n	9001a15c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a2b2:	f640 00fe 	movw	r0, #2302	; 0x8fe
9001a2b6:	4283      	cmp	r3, r0
9001a2b8:	e7af      	b.n	9001a21a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001a2ba:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a2be:	4617      	mov	r7, r2
9001a2c0:	f102 0808 	add.w	r8, r2, #8
9001a2c4:	4666      	mov	r6, ip
9001a2c6:	6838      	ldr	r0, [r7, #0]
9001a2c8:	3708      	adds	r7, #8
9001a2ca:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a2ce:	46e6      	mov	lr, ip
9001a2d0:	4547      	cmp	r7, r8
9001a2d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001a2d6:	46f4      	mov	ip, lr
9001a2d8:	d1f5      	bne.n	9001a2c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001a2da:	6838      	ldr	r0, [r7, #0]
9001a2dc:	f8ce 0000 	str.w	r0, [lr]
9001a2e0:	88b9      	ldrh	r1, [r7, #4]
9001a2e2:	f8ae 1004 	strh.w	r1, [lr, #4]
9001a2e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a2ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a2ee:	d009      	beq.n	9001a304 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001a2f0:	7b51      	ldrb	r1, [r2, #13]
9001a2f2:	7992      	ldrb	r2, [r2, #6]
9001a2f4:	0149      	lsls	r1, r1, #5
9001a2f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a2fa:	4311      	orrs	r1, r2
9001a2fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a300:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a304:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a308:	b2ad      	uxth	r5, r5
9001a30a:	d00d      	beq.n	9001a328 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001a30c:	442b      	add	r3, r5
9001a30e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a312:	b29b      	uxth	r3, r3
9001a314:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a318:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a31c:	10db      	asrs	r3, r3, #3
9001a31e:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a322:	4313      	orrs	r3, r2
9001a324:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a328:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a32c:	00cb      	lsls	r3, r1, #3
9001a32e:	064f      	lsls	r7, r1, #25
9001a330:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a334:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a338:	ea43 0302 	orr.w	r3, r3, r2
9001a33c:	bf44      	itt	mi
9001a33e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a342:	b21b      	sxthmi	r3, r3
9001a344:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a348:	1b5b      	subs	r3, r3, r5
9001a34a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a34e:	4632      	mov	r2, r6
9001a350:	e6f9      	b.n	9001a146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a352:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a356:	4617      	mov	r7, r2
9001a358:	f102 0908 	add.w	r9, r2, #8
9001a35c:	4666      	mov	r6, ip
9001a35e:	6838      	ldr	r0, [r7, #0]
9001a360:	3708      	adds	r7, #8
9001a362:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a366:	46e0      	mov	r8, ip
9001a368:	454f      	cmp	r7, r9
9001a36a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001a36e:	46c4      	mov	ip, r8
9001a370:	d1f5      	bne.n	9001a35e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001a372:	6838      	ldr	r0, [r7, #0]
9001a374:	f8c8 0000 	str.w	r0, [r8]
9001a378:	88b9      	ldrh	r1, [r7, #4]
9001a37a:	f8a8 1004 	strh.w	r1, [r8, #4]
9001a37e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a382:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a386:	d009      	beq.n	9001a39c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001a388:	7b51      	ldrb	r1, [r2, #13]
9001a38a:	7992      	ldrb	r2, [r2, #6]
9001a38c:	0149      	lsls	r1, r1, #5
9001a38e:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a392:	4311      	orrs	r1, r2
9001a394:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a398:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a39c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a3a0:	d00e      	beq.n	9001a3c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001a3a2:	eba3 030e 	sub.w	r3, r3, lr
9001a3a6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a3aa:	b29b      	uxth	r3, r3
9001a3ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a3b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a3b4:	10db      	asrs	r3, r3, #3
9001a3b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a3ba:	4313      	orrs	r3, r2
9001a3bc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a3c0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a3c4:	00cb      	lsls	r3, r1, #3
9001a3c6:	0648      	lsls	r0, r1, #25
9001a3c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a3cc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a3d0:	ea43 0302 	orr.w	r3, r3, r2
9001a3d4:	bf44      	itt	mi
9001a3d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a3da:	b21b      	sxthmi	r3, r3
9001a3dc:	1b5d      	subs	r5, r3, r5
9001a3de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a3e2:	e7b4      	b.n	9001a34e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001a3e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a3e8:	461e      	mov	r6, r3
9001a3ea:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a3ec:	4604      	mov	r4, r0
9001a3ee:	4617      	mov	r7, r2
9001a3f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a3f4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a3f8:	f7ea f884 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a3fc:	4605      	mov	r5, r0
9001a3fe:	b918      	cbnz	r0, 9001a408 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001a400:	6030      	str	r0, [r6, #0]
9001a402:	4628      	mov	r0, r5
9001a404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a408:	683b      	ldr	r3, [r7, #0]
9001a40a:	4601      	mov	r1, r0
9001a40c:	4638      	mov	r0, r7
9001a40e:	68db      	ldr	r3, [r3, #12]
9001a410:	4798      	blx	r3
9001a412:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a416:	4602      	mov	r2, r0
9001a418:	6030      	str	r0, [r6, #0]
9001a41a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a41e:	d213      	bcs.n	9001a448 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001a420:	4643      	mov	r3, r8
9001a422:	4639      	mov	r1, r7
9001a424:	4620      	mov	r0, r4
9001a426:	f7ff fe39 	bl	9001a09c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a42a:	6030      	str	r0, [r6, #0]
9001a42c:	6833      	ldr	r3, [r6, #0]
9001a42e:	b143      	cbz	r3, 9001a442 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001a430:	7b5a      	ldrb	r2, [r3, #13]
9001a432:	7a9b      	ldrb	r3, [r3, #10]
9001a434:	0052      	lsls	r2, r2, #1
9001a436:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a43a:	4313      	orrs	r3, r2
9001a43c:	bf0c      	ite	eq
9001a43e:	2301      	moveq	r3, #1
9001a440:	2300      	movne	r3, #0
9001a442:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a446:	e7dc      	b.n	9001a402 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001a448:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a44c:	b29b      	uxth	r3, r3
9001a44e:	2b7f      	cmp	r3, #127	; 0x7f
9001a450:	d804      	bhi.n	9001a45c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001a452:	4639      	mov	r1, r7
9001a454:	4620      	mov	r0, r4
9001a456:	f7ff fd15 	bl	90019e84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a45a:	e7e6      	b.n	9001a42a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001a45c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a460:	2b00      	cmp	r3, #0
9001a462:	d0e3      	beq.n	9001a42c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a464:	f640 1302 	movw	r3, #2306	; 0x902
9001a468:	429d      	cmp	r5, r3
9001a46a:	d1df      	bne.n	9001a42c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a46c:	4601      	mov	r1, r0
9001a46e:	4620      	mov	r0, r4
9001a470:	f7ff fcd8 	bl	90019e24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a474:	e7d9      	b.n	9001a42a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001a476 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001a476:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001a47a:	461e      	mov	r6, r3
9001a47c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a47e:	4604      	mov	r4, r0
9001a480:	4617      	mov	r7, r2
9001a482:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a486:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a48a:	f7ea f83b 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a48e:	4605      	mov	r5, r0
9001a490:	b918      	cbnz	r0, 9001a49a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001a492:	6030      	str	r0, [r6, #0]
9001a494:	4628      	mov	r0, r5
9001a496:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001a49a:	683b      	ldr	r3, [r7, #0]
9001a49c:	4601      	mov	r1, r0
9001a49e:	4638      	mov	r0, r7
9001a4a0:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001a4a4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001a4a8:	47c8      	blx	r9
9001a4aa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a4ae:	4602      	mov	r2, r0
9001a4b0:	6030      	str	r0, [r6, #0]
9001a4b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a4b6:	d213      	bcs.n	9001a4e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001a4b8:	4643      	mov	r3, r8
9001a4ba:	4639      	mov	r1, r7
9001a4bc:	4620      	mov	r0, r4
9001a4be:	f7ff fded 	bl	9001a09c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a4c2:	6030      	str	r0, [r6, #0]
9001a4c4:	6833      	ldr	r3, [r6, #0]
9001a4c6:	b143      	cbz	r3, 9001a4da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001a4c8:	7b5a      	ldrb	r2, [r3, #13]
9001a4ca:	7a9b      	ldrb	r3, [r3, #10]
9001a4cc:	0052      	lsls	r2, r2, #1
9001a4ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a4d2:	4313      	orrs	r3, r2
9001a4d4:	bf0c      	ite	eq
9001a4d6:	2301      	moveq	r3, #1
9001a4d8:	2300      	movne	r3, #0
9001a4da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a4de:	e7d9      	b.n	9001a494 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001a4e0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a4e4:	b29b      	uxth	r3, r3
9001a4e6:	2b7f      	cmp	r3, #127	; 0x7f
9001a4e8:	d804      	bhi.n	9001a4f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001a4ea:	4639      	mov	r1, r7
9001a4ec:	4620      	mov	r0, r4
9001a4ee:	f7ff fcc9 	bl	90019e84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a4f2:	e7e6      	b.n	9001a4c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001a4f4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a4f8:	2b00      	cmp	r3, #0
9001a4fa:	d0e3      	beq.n	9001a4c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a4fc:	f640 1302 	movw	r3, #2306	; 0x902
9001a500:	429d      	cmp	r5, r3
9001a502:	d1df      	bne.n	9001a4c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a504:	4601      	mov	r1, r0
9001a506:	4620      	mov	r0, r4
9001a508:	f7ff fc8c 	bl	90019e24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a50c:	e7d9      	b.n	9001a4c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001a50e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001a50e:	b510      	push	{r4, lr}
9001a510:	4604      	mov	r4, r0
9001a512:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
9001a516:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a518:	b1e1      	cbz	r1, 9001a554 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a51a:	2b0a      	cmp	r3, #10
9001a51c:	d02d      	beq.n	9001a57a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a51e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001a520:	3901      	subs	r1, #1
9001a522:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001a526:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
9001a528:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
9001a52c:	1c51      	adds	r1, r2, #1
9001a52e:	b289      	uxth	r1, r1
9001a530:	2901      	cmp	r1, #1
9001a532:	bf8a      	itet	hi
9001a534:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001a538:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001a53a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001a53c:	1c5a      	adds	r2, r3, #1
9001a53e:	8722      	strh	r2, [r4, #56]	; 0x38
9001a540:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a542:	4413      	add	r3, r2
9001a544:	b29b      	uxth	r3, r3
9001a546:	2b09      	cmp	r3, #9
9001a548:	bf88      	it	hi
9001a54a:	3b0a      	subhi	r3, #10
9001a54c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a550:	8458      	strh	r0, [r3, #34]	; 0x22
9001a552:	e7de      	b.n	9001a512 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001a554:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a556:	2b0a      	cmp	r3, #10
9001a558:	d00f      	beq.n	9001a57a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a55a:	4620      	mov	r0, r4
9001a55c:	f7ff fc10 	bl	90019d80 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001a560:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a562:	1c5a      	adds	r2, r3, #1
9001a564:	8722      	strh	r2, [r4, #56]	; 0x38
9001a566:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a568:	4413      	add	r3, r2
9001a56a:	b29b      	uxth	r3, r3
9001a56c:	2b09      	cmp	r3, #9
9001a56e:	bf88      	it	hi
9001a570:	3b0a      	subhi	r3, #10
9001a572:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a576:	8458      	strh	r0, [r3, #34]	; 0x22
9001a578:	e7ec      	b.n	9001a554 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a57a:	bd10      	pop	{r4, pc}

9001a57c <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001a57c:	b538      	push	{r3, r4, r5, lr}
9001a57e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a580:	4604      	mov	r4, r0
9001a582:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001a586:	8c55      	ldrh	r5, [r2, #34]	; 0x22
9001a588:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001a58a:	3a01      	subs	r2, #1
9001a58c:	8702      	strh	r2, [r0, #56]	; 0x38
9001a58e:	1c5a      	adds	r2, r3, #1
9001a590:	b292      	uxth	r2, r2
9001a592:	2a09      	cmp	r2, #9
9001a594:	bf8a      	itet	hi
9001a596:	3b09      	subhi	r3, #9
9001a598:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001a59a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001a59c:	f7ff ffb7 	bl	9001a50e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001a5a0:	8c23      	ldrh	r3, [r4, #32]
9001a5a2:	2b01      	cmp	r3, #1
9001a5a4:	bf9c      	itt	ls
9001a5a6:	3301      	addls	r3, #1
9001a5a8:	8423      	strhls	r3, [r4, #32]
9001a5aa:	8be3      	ldrh	r3, [r4, #30]
9001a5ac:	b90b      	cbnz	r3, 9001a5b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001a5ae:	2302      	movs	r3, #2
9001a5b0:	83e3      	strh	r3, [r4, #30]
9001a5b2:	8be3      	ldrh	r3, [r4, #30]
9001a5b4:	4628      	mov	r0, r5
9001a5b6:	3b01      	subs	r3, #1
9001a5b8:	b29b      	uxth	r3, r3
9001a5ba:	83e3      	strh	r3, [r4, #30]
9001a5bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a5c0:	8365      	strh	r5, [r4, #26]
9001a5c2:	bd38      	pop	{r3, r4, r5, pc}

9001a5c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001a5c4:	428a      	cmp	r2, r1
9001a5c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a5ca:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001a5cc:	d932      	bls.n	9001a634 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001a5ce:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001a5d0:	1a54      	subs	r4, r2, r1
9001a5d2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
9001a5d6:	19ee      	adds	r6, r5, r7
9001a5d8:	fa1f fe84 	uxth.w	lr, r4
9001a5dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001a5e0:	3e01      	subs	r6, #1
9001a5e2:	b2b4      	uxth	r4, r6
9001a5e4:	eba4 090e 	sub.w	r9, r4, lr
9001a5e8:	fa1f f989 	uxth.w	r9, r9
9001a5ec:	2c09      	cmp	r4, #9
9001a5ee:	4626      	mov	r6, r4
9001a5f0:	bf88      	it	hi
9001a5f2:	f1a4 060a 	subhi.w	r6, r4, #10
9001a5f6:	f1bc 0f00 	cmp.w	ip, #0
9001a5fa:	f104 34ff 	add.w	r4, r4, #4294967295
9001a5fe:	bf08      	it	eq
9001a600:	f04f 0c02 	moveq.w	ip, #2
9001a604:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001a608:	b2a4      	uxth	r4, r4
9001a60a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001a60e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001a612:	454c      	cmp	r4, r9
9001a614:	fa1f fc8c 	uxth.w	ip, ip
9001a618:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001a61c:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001a620:	d1e4      	bne.n	9001a5ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001a622:	eba5 050e 	sub.w	r5, r5, lr
9001a626:	eb0e 0408 	add.w	r4, lr, r8
9001a62a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001a62e:	8705      	strh	r5, [r0, #56]	; 0x38
9001a630:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
9001a634:	8f04      	ldrh	r4, [r0, #56]	; 0x38
9001a636:	250a      	movs	r5, #10
9001a638:	1a64      	subs	r4, r4, r1
9001a63a:	4439      	add	r1, r7
9001a63c:	b289      	uxth	r1, r1
9001a63e:	8704      	strh	r4, [r0, #56]	; 0x38
9001a640:	2909      	cmp	r1, #9
9001a642:	bf88      	it	hi
9001a644:	390a      	subhi	r1, #10
9001a646:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a648:	b18a      	cbz	r2, 9001a66e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001a64a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001a64c:	3a01      	subs	r2, #1
9001a64e:	3101      	adds	r1, #1
9001a650:	b292      	uxth	r2, r2
9001a652:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001a656:	8701      	strh	r1, [r0, #56]	; 0x38
9001a658:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a65a:	b901      	cbnz	r1, 9001a65e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001a65c:	86c5      	strh	r5, [r0, #54]	; 0x36
9001a65e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a660:	3901      	subs	r1, #1
9001a662:	b289      	uxth	r1, r1
9001a664:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a666:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001a66a:	844c      	strh	r4, [r1, #34]	; 0x22
9001a66c:	e7ec      	b.n	9001a648 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001a66e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a672:	f7ff bf4c 	b.w	9001a50e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001a676 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001a676:	b570      	push	{r4, r5, r6, lr}
9001a678:	2500      	movs	r5, #0
9001a67a:	4295      	cmp	r5, r2
9001a67c:	d011      	beq.n	9001a6a2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001a67e:	8bc4      	ldrh	r4, [r0, #30]
9001a680:	f831 6b02 	ldrh.w	r6, [r1], #2
9001a684:	4414      	add	r4, r2
9001a686:	3c01      	subs	r4, #1
9001a688:	1b64      	subs	r4, r4, r5
9001a68a:	b2a4      	uxth	r4, r4
9001a68c:	2c01      	cmp	r4, #1
9001a68e:	bf88      	it	hi
9001a690:	3c02      	subhi	r4, #2
9001a692:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001a696:	8b64      	ldrh	r4, [r4, #26]
9001a698:	42b4      	cmp	r4, r6
9001a69a:	d117      	bne.n	9001a6cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001a69c:	3501      	adds	r5, #1
9001a69e:	b2ad      	uxth	r5, r5
9001a6a0:	e7eb      	b.n	9001a67a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001a6a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001a6a6:	2400      	movs	r4, #0
9001a6a8:	4413      	add	r3, r2
9001a6aa:	b2a2      	uxth	r2, r4
9001a6ac:	429a      	cmp	r2, r3
9001a6ae:	da0f      	bge.n	9001a6d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001a6b0:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001a6b2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001a6b6:	3401      	adds	r4, #1
9001a6b8:	4432      	add	r2, r6
9001a6ba:	b292      	uxth	r2, r2
9001a6bc:	2a09      	cmp	r2, #9
9001a6be:	bf88      	it	hi
9001a6c0:	3a0a      	subhi	r2, #10
9001a6c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001a6c6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
9001a6c8:	42aa      	cmp	r2, r5
9001a6ca:	d0ee      	beq.n	9001a6aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001a6cc:	2000      	movs	r0, #0
9001a6ce:	bd70      	pop	{r4, r5, r6, pc}
9001a6d0:	2001      	movs	r0, #1
9001a6d2:	e7fc      	b.n	9001a6ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001a6d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001a6d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a6d8:	4605      	mov	r5, r0
9001a6da:	4616      	mov	r6, r2
9001a6dc:	1c8c      	adds	r4, r1, #2
9001a6de:	8809      	ldrh	r1, [r1, #0]
9001a6e0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001a6e4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001a6e8:	42b3      	cmp	r3, r6
9001a6ea:	d124      	bne.n	9001a736 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001a6ec:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001a6f0:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001a6f4:	f001 070f 	and.w	r7, r1, #15
9001a6f8:	4652      	mov	r2, sl
9001a6fa:	f8cd 8000 	str.w	r8, [sp]
9001a6fe:	464b      	mov	r3, r9
9001a700:	4621      	mov	r1, r4
9001a702:	4628      	mov	r0, r5
9001a704:	f7ff ffb7 	bl	9001a676 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001a708:	4683      	mov	fp, r0
9001a70a:	b168      	cbz	r0, 9001a728 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001a70c:	eb0a 0109 	add.w	r1, sl, r9
9001a710:	463a      	mov	r2, r7
9001a712:	4628      	mov	r0, r5
9001a714:	4441      	add	r1, r8
9001a716:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001a71a:	4649      	mov	r1, r9
9001a71c:	f7ff ff52 	bl	9001a5c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001a720:	4658      	mov	r0, fp
9001a722:	b003      	add	sp, #12
9001a724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a728:	eb07 010a 	add.w	r1, r7, sl
9001a72c:	4449      	add	r1, r9
9001a72e:	4441      	add	r1, r8
9001a730:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001a734:	e7d2      	b.n	9001a6dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001a736:	f04f 0b00 	mov.w	fp, #0
9001a73a:	e7f1      	b.n	9001a720 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001a73c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001a73c:	b570      	push	{r4, r5, r6, lr}
9001a73e:	8810      	ldrh	r0, [r2, #0]
9001a740:	4298      	cmp	r0, r3
9001a742:	d817      	bhi.n	9001a774 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a744:	1e48      	subs	r0, r1, #1
9001a746:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001a74a:	4298      	cmp	r0, r3
9001a74c:	d312      	bcc.n	9001a774 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a74e:	2400      	movs	r4, #0
9001a750:	428c      	cmp	r4, r1
9001a752:	d20f      	bcs.n	9001a774 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a754:	1860      	adds	r0, r4, r1
9001a756:	1040      	asrs	r0, r0, #1
9001a758:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001a75c:	0085      	lsls	r5, r0, #2
9001a75e:	42b3      	cmp	r3, r6
9001a760:	d902      	bls.n	9001a768 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001a762:	3001      	adds	r0, #1
9001a764:	b284      	uxth	r4, r0
9001a766:	e7f3      	b.n	9001a750 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a768:	d201      	bcs.n	9001a76e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001a76a:	b281      	uxth	r1, r0
9001a76c:	e7f0      	b.n	9001a750 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a76e:	442a      	add	r2, r5
9001a770:	8850      	ldrh	r0, [r2, #2]
9001a772:	bd70      	pop	{r4, r5, r6, pc}
9001a774:	2000      	movs	r0, #0
9001a776:	e7fc      	b.n	9001a772 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001a778 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001a778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a77c:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001a77e:	4604      	mov	r4, r0
9001a780:	260b      	movs	r6, #11
9001a782:	886f      	ldrh	r7, [r5, #2]
9001a784:	087f      	lsrs	r7, r7, #1
9001a786:	3e01      	subs	r6, #1
9001a788:	d013      	beq.n	9001a7b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a78a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001a78c:	462a      	mov	r2, r5
9001a78e:	4639      	mov	r1, r7
9001a790:	4620      	mov	r0, r4
9001a792:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a796:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a79a:	4643      	mov	r3, r8
9001a79c:	f7ff ffce 	bl	9001a73c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001a7a0:	b138      	cbz	r0, 9001a7b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a7a2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001a7a6:	4642      	mov	r2, r8
9001a7a8:	4620      	mov	r0, r4
9001a7aa:	f7ff ff93 	bl	9001a6d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001a7ae:	2800      	cmp	r0, #0
9001a7b0:	d1e9      	bne.n	9001a786 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001a7b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001a7b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001a7b8:	b570      	push	{r4, r5, r6, lr}
9001a7ba:	694a      	ldr	r2, [r1, #20]
9001a7bc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001a7be:	684b      	ldr	r3, [r1, #4]
9001a7c0:	1b54      	subs	r4, r2, r5
9001a7c2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001a7c4:	f000 8106 	beq.w	9001a9d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001a7c8:	1b9b      	subs	r3, r3, r6
9001a7ca:	d003      	beq.n	9001a7d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a7cc:	4363      	muls	r3, r4
9001a7ce:	2210      	movs	r2, #16
9001a7d0:	fb93 f3f2 	sdiv	r3, r3, r2
9001a7d4:	680c      	ldr	r4, [r1, #0]
9001a7d6:	698a      	ldr	r2, [r1, #24]
9001a7d8:	1b65      	subs	r5, r4, r5
9001a7da:	f000 80fd 	beq.w	9001a9d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001a7de:	1b92      	subs	r2, r2, r6
9001a7e0:	d003      	beq.n	9001a7ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a7e2:	436a      	muls	r2, r5
9001a7e4:	2410      	movs	r4, #16
9001a7e6:	fb92 f2f4 	sdiv	r2, r2, r4
9001a7ea:	1a9b      	subs	r3, r3, r2
9001a7ec:	ed9f 4a89 	vldr	s8, [pc, #548]	; 9001aa14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001a7f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a7f4:	460a      	mov	r2, r1
9001a7f6:	ee07 3a90 	vmov	s15, r3
9001a7fa:	f100 040c 	add.w	r4, r0, #12
9001a7fe:	4603      	mov	r3, r0
9001a800:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a804:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a808:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001a80c:	eeb1 6a43 	vneg.f32	s12, s6
9001a810:	edd2 7a02 	vldr	s15, [r2, #8]
9001a814:	3214      	adds	r2, #20
9001a816:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001a81a:	ece3 6a01 	vstmia	r3!, {s13}
9001a81e:	429c      	cmp	r4, r3
9001a820:	ed52 7a02 	vldr	s15, [r2, #-8]
9001a824:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a828:	edc3 7a02 	vstr	s15, [r3, #8]
9001a82c:	ed52 7a01 	vldr	s15, [r2, #-4]
9001a830:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a834:	edc3 7a05 	vstr	s15, [r3, #20]
9001a838:	d1ea      	bne.n	9001a810 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001a83a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001a83c:	698b      	ldr	r3, [r1, #24]
9001a83e:	edd0 4a02 	vldr	s9, [r0, #8]
9001a842:	1a9b      	subs	r3, r3, r2
9001a844:	edd0 3a00 	vldr	s7, [r0]
9001a848:	edd0 6a01 	vldr	s13, [r0, #4]
9001a84c:	ee07 3a90 	vmov	s15, r3
9001a850:	684b      	ldr	r3, [r1, #4]
9001a852:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001a856:	ed90 5a05 	vldr	s10, [r0, #20]
9001a85a:	1a9b      	subs	r3, r3, r2
9001a85c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a860:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001a864:	ed90 2a03 	vldr	s4, [r0, #12]
9001a868:	ee07 3a10 	vmov	s14, r3
9001a86c:	edd0 5a04 	vldr	s11, [r0, #16]
9001a870:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a874:	ed90 1a07 	vldr	s2, [r0, #28]
9001a878:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a87c:	edd0 2a06 	vldr	s5, [r0, #24]
9001a880:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001a884:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001a888:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a88c:	ee32 5a45 	vsub.f32	s10, s4, s10
9001a890:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a894:	ee67 7a83 	vmul.f32	s15, s15, s6
9001a898:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001a89c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001a89e:	694a      	ldr	r2, [r1, #20]
9001a8a0:	1b13      	subs	r3, r2, r4
9001a8a2:	ee07 3a10 	vmov	s14, r3
9001a8a6:	680b      	ldr	r3, [r1, #0]
9001a8a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a8ac:	1b1b      	subs	r3, r3, r4
9001a8ae:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a8b2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001a8b6:	ee07 3a10 	vmov	s14, r3
9001a8ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a8be:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a8c2:	eee6 4a87 	vfma.f32	s9, s13, s14
9001a8c6:	ee64 4a86 	vmul.f32	s9, s9, s12
9001a8ca:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001a8ce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001a8d0:	698b      	ldr	r3, [r1, #24]
9001a8d2:	1a9b      	subs	r3, r3, r2
9001a8d4:	ee06 3a90 	vmov	s13, r3
9001a8d8:	684b      	ldr	r3, [r1, #4]
9001a8da:	1a9b      	subs	r3, r3, r2
9001a8dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a8e0:	ee07 3a10 	vmov	s14, r3
9001a8e4:	ee66 6a84 	vmul.f32	s13, s13, s8
9001a8e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a8ec:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001a8f0:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a8f4:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a8f8:	ee66 6a83 	vmul.f32	s13, s13, s6
9001a8fc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001a900:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001a902:	694a      	ldr	r2, [r1, #20]
9001a904:	1b13      	subs	r3, r2, r4
9001a906:	ee07 3a10 	vmov	s14, r3
9001a90a:	680b      	ldr	r3, [r1, #0]
9001a90c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a910:	1b1b      	subs	r3, r3, r4
9001a912:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a916:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001a91a:	ee07 3a10 	vmov	s14, r3
9001a91e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a922:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a926:	eea5 5a87 	vfma.f32	s10, s11, s14
9001a92a:	edd0 5a08 	vldr	s11, [r0, #32]
9001a92e:	ee31 1a65 	vsub.f32	s2, s2, s11
9001a932:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001a936:	ee25 5a06 	vmul.f32	s10, s10, s12
9001a93a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001a93e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001a940:	698b      	ldr	r3, [r1, #24]
9001a942:	1a9b      	subs	r3, r3, r2
9001a944:	ee07 3a10 	vmov	s14, r3
9001a948:	684b      	ldr	r3, [r1, #4]
9001a94a:	1a9b      	subs	r3, r3, r2
9001a94c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a950:	ee01 3a90 	vmov	s3, r3
9001a954:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a958:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001a95c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001a960:	ee61 1a84 	vmul.f32	s3, s3, s8
9001a964:	eea1 7a21 	vfma.f32	s14, s2, s3
9001a968:	ee27 7a03 	vmul.f32	s14, s14, s6
9001a96c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001a970:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001a972:	694a      	ldr	r2, [r1, #20]
9001a974:	1b13      	subs	r3, r2, r4
9001a976:	ee03 3a10 	vmov	s6, r3
9001a97a:	680b      	ldr	r3, [r1, #0]
9001a97c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a980:	1b1b      	subs	r3, r3, r4
9001a982:	ee23 3a04 	vmul.f32	s6, s6, s8
9001a986:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001a98a:	ee03 3a10 	vmov	s6, r3
9001a98e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001a992:	ee23 4a04 	vmul.f32	s8, s6, s8
9001a996:	eee1 5a04 	vfma.f32	s11, s2, s8
9001a99a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001a99e:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001a9a2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
9001a9a6:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001a9aa:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001a9ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a9b2:	dd13      	ble.n	9001a9dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001a9b4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a9b8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001a9bc:	63c3      	str	r3, [r0, #60]	; 0x3c
9001a9be:	eee3 7a87 	vfma.f32	s15, s7, s14
9001a9c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001a9c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a9ca:	dd15      	ble.n	9001a9f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001a9cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a9d0:	6403      	str	r3, [r0, #64]	; 0x40
9001a9d2:	bd70      	pop	{r4, r5, r6, pc}
9001a9d4:	4623      	mov	r3, r4
9001a9d6:	e6fd      	b.n	9001a7d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a9d8:	462a      	mov	r2, r5
9001a9da:	e706      	b.n	9001a7ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a9dc:	d502      	bpl.n	9001a9e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001a9de:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001a9e2:	e7e9      	b.n	9001a9b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001a9e4:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001a9e8:	eea3 2a85 	vfma.f32	s4, s7, s10
9001a9ec:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001a9f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001a9f4:	dade      	bge.n	9001a9b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001a9f6:	e7f2      	b.n	9001a9de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001a9f8:	d502      	bpl.n	9001aa00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001a9fa:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001a9fe:	e7e7      	b.n	9001a9d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001aa00:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001aa04:	eee3 4a86 	vfma.f32	s9, s7, s12
9001aa08:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001aa0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001aa10:	dadc      	bge.n	9001a9cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001aa12:	e7f2      	b.n	9001a9fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001aa14:	3d800000 	.word	0x3d800000

9001aa18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001aa18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001aa1c:	2714      	movs	r7, #20
9001aa1e:	435f      	muls	r7, r3
9001aa20:	eb02 0c07 	add.w	ip, r2, r7
9001aa24:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001aa28:	f115 0e0f 	adds.w	lr, r5, #15
9001aa2c:	f100 80a2 	bmi.w	9001ab74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001aa30:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001aa34:	9c08      	ldr	r4, [sp, #32]
9001aa36:	2614      	movs	r6, #20
9001aa38:	f8c0 e014 	str.w	lr, [r0, #20]
9001aa3c:	4366      	muls	r6, r4
9001aa3e:	eb02 0806 	add.w	r8, r2, r6
9001aa42:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001aa46:	f115 040f 	adds.w	r4, r5, #15
9001aa4a:	f100 809f 	bmi.w	9001ab8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001aa4e:	1124      	asrs	r4, r4, #4
9001aa50:	eba4 040e 	sub.w	r4, r4, lr
9001aa54:	6184      	str	r4, [r0, #24]
9001aa56:	2c00      	cmp	r4, #0
9001aa58:	f000 808a 	beq.w	9001ab70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001aa5c:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001aa60:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001aa64:	5995      	ldr	r5, [r2, r6]
9001aa66:	eba4 0809 	sub.w	r8, r4, r9
9001aa6a:	59d4      	ldr	r4, [r2, r7]
9001aa6c:	eba5 0a04 	sub.w	sl, r5, r4
9001aa70:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001aa74:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001aa78:	fb0e fe05 	mul.w	lr, lr, r5
9001aa7c:	fb0a ee19 	mls	lr, sl, r9, lr
9001aa80:	fb08 e404 	mla	r4, r8, r4, lr
9001aa84:	3c01      	subs	r4, #1
9001aa86:	19a4      	adds	r4, r4, r6
9001aa88:	f100 808c 	bmi.w	9001aba4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001aa8c:	fb94 fef6 	sdiv	lr, r4, r6
9001aa90:	fb06 441e 	mls	r4, r6, lr, r4
9001aa94:	f8c0 e000 	str.w	lr, [r0]
9001aa98:	6104      	str	r4, [r0, #16]
9001aa9a:	2d00      	cmp	r5, #0
9001aa9c:	f2c0 8095 	blt.w	9001abca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001aaa0:	fb95 f4f6 	sdiv	r4, r5, r6
9001aaa4:	fb06 5514 	mls	r5, r6, r4, r5
9001aaa8:	6044      	str	r4, [r0, #4]
9001aaaa:	6085      	str	r5, [r0, #8]
9001aaac:	60c6      	str	r6, [r0, #12]
9001aaae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001aab2:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001aab6:	6945      	ldr	r5, [r0, #20]
9001aab8:	59d2      	ldr	r2, [r2, r7]
9001aaba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001aabe:	eddf 6a4b 	vldr	s13, [pc, #300]	; 9001abec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001aac2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001aac6:	ee07 4a10 	vmov	s14, r4
9001aaca:	6804      	ldr	r4, [r0, #0]
9001aacc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001aad0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aad4:	ee07 2a90 	vmov	s15, r2
9001aad8:	ee27 7a26 	vmul.f32	s14, s14, s13
9001aadc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aae0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001aae4:	edd3 6a00 	vldr	s13, [r3]
9001aae8:	eee6 6a07 	vfma.f32	s13, s12, s14
9001aaec:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001aaf0:	eee6 6a27 	vfma.f32	s13, s12, s15
9001aaf4:	edc0 6a07 	vstr	s13, [r0, #28]
9001aaf8:	edd0 6a01 	vldr	s13, [r0, #4]
9001aafc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001ab00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001ab04:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001ab08:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001ab0c:	ed80 6a08 	vstr	s12, [r0, #32]
9001ab10:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001ab12:	6242      	str	r2, [r0, #36]	; 0x24
9001ab14:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
9001ab18:	ed93 6a03 	vldr	s12, [r3, #12]
9001ab1c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001ab20:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001ab24:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001ab28:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
9001ab2c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001ab30:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
9001ab34:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001ab38:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001ab3c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001ab3e:	6302      	str	r2, [r0, #48]	; 0x30
9001ab40:	ed93 6a06 	vldr	s12, [r3, #24]
9001ab44:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
9001ab48:	eea5 6a87 	vfma.f32	s12, s11, s14
9001ab4c:	eeb0 7a46 	vmov.f32	s14, s12
9001ab50:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
9001ab54:	eea6 7a27 	vfma.f32	s14, s12, s15
9001ab58:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001ab5c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001ab60:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
9001ab64:	eee6 7a87 	vfma.f32	s15, s13, s14
9001ab68:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001ab6c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001ab6e:	63c3      	str	r3, [r0, #60]	; 0x3c
9001ab70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ab74:	2410      	movs	r4, #16
9001ab76:	f1c5 0501 	rsb	r5, r5, #1
9001ab7a:	fb9e fef4 	sdiv	lr, lr, r4
9001ab7e:	f015 050f 	ands.w	r5, r5, #15
9001ab82:	bf18      	it	ne
9001ab84:	2501      	movne	r5, #1
9001ab86:	ebae 0e05 	sub.w	lr, lr, r5
9001ab8a:	e753      	b.n	9001aa34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001ab8c:	f04f 0910 	mov.w	r9, #16
9001ab90:	f1c5 0501 	rsb	r5, r5, #1
9001ab94:	fb94 f4f9 	sdiv	r4, r4, r9
9001ab98:	f015 050f 	ands.w	r5, r5, #15
9001ab9c:	bf18      	it	ne
9001ab9e:	2501      	movne	r5, #1
9001aba0:	1b64      	subs	r4, r4, r5
9001aba2:	e755      	b.n	9001aa50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001aba4:	4264      	negs	r4, r4
9001aba6:	fb94 fef6 	sdiv	lr, r4, r6
9001abaa:	f1ce 0800 	rsb	r8, lr, #0
9001abae:	fb06 441e 	mls	r4, r6, lr, r4
9001abb2:	f8c0 8000 	str.w	r8, [r0]
9001abb6:	6104      	str	r4, [r0, #16]
9001abb8:	2c00      	cmp	r4, #0
9001abba:	f43f af6e 	beq.w	9001aa9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001abbe:	ea6f 0e0e 	mvn.w	lr, lr
9001abc2:	1b34      	subs	r4, r6, r4
9001abc4:	f8c0 e000 	str.w	lr, [r0]
9001abc8:	e766      	b.n	9001aa98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001abca:	426d      	negs	r5, r5
9001abcc:	fb95 f4f6 	sdiv	r4, r5, r6
9001abd0:	f1c4 0e00 	rsb	lr, r4, #0
9001abd4:	fb06 5514 	mls	r5, r6, r4, r5
9001abd8:	f8c0 e004 	str.w	lr, [r0, #4]
9001abdc:	6085      	str	r5, [r0, #8]
9001abde:	2d00      	cmp	r5, #0
9001abe0:	f43f af64 	beq.w	9001aaac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001abe4:	43e4      	mvns	r4, r4
9001abe6:	1b75      	subs	r5, r6, r5
9001abe8:	6044      	str	r4, [r0, #4]
9001abea:	e75e      	b.n	9001aaaa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001abec:	3d800000 	.word	0x3d800000

9001abf0 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001abf0:	4602      	mov	r2, r0
9001abf2:	b148      	cbz	r0, 9001ac08 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001abf4:	2300      	movs	r3, #0
9001abf6:	b298      	uxth	r0, r3
9001abf8:	3301      	adds	r3, #1
9001abfa:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001abfe:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001ac02:	2900      	cmp	r1, #0
9001ac04:	d1f7      	bne.n	9001abf6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001ac06:	4770      	bx	lr
9001ac08:	4770      	bx	lr

9001ac0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001ac0a:	b530      	push	{r4, r5, lr}
9001ac0c:	4604      	mov	r4, r0
9001ac0e:	b159      	cbz	r1, 9001ac28 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001ac10:	b148      	cbz	r0, 9001ac26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ac12:	2300      	movs	r3, #0
9001ac14:	b298      	uxth	r0, r3
9001ac16:	4282      	cmp	r2, r0
9001ac18:	d905      	bls.n	9001ac26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ac1a:	5ccd      	ldrb	r5, [r1, r3]
9001ac1c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001ac20:	3301      	adds	r3, #1
9001ac22:	2d00      	cmp	r5, #0
9001ac24:	d1f6      	bne.n	9001ac14 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001ac26:	bd30      	pop	{r4, r5, pc}
9001ac28:	4608      	mov	r0, r1
9001ac2a:	e7fc      	b.n	9001ac26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001ac2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001ac2c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ac2e:	b08b      	sub	sp, #44	; 0x2c
9001ac30:	468c      	mov	ip, r1
9001ac32:	4604      	mov	r4, r0
9001ac34:	2100      	movs	r1, #0
9001ac36:	261f      	movs	r6, #31
9001ac38:	af01      	add	r7, sp, #4
9001ac3a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001ac3e:	1e71      	subs	r1, r6, #1
9001ac40:	fb94 fef3 	sdiv	lr, r4, r3
9001ac44:	fb03 441e 	mls	r4, r3, lr, r4
9001ac48:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001ac4c:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001ac50:	b2ec      	uxtb	r4, r5
9001ac52:	2d09      	cmp	r5, #9
9001ac54:	bfd4      	ite	le
9001ac56:	3430      	addle	r4, #48	; 0x30
9001ac58:	3457      	addgt	r4, #87	; 0x57
9001ac5a:	b2e4      	uxtb	r4, r4
9001ac5c:	55bc      	strb	r4, [r7, r6]
9001ac5e:	4674      	mov	r4, lr
9001ac60:	b974      	cbnz	r4, 9001ac80 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001ac62:	2800      	cmp	r0, #0
9001ac64:	da05      	bge.n	9001ac72 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001ac66:	ab0a      	add	r3, sp, #40	; 0x28
9001ac68:	4419      	add	r1, r3
9001ac6a:	232d      	movs	r3, #45	; 0x2d
9001ac6c:	f801 3c24 	strb.w	r3, [r1, #-36]
9001ac70:	1eb1      	subs	r1, r6, #2
9001ac72:	3101      	adds	r1, #1
9001ac74:	4660      	mov	r0, ip
9001ac76:	4439      	add	r1, r7
9001ac78:	f7ff ffc7 	bl	9001ac0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001ac7c:	b00b      	add	sp, #44	; 0x2c
9001ac7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ac80:	460e      	mov	r6, r1
9001ac82:	e7dc      	b.n	9001ac3e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001ac84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001ac84:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ac86:	468c      	mov	ip, r1
9001ac88:	b08b      	sub	sp, #44	; 0x2c
9001ac8a:	2100      	movs	r1, #0
9001ac8c:	ae01      	add	r6, sp, #4
9001ac8e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001ac92:	211f      	movs	r1, #31
9001ac94:	fbb0 f7f3 	udiv	r7, r0, r3
9001ac98:	fb03 0517 	mls	r5, r3, r7, r0
9001ac9c:	4638      	mov	r0, r7
9001ac9e:	b2ec      	uxtb	r4, r5
9001aca0:	2d09      	cmp	r5, #9
9001aca2:	bfd4      	ite	le
9001aca4:	3430      	addle	r4, #48	; 0x30
9001aca6:	3457      	addgt	r4, #87	; 0x57
9001aca8:	b2e4      	uxtb	r4, r4
9001acaa:	558c      	strb	r4, [r1, r6]
9001acac:	1e4c      	subs	r4, r1, #1
9001acae:	b92f      	cbnz	r7, 9001acbc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001acb0:	4431      	add	r1, r6
9001acb2:	4660      	mov	r0, ip
9001acb4:	f7ff ffa9 	bl	9001ac0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001acb8:	b00b      	add	sp, #44	; 0x2c
9001acba:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001acbc:	4621      	mov	r1, r4
9001acbe:	e7e9      	b.n	9001ac94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001acc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001acc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001acc4:	b085      	sub	sp, #20
9001acc6:	4691      	mov	r9, r2
9001acc8:	6802      	ldr	r2, [r0, #0]
9001acca:	4688      	mov	r8, r1
9001accc:	461c      	mov	r4, r3
9001acce:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001acd2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
9001acd6:	4683      	mov	fp, r0
9001acd8:	4610      	mov	r0, r2
9001acda:	9103      	str	r1, [sp, #12]
9001acdc:	9302      	str	r3, [sp, #8]
9001acde:	9201      	str	r2, [sp, #4]
9001ace0:	f7ff ff86 	bl	9001abf0 <_ZN8touchgfx7Unicode6strlenEPKt>
9001ace4:	f1b8 0f00 	cmp.w	r8, #0
9001ace8:	bf0c      	ite	eq
9001acea:	4684      	moveq	ip, r0
9001acec:	f100 0c01 	addne.w	ip, r0, #1
9001acf0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
9001acf4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
9001acf8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001acfa:	fa1f fc8c 	uxth.w	ip, ip
9001acfe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ad00:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
9001ad04:	9903      	ldr	r1, [sp, #12]
9001ad06:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001ad0a:	d041      	beq.n	9001ad90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001ad0c:	d834      	bhi.n	9001ad78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001ad0e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
9001ad12:	d059      	beq.n	9001adc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001ad14:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
9001ad18:	d03a      	beq.n	9001ad90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001ad1a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001ad1e:	d034      	beq.n	9001ad8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001ad20:	2400      	movs	r4, #0
9001ad22:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001ad26:	3a01      	subs	r2, #1
9001ad28:	b169      	cbz	r1, 9001ad46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001ad2a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001ad2c:	458c      	cmp	ip, r1
9001ad2e:	da09      	bge.n	9001ad44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001ad30:	eba1 010c 	sub.w	r1, r1, ip
9001ad34:	b289      	uxth	r1, r1
9001ad36:	b933      	cbnz	r3, 9001ad46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001ad38:	2e00      	cmp	r6, #0
9001ad3a:	d051      	beq.n	9001ade0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001ad3c:	2800      	cmp	r0, #0
9001ad3e:	d04f      	beq.n	9001ade0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001ad40:	440c      	add	r4, r1
9001ad42:	b2a4      	uxth	r4, r4
9001ad44:	2100      	movs	r1, #0
9001ad46:	682b      	ldr	r3, [r5, #0]
9001ad48:	4293      	cmp	r3, r2
9001ad4a:	da07      	bge.n	9001ad5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001ad4c:	f1b8 0f00 	cmp.w	r8, #0
9001ad50:	d004      	beq.n	9001ad5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001ad52:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001ad56:	682b      	ldr	r3, [r5, #0]
9001ad58:	3301      	adds	r3, #1
9001ad5a:	602b      	str	r3, [r5, #0]
9001ad5c:	2730      	movs	r7, #48	; 0x30
9001ad5e:	2c00      	cmp	r4, #0
9001ad60:	d04e      	beq.n	9001ae00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001ad62:	682e      	ldr	r6, [r5, #0]
9001ad64:	3c01      	subs	r4, #1
9001ad66:	42b2      	cmp	r2, r6
9001ad68:	b2a4      	uxth	r4, r4
9001ad6a:	dd49      	ble.n	9001ae00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001ad6c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001ad70:	682b      	ldr	r3, [r5, #0]
9001ad72:	3301      	adds	r3, #1
9001ad74:	602b      	str	r3, [r5, #0]
9001ad76:	e7f2      	b.n	9001ad5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001ad78:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
9001ad7c:	d01d      	beq.n	9001adba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001ad7e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001ad82:	d002      	beq.n	9001ad8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001ad84:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
9001ad88:	e7c9      	b.n	9001ad1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001ad8a:	4684      	mov	ip, r0
9001ad8c:	f04f 0800 	mov.w	r8, #0
9001ad90:	2c00      	cmp	r4, #0
9001ad92:	d0c6      	beq.n	9001ad22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001ad94:	b947      	cbnz	r7, 9001ada8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001ad96:	2801      	cmp	r0, #1
9001ad98:	d106      	bne.n	9001ada8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001ad9a:	8814      	ldrh	r4, [r2, #0]
9001ad9c:	2c30      	cmp	r4, #48	; 0x30
9001ad9e:	bf02      	ittt	eq
9001ada0:	3202      	addeq	r2, #2
9001ada2:	4638      	moveq	r0, r7
9001ada4:	f8cb 2000 	streq.w	r2, [fp]
9001ada8:	45bc      	cmp	ip, r7
9001adaa:	da14      	bge.n	9001add6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001adac:	b2bf      	uxth	r7, r7
9001adae:	eba7 040c 	sub.w	r4, r7, ip
9001adb2:	46bc      	mov	ip, r7
9001adb4:	b2a4      	uxth	r4, r4
9001adb6:	2600      	movs	r6, #0
9001adb8:	e7b3      	b.n	9001ad22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001adba:	4684      	mov	ip, r0
9001adbc:	b16c      	cbz	r4, 9001adda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001adbe:	42b8      	cmp	r0, r7
9001adc0:	dd00      	ble.n	9001adc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001adc2:	b2b8      	uxth	r0, r7
9001adc4:	2400      	movs	r4, #0
9001adc6:	e003      	b.n	9001add0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001adc8:	f04f 0c01 	mov.w	ip, #1
9001adcc:	2400      	movs	r4, #0
9001adce:	4660      	mov	r0, ip
9001add0:	4626      	mov	r6, r4
9001add2:	46a0      	mov	r8, r4
9001add4:	e7a5      	b.n	9001ad22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001add6:	2400      	movs	r4, #0
9001add8:	e7ed      	b.n	9001adb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001adda:	4626      	mov	r6, r4
9001addc:	46a0      	mov	r8, r4
9001adde:	e7a0      	b.n	9001ad22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001ade0:	2900      	cmp	r1, #0
9001ade2:	d0b0      	beq.n	9001ad46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001ade4:	2720      	movs	r7, #32
9001ade6:	682e      	ldr	r6, [r5, #0]
9001ade8:	2900      	cmp	r1, #0
9001adea:	d0ac      	beq.n	9001ad46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001adec:	3901      	subs	r1, #1
9001adee:	4296      	cmp	r6, r2
9001adf0:	b289      	uxth	r1, r1
9001adf2:	daa7      	bge.n	9001ad44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001adf4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001adf8:	682b      	ldr	r3, [r5, #0]
9001adfa:	3301      	adds	r3, #1
9001adfc:	602b      	str	r3, [r5, #0]
9001adfe:	e7f2      	b.n	9001ade6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001ae00:	b188      	cbz	r0, 9001ae26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001ae02:	682b      	ldr	r3, [r5, #0]
9001ae04:	3801      	subs	r0, #1
9001ae06:	429a      	cmp	r2, r3
9001ae08:	b280      	uxth	r0, r0
9001ae0a:	dd0c      	ble.n	9001ae26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001ae0c:	f8db 3000 	ldr.w	r3, [fp]
9001ae10:	1c9c      	adds	r4, r3, #2
9001ae12:	f8cb 4000 	str.w	r4, [fp]
9001ae16:	881c      	ldrh	r4, [r3, #0]
9001ae18:	682b      	ldr	r3, [r5, #0]
9001ae1a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001ae1e:	682b      	ldr	r3, [r5, #0]
9001ae20:	3301      	adds	r3, #1
9001ae22:	602b      	str	r3, [r5, #0]
9001ae24:	e7ec      	b.n	9001ae00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001ae26:	2620      	movs	r6, #32
9001ae28:	b151      	cbz	r1, 9001ae40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001ae2a:	6828      	ldr	r0, [r5, #0]
9001ae2c:	3901      	subs	r1, #1
9001ae2e:	4282      	cmp	r2, r0
9001ae30:	b289      	uxth	r1, r1
9001ae32:	dd05      	ble.n	9001ae40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001ae34:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001ae38:	682b      	ldr	r3, [r5, #0]
9001ae3a:	3301      	adds	r3, #1
9001ae3c:	602b      	str	r3, [r5, #0]
9001ae3e:	e7f3      	b.n	9001ae28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001ae40:	b005      	add	sp, #20
9001ae42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ae46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001ae46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001ae4a:	2400      	movs	r4, #0
9001ae4c:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001ae50:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
9001ae54:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
9001ae58:	8014      	strh	r4, [r2, #0]
9001ae5a:	701c      	strb	r4, [r3, #0]
9001ae5c:	f888 4000 	strb.w	r4, [r8]
9001ae60:	f88c 4000 	strb.w	r4, [ip]
9001ae64:	f88e 4000 	strb.w	r4, [lr]
9001ae68:	703c      	strb	r4, [r7, #0]
9001ae6a:	6804      	ldr	r4, [r0, #0]
9001ae6c:	b1a4      	cbz	r4, 9001ae98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001ae6e:	8824      	ldrh	r4, [r4, #0]
9001ae70:	f04f 0901 	mov.w	r9, #1
9001ae74:	b314      	cbz	r4, 9001aebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001ae76:	2c2b      	cmp	r4, #43	; 0x2b
9001ae78:	d001      	beq.n	9001ae7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001ae7a:	2c20      	cmp	r4, #32
9001ae7c:	d110      	bne.n	9001aea0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001ae7e:	8014      	strh	r4, [r2, #0]
9001ae80:	6804      	ldr	r4, [r0, #0]
9001ae82:	b10c      	cbz	r4, 9001ae88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001ae84:	3402      	adds	r4, #2
9001ae86:	6004      	str	r4, [r0, #0]
9001ae88:	680c      	ldr	r4, [r1, #0]
9001ae8a:	b10c      	cbz	r4, 9001ae90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001ae8c:	3401      	adds	r4, #1
9001ae8e:	600c      	str	r4, [r1, #0]
9001ae90:	6804      	ldr	r4, [r0, #0]
9001ae92:	b17c      	cbz	r4, 9001aeb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001ae94:	8824      	ldrh	r4, [r4, #0]
9001ae96:	e7ed      	b.n	9001ae74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001ae98:	680c      	ldr	r4, [r1, #0]
9001ae9a:	b17c      	cbz	r4, 9001aebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001ae9c:	7824      	ldrb	r4, [r4, #0]
9001ae9e:	e7e7      	b.n	9001ae70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001aea0:	2c2d      	cmp	r4, #45	; 0x2d
9001aea2:	d102      	bne.n	9001aeaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001aea4:	f883 9000 	strb.w	r9, [r3]
9001aea8:	e7ea      	b.n	9001ae80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001aeaa:	2c23      	cmp	r4, #35	; 0x23
9001aeac:	d107      	bne.n	9001aebe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001aeae:	f888 9000 	strb.w	r9, [r8]
9001aeb2:	e7e5      	b.n	9001ae80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001aeb4:	680c      	ldr	r4, [r1, #0]
9001aeb6:	b10c      	cbz	r4, 9001aebc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001aeb8:	7824      	ldrb	r4, [r4, #0]
9001aeba:	e7db      	b.n	9001ae74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001aebc:	2400      	movs	r4, #0
9001aebe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001aec2:	2b09      	cmp	r3, #9
9001aec4:	d901      	bls.n	9001aeca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001aec6:	2c2a      	cmp	r4, #42	; 0x2a
9001aec8:	d122      	bne.n	9001af10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001aeca:	2301      	movs	r3, #1
9001aecc:	2c30      	cmp	r4, #48	; 0x30
9001aece:	f88e 3000 	strb.w	r3, [lr]
9001aed2:	d10d      	bne.n	9001aef0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001aed4:	f88c 3000 	strb.w	r3, [ip]
9001aed8:	6803      	ldr	r3, [r0, #0]
9001aeda:	b10b      	cbz	r3, 9001aee0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001aedc:	3302      	adds	r3, #2
9001aede:	6003      	str	r3, [r0, #0]
9001aee0:	680b      	ldr	r3, [r1, #0]
9001aee2:	b10b      	cbz	r3, 9001aee8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001aee4:	3301      	adds	r3, #1
9001aee6:	600b      	str	r3, [r1, #0]
9001aee8:	6803      	ldr	r3, [r0, #0]
9001aeea:	2b00      	cmp	r3, #0
9001aeec:	d02f      	beq.n	9001af4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001aeee:	881c      	ldrh	r4, [r3, #0]
9001aef0:	2c2a      	cmp	r4, #42	; 0x2a
9001aef2:	d135      	bne.n	9001af60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001aef4:	f04f 33ff 	mov.w	r3, #4294967295
9001aef8:	6033      	str	r3, [r6, #0]
9001aefa:	6803      	ldr	r3, [r0, #0]
9001aefc:	b10b      	cbz	r3, 9001af02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001aefe:	3302      	adds	r3, #2
9001af00:	6003      	str	r3, [r0, #0]
9001af02:	680b      	ldr	r3, [r1, #0]
9001af04:	b10b      	cbz	r3, 9001af0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001af06:	3301      	adds	r3, #1
9001af08:	600b      	str	r3, [r1, #0]
9001af0a:	6803      	ldr	r3, [r0, #0]
9001af0c:	b31b      	cbz	r3, 9001af56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001af0e:	881c      	ldrh	r4, [r3, #0]
9001af10:	2c2e      	cmp	r4, #46	; 0x2e
9001af12:	d11a      	bne.n	9001af4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001af14:	2301      	movs	r3, #1
9001af16:	703b      	strb	r3, [r7, #0]
9001af18:	6803      	ldr	r3, [r0, #0]
9001af1a:	b10b      	cbz	r3, 9001af20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001af1c:	3302      	adds	r3, #2
9001af1e:	6003      	str	r3, [r0, #0]
9001af20:	680b      	ldr	r3, [r1, #0]
9001af22:	b10b      	cbz	r3, 9001af28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001af24:	3301      	adds	r3, #1
9001af26:	600b      	str	r3, [r1, #0]
9001af28:	6803      	ldr	r3, [r0, #0]
9001af2a:	2b00      	cmp	r3, #0
9001af2c:	d036      	beq.n	9001af9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001af2e:	881b      	ldrh	r3, [r3, #0]
9001af30:	2b2a      	cmp	r3, #42	; 0x2a
9001af32:	d137      	bne.n	9001afa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001af34:	f04f 33ff 	mov.w	r3, #4294967295
9001af38:	602b      	str	r3, [r5, #0]
9001af3a:	6803      	ldr	r3, [r0, #0]
9001af3c:	b10b      	cbz	r3, 9001af42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001af3e:	3302      	adds	r3, #2
9001af40:	6003      	str	r3, [r0, #0]
9001af42:	680b      	ldr	r3, [r1, #0]
9001af44:	b10b      	cbz	r3, 9001af4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001af46:	3301      	adds	r3, #1
9001af48:	600b      	str	r3, [r1, #0]
9001af4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001af4e:	680c      	ldr	r4, [r1, #0]
9001af50:	b134      	cbz	r4, 9001af60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001af52:	7824      	ldrb	r4, [r4, #0]
9001af54:	e7cc      	b.n	9001aef0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001af56:	680b      	ldr	r3, [r1, #0]
9001af58:	2b00      	cmp	r3, #0
9001af5a:	d0f6      	beq.n	9001af4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001af5c:	781c      	ldrb	r4, [r3, #0]
9001af5e:	e7d7      	b.n	9001af10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001af60:	2300      	movs	r3, #0
9001af62:	220a      	movs	r2, #10
9001af64:	6033      	str	r3, [r6, #0]
9001af66:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
9001af6a:	fa1f f38c 	uxth.w	r3, ip
9001af6e:	2b09      	cmp	r3, #9
9001af70:	d8ce      	bhi.n	9001af10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001af72:	6833      	ldr	r3, [r6, #0]
9001af74:	fb02 c303 	mla	r3, r2, r3, ip
9001af78:	6033      	str	r3, [r6, #0]
9001af7a:	6803      	ldr	r3, [r0, #0]
9001af7c:	b10b      	cbz	r3, 9001af82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001af7e:	3302      	adds	r3, #2
9001af80:	6003      	str	r3, [r0, #0]
9001af82:	680b      	ldr	r3, [r1, #0]
9001af84:	b10b      	cbz	r3, 9001af8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001af86:	3301      	adds	r3, #1
9001af88:	600b      	str	r3, [r1, #0]
9001af8a:	6803      	ldr	r3, [r0, #0]
9001af8c:	b10b      	cbz	r3, 9001af92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001af8e:	881c      	ldrh	r4, [r3, #0]
9001af90:	e7e9      	b.n	9001af66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001af92:	680c      	ldr	r4, [r1, #0]
9001af94:	2c00      	cmp	r4, #0
9001af96:	d0e6      	beq.n	9001af66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001af98:	7824      	ldrb	r4, [r4, #0]
9001af9a:	e7e4      	b.n	9001af66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001af9c:	680b      	ldr	r3, [r1, #0]
9001af9e:	b10b      	cbz	r3, 9001afa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001afa0:	781b      	ldrb	r3, [r3, #0]
9001afa2:	e7c5      	b.n	9001af30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001afa4:	2200      	movs	r2, #0
9001afa6:	240a      	movs	r4, #10
9001afa8:	602a      	str	r2, [r5, #0]
9001afaa:	3b30      	subs	r3, #48	; 0x30
9001afac:	682a      	ldr	r2, [r5, #0]
9001afae:	b29e      	uxth	r6, r3
9001afb0:	2e09      	cmp	r6, #9
9001afb2:	d813      	bhi.n	9001afdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001afb4:	fb04 3302 	mla	r3, r4, r2, r3
9001afb8:	602b      	str	r3, [r5, #0]
9001afba:	6803      	ldr	r3, [r0, #0]
9001afbc:	b10b      	cbz	r3, 9001afc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001afbe:	3302      	adds	r3, #2
9001afc0:	6003      	str	r3, [r0, #0]
9001afc2:	680b      	ldr	r3, [r1, #0]
9001afc4:	b10b      	cbz	r3, 9001afca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001afc6:	3301      	adds	r3, #1
9001afc8:	600b      	str	r3, [r1, #0]
9001afca:	6803      	ldr	r3, [r0, #0]
9001afcc:	b10b      	cbz	r3, 9001afd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001afce:	881b      	ldrh	r3, [r3, #0]
9001afd0:	e7eb      	b.n	9001afaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001afd2:	680b      	ldr	r3, [r1, #0]
9001afd4:	2b00      	cmp	r3, #0
9001afd6:	d0e8      	beq.n	9001afaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001afd8:	781b      	ldrb	r3, [r3, #0]
9001afda:	e7e6      	b.n	9001afaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001afdc:	2a06      	cmp	r2, #6
9001afde:	bfa8      	it	ge
9001afe0:	2206      	movge	r2, #6
9001afe2:	602a      	str	r2, [r5, #0]
9001afe4:	e7b1      	b.n	9001af4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001afe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001afe6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001afea:	b0a3      	sub	sp, #140	; 0x8c
9001afec:	2600      	movs	r6, #0
9001afee:	4607      	mov	r7, r0
9001aff0:	4688      	mov	r8, r1
9001aff2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
9001aff6:	4631      	mov	r1, r6
9001aff8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
9001affa:	4648      	mov	r0, r9
9001affc:	960d      	str	r6, [sp, #52]	; 0x34
9001affe:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b002:	2242      	movs	r2, #66	; 0x42
9001b004:	f00e fc64 	bl	900298d0 <memset>
9001b008:	b15f      	cbz	r7, 9001b022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b00a:	f108 3aff 	add.w	sl, r8, #4294967295
9001b00e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b010:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b012:	b152      	cbz	r2, 9001b02a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b014:	8812      	ldrh	r2, [r2, #0]
9001b016:	b10a      	cbz	r2, 9001b01c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b018:	459a      	cmp	sl, r3
9001b01a:	dc2e      	bgt.n	9001b07a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b01c:	2200      	movs	r2, #0
9001b01e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b022:	4638      	mov	r0, r7
9001b024:	b023      	add	sp, #140	; 0x8c
9001b026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b02a:	9a08      	ldr	r2, [sp, #32]
9001b02c:	2a00      	cmp	r2, #0
9001b02e:	d0f5      	beq.n	9001b01c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b030:	7812      	ldrb	r2, [r2, #0]
9001b032:	e7f0      	b.n	9001b016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b034:	2d00      	cmp	r5, #0
9001b036:	d0ea      	beq.n	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b038:	782a      	ldrb	r2, [r5, #0]
9001b03a:	b142      	cbz	r2, 9001b04e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b03c:	2a25      	cmp	r2, #37	; 0x25
9001b03e:	d001      	beq.n	9001b044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b040:	459a      	cmp	sl, r3
9001b042:	dc08      	bgt.n	9001b056 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b044:	f1bb 0f00 	cmp.w	fp, #0
9001b048:	d121      	bne.n	9001b08e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b04a:	2d00      	cmp	r5, #0
9001b04c:	d0df      	beq.n	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b04e:	782a      	ldrb	r2, [r5, #0]
9001b050:	f04f 0b00 	mov.w	fp, #0
9001b054:	e01d      	b.n	9001b092 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b056:	f1bb 0f00 	cmp.w	fp, #0
9001b05a:	d077      	beq.n	9001b14c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b05c:	f8bb 2000 	ldrh.w	r2, [fp]
9001b060:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b064:	f1bb 0f00 	cmp.w	fp, #0
9001b068:	d002      	beq.n	9001b070 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b06a:	f10b 0202 	add.w	r2, fp, #2
9001b06e:	9209      	str	r2, [sp, #36]	; 0x24
9001b070:	b10d      	cbz	r5, 9001b076 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b072:	3501      	adds	r5, #1
9001b074:	9508      	str	r5, [sp, #32]
9001b076:	3301      	adds	r3, #1
9001b078:	930d      	str	r3, [sp, #52]	; 0x34
9001b07a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b07c:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b080:	f1bb 0f00 	cmp.w	fp, #0
9001b084:	d0d6      	beq.n	9001b034 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b086:	f8bb 2000 	ldrh.w	r2, [fp]
9001b08a:	2a00      	cmp	r2, #0
9001b08c:	d1d6      	bne.n	9001b03c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b08e:	f8bb 2000 	ldrh.w	r2, [fp]
9001b092:	2a00      	cmp	r2, #0
9001b094:	d0bb      	beq.n	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b096:	459a      	cmp	sl, r3
9001b098:	ddb9      	ble.n	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b09a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001b09e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001b0a2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
9001b0a6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
9001b0aa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001b0ae:	960e      	str	r6, [sp, #56]	; 0x38
9001b0b0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
9001b0b4:	960f      	str	r6, [sp, #60]	; 0x3c
9001b0b6:	f1bb 0f00 	cmp.w	fp, #0
9001b0ba:	d002      	beq.n	9001b0c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b0bc:	f10b 0302 	add.w	r3, fp, #2
9001b0c0:	9309      	str	r3, [sp, #36]	; 0x24
9001b0c2:	b10d      	cbz	r5, 9001b0c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b0c4:	1c6b      	adds	r3, r5, #1
9001b0c6:	9308      	str	r3, [sp, #32]
9001b0c8:	ab0f      	add	r3, sp, #60	; 0x3c
9001b0ca:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001b0ce:	a908      	add	r1, sp, #32
9001b0d0:	a809      	add	r0, sp, #36	; 0x24
9001b0d2:	9305      	str	r3, [sp, #20]
9001b0d4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
9001b0d8:	9304      	str	r3, [sp, #16]
9001b0da:	ab0e      	add	r3, sp, #56	; 0x38
9001b0dc:	9303      	str	r3, [sp, #12]
9001b0de:	ab0c      	add	r3, sp, #48	; 0x30
9001b0e0:	9302      	str	r3, [sp, #8]
9001b0e2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
9001b0e6:	9301      	str	r3, [sp, #4]
9001b0e8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
9001b0ec:	9300      	str	r3, [sp, #0]
9001b0ee:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
9001b0f2:	f7ff fea8 	bl	9001ae46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001b0f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b0f8:	2b00      	cmp	r3, #0
9001b0fa:	bfbf      	itttt	lt
9001b0fc:	6823      	ldrlt	r3, [r4, #0]
9001b0fe:	3404      	addlt	r4, #4
9001b100:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b104:	930e      	strlt	r3, [sp, #56]	; 0x38
9001b106:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001b108:	2b00      	cmp	r3, #0
9001b10a:	bfbe      	ittt	lt
9001b10c:	6823      	ldrlt	r3, [r4, #0]
9001b10e:	3404      	addlt	r4, #4
9001b110:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b114:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001b118:	bfb8      	it	lt
9001b11a:	930f      	strlt	r3, [sp, #60]	; 0x3c
9001b11c:	b1d9      	cbz	r1, 9001b156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001b11e:	880b      	ldrh	r3, [r1, #0]
9001b120:	2b69      	cmp	r3, #105	; 0x69
9001b122:	d01f      	beq.n	9001b164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b124:	d82f      	bhi.n	9001b186 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001b126:	2b58      	cmp	r3, #88	; 0x58
9001b128:	d01c      	beq.n	9001b164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b12a:	d818      	bhi.n	9001b15e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001b12c:	2b25      	cmp	r3, #37	; 0x25
9001b12e:	d034      	beq.n	9001b19a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001b130:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b132:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001b136:	f1bb 0f00 	cmp.w	fp, #0
9001b13a:	f000 80b7 	beq.w	9001b2ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001b13e:	f8bb 5000 	ldrh.w	r5, [fp]
9001b142:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001b146:	3301      	adds	r3, #1
9001b148:	930d      	str	r3, [sp, #52]	; 0x34
9001b14a:	e029      	b.n	9001b1a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b14c:	b10d      	cbz	r5, 9001b152 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001b14e:	782a      	ldrb	r2, [r5, #0]
9001b150:	e786      	b.n	9001b060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b152:	462a      	mov	r2, r5
9001b154:	e784      	b.n	9001b060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b156:	2a00      	cmp	r2, #0
9001b158:	d0ea      	beq.n	9001b130 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b15a:	7813      	ldrb	r3, [r2, #0]
9001b15c:	e7e0      	b.n	9001b120 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001b15e:	3b63      	subs	r3, #99	; 0x63
9001b160:	2b01      	cmp	r3, #1
9001b162:	d8e5      	bhi.n	9001b130 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b164:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
9001b168:	b329      	cbz	r1, 9001b1b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001b16a:	880b      	ldrh	r3, [r1, #0]
9001b16c:	2b69      	cmp	r3, #105	; 0x69
9001b16e:	d063      	beq.n	9001b238 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b170:	d825      	bhi.n	9001b1be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001b172:	2b63      	cmp	r3, #99	; 0x63
9001b174:	d038      	beq.n	9001b1e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001b176:	2b64      	cmp	r3, #100	; 0x64
9001b178:	d05e      	beq.n	9001b238 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b17a:	2b58      	cmp	r3, #88	; 0x58
9001b17c:	d07a      	beq.n	9001b274 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001b17e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001b182:	4625      	mov	r5, r4
9001b184:	e036      	b.n	9001b1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b186:	2b73      	cmp	r3, #115	; 0x73
9001b188:	d0ec      	beq.n	9001b164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b18a:	d802      	bhi.n	9001b192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001b18c:	2b6f      	cmp	r3, #111	; 0x6f
9001b18e:	d1cf      	bne.n	9001b130 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b190:	e7e8      	b.n	9001b164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b192:	2b75      	cmp	r3, #117	; 0x75
9001b194:	d0e6      	beq.n	9001b164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b196:	2b78      	cmp	r3, #120	; 0x78
9001b198:	e7f9      	b.n	9001b18e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001b19a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b19c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001b1a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b1a2:	b10b      	cbz	r3, 9001b1a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001b1a4:	3302      	adds	r3, #2
9001b1a6:	9309      	str	r3, [sp, #36]	; 0x24
9001b1a8:	9b08      	ldr	r3, [sp, #32]
9001b1aa:	2b00      	cmp	r3, #0
9001b1ac:	f43f af2f 	beq.w	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b1b0:	3301      	adds	r3, #1
9001b1b2:	9308      	str	r3, [sp, #32]
9001b1b4:	e72b      	b.n	9001b00e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b1b6:	2a00      	cmp	r2, #0
9001b1b8:	d0e1      	beq.n	9001b17e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b1ba:	7813      	ldrb	r3, [r2, #0]
9001b1bc:	e7d6      	b.n	9001b16c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001b1be:	2b73      	cmp	r3, #115	; 0x73
9001b1c0:	d036      	beq.n	9001b230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001b1c2:	d807      	bhi.n	9001b1d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001b1c4:	2b6f      	cmp	r3, #111	; 0x6f
9001b1c6:	d1da      	bne.n	9001b17e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b1c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b1ca:	1d25      	adds	r5, r4, #4
9001b1cc:	2308      	movs	r3, #8
9001b1ce:	eba8 0202 	sub.w	r2, r8, r2
9001b1d2:	e049      	b.n	9001b268 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b1d4:	2b75      	cmp	r3, #117	; 0x75
9001b1d6:	d042      	beq.n	9001b25e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001b1d8:	2b78      	cmp	r3, #120	; 0x78
9001b1da:	d1d0      	bne.n	9001b17e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b1dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b1de:	1d25      	adds	r5, r4, #4
9001b1e0:	2310      	movs	r3, #16
9001b1e2:	eba8 0202 	sub.w	r2, r8, r2
9001b1e6:	e03f      	b.n	9001b268 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b1e8:	6823      	ldr	r3, [r4, #0]
9001b1ea:	1d25      	adds	r5, r4, #4
9001b1ec:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
9001b1f0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9001b1f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b1f6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
9001b1fa:	2b00      	cmp	r3, #0
9001b1fc:	d051      	beq.n	9001b2a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001b1fe:	881a      	ldrh	r2, [r3, #0]
9001b200:	a80d      	add	r0, sp, #52	; 0x34
9001b202:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
9001b206:	462c      	mov	r4, r5
9001b208:	9005      	str	r0, [sp, #20]
9001b20a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001b20e:	9004      	str	r0, [sp, #16]
9001b210:	980e      	ldr	r0, [sp, #56]	; 0x38
9001b212:	9003      	str	r0, [sp, #12]
9001b214:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
9001b218:	9002      	str	r0, [sp, #8]
9001b21a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b21c:	9001      	str	r0, [sp, #4]
9001b21e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001b222:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001b226:	9000      	str	r0, [sp, #0]
9001b228:	a810      	add	r0, sp, #64	; 0x40
9001b22a:	f7ff fd49 	bl	9001acc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001b22e:	e7b7      	b.n	9001b1a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b230:	1d25      	adds	r5, r4, #4
9001b232:	6823      	ldr	r3, [r4, #0]
9001b234:	9310      	str	r3, [sp, #64]	; 0x40
9001b236:	e7dd      	b.n	9001b1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b238:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b23a:	230a      	movs	r3, #10
9001b23c:	4649      	mov	r1, r9
9001b23e:	6820      	ldr	r0, [r4, #0]
9001b240:	eba8 0202 	sub.w	r2, r8, r2
9001b244:	1d25      	adds	r5, r4, #4
9001b246:	b292      	uxth	r2, r2
9001b248:	f7ff fcf0 	bl	9001ac2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001b24c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001b250:	2b2d      	cmp	r3, #45	; 0x2d
9001b252:	d1cf      	bne.n	9001b1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b254:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001b258:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b25a:	3302      	adds	r3, #2
9001b25c:	e7ea      	b.n	9001b234 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001b25e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b260:	1d25      	adds	r5, r4, #4
9001b262:	230a      	movs	r3, #10
9001b264:	eba8 0202 	sub.w	r2, r8, r2
9001b268:	b292      	uxth	r2, r2
9001b26a:	4649      	mov	r1, r9
9001b26c:	6820      	ldr	r0, [r4, #0]
9001b26e:	f7ff fd09 	bl	9001ac84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b272:	e7bf      	b.n	9001b1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b274:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b276:	2310      	movs	r3, #16
9001b278:	4649      	mov	r1, r9
9001b27a:	6820      	ldr	r0, [r4, #0]
9001b27c:	eba8 0202 	sub.w	r2, r8, r2
9001b280:	1d25      	adds	r5, r4, #4
9001b282:	b292      	uxth	r2, r2
9001b284:	f7ff fcfe 	bl	9001ac84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b288:	f10d 0242 	add.w	r2, sp, #66	; 0x42
9001b28c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001b290:	2b00      	cmp	r3, #0
9001b292:	d0af      	beq.n	9001b1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b294:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
9001b298:	2919      	cmp	r1, #25
9001b29a:	d8f7      	bhi.n	9001b28c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b29c:	3b20      	subs	r3, #32
9001b29e:	8013      	strh	r3, [r2, #0]
9001b2a0:	e7f4      	b.n	9001b28c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b2a2:	9a08      	ldr	r2, [sp, #32]
9001b2a4:	2a00      	cmp	r2, #0
9001b2a6:	d0ab      	beq.n	9001b200 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b2a8:	7812      	ldrb	r2, [r2, #0]
9001b2aa:	e7a9      	b.n	9001b200 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b2ac:	2d00      	cmp	r5, #0
9001b2ae:	f43f af48 	beq.w	9001b142 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001b2b2:	782d      	ldrb	r5, [r5, #0]
9001b2b4:	e745      	b.n	9001b142 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001b2b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001b2b6:	b507      	push	{r0, r1, r2, lr}
9001b2b8:	9300      	str	r3, [sp, #0]
9001b2ba:	4613      	mov	r3, r2
9001b2bc:	2200      	movs	r2, #0
9001b2be:	f7ff fe92 	bl	9001afe6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001b2c2:	b003      	add	sp, #12
9001b2c4:	f85d fb04 	ldr.w	pc, [sp], #4

9001b2c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001b2c8:	b40c      	push	{r2, r3}
9001b2ca:	b507      	push	{r0, r1, r2, lr}
9001b2cc:	ab04      	add	r3, sp, #16
9001b2ce:	f853 2b04 	ldr.w	r2, [r3], #4
9001b2d2:	9301      	str	r3, [sp, #4]
9001b2d4:	f7ff ffef 	bl	9001b2b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001b2d8:	b003      	add	sp, #12
9001b2da:	f85d eb04 	ldr.w	lr, [sp], #4
9001b2de:	b002      	add	sp, #8
9001b2e0:	4770      	bx	lr
	...

9001b2e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001b2e4:	4b01      	ldr	r3, [pc, #4]	; (9001b2ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001b2e6:	6018      	str	r0, [r3, #0]
9001b2e8:	4770      	bx	lr
9001b2ea:	bf00      	nop
9001b2ec:	24039b34 	.word	0x24039b34

9001b2f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001b2f0:	4b06      	ldr	r3, [pc, #24]	; (9001b30c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001b2f2:	881a      	ldrh	r2, [r3, #0]
9001b2f4:	4282      	cmp	r2, r0
9001b2f6:	d807      	bhi.n	9001b308 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001b2f8:	4b05      	ldr	r3, [pc, #20]	; (9001b310 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001b2fa:	881b      	ldrh	r3, [r3, #0]
9001b2fc:	4413      	add	r3, r2
9001b2fe:	4298      	cmp	r0, r3
9001b300:	bfac      	ite	ge
9001b302:	2000      	movge	r0, #0
9001b304:	2001      	movlt	r0, #1
9001b306:	4770      	bx	lr
9001b308:	2000      	movs	r0, #0
9001b30a:	4770      	bx	lr
9001b30c:	24039b54 	.word	0x24039b54
9001b310:	24039b58 	.word	0x24039b58

9001b314 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001b314:	b508      	push	{r3, lr}
9001b316:	4601      	mov	r1, r0
9001b318:	f7ff ffea 	bl	9001b2f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001b31c:	b118      	cbz	r0, 9001b326 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001b31e:	4b02      	ldr	r3, [pc, #8]	; (9001b328 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001b320:	681b      	ldr	r3, [r3, #0]
9001b322:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001b326:	bd08      	pop	{r3, pc}
9001b328:	24039b38 	.word	0x24039b38

9001b32c <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001b32c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b32e:	4c24      	ldr	r4, [pc, #144]	; (9001b3c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001b330:	6823      	ldr	r3, [r4, #0]
9001b332:	2b00      	cmp	r3, #0
9001b334:	d042      	beq.n	9001b3bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b336:	4a23      	ldr	r2, [pc, #140]	; (9001b3c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001b338:	4d23      	ldr	r5, [pc, #140]	; (9001b3c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001b33a:	8811      	ldrh	r1, [r2, #0]
9001b33c:	f8b5 c000 	ldrh.w	ip, [r5]
9001b340:	4822      	ldr	r0, [pc, #136]	; (9001b3cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001b342:	4461      	add	r1, ip
9001b344:	1c4a      	adds	r2, r1, #1
9001b346:	008f      	lsls	r7, r1, #2
9001b348:	f022 0201 	bic.w	r2, r2, #1
9001b34c:	19de      	adds	r6, r3, r7
9001b34e:	0412      	lsls	r2, r2, #16
9001b350:	6006      	str	r6, [r0, #0]
9001b352:	4e1f      	ldr	r6, [pc, #124]	; (9001b3d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001b354:	0c12      	lsrs	r2, r2, #16
9001b356:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001b35a:	19da      	adds	r2, r3, r7
9001b35c:	6032      	str	r2, [r6, #0]
9001b35e:	220e      	movs	r2, #14
9001b360:	fb02 f20c 	mul.w	r2, r2, ip
9001b364:	3203      	adds	r2, #3
9001b366:	f022 0203 	bic.w	r2, r2, #3
9001b36a:	443a      	add	r2, r7
9001b36c:	4f19      	ldr	r7, [pc, #100]	; (9001b3d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001b36e:	4413      	add	r3, r2
9001b370:	603b      	str	r3, [r7, #0]
9001b372:	2300      	movs	r3, #0
9001b374:	4f18      	ldr	r7, [pc, #96]	; (9001b3d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001b376:	469c      	mov	ip, r3
9001b378:	803b      	strh	r3, [r7, #0]
9001b37a:	4f18      	ldr	r7, [pc, #96]	; (9001b3dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001b37c:	683f      	ldr	r7, [r7, #0]
9001b37e:	1aba      	subs	r2, r7, r2
9001b380:	4f17      	ldr	r7, [pc, #92]	; (9001b3e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001b382:	603a      	str	r2, [r7, #0]
9001b384:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001b388:	4a16      	ldr	r2, [pc, #88]	; (9001b3e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001b38a:	8013      	strh	r3, [r2, #0]
9001b38c:	428b      	cmp	r3, r1
9001b38e:	d10d      	bne.n	9001b3ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001b390:	882d      	ldrh	r5, [r5, #0]
9001b392:	2300      	movs	r3, #0
9001b394:	6830      	ldr	r0, [r6, #0]
9001b396:	240e      	movs	r4, #14
9001b398:	429d      	cmp	r5, r3
9001b39a:	d90f      	bls.n	9001b3bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b39c:	fb04 0203 	mla	r2, r4, r3, r0
9001b3a0:	3301      	adds	r3, #1
9001b3a2:	7b11      	ldrb	r1, [r2, #12]
9001b3a4:	f36f 1145 	bfc	r1, #5, #1
9001b3a8:	7311      	strb	r1, [r2, #12]
9001b3aa:	e7f5      	b.n	9001b398 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001b3ac:	6822      	ldr	r2, [r4, #0]
9001b3ae:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001b3b2:	6802      	ldr	r2, [r0, #0]
9001b3b4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001b3b8:	3301      	adds	r3, #1
9001b3ba:	e7e7      	b.n	9001b38c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001b3bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b3be:	bf00      	nop
9001b3c0:	24039b38 	.word	0x24039b38
9001b3c4:	24039b54 	.word	0x24039b54
9001b3c8:	24039b58 	.word	0x24039b58
9001b3cc:	24039b4c 	.word	0x24039b4c
9001b3d0:	24039b3c 	.word	0x24039b3c
9001b3d4:	24039b44 	.word	0x24039b44
9001b3d8:	24039b56 	.word	0x24039b56
9001b3dc:	24039b40 	.word	0x24039b40
9001b3e0:	24039b50 	.word	0x24039b50
9001b3e4:	24039b48 	.word	0x24039b48

9001b3e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001b3e8:	4b06      	ldr	r3, [pc, #24]	; (9001b404 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001b3ea:	681b      	ldr	r3, [r3, #0]
9001b3ec:	b943      	cbnz	r3, 9001b400 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b3ee:	b139      	cbz	r1, 9001b400 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b3f0:	4b05      	ldr	r3, [pc, #20]	; (9001b408 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001b3f2:	801a      	strh	r2, [r3, #0]
9001b3f4:	4b05      	ldr	r3, [pc, #20]	; (9001b40c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001b3f6:	6019      	str	r1, [r3, #0]
9001b3f8:	4b05      	ldr	r3, [pc, #20]	; (9001b410 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001b3fa:	6018      	str	r0, [r3, #0]
9001b3fc:	f7ff bf96 	b.w	9001b32c <_ZN8touchgfx6Bitmap10clearCacheEv>
9001b400:	4770      	bx	lr
9001b402:	bf00      	nop
9001b404:	24039b44 	.word	0x24039b44
9001b408:	24039b58 	.word	0x24039b58
9001b40c:	24039b40 	.word	0x24039b40
9001b410:	24039b38 	.word	0x24039b38

9001b414 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001b414:	b470      	push	{r4, r5, r6}
9001b416:	4c07      	ldr	r4, [pc, #28]	; (9001b434 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001b418:	4605      	mov	r5, r0
9001b41a:	4610      	mov	r0, r2
9001b41c:	9a03      	ldr	r2, [sp, #12]
9001b41e:	6826      	ldr	r6, [r4, #0]
9001b420:	b936      	cbnz	r6, 9001b430 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001b422:	6025      	str	r5, [r4, #0]
9001b424:	4c04      	ldr	r4, [pc, #16]	; (9001b438 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001b426:	8021      	strh	r1, [r4, #0]
9001b428:	4619      	mov	r1, r3
9001b42a:	bc70      	pop	{r4, r5, r6}
9001b42c:	f7ff bfdc 	b.w	9001b3e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001b430:	bc70      	pop	{r4, r5, r6}
9001b432:	4770      	bx	lr
9001b434:	24039b5c 	.word	0x24039b5c
9001b438:	24039b54 	.word	0x24039b54

9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001b43c:	4a12      	ldr	r2, [pc, #72]	; (9001b488 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001b43e:	8803      	ldrh	r3, [r0, #0]
9001b440:	8812      	ldrh	r2, [r2, #0]
9001b442:	4293      	cmp	r3, r2
9001b444:	d207      	bcs.n	9001b456 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001b446:	4a11      	ldr	r2, [pc, #68]	; (9001b48c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001b448:	2114      	movs	r1, #20
9001b44a:	6812      	ldr	r2, [r2, #0]
9001b44c:	fb01 2303 	mla	r3, r1, r3, r2
9001b450:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001b454:	4770      	bx	lr
9001b456:	490e      	ldr	r1, [pc, #56]	; (9001b490 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001b458:	8809      	ldrh	r1, [r1, #0]
9001b45a:	4411      	add	r1, r2
9001b45c:	428b      	cmp	r3, r1
9001b45e:	da04      	bge.n	9001b46a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001b460:	1a9b      	subs	r3, r3, r2
9001b462:	4a0c      	ldr	r2, [pc, #48]	; (9001b494 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001b464:	210e      	movs	r1, #14
9001b466:	6812      	ldr	r2, [r2, #0]
9001b468:	e7f0      	b.n	9001b44c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001b46a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b46e:	4293      	cmp	r3, r2
9001b470:	d108      	bne.n	9001b484 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001b472:	4b09      	ldr	r3, [pc, #36]	; (9001b498 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001b474:	781b      	ldrb	r3, [r3, #0]
9001b476:	b91b      	cbnz	r3, 9001b480 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001b478:	4b08      	ldr	r3, [pc, #32]	; (9001b49c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001b47a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b47e:	4770      	bx	lr
9001b480:	4b07      	ldr	r3, [pc, #28]	; (9001b4a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001b482:	e7fa      	b.n	9001b47a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001b484:	2000      	movs	r0, #0
9001b486:	4770      	bx	lr
9001b488:	24039b54 	.word	0x24039b54
9001b48c:	24039b5c 	.word	0x24039b5c
9001b490:	24039b58 	.word	0x24039b58
9001b494:	24039b3c 	.word	0x24039b3c
9001b498:	24039ac4 	.word	0x24039ac4
9001b49c:	24039ac6 	.word	0x24039ac6
9001b4a0:	24039ac8 	.word	0x24039ac8

9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001b4a4:	4a12      	ldr	r2, [pc, #72]	; (9001b4f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001b4a6:	8803      	ldrh	r3, [r0, #0]
9001b4a8:	8812      	ldrh	r2, [r2, #0]
9001b4aa:	4293      	cmp	r3, r2
9001b4ac:	d207      	bcs.n	9001b4be <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001b4ae:	4a11      	ldr	r2, [pc, #68]	; (9001b4f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001b4b0:	2114      	movs	r1, #20
9001b4b2:	6812      	ldr	r2, [r2, #0]
9001b4b4:	fb01 2303 	mla	r3, r1, r3, r2
9001b4b8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001b4bc:	4770      	bx	lr
9001b4be:	490e      	ldr	r1, [pc, #56]	; (9001b4f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001b4c0:	8809      	ldrh	r1, [r1, #0]
9001b4c2:	4411      	add	r1, r2
9001b4c4:	428b      	cmp	r3, r1
9001b4c6:	da04      	bge.n	9001b4d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001b4c8:	1a9b      	subs	r3, r3, r2
9001b4ca:	4a0c      	ldr	r2, [pc, #48]	; (9001b4fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001b4cc:	210e      	movs	r1, #14
9001b4ce:	6812      	ldr	r2, [r2, #0]
9001b4d0:	e7f0      	b.n	9001b4b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001b4d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b4d6:	4293      	cmp	r3, r2
9001b4d8:	d108      	bne.n	9001b4ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001b4da:	4b09      	ldr	r3, [pc, #36]	; (9001b500 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001b4dc:	781b      	ldrb	r3, [r3, #0]
9001b4de:	b91b      	cbnz	r3, 9001b4e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001b4e0:	4b08      	ldr	r3, [pc, #32]	; (9001b504 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001b4e2:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b4e6:	4770      	bx	lr
9001b4e8:	4b07      	ldr	r3, [pc, #28]	; (9001b508 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001b4ea:	e7fa      	b.n	9001b4e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001b4ec:	2000      	movs	r0, #0
9001b4ee:	4770      	bx	lr
9001b4f0:	24039b54 	.word	0x24039b54
9001b4f4:	24039b5c 	.word	0x24039b5c
9001b4f8:	24039b58 	.word	0x24039b58
9001b4fc:	24039b3c 	.word	0x24039b3c
9001b500:	24039ac4 	.word	0x24039ac4
9001b504:	24039ac8 	.word	0x24039ac8
9001b508:	24039ac6 	.word	0x24039ac6

9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001b50c:	4a1f      	ldr	r2, [pc, #124]	; (9001b58c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001b50e:	b510      	push	{r4, lr}
9001b510:	880b      	ldrh	r3, [r1, #0]
9001b512:	8812      	ldrh	r2, [r2, #0]
9001b514:	4293      	cmp	r3, r2
9001b516:	d213      	bcs.n	9001b540 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001b518:	4a1d      	ldr	r2, [pc, #116]	; (9001b590 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001b51a:	2114      	movs	r1, #20
9001b51c:	6812      	ldr	r2, [r2, #0]
9001b51e:	fb01 2303 	mla	r3, r1, r3, r2
9001b522:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001b526:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001b52a:	8a1a      	ldrh	r2, [r3, #16]
9001b52c:	8a5b      	ldrh	r3, [r3, #18]
9001b52e:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b532:	8004      	strh	r4, [r0, #0]
9001b534:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001b538:	8041      	strh	r1, [r0, #2]
9001b53a:	8082      	strh	r2, [r0, #4]
9001b53c:	80c3      	strh	r3, [r0, #6]
9001b53e:	e00e      	b.n	9001b55e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b540:	4914      	ldr	r1, [pc, #80]	; (9001b594 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001b542:	8809      	ldrh	r1, [r1, #0]
9001b544:	4411      	add	r1, r2
9001b546:	428b      	cmp	r3, r1
9001b548:	da0a      	bge.n	9001b560 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001b54a:	1a9b      	subs	r3, r3, r2
9001b54c:	4a12      	ldr	r2, [pc, #72]	; (9001b598 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001b54e:	210e      	movs	r1, #14
9001b550:	6812      	ldr	r2, [r2, #0]
9001b552:	fb01 2303 	mla	r3, r1, r3, r2
9001b556:	681a      	ldr	r2, [r3, #0]
9001b558:	6002      	str	r2, [r0, #0]
9001b55a:	685a      	ldr	r2, [r3, #4]
9001b55c:	6042      	str	r2, [r0, #4]
9001b55e:	bd10      	pop	{r4, pc}
9001b560:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b564:	4293      	cmp	r3, r2
9001b566:	d10b      	bne.n	9001b580 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001b568:	4b0c      	ldr	r3, [pc, #48]	; (9001b59c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001b56a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001b56e:	4b0c      	ldr	r3, [pc, #48]	; (9001b5a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001b570:	8081      	strh	r1, [r0, #4]
9001b572:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b576:	2300      	movs	r3, #0
9001b578:	80c2      	strh	r2, [r0, #6]
9001b57a:	8003      	strh	r3, [r0, #0]
9001b57c:	8043      	strh	r3, [r0, #2]
9001b57e:	e7ee      	b.n	9001b55e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b580:	2300      	movs	r3, #0
9001b582:	8003      	strh	r3, [r0, #0]
9001b584:	8043      	strh	r3, [r0, #2]
9001b586:	8083      	strh	r3, [r0, #4]
9001b588:	e7d8      	b.n	9001b53c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001b58a:	bf00      	nop
9001b58c:	24039b54 	.word	0x24039b54
9001b590:	24039b5c 	.word	0x24039b5c
9001b594:	24039b58 	.word	0x24039b58
9001b598:	24039b3c 	.word	0x24039b3c
9001b59c:	24039ac0 	.word	0x24039ac0
9001b5a0:	24039ac2 	.word	0x24039ac2

9001b5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001b5a4:	4a17      	ldr	r2, [pc, #92]	; (9001b604 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001b5a6:	8803      	ldrh	r3, [r0, #0]
9001b5a8:	8812      	ldrh	r2, [r2, #0]
9001b5aa:	4293      	cmp	r3, r2
9001b5ac:	d213      	bcs.n	9001b5d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001b5ae:	4a16      	ldr	r2, [pc, #88]	; (9001b608 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001b5b0:	2114      	movs	r1, #20
9001b5b2:	6812      	ldr	r2, [r2, #0]
9001b5b4:	fb01 2303 	mla	r3, r1, r3, r2
9001b5b8:	8a1a      	ldrh	r2, [r3, #16]
9001b5ba:	8919      	ldrh	r1, [r3, #8]
9001b5bc:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b5c0:	428a      	cmp	r2, r1
9001b5c2:	db1d      	blt.n	9001b600 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b5c4:	8a58      	ldrh	r0, [r3, #18]
9001b5c6:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001b5ca:	895b      	ldrh	r3, [r3, #10]
9001b5cc:	4298      	cmp	r0, r3
9001b5ce:	bfac      	ite	ge
9001b5d0:	2000      	movge	r0, #0
9001b5d2:	2001      	movlt	r0, #1
9001b5d4:	4770      	bx	lr
9001b5d6:	490d      	ldr	r1, [pc, #52]	; (9001b60c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001b5d8:	8809      	ldrh	r1, [r1, #0]
9001b5da:	4411      	add	r1, r2
9001b5dc:	428b      	cmp	r3, r1
9001b5de:	da0d      	bge.n	9001b5fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001b5e0:	1a9b      	subs	r3, r3, r2
9001b5e2:	4a0b      	ldr	r2, [pc, #44]	; (9001b610 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001b5e4:	210e      	movs	r1, #14
9001b5e6:	6812      	ldr	r2, [r2, #0]
9001b5e8:	fb01 2303 	mla	r3, r1, r3, r2
9001b5ec:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001b5f0:	891a      	ldrh	r2, [r3, #8]
9001b5f2:	4291      	cmp	r1, r2
9001b5f4:	db04      	blt.n	9001b600 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b5f6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001b5fa:	e7e6      	b.n	9001b5ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001b5fc:	2000      	movs	r0, #0
9001b5fe:	4770      	bx	lr
9001b600:	2001      	movs	r0, #1
9001b602:	4770      	bx	lr
9001b604:	24039b54 	.word	0x24039b54
9001b608:	24039b5c 	.word	0x24039b5c
9001b60c:	24039b58 	.word	0x24039b58
9001b610:	24039b3c 	.word	0x24039b3c

9001b614 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001b614:	4a12      	ldr	r2, [pc, #72]	; (9001b660 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001b616:	8803      	ldrh	r3, [r0, #0]
9001b618:	8811      	ldrh	r1, [r2, #0]
9001b61a:	428b      	cmp	r3, r1
9001b61c:	d20b      	bcs.n	9001b636 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001b61e:	4a11      	ldr	r2, [pc, #68]	; (9001b664 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b620:	6812      	ldr	r2, [r2, #0]
9001b622:	b112      	cbz	r2, 9001b62a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001b624:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b628:	b9c0      	cbnz	r0, 9001b65c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001b62a:	4a0f      	ldr	r2, [pc, #60]	; (9001b668 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001b62c:	6811      	ldr	r1, [r2, #0]
9001b62e:	2214      	movs	r2, #20
9001b630:	4353      	muls	r3, r2
9001b632:	58c8      	ldr	r0, [r1, r3]
9001b634:	4770      	bx	lr
9001b636:	4a0d      	ldr	r2, [pc, #52]	; (9001b66c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001b638:	8812      	ldrh	r2, [r2, #0]
9001b63a:	440a      	add	r2, r1
9001b63c:	4293      	cmp	r3, r2
9001b63e:	da04      	bge.n	9001b64a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001b640:	4a08      	ldr	r2, [pc, #32]	; (9001b664 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b642:	6812      	ldr	r2, [r2, #0]
9001b644:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b648:	4770      	bx	lr
9001b64a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b64e:	4293      	cmp	r3, r2
9001b650:	d103      	bne.n	9001b65a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001b652:	4b07      	ldr	r3, [pc, #28]	; (9001b670 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001b654:	681b      	ldr	r3, [r3, #0]
9001b656:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001b658:	4770      	bx	lr
9001b65a:	2000      	movs	r0, #0
9001b65c:	4770      	bx	lr
9001b65e:	bf00      	nop
9001b660:	24039b54 	.word	0x24039b54
9001b664:	24039b38 	.word	0x24039b38
9001b668:	24039b5c 	.word	0x24039b5c
9001b66c:	24039b58 	.word	0x24039b58
9001b670:	24039acc 	.word	0x24039acc

9001b674 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001b674:	4b24      	ldr	r3, [pc, #144]	; (9001b708 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001b676:	8802      	ldrh	r2, [r0, #0]
9001b678:	8818      	ldrh	r0, [r3, #0]
9001b67a:	4282      	cmp	r2, r0
9001b67c:	d221      	bcs.n	9001b6c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001b67e:	4b23      	ldr	r3, [pc, #140]	; (9001b70c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001b680:	6819      	ldr	r1, [r3, #0]
9001b682:	2314      	movs	r3, #20
9001b684:	fb03 1302 	mla	r3, r3, r2, r1
9001b688:	6858      	ldr	r0, [r3, #4]
9001b68a:	2800      	cmp	r0, #0
9001b68c:	d03a      	beq.n	9001b704 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b68e:	4920      	ldr	r1, [pc, #128]	; (9001b710 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b690:	6809      	ldr	r1, [r1, #0]
9001b692:	2900      	cmp	r1, #0
9001b694:	d036      	beq.n	9001b704 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b696:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001b69a:	2900      	cmp	r1, #0
9001b69c:	d032      	beq.n	9001b704 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b69e:	891a      	ldrh	r2, [r3, #8]
9001b6a0:	8958      	ldrh	r0, [r3, #10]
9001b6a2:	4350      	muls	r0, r2
9001b6a4:	7c5a      	ldrb	r2, [r3, #17]
9001b6a6:	7cdb      	ldrb	r3, [r3, #19]
9001b6a8:	0952      	lsrs	r2, r2, #5
9001b6aa:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001b6ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001b6b2:	2b0b      	cmp	r3, #11
9001b6b4:	bf18      	it	ne
9001b6b6:	0040      	lslne	r0, r0, #1
9001b6b8:	3003      	adds	r0, #3
9001b6ba:	f020 0003 	bic.w	r0, r0, #3
9001b6be:	4408      	add	r0, r1
9001b6c0:	4770      	bx	lr
9001b6c2:	4b14      	ldr	r3, [pc, #80]	; (9001b714 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001b6c4:	881b      	ldrh	r3, [r3, #0]
9001b6c6:	4403      	add	r3, r0
9001b6c8:	429a      	cmp	r2, r3
9001b6ca:	da1a      	bge.n	9001b702 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b6cc:	4b12      	ldr	r3, [pc, #72]	; (9001b718 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001b6ce:	1a10      	subs	r0, r2, r0
9001b6d0:	210e      	movs	r1, #14
9001b6d2:	681b      	ldr	r3, [r3, #0]
9001b6d4:	fb01 3000 	mla	r0, r1, r0, r3
9001b6d8:	7b03      	ldrb	r3, [r0, #12]
9001b6da:	f003 031f 	and.w	r3, r3, #31
9001b6de:	2b0b      	cmp	r3, #11
9001b6e0:	d10b      	bne.n	9001b6fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001b6e2:	8903      	ldrh	r3, [r0, #8]
9001b6e4:	8940      	ldrh	r0, [r0, #10]
9001b6e6:	4358      	muls	r0, r3
9001b6e8:	4b09      	ldr	r3, [pc, #36]	; (9001b710 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b6ea:	3003      	adds	r0, #3
9001b6ec:	6819      	ldr	r1, [r3, #0]
9001b6ee:	f020 0303 	bic.w	r3, r0, #3
9001b6f2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001b6f6:	4418      	add	r0, r3
9001b6f8:	4770      	bx	lr
9001b6fa:	2b0d      	cmp	r3, #13
9001b6fc:	d101      	bne.n	9001b702 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b6fe:	300d      	adds	r0, #13
9001b700:	4770      	bx	lr
9001b702:	2000      	movs	r0, #0
9001b704:	4770      	bx	lr
9001b706:	bf00      	nop
9001b708:	24039b54 	.word	0x24039b54
9001b70c:	24039b5c 	.word	0x24039b5c
9001b710:	24039b38 	.word	0x24039b38
9001b714:	24039b58 	.word	0x24039b58
9001b718:	24039b3c 	.word	0x24039b3c

9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001b71c:	4a17      	ldr	r2, [pc, #92]	; (9001b77c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001b71e:	b510      	push	{r4, lr}
9001b720:	8803      	ldrh	r3, [r0, #0]
9001b722:	8812      	ldrh	r2, [r2, #0]
9001b724:	4293      	cmp	r3, r2
9001b726:	d20c      	bcs.n	9001b742 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001b728:	4a15      	ldr	r2, [pc, #84]	; (9001b780 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001b72a:	2114      	movs	r1, #20
9001b72c:	6812      	ldr	r2, [r2, #0]
9001b72e:	fb01 2303 	mla	r3, r1, r3, r2
9001b732:	7c58      	ldrb	r0, [r3, #17]
9001b734:	0942      	lsrs	r2, r0, #5
9001b736:	7cd8      	ldrb	r0, [r3, #19]
9001b738:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001b73c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001b740:	bd10      	pop	{r4, pc}
9001b742:	4910      	ldr	r1, [pc, #64]	; (9001b784 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001b744:	8809      	ldrh	r1, [r1, #0]
9001b746:	4411      	add	r1, r2
9001b748:	428b      	cmp	r3, r1
9001b74a:	da09      	bge.n	9001b760 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001b74c:	1a9b      	subs	r3, r3, r2
9001b74e:	4a0e      	ldr	r2, [pc, #56]	; (9001b788 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001b750:	210e      	movs	r1, #14
9001b752:	6812      	ldr	r2, [r2, #0]
9001b754:	fb01 2303 	mla	r3, r1, r3, r2
9001b758:	7b18      	ldrb	r0, [r3, #12]
9001b75a:	f000 001f 	and.w	r0, r0, #31
9001b75e:	e7ef      	b.n	9001b740 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b760:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b764:	4293      	cmp	r3, r2
9001b766:	d106      	bne.n	9001b776 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001b768:	f7f7 fcce 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9001b76c:	6803      	ldr	r3, [r0, #0]
9001b76e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001b772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b774:	4718      	bx	r3
9001b776:	2000      	movs	r0, #0
9001b778:	e7e2      	b.n	9001b740 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b77a:	bf00      	nop
9001b77c:	24039b54 	.word	0x24039b54
9001b780:	24039b5c 	.word	0x24039b5c
9001b784:	24039b58 	.word	0x24039b58
9001b788:	24039b3c 	.word	0x24039b3c

9001b78c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001b78c:	2010      	movs	r0, #16
9001b78e:	4770      	bx	lr

9001b790 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001b790:	4b02      	ldr	r3, [pc, #8]	; (9001b79c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001b792:	8818      	ldrh	r0, [r3, #0]
9001b794:	0040      	lsls	r0, r0, #1
9001b796:	b280      	uxth	r0, r0
9001b798:	4770      	bx	lr
9001b79a:	bf00      	nop
9001b79c:	24039ac6 	.word	0x24039ac6

9001b7a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001b7a0:	2bff      	cmp	r3, #255	; 0xff
9001b7a2:	d050      	beq.n	9001b846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001b7a4:	2a0b      	cmp	r2, #11
9001b7a6:	d04a      	beq.n	9001b83e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001b7a8:	d80e      	bhi.n	9001b7c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001b7aa:	2a03      	cmp	r2, #3
9001b7ac:	d03f      	beq.n	9001b82e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001b7ae:	d804      	bhi.n	9001b7ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001b7b0:	2a01      	cmp	r2, #1
9001b7b2:	d03e      	beq.n	9001b832 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001b7b4:	d93f      	bls.n	9001b836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001b7b6:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001b7b8:	4770      	bx	lr
9001b7ba:	2a09      	cmp	r2, #9
9001b7bc:	d03f      	beq.n	9001b83e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001b7be:	d83c      	bhi.n	9001b83a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001b7c0:	2a08      	cmp	r2, #8
9001b7c2:	d03a      	beq.n	9001b83a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001b7c4:	2000      	movs	r0, #0
9001b7c6:	4770      	bx	lr
9001b7c8:	2a2f      	cmp	r2, #47	; 0x2f
9001b7ca:	d024      	beq.n	9001b816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001b7cc:	d80d      	bhi.n	9001b7ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001b7ce:	2a2d      	cmp	r2, #45	; 0x2d
9001b7d0:	d014      	beq.n	9001b7fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001b7d2:	d826      	bhi.n	9001b822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001b7d4:	2a2c      	cmp	r2, #44	; 0x2c
9001b7d6:	d1f5      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b7d8:	684b      	ldr	r3, [r1, #4]
9001b7da:	781b      	ldrb	r3, [r3, #0]
9001b7dc:	2b01      	cmp	r3, #1
9001b7de:	d018      	beq.n	9001b812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001b7e0:	d323      	bcc.n	9001b82a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001b7e2:	2b02      	cmp	r3, #2
9001b7e4:	d1ee      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b7e6:	6880      	ldr	r0, [r0, #8]
9001b7e8:	4770      	bx	lr
9001b7ea:	2a31      	cmp	r2, #49	; 0x31
9001b7ec:	d004      	beq.n	9001b7f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001b7ee:	d328      	bcc.n	9001b842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001b7f0:	2a32      	cmp	r2, #50	; 0x32
9001b7f2:	d026      	beq.n	9001b842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001b7f4:	2a33      	cmp	r2, #51	; 0x33
9001b7f6:	d1e5      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b7f8:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001b7fa:	4770      	bx	lr
9001b7fc:	684b      	ldr	r3, [r1, #4]
9001b7fe:	781b      	ldrb	r3, [r3, #0]
9001b800:	2b01      	cmp	r3, #1
9001b802:	d004      	beq.n	9001b80e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001b804:	d30b      	bcc.n	9001b81e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b806:	2b02      	cmp	r3, #2
9001b808:	d1dc      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b80a:	6900      	ldr	r0, [r0, #16]
9001b80c:	4770      	bx	lr
9001b80e:	6a00      	ldr	r0, [r0, #32]
9001b810:	4770      	bx	lr
9001b812:	6980      	ldr	r0, [r0, #24]
9001b814:	4770      	bx	lr
9001b816:	684b      	ldr	r3, [r1, #4]
9001b818:	781b      	ldrb	r3, [r3, #0]
9001b81a:	2b00      	cmp	r3, #0
9001b81c:	d1d2      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b81e:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001b820:	4770      	bx	lr
9001b822:	684b      	ldr	r3, [r1, #4]
9001b824:	781b      	ldrb	r3, [r3, #0]
9001b826:	2b00      	cmp	r3, #0
9001b828:	d1cc      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b82a:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001b82c:	4770      	bx	lr
9001b82e:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001b830:	4770      	bx	lr
9001b832:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001b834:	4770      	bx	lr
9001b836:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001b838:	4770      	bx	lr
9001b83a:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001b83c:	4770      	bx	lr
9001b83e:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001b840:	4770      	bx	lr
9001b842:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001b844:	4770      	bx	lr
9001b846:	2a0b      	cmp	r2, #11
9001b848:	d049      	beq.n	9001b8de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001b84a:	d80e      	bhi.n	9001b86a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001b84c:	2a03      	cmp	r2, #3
9001b84e:	d040      	beq.n	9001b8d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001b850:	d804      	bhi.n	9001b85c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001b852:	2a01      	cmp	r2, #1
9001b854:	d03f      	beq.n	9001b8d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001b856:	d940      	bls.n	9001b8da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001b858:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001b85a:	4770      	bx	lr
9001b85c:	2a09      	cmp	r2, #9
9001b85e:	d03e      	beq.n	9001b8de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001b860:	d801      	bhi.n	9001b866 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001b862:	2a08      	cmp	r2, #8
9001b864:	d1ae      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b866:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001b868:	4770      	bx	lr
9001b86a:	2a2f      	cmp	r2, #47	; 0x2f
9001b86c:	d024      	beq.n	9001b8b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001b86e:	d80d      	bhi.n	9001b88c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001b870:	2a2d      	cmp	r2, #45	; 0x2d
9001b872:	d014      	beq.n	9001b89e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001b874:	d826      	bhi.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001b876:	2a2c      	cmp	r2, #44	; 0x2c
9001b878:	d1a4      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b87a:	684b      	ldr	r3, [r1, #4]
9001b87c:	781b      	ldrb	r3, [r3, #0]
9001b87e:	2b01      	cmp	r3, #1
9001b880:	d018      	beq.n	9001b8b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001b882:	d324      	bcc.n	9001b8ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001b884:	2b02      	cmp	r3, #2
9001b886:	d19d      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b888:	68c0      	ldr	r0, [r0, #12]
9001b88a:	4770      	bx	lr
9001b88c:	2a31      	cmp	r2, #49	; 0x31
9001b88e:	d004      	beq.n	9001b89a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001b890:	d327      	bcc.n	9001b8e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001b892:	2a32      	cmp	r2, #50	; 0x32
9001b894:	d025      	beq.n	9001b8e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001b896:	2a33      	cmp	r2, #51	; 0x33
9001b898:	d194      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b89a:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001b89c:	4770      	bx	lr
9001b89e:	684b      	ldr	r3, [r1, #4]
9001b8a0:	781b      	ldrb	r3, [r3, #0]
9001b8a2:	2b01      	cmp	r3, #1
9001b8a4:	d004      	beq.n	9001b8b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001b8a6:	d30b      	bcc.n	9001b8c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001b8a8:	2b02      	cmp	r3, #2
9001b8aa:	d18b      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8ac:	6940      	ldr	r0, [r0, #20]
9001b8ae:	4770      	bx	lr
9001b8b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001b8b2:	4770      	bx	lr
9001b8b4:	69c0      	ldr	r0, [r0, #28]
9001b8b6:	4770      	bx	lr
9001b8b8:	684b      	ldr	r3, [r1, #4]
9001b8ba:	781b      	ldrb	r3, [r3, #0]
9001b8bc:	2b00      	cmp	r3, #0
9001b8be:	d181      	bne.n	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8c0:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001b8c2:	4770      	bx	lr
9001b8c4:	684b      	ldr	r3, [r1, #4]
9001b8c6:	781b      	ldrb	r3, [r3, #0]
9001b8c8:	2b00      	cmp	r3, #0
9001b8ca:	f47f af7b 	bne.w	9001b7c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8ce:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001b8d0:	4770      	bx	lr
9001b8d2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001b8d4:	4770      	bx	lr
9001b8d6:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001b8d8:	4770      	bx	lr
9001b8da:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001b8dc:	4770      	bx	lr
9001b8de:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001b8e0:	4770      	bx	lr
9001b8e2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001b8e4:	4770      	bx	lr

9001b8e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b8e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b8ea:	b087      	sub	sp, #28
9001b8ec:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b8ee:	9205      	str	r2, [sp, #20]
9001b8f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b8f4:	9101      	str	r1, [sp, #4]
9001b8f6:	9202      	str	r2, [sp, #8]
9001b8f8:	6841      	ldr	r1, [r0, #4]
9001b8fa:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001b8fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001b902:	fb01 2404 	mla	r4, r1, r4, r2
9001b906:	6802      	ldr	r2, [r0, #0]
9001b908:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b90c:	f8de 2000 	ldr.w	r2, [lr]
9001b910:	9203      	str	r2, [sp, #12]
9001b912:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b916:	3204      	adds	r2, #4
9001b918:	9204      	str	r2, [sp, #16]
9001b91a:	9a02      	ldr	r2, [sp, #8]
9001b91c:	43d6      	mvns	r6, r2
9001b91e:	b2f6      	uxtb	r6, r6
9001b920:	9a01      	ldr	r2, [sp, #4]
9001b922:	2a00      	cmp	r2, #0
9001b924:	dc03      	bgt.n	9001b92e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001b926:	9a05      	ldr	r2, [sp, #20]
9001b928:	2a00      	cmp	r2, #0
9001b92a:	f340 8129 	ble.w	9001bb80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001b92e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b930:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b934:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b938:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b93a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b93e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b942:	2b00      	cmp	r3, #0
9001b944:	dd0e      	ble.n	9001b964 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b946:	1408      	asrs	r0, r1, #16
9001b948:	d405      	bmi.n	9001b956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b94a:	4560      	cmp	r0, ip
9001b94c:	da03      	bge.n	9001b956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b94e:	1410      	asrs	r0, r2, #16
9001b950:	d401      	bmi.n	9001b956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001b952:	42b8      	cmp	r0, r7
9001b954:	db07      	blt.n	9001b966 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001b956:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b958:	3b01      	subs	r3, #1
9001b95a:	3402      	adds	r4, #2
9001b95c:	4401      	add	r1, r0
9001b95e:	9814      	ldr	r0, [sp, #80]	; 0x50
9001b960:	4402      	add	r2, r0
9001b962:	e7ee      	b.n	9001b942 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001b964:	d071      	beq.n	9001ba4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001b966:	1e58      	subs	r0, r3, #1
9001b968:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001b96a:	fb05 1500 	mla	r5, r5, r0, r1
9001b96e:	142d      	asrs	r5, r5, #16
9001b970:	d45f      	bmi.n	9001ba32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b972:	4565      	cmp	r5, ip
9001b974:	da5d      	bge.n	9001ba32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b976:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001b978:	fb05 2000 	mla	r0, r5, r0, r2
9001b97c:	1400      	asrs	r0, r0, #16
9001b97e:	d458      	bmi.n	9001ba32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b980:	42b8      	cmp	r0, r7
9001b982:	da56      	bge.n	9001ba32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001b984:	4699      	mov	r9, r3
9001b986:	46a2      	mov	sl, r4
9001b988:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001b98c:	f1b9 0f00 	cmp.w	r9, #0
9001b990:	dd57      	ble.n	9001ba42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001b992:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001b996:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b99a:	9803      	ldr	r0, [sp, #12]
9001b99c:	140d      	asrs	r5, r1, #16
9001b99e:	f109 39ff 	add.w	r9, r9, #4294967295
9001b9a2:	fb07 000c 	mla	r0, r7, ip, r0
9001b9a6:	5d40      	ldrb	r0, [r0, r5]
9001b9a8:	9d04      	ldr	r5, [sp, #16]
9001b9aa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b9ae:	f8ba 5000 	ldrh.w	r5, [sl]
9001b9b2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b9b6:	122f      	asrs	r7, r5, #8
9001b9b8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b9bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b9c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b9c4:	00ed      	lsls	r5, r5, #3
9001b9c6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001b9ca:	fb17 f706 	smulbb	r7, r7, r6
9001b9ce:	b2ed      	uxtb	r5, r5
9001b9d0:	fb18 f806 	smulbb	r8, r8, r6
9001b9d4:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b9d8:	10c7      	asrs	r7, r0, #3
9001b9da:	fb15 f506 	smulbb	r5, r5, r6
9001b9de:	00c0      	lsls	r0, r0, #3
9001b9e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b9e4:	fa1f fc8c 	uxth.w	ip, ip
9001b9e8:	b2c0      	uxtb	r0, r0
9001b9ea:	fb07 870b 	mla	r7, r7, fp, r8
9001b9ee:	fb00 500b 	mla	r0, r0, fp, r5
9001b9f2:	f10c 0501 	add.w	r5, ip, #1
9001b9f6:	b2bf      	uxth	r7, r7
9001b9f8:	b280      	uxth	r0, r0
9001b9fa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b9fe:	f107 0801 	add.w	r8, r7, #1
9001ba02:	1c45      	adds	r5, r0, #1
9001ba04:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001ba08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ba0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ba10:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001ba12:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ba16:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ba1a:	4401      	add	r1, r0
9001ba1c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001ba20:	9814      	ldr	r0, [sp, #80]	; 0x50
9001ba22:	ea45 0c0c 	orr.w	ip, r5, ip
9001ba26:	4402      	add	r2, r0
9001ba28:	ea4c 0c08 	orr.w	ip, ip, r8
9001ba2c:	f82a cb02 	strh.w	ip, [sl], #2
9001ba30:	e7ac      	b.n	9001b98c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ba32:	f04f 0800 	mov.w	r8, #0
9001ba36:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001ba3a:	eb03 0008 	add.w	r0, r3, r8
9001ba3e:	2800      	cmp	r0, #0
9001ba40:	dc41      	bgt.n	9001bac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ba42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ba46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ba4a:	9b01      	ldr	r3, [sp, #4]
9001ba4c:	2b00      	cmp	r3, #0
9001ba4e:	f340 8097 	ble.w	9001bb80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001ba52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001ba56:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ba58:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ba5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ba60:	eef0 6a62 	vmov.f32	s13, s5
9001ba64:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ba68:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ba6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ba70:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001ba74:	eef0 6a43 	vmov.f32	s13, s6
9001ba78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ba7c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001ba80:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ba84:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ba88:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ba8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ba90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ba94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ba98:	ee12 2a90 	vmov	r2, s5
9001ba9c:	eef0 2a47 	vmov.f32	s5, s14
9001baa0:	fb92 f3f3 	sdiv	r3, r2, r3
9001baa4:	ee13 2a10 	vmov	r2, s6
9001baa8:	9313      	str	r3, [sp, #76]	; 0x4c
9001baaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001baac:	eeb0 3a67 	vmov.f32	s6, s15
9001bab0:	fb92 f3f3 	sdiv	r3, r2, r3
9001bab4:	9314      	str	r3, [sp, #80]	; 0x50
9001bab6:	9b01      	ldr	r3, [sp, #4]
9001bab8:	9a05      	ldr	r2, [sp, #20]
9001baba:	3b01      	subs	r3, #1
9001babc:	9301      	str	r3, [sp, #4]
9001babe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bac0:	bf08      	it	eq
9001bac2:	4613      	moveq	r3, r2
9001bac4:	e72c      	b.n	9001b920 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001bac6:	140f      	asrs	r7, r1, #16
9001bac8:	d453      	bmi.n	9001bb72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001baca:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bace:	42bd      	cmp	r5, r7
9001bad0:	dd4f      	ble.n	9001bb72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bad2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bad6:	d44c      	bmi.n	9001bb72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bad8:	f8de 000c 	ldr.w	r0, [lr, #12]
9001badc:	4560      	cmp	r0, ip
9001bade:	dd48      	ble.n	9001bb72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bae0:	9803      	ldr	r0, [sp, #12]
9001bae2:	b22d      	sxth	r5, r5
9001bae4:	fb0c 0505 	mla	r5, ip, r5, r0
9001bae8:	5de8      	ldrb	r0, [r5, r7]
9001baea:	9d04      	ldr	r5, [sp, #16]
9001baec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001baf0:	f06f 0501 	mvn.w	r5, #1
9001baf4:	fb05 fb08 	mul.w	fp, r5, r8
9001baf8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bafc:	f834 500b 	ldrh.w	r5, [r4, fp]
9001bb00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bb04:	122f      	asrs	r7, r5, #8
9001bb06:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001bb0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bb0e:	00ed      	lsls	r5, r5, #3
9001bb10:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001bb14:	fb17 f706 	smulbb	r7, r7, r6
9001bb18:	b2ed      	uxtb	r5, r5
9001bb1a:	fb19 f906 	smulbb	r9, r9, r6
9001bb1e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001bb22:	10c7      	asrs	r7, r0, #3
9001bb24:	fb15 f506 	smulbb	r5, r5, r6
9001bb28:	00c0      	lsls	r0, r0, #3
9001bb2a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bb2e:	fa1f fc8c 	uxth.w	ip, ip
9001bb32:	b2c0      	uxtb	r0, r0
9001bb34:	fb07 970a 	mla	r7, r7, sl, r9
9001bb38:	fb00 500a 	mla	r0, r0, sl, r5
9001bb3c:	f10c 0501 	add.w	r5, ip, #1
9001bb40:	b2bf      	uxth	r7, r7
9001bb42:	b280      	uxth	r0, r0
9001bb44:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bb48:	f107 0901 	add.w	r9, r7, #1
9001bb4c:	1c45      	adds	r5, r0, #1
9001bb4e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001bb52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bb56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bb5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bb5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bb62:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001bb66:	ea45 0c0c 	orr.w	ip, r5, ip
9001bb6a:	ea4c 0c09 	orr.w	ip, ip, r9
9001bb6e:	f824 c00b 	strh.w	ip, [r4, fp]
9001bb72:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bb74:	f108 38ff 	add.w	r8, r8, #4294967295
9001bb78:	4401      	add	r1, r0
9001bb7a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bb7c:	4402      	add	r2, r0
9001bb7e:	e75c      	b.n	9001ba3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001bb80:	b007      	add	sp, #28
9001bb82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bb86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb8a:	b085      	sub	sp, #20
9001bb8c:	4693      	mov	fp, r2
9001bb8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bb92:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001bb94:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001bb96:	6870      	ldr	r0, [r6, #4]
9001bb98:	9100      	str	r1, [sp, #0]
9001bb9a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001bb9e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001bba2:	fb00 2404 	mla	r4, r0, r4, r2
9001bba6:	6832      	ldr	r2, [r6, #0]
9001bba8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbac:	682a      	ldr	r2, [r5, #0]
9001bbae:	9201      	str	r2, [sp, #4]
9001bbb0:	686a      	ldr	r2, [r5, #4]
9001bbb2:	3204      	adds	r2, #4
9001bbb4:	9202      	str	r2, [sp, #8]
9001bbb6:	9a00      	ldr	r2, [sp, #0]
9001bbb8:	2a00      	cmp	r2, #0
9001bbba:	dc03      	bgt.n	9001bbc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001bbbc:	f1bb 0f00 	cmp.w	fp, #0
9001bbc0:	f340 80a0 	ble.w	9001bd04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001bbc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bbc6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bbca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bbce:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bbd0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001bbd4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bbd8:	2b00      	cmp	r3, #0
9001bbda:	dd0c      	ble.n	9001bbf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbdc:	1406      	asrs	r6, r0, #16
9001bbde:	d405      	bmi.n	9001bbec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bbe0:	454e      	cmp	r6, r9
9001bbe2:	da03      	bge.n	9001bbec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bbe4:	1416      	asrs	r6, r2, #16
9001bbe6:	d401      	bmi.n	9001bbec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bbe8:	4546      	cmp	r6, r8
9001bbea:	db05      	blt.n	9001bbf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bbec:	4470      	add	r0, lr
9001bbee:	4462      	add	r2, ip
9001bbf0:	3b01      	subs	r3, #1
9001bbf2:	3402      	adds	r4, #2
9001bbf4:	e7f0      	b.n	9001bbd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001bbf6:	d00f      	beq.n	9001bc18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001bbf8:	1e5e      	subs	r6, r3, #1
9001bbfa:	fb0e 0706 	mla	r7, lr, r6, r0
9001bbfe:	143f      	asrs	r7, r7, #16
9001bc00:	d541      	bpl.n	9001bc86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001bc02:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001bc06:	4698      	mov	r8, r3
9001bc08:	9603      	str	r6, [sp, #12]
9001bc0a:	f1b8 0f00 	cmp.w	r8, #0
9001bc0e:	dc59      	bgt.n	9001bcc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bc10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc18:	9b00      	ldr	r3, [sp, #0]
9001bc1a:	2b00      	cmp	r3, #0
9001bc1c:	dd72      	ble.n	9001bd04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001bc1e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bc24:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc28:	eeb0 6a62 	vmov.f32	s12, s5
9001bc2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc30:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc38:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001bc3c:	eeb0 6a43 	vmov.f32	s12, s6
9001bc40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc44:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001bc48:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc4c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc50:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc54:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bc58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bc5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bc60:	ee12 2a90 	vmov	r2, s5
9001bc64:	eef0 2a47 	vmov.f32	s5, s14
9001bc68:	fb92 fef3 	sdiv	lr, r2, r3
9001bc6c:	ee13 2a10 	vmov	r2, s6
9001bc70:	eeb0 3a67 	vmov.f32	s6, s15
9001bc74:	fb92 fcf3 	sdiv	ip, r2, r3
9001bc78:	9b00      	ldr	r3, [sp, #0]
9001bc7a:	3b01      	subs	r3, #1
9001bc7c:	9300      	str	r3, [sp, #0]
9001bc7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bc80:	bf08      	it	eq
9001bc82:	465b      	moveq	r3, fp
9001bc84:	e797      	b.n	9001bbb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bc86:	454f      	cmp	r7, r9
9001bc88:	dabb      	bge.n	9001bc02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bc8a:	fb0c 2606 	mla	r6, ip, r6, r2
9001bc8e:	1436      	asrs	r6, r6, #16
9001bc90:	d4b7      	bmi.n	9001bc02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bc92:	4546      	cmp	r6, r8
9001bc94:	dab5      	bge.n	9001bc02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bc96:	461e      	mov	r6, r3
9001bc98:	46a0      	mov	r8, r4
9001bc9a:	2e00      	cmp	r6, #0
9001bc9c:	ddb8      	ble.n	9001bc10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001bc9e:	1417      	asrs	r7, r2, #16
9001bca0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001bca4:	9901      	ldr	r1, [sp, #4]
9001bca6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001bcaa:	4462      	add	r2, ip
9001bcac:	4470      	add	r0, lr
9001bcae:	fb0a 1707 	mla	r7, sl, r7, r1
9001bcb2:	9902      	ldr	r1, [sp, #8]
9001bcb4:	3e01      	subs	r6, #1
9001bcb6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001bcba:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001bcbe:	f828 7b02 	strh.w	r7, [r8], #2
9001bcc2:	e7ea      	b.n	9001bc9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001bcc4:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bcc8:	d417      	bmi.n	9001bcfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bcca:	68ae      	ldr	r6, [r5, #8]
9001bccc:	454e      	cmp	r6, r9
9001bcce:	dd14      	ble.n	9001bcfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bcd0:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001bcd4:	d411      	bmi.n	9001bcfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bcd6:	68ef      	ldr	r7, [r5, #12]
9001bcd8:	4557      	cmp	r7, sl
9001bcda:	dd0e      	ble.n	9001bcfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bcdc:	9f01      	ldr	r7, [sp, #4]
9001bcde:	b236      	sxth	r6, r6
9001bce0:	f06f 0101 	mvn.w	r1, #1
9001bce4:	fb0a 7606 	mla	r6, sl, r6, r7
9001bce8:	9f02      	ldr	r7, [sp, #8]
9001bcea:	f816 6009 	ldrb.w	r6, [r6, r9]
9001bcee:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001bcf2:	fb01 f608 	mul.w	r6, r1, r8
9001bcf6:	9903      	ldr	r1, [sp, #12]
9001bcf8:	538f      	strh	r7, [r1, r6]
9001bcfa:	4470      	add	r0, lr
9001bcfc:	4462      	add	r2, ip
9001bcfe:	f108 38ff 	add.w	r8, r8, #4294967295
9001bd02:	e782      	b.n	9001bc0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bd04:	b005      	add	sp, #20
9001bd06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bd0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bd0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bd0e:	b087      	sub	sp, #28
9001bd10:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001bd12:	9205      	str	r2, [sp, #20]
9001bd14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001bd18:	9102      	str	r1, [sp, #8]
9001bd1a:	9203      	str	r2, [sp, #12]
9001bd1c:	6861      	ldr	r1, [r4, #4]
9001bd1e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001bd22:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001bd26:	fb01 2000 	mla	r0, r1, r0, r2
9001bd2a:	6822      	ldr	r2, [r4, #0]
9001bd2c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001bd30:	9200      	str	r2, [sp, #0]
9001bd32:	f8dc 2000 	ldr.w	r2, [ip]
9001bd36:	9204      	str	r2, [sp, #16]
9001bd38:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001bd3c:	3204      	adds	r2, #4
9001bd3e:	9201      	str	r2, [sp, #4]
9001bd40:	9a03      	ldr	r2, [sp, #12]
9001bd42:	43d5      	mvns	r5, r2
9001bd44:	b2ed      	uxtb	r5, r5
9001bd46:	9a02      	ldr	r2, [sp, #8]
9001bd48:	2a00      	cmp	r2, #0
9001bd4a:	dc03      	bgt.n	9001bd54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001bd4c:	9a05      	ldr	r2, [sp, #20]
9001bd4e:	2a00      	cmp	r2, #0
9001bd50:	f340 812c 	ble.w	9001bfac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001bd54:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bd56:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001bd5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bd5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bd60:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001bd64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bd68:	2b00      	cmp	r3, #0
9001bd6a:	dd10      	ble.n	9001bd8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001bd6c:	140c      	asrs	r4, r1, #16
9001bd6e:	d405      	bmi.n	9001bd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bd70:	4574      	cmp	r4, lr
9001bd72:	da03      	bge.n	9001bd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bd74:	1414      	asrs	r4, r2, #16
9001bd76:	d401      	bmi.n	9001bd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bd78:	42bc      	cmp	r4, r7
9001bd7a:	db09      	blt.n	9001bd90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001bd7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001bd7e:	3b01      	subs	r3, #1
9001bd80:	9800      	ldr	r0, [sp, #0]
9001bd82:	4421      	add	r1, r4
9001bd84:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001bd86:	3002      	adds	r0, #2
9001bd88:	4422      	add	r2, r4
9001bd8a:	9000      	str	r0, [sp, #0]
9001bd8c:	e7ec      	b.n	9001bd68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001bd8e:	d071      	beq.n	9001be74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001bd90:	1e5c      	subs	r4, r3, #1
9001bd92:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001bd94:	fb06 1604 	mla	r6, r6, r4, r1
9001bd98:	1436      	asrs	r6, r6, #16
9001bd9a:	d45d      	bmi.n	9001be58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bd9c:	4576      	cmp	r6, lr
9001bd9e:	da5b      	bge.n	9001be58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bda0:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001bda2:	fb06 2404 	mla	r4, r6, r4, r2
9001bda6:	1424      	asrs	r4, r4, #16
9001bda8:	d456      	bmi.n	9001be58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bdaa:	42bc      	cmp	r4, r7
9001bdac:	da54      	bge.n	9001be58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bdae:	4698      	mov	r8, r3
9001bdb0:	f8dd 9000 	ldr.w	r9, [sp]
9001bdb4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001bdb8:	f1b8 0f00 	cmp.w	r8, #0
9001bdbc:	dd54      	ble.n	9001be68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001bdbe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001bdc2:	1414      	asrs	r4, r2, #16
9001bdc4:	9804      	ldr	r0, [sp, #16]
9001bdc6:	140e      	asrs	r6, r1, #16
9001bdc8:	f108 38ff 	add.w	r8, r8, #4294967295
9001bdcc:	fb07 0404 	mla	r4, r7, r4, r0
9001bdd0:	9801      	ldr	r0, [sp, #4]
9001bdd2:	f814 e006 	ldrb.w	lr, [r4, r6]
9001bdd6:	f8b9 4000 	ldrh.w	r4, [r9]
9001bdda:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001bdde:	1227      	asrs	r7, r4, #8
9001bde0:	eb00 0b0e 	add.w	fp, r0, lr
9001bde4:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001bde8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bdec:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bdee:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001bdf2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001bdf6:	4401      	add	r1, r0
9001bdf8:	fb16 f60a 	smulbb	r6, r6, sl
9001bdfc:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bdfe:	fb1b fb0a 	smulbb	fp, fp, sl
9001be02:	fb07 6705 	mla	r7, r7, r5, r6
9001be06:	10e6      	asrs	r6, r4, #3
9001be08:	00e4      	lsls	r4, r4, #3
9001be0a:	4402      	add	r2, r0
9001be0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001be10:	b2bf      	uxth	r7, r7
9001be12:	b2e4      	uxtb	r4, r4
9001be14:	fb06 b605 	mla	r6, r6, r5, fp
9001be18:	fb14 f405 	smulbb	r4, r4, r5
9001be1c:	b2b6      	uxth	r6, r6
9001be1e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001be22:	1c7c      	adds	r4, r7, #1
9001be24:	f106 0b01 	add.w	fp, r6, #1
9001be28:	fa1f fe8e 	uxth.w	lr, lr
9001be2c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001be30:	f10e 0401 	add.w	r4, lr, #1
9001be34:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001be38:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001be3c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001be40:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001be44:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001be48:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001be4c:	4327      	orrs	r7, r4
9001be4e:	ea47 070b 	orr.w	r7, r7, fp
9001be52:	f829 7b02 	strh.w	r7, [r9], #2
9001be56:	e7af      	b.n	9001bdb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001be58:	f04f 0e00 	mov.w	lr, #0
9001be5c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001be60:	eb03 040e 	add.w	r4, r3, lr
9001be64:	2c00      	cmp	r4, #0
9001be66:	dc43      	bgt.n	9001bef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001be68:	9a00      	ldr	r2, [sp, #0]
9001be6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001be6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001be72:	9300      	str	r3, [sp, #0]
9001be74:	9b02      	ldr	r3, [sp, #8]
9001be76:	2b00      	cmp	r3, #0
9001be78:	f340 8098 	ble.w	9001bfac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001be7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001be80:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001be82:	ee30 0a04 	vadd.f32	s0, s0, s8
9001be86:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001be8a:	eef0 6a62 	vmov.f32	s13, s5
9001be8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001be92:	ee31 1a05 	vadd.f32	s2, s2, s10
9001be96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001be9a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001be9e:	eef0 6a43 	vmov.f32	s13, s6
9001bea2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bea6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001beaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001beae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001beb2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001beb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001beba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bebe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bec2:	ee12 2a90 	vmov	r2, s5
9001bec6:	eef0 2a47 	vmov.f32	s5, s14
9001beca:	fb92 f3f3 	sdiv	r3, r2, r3
9001bece:	ee13 2a10 	vmov	r2, s6
9001bed2:	9313      	str	r3, [sp, #76]	; 0x4c
9001bed4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bed6:	eeb0 3a67 	vmov.f32	s6, s15
9001beda:	fb92 f3f3 	sdiv	r3, r2, r3
9001bede:	9314      	str	r3, [sp, #80]	; 0x50
9001bee0:	9b02      	ldr	r3, [sp, #8]
9001bee2:	9a05      	ldr	r2, [sp, #20]
9001bee4:	3b01      	subs	r3, #1
9001bee6:	9302      	str	r3, [sp, #8]
9001bee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001beea:	bf08      	it	eq
9001beec:	4613      	moveq	r3, r2
9001beee:	e72a      	b.n	9001bd46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bef0:	140f      	asrs	r7, r1, #16
9001bef2:	d454      	bmi.n	9001bf9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bef4:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001bef8:	42be      	cmp	r6, r7
9001befa:	dd50      	ble.n	9001bf9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001befc:	ea5f 4822 	movs.w	r8, r2, asr #16
9001bf00:	d44d      	bmi.n	9001bf9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bf02:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001bf06:	4544      	cmp	r4, r8
9001bf08:	dd49      	ble.n	9001bf9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bf0a:	9c04      	ldr	r4, [sp, #16]
9001bf0c:	b236      	sxth	r6, r6
9001bf0e:	f06f 0001 	mvn.w	r0, #1
9001bf12:	fb08 4606 	mla	r6, r8, r6, r4
9001bf16:	9c01      	ldr	r4, [sp, #4]
9001bf18:	fb00 fa0e 	mul.w	sl, r0, lr
9001bf1c:	9800      	ldr	r0, [sp, #0]
9001bf1e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001bf22:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001bf26:	eb04 0b08 	add.w	fp, r4, r8
9001bf2a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001bf2e:	9801      	ldr	r0, [sp, #4]
9001bf30:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001bf34:	1227      	asrs	r7, r4, #8
9001bf36:	f89b b001 	ldrb.w	fp, [fp, #1]
9001bf3a:	fb16 f609 	smulbb	r6, r6, r9
9001bf3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bf42:	f810 8008 	ldrb.w	r8, [r0, r8]
9001bf46:	fb1b fb09 	smulbb	fp, fp, r9
9001bf4a:	fb07 6705 	mla	r7, r7, r5, r6
9001bf4e:	10e6      	asrs	r6, r4, #3
9001bf50:	00e4      	lsls	r4, r4, #3
9001bf52:	9800      	ldr	r0, [sp, #0]
9001bf54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001bf58:	b2bf      	uxth	r7, r7
9001bf5a:	b2e4      	uxtb	r4, r4
9001bf5c:	fb06 b605 	mla	r6, r6, r5, fp
9001bf60:	fb14 f405 	smulbb	r4, r4, r5
9001bf64:	b2b6      	uxth	r6, r6
9001bf66:	fb08 4809 	mla	r8, r8, r9, r4
9001bf6a:	1c7c      	adds	r4, r7, #1
9001bf6c:	f106 0b01 	add.w	fp, r6, #1
9001bf70:	fa1f f888 	uxth.w	r8, r8
9001bf74:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001bf78:	f108 0401 	add.w	r4, r8, #1
9001bf7c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001bf80:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bf84:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001bf88:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001bf8c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001bf90:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001bf94:	4327      	orrs	r7, r4
9001bf96:	ea47 070b 	orr.w	r7, r7, fp
9001bf9a:	f820 700a 	strh.w	r7, [r0, sl]
9001bf9e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bfa0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001bfa4:	4401      	add	r1, r0
9001bfa6:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bfa8:	4402      	add	r2, r0
9001bfaa:	e759      	b.n	9001be60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001bfac:	b007      	add	sp, #28
9001bfae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001bfb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bfb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bfb8:	b085      	sub	sp, #20
9001bfba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bfbe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001bfc0:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001bfc2:	9203      	str	r2, [sp, #12]
9001bfc4:	6870      	ldr	r0, [r6, #4]
9001bfc6:	686f      	ldr	r7, [r5, #4]
9001bfc8:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001bfcc:	3704      	adds	r7, #4
9001bfce:	9101      	str	r1, [sp, #4]
9001bfd0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001bfd4:	fb00 2404 	mla	r4, r0, r4, r2
9001bfd8:	6832      	ldr	r2, [r6, #0]
9001bfda:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bfde:	682a      	ldr	r2, [r5, #0]
9001bfe0:	9202      	str	r2, [sp, #8]
9001bfe2:	9a01      	ldr	r2, [sp, #4]
9001bfe4:	2a00      	cmp	r2, #0
9001bfe6:	dc03      	bgt.n	9001bff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bfe8:	9a03      	ldr	r2, [sp, #12]
9001bfea:	2a00      	cmp	r2, #0
9001bfec:	f340 80cc 	ble.w	9001c188 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001bff0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bff2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bff6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bffa:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bffc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c000:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c004:	2b00      	cmp	r3, #0
9001c006:	dd0d      	ble.n	9001c024 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c008:	1406      	asrs	r6, r0, #16
9001c00a:	d405      	bmi.n	9001c018 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c00c:	454e      	cmp	r6, r9
9001c00e:	da03      	bge.n	9001c018 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c010:	1416      	asrs	r6, r2, #16
9001c012:	d401      	bmi.n	9001c018 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c014:	4546      	cmp	r6, r8
9001c016:	db06      	blt.n	9001c026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c018:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001c01a:	4460      	add	r0, ip
9001c01c:	3b01      	subs	r3, #1
9001c01e:	3402      	adds	r4, #2
9001c020:	4432      	add	r2, r6
9001c022:	e7ef      	b.n	9001c004 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c024:	d00f      	beq.n	9001c046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c026:	1e5e      	subs	r6, r3, #1
9001c028:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c02c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c030:	d543      	bpl.n	9001c0ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c032:	4698      	mov	r8, r3
9001c034:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c038:	f1b8 0f00 	cmp.w	r8, #0
9001c03c:	dc71      	bgt.n	9001c122 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c03e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c042:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c046:	9b01      	ldr	r3, [sp, #4]
9001c048:	2b00      	cmp	r3, #0
9001c04a:	f340 809d 	ble.w	9001c188 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c04e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c052:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c054:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c058:	eeb0 6a62 	vmov.f32	s12, s5
9001c05c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c060:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c064:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c068:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c06c:	eeb0 6a43 	vmov.f32	s12, s6
9001c070:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c074:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c078:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c07c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c080:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c084:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c088:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c08c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c090:	ee12 2a90 	vmov	r2, s5
9001c094:	eef0 2a47 	vmov.f32	s5, s14
9001c098:	fb92 fcf3 	sdiv	ip, r2, r3
9001c09c:	ee13 2a10 	vmov	r2, s6
9001c0a0:	eeb0 3a67 	vmov.f32	s6, s15
9001c0a4:	fb92 f3f3 	sdiv	r3, r2, r3
9001c0a8:	9312      	str	r3, [sp, #72]	; 0x48
9001c0aa:	9b01      	ldr	r3, [sp, #4]
9001c0ac:	9a03      	ldr	r2, [sp, #12]
9001c0ae:	3b01      	subs	r3, #1
9001c0b0:	9301      	str	r3, [sp, #4]
9001c0b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c0b4:	bf08      	it	eq
9001c0b6:	4613      	moveq	r3, r2
9001c0b8:	e793      	b.n	9001bfe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001c0ba:	45ce      	cmp	lr, r9
9001c0bc:	dab9      	bge.n	9001c032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c0be:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c0c0:	fb01 2606 	mla	r6, r1, r6, r2
9001c0c4:	1436      	asrs	r6, r6, #16
9001c0c6:	d4b4      	bmi.n	9001c032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c0c8:	4546      	cmp	r6, r8
9001c0ca:	dab2      	bge.n	9001c032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c0cc:	4698      	mov	r8, r3
9001c0ce:	46a2      	mov	sl, r4
9001c0d0:	f1b8 0f00 	cmp.w	r8, #0
9001c0d4:	ddb3      	ble.n	9001c03e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c0d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c0da:	1416      	asrs	r6, r2, #16
9001c0dc:	9902      	ldr	r1, [sp, #8]
9001c0de:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001c0e2:	f108 38ff 	add.w	r8, r8, #4294967295
9001c0e6:	4460      	add	r0, ip
9001c0e8:	fb09 1606 	mla	r6, r9, r6, r1
9001c0ec:	4928      	ldr	r1, [pc, #160]	; (9001c190 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001c0ee:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001c0f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c0f6:	eb07 0b0e 	add.w	fp, r7, lr
9001c0fa:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001c0fe:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001c102:	00f6      	lsls	r6, r6, #3
9001c104:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001c108:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c10a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c10e:	440a      	add	r2, r1
9001c110:	ea49 0606 	orr.w	r6, r9, r6
9001c114:	f817 900e 	ldrb.w	r9, [r7, lr]
9001c118:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001c11c:	f82a 6b02 	strh.w	r6, [sl], #2
9001c120:	e7d6      	b.n	9001c0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c122:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c126:	d429      	bmi.n	9001c17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c128:	68ae      	ldr	r6, [r5, #8]
9001c12a:	454e      	cmp	r6, r9
9001c12c:	dd26      	ble.n	9001c17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c12e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001c132:	d423      	bmi.n	9001c17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c134:	68e9      	ldr	r1, [r5, #12]
9001c136:	4559      	cmp	r1, fp
9001c138:	dd20      	ble.n	9001c17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c13a:	fa0f fe86 	sxth.w	lr, r6
9001c13e:	9902      	ldr	r1, [sp, #8]
9001c140:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001c144:	f06f 0101 	mvn.w	r1, #1
9001c148:	f81e e009 	ldrb.w	lr, [lr, r9]
9001c14c:	fb01 f908 	mul.w	r9, r1, r8
9001c150:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001c154:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c158:	eb07 060e 	add.w	r6, r7, lr
9001c15c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001c160:	7876      	ldrb	r6, [r6, #1]
9001c162:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001c166:	00f6      	lsls	r6, r6, #3
9001c168:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c16c:	ea4b 0606 	orr.w	r6, fp, r6
9001c170:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001c174:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001c178:	f82a 6009 	strh.w	r6, [sl, r9]
9001c17c:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c17e:	4460      	add	r0, ip
9001c180:	f108 38ff 	add.w	r8, r8, #4294967295
9001c184:	440a      	add	r2, r1
9001c186:	e757      	b.n	9001c038 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c188:	b005      	add	sp, #20
9001c18a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c18e:	bf00      	nop
9001c190:	fffff800 	.word	0xfffff800

9001c194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c198:	b087      	sub	sp, #28
9001c19a:	468b      	mov	fp, r1
9001c19c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c1a0:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c1a2:	9204      	str	r2, [sp, #16]
9001c1a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c1a8:	6841      	ldr	r1, [r0, #4]
9001c1aa:	9205      	str	r2, [sp, #20]
9001c1ac:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001c1b0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c1b4:	fb01 2404 	mla	r4, r1, r4, r2
9001c1b8:	6802      	ldr	r2, [r0, #0]
9001c1ba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c1be:	f8dc 2000 	ldr.w	r2, [ip]
9001c1c2:	9201      	str	r2, [sp, #4]
9001c1c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c1c8:	3204      	adds	r2, #4
9001c1ca:	9202      	str	r2, [sp, #8]
9001c1cc:	f1bb 0f00 	cmp.w	fp, #0
9001c1d0:	dc03      	bgt.n	9001c1da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001c1d2:	9a04      	ldr	r2, [sp, #16]
9001c1d4:	2a00      	cmp	r2, #0
9001c1d6:	f340 8138 	ble.w	9001c44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c1da:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c1dc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c1e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c1e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c1e6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001c1ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c1ee:	2b00      	cmp	r3, #0
9001c1f0:	dd0e      	ble.n	9001c210 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c1f2:	1402      	asrs	r2, r0, #16
9001c1f4:	d405      	bmi.n	9001c202 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c1f6:	42ba      	cmp	r2, r7
9001c1f8:	da03      	bge.n	9001c202 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c1fa:	140a      	asrs	r2, r1, #16
9001c1fc:	d401      	bmi.n	9001c202 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c1fe:	42b2      	cmp	r2, r6
9001c200:	db07      	blt.n	9001c212 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c202:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c204:	3b01      	subs	r3, #1
9001c206:	3402      	adds	r4, #2
9001c208:	4410      	add	r0, r2
9001c20a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c20c:	4411      	add	r1, r2
9001c20e:	e7ee      	b.n	9001c1ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001c210:	d019      	beq.n	9001c246 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c212:	1e5a      	subs	r2, r3, #1
9001c214:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c216:	fb05 0502 	mla	r5, r5, r2, r0
9001c21a:	142d      	asrs	r5, r5, #16
9001c21c:	d409      	bmi.n	9001c232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c21e:	42bd      	cmp	r5, r7
9001c220:	da07      	bge.n	9001c232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c222:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c224:	fb05 1202 	mla	r2, r5, r2, r1
9001c228:	1412      	asrs	r2, r2, #16
9001c22a:	d402      	bmi.n	9001c232 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c22c:	42b2      	cmp	r2, r6
9001c22e:	f2c0 80ac 	blt.w	9001c38a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001c232:	f04f 0e00 	mov.w	lr, #0
9001c236:	eb03 020e 	add.w	r2, r3, lr
9001c23a:	2a00      	cmp	r2, #0
9001c23c:	dc3e      	bgt.n	9001c2bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c23e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c242:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c246:	f1bb 0f00 	cmp.w	fp, #0
9001c24a:	f340 80fe 	ble.w	9001c44a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c24e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c252:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c254:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c258:	f1bb 0b01 	subs.w	fp, fp, #1
9001c25c:	eeb0 6a62 	vmov.f32	s12, s5
9001c260:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c264:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c268:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c26c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c270:	eeb0 6a43 	vmov.f32	s12, s6
9001c274:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c278:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c27c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c280:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c284:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c288:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c28c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c290:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c294:	ee12 2a90 	vmov	r2, s5
9001c298:	eef0 2a47 	vmov.f32	s5, s14
9001c29c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c2a0:	ee13 2a10 	vmov	r2, s6
9001c2a4:	9313      	str	r3, [sp, #76]	; 0x4c
9001c2a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c2a8:	eeb0 3a67 	vmov.f32	s6, s15
9001c2ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001c2b0:	9a04      	ldr	r2, [sp, #16]
9001c2b2:	9314      	str	r3, [sp, #80]	; 0x50
9001c2b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c2b6:	bf08      	it	eq
9001c2b8:	4613      	moveq	r3, r2
9001c2ba:	e787      	b.n	9001c1cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c2bc:	1406      	asrs	r6, r0, #16
9001c2be:	d45d      	bmi.n	9001c37c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c2c0:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001c2c4:	42b5      	cmp	r5, r6
9001c2c6:	dd59      	ble.n	9001c37c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c2c8:	140f      	asrs	r7, r1, #16
9001c2ca:	d457      	bmi.n	9001c37c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c2cc:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001c2d0:	42ba      	cmp	r2, r7
9001c2d2:	dd53      	ble.n	9001c37c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c2d4:	9a01      	ldr	r2, [sp, #4]
9001c2d6:	b22d      	sxth	r5, r5
9001c2d8:	fb07 2505 	mla	r5, r7, r5, r2
9001c2dc:	5daa      	ldrb	r2, [r5, r6]
9001c2de:	9d02      	ldr	r5, [sp, #8]
9001c2e0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c2e4:	0e2e      	lsrs	r6, r5, #24
9001c2e6:	d049      	beq.n	9001c37c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c2e8:	f06f 0201 	mvn.w	r2, #1
9001c2ec:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c2f0:	fb02 f20e 	mul.w	r2, r2, lr
9001c2f4:	f834 8002 	ldrh.w	r8, [r4, r2]
9001c2f8:	9203      	str	r2, [sp, #12]
9001c2fa:	9a05      	ldr	r2, [sp, #20]
9001c2fc:	ea4f 2728 	mov.w	r7, r8, asr #8
9001c300:	4356      	muls	r6, r2
9001c302:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c306:	1c72      	adds	r2, r6, #1
9001c308:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c30c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c310:	b2ed      	uxtb	r5, r5
9001c312:	1212      	asrs	r2, r2, #8
9001c314:	fa1f f982 	uxth.w	r9, r2
9001c318:	43d2      	mvns	r2, r2
9001c31a:	fb16 f609 	smulbb	r6, r6, r9
9001c31e:	b2d2      	uxtb	r2, r2
9001c320:	fb15 f509 	smulbb	r5, r5, r9
9001c324:	fb07 6702 	mla	r7, r7, r2, r6
9001c328:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c32c:	fb1a fa09 	smulbb	sl, sl, r9
9001c330:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c334:	b2bf      	uxth	r7, r7
9001c336:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c33a:	fa5f f888 	uxtb.w	r8, r8
9001c33e:	fb06 a602 	mla	r6, r6, r2, sl
9001c342:	fb08 5502 	mla	r5, r8, r2, r5
9001c346:	1c7a      	adds	r2, r7, #1
9001c348:	b2b6      	uxth	r6, r6
9001c34a:	b2ad      	uxth	r5, r5
9001c34c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c350:	9a03      	ldr	r2, [sp, #12]
9001c352:	f105 0a01 	add.w	sl, r5, #1
9001c356:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c35a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c35e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c362:	ea4a 0707 	orr.w	r7, sl, r7
9001c366:	f106 0a01 	add.w	sl, r6, #1
9001c36a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c36e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c372:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c376:	ea47 070a 	orr.w	r7, r7, sl
9001c37a:	52a7      	strh	r7, [r4, r2]
9001c37c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c37e:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c382:	4410      	add	r0, r2
9001c384:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c386:	4411      	add	r1, r2
9001c388:	e755      	b.n	9001c236 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c38a:	f04f 0800 	mov.w	r8, #0
9001c38e:	eba3 0208 	sub.w	r2, r3, r8
9001c392:	2a00      	cmp	r2, #0
9001c394:	f77f af53 	ble.w	9001c23e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c398:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001c39c:	140a      	asrs	r2, r1, #16
9001c39e:	9f01      	ldr	r7, [sp, #4]
9001c3a0:	1405      	asrs	r5, r0, #16
9001c3a2:	fb06 7202 	mla	r2, r6, r2, r7
9001c3a6:	5d52      	ldrb	r2, [r2, r5]
9001c3a8:	9d02      	ldr	r5, [sp, #8]
9001c3aa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c3ae:	0e2e      	lsrs	r6, r5, #24
9001c3b0:	d044      	beq.n	9001c43c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001c3b2:	9a05      	ldr	r2, [sp, #20]
9001c3b4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c3b8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c3bc:	4356      	muls	r6, r2
9001c3be:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c3c2:	1c72      	adds	r2, r6, #1
9001c3c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c3c8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c3cc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c3d0:	b2ed      	uxtb	r5, r5
9001c3d2:	1212      	asrs	r2, r2, #8
9001c3d4:	fa1f f982 	uxth.w	r9, r2
9001c3d8:	43d2      	mvns	r2, r2
9001c3da:	fb16 f609 	smulbb	r6, r6, r9
9001c3de:	b2d2      	uxtb	r2, r2
9001c3e0:	fb15 f509 	smulbb	r5, r5, r9
9001c3e4:	fb07 6702 	mla	r7, r7, r2, r6
9001c3e8:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c3ec:	fb1a fa09 	smulbb	sl, sl, r9
9001c3f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c3f4:	b2bf      	uxth	r7, r7
9001c3f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c3fa:	fa5f fe8e 	uxtb.w	lr, lr
9001c3fe:	fb06 a602 	mla	r6, r6, r2, sl
9001c402:	fb0e 5502 	mla	r5, lr, r2, r5
9001c406:	1c7a      	adds	r2, r7, #1
9001c408:	b2b6      	uxth	r6, r6
9001c40a:	b2ad      	uxth	r5, r5
9001c40c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c410:	f105 0a01 	add.w	sl, r5, #1
9001c414:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c418:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c41c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c420:	ea4a 0707 	orr.w	r7, sl, r7
9001c424:	f106 0a01 	add.w	sl, r6, #1
9001c428:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c42c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c430:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c434:	ea47 070a 	orr.w	r7, r7, sl
9001c438:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c43c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c43e:	f108 0801 	add.w	r8, r8, #1
9001c442:	4410      	add	r0, r2
9001c444:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c446:	4411      	add	r1, r2
9001c448:	e7a1      	b.n	9001c38e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001c44a:	b007      	add	sp, #28
9001c44c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c450 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c454:	b085      	sub	sp, #20
9001c456:	468b      	mov	fp, r1
9001c458:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c45c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c45e:	9203      	str	r2, [sp, #12]
9001c460:	6841      	ldr	r1, [r0, #4]
9001c462:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001c466:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c46a:	fb01 2404 	mla	r4, r1, r4, r2
9001c46e:	6802      	ldr	r2, [r0, #0]
9001c470:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c474:	f8de 2000 	ldr.w	r2, [lr]
9001c478:	9200      	str	r2, [sp, #0]
9001c47a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c47e:	3204      	adds	r2, #4
9001c480:	9201      	str	r2, [sp, #4]
9001c482:	f1bb 0f00 	cmp.w	fp, #0
9001c486:	dc03      	bgt.n	9001c490 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c488:	9a03      	ldr	r2, [sp, #12]
9001c48a:	2a00      	cmp	r2, #0
9001c48c:	f340 8153 	ble.w	9001c736 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c490:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c492:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c496:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c49a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c49c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c4a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c4a4:	2b00      	cmp	r3, #0
9001c4a6:	dd0e      	ble.n	9001c4c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c4a8:	1408      	asrs	r0, r1, #16
9001c4aa:	d405      	bmi.n	9001c4b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c4ac:	42b8      	cmp	r0, r7
9001c4ae:	da03      	bge.n	9001c4b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c4b0:	1410      	asrs	r0, r2, #16
9001c4b2:	d401      	bmi.n	9001c4b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c4b4:	42b0      	cmp	r0, r6
9001c4b6:	db07      	blt.n	9001c4c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c4b8:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c4ba:	3b01      	subs	r3, #1
9001c4bc:	3402      	adds	r4, #2
9001c4be:	4401      	add	r1, r0
9001c4c0:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c4c2:	4402      	add	r2, r0
9001c4c4:	e7ee      	b.n	9001c4a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c4c6:	d017      	beq.n	9001c4f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c4c8:	1e58      	subs	r0, r3, #1
9001c4ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001c4cc:	fb05 1500 	mla	r5, r5, r0, r1
9001c4d0:	142d      	asrs	r5, r5, #16
9001c4d2:	d409      	bmi.n	9001c4e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c4d4:	42bd      	cmp	r5, r7
9001c4d6:	da07      	bge.n	9001c4e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c4d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001c4da:	fb05 2000 	mla	r0, r5, r0, r2
9001c4de:	1400      	asrs	r0, r0, #16
9001c4e0:	d402      	bmi.n	9001c4e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c4e2:	42b0      	cmp	r0, r6
9001c4e4:	f2c0 80bc 	blt.w	9001c660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001c4e8:	2600      	movs	r6, #0
9001c4ea:	1998      	adds	r0, r3, r6
9001c4ec:	2800      	cmp	r0, #0
9001c4ee:	dc3e      	bgt.n	9001c56e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001c4f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c4f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c4f8:	f1bb 0f00 	cmp.w	fp, #0
9001c4fc:	f340 811b 	ble.w	9001c736 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c500:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c504:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c506:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c50a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c50e:	eeb0 6a62 	vmov.f32	s12, s5
9001c512:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c516:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c51a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c51e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c522:	eeb0 6a43 	vmov.f32	s12, s6
9001c526:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c52a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c52e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c532:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c536:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c53a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c53e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c542:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c546:	ee12 2a90 	vmov	r2, s5
9001c54a:	eef0 2a47 	vmov.f32	s5, s14
9001c54e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c552:	ee13 2a10 	vmov	r2, s6
9001c556:	9311      	str	r3, [sp, #68]	; 0x44
9001c558:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c55a:	eeb0 3a67 	vmov.f32	s6, s15
9001c55e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c562:	9a03      	ldr	r2, [sp, #12]
9001c564:	9312      	str	r3, [sp, #72]	; 0x48
9001c566:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c568:	bf08      	it	eq
9001c56a:	4613      	moveq	r3, r2
9001c56c:	e789      	b.n	9001c482 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c56e:	140f      	asrs	r7, r1, #16
9001c570:	d426      	bmi.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c572:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c576:	42bd      	cmp	r5, r7
9001c578:	dd22      	ble.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c57a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c57e:	d41f      	bmi.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c580:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c584:	4560      	cmp	r0, ip
9001c586:	dd1b      	ble.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c588:	9800      	ldr	r0, [sp, #0]
9001c58a:	b22d      	sxth	r5, r5
9001c58c:	fb0c 0505 	mla	r5, ip, r5, r0
9001c590:	5de8      	ldrb	r0, [r5, r7]
9001c592:	9d01      	ldr	r5, [sp, #4]
9001c594:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001c598:	0e07      	lsrs	r7, r0, #24
9001c59a:	2fff      	cmp	r7, #255	; 0xff
9001c59c:	d116      	bne.n	9001c5cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c59e:	f06f 0501 	mvn.w	r5, #1
9001c5a2:	fb05 f706 	mul.w	r7, r5, r6
9001c5a6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001c5aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c5ae:	0945      	lsrs	r5, r0, #5
9001c5b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c5b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c5b8:	ea4c 0505 	orr.w	r5, ip, r5
9001c5bc:	4305      	orrs	r5, r0
9001c5be:	53e5      	strh	r5, [r4, r7]
9001c5c0:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c5c2:	3e01      	subs	r6, #1
9001c5c4:	4401      	add	r1, r0
9001c5c6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c5c8:	4402      	add	r2, r0
9001c5ca:	e78e      	b.n	9001c4ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c5cc:	b2fd      	uxtb	r5, r7
9001c5ce:	2f00      	cmp	r7, #0
9001c5d0:	d0f6      	beq.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c5d2:	f06f 0701 	mvn.w	r7, #1
9001c5d6:	fa1f f985 	uxth.w	r9, r5
9001c5da:	43ed      	mvns	r5, r5
9001c5dc:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c5e0:	4377      	muls	r7, r6
9001c5e2:	fb1a fa09 	smulbb	sl, sl, r9
9001c5e6:	b2ed      	uxtb	r5, r5
9001c5e8:	f834 8007 	ldrh.w	r8, [r4, r7]
9001c5ec:	9702      	str	r7, [sp, #8]
9001c5ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c5f2:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c5f6:	fb17 f709 	smulbb	r7, r7, r9
9001c5fa:	b2c0      	uxtb	r0, r0
9001c5fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c600:	fb10 f009 	smulbb	r0, r0, r9
9001c604:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c608:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001c60c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c610:	fa1f fc8c 	uxth.w	ip, ip
9001c614:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c618:	fa5f f888 	uxtb.w	r8, r8
9001c61c:	fb07 a705 	mla	r7, r7, r5, sl
9001c620:	fb08 0005 	mla	r0, r8, r5, r0
9001c624:	f10c 0501 	add.w	r5, ip, #1
9001c628:	b2bf      	uxth	r7, r7
9001c62a:	b280      	uxth	r0, r0
9001c62c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c630:	f100 0a01 	add.w	sl, r0, #1
9001c634:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c638:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c63c:	9802      	ldr	r0, [sp, #8]
9001c63e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c642:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c646:	f107 0a01 	add.w	sl, r7, #1
9001c64a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c64e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c652:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c656:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c65a:	f824 c000 	strh.w	ip, [r4, r0]
9001c65e:	e7af      	b.n	9001c5c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c660:	f04f 0800 	mov.w	r8, #0
9001c664:	eba3 0008 	sub.w	r0, r3, r8
9001c668:	2800      	cmp	r0, #0
9001c66a:	f77f af41 	ble.w	9001c4f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c66e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c672:	1410      	asrs	r0, r2, #16
9001c674:	9f00      	ldr	r7, [sp, #0]
9001c676:	140d      	asrs	r5, r1, #16
9001c678:	fb06 7000 	mla	r0, r6, r0, r7
9001c67c:	5d40      	ldrb	r0, [r0, r5]
9001c67e:	9d01      	ldr	r5, [sp, #4]
9001c680:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c684:	0e2e      	lsrs	r6, r5, #24
9001c686:	2eff      	cmp	r6, #255	; 0xff
9001c688:	d112      	bne.n	9001c6b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001c68a:	482c      	ldr	r0, [pc, #176]	; (9001c73c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001c68c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c690:	0968      	lsrs	r0, r5, #5
9001c692:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c696:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c69a:	4330      	orrs	r0, r6
9001c69c:	4328      	orrs	r0, r5
9001c69e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001c6a2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c6a4:	f108 0801 	add.w	r8, r8, #1
9001c6a8:	4401      	add	r1, r0
9001c6aa:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c6ac:	4402      	add	r2, r0
9001c6ae:	e7d9      	b.n	9001c664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c6b0:	b2f0      	uxtb	r0, r6
9001c6b2:	2e00      	cmp	r6, #0
9001c6b4:	d0f5      	beq.n	9001c6a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c6b6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001c6ba:	fa1f f980 	uxth.w	r9, r0
9001c6be:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c6c2:	43c0      	mvns	r0, r0
9001c6c4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c6c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c6cc:	fb16 f609 	smulbb	r6, r6, r9
9001c6d0:	b2c0      	uxtb	r0, r0
9001c6d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c6d6:	b2ed      	uxtb	r5, r5
9001c6d8:	fb1a fa09 	smulbb	sl, sl, r9
9001c6dc:	fb07 6700 	mla	r7, r7, r0, r6
9001c6e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c6e4:	fb15 f509 	smulbb	r5, r5, r9
9001c6e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c6ec:	b2bf      	uxth	r7, r7
9001c6ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c6f2:	fa5f fc8c 	uxtb.w	ip, ip
9001c6f6:	fb06 a600 	mla	r6, r6, r0, sl
9001c6fa:	fb0c 5500 	mla	r5, ip, r0, r5
9001c6fe:	1c78      	adds	r0, r7, #1
9001c700:	b2b6      	uxth	r6, r6
9001c702:	b2ad      	uxth	r5, r5
9001c704:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c708:	f105 0a01 	add.w	sl, r5, #1
9001c70c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c710:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c714:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c718:	ea4a 0707 	orr.w	r7, sl, r7
9001c71c:	f106 0a01 	add.w	sl, r6, #1
9001c720:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c724:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c728:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c72c:	ea47 070a 	orr.w	r7, r7, sl
9001c730:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c734:	e7b5      	b.n	9001c6a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c736:	b005      	add	sp, #20
9001c738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c73c:	fffff800 	.word	0xfffff800

9001c740 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c744:	b087      	sub	sp, #28
9001c746:	468b      	mov	fp, r1
9001c748:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c74c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001c74e:	9204      	str	r2, [sp, #16]
9001c750:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c754:	6861      	ldr	r1, [r4, #4]
9001c756:	9205      	str	r2, [sp, #20]
9001c758:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001c75c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001c760:	fb01 2000 	mla	r0, r1, r0, r2
9001c764:	6822      	ldr	r2, [r4, #0]
9001c766:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c76a:	f8de 2000 	ldr.w	r2, [lr]
9001c76e:	9201      	str	r2, [sp, #4]
9001c770:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c774:	9202      	str	r2, [sp, #8]
9001c776:	f1bb 0f00 	cmp.w	fp, #0
9001c77a:	dc03      	bgt.n	9001c784 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001c77c:	9a04      	ldr	r2, [sp, #16]
9001c77e:	2a00      	cmp	r2, #0
9001c780:	f340 8142 	ble.w	9001ca08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c784:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c786:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c78a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c78e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c790:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c794:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c798:	2b00      	cmp	r3, #0
9001c79a:	dd0e      	ble.n	9001c7ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001c79c:	140c      	asrs	r4, r1, #16
9001c79e:	d405      	bmi.n	9001c7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c7a0:	42bc      	cmp	r4, r7
9001c7a2:	da03      	bge.n	9001c7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c7a4:	1414      	asrs	r4, r2, #16
9001c7a6:	d401      	bmi.n	9001c7ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c7a8:	42b4      	cmp	r4, r6
9001c7aa:	db07      	blt.n	9001c7bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c7ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001c7ae:	3b01      	subs	r3, #1
9001c7b0:	3002      	adds	r0, #2
9001c7b2:	4421      	add	r1, r4
9001c7b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001c7b6:	4422      	add	r2, r4
9001c7b8:	e7ee      	b.n	9001c798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001c7ba:	d019      	beq.n	9001c7f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c7bc:	1e5c      	subs	r4, r3, #1
9001c7be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c7c0:	fb05 1504 	mla	r5, r5, r4, r1
9001c7c4:	142d      	asrs	r5, r5, #16
9001c7c6:	d409      	bmi.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c7c8:	42bd      	cmp	r5, r7
9001c7ca:	da07      	bge.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c7cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c7ce:	fb05 2404 	mla	r4, r5, r4, r2
9001c7d2:	1424      	asrs	r4, r4, #16
9001c7d4:	d402      	bmi.n	9001c7dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c7d6:	42b4      	cmp	r4, r6
9001c7d8:	f2c0 80b1 	blt.w	9001c93e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001c7dc:	f04f 0800 	mov.w	r8, #0
9001c7e0:	eb03 0408 	add.w	r4, r3, r8
9001c7e4:	2c00      	cmp	r4, #0
9001c7e6:	dc3e      	bgt.n	9001c866 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001c7e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c7ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c7f0:	f1bb 0f00 	cmp.w	fp, #0
9001c7f4:	f340 8108 	ble.w	9001ca08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c7f8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c7fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c7fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c802:	f1bb 0b01 	subs.w	fp, fp, #1
9001c806:	eeb0 6a62 	vmov.f32	s12, s5
9001c80a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c80e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c812:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c816:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c81a:	eeb0 6a43 	vmov.f32	s12, s6
9001c81e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c822:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c826:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c82a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c82e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c832:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c836:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c83a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c83e:	ee12 2a90 	vmov	r2, s5
9001c842:	eef0 2a47 	vmov.f32	s5, s14
9001c846:	fb92 f3f3 	sdiv	r3, r2, r3
9001c84a:	ee13 2a10 	vmov	r2, s6
9001c84e:	9313      	str	r3, [sp, #76]	; 0x4c
9001c850:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c852:	eeb0 3a67 	vmov.f32	s6, s15
9001c856:	fb92 f3f3 	sdiv	r3, r2, r3
9001c85a:	9a04      	ldr	r2, [sp, #16]
9001c85c:	9314      	str	r3, [sp, #80]	; 0x50
9001c85e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c860:	bf08      	it	eq
9001c862:	4613      	moveq	r3, r2
9001c864:	e787      	b.n	9001c776 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001c866:	140e      	asrs	r6, r1, #16
9001c868:	d462      	bmi.n	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c86a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c86e:	42b5      	cmp	r5, r6
9001c870:	dd5e      	ble.n	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c872:	1417      	asrs	r7, r2, #16
9001c874:	d45c      	bmi.n	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c876:	f8de 400c 	ldr.w	r4, [lr, #12]
9001c87a:	42bc      	cmp	r4, r7
9001c87c:	dd58      	ble.n	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c87e:	b22d      	sxth	r5, r5
9001c880:	9c02      	ldr	r4, [sp, #8]
9001c882:	fb07 6505 	mla	r5, r7, r5, r6
9001c886:	5d66      	ldrb	r6, [r4, r5]
9001c888:	2e00      	cmp	r6, #0
9001c88a:	d051      	beq.n	9001c930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c88c:	9c01      	ldr	r4, [sp, #4]
9001c88e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001c892:	f06f 0401 	mvn.w	r4, #1
9001c896:	fb04 f408 	mul.w	r4, r4, r8
9001c89a:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001c89e:	5b05      	ldrh	r5, [r0, r4]
9001c8a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c8a4:	9403      	str	r4, [sp, #12]
9001c8a6:	9c05      	ldr	r4, [sp, #20]
9001c8a8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c8ac:	4366      	muls	r6, r4
9001c8ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001c8b2:	1c74      	adds	r4, r6, #1
9001c8b4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c8b8:	122e      	asrs	r6, r5, #8
9001c8ba:	1224      	asrs	r4, r4, #8
9001c8bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c8c0:	00ed      	lsls	r5, r5, #3
9001c8c2:	b2a7      	uxth	r7, r4
9001c8c4:	43e4      	mvns	r4, r4
9001c8c6:	b2ed      	uxtb	r5, r5
9001c8c8:	b2e4      	uxtb	r4, r4
9001c8ca:	fb16 f604 	smulbb	r6, r6, r4
9001c8ce:	fb15 f504 	smulbb	r5, r5, r4
9001c8d2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c8d6:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001c8da:	fb1a fa04 	smulbb	sl, sl, r4
9001c8de:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c8e2:	fa1f fc8c 	uxth.w	ip, ip
9001c8e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c8ea:	fa5f f989 	uxtb.w	r9, r9
9001c8ee:	fb06 a607 	mla	r6, r6, r7, sl
9001c8f2:	f10c 0401 	add.w	r4, ip, #1
9001c8f6:	fb09 5507 	mla	r5, r9, r7, r5
9001c8fa:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c8fe:	9c03      	ldr	r4, [sp, #12]
9001c900:	b2ad      	uxth	r5, r5
9001c902:	b2b6      	uxth	r6, r6
9001c904:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c908:	f105 0a01 	add.w	sl, r5, #1
9001c90c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c910:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c914:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c918:	f106 0a01 	add.w	sl, r6, #1
9001c91c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c920:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c924:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c928:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c92c:	f820 c004 	strh.w	ip, [r0, r4]
9001c930:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001c932:	f108 38ff 	add.w	r8, r8, #4294967295
9001c936:	4421      	add	r1, r4
9001c938:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001c93a:	4422      	add	r2, r4
9001c93c:	e750      	b.n	9001c7e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c93e:	f04f 0900 	mov.w	r9, #0
9001c942:	eba3 0409 	sub.w	r4, r3, r9
9001c946:	2c00      	cmp	r4, #0
9001c948:	f77f af4e 	ble.w	9001c7e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c94c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c950:	140d      	asrs	r5, r1, #16
9001c952:	1414      	asrs	r4, r2, #16
9001c954:	fb06 5404 	mla	r4, r6, r4, r5
9001c958:	9d02      	ldr	r5, [sp, #8]
9001c95a:	5d2e      	ldrb	r6, [r5, r4]
9001c95c:	2e00      	cmp	r6, #0
9001c95e:	d04c      	beq.n	9001c9fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001c960:	9d01      	ldr	r5, [sp, #4]
9001c962:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001c966:	9c05      	ldr	r4, [sp, #20]
9001c968:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001c96c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c970:	4366      	muls	r6, r4
9001c972:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c976:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c97a:	1c74      	adds	r4, r6, #1
9001c97c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001c980:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c984:	122e      	asrs	r6, r5, #8
9001c986:	1224      	asrs	r4, r4, #8
9001c988:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c98c:	00ed      	lsls	r5, r5, #3
9001c98e:	b2a7      	uxth	r7, r4
9001c990:	43e4      	mvns	r4, r4
9001c992:	b2ed      	uxtb	r5, r5
9001c994:	b2e4      	uxtb	r4, r4
9001c996:	fb16 f604 	smulbb	r6, r6, r4
9001c99a:	fb15 f504 	smulbb	r5, r5, r4
9001c99e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c9a2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c9a6:	fb1a fa04 	smulbb	sl, sl, r4
9001c9aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c9ae:	fa1f fc8c 	uxth.w	ip, ip
9001c9b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c9b6:	fa5f f888 	uxtb.w	r8, r8
9001c9ba:	fb06 a607 	mla	r6, r6, r7, sl
9001c9be:	f10c 0401 	add.w	r4, ip, #1
9001c9c2:	fb08 5507 	mla	r5, r8, r7, r5
9001c9c6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c9ca:	b2ad      	uxth	r5, r5
9001c9cc:	b2b6      	uxth	r6, r6
9001c9ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c9d2:	f105 0a01 	add.w	sl, r5, #1
9001c9d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c9da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c9de:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c9e2:	f106 0a01 	add.w	sl, r6, #1
9001c9e6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c9ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c9ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c9f2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c9f6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001c9fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001c9fc:	f109 0901 	add.w	r9, r9, #1
9001ca00:	4421      	add	r1, r4
9001ca02:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ca04:	4422      	add	r2, r4
9001ca06:	e79c      	b.n	9001c942 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001ca08:	b007      	add	sp, #28
9001ca0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ca0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ca0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ca12:	b085      	sub	sp, #20
9001ca14:	468b      	mov	fp, r1
9001ca16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ca1a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ca1c:	9203      	str	r2, [sp, #12]
9001ca1e:	6861      	ldr	r1, [r4, #4]
9001ca20:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001ca24:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001ca28:	fb01 2000 	mla	r0, r1, r0, r2
9001ca2c:	6822      	ldr	r2, [r4, #0]
9001ca2e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001ca32:	f8d8 2000 	ldr.w	r2, [r8]
9001ca36:	9200      	str	r2, [sp, #0]
9001ca38:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001ca3c:	9201      	str	r2, [sp, #4]
9001ca3e:	f1bb 0f00 	cmp.w	fp, #0
9001ca42:	dc03      	bgt.n	9001ca4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ca44:	9a03      	ldr	r2, [sp, #12]
9001ca46:	2a00      	cmp	r2, #0
9001ca48:	f340 8146 	ble.w	9001ccd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001ca4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ca4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001ca52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ca56:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ca58:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001ca5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ca60:	2b00      	cmp	r3, #0
9001ca62:	dd0e      	ble.n	9001ca82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ca64:	140c      	asrs	r4, r1, #16
9001ca66:	d405      	bmi.n	9001ca74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ca68:	42bc      	cmp	r4, r7
9001ca6a:	da03      	bge.n	9001ca74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ca6c:	1414      	asrs	r4, r2, #16
9001ca6e:	d401      	bmi.n	9001ca74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ca70:	42b4      	cmp	r4, r6
9001ca72:	db07      	blt.n	9001ca84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ca74:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001ca76:	3b01      	subs	r3, #1
9001ca78:	3002      	adds	r0, #2
9001ca7a:	4421      	add	r1, r4
9001ca7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ca7e:	4422      	add	r2, r4
9001ca80:	e7ee      	b.n	9001ca60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ca82:	d017      	beq.n	9001cab4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ca84:	1e5c      	subs	r4, r3, #1
9001ca86:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ca88:	fb05 1504 	mla	r5, r5, r4, r1
9001ca8c:	142d      	asrs	r5, r5, #16
9001ca8e:	d409      	bmi.n	9001caa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ca90:	42bd      	cmp	r5, r7
9001ca92:	da07      	bge.n	9001caa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ca94:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ca96:	fb05 2404 	mla	r4, r5, r4, r2
9001ca9a:	1424      	asrs	r4, r4, #16
9001ca9c:	d402      	bmi.n	9001caa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001ca9e:	42b4      	cmp	r4, r6
9001caa0:	f2c0 80b3 	blt.w	9001cc0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001caa4:	2600      	movs	r6, #0
9001caa6:	199c      	adds	r4, r3, r6
9001caa8:	2c00      	cmp	r4, #0
9001caaa:	dc3e      	bgt.n	9001cb2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001caac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cab0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cab4:	f1bb 0f00 	cmp.w	fp, #0
9001cab8:	f340 810e 	ble.w	9001ccd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001cabc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cac0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cac2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cac6:	f1bb 0b01 	subs.w	fp, fp, #1
9001caca:	eeb0 6a62 	vmov.f32	s12, s5
9001cace:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cad2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cada:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001cade:	eeb0 6a43 	vmov.f32	s12, s6
9001cae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cae6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001caea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001caee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001caf2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001caf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cafa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cafe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cb02:	ee12 2a90 	vmov	r2, s5
9001cb06:	eef0 2a47 	vmov.f32	s5, s14
9001cb0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cb0e:	ee13 2a10 	vmov	r2, s6
9001cb12:	9311      	str	r3, [sp, #68]	; 0x44
9001cb14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cb16:	eeb0 3a67 	vmov.f32	s6, s15
9001cb1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cb1e:	9a03      	ldr	r2, [sp, #12]
9001cb20:	9312      	str	r3, [sp, #72]	; 0x48
9001cb22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cb24:	bf08      	it	eq
9001cb26:	4613      	moveq	r3, r2
9001cb28:	e789      	b.n	9001ca3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001cb2a:	140f      	asrs	r7, r1, #16
9001cb2c:	d418      	bmi.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cb2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001cb32:	42bd      	cmp	r5, r7
9001cb34:	dd14      	ble.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cb36:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cb3a:	d411      	bmi.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cb3c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001cb40:	4564      	cmp	r4, ip
9001cb42:	dd0d      	ble.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cb44:	b22d      	sxth	r5, r5
9001cb46:	9c01      	ldr	r4, [sp, #4]
9001cb48:	fb0c 7505 	mla	r5, ip, r5, r7
9001cb4c:	5d64      	ldrb	r4, [r4, r5]
9001cb4e:	2cff      	cmp	r4, #255	; 0xff
9001cb50:	d10c      	bne.n	9001cb6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001cb52:	9c00      	ldr	r4, [sp, #0]
9001cb54:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001cb58:	f06f 0401 	mvn.w	r4, #1
9001cb5c:	4374      	muls	r4, r6
9001cb5e:	5305      	strh	r5, [r0, r4]
9001cb60:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cb62:	3e01      	subs	r6, #1
9001cb64:	4421      	add	r1, r4
9001cb66:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cb68:	4422      	add	r2, r4
9001cb6a:	e79c      	b.n	9001caa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cb6c:	2c00      	cmp	r4, #0
9001cb6e:	d0f7      	beq.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cb70:	9f00      	ldr	r7, [sp, #0]
9001cb72:	fa1f fc84 	uxth.w	ip, r4
9001cb76:	43e4      	mvns	r4, r4
9001cb78:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001cb7c:	f06f 0501 	mvn.w	r5, #1
9001cb80:	b2e4      	uxtb	r4, r4
9001cb82:	4375      	muls	r5, r6
9001cb84:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001cb88:	9502      	str	r5, [sp, #8]
9001cb8a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001cb8e:	5b45      	ldrh	r5, [r0, r5]
9001cb90:	122f      	asrs	r7, r5, #8
9001cb92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cb96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cb9a:	00ed      	lsls	r5, r5, #3
9001cb9c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cba0:	fb17 f704 	smulbb	r7, r7, r4
9001cba4:	b2ed      	uxtb	r5, r5
9001cba6:	fb1a fa04 	smulbb	sl, sl, r4
9001cbaa:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001cbae:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001cbb2:	fb15 f504 	smulbb	r5, r5, r4
9001cbb6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001cbba:	fa1f fe8e 	uxth.w	lr, lr
9001cbbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cbc2:	fa5f f989 	uxtb.w	r9, r9
9001cbc6:	fb07 a70c 	mla	r7, r7, ip, sl
9001cbca:	f10e 0401 	add.w	r4, lr, #1
9001cbce:	fb09 550c 	mla	r5, r9, ip, r5
9001cbd2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001cbd6:	9c02      	ldr	r4, [sp, #8]
9001cbd8:	b2ad      	uxth	r5, r5
9001cbda:	b2bf      	uxth	r7, r7
9001cbdc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001cbe0:	f105 0a01 	add.w	sl, r5, #1
9001cbe4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cbe8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cbec:	ea4a 0e0e 	orr.w	lr, sl, lr
9001cbf0:	f107 0a01 	add.w	sl, r7, #1
9001cbf4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001cbf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cbfc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cc00:	ea4e 0e0a 	orr.w	lr, lr, sl
9001cc04:	f820 e004 	strh.w	lr, [r0, r4]
9001cc08:	e7aa      	b.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc0a:	f04f 0900 	mov.w	r9, #0
9001cc0e:	eba3 0409 	sub.w	r4, r3, r9
9001cc12:	2c00      	cmp	r4, #0
9001cc14:	f77f af4a 	ble.w	9001caac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cc18:	1414      	asrs	r4, r2, #16
9001cc1a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001cc1e:	140d      	asrs	r5, r1, #16
9001cc20:	fb06 5504 	mla	r5, r6, r4, r5
9001cc24:	9c01      	ldr	r4, [sp, #4]
9001cc26:	5d64      	ldrb	r4, [r4, r5]
9001cc28:	2cff      	cmp	r4, #255	; 0xff
9001cc2a:	d10b      	bne.n	9001cc44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001cc2c:	9c00      	ldr	r4, [sp, #0]
9001cc2e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001cc32:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001cc36:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cc38:	f109 0901 	add.w	r9, r9, #1
9001cc3c:	4421      	add	r1, r4
9001cc3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cc40:	4422      	add	r2, r4
9001cc42:	e7e4      	b.n	9001cc0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001cc44:	2c00      	cmp	r4, #0
9001cc46:	d0f6      	beq.n	9001cc36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001cc48:	9e00      	ldr	r6, [sp, #0]
9001cc4a:	b2a7      	uxth	r7, r4
9001cc4c:	43e4      	mvns	r4, r4
9001cc4e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001cc52:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001cc56:	b2e4      	uxtb	r4, r4
9001cc58:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cc5c:	122e      	asrs	r6, r5, #8
9001cc5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cc62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cc66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cc6a:	00ed      	lsls	r5, r5, #3
9001cc6c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cc70:	fb16 f604 	smulbb	r6, r6, r4
9001cc74:	b2ed      	uxtb	r5, r5
9001cc76:	fb1a fa04 	smulbb	sl, sl, r4
9001cc7a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001cc7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cc82:	fb15 f504 	smulbb	r5, r5, r4
9001cc86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cc8a:	fa1f fc8c 	uxth.w	ip, ip
9001cc8e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cc92:	fa5f fe8e 	uxtb.w	lr, lr
9001cc96:	fb06 a607 	mla	r6, r6, r7, sl
9001cc9a:	f10c 0401 	add.w	r4, ip, #1
9001cc9e:	fb0e 5507 	mla	r5, lr, r7, r5
9001cca2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001cca6:	b2ad      	uxth	r5, r5
9001cca8:	b2b6      	uxth	r6, r6
9001ccaa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ccae:	f105 0a01 	add.w	sl, r5, #1
9001ccb2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ccb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ccba:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ccbe:	f106 0a01 	add.w	sl, r6, #1
9001ccc2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ccc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ccca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ccce:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ccd2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001ccd6:	e7ae      	b.n	9001cc36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001ccd8:	b005      	add	sp, #20
9001ccda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ccde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ccde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cce2:	b085      	sub	sp, #20
9001cce4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001cce6:	9203      	str	r2, [sp, #12]
9001cce8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001ccec:	9100      	str	r1, [sp, #0]
9001ccee:	9201      	str	r2, [sp, #4]
9001ccf0:	6841      	ldr	r1, [r0, #4]
9001ccf2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001ccf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001ccfa:	fb01 2404 	mla	r4, r1, r4, r2
9001ccfe:	6802      	ldr	r2, [r0, #0]
9001cd00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cd04:	f8de 2000 	ldr.w	r2, [lr]
9001cd08:	9202      	str	r2, [sp, #8]
9001cd0a:	9a01      	ldr	r2, [sp, #4]
9001cd0c:	43d6      	mvns	r6, r2
9001cd0e:	b2f6      	uxtb	r6, r6
9001cd10:	9a00      	ldr	r2, [sp, #0]
9001cd12:	2a00      	cmp	r2, #0
9001cd14:	dc03      	bgt.n	9001cd1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001cd16:	9a03      	ldr	r2, [sp, #12]
9001cd18:	2a00      	cmp	r2, #0
9001cd1a:	f340 8124 	ble.w	9001cf66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001cd1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001cd20:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001cd24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001cd28:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001cd2a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001cd2e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cd32:	2b00      	cmp	r3, #0
9001cd34:	dd0e      	ble.n	9001cd54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cd36:	1408      	asrs	r0, r1, #16
9001cd38:	d405      	bmi.n	9001cd46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd3a:	4560      	cmp	r0, ip
9001cd3c:	da03      	bge.n	9001cd46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd3e:	1410      	asrs	r0, r2, #16
9001cd40:	d401      	bmi.n	9001cd46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001cd42:	42b8      	cmp	r0, r7
9001cd44:	db07      	blt.n	9001cd56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001cd46:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cd48:	3b01      	subs	r3, #1
9001cd4a:	3402      	adds	r4, #2
9001cd4c:	4401      	add	r1, r0
9001cd4e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cd50:	4402      	add	r2, r0
9001cd52:	e7ee      	b.n	9001cd32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001cd54:	d06e      	beq.n	9001ce34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001cd56:	1e58      	subs	r0, r3, #1
9001cd58:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001cd5a:	fb05 1500 	mla	r5, r5, r0, r1
9001cd5e:	142d      	asrs	r5, r5, #16
9001cd60:	d45c      	bmi.n	9001ce1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cd62:	4565      	cmp	r5, ip
9001cd64:	da5a      	bge.n	9001ce1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cd66:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001cd68:	fb05 2000 	mla	r0, r5, r0, r2
9001cd6c:	1400      	asrs	r0, r0, #16
9001cd6e:	d455      	bmi.n	9001ce1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cd70:	42b8      	cmp	r0, r7
9001cd72:	da53      	bge.n	9001ce1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001cd74:	4699      	mov	r9, r3
9001cd76:	46a2      	mov	sl, r4
9001cd78:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001cd7c:	f1b9 0f00 	cmp.w	r9, #0
9001cd80:	dd54      	ble.n	9001ce2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001cd82:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cd86:	140d      	asrs	r5, r1, #16
9001cd88:	1410      	asrs	r0, r2, #16
9001cd8a:	f109 39ff 	add.w	r9, r9, #4294967295
9001cd8e:	fb07 5000 	mla	r0, r7, r0, r5
9001cd92:	9d02      	ldr	r5, [sp, #8]
9001cd94:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001cd98:	f8ba 5000 	ldrh.w	r5, [sl]
9001cd9c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cda0:	122f      	asrs	r7, r5, #8
9001cda2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001cda6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cdaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cdae:	00ed      	lsls	r5, r5, #3
9001cdb0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001cdb4:	fb17 f706 	smulbb	r7, r7, r6
9001cdb8:	b2ed      	uxtb	r5, r5
9001cdba:	fb18 f806 	smulbb	r8, r8, r6
9001cdbe:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001cdc2:	10c7      	asrs	r7, r0, #3
9001cdc4:	fb15 f506 	smulbb	r5, r5, r6
9001cdc8:	00c0      	lsls	r0, r0, #3
9001cdca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cdce:	fa1f fc8c 	uxth.w	ip, ip
9001cdd2:	b2c0      	uxtb	r0, r0
9001cdd4:	fb07 870b 	mla	r7, r7, fp, r8
9001cdd8:	fb00 500b 	mla	r0, r0, fp, r5
9001cddc:	f10c 0501 	add.w	r5, ip, #1
9001cde0:	b2bf      	uxth	r7, r7
9001cde2:	b280      	uxth	r0, r0
9001cde4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cde8:	f107 0801 	add.w	r8, r7, #1
9001cdec:	1c45      	adds	r5, r0, #1
9001cdee:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001cdf2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cdf6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cdfa:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cdfc:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ce00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ce04:	4401      	add	r1, r0
9001ce06:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001ce0a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ce0c:	ea45 0c0c 	orr.w	ip, r5, ip
9001ce10:	4402      	add	r2, r0
9001ce12:	ea4c 0c08 	orr.w	ip, ip, r8
9001ce16:	f82a cb02 	strh.w	ip, [sl], #2
9001ce1a:	e7af      	b.n	9001cd7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ce1c:	f04f 0800 	mov.w	r8, #0
9001ce20:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001ce24:	eb03 0008 	add.w	r0, r3, r8
9001ce28:	2800      	cmp	r0, #0
9001ce2a:	dc41      	bgt.n	9001ceb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001ce2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ce30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ce34:	9b00      	ldr	r3, [sp, #0]
9001ce36:	2b00      	cmp	r3, #0
9001ce38:	f340 8095 	ble.w	9001cf66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001ce3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001ce40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ce42:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ce46:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ce4a:	eef0 6a62 	vmov.f32	s13, s5
9001ce4e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ce52:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ce56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ce5a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001ce5e:	eef0 6a43 	vmov.f32	s13, s6
9001ce62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ce66:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001ce6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ce6e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ce72:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ce76:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ce7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ce7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ce82:	ee12 2a90 	vmov	r2, s5
9001ce86:	eef0 2a47 	vmov.f32	s5, s14
9001ce8a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ce8e:	ee13 2a10 	vmov	r2, s6
9001ce92:	9311      	str	r3, [sp, #68]	; 0x44
9001ce94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ce96:	eeb0 3a67 	vmov.f32	s6, s15
9001ce9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ce9e:	9312      	str	r3, [sp, #72]	; 0x48
9001cea0:	9b00      	ldr	r3, [sp, #0]
9001cea2:	9a03      	ldr	r2, [sp, #12]
9001cea4:	3b01      	subs	r3, #1
9001cea6:	9300      	str	r3, [sp, #0]
9001cea8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ceaa:	bf08      	it	eq
9001ceac:	4613      	moveq	r3, r2
9001ceae:	e72f      	b.n	9001cd10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001ceb0:	140f      	asrs	r7, r1, #16
9001ceb2:	d451      	bmi.n	9001cf58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001ceb4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ceb8:	42bd      	cmp	r5, r7
9001ceba:	dd4d      	ble.n	9001cf58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cebc:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cec0:	d44a      	bmi.n	9001cf58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cec2:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cec6:	4560      	cmp	r0, ip
9001cec8:	dd46      	ble.n	9001cf58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001ceca:	b22d      	sxth	r5, r5
9001cecc:	9802      	ldr	r0, [sp, #8]
9001cece:	fb0c 7505 	mla	r5, ip, r5, r7
9001ced2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001ced6:	f06f 0501 	mvn.w	r5, #1
9001ceda:	fb05 fb08 	mul.w	fp, r5, r8
9001cede:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cee2:	f834 500b 	ldrh.w	r5, [r4, fp]
9001cee6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ceea:	122f      	asrs	r7, r5, #8
9001ceec:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cef0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cef4:	00ed      	lsls	r5, r5, #3
9001cef6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cefa:	fb17 f706 	smulbb	r7, r7, r6
9001cefe:	b2ed      	uxtb	r5, r5
9001cf00:	fb19 f906 	smulbb	r9, r9, r6
9001cf04:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001cf08:	10c7      	asrs	r7, r0, #3
9001cf0a:	fb15 f506 	smulbb	r5, r5, r6
9001cf0e:	00c0      	lsls	r0, r0, #3
9001cf10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cf14:	fa1f fc8c 	uxth.w	ip, ip
9001cf18:	b2c0      	uxtb	r0, r0
9001cf1a:	fb07 970a 	mla	r7, r7, sl, r9
9001cf1e:	fb00 500a 	mla	r0, r0, sl, r5
9001cf22:	f10c 0501 	add.w	r5, ip, #1
9001cf26:	b2bf      	uxth	r7, r7
9001cf28:	b280      	uxth	r0, r0
9001cf2a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cf2e:	f107 0901 	add.w	r9, r7, #1
9001cf32:	1c45      	adds	r5, r0, #1
9001cf34:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001cf38:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cf3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cf40:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cf44:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cf48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001cf4c:	ea45 0c0c 	orr.w	ip, r5, ip
9001cf50:	ea4c 0c09 	orr.w	ip, ip, r9
9001cf54:	f824 c00b 	strh.w	ip, [r4, fp]
9001cf58:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cf5a:	f108 38ff 	add.w	r8, r8, #4294967295
9001cf5e:	4401      	add	r1, r0
9001cf60:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cf62:	4402      	add	r2, r0
9001cf64:	e75e      	b.n	9001ce24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001cf66:	b005      	add	sp, #20
9001cf68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cf6c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cf6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf70:	b085      	sub	sp, #20
9001cf72:	4693      	mov	fp, r2
9001cf74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001cf78:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001cf7a:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001cf7c:	6870      	ldr	r0, [r6, #4]
9001cf7e:	9101      	str	r1, [sp, #4]
9001cf80:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001cf84:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001cf88:	fb00 2404 	mla	r4, r0, r4, r2
9001cf8c:	6832      	ldr	r2, [r6, #0]
9001cf8e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cf92:	682a      	ldr	r2, [r5, #0]
9001cf94:	9202      	str	r2, [sp, #8]
9001cf96:	9a01      	ldr	r2, [sp, #4]
9001cf98:	2a00      	cmp	r2, #0
9001cf9a:	dc03      	bgt.n	9001cfa4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001cf9c:	f1bb 0f00 	cmp.w	fp, #0
9001cfa0:	f340 809a 	ble.w	9001d0d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001cfa4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001cfa6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001cfaa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001cfae:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001cfb0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001cfb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cfb8:	2b00      	cmp	r3, #0
9001cfba:	dd0c      	ble.n	9001cfd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001cfbc:	1406      	asrs	r6, r0, #16
9001cfbe:	d405      	bmi.n	9001cfcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cfc0:	454e      	cmp	r6, r9
9001cfc2:	da03      	bge.n	9001cfcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cfc4:	1416      	asrs	r6, r2, #16
9001cfc6:	d401      	bmi.n	9001cfcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001cfc8:	4546      	cmp	r6, r8
9001cfca:	db05      	blt.n	9001cfd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001cfcc:	4470      	add	r0, lr
9001cfce:	4462      	add	r2, ip
9001cfd0:	3b01      	subs	r3, #1
9001cfd2:	3402      	adds	r4, #2
9001cfd4:	e7f0      	b.n	9001cfb8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001cfd6:	d00f      	beq.n	9001cff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001cfd8:	1e5e      	subs	r6, r3, #1
9001cfda:	fb0e 0706 	mla	r7, lr, r6, r0
9001cfde:	143f      	asrs	r7, r7, #16
9001cfe0:	d541      	bpl.n	9001d066 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001cfe2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001cfe6:	4698      	mov	r8, r3
9001cfe8:	9603      	str	r6, [sp, #12]
9001cfea:	f1b8 0f00 	cmp.w	r8, #0
9001cfee:	dc56      	bgt.n	9001d09e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001cff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cff4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cff8:	9b01      	ldr	r3, [sp, #4]
9001cffa:	2b00      	cmp	r3, #0
9001cffc:	dd6c      	ble.n	9001d0d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001cffe:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d004:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d008:	eeb0 6a62 	vmov.f32	s12, s5
9001d00c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d010:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d018:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d01c:	eeb0 6a43 	vmov.f32	s12, s6
9001d020:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d024:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d028:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d02c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d030:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d034:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d038:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d03c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d040:	ee12 2a90 	vmov	r2, s5
9001d044:	eef0 2a47 	vmov.f32	s5, s14
9001d048:	fb92 fef3 	sdiv	lr, r2, r3
9001d04c:	ee13 2a10 	vmov	r2, s6
9001d050:	eeb0 3a67 	vmov.f32	s6, s15
9001d054:	fb92 fcf3 	sdiv	ip, r2, r3
9001d058:	9b01      	ldr	r3, [sp, #4]
9001d05a:	3b01      	subs	r3, #1
9001d05c:	9301      	str	r3, [sp, #4]
9001d05e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d060:	bf08      	it	eq
9001d062:	465b      	moveq	r3, fp
9001d064:	e797      	b.n	9001cf96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d066:	454f      	cmp	r7, r9
9001d068:	dabb      	bge.n	9001cfe2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d06a:	fb0c 2606 	mla	r6, ip, r6, r2
9001d06e:	1436      	asrs	r6, r6, #16
9001d070:	d4b7      	bmi.n	9001cfe2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d072:	4546      	cmp	r6, r8
9001d074:	dab5      	bge.n	9001cfe2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d076:	461e      	mov	r6, r3
9001d078:	46a0      	mov	r8, r4
9001d07a:	2e00      	cmp	r6, #0
9001d07c:	ddb8      	ble.n	9001cff0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d07e:	1417      	asrs	r7, r2, #16
9001d080:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d084:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d088:	9902      	ldr	r1, [sp, #8]
9001d08a:	4470      	add	r0, lr
9001d08c:	4462      	add	r2, ip
9001d08e:	fb0a 9707 	mla	r7, sl, r7, r9
9001d092:	3e01      	subs	r6, #1
9001d094:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d098:	f828 7b02 	strh.w	r7, [r8], #2
9001d09c:	e7ed      	b.n	9001d07a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001d09e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d0a2:	d414      	bmi.n	9001d0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d0a4:	68ae      	ldr	r6, [r5, #8]
9001d0a6:	454e      	cmp	r6, r9
9001d0a8:	dd11      	ble.n	9001d0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d0aa:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d0ae:	d40e      	bmi.n	9001d0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d0b0:	68ef      	ldr	r7, [r5, #12]
9001d0b2:	4557      	cmp	r7, sl
9001d0b4:	dd0b      	ble.n	9001d0ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d0b6:	b236      	sxth	r6, r6
9001d0b8:	f06f 0101 	mvn.w	r1, #1
9001d0bc:	9f02      	ldr	r7, [sp, #8]
9001d0be:	fb0a 9606 	mla	r6, sl, r6, r9
9001d0c2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d0c6:	fb01 f608 	mul.w	r6, r1, r8
9001d0ca:	9903      	ldr	r1, [sp, #12]
9001d0cc:	538f      	strh	r7, [r1, r6]
9001d0ce:	4470      	add	r0, lr
9001d0d0:	4462      	add	r2, ip
9001d0d2:	f108 38ff 	add.w	r8, r8, #4294967295
9001d0d6:	e788      	b.n	9001cfea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d0d8:	b005      	add	sp, #20
9001d0da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d0de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d0de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d0e2:	b087      	sub	sp, #28
9001d0e4:	468b      	mov	fp, r1
9001d0e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d0ea:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d0ec:	9203      	str	r2, [sp, #12]
9001d0ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d0f2:	6841      	ldr	r1, [r0, #4]
9001d0f4:	9204      	str	r2, [sp, #16]
9001d0f6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d0fa:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001d0fe:	fb01 2505 	mla	r5, r1, r5, r2
9001d102:	6802      	ldr	r2, [r0, #0]
9001d104:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001d108:	f8d9 2000 	ldr.w	r2, [r9]
9001d10c:	9201      	str	r2, [sp, #4]
9001d10e:	f1bb 0f00 	cmp.w	fp, #0
9001d112:	dc03      	bgt.n	9001d11c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d114:	9a03      	ldr	r2, [sp, #12]
9001d116:	2a00      	cmp	r2, #0
9001d118:	f340 8158 	ble.w	9001d3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d11c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d11e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d122:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d126:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d128:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d12c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d130:	2b00      	cmp	r3, #0
9001d132:	dd0e      	ble.n	9001d152 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d134:	1402      	asrs	r2, r0, #16
9001d136:	d405      	bmi.n	9001d144 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d138:	42ba      	cmp	r2, r7
9001d13a:	da03      	bge.n	9001d144 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d13c:	140a      	asrs	r2, r1, #16
9001d13e:	d401      	bmi.n	9001d144 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d140:	42b2      	cmp	r2, r6
9001d142:	db07      	blt.n	9001d154 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d144:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d146:	3b01      	subs	r3, #1
9001d148:	3502      	adds	r5, #2
9001d14a:	4410      	add	r0, r2
9001d14c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d14e:	4411      	add	r1, r2
9001d150:	e7ee      	b.n	9001d130 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d152:	d017      	beq.n	9001d184 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d154:	1e5a      	subs	r2, r3, #1
9001d156:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d158:	fb04 0402 	mla	r4, r4, r2, r0
9001d15c:	1424      	asrs	r4, r4, #16
9001d15e:	d409      	bmi.n	9001d174 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d160:	42bc      	cmp	r4, r7
9001d162:	da07      	bge.n	9001d174 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d164:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d166:	fb04 1202 	mla	r2, r4, r2, r1
9001d16a:	1412      	asrs	r2, r2, #16
9001d16c:	d402      	bmi.n	9001d174 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d16e:	42b2      	cmp	r2, r6
9001d170:	f2c0 80bf 	blt.w	9001d2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d174:	2700      	movs	r7, #0
9001d176:	19da      	adds	r2, r3, r7
9001d178:	2a00      	cmp	r2, #0
9001d17a:	dc3e      	bgt.n	9001d1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d17c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d180:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d184:	f1bb 0f00 	cmp.w	fp, #0
9001d188:	f340 8120 	ble.w	9001d3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d18c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d190:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d192:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d196:	f1bb 0b01 	subs.w	fp, fp, #1
9001d19a:	eeb0 6a62 	vmov.f32	s12, s5
9001d19e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d1a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d1a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d1aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d1ae:	eeb0 6a43 	vmov.f32	s12, s6
9001d1b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d1b6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d1ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d1be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d1c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d1c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d1ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d1ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d1d2:	ee12 2a90 	vmov	r2, s5
9001d1d6:	eef0 2a47 	vmov.f32	s5, s14
9001d1da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d1de:	ee13 2a10 	vmov	r2, s6
9001d1e2:	9313      	str	r3, [sp, #76]	; 0x4c
9001d1e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d1e6:	eeb0 3a67 	vmov.f32	s6, s15
9001d1ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001d1ee:	9a03      	ldr	r2, [sp, #12]
9001d1f0:	9314      	str	r3, [sp, #80]	; 0x50
9001d1f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d1f4:	bf08      	it	eq
9001d1f6:	4613      	moveq	r3, r2
9001d1f8:	e789      	b.n	9001d10e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d1fa:	1406      	asrs	r6, r0, #16
9001d1fc:	d42d      	bmi.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d1fe:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001d202:	42b4      	cmp	r4, r6
9001d204:	dd29      	ble.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d206:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001d20a:	d426      	bmi.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d20c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d210:	4562      	cmp	r2, ip
9001d212:	dd22      	ble.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d214:	b224      	sxth	r4, r4
9001d216:	9a01      	ldr	r2, [sp, #4]
9001d218:	fb0c 6404 	mla	r4, ip, r4, r6
9001d21c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001d220:	0e22      	lsrs	r2, r4, #24
9001d222:	d01a      	beq.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d224:	9e04      	ldr	r6, [sp, #16]
9001d226:	4372      	muls	r2, r6
9001d228:	1c56      	adds	r6, r2, #1
9001d22a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d22e:	0a26      	lsrs	r6, r4, #8
9001d230:	1212      	asrs	r2, r2, #8
9001d232:	9605      	str	r6, [sp, #20]
9001d234:	2aff      	cmp	r2, #255	; 0xff
9001d236:	d116      	bne.n	9001d266 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001d238:	f06f 0201 	mvn.w	r2, #1
9001d23c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d240:	fb02 fc07 	mul.w	ip, r2, r7
9001d244:	0962      	lsrs	r2, r4, #5
9001d246:	f026 0607 	bic.w	r6, r6, #7
9001d24a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d24e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d252:	4316      	orrs	r6, r2
9001d254:	4326      	orrs	r6, r4
9001d256:	f825 600c 	strh.w	r6, [r5, ip]
9001d25a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d25c:	3f01      	subs	r7, #1
9001d25e:	4410      	add	r0, r2
9001d260:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d262:	4411      	add	r1, r2
9001d264:	e787      	b.n	9001d176 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d266:	f06f 0601 	mvn.w	r6, #1
9001d26a:	fa1f fa82 	uxth.w	sl, r2
9001d26e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001d272:	43d2      	mvns	r2, r2
9001d274:	437e      	muls	r6, r7
9001d276:	b2e4      	uxtb	r4, r4
9001d278:	fb1c fc0a 	smulbb	ip, ip, sl
9001d27c:	b2d2      	uxtb	r2, r2
9001d27e:	f835 8006 	ldrh.w	r8, [r5, r6]
9001d282:	fb14 f40a 	smulbb	r4, r4, sl
9001d286:	9602      	str	r6, [sp, #8]
9001d288:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d28c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d290:	fb16 f60a 	smulbb	r6, r6, sl
9001d294:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d298:	fb0e ce02 	mla	lr, lr, r2, ip
9001d29c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d2a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d2a4:	fa1f fe8e 	uxth.w	lr, lr
9001d2a8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001d2ac:	fa5f f888 	uxtb.w	r8, r8
9001d2b0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d2b4:	fb08 4402 	mla	r4, r8, r2, r4
9001d2b8:	f10e 0201 	add.w	r2, lr, #1
9001d2bc:	fa1f fc8c 	uxth.w	ip, ip
9001d2c0:	b2a4      	uxth	r4, r4
9001d2c2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d2c6:	9a02      	ldr	r2, [sp, #8]
9001d2c8:	1c66      	adds	r6, r4, #1
9001d2ca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d2ce:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d2d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d2d6:	ea46 0e0e 	orr.w	lr, r6, lr
9001d2da:	f10c 0601 	add.w	r6, ip, #1
9001d2de:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d2e2:	0976      	lsrs	r6, r6, #5
9001d2e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d2e8:	ea4e 0e06 	orr.w	lr, lr, r6
9001d2ec:	f825 e002 	strh.w	lr, [r5, r2]
9001d2f0:	e7b3      	b.n	9001d25a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d2f2:	f04f 0800 	mov.w	r8, #0
9001d2f6:	eba3 0208 	sub.w	r2, r3, r8
9001d2fa:	2a00      	cmp	r2, #0
9001d2fc:	f77f af3e 	ble.w	9001d17c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d300:	1404      	asrs	r4, r0, #16
9001d302:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001d306:	140a      	asrs	r2, r1, #16
9001d308:	fb06 4202 	mla	r2, r6, r2, r4
9001d30c:	9c01      	ldr	r4, [sp, #4]
9001d30e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001d312:	0e22      	lsrs	r2, r4, #24
9001d314:	d015      	beq.n	9001d342 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d316:	9e04      	ldr	r6, [sp, #16]
9001d318:	4372      	muls	r2, r6
9001d31a:	1c56      	adds	r6, r2, #1
9001d31c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d320:	0a26      	lsrs	r6, r4, #8
9001d322:	1212      	asrs	r2, r2, #8
9001d324:	2aff      	cmp	r2, #255	; 0xff
9001d326:	d113      	bne.n	9001d350 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001d328:	0962      	lsrs	r2, r4, #5
9001d32a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d32e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d332:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d336:	f026 0607 	bic.w	r6, r6, #7
9001d33a:	4316      	orrs	r6, r2
9001d33c:	4326      	orrs	r6, r4
9001d33e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001d342:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d344:	f108 0801 	add.w	r8, r8, #1
9001d348:	4410      	add	r0, r2
9001d34a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d34c:	4411      	add	r1, r2
9001d34e:	e7d2      	b.n	9001d2f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001d350:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001d354:	fa1f fa82 	uxth.w	sl, r2
9001d358:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001d35c:	43d2      	mvns	r2, r2
9001d35e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d362:	fb17 f70a 	smulbb	r7, r7, sl
9001d366:	b2d2      	uxtb	r2, r2
9001d368:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d36c:	b2e4      	uxtb	r4, r4
9001d36e:	b2f6      	uxtb	r6, r6
9001d370:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d374:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d378:	fb14 f40a 	smulbb	r4, r4, sl
9001d37c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d380:	fa1f fc8c 	uxth.w	ip, ip
9001d384:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d388:	fb16 f60a 	smulbb	r6, r6, sl
9001d38c:	fa5f fe8e 	uxtb.w	lr, lr
9001d390:	fb0e 4402 	mla	r4, lr, r2, r4
9001d394:	fb07 6702 	mla	r7, r7, r2, r6
9001d398:	f10c 0201 	add.w	r2, ip, #1
9001d39c:	b2a4      	uxth	r4, r4
9001d39e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d3a2:	1c66      	adds	r6, r4, #1
9001d3a4:	b2bf      	uxth	r7, r7
9001d3a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d3aa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d3ae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d3b2:	ea46 0c0c 	orr.w	ip, r6, ip
9001d3b6:	1c7e      	adds	r6, r7, #1
9001d3b8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001d3bc:	0976      	lsrs	r6, r6, #5
9001d3be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d3c2:	ea4c 0c06 	orr.w	ip, ip, r6
9001d3c6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001d3ca:	e7ba      	b.n	9001d342 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d3cc:	b007      	add	sp, #28
9001d3ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d3d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d3d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d3d8:	b085      	sub	sp, #20
9001d3da:	468b      	mov	fp, r1
9001d3dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d3e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d3e2:	9203      	str	r2, [sp, #12]
9001d3e4:	6841      	ldr	r1, [r0, #4]
9001d3e6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001d3ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d3ee:	fb01 2404 	mla	r4, r1, r4, r2
9001d3f2:	6802      	ldr	r2, [r0, #0]
9001d3f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d3f8:	f8d8 2000 	ldr.w	r2, [r8]
9001d3fc:	9201      	str	r2, [sp, #4]
9001d3fe:	f1bb 0f00 	cmp.w	fp, #0
9001d402:	dc03      	bgt.n	9001d40c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d404:	9a03      	ldr	r2, [sp, #12]
9001d406:	2a00      	cmp	r2, #0
9001d408:	f340 814f 	ble.w	9001d6aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d40c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d40e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d412:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d416:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d418:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d41c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d420:	2b00      	cmp	r3, #0
9001d422:	dd0e      	ble.n	9001d442 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d424:	1408      	asrs	r0, r1, #16
9001d426:	d405      	bmi.n	9001d434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d428:	42b8      	cmp	r0, r7
9001d42a:	da03      	bge.n	9001d434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d42c:	1410      	asrs	r0, r2, #16
9001d42e:	d401      	bmi.n	9001d434 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d430:	42b0      	cmp	r0, r6
9001d432:	db07      	blt.n	9001d444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d434:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d436:	3b01      	subs	r3, #1
9001d438:	3402      	adds	r4, #2
9001d43a:	4401      	add	r1, r0
9001d43c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d43e:	4402      	add	r2, r0
9001d440:	e7ee      	b.n	9001d420 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d442:	d017      	beq.n	9001d474 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d444:	1e58      	subs	r0, r3, #1
9001d446:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d448:	fb05 1500 	mla	r5, r5, r0, r1
9001d44c:	142d      	asrs	r5, r5, #16
9001d44e:	d409      	bmi.n	9001d464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d450:	42bd      	cmp	r5, r7
9001d452:	da07      	bge.n	9001d464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d454:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d456:	fb05 2000 	mla	r0, r5, r0, r2
9001d45a:	1400      	asrs	r0, r0, #16
9001d45c:	d402      	bmi.n	9001d464 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d45e:	42b0      	cmp	r0, r6
9001d460:	f2c0 80ba 	blt.w	9001d5d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001d464:	2600      	movs	r6, #0
9001d466:	1998      	adds	r0, r3, r6
9001d468:	2800      	cmp	r0, #0
9001d46a:	dc3e      	bgt.n	9001d4ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001d46c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d470:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d474:	f1bb 0f00 	cmp.w	fp, #0
9001d478:	f340 8117 	ble.w	9001d6aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d47c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d480:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d482:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d486:	f1bb 0b01 	subs.w	fp, fp, #1
9001d48a:	eeb0 6a62 	vmov.f32	s12, s5
9001d48e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d492:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d49a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d49e:	eeb0 6a43 	vmov.f32	s12, s6
9001d4a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d4a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d4aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d4ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d4b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d4b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d4ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d4be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d4c2:	ee12 2a90 	vmov	r2, s5
9001d4c6:	eef0 2a47 	vmov.f32	s5, s14
9001d4ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4ce:	ee13 2a10 	vmov	r2, s6
9001d4d2:	9311      	str	r3, [sp, #68]	; 0x44
9001d4d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d4d6:	eeb0 3a67 	vmov.f32	s6, s15
9001d4da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4de:	9a03      	ldr	r2, [sp, #12]
9001d4e0:	9312      	str	r3, [sp, #72]	; 0x48
9001d4e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d4e4:	bf08      	it	eq
9001d4e6:	4613      	moveq	r3, r2
9001d4e8:	e789      	b.n	9001d3fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d4ea:	140f      	asrs	r7, r1, #16
9001d4ec:	d424      	bmi.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d4ee:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d4f2:	42bd      	cmp	r5, r7
9001d4f4:	dd20      	ble.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d4f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d4fa:	d41d      	bmi.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d4fc:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001d500:	4560      	cmp	r0, ip
9001d502:	dd19      	ble.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d504:	b22d      	sxth	r5, r5
9001d506:	9801      	ldr	r0, [sp, #4]
9001d508:	fb0c 7505 	mla	r5, ip, r5, r7
9001d50c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001d510:	0e07      	lsrs	r7, r0, #24
9001d512:	2fff      	cmp	r7, #255	; 0xff
9001d514:	d116      	bne.n	9001d544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d516:	f06f 0501 	mvn.w	r5, #1
9001d51a:	fb05 f706 	mul.w	r7, r5, r6
9001d51e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001d522:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d526:	0945      	lsrs	r5, r0, #5
9001d528:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d52c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d530:	ea4c 0505 	orr.w	r5, ip, r5
9001d534:	4305      	orrs	r5, r0
9001d536:	53e5      	strh	r5, [r4, r7]
9001d538:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d53a:	3e01      	subs	r6, #1
9001d53c:	4401      	add	r1, r0
9001d53e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d540:	4402      	add	r2, r0
9001d542:	e790      	b.n	9001d466 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d544:	b2fd      	uxtb	r5, r7
9001d546:	2f00      	cmp	r7, #0
9001d548:	d0f6      	beq.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d54a:	f06f 0701 	mvn.w	r7, #1
9001d54e:	fa1f f985 	uxth.w	r9, r5
9001d552:	43ed      	mvns	r5, r5
9001d554:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001d558:	4377      	muls	r7, r6
9001d55a:	fb1a fa09 	smulbb	sl, sl, r9
9001d55e:	b2ed      	uxtb	r5, r5
9001d560:	f834 e007 	ldrh.w	lr, [r4, r7]
9001d564:	9702      	str	r7, [sp, #8]
9001d566:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001d56a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d56e:	fb17 f709 	smulbb	r7, r7, r9
9001d572:	b2c0      	uxtb	r0, r0
9001d574:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d578:	fb10 f009 	smulbb	r0, r0, r9
9001d57c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001d580:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d584:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d588:	fa1f fc8c 	uxth.w	ip, ip
9001d58c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d590:	fa5f fe8e 	uxtb.w	lr, lr
9001d594:	fb07 a705 	mla	r7, r7, r5, sl
9001d598:	fb0e 0005 	mla	r0, lr, r5, r0
9001d59c:	f10c 0501 	add.w	r5, ip, #1
9001d5a0:	b2bf      	uxth	r7, r7
9001d5a2:	b280      	uxth	r0, r0
9001d5a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d5a8:	f100 0a01 	add.w	sl, r0, #1
9001d5ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d5b0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001d5b4:	9802      	ldr	r0, [sp, #8]
9001d5b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d5ba:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d5be:	f107 0a01 	add.w	sl, r7, #1
9001d5c2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d5c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d5ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d5ce:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d5d2:	f824 c000 	strh.w	ip, [r4, r0]
9001d5d6:	e7af      	b.n	9001d538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d5d8:	f04f 0e00 	mov.w	lr, #0
9001d5dc:	eba3 000e 	sub.w	r0, r3, lr
9001d5e0:	2800      	cmp	r0, #0
9001d5e2:	f77f af43 	ble.w	9001d46c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d5e6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d5ea:	140d      	asrs	r5, r1, #16
9001d5ec:	1410      	asrs	r0, r2, #16
9001d5ee:	fb06 5000 	mla	r0, r6, r0, r5
9001d5f2:	9d01      	ldr	r5, [sp, #4]
9001d5f4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001d5f8:	0e2e      	lsrs	r6, r5, #24
9001d5fa:	2eff      	cmp	r6, #255	; 0xff
9001d5fc:	d112      	bne.n	9001d624 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001d5fe:	482c      	ldr	r0, [pc, #176]	; (9001d6b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001d600:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001d604:	0968      	lsrs	r0, r5, #5
9001d606:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d60a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001d60e:	4330      	orrs	r0, r6
9001d610:	4328      	orrs	r0, r5
9001d612:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001d616:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d618:	f10e 0e01 	add.w	lr, lr, #1
9001d61c:	4401      	add	r1, r0
9001d61e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d620:	4402      	add	r2, r0
9001d622:	e7db      	b.n	9001d5dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001d624:	b2f0      	uxtb	r0, r6
9001d626:	2e00      	cmp	r6, #0
9001d628:	d0f5      	beq.n	9001d616 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d62a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d62e:	fa1f f980 	uxth.w	r9, r0
9001d632:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d636:	43c0      	mvns	r0, r0
9001d638:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d63c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d640:	fb16 f609 	smulbb	r6, r6, r9
9001d644:	b2c0      	uxtb	r0, r0
9001d646:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d64a:	b2ed      	uxtb	r5, r5
9001d64c:	fb1a fa09 	smulbb	sl, sl, r9
9001d650:	fb07 6700 	mla	r7, r7, r0, r6
9001d654:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d658:	fb15 f509 	smulbb	r5, r5, r9
9001d65c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d660:	b2bf      	uxth	r7, r7
9001d662:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d666:	fa5f fc8c 	uxtb.w	ip, ip
9001d66a:	fb06 a600 	mla	r6, r6, r0, sl
9001d66e:	fb0c 5500 	mla	r5, ip, r0, r5
9001d672:	1c78      	adds	r0, r7, #1
9001d674:	b2b6      	uxth	r6, r6
9001d676:	b2ad      	uxth	r5, r5
9001d678:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001d67c:	f105 0a01 	add.w	sl, r5, #1
9001d680:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d684:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d688:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d68c:	ea4a 0707 	orr.w	r7, sl, r7
9001d690:	f106 0a01 	add.w	sl, r6, #1
9001d694:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d698:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d69c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d6a0:	ea47 070a 	orr.w	r7, r7, sl
9001d6a4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001d6a8:	e7b5      	b.n	9001d616 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d6aa:	b005      	add	sp, #20
9001d6ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d6b0:	fffff800 	.word	0xfffff800

9001d6b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d6b8:	b087      	sub	sp, #28
9001d6ba:	468b      	mov	fp, r1
9001d6bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d6c0:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d6c2:	9203      	str	r2, [sp, #12]
9001d6c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d6c8:	6841      	ldr	r1, [r0, #4]
9001d6ca:	9204      	str	r2, [sp, #16]
9001d6cc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d6d0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001d6d4:	fb01 2404 	mla	r4, r1, r4, r2
9001d6d8:	6802      	ldr	r2, [r0, #0]
9001d6da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d6de:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d6e2:	3201      	adds	r2, #1
9001d6e4:	f022 0201 	bic.w	r2, r2, #1
9001d6e8:	9200      	str	r2, [sp, #0]
9001d6ea:	f8d9 2000 	ldr.w	r2, [r9]
9001d6ee:	9201      	str	r2, [sp, #4]
9001d6f0:	f1bb 0f00 	cmp.w	fp, #0
9001d6f4:	dc03      	bgt.n	9001d6fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d6f6:	9a03      	ldr	r2, [sp, #12]
9001d6f8:	2a00      	cmp	r2, #0
9001d6fa:	f340 816a 	ble.w	9001d9d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d6fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d700:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d704:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d708:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d70a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d70e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d712:	2b00      	cmp	r3, #0
9001d714:	dd0e      	ble.n	9001d734 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d716:	1402      	asrs	r2, r0, #16
9001d718:	d405      	bmi.n	9001d726 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d71a:	42ba      	cmp	r2, r7
9001d71c:	da03      	bge.n	9001d726 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d71e:	140a      	asrs	r2, r1, #16
9001d720:	d401      	bmi.n	9001d726 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d722:	42b2      	cmp	r2, r6
9001d724:	db07      	blt.n	9001d736 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001d726:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d728:	3b01      	subs	r3, #1
9001d72a:	3402      	adds	r4, #2
9001d72c:	4410      	add	r0, r2
9001d72e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d730:	4411      	add	r1, r2
9001d732:	e7ee      	b.n	9001d712 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d734:	d017      	beq.n	9001d766 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d736:	1e5a      	subs	r2, r3, #1
9001d738:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d73a:	fb05 0502 	mla	r5, r5, r2, r0
9001d73e:	142d      	asrs	r5, r5, #16
9001d740:	d409      	bmi.n	9001d756 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d742:	42bd      	cmp	r5, r7
9001d744:	da07      	bge.n	9001d756 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d746:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d748:	fb05 1202 	mla	r2, r5, r2, r1
9001d74c:	1412      	asrs	r2, r2, #16
9001d74e:	d402      	bmi.n	9001d756 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d750:	42b2      	cmp	r2, r6
9001d752:	f2c0 80c8 	blt.w	9001d8e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001d756:	2700      	movs	r7, #0
9001d758:	19da      	adds	r2, r3, r7
9001d75a:	2a00      	cmp	r2, #0
9001d75c:	dc3e      	bgt.n	9001d7dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d75e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d762:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d766:	f1bb 0f00 	cmp.w	fp, #0
9001d76a:	f340 8132 	ble.w	9001d9d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d76e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d772:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d774:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d778:	f1bb 0b01 	subs.w	fp, fp, #1
9001d77c:	eeb0 6a62 	vmov.f32	s12, s5
9001d780:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d784:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d78c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d790:	eeb0 6a43 	vmov.f32	s12, s6
9001d794:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d798:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d79c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d7a0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d7a4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d7a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d7ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d7b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d7b4:	ee12 2a90 	vmov	r2, s5
9001d7b8:	eef0 2a47 	vmov.f32	s5, s14
9001d7bc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d7c0:	ee13 2a10 	vmov	r2, s6
9001d7c4:	9313      	str	r3, [sp, #76]	; 0x4c
9001d7c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d7c8:	eeb0 3a67 	vmov.f32	s6, s15
9001d7cc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d7d0:	9a03      	ldr	r2, [sp, #12]
9001d7d2:	9314      	str	r3, [sp, #80]	; 0x50
9001d7d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d7d6:	bf08      	it	eq
9001d7d8:	4613      	moveq	r3, r2
9001d7da:	e789      	b.n	9001d6f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d7dc:	1405      	asrs	r5, r0, #16
9001d7de:	d436      	bmi.n	9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d7e0:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d7e4:	42aa      	cmp	r2, r5
9001d7e6:	dd32      	ble.n	9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d7e8:	140e      	asrs	r6, r1, #16
9001d7ea:	d430      	bmi.n	9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d7ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d7f0:	42b2      	cmp	r2, r6
9001d7f2:	dd2c      	ble.n	9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d7f4:	9a00      	ldr	r2, [sp, #0]
9001d7f6:	fb06 5502 	mla	r5, r6, r2, r5
9001d7fa:	9e01      	ldr	r6, [sp, #4]
9001d7fc:	086a      	lsrs	r2, r5, #1
9001d7fe:	5cb2      	ldrb	r2, [r6, r2]
9001d800:	07ee      	lsls	r6, r5, #31
9001d802:	bf54      	ite	pl
9001d804:	f002 020f 	andpl.w	r2, r2, #15
9001d808:	1112      	asrmi	r2, r2, #4
9001d80a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d80e:	b2d2      	uxtb	r2, r2
9001d810:	b1ea      	cbz	r2, 9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d812:	9d04      	ldr	r5, [sp, #16]
9001d814:	436a      	muls	r2, r5
9001d816:	1c55      	adds	r5, r2, #1
9001d818:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d81c:	4d6e      	ldr	r5, [pc, #440]	; (9001d9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d81e:	1212      	asrs	r2, r2, #8
9001d820:	682d      	ldr	r5, [r5, #0]
9001d822:	2aff      	cmp	r2, #255	; 0xff
9001d824:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001d828:	9605      	str	r6, [sp, #20]
9001d82a:	d116      	bne.n	9001d85a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001d82c:	f06f 0201 	mvn.w	r2, #1
9001d830:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d834:	fb02 fc07 	mul.w	ip, r2, r7
9001d838:	096a      	lsrs	r2, r5, #5
9001d83a:	f026 0607 	bic.w	r6, r6, #7
9001d83e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d842:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d846:	4316      	orrs	r6, r2
9001d848:	432e      	orrs	r6, r5
9001d84a:	f824 600c 	strh.w	r6, [r4, ip]
9001d84e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d850:	3f01      	subs	r7, #1
9001d852:	4410      	add	r0, r2
9001d854:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d856:	4411      	add	r1, r2
9001d858:	e77e      	b.n	9001d758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001d85a:	f06f 0601 	mvn.w	r6, #1
9001d85e:	fa1f fa82 	uxth.w	sl, r2
9001d862:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001d866:	43d2      	mvns	r2, r2
9001d868:	437e      	muls	r6, r7
9001d86a:	b2ed      	uxtb	r5, r5
9001d86c:	fb1c fc0a 	smulbb	ip, ip, sl
9001d870:	b2d2      	uxtb	r2, r2
9001d872:	f834 8006 	ldrh.w	r8, [r4, r6]
9001d876:	fb15 f50a 	smulbb	r5, r5, sl
9001d87a:	9602      	str	r6, [sp, #8]
9001d87c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d880:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d884:	fb16 f60a 	smulbb	r6, r6, sl
9001d888:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d88c:	fb0e ce02 	mla	lr, lr, r2, ip
9001d890:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d894:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d898:	fa1f fe8e 	uxth.w	lr, lr
9001d89c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001d8a0:	fa5f f888 	uxtb.w	r8, r8
9001d8a4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d8a8:	fb08 5502 	mla	r5, r8, r2, r5
9001d8ac:	f10e 0201 	add.w	r2, lr, #1
9001d8b0:	fa1f fc8c 	uxth.w	ip, ip
9001d8b4:	b2ad      	uxth	r5, r5
9001d8b6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d8ba:	9a02      	ldr	r2, [sp, #8]
9001d8bc:	1c6e      	adds	r6, r5, #1
9001d8be:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d8c2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001d8c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d8ca:	ea46 0e0e 	orr.w	lr, r6, lr
9001d8ce:	f10c 0601 	add.w	r6, ip, #1
9001d8d2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d8d6:	0976      	lsrs	r6, r6, #5
9001d8d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d8dc:	ea4e 0e06 	orr.w	lr, lr, r6
9001d8e0:	f824 e002 	strh.w	lr, [r4, r2]
9001d8e4:	e7b3      	b.n	9001d84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d8e6:	f04f 0800 	mov.w	r8, #0
9001d8ea:	eba3 0208 	sub.w	r2, r3, r8
9001d8ee:	2a00      	cmp	r2, #0
9001d8f0:	f77f af35 	ble.w	9001d75e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d8f4:	1402      	asrs	r2, r0, #16
9001d8f6:	9e00      	ldr	r6, [sp, #0]
9001d8f8:	140d      	asrs	r5, r1, #16
9001d8fa:	fb06 2505 	mla	r5, r6, r5, r2
9001d8fe:	9e01      	ldr	r6, [sp, #4]
9001d900:	086a      	lsrs	r2, r5, #1
9001d902:	07ed      	lsls	r5, r5, #31
9001d904:	5cb2      	ldrb	r2, [r6, r2]
9001d906:	bf54      	ite	pl
9001d908:	f002 020f 	andpl.w	r2, r2, #15
9001d90c:	1112      	asrmi	r2, r2, #4
9001d90e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d912:	b2d2      	uxtb	r2, r2
9001d914:	b1c2      	cbz	r2, 9001d948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d916:	9d04      	ldr	r5, [sp, #16]
9001d918:	436a      	muls	r2, r5
9001d91a:	1c55      	adds	r5, r2, #1
9001d91c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d920:	4d2d      	ldr	r5, [pc, #180]	; (9001d9d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d922:	1212      	asrs	r2, r2, #8
9001d924:	682e      	ldr	r6, [r5, #0]
9001d926:	2aff      	cmp	r2, #255	; 0xff
9001d928:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001d92c:	d113      	bne.n	9001d956 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d92e:	0972      	lsrs	r2, r6, #5
9001d930:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001d934:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001d938:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d93c:	f025 0507 	bic.w	r5, r5, #7
9001d940:	4315      	orrs	r5, r2
9001d942:	4335      	orrs	r5, r6
9001d944:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001d948:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d94a:	f108 0801 	add.w	r8, r8, #1
9001d94e:	4410      	add	r0, r2
9001d950:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d952:	4411      	add	r1, r2
9001d954:	e7c9      	b.n	9001d8ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001d956:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d95a:	fa1f fa82 	uxth.w	sl, r2
9001d95e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001d962:	43d2      	mvns	r2, r2
9001d964:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d968:	fb17 f70a 	smulbb	r7, r7, sl
9001d96c:	b2d2      	uxtb	r2, r2
9001d96e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d972:	b2f6      	uxtb	r6, r6
9001d974:	b2ed      	uxtb	r5, r5
9001d976:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d97a:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d97e:	fb16 f60a 	smulbb	r6, r6, sl
9001d982:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d986:	fa1f fc8c 	uxth.w	ip, ip
9001d98a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d98e:	fb15 f50a 	smulbb	r5, r5, sl
9001d992:	fa5f fe8e 	uxtb.w	lr, lr
9001d996:	fb0e 6602 	mla	r6, lr, r2, r6
9001d99a:	fb07 5702 	mla	r7, r7, r2, r5
9001d99e:	f10c 0201 	add.w	r2, ip, #1
9001d9a2:	b2b6      	uxth	r6, r6
9001d9a4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d9a8:	1c75      	adds	r5, r6, #1
9001d9aa:	b2bf      	uxth	r7, r7
9001d9ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d9b0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d9b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d9b8:	ea45 0c0c 	orr.w	ip, r5, ip
9001d9bc:	1c7d      	adds	r5, r7, #1
9001d9be:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001d9c2:	096d      	lsrs	r5, r5, #5
9001d9c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d9c8:	ea4c 0c05 	orr.w	ip, ip, r5
9001d9cc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001d9d0:	e7ba      	b.n	9001d948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d9d2:	b007      	add	sp, #28
9001d9d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d9d8:	24039adc 	.word	0x24039adc

9001d9dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d9e0:	b087      	sub	sp, #28
9001d9e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d9e6:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001dcf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001d9ea:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d9ec:	9101      	str	r1, [sp, #4]
9001d9ee:	9205      	str	r2, [sp, #20]
9001d9f0:	6841      	ldr	r1, [r0, #4]
9001d9f2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001d9f6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001d9fa:	fb01 2404 	mla	r4, r1, r4, r2
9001d9fe:	6802      	ldr	r2, [r0, #0]
9001da00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001da04:	f8db 2008 	ldr.w	r2, [fp, #8]
9001da08:	3201      	adds	r2, #1
9001da0a:	f022 0201 	bic.w	r2, r2, #1
9001da0e:	9202      	str	r2, [sp, #8]
9001da10:	f8db 2000 	ldr.w	r2, [fp]
9001da14:	9203      	str	r2, [sp, #12]
9001da16:	9a01      	ldr	r2, [sp, #4]
9001da18:	2a00      	cmp	r2, #0
9001da1a:	dc03      	bgt.n	9001da24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001da1c:	9a05      	ldr	r2, [sp, #20]
9001da1e:	2a00      	cmp	r2, #0
9001da20:	f340 8162 	ble.w	9001dce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001da24:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001da26:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001da2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001da2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001da30:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001da34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001da38:	2b00      	cmp	r3, #0
9001da3a:	dd0e      	ble.n	9001da5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001da3c:	1402      	asrs	r2, r0, #16
9001da3e:	d405      	bmi.n	9001da4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001da40:	42ba      	cmp	r2, r7
9001da42:	da03      	bge.n	9001da4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001da44:	140a      	asrs	r2, r1, #16
9001da46:	d401      	bmi.n	9001da4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001da48:	42b2      	cmp	r2, r6
9001da4a:	db07      	blt.n	9001da5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001da4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001da4e:	3b01      	subs	r3, #1
9001da50:	3402      	adds	r4, #2
9001da52:	4410      	add	r0, r2
9001da54:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001da56:	4411      	add	r1, r2
9001da58:	e7ee      	b.n	9001da38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001da5a:	d017      	beq.n	9001da8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001da5c:	1e5a      	subs	r2, r3, #1
9001da5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001da60:	fb05 0502 	mla	r5, r5, r2, r0
9001da64:	142d      	asrs	r5, r5, #16
9001da66:	d409      	bmi.n	9001da7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001da68:	42bd      	cmp	r5, r7
9001da6a:	da07      	bge.n	9001da7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001da6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001da6e:	fb05 1202 	mla	r2, r5, r2, r1
9001da72:	1412      	asrs	r2, r2, #16
9001da74:	d402      	bmi.n	9001da7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001da76:	42b2      	cmp	r2, r6
9001da78:	f2c0 80c3 	blt.w	9001dc02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001da7c:	2500      	movs	r5, #0
9001da7e:	195a      	adds	r2, r3, r5
9001da80:	2a00      	cmp	r2, #0
9001da82:	dc3f      	bgt.n	9001db04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001da84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001da88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001da8c:	9b01      	ldr	r3, [sp, #4]
9001da8e:	2b00      	cmp	r3, #0
9001da90:	f340 812a 	ble.w	9001dce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001da94:	ee30 0a04 	vadd.f32	s0, s0, s8
9001da98:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001da9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001da9e:	eeb0 6a62 	vmov.f32	s12, s5
9001daa2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001daa6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001daaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001daae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001dab2:	eeb0 6a43 	vmov.f32	s12, s6
9001dab6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001daba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001dabe:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dac2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dac6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001daca:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dace:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dad2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dad6:	ee12 2a90 	vmov	r2, s5
9001dada:	eef0 2a47 	vmov.f32	s5, s14
9001dade:	fb92 f3f3 	sdiv	r3, r2, r3
9001dae2:	ee13 2a10 	vmov	r2, s6
9001dae6:	9313      	str	r3, [sp, #76]	; 0x4c
9001dae8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001daea:	eeb0 3a67 	vmov.f32	s6, s15
9001daee:	fb92 f3f3 	sdiv	r3, r2, r3
9001daf2:	9314      	str	r3, [sp, #80]	; 0x50
9001daf4:	9b01      	ldr	r3, [sp, #4]
9001daf6:	9a05      	ldr	r2, [sp, #20]
9001daf8:	3b01      	subs	r3, #1
9001dafa:	9301      	str	r3, [sp, #4]
9001dafc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dafe:	bf08      	it	eq
9001db00:	4613      	moveq	r3, r2
9001db02:	e788      	b.n	9001da16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001db04:	1406      	asrs	r6, r0, #16
9001db06:	d42c      	bmi.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001db08:	f8db 2008 	ldr.w	r2, [fp, #8]
9001db0c:	42b2      	cmp	r2, r6
9001db0e:	dd28      	ble.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001db10:	140f      	asrs	r7, r1, #16
9001db12:	d426      	bmi.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001db14:	f8db 200c 	ldr.w	r2, [fp, #12]
9001db18:	42ba      	cmp	r2, r7
9001db1a:	dd22      	ble.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001db1c:	9a02      	ldr	r2, [sp, #8]
9001db1e:	fb07 6602 	mla	r6, r7, r2, r6
9001db22:	9f03      	ldr	r7, [sp, #12]
9001db24:	0872      	lsrs	r2, r6, #1
9001db26:	07f6      	lsls	r6, r6, #31
9001db28:	5cba      	ldrb	r2, [r7, r2]
9001db2a:	bf54      	ite	pl
9001db2c:	f002 020f 	andpl.w	r2, r2, #15
9001db30:	1112      	asrmi	r2, r2, #4
9001db32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001db36:	b2d2      	uxtb	r2, r2
9001db38:	2aff      	cmp	r2, #255	; 0xff
9001db3a:	d118      	bne.n	9001db6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001db3c:	f06f 0601 	mvn.w	r6, #1
9001db40:	f8d8 2000 	ldr.w	r2, [r8]
9001db44:	fb06 f705 	mul.w	r7, r6, r5
9001db48:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001db4c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001db50:	0956      	lsrs	r6, r2, #5
9001db52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001db56:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001db5a:	ea4c 0606 	orr.w	r6, ip, r6
9001db5e:	4316      	orrs	r6, r2
9001db60:	53e6      	strh	r6, [r4, r7]
9001db62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001db64:	3d01      	subs	r5, #1
9001db66:	4410      	add	r0, r2
9001db68:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001db6a:	4411      	add	r1, r2
9001db6c:	e787      	b.n	9001da7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001db6e:	2a00      	cmp	r2, #0
9001db70:	d0f7      	beq.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001db72:	f06f 0601 	mvn.w	r6, #1
9001db76:	f8d8 c000 	ldr.w	ip, [r8]
9001db7a:	fa1f f982 	uxth.w	r9, r2
9001db7e:	43d2      	mvns	r2, r2
9001db80:	436e      	muls	r6, r5
9001db82:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001db86:	b2d2      	uxtb	r2, r2
9001db88:	f834 e006 	ldrh.w	lr, [r4, r6]
9001db8c:	fb1a fa09 	smulbb	sl, sl, r9
9001db90:	9604      	str	r6, [sp, #16]
9001db92:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001db96:	ea4f 272e 	mov.w	r7, lr, asr #8
9001db9a:	fb16 f609 	smulbb	r6, r6, r9
9001db9e:	fa5f fc8c 	uxtb.w	ip, ip
9001dba2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001dba6:	fb1c fc09 	smulbb	ip, ip, r9
9001dbaa:	fb07 6702 	mla	r7, r7, r2, r6
9001dbae:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001dbb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dbb6:	b2bf      	uxth	r7, r7
9001dbb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001dbbc:	fa5f fe8e 	uxtb.w	lr, lr
9001dbc0:	fb06 a602 	mla	r6, r6, r2, sl
9001dbc4:	fb0e cc02 	mla	ip, lr, r2, ip
9001dbc8:	1c7a      	adds	r2, r7, #1
9001dbca:	b2b6      	uxth	r6, r6
9001dbcc:	fa1f fc8c 	uxth.w	ip, ip
9001dbd0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001dbd4:	9a04      	ldr	r2, [sp, #16]
9001dbd6:	f10c 0a01 	add.w	sl, ip, #1
9001dbda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001dbde:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001dbe2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dbe6:	ea4a 0707 	orr.w	r7, sl, r7
9001dbea:	f106 0a01 	add.w	sl, r6, #1
9001dbee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dbf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dbf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001dbfa:	ea47 070a 	orr.w	r7, r7, sl
9001dbfe:	52a7      	strh	r7, [r4, r2]
9001dc00:	e7af      	b.n	9001db62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc02:	f04f 0e00 	mov.w	lr, #0
9001dc06:	eba3 020e 	sub.w	r2, r3, lr
9001dc0a:	2a00      	cmp	r2, #0
9001dc0c:	f77f af3a 	ble.w	9001da84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001dc10:	1402      	asrs	r2, r0, #16
9001dc12:	9e02      	ldr	r6, [sp, #8]
9001dc14:	140d      	asrs	r5, r1, #16
9001dc16:	fb06 2505 	mla	r5, r6, r5, r2
9001dc1a:	9e03      	ldr	r6, [sp, #12]
9001dc1c:	086a      	lsrs	r2, r5, #1
9001dc1e:	07ed      	lsls	r5, r5, #31
9001dc20:	5cb2      	ldrb	r2, [r6, r2]
9001dc22:	bf54      	ite	pl
9001dc24:	f002 020f 	andpl.w	r2, r2, #15
9001dc28:	1112      	asrmi	r2, r2, #4
9001dc2a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001dc2e:	b2d2      	uxtb	r2, r2
9001dc30:	2aff      	cmp	r2, #255	; 0xff
9001dc32:	d115      	bne.n	9001dc60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001dc34:	f8d8 5000 	ldr.w	r5, [r8]
9001dc38:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001dc3c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001dc40:	096a      	lsrs	r2, r5, #5
9001dc42:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001dc46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dc4a:	4332      	orrs	r2, r6
9001dc4c:	432a      	orrs	r2, r5
9001dc4e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001dc52:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dc54:	f10e 0e01 	add.w	lr, lr, #1
9001dc58:	4410      	add	r0, r2
9001dc5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dc5c:	4411      	add	r1, r2
9001dc5e:	e7d2      	b.n	9001dc06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001dc60:	2a00      	cmp	r2, #0
9001dc62:	d0f6      	beq.n	9001dc52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001dc64:	f8d8 7000 	ldr.w	r7, [r8]
9001dc68:	fa1f f982 	uxth.w	r9, r2
9001dc6c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001dc70:	43d2      	mvns	r2, r2
9001dc72:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001dc76:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001dc7a:	ea4f 262c 	mov.w	r6, ip, asr #8
9001dc7e:	fb15 f509 	smulbb	r5, r5, r9
9001dc82:	b2d2      	uxtb	r2, r2
9001dc84:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001dc88:	b2ff      	uxtb	r7, r7
9001dc8a:	fb1a fa09 	smulbb	sl, sl, r9
9001dc8e:	fb06 5602 	mla	r6, r6, r2, r5
9001dc92:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001dc96:	fb17 f709 	smulbb	r7, r7, r9
9001dc9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dc9e:	b2b6      	uxth	r6, r6
9001dca0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001dca4:	fa5f fc8c 	uxtb.w	ip, ip
9001dca8:	fb05 a502 	mla	r5, r5, r2, sl
9001dcac:	fb0c 7702 	mla	r7, ip, r2, r7
9001dcb0:	1c72      	adds	r2, r6, #1
9001dcb2:	b2ad      	uxth	r5, r5
9001dcb4:	b2bf      	uxth	r7, r7
9001dcb6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001dcba:	f107 0a01 	add.w	sl, r7, #1
9001dcbe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001dcc2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001dcc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dcca:	ea4a 0606 	orr.w	r6, sl, r6
9001dcce:	f105 0a01 	add.w	sl, r5, #1
9001dcd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dcd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dcda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001dcde:	ea46 060a 	orr.w	r6, r6, sl
9001dce2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001dce6:	e7b4      	b.n	9001dc52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001dce8:	b007      	add	sp, #28
9001dcea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dcee:	bf00      	nop
9001dcf0:	24039adc 	.word	0x24039adc

9001dcf4 <_ZN8touchgfx8LCD16bppD1Ev>:
9001dcf4:	4770      	bx	lr

9001dcf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001dcf6:	4770      	bx	lr

9001dcf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001dcf8:	4770      	bx	lr

9001dcfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001dcfa:	4770      	bx	lr

9001dcfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001dcfc:	4770      	bx	lr

9001dcfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001dcfe:	4770      	bx	lr

9001dd00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001dd00:	4770      	bx	lr

9001dd02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001dd02:	4770      	bx	lr

9001dd04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001dd04:	4770      	bx	lr

9001dd06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001dd06:	4770      	bx	lr

9001dd08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001dd08:	4770      	bx	lr

9001dd0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001dd0a:	4770      	bx	lr

9001dd0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001dd0c:	4770      	bx	lr

9001dd0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001dd0e:	4770      	bx	lr

9001dd10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001dd10:	4770      	bx	lr

9001dd12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001dd12:	4770      	bx	lr

9001dd14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001dd14:	4770      	bx	lr

9001dd16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001dd16:	4770      	bx	lr

9001dd18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001dd18:	4770      	bx	lr

9001dd1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001dd1a:	4770      	bx	lr

9001dd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001dd1c:	4770      	bx	lr

9001dd1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001dd1e:	4770      	bx	lr

9001dd20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001dd20:	4770      	bx	lr

9001dd22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001dd22:	4770      	bx	lr

9001dd24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001dd24:	4770      	bx	lr

9001dd26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001dd26:	4770      	bx	lr

9001dd28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001dd28:	4770      	bx	lr

9001dd2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001dd2a:	4770      	bx	lr

9001dd2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001dd2c:	4770      	bx	lr

9001dd2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001dd2e:	4770      	bx	lr

9001dd30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001dd30:	4770      	bx	lr

9001dd32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001dd32:	4770      	bx	lr

9001dd34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001dd34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001dd38:	b088      	sub	sp, #32
9001dd3a:	4606      	mov	r6, r0
9001dd3c:	4688      	mov	r8, r1
9001dd3e:	4691      	mov	r9, r2
9001dd40:	ac08      	add	r4, sp, #32
9001dd42:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001dd46:	4620      	mov	r0, r4
9001dd48:	f7fd fc64 	bl	9001b614 <_ZNK8touchgfx6Bitmap7getDataEv>
9001dd4c:	6833      	ldr	r3, [r6, #0]
9001dd4e:	4605      	mov	r5, r0
9001dd50:	4620      	mov	r0, r4
9001dd52:	699f      	ldr	r7, [r3, #24]
9001dd54:	f7fd fb72 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001dd58:	4682      	mov	sl, r0
9001dd5a:	4620      	mov	r0, r4
9001dd5c:	f7fd fba2 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001dd60:	9500      	str	r5, [sp, #0]
9001dd62:	464b      	mov	r3, r9
9001dd64:	4642      	mov	r2, r8
9001dd66:	4631      	mov	r1, r6
9001dd68:	e9cd a001 	strd	sl, r0, [sp, #4]
9001dd6c:	a806      	add	r0, sp, #24
9001dd6e:	47b8      	blx	r7
9001dd70:	4628      	mov	r0, r5
9001dd72:	b008      	add	sp, #32
9001dd74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001dd78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001dd78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001dd7c:	2300      	movs	r3, #0
9001dd7e:	9300      	str	r3, [sp, #0]
9001dd80:	4b3d      	ldr	r3, [pc, #244]	; (9001de78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001dd82:	781b      	ldrb	r3, [r3, #0]
9001dd84:	2b00      	cmp	r3, #0
9001dd86:	d137      	bne.n	9001ddf8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001dd88:	4a3c      	ldr	r2, [pc, #240]	; (9001de7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001dd8a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001dd8e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001dd92:	2b00      	cmp	r3, #0
9001dd94:	d132      	bne.n	9001ddfc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001dd96:	4b3a      	ldr	r3, [pc, #232]	; (9001de80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001dd98:	f9b3 3000 	ldrsh.w	r3, [r3]
9001dd9c:	ac02      	add	r4, sp, #8
9001dd9e:	6808      	ldr	r0, [r1, #0]
9001dda0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001dda4:	ab02      	add	r3, sp, #8
9001dda6:	6849      	ldr	r1, [r1, #4]
9001dda8:	4d36      	ldr	r5, [pc, #216]	; (9001de84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001ddaa:	c303      	stmia	r3!, {r0, r1}
9001ddac:	4669      	mov	r1, sp
9001ddae:	4620      	mov	r0, r4
9001ddb0:	f7fa f828 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ddb4:	4668      	mov	r0, sp
9001ddb6:	f7f9 ffe1 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ddba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001ddbe:	f8bd 2000 	ldrh.w	r2, [sp]
9001ddc2:	462f      	mov	r7, r5
9001ddc4:	6828      	ldr	r0, [r5, #0]
9001ddc6:	4413      	add	r3, r2
9001ddc8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ddcc:	f8ad 3008 	strh.w	r3, [sp, #8]
9001ddd0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001ddd4:	4413      	add	r3, r2
9001ddd6:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ddda:	6803      	ldr	r3, [r0, #0]
9001dddc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ddde:	4798      	blx	r3
9001dde0:	f010 0f01 	tst.w	r0, #1
9001dde4:	d00c      	beq.n	9001de00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001dde6:	6828      	ldr	r0, [r5, #0]
9001dde8:	6803      	ldr	r3, [r0, #0]
9001ddea:	e894 0006 	ldmia.w	r4, {r1, r2}
9001ddee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001ddf0:	4798      	blx	r3
9001ddf2:	b004      	add	sp, #16
9001ddf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ddf8:	4a21      	ldr	r2, [pc, #132]	; (9001de80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ddfa:	e7c6      	b.n	9001dd8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001ddfc:	4b1f      	ldr	r3, [pc, #124]	; (9001de7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ddfe:	e7cb      	b.n	9001dd98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001de00:	6838      	ldr	r0, [r7, #0]
9001de02:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001de06:	6803      	ldr	r3, [r0, #0]
9001de08:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001de0c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001de10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001de12:	4798      	blx	r3
9001de14:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001de18:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001de1c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001de20:	fb16 3602 	smlabb	r6, r6, r2, r3
9001de24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001de28:	6838      	ldr	r0, [r7, #0]
9001de2a:	6803      	ldr	r3, [r0, #0]
9001de2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001de2e:	4798      	blx	r3
9001de30:	4a12      	ldr	r2, [pc, #72]	; (9001de7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001de32:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001de36:	8813      	ldrh	r3, [r2, #0]
9001de38:	4691      	mov	r9, r2
9001de3a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001de3e:	435d      	muls	r5, r3
9001de40:	fb03 1404 	mla	r4, r3, r4, r1
9001de44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001de48:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001de4c:	6838      	ldr	r0, [r7, #0]
9001de4e:	42ac      	cmp	r4, r5
9001de50:	6803      	ldr	r3, [r0, #0]
9001de52:	d20e      	bcs.n	9001de72 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001de54:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001de58:	4632      	mov	r2, r6
9001de5a:	4643      	mov	r3, r8
9001de5c:	4621      	mov	r1, r4
9001de5e:	47d0      	blx	sl
9001de60:	f8b9 3000 	ldrh.w	r3, [r9]
9001de64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001de68:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001de6c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001de70:	e7ec      	b.n	9001de4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001de72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001de74:	4798      	blx	r3
9001de76:	e7bc      	b.n	9001ddf2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001de78:	24039ac4 	.word	0x24039ac4
9001de7c:	24039ac6 	.word	0x24039ac6
9001de80:	24039ac8 	.word	0x24039ac8
9001de84:	24039acc 	.word	0x24039acc

9001de88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001de88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de8c:	b08b      	sub	sp, #44	; 0x2c
9001de8e:	460f      	mov	r7, r1
9001de90:	4616      	mov	r6, r2
9001de92:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001de96:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001de9a:	f1bb 0f00 	cmp.w	fp, #0
9001de9e:	d04a      	beq.n	9001df36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001dea0:	6810      	ldr	r0, [r2, #0]
9001dea2:	ad06      	add	r5, sp, #24
9001dea4:	6851      	ldr	r1, [r2, #4]
9001dea6:	c503      	stmia	r5!, {r0, r1}
9001dea8:	6818      	ldr	r0, [r3, #0]
9001deaa:	ad08      	add	r5, sp, #32
9001deac:	6859      	ldr	r1, [r3, #4]
9001deae:	c503      	stmia	r5!, {r0, r1}
9001deb0:	a806      	add	r0, sp, #24
9001deb2:	f7f9 ff63 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001deb6:	4631      	mov	r1, r6
9001deb8:	a808      	add	r0, sp, #32
9001deba:	f7f9 ffa3 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001debe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001dec2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001dec6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001deca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001dece:	fb16 2103 	smlabb	r1, r6, r3, r2
9001ded2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001ded6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001deda:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001dede:	4f5f      	ldr	r7, [pc, #380]	; (9001e05c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001dee0:	440a      	add	r2, r1
9001dee2:	6838      	ldr	r0, [r7, #0]
9001dee4:	46b9      	mov	r9, r7
9001dee6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001deea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001deee:	4413      	add	r3, r2
9001def0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001def4:	6803      	ldr	r3, [r0, #0]
9001def6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001def8:	4798      	blx	r3
9001defa:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001defe:	d11d      	bne.n	9001df3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001df00:	b9fc      	cbnz	r4, 9001df42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001df02:	f010 0f01 	tst.w	r0, #1
9001df06:	d01c      	beq.n	9001df42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001df08:	f8d9 0000 	ldr.w	r0, [r9]
9001df0c:	2700      	movs	r7, #0
9001df0e:	b2ad      	uxth	r5, r5
9001df10:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001df14:	6801      	ldr	r1, [r0, #0]
9001df16:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001df1a:	f8cd b00c 	str.w	fp, [sp, #12]
9001df1e:	9501      	str	r5, [sp, #4]
9001df20:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001df24:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001df28:	9402      	str	r4, [sp, #8]
9001df2a:	fa1f f488 	uxth.w	r4, r8
9001df2e:	9400      	str	r4, [sp, #0]
9001df30:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001df32:	4631      	mov	r1, r6
9001df34:	47a0      	blx	r4
9001df36:	b00b      	add	sp, #44	; 0x2c
9001df38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001df3c:	f010 0f04 	tst.w	r0, #4
9001df40:	e7e1      	b.n	9001df06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001df42:	f8d9 0000 	ldr.w	r0, [r9]
9001df46:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001df4a:	6803      	ldr	r3, [r0, #0]
9001df4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001df4e:	4798      	blx	r3
9001df50:	4b43      	ldr	r3, [pc, #268]	; (9001e060 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001df52:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001df56:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001df5a:	881a      	ldrh	r2, [r3, #0]
9001df5c:	469a      	mov	sl, r3
9001df5e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001df62:	fb05 f502 	mul.w	r5, r5, r2
9001df66:	fb02 1404 	mla	r4, r2, r4, r1
9001df6a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001df6e:	d059      	beq.n	9001e024 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001df70:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001df74:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001df78:	fa1f f28b 	uxth.w	r2, fp
9001df7c:	469e      	mov	lr, r3
9001df7e:	fa1f f989 	uxth.w	r9, r9
9001df82:	42ac      	cmp	r4, r5
9001df84:	d264      	bcs.n	9001e050 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001df86:	eb04 0a07 	add.w	sl, r4, r7
9001df8a:	4554      	cmp	r4, sl
9001df8c:	d23d      	bcs.n	9001e00a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001df8e:	8821      	ldrh	r1, [r4, #0]
9001df90:	f836 3b02 	ldrh.w	r3, [r6], #2
9001df94:	1208      	asrs	r0, r1, #8
9001df96:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001df9a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001df9e:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001dfa2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001dfa6:	00c9      	lsls	r1, r1, #3
9001dfa8:	fb10 f009 	smulbb	r0, r0, r9
9001dfac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001dfb0:	b2c9      	uxtb	r1, r1
9001dfb2:	fb0c 0c02 	mla	ip, ip, r2, r0
9001dfb6:	10d8      	asrs	r0, r3, #3
9001dfb8:	fb1b fb09 	smulbb	fp, fp, r9
9001dfbc:	00db      	lsls	r3, r3, #3
9001dfbe:	fa1f fc8c 	uxth.w	ip, ip
9001dfc2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001dfc6:	fb11 f109 	smulbb	r1, r1, r9
9001dfca:	b2db      	uxtb	r3, r3
9001dfcc:	fb00 b002 	mla	r0, r0, r2, fp
9001dfd0:	f10c 0b01 	add.w	fp, ip, #1
9001dfd4:	fb03 1302 	mla	r3, r3, r2, r1
9001dfd8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001dfdc:	b29b      	uxth	r3, r3
9001dfde:	b280      	uxth	r0, r0
9001dfe0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001dfe4:	f103 0c01 	add.w	ip, r3, #1
9001dfe8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001dfec:	1c43      	adds	r3, r0, #1
9001dfee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001dff2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001dff6:	0940      	lsrs	r0, r0, #5
9001dff8:	ea4c 0c0b 	orr.w	ip, ip, fp
9001dffc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001e000:	ea4c 0c00 	orr.w	ip, ip, r0
9001e004:	f824 cb02 	strh.w	ip, [r4], #2
9001e008:	e7bf      	b.n	9001df8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e00a:	f8be 3000 	ldrh.w	r3, [lr]
9001e00e:	eba3 0308 	sub.w	r3, r3, r8
9001e012:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e016:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e01a:	eba3 0308 	sub.w	r3, r3, r8
9001e01e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e022:	e7ae      	b.n	9001df82 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e024:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e028:	f8d9 0000 	ldr.w	r0, [r9]
9001e02c:	42ac      	cmp	r4, r5
9001e02e:	6803      	ldr	r3, [r0, #0]
9001e030:	d20e      	bcs.n	9001e050 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e032:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001e036:	4632      	mov	r2, r6
9001e038:	463b      	mov	r3, r7
9001e03a:	4621      	mov	r1, r4
9001e03c:	47c0      	blx	r8
9001e03e:	f8ba 3000 	ldrh.w	r3, [sl]
9001e042:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e046:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e04a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e04e:	e7eb      	b.n	9001e028 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e050:	4b02      	ldr	r3, [pc, #8]	; (9001e05c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e052:	6818      	ldr	r0, [r3, #0]
9001e054:	6803      	ldr	r3, [r0, #0]
9001e056:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e058:	4798      	blx	r3
9001e05a:	e76c      	b.n	9001df36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e05c:	24039acc 	.word	0x24039acc
9001e060:	24039ac6 	.word	0x24039ac6

9001e064 <_ZN8touchgfx8LCD16bppD0Ev>:
9001e064:	b510      	push	{r4, lr}
9001e066:	4604      	mov	r4, r0
9001e068:	2184      	movs	r1, #132	; 0x84
9001e06a:	f00b f97b 	bl	90029364 <_ZdlPvj>
9001e06e:	4620      	mov	r0, r4
9001e070:	bd10      	pop	{r4, pc}

9001e072 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e072:	b510      	push	{r4, lr}
9001e074:	4604      	mov	r4, r0
9001e076:	2104      	movs	r1, #4
9001e078:	f00b f974 	bl	90029364 <_ZdlPvj>
9001e07c:	4620      	mov	r0, r4
9001e07e:	bd10      	pop	{r4, pc}

9001e080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001e080:	b510      	push	{r4, lr}
9001e082:	4604      	mov	r4, r0
9001e084:	2104      	movs	r1, #4
9001e086:	f00b f96d 	bl	90029364 <_ZdlPvj>
9001e08a:	4620      	mov	r0, r4
9001e08c:	bd10      	pop	{r4, pc}

9001e08e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001e08e:	b510      	push	{r4, lr}
9001e090:	4604      	mov	r4, r0
9001e092:	f640 0144 	movw	r1, #2116	; 0x844
9001e096:	f00b f965 	bl	90029364 <_ZdlPvj>
9001e09a:	4620      	mov	r0, r4
9001e09c:	bd10      	pop	{r4, pc}

9001e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e09e:	b510      	push	{r4, lr}
9001e0a0:	4604      	mov	r4, r0
9001e0a2:	2104      	movs	r1, #4
9001e0a4:	f00b f95e 	bl	90029364 <_ZdlPvj>
9001e0a8:	4620      	mov	r0, r4
9001e0aa:	bd10      	pop	{r4, pc}

9001e0ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e0ac:	b510      	push	{r4, lr}
9001e0ae:	4604      	mov	r4, r0
9001e0b0:	2104      	movs	r1, #4
9001e0b2:	f00b f957 	bl	90029364 <_ZdlPvj>
9001e0b6:	4620      	mov	r0, r4
9001e0b8:	bd10      	pop	{r4, pc}

9001e0ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e0ba:	b510      	push	{r4, lr}
9001e0bc:	4604      	mov	r4, r0
9001e0be:	2104      	movs	r1, #4
9001e0c0:	f00b f950 	bl	90029364 <_ZdlPvj>
9001e0c4:	4620      	mov	r0, r4
9001e0c6:	bd10      	pop	{r4, pc}

9001e0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e0c8:	b510      	push	{r4, lr}
9001e0ca:	4604      	mov	r4, r0
9001e0cc:	2104      	movs	r1, #4
9001e0ce:	f00b f949 	bl	90029364 <_ZdlPvj>
9001e0d2:	4620      	mov	r0, r4
9001e0d4:	bd10      	pop	{r4, pc}

9001e0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e0d6:	b510      	push	{r4, lr}
9001e0d8:	4604      	mov	r4, r0
9001e0da:	2104      	movs	r1, #4
9001e0dc:	f00b f942 	bl	90029364 <_ZdlPvj>
9001e0e0:	4620      	mov	r0, r4
9001e0e2:	bd10      	pop	{r4, pc}

9001e0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001e0e4:	b510      	push	{r4, lr}
9001e0e6:	4604      	mov	r4, r0
9001e0e8:	2104      	movs	r1, #4
9001e0ea:	f00b f93b 	bl	90029364 <_ZdlPvj>
9001e0ee:	4620      	mov	r0, r4
9001e0f0:	bd10      	pop	{r4, pc}

9001e0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e0f2:	b510      	push	{r4, lr}
9001e0f4:	4604      	mov	r4, r0
9001e0f6:	2104      	movs	r1, #4
9001e0f8:	f00b f934 	bl	90029364 <_ZdlPvj>
9001e0fc:	4620      	mov	r0, r4
9001e0fe:	bd10      	pop	{r4, pc}

9001e100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001e100:	b510      	push	{r4, lr}
9001e102:	4604      	mov	r4, r0
9001e104:	2104      	movs	r1, #4
9001e106:	f00b f92d 	bl	90029364 <_ZdlPvj>
9001e10a:	4620      	mov	r0, r4
9001e10c:	bd10      	pop	{r4, pc}

9001e10e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e10e:	b510      	push	{r4, lr}
9001e110:	4604      	mov	r4, r0
9001e112:	2104      	movs	r1, #4
9001e114:	f00b f926 	bl	90029364 <_ZdlPvj>
9001e118:	4620      	mov	r0, r4
9001e11a:	bd10      	pop	{r4, pc}

9001e11c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e11c:	b510      	push	{r4, lr}
9001e11e:	4604      	mov	r4, r0
9001e120:	2104      	movs	r1, #4
9001e122:	f00b f91f 	bl	90029364 <_ZdlPvj>
9001e126:	4620      	mov	r0, r4
9001e128:	bd10      	pop	{r4, pc}

9001e12a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e12a:	b510      	push	{r4, lr}
9001e12c:	4604      	mov	r4, r0
9001e12e:	2104      	movs	r1, #4
9001e130:	f00b f918 	bl	90029364 <_ZdlPvj>
9001e134:	4620      	mov	r0, r4
9001e136:	bd10      	pop	{r4, pc}

9001e138 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e138:	b510      	push	{r4, lr}
9001e13a:	4604      	mov	r4, r0
9001e13c:	2104      	movs	r1, #4
9001e13e:	f00b f911 	bl	90029364 <_ZdlPvj>
9001e142:	4620      	mov	r0, r4
9001e144:	bd10      	pop	{r4, pc}

9001e146 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e146:	b510      	push	{r4, lr}
9001e148:	4604      	mov	r4, r0
9001e14a:	2104      	movs	r1, #4
9001e14c:	f00b f90a 	bl	90029364 <_ZdlPvj>
9001e150:	4620      	mov	r0, r4
9001e152:	bd10      	pop	{r4, pc}

9001e154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e154:	b510      	push	{r4, lr}
9001e156:	4604      	mov	r4, r0
9001e158:	2104      	movs	r1, #4
9001e15a:	f00b f903 	bl	90029364 <_ZdlPvj>
9001e15e:	4620      	mov	r0, r4
9001e160:	bd10      	pop	{r4, pc}

9001e162 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e162:	b510      	push	{r4, lr}
9001e164:	4604      	mov	r4, r0
9001e166:	2104      	movs	r1, #4
9001e168:	f00b f8fc 	bl	90029364 <_ZdlPvj>
9001e16c:	4620      	mov	r0, r4
9001e16e:	bd10      	pop	{r4, pc}

9001e170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e170:	b510      	push	{r4, lr}
9001e172:	4604      	mov	r4, r0
9001e174:	2104      	movs	r1, #4
9001e176:	f00b f8f5 	bl	90029364 <_ZdlPvj>
9001e17a:	4620      	mov	r0, r4
9001e17c:	bd10      	pop	{r4, pc}

9001e17e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e17e:	b510      	push	{r4, lr}
9001e180:	4604      	mov	r4, r0
9001e182:	2104      	movs	r1, #4
9001e184:	f00b f8ee 	bl	90029364 <_ZdlPvj>
9001e188:	4620      	mov	r0, r4
9001e18a:	bd10      	pop	{r4, pc}

9001e18c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e18c:	b510      	push	{r4, lr}
9001e18e:	4604      	mov	r4, r0
9001e190:	2104      	movs	r1, #4
9001e192:	f00b f8e7 	bl	90029364 <_ZdlPvj>
9001e196:	4620      	mov	r0, r4
9001e198:	bd10      	pop	{r4, pc}

9001e19a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e19a:	b510      	push	{r4, lr}
9001e19c:	4604      	mov	r4, r0
9001e19e:	2104      	movs	r1, #4
9001e1a0:	f00b f8e0 	bl	90029364 <_ZdlPvj>
9001e1a4:	4620      	mov	r0, r4
9001e1a6:	bd10      	pop	{r4, pc}

9001e1a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e1a8:	b510      	push	{r4, lr}
9001e1aa:	4604      	mov	r4, r0
9001e1ac:	2104      	movs	r1, #4
9001e1ae:	f00b f8d9 	bl	90029364 <_ZdlPvj>
9001e1b2:	4620      	mov	r0, r4
9001e1b4:	bd10      	pop	{r4, pc}

9001e1b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e1b6:	b510      	push	{r4, lr}
9001e1b8:	4604      	mov	r4, r0
9001e1ba:	2104      	movs	r1, #4
9001e1bc:	f00b f8d2 	bl	90029364 <_ZdlPvj>
9001e1c0:	4620      	mov	r0, r4
9001e1c2:	bd10      	pop	{r4, pc}

9001e1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e1c4:	b510      	push	{r4, lr}
9001e1c6:	4604      	mov	r4, r0
9001e1c8:	2104      	movs	r1, #4
9001e1ca:	f00b f8cb 	bl	90029364 <_ZdlPvj>
9001e1ce:	4620      	mov	r0, r4
9001e1d0:	bd10      	pop	{r4, pc}

9001e1d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e1d2:	b510      	push	{r4, lr}
9001e1d4:	4604      	mov	r4, r0
9001e1d6:	2104      	movs	r1, #4
9001e1d8:	f00b f8c4 	bl	90029364 <_ZdlPvj>
9001e1dc:	4620      	mov	r0, r4
9001e1de:	bd10      	pop	{r4, pc}

9001e1e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e1e0:	b510      	push	{r4, lr}
9001e1e2:	4604      	mov	r4, r0
9001e1e4:	2104      	movs	r1, #4
9001e1e6:	f00b f8bd 	bl	90029364 <_ZdlPvj>
9001e1ea:	4620      	mov	r0, r4
9001e1ec:	bd10      	pop	{r4, pc}

9001e1ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001e1ee:	b510      	push	{r4, lr}
9001e1f0:	4604      	mov	r4, r0
9001e1f2:	2104      	movs	r1, #4
9001e1f4:	f00b f8b6 	bl	90029364 <_ZdlPvj>
9001e1f8:	4620      	mov	r0, r4
9001e1fa:	bd10      	pop	{r4, pc}

9001e1fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001e1fc:	b510      	push	{r4, lr}
9001e1fe:	4604      	mov	r4, r0
9001e200:	2104      	movs	r1, #4
9001e202:	f00b f8af 	bl	90029364 <_ZdlPvj>
9001e206:	4620      	mov	r0, r4
9001e208:	bd10      	pop	{r4, pc}

9001e20a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001e20a:	b510      	push	{r4, lr}
9001e20c:	4604      	mov	r4, r0
9001e20e:	2104      	movs	r1, #4
9001e210:	f00b f8a8 	bl	90029364 <_ZdlPvj>
9001e214:	4620      	mov	r0, r4
9001e216:	bd10      	pop	{r4, pc}

9001e218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001e218:	b510      	push	{r4, lr}
9001e21a:	4604      	mov	r4, r0
9001e21c:	2104      	movs	r1, #4
9001e21e:	f00b f8a1 	bl	90029364 <_ZdlPvj>
9001e222:	4620      	mov	r0, r4
9001e224:	bd10      	pop	{r4, pc}
	...

9001e228 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e22c:	b08f      	sub	sp, #60	; 0x3c
9001e22e:	461c      	mov	r4, r3
9001e230:	9205      	str	r2, [sp, #20]
9001e232:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e236:	9100      	str	r1, [sp, #0]
9001e238:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001e23a:	9201      	str	r2, [sp, #4]
9001e23c:	2a00      	cmp	r2, #0
9001e23e:	f000 8116 	beq.w	9001e46e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001e242:	6820      	ldr	r0, [r4, #0]
9001e244:	aa0a      	add	r2, sp, #40	; 0x28
9001e246:	6861      	ldr	r1, [r4, #4]
9001e248:	c203      	stmia	r2!, {r0, r1}
9001e24a:	6818      	ldr	r0, [r3, #0]
9001e24c:	aa0c      	add	r2, sp, #48	; 0x30
9001e24e:	6859      	ldr	r1, [r3, #4]
9001e250:	c203      	stmia	r2!, {r0, r1}
9001e252:	a80a      	add	r0, sp, #40	; 0x28
9001e254:	f7f9 fd92 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e258:	4621      	mov	r1, r4
9001e25a:	a80c      	add	r0, sp, #48	; 0x30
9001e25c:	f7f9 fdd2 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e260:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e264:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001e268:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001e26c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001e270:	bfdb      	ittet	le
9001e272:	b2b3      	uxthle	r3, r6
9001e274:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001e278:	2301      	movgt	r3, #1
9001e27a:	fb92 f3f3 	sdivle	r3, r2, r3
9001e27e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e282:	441d      	add	r5, r3
9001e284:	fb92 f1f3 	sdiv	r1, r2, r3
9001e288:	fa1f fc81 	uxth.w	ip, r1
9001e28c:	3d01      	subs	r5, #1
9001e28e:	fb0c 2413 	mls	r4, ip, r3, r2
9001e292:	4661      	mov	r1, ip
9001e294:	fb14 f406 	smulbb	r4, r4, r6
9001e298:	4404      	add	r4, r0
9001e29a:	fb95 f5f3 	sdiv	r5, r5, r3
9001e29e:	b2a4      	uxth	r4, r4
9001e2a0:	b131      	cbz	r1, 9001e2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001e2a2:	9b05      	ldr	r3, [sp, #20]
9001e2a4:	9900      	ldr	r1, [sp, #0]
9001e2a6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e2aa:	ba1b      	rev	r3, r3
9001e2ac:	4419      	add	r1, r3
9001e2ae:	9100      	str	r1, [sp, #0]
9001e2b0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001e2b4:	b2ad      	uxth	r5, r5
9001e2b6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001e2ba:	4418      	add	r0, r3
9001e2bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e2c0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e2c4:	00ad      	lsls	r5, r5, #2
9001e2c6:	441a      	add	r2, r3
9001e2c8:	4b6a      	ldr	r3, [pc, #424]	; (9001e474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e2ca:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001e2ce:	6818      	ldr	r0, [r3, #0]
9001e2d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001e2d4:	6803      	ldr	r3, [r0, #0]
9001e2d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e2d8:	4798      	blx	r3
9001e2da:	4967      	ldr	r1, [pc, #412]	; (9001e478 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001e2dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e2e0:	2c00      	cmp	r4, #0
9001e2e2:	880b      	ldrh	r3, [r1, #0]
9001e2e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001e2e8:	bf0c      	ite	eq
9001e2ea:	46c6      	moveq	lr, r8
9001e2ec:	f04f 0e00 	movne.w	lr, #0
9001e2f0:	9109      	str	r1, [sp, #36]	; 0x24
9001e2f2:	fb03 c202 	mla	r2, r3, r2, ip
9001e2f6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e2fa:	4373      	muls	r3, r6
9001e2fc:	fa1f fe8e 	uxth.w	lr, lr
9001e300:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e304:	9103      	str	r1, [sp, #12]
9001e306:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e30a:	9306      	str	r3, [sp, #24]
9001e30c:	1d2b      	adds	r3, r5, #4
9001e30e:	9307      	str	r3, [sp, #28]
9001e310:	9b01      	ldr	r3, [sp, #4]
9001e312:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001e316:	2300      	movs	r3, #0
9001e318:	b292      	uxth	r2, r2
9001e31a:	9302      	str	r3, [sp, #8]
9001e31c:	9204      	str	r2, [sp, #16]
9001e31e:	9a06      	ldr	r2, [sp, #24]
9001e320:	4282      	cmp	r2, r0
9001e322:	f240 809f 	bls.w	9001e464 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e326:	b963      	cbnz	r3, 9001e342 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e328:	9b00      	ldr	r3, [sp, #0]
9001e32a:	781a      	ldrb	r2, [r3, #0]
9001e32c:	0993      	lsrs	r3, r2, #6
9001e32e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001e332:	9202      	str	r2, [sp, #8]
9001e334:	1e5a      	subs	r2, r3, #1
9001e336:	2a02      	cmp	r2, #2
9001e338:	d815      	bhi.n	9001e366 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e33a:	9a00      	ldr	r2, [sp, #0]
9001e33c:	b29b      	uxth	r3, r3
9001e33e:	3201      	adds	r2, #1
9001e340:	9200      	str	r2, [sp, #0]
9001e342:	b1b4      	cbz	r4, 9001e372 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e344:	429c      	cmp	r4, r3
9001e346:	bf91      	iteee	ls
9001e348:	1b1c      	subls	r4, r3, r4
9001e34a:	1ae4      	subhi	r4, r4, r3
9001e34c:	4671      	movhi	r1, lr
9001e34e:	f04f 0a00 	movhi.w	sl, #0
9001e352:	bf9b      	ittet	ls
9001e354:	fa1f fa84 	uxthls.w	sl, r4
9001e358:	2400      	movls	r4, #0
9001e35a:	b2a4      	uxthhi	r4, r4
9001e35c:	fa1f f188 	uxthls.w	r1, r8
9001e360:	4653      	mov	r3, sl
9001e362:	468e      	mov	lr, r1
9001e364:	e7db      	b.n	9001e31e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e366:	9a00      	ldr	r2, [sp, #0]
9001e368:	9b00      	ldr	r3, [sp, #0]
9001e36a:	3202      	adds	r2, #2
9001e36c:	785b      	ldrb	r3, [r3, #1]
9001e36e:	9200      	str	r2, [sp, #0]
9001e370:	e7e7      	b.n	9001e342 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e372:	2202      	movs	r2, #2
9001e374:	9907      	ldr	r1, [sp, #28]
9001e376:	4573      	cmp	r3, lr
9001e378:	4615      	mov	r5, r2
9001e37a:	9a02      	ldr	r2, [sp, #8]
9001e37c:	bf24      	itt	cs
9001e37e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e382:	46f1      	movcs	r9, lr
9001e384:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e388:	9905      	ldr	r1, [sp, #20]
9001e38a:	bf34      	ite	cc
9001e38c:	4699      	movcc	r9, r3
9001e38e:	fa1f fa8a 	uxthcs.w	sl, sl
9001e392:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e396:	bf38      	it	cc
9001e398:	ebae 0103 	subcc.w	r1, lr, r3
9001e39c:	9a01      	ldr	r2, [sp, #4]
9001e39e:	bf2e      	itee	cs
9001e3a0:	4621      	movcs	r1, r4
9001e3a2:	b289      	uxthcc	r1, r1
9001e3a4:	46a2      	movcc	sl, r4
9001e3a6:	2aff      	cmp	r2, #255	; 0xff
9001e3a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e3ac:	d105      	bne.n	9001e3ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e3ae:	4481      	add	r9, r0
9001e3b0:	4581      	cmp	r9, r0
9001e3b2:	d045      	beq.n	9001e440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e3b4:	f820 cb02 	strh.w	ip, [r0], #2
9001e3b8:	e7fa      	b.n	9001e3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e3ba:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e3be:	9d03      	ldr	r5, [sp, #12]
9001e3c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e3c4:	4481      	add	r9, r0
9001e3c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e3ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e3ce:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e3d2:	fa5f fc8c 	uxtb.w	ip, ip
9001e3d6:	436a      	muls	r2, r5
9001e3d8:	fb0b fb05 	mul.w	fp, fp, r5
9001e3dc:	fb0c fc05 	mul.w	ip, ip, r5
9001e3e0:	9208      	str	r2, [sp, #32]
9001e3e2:	4581      	cmp	r9, r0
9001e3e4:	d02c      	beq.n	9001e440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e3e6:	8802      	ldrh	r2, [r0, #0]
9001e3e8:	9d04      	ldr	r5, [sp, #16]
9001e3ea:	1216      	asrs	r6, r2, #8
9001e3ec:	9f04      	ldr	r7, [sp, #16]
9001e3ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e3f2:	fb16 f605 	smulbb	r6, r6, r5
9001e3f6:	9d08      	ldr	r5, [sp, #32]
9001e3f8:	442e      	add	r6, r5
9001e3fa:	10d5      	asrs	r5, r2, #3
9001e3fc:	00d2      	lsls	r2, r2, #3
9001e3fe:	b2b6      	uxth	r6, r6
9001e400:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e404:	b2d2      	uxtb	r2, r2
9001e406:	fb15 f507 	smulbb	r5, r5, r7
9001e40a:	fb12 f207 	smulbb	r2, r2, r7
9001e40e:	1c77      	adds	r7, r6, #1
9001e410:	445d      	add	r5, fp
9001e412:	4462      	add	r2, ip
9001e414:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e418:	b2ad      	uxth	r5, r5
9001e41a:	b292      	uxth	r2, r2
9001e41c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001e420:	1c57      	adds	r7, r2, #1
9001e422:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e426:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e42a:	4316      	orrs	r6, r2
9001e42c:	1c6a      	adds	r2, r5, #1
9001e42e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e432:	096d      	lsrs	r5, r5, #5
9001e434:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e438:	432e      	orrs	r6, r5
9001e43a:	f820 6b02 	strh.w	r6, [r0], #2
9001e43e:	e7d0      	b.n	9001e3e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e440:	4573      	cmp	r3, lr
9001e442:	d38d      	bcc.n	9001e360 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e444:	fa1f f188 	uxth.w	r1, r8
9001e448:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001e44c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e44e:	1a64      	subs	r4, r4, r1
9001e450:	881b      	ldrh	r3, [r3, #0]
9001e452:	b2a4      	uxth	r4, r4
9001e454:	eba3 0308 	sub.w	r3, r3, r8
9001e458:	2c00      	cmp	r4, #0
9001e45a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e45e:	bf18      	it	ne
9001e460:	2100      	movne	r1, #0
9001e462:	e77d      	b.n	9001e360 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e464:	4b03      	ldr	r3, [pc, #12]	; (9001e474 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e466:	6818      	ldr	r0, [r3, #0]
9001e468:	6803      	ldr	r3, [r0, #0]
9001e46a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e46c:	4798      	blx	r3
9001e46e:	b00f      	add	sp, #60	; 0x3c
9001e470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e474:	24039acc 	.word	0x24039acc
9001e478:	24039ac6 	.word	0x24039ac6

9001e47c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e480:	b09f      	sub	sp, #124	; 0x7c
9001e482:	461d      	mov	r5, r3
9001e484:	4604      	mov	r4, r0
9001e486:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e488:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001e48c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001e490:	9209      	str	r2, [sp, #36]	; 0x24
9001e492:	2a00      	cmp	r2, #0
9001e494:	f000 81ed 	beq.w	9001e872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e498:	6828      	ldr	r0, [r5, #0]
9001e49a:	aa1a      	add	r2, sp, #104	; 0x68
9001e49c:	6869      	ldr	r1, [r5, #4]
9001e49e:	c203      	stmia	r2!, {r0, r1}
9001e4a0:	6818      	ldr	r0, [r3, #0]
9001e4a2:	aa1c      	add	r2, sp, #112	; 0x70
9001e4a4:	6859      	ldr	r1, [r3, #4]
9001e4a6:	c203      	stmia	r2!, {r0, r1}
9001e4a8:	a81a      	add	r0, sp, #104	; 0x68
9001e4aa:	f7f9 fc67 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4ae:	4629      	mov	r1, r5
9001e4b0:	a81c      	add	r0, sp, #112	; 0x70
9001e4b2:	f7f9 fca7 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e4b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001e4ba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001e4be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001e4c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001e4c6:	bfdb      	ittet	le
9001e4c8:	b29a      	uxthle	r2, r3
9001e4ca:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001e4ce:	2201      	movgt	r2, #1
9001e4d0:	fb91 f2f2 	sdivle	r2, r1, r2
9001e4d4:	9202      	str	r2, [sp, #8]
9001e4d6:	9802      	ldr	r0, [sp, #8]
9001e4d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001e4dc:	9902      	ldr	r1, [sp, #8]
9001e4de:	fb92 f0f0 	sdiv	r0, r2, r0
9001e4e2:	b280      	uxth	r0, r0
9001e4e4:	4488      	add	r8, r1
9001e4e6:	9010      	str	r0, [sp, #64]	; 0x40
9001e4e8:	f108 38ff 	add.w	r8, r8, #4294967295
9001e4ec:	9802      	ldr	r0, [sp, #8]
9001e4ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001e4f0:	fb05 2510 	mls	r5, r5, r0, r2
9001e4f4:	fb98 f8f1 	sdiv	r8, r8, r1
9001e4f8:	fb15 f503 	smulbb	r5, r5, r3
9001e4fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001e500:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001e504:	f108 0801 	add.w	r8, r8, #1
9001e508:	440d      	add	r5, r1
9001e50a:	4419      	add	r1, r3
9001e50c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001e510:	fa1f f888 	uxth.w	r8, r8
9001e514:	441a      	add	r2, r3
9001e516:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001e51a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001e51e:	b2ad      	uxth	r5, r5
9001e520:	9304      	str	r3, [sp, #16]
9001e522:	4b94      	ldr	r3, [pc, #592]	; (9001e774 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e524:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001e528:	6818      	ldr	r0, [r3, #0]
9001e52a:	6803      	ldr	r3, [r0, #0]
9001e52c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e52e:	4798      	blx	r3
9001e530:	4b91      	ldr	r3, [pc, #580]	; (9001e778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e532:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001e536:	2d00      	cmp	r5, #0
9001e538:	881a      	ldrh	r2, [r3, #0]
9001e53a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001e53e:	fb02 f606 	mul.w	r6, r2, r6
9001e542:	fb02 7101 	mla	r1, r2, r1, r7
9001e546:	9318      	str	r3, [sp, #96]	; 0x60
9001e548:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e54c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001e550:	f04f 0100 	mov.w	r1, #0
9001e554:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e558:	930f      	str	r3, [sp, #60]	; 0x3c
9001e55a:	4b88      	ldr	r3, [pc, #544]	; (9001e77c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e55c:	920a      	str	r2, [sp, #40]	; 0x28
9001e55e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e560:	eba3 0304 	sub.w	r3, r3, r4
9001e564:	910d      	str	r1, [sp, #52]	; 0x34
9001e566:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e56a:	9319      	str	r3, [sp, #100]	; 0x64
9001e56c:	f108 0204 	add.w	r2, r8, #4
9001e570:	9211      	str	r2, [sp, #68]	; 0x44
9001e572:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001e574:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001e578:	9215      	str	r2, [sp, #84]	; 0x54
9001e57a:	9a04      	ldr	r2, [sp, #16]
9001e57c:	bf18      	it	ne
9001e57e:	2200      	movne	r2, #0
9001e580:	b292      	uxth	r2, r2
9001e582:	9910      	ldr	r1, [sp, #64]	; 0x40
9001e584:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e586:	fa11 f383 	uxtah	r3, r1, r3
9001e58a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001e58c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e590:	3304      	adds	r3, #4
9001e592:	9306      	str	r3, [sp, #24]
9001e594:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e596:	4283      	cmp	r3, r0
9001e598:	f240 8166 	bls.w	9001e868 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e59c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001e5a0:	f04f 0a01 	mov.w	sl, #1
9001e5a4:	9902      	ldr	r1, [sp, #8]
9001e5a6:	9e06      	ldr	r6, [sp, #24]
9001e5a8:	46d3      	mov	fp, sl
9001e5aa:	4657      	mov	r7, sl
9001e5ac:	7836      	ldrb	r6, [r6, #0]
9001e5ae:	fbb5 f3f3 	udiv	r3, r5, r3
9001e5b2:	1acb      	subs	r3, r1, r3
9001e5b4:	9612      	str	r6, [sp, #72]	; 0x48
9001e5b6:	3601      	adds	r6, #1
9001e5b8:	b29b      	uxth	r3, r3
9001e5ba:	9605      	str	r6, [sp, #20]
9001e5bc:	9316      	str	r3, [sp, #88]	; 0x58
9001e5be:	9b06      	ldr	r3, [sp, #24]
9001e5c0:	7859      	ldrb	r1, [r3, #1]
9001e5c2:	789b      	ldrb	r3, [r3, #2]
9001e5c4:	021b      	lsls	r3, r3, #8
9001e5c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e5ca:	9906      	ldr	r1, [sp, #24]
9001e5cc:	78c9      	ldrb	r1, [r1, #3]
9001e5ce:	430b      	orrs	r3, r1
9001e5d0:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001e5d2:	4419      	add	r1, r3
9001e5d4:	1c4e      	adds	r6, r1, #1
9001e5d6:	7849      	ldrb	r1, [r1, #1]
9001e5d8:	9603      	str	r6, [sp, #12]
9001e5da:	0209      	lsls	r1, r1, #8
9001e5dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e5de:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001e5e2:	5cf3      	ldrb	r3, [r6, r3]
9001e5e4:	4319      	orrs	r1, r3
9001e5e6:	b28b      	uxth	r3, r1
9001e5e8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001e5ec:	930c      	str	r3, [sp, #48]	; 0x30
9001e5ee:	2300      	movs	r3, #0
9001e5f0:	9307      	str	r3, [sp, #28]
9001e5f2:	469c      	mov	ip, r3
9001e5f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001e5f8:	930e      	str	r3, [sp, #56]	; 0x38
9001e5fa:	2d00      	cmp	r5, #0
9001e5fc:	d07e      	beq.n	9001e6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e5fe:	42af      	cmp	r7, r5
9001e600:	d26e      	bcs.n	9001e6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e604:	1bed      	subs	r5, r5, r7
9001e606:	9201      	str	r2, [sp, #4]
9001e608:	4283      	cmp	r3, r0
9001e60a:	b2ad      	uxth	r5, r5
9001e60c:	d802      	bhi.n	9001e614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e60e:	e073      	b.n	9001e6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e610:	2b00      	cmp	r3, #0
9001e612:	d15f      	bne.n	9001e6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e614:	9b03      	ldr	r3, [sp, #12]
9001e616:	f1cb 0207 	rsb	r2, fp, #7
9001e61a:	785b      	ldrb	r3, [r3, #1]
9001e61c:	4093      	lsls	r3, r2
9001e61e:	005b      	lsls	r3, r3, #1
9001e620:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001e624:	9b03      	ldr	r3, [sp, #12]
9001e626:	781b      	ldrb	r3, [r3, #0]
9001e628:	fa43 f30b 	asr.w	r3, r3, fp
9001e62c:	b2db      	uxtb	r3, r3
9001e62e:	4313      	orrs	r3, r2
9001e630:	f10b 0201 	add.w	r2, fp, #1
9001e634:	fa5f fb82 	uxtb.w	fp, r2
9001e638:	9a03      	ldr	r2, [sp, #12]
9001e63a:	b29f      	uxth	r7, r3
9001e63c:	f1bb 0f08 	cmp.w	fp, #8
9001e640:	bf13      	iteet	ne
9001e642:	3201      	addne	r2, #1
9001e644:	3202      	addeq	r2, #2
9001e646:	f04f 0b00 	moveq.w	fp, #0
9001e64a:	9203      	strne	r2, [sp, #12]
9001e64c:	bf08      	it	eq
9001e64e:	9203      	streq	r2, [sp, #12]
9001e650:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e652:	42ba      	cmp	r2, r7
9001e654:	d309      	bcc.n	9001e66a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e656:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001e65a:	2301      	movs	r3, #1
9001e65c:	9a05      	ldr	r2, [sp, #20]
9001e65e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001e662:	d30e      	bcc.n	9001e682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e664:	469a      	mov	sl, r3
9001e666:	2600      	movs	r6, #0
9001e668:	e035      	b.n	9001e6d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e66a:	9b05      	ldr	r3, [sp, #20]
9001e66c:	429f      	cmp	r7, r3
9001e66e:	d318      	bcc.n	9001e6a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e670:	eb04 030a 	add.w	r3, r4, sl
9001e674:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001e678:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001e67c:	f10a 0301 	add.w	r3, sl, #1
9001e680:	b29b      	uxth	r3, r3
9001e682:	9a05      	ldr	r2, [sp, #20]
9001e684:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001e688:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e68c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001e68e:	7116      	strb	r6, [r2, #4]
9001e690:	f10a 0601 	add.w	r6, sl, #1
9001e694:	80d1      	strh	r1, [r2, #6]
9001e696:	7156      	strb	r6, [r2, #5]
9001e698:	9a05      	ldr	r2, [sp, #20]
9001e69a:	3201      	adds	r2, #1
9001e69c:	b292      	uxth	r2, r2
9001e69e:	9205      	str	r2, [sp, #20]
9001e6a0:	e7e0      	b.n	9001e664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e6a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e6a6:	463a      	mov	r2, r7
9001e6a8:	795b      	ldrb	r3, [r3, #5]
9001e6aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001e6ae:	4426      	add	r6, r4
9001e6b0:	9919      	ldr	r1, [sp, #100]	; 0x64
9001e6b2:	eb01 0c06 	add.w	ip, r1, r6
9001e6b6:	f1bc 0f00 	cmp.w	ip, #0
9001e6ba:	dd07      	ble.n	9001e6cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e6bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e6c0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e6c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e6c8:	88d2      	ldrh	r2, [r2, #6]
9001e6ca:	e7f1      	b.n	9001e6b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e6cc:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001e6d0:	b29b      	uxth	r3, r3
9001e6d2:	e7c3      	b.n	9001e65c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e6d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001e6d6:	970c      	str	r7, [sp, #48]	; 0x30
9001e6d8:	46b4      	mov	ip, r6
9001e6da:	9a01      	ldr	r2, [sp, #4]
9001e6dc:	461f      	mov	r7, r3
9001e6de:	e78c      	b.n	9001e5fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e6e0:	1b7b      	subs	r3, r7, r5
9001e6e2:	eb0c 0605 	add.w	r6, ip, r5
9001e6e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e6ea:	b29b      	uxth	r3, r3
9001e6ec:	b2b6      	uxth	r6, r6
9001e6ee:	9201      	str	r2, [sp, #4]
9001e6f0:	2500      	movs	r5, #0
9001e6f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001e6f4:	4282      	cmp	r2, r0
9001e6f6:	d88b      	bhi.n	9001e610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e6f8:	9a01      	ldr	r2, [sp, #4]
9001e6fa:	e74b      	b.n	9001e594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e6fc:	4297      	cmp	r7, r2
9001e6fe:	d332      	bcc.n	9001e766 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e700:	1abb      	subs	r3, r7, r2
9001e702:	9208      	str	r2, [sp, #32]
9001e704:	9501      	str	r5, [sp, #4]
9001e706:	b29b      	uxth	r3, r3
9001e708:	9909      	ldr	r1, [sp, #36]	; 0x24
9001e70a:	29ff      	cmp	r1, #255	; 0xff
9001e70c:	9908      	ldr	r1, [sp, #32]
9001e70e:	eb0c 0601 	add.w	r6, ip, r1
9001e712:	d135      	bne.n	9001e780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e714:	f1a0 0e02 	sub.w	lr, r0, #2
9001e718:	b2b6      	uxth	r6, r6
9001e71a:	45b4      	cmp	ip, r6
9001e71c:	f040 808c 	bne.w	9001e838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e720:	9908      	ldr	r1, [sp, #32]
9001e722:	4297      	cmp	r7, r2
9001e724:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e728:	d3e2      	bcc.n	9001e6f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e72a:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001e72c:	9904      	ldr	r1, [sp, #16]
9001e72e:	8812      	ldrh	r2, [r2, #0]
9001e730:	1a52      	subs	r2, r2, r1
9001e732:	9916      	ldr	r1, [sp, #88]	; 0x58
9001e734:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e738:	9a07      	ldr	r2, [sp, #28]
9001e73a:	3201      	adds	r2, #1
9001e73c:	428a      	cmp	r2, r1
9001e73e:	9207      	str	r2, [sp, #28]
9001e740:	f040 8087 	bne.w	9001e852 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e744:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001e748:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001e74c:	9b04      	ldr	r3, [sp, #16]
9001e74e:	1bed      	subs	r5, r5, r7
9001e750:	b2ad      	uxth	r5, r5
9001e752:	2d00      	cmp	r5, #0
9001e754:	bf08      	it	eq
9001e756:	461a      	moveq	r2, r3
9001e758:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e75a:	bf18      	it	ne
9001e75c:	2200      	movne	r2, #0
9001e75e:	3301      	adds	r3, #1
9001e760:	b292      	uxth	r2, r2
9001e762:	930d      	str	r3, [sp, #52]	; 0x34
9001e764:	e70d      	b.n	9001e582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e766:	1bd1      	subs	r1, r2, r7
9001e768:	9708      	str	r7, [sp, #32]
9001e76a:	b28b      	uxth	r3, r1
9001e76c:	9301      	str	r3, [sp, #4]
9001e76e:	462b      	mov	r3, r5
9001e770:	e7ca      	b.n	9001e708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e772:	bf00      	nop
9001e774:	24039acc 	.word	0x24039acc
9001e778:	24039ac6 	.word	0x24039ac6
9001e77c:	fffff7fb 	.word	0xfffff7fb
9001e780:	b2b6      	uxth	r6, r6
9001e782:	900b      	str	r0, [sp, #44]	; 0x2c
9001e784:	45b4      	cmp	ip, r6
9001e786:	d0cb      	beq.n	9001e720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001e788:	f10c 0101 	add.w	r1, ip, #1
9001e78c:	44a4      	add	ip, r4
9001e78e:	9117      	str	r1, [sp, #92]	; 0x5c
9001e790:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001e794:	9911      	ldr	r1, [sp, #68]	; 0x44
9001e796:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e79a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001e79c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001e7a0:	f8b1 c000 	ldrh.w	ip, [r1]
9001e7a4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e7a6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001e7aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001e7ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001e7b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001e7b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e7ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e7be:	fb1e fe01 	smulbb	lr, lr, r1
9001e7c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e7c4:	fa5f fc8c 	uxtb.w	ip, ip
9001e7c8:	fb08 e801 	mla	r8, r8, r1, lr
9001e7cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001e7d0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e7d2:	00ed      	lsls	r5, r5, #3
9001e7d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e7d8:	fa1f f888 	uxth.w	r8, r8
9001e7dc:	fb19 f901 	smulbb	r9, r9, r1
9001e7e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e7e2:	b2ed      	uxtb	r5, r5
9001e7e4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001e7e8:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e7ea:	fb1c fc01 	smulbb	ip, ip, r1
9001e7ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e7f0:	fa1f fe8e 	uxth.w	lr, lr
9001e7f4:	fb05 c501 	mla	r5, r5, r1, ip
9001e7f8:	f108 0c01 	add.w	ip, r8, #1
9001e7fc:	f10e 0901 	add.w	r9, lr, #1
9001e800:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001e802:	b2ad      	uxth	r5, r5
9001e804:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001e808:	f105 0c01 	add.w	ip, r5, #1
9001e80c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001e810:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001e814:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e818:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e81c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e820:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001e824:	ea4c 0808 	orr.w	r8, ip, r8
9001e828:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001e82c:	ea48 0809 	orr.w	r8, r8, r9
9001e830:	f821 8b02 	strh.w	r8, [r1], #2
9001e834:	910b      	str	r1, [sp, #44]	; 0x2c
9001e836:	e7a5      	b.n	9001e784 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001e838:	f10c 0801 	add.w	r8, ip, #1
9001e83c:	44a4      	add	ip, r4
9001e83e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001e840:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001e844:	fa1f fc88 	uxth.w	ip, r8
9001e848:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e84c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001e850:	e763      	b.n	9001e71a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001e852:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e856:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001e85a:	1aad      	subs	r5, r5, r2
9001e85c:	b2ad      	uxth	r5, r5
9001e85e:	2d00      	cmp	r5, #0
9001e860:	bf18      	it	ne
9001e862:	2200      	movne	r2, #0
9001e864:	9201      	str	r2, [sp, #4]
9001e866:	e744      	b.n	9001e6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001e868:	4b03      	ldr	r3, [pc, #12]	; (9001e878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001e86a:	6818      	ldr	r0, [r3, #0]
9001e86c:	6803      	ldr	r3, [r0, #0]
9001e86e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e870:	4798      	blx	r3
9001e872:	b01f      	add	sp, #124	; 0x7c
9001e874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e878:	24039acc 	.word	0x24039acc

9001e87c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e87c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e880:	b08f      	sub	sp, #60	; 0x3c
9001e882:	461c      	mov	r4, r3
9001e884:	460f      	mov	r7, r1
9001e886:	9203      	str	r2, [sp, #12]
9001e888:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e88c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001e88e:	9202      	str	r2, [sp, #8]
9001e890:	2a00      	cmp	r2, #0
9001e892:	f000 8128 	beq.w	9001eae6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001e896:	6820      	ldr	r0, [r4, #0]
9001e898:	aa0a      	add	r2, sp, #40	; 0x28
9001e89a:	6861      	ldr	r1, [r4, #4]
9001e89c:	c203      	stmia	r2!, {r0, r1}
9001e89e:	6818      	ldr	r0, [r3, #0]
9001e8a0:	aa0c      	add	r2, sp, #48	; 0x30
9001e8a2:	6859      	ldr	r1, [r3, #4]
9001e8a4:	c203      	stmia	r2!, {r0, r1}
9001e8a6:	a80a      	add	r0, sp, #40	; 0x28
9001e8a8:	f7f9 fa68 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e8ac:	4621      	mov	r1, r4
9001e8ae:	a80c      	add	r0, sp, #48	; 0x30
9001e8b0:	f7f9 faa8 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e8b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e8b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001e8bc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001e8c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001e8c4:	bfdb      	ittet	le
9001e8c6:	b2b3      	uxthle	r3, r6
9001e8c8:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001e8cc:	2301      	movgt	r3, #1
9001e8ce:	fb92 f3f3 	sdivle	r3, r2, r3
9001e8d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e8d6:	441d      	add	r5, r3
9001e8d8:	fb92 f1f3 	sdiv	r1, r2, r3
9001e8dc:	fa1f fc81 	uxth.w	ip, r1
9001e8e0:	3d01      	subs	r5, #1
9001e8e2:	fb0c 2413 	mls	r4, ip, r3, r2
9001e8e6:	4661      	mov	r1, ip
9001e8e8:	fb14 f406 	smulbb	r4, r4, r6
9001e8ec:	4404      	add	r4, r0
9001e8ee:	fb95 f5f3 	sdiv	r5, r5, r3
9001e8f2:	b2a4      	uxth	r4, r4
9001e8f4:	b121      	cbz	r1, 9001e900 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001e8f6:	9b03      	ldr	r3, [sp, #12]
9001e8f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e8fc:	ba1b      	rev	r3, r3
9001e8fe:	441f      	add	r7, r3
9001e900:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001e904:	b2ad      	uxth	r5, r5
9001e906:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001e90a:	4418      	add	r0, r3
9001e90c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e910:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e914:	00ad      	lsls	r5, r5, #2
9001e916:	441a      	add	r2, r3
9001e918:	4b74      	ldr	r3, [pc, #464]	; (9001eaec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e91a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001e91e:	6818      	ldr	r0, [r3, #0]
9001e920:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001e924:	6803      	ldr	r3, [r0, #0]
9001e926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e928:	4798      	blx	r3
9001e92a:	4a71      	ldr	r2, [pc, #452]	; (9001eaf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001e92c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001e930:	2c00      	cmp	r4, #0
9001e932:	8813      	ldrh	r3, [r2, #0]
9001e934:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001e938:	bf0c      	ite	eq
9001e93a:	46c8      	moveq	r8, r9
9001e93c:	f04f 0800 	movne.w	r8, #0
9001e940:	9209      	str	r2, [sp, #36]	; 0x24
9001e942:	fb03 c101 	mla	r1, r3, r1, ip
9001e946:	4373      	muls	r3, r6
9001e948:	fa1f f888 	uxth.w	r8, r8
9001e94c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e950:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e954:	9304      	str	r3, [sp, #16]
9001e956:	1d2b      	adds	r3, r5, #4
9001e958:	9305      	str	r3, [sp, #20]
9001e95a:	2300      	movs	r3, #0
9001e95c:	9301      	str	r3, [sp, #4]
9001e95e:	9a04      	ldr	r2, [sp, #16]
9001e960:	4282      	cmp	r2, r0
9001e962:	f240 80bb 	bls.w	9001eadc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001e966:	b95b      	cbnz	r3, 9001e980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001e968:	783a      	ldrb	r2, [r7, #0]
9001e96a:	0993      	lsrs	r3, r2, #6
9001e96c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001e970:	9201      	str	r2, [sp, #4]
9001e972:	1e5a      	subs	r2, r3, #1
9001e974:	2a02      	cmp	r2, #2
9001e976:	bf8d      	iteet	hi
9001e978:	787b      	ldrbhi	r3, [r7, #1]
9001e97a:	3701      	addls	r7, #1
9001e97c:	b29b      	uxthls	r3, r3
9001e97e:	3702      	addhi	r7, #2
9001e980:	b184      	cbz	r4, 9001e9a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001e982:	429c      	cmp	r4, r3
9001e984:	bf91      	iteee	ls
9001e986:	1b1c      	subls	r4, r3, r4
9001e988:	1ae4      	subhi	r4, r4, r3
9001e98a:	46c4      	movhi	ip, r8
9001e98c:	f04f 0a00 	movhi.w	sl, #0
9001e990:	bf9b      	ittet	ls
9001e992:	fa1f fa84 	uxthls.w	sl, r4
9001e996:	2400      	movls	r4, #0
9001e998:	b2a4      	uxthhi	r4, r4
9001e99a:	fa1f fc89 	uxthls.w	ip, r9
9001e99e:	4653      	mov	r3, sl
9001e9a0:	46e0      	mov	r8, ip
9001e9a2:	e7dc      	b.n	9001e95e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001e9a4:	2204      	movs	r2, #4
9001e9a6:	9905      	ldr	r1, [sp, #20]
9001e9a8:	4543      	cmp	r3, r8
9001e9aa:	4615      	mov	r5, r2
9001e9ac:	9a01      	ldr	r2, [sp, #4]
9001e9ae:	bf24      	itt	cs
9001e9b0:	eba3 0a08 	subcs.w	sl, r3, r8
9001e9b4:	46c6      	movcs	lr, r8
9001e9b6:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e9ba:	9903      	ldr	r1, [sp, #12]
9001e9bc:	bf3c      	itt	cc
9001e9be:	eba8 0c03 	subcc.w	ip, r8, r3
9001e9c2:	469e      	movcc	lr, r3
9001e9c4:	588a      	ldr	r2, [r1, r2]
9001e9c6:	bf26      	itte	cs
9001e9c8:	fa1f fa8a 	uxthcs.w	sl, sl
9001e9cc:	46a4      	movcs	ip, r4
9001e9ce:	fa1f fc8c 	uxthcc.w	ip, ip
9001e9d2:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001e9d6:	bf38      	it	cc
9001e9d8:	46a2      	movcc	sl, r4
9001e9da:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001e9de:	2900      	cmp	r1, #0
9001e9e0:	d066      	beq.n	9001eab0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001e9e2:	29ff      	cmp	r1, #255	; 0xff
9001e9e4:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001e9e8:	d114      	bne.n	9001ea14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e9ea:	9d02      	ldr	r5, [sp, #8]
9001e9ec:	2dff      	cmp	r5, #255	; 0xff
9001e9ee:	d111      	bne.n	9001ea14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001e9f0:	0951      	lsrs	r1, r2, #5
9001e9f2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001e9f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e9fa:	4486      	add	lr, r0
9001e9fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ea00:	f026 0607 	bic.w	r6, r6, #7
9001ea04:	430e      	orrs	r6, r1
9001ea06:	4316      	orrs	r6, r2
9001ea08:	b2b6      	uxth	r6, r6
9001ea0a:	4586      	cmp	lr, r0
9001ea0c:	d051      	beq.n	9001eab2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ea0e:	f820 6b02 	strh.w	r6, [r0], #2
9001ea12:	e7fa      	b.n	9001ea0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001ea14:	9d02      	ldr	r5, [sp, #8]
9001ea16:	b2f6      	uxtb	r6, r6
9001ea18:	4486      	add	lr, r0
9001ea1a:	4369      	muls	r1, r5
9001ea1c:	1c4d      	adds	r5, r1, #1
9001ea1e:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001ea22:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001ea26:	b2d2      	uxtb	r2, r2
9001ea28:	122d      	asrs	r5, r5, #8
9001ea2a:	ea6f 0b05 	mvn.w	fp, r5
9001ea2e:	b2ad      	uxth	r5, r5
9001ea30:	fb11 f105 	smulbb	r1, r1, r5
9001ea34:	fa5f fb8b 	uxtb.w	fp, fp
9001ea38:	fb16 f605 	smulbb	r6, r6, r5
9001ea3c:	fb12 f205 	smulbb	r2, r2, r5
9001ea40:	b289      	uxth	r1, r1
9001ea42:	b2b6      	uxth	r6, r6
9001ea44:	b292      	uxth	r2, r2
9001ea46:	9106      	str	r1, [sp, #24]
9001ea48:	9607      	str	r6, [sp, #28]
9001ea4a:	9208      	str	r2, [sp, #32]
9001ea4c:	4586      	cmp	lr, r0
9001ea4e:	d030      	beq.n	9001eab2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001ea50:	8802      	ldrh	r2, [r0, #0]
9001ea52:	9906      	ldr	r1, [sp, #24]
9001ea54:	1216      	asrs	r6, r2, #8
9001ea56:	10d5      	asrs	r5, r2, #3
9001ea58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ea5c:	00d2      	lsls	r2, r2, #3
9001ea5e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001ea62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ea66:	b2d2      	uxtb	r2, r2
9001ea68:	fb06 160b 	mla	r6, r6, fp, r1
9001ea6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001ea70:	9907      	ldr	r1, [sp, #28]
9001ea72:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ea76:	b2b6      	uxth	r6, r6
9001ea78:	fb05 150b 	mla	r5, r5, fp, r1
9001ea7c:	9908      	ldr	r1, [sp, #32]
9001ea7e:	fb02 120b 	mla	r2, r2, fp, r1
9001ea82:	1c71      	adds	r1, r6, #1
9001ea84:	b2ad      	uxth	r5, r5
9001ea86:	b292      	uxth	r2, r2
9001ea88:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001ea8c:	1c51      	adds	r1, r2, #1
9001ea8e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001ea92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001ea96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ea9a:	4316      	orrs	r6, r2
9001ea9c:	1c6a      	adds	r2, r5, #1
9001ea9e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001eaa2:	096d      	lsrs	r5, r5, #5
9001eaa4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001eaa8:	432e      	orrs	r6, r5
9001eaaa:	f820 6b02 	strh.w	r6, [r0], #2
9001eaae:	e7cd      	b.n	9001ea4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001eab0:	4470      	add	r0, lr
9001eab2:	4543      	cmp	r3, r8
9001eab4:	f4ff af73 	bcc.w	9001e99e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001eab8:	fa1f fc89 	uxth.w	ip, r9
9001eabc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001eac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001eac2:	eba4 040c 	sub.w	r4, r4, ip
9001eac6:	881b      	ldrh	r3, [r3, #0]
9001eac8:	b2a4      	uxth	r4, r4
9001eaca:	eba3 0309 	sub.w	r3, r3, r9
9001eace:	2c00      	cmp	r4, #0
9001ead0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ead4:	bf18      	it	ne
9001ead6:	f04f 0c00 	movne.w	ip, #0
9001eada:	e760      	b.n	9001e99e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001eadc:	4b03      	ldr	r3, [pc, #12]	; (9001eaec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001eade:	6818      	ldr	r0, [r3, #0]
9001eae0:	6803      	ldr	r3, [r0, #0]
9001eae2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001eae4:	4798      	blx	r3
9001eae6:	b00f      	add	sp, #60	; 0x3c
9001eae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eaec:	24039acc 	.word	0x24039acc
9001eaf0:	24039ac6 	.word	0x24039ac6

9001eaf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001eaf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eaf8:	b093      	sub	sp, #76	; 0x4c
9001eafa:	461c      	mov	r4, r3
9001eafc:	9205      	str	r2, [sp, #20]
9001eafe:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001eb02:	9101      	str	r1, [sp, #4]
9001eb04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eb06:	9202      	str	r2, [sp, #8]
9001eb08:	2a00      	cmp	r2, #0
9001eb0a:	f000 812e 	beq.w	9001ed6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001eb0e:	6820      	ldr	r0, [r4, #0]
9001eb10:	aa0e      	add	r2, sp, #56	; 0x38
9001eb12:	6861      	ldr	r1, [r4, #4]
9001eb14:	c203      	stmia	r2!, {r0, r1}
9001eb16:	6818      	ldr	r0, [r3, #0]
9001eb18:	aa10      	add	r2, sp, #64	; 0x40
9001eb1a:	6859      	ldr	r1, [r3, #4]
9001eb1c:	c203      	stmia	r2!, {r0, r1}
9001eb1e:	a80e      	add	r0, sp, #56	; 0x38
9001eb20:	f7f9 f92c 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001eb24:	4621      	mov	r1, r4
9001eb26:	a810      	add	r0, sp, #64	; 0x40
9001eb28:	f7f9 f96c 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001eb2c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001eb30:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001eb34:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001eb38:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001eb3c:	bfdb      	ittet	le
9001eb3e:	b2b3      	uxthle	r3, r6
9001eb40:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001eb44:	2301      	movgt	r3, #1
9001eb46:	fb92 f3f3 	sdivle	r3, r2, r3
9001eb4a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001eb4e:	441d      	add	r5, r3
9001eb50:	fb92 f1f3 	sdiv	r1, r2, r3
9001eb54:	fa1f fc81 	uxth.w	ip, r1
9001eb58:	3d01      	subs	r5, #1
9001eb5a:	fb0c 2413 	mls	r4, ip, r3, r2
9001eb5e:	4661      	mov	r1, ip
9001eb60:	fb14 f406 	smulbb	r4, r4, r6
9001eb64:	4404      	add	r4, r0
9001eb66:	fb95 f5f3 	sdiv	r5, r5, r3
9001eb6a:	b2a4      	uxth	r4, r4
9001eb6c:	b131      	cbz	r1, 9001eb7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001eb6e:	9b05      	ldr	r3, [sp, #20]
9001eb70:	9901      	ldr	r1, [sp, #4]
9001eb72:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001eb76:	ba1b      	rev	r3, r3
9001eb78:	4419      	add	r1, r3
9001eb7a:	9101      	str	r1, [sp, #4]
9001eb7c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001eb80:	b2ad      	uxth	r5, r5
9001eb82:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001eb86:	4418      	add	r0, r3
9001eb88:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001eb8c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001eb90:	00ad      	lsls	r5, r5, #2
9001eb92:	441a      	add	r2, r3
9001eb94:	4b76      	ldr	r3, [pc, #472]	; (9001ed70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001eb96:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001eb9a:	6818      	ldr	r0, [r3, #0]
9001eb9c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001eba0:	6803      	ldr	r3, [r0, #0]
9001eba2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eba4:	4798      	blx	r3
9001eba6:	4973      	ldr	r1, [pc, #460]	; (9001ed74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001eba8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001ebac:	2c00      	cmp	r4, #0
9001ebae:	880b      	ldrh	r3, [r1, #0]
9001ebb0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ebb4:	910d      	str	r1, [sp, #52]	; 0x34
9001ebb6:	fb03 c202 	mla	r2, r3, r2, ip
9001ebba:	bf08      	it	eq
9001ebbc:	46dc      	moveq	ip, fp
9001ebbe:	fb03 f306 	mul.w	r3, r3, r6
9001ebc2:	bf18      	it	ne
9001ebc4:	f04f 0c00 	movne.w	ip, #0
9001ebc8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ebcc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ebd0:	fa1f fc8c 	uxth.w	ip, ip
9001ebd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ebd8:	9106      	str	r1, [sp, #24]
9001ebda:	9308      	str	r3, [sp, #32]
9001ebdc:	1d2b      	adds	r3, r5, #4
9001ebde:	9309      	str	r3, [sp, #36]	; 0x24
9001ebe0:	9b02      	ldr	r3, [sp, #8]
9001ebe2:	43da      	mvns	r2, r3
9001ebe4:	2300      	movs	r3, #0
9001ebe6:	b2d2      	uxtb	r2, r2
9001ebe8:	9303      	str	r3, [sp, #12]
9001ebea:	9207      	str	r2, [sp, #28]
9001ebec:	9a08      	ldr	r2, [sp, #32]
9001ebee:	4282      	cmp	r2, r0
9001ebf0:	f240 80b6 	bls.w	9001ed60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ebf4:	b963      	cbnz	r3, 9001ec10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ebf6:	9b01      	ldr	r3, [sp, #4]
9001ebf8:	781a      	ldrb	r2, [r3, #0]
9001ebfa:	0993      	lsrs	r3, r2, #6
9001ebfc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ec00:	9203      	str	r2, [sp, #12]
9001ec02:	1e5a      	subs	r2, r3, #1
9001ec04:	2a02      	cmp	r2, #2
9001ec06:	d815      	bhi.n	9001ec34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ec08:	9a01      	ldr	r2, [sp, #4]
9001ec0a:	b29b      	uxth	r3, r3
9001ec0c:	3201      	adds	r2, #1
9001ec0e:	9201      	str	r2, [sp, #4]
9001ec10:	b1b4      	cbz	r4, 9001ec40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ec12:	429c      	cmp	r4, r3
9001ec14:	bf91      	iteee	ls
9001ec16:	1b1c      	subls	r4, r3, r4
9001ec18:	1ae4      	subhi	r4, r4, r3
9001ec1a:	4666      	movhi	r6, ip
9001ec1c:	f04f 0800 	movhi.w	r8, #0
9001ec20:	bf9b      	ittet	ls
9001ec22:	fa1f f884 	uxthls.w	r8, r4
9001ec26:	2400      	movls	r4, #0
9001ec28:	b2a4      	uxthhi	r4, r4
9001ec2a:	fa1f f68b 	uxthls.w	r6, fp
9001ec2e:	4643      	mov	r3, r8
9001ec30:	46b4      	mov	ip, r6
9001ec32:	e7db      	b.n	9001ebec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ec34:	9a01      	ldr	r2, [sp, #4]
9001ec36:	9b01      	ldr	r3, [sp, #4]
9001ec38:	3202      	adds	r2, #2
9001ec3a:	785b      	ldrb	r3, [r3, #1]
9001ec3c:	9201      	str	r2, [sp, #4]
9001ec3e:	e7e7      	b.n	9001ec10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ec40:	2203      	movs	r2, #3
9001ec42:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ec44:	4563      	cmp	r3, ip
9001ec46:	4615      	mov	r5, r2
9001ec48:	9a03      	ldr	r2, [sp, #12]
9001ec4a:	bf2c      	ite	cs
9001ec4c:	eba3 080c 	subcs.w	r8, r3, ip
9001ec50:	ebac 0603 	subcc.w	r6, ip, r3
9001ec54:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ec58:	9905      	ldr	r1, [sp, #20]
9001ec5a:	bf24      	itt	cs
9001ec5c:	fa1f f888 	uxthcs.w	r8, r8
9001ec60:	46e1      	movcs	r9, ip
9001ec62:	eb01 0502 	add.w	r5, r1, r2
9001ec66:	9902      	ldr	r1, [sp, #8]
9001ec68:	bf2f      	iteee	cs
9001ec6a:	4626      	movcs	r6, r4
9001ec6c:	b2b6      	uxthcc	r6, r6
9001ec6e:	4699      	movcc	r9, r3
9001ec70:	46a0      	movcc	r8, r4
9001ec72:	29ff      	cmp	r1, #255	; 0xff
9001ec74:	d04a      	beq.n	9001ed0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001ec76:	9f06      	ldr	r7, [sp, #24]
9001ec78:	46ca      	mov	sl, r9
9001ec7a:	78a9      	ldrb	r1, [r5, #2]
9001ec7c:	9004      	str	r0, [sp, #16]
9001ec7e:	4379      	muls	r1, r7
9001ec80:	910a      	str	r1, [sp, #40]	; 0x28
9001ec82:	7869      	ldrb	r1, [r5, #1]
9001ec84:	4379      	muls	r1, r7
9001ec86:	910b      	str	r1, [sp, #44]	; 0x2c
9001ec88:	9905      	ldr	r1, [sp, #20]
9001ec8a:	5c8a      	ldrb	r2, [r1, r2]
9001ec8c:	437a      	muls	r2, r7
9001ec8e:	920c      	str	r2, [sp, #48]	; 0x30
9001ec90:	f1ba 0f00 	cmp.w	sl, #0
9001ec94:	d03d      	beq.n	9001ed12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001ec96:	9a04      	ldr	r2, [sp, #16]
9001ec98:	f10a 3aff 	add.w	sl, sl, #4294967295
9001ec9c:	9f07      	ldr	r7, [sp, #28]
9001ec9e:	8812      	ldrh	r2, [r2, #0]
9001eca0:	fa1f fa8a 	uxth.w	sl, sl
9001eca4:	46be      	mov	lr, r7
9001eca6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001eca8:	1215      	asrs	r5, r2, #8
9001ecaa:	10d1      	asrs	r1, r2, #3
9001ecac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ecb0:	00d2      	lsls	r2, r2, #3
9001ecb2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ecb6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ecba:	b2d2      	uxtb	r2, r2
9001ecbc:	fb05 750e 	mla	r5, r5, lr, r7
9001ecc0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001ecc4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001ecc6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ecca:	b2ad      	uxth	r5, r5
9001eccc:	fb01 710e 	mla	r1, r1, lr, r7
9001ecd0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ecd2:	fb02 720e 	mla	r2, r2, lr, r7
9001ecd6:	f105 0e01 	add.w	lr, r5, #1
9001ecda:	b289      	uxth	r1, r1
9001ecdc:	b292      	uxth	r2, r2
9001ecde:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ece2:	f102 0e01 	add.w	lr, r2, #1
9001ece6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001ecea:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001ecee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ecf2:	4315      	orrs	r5, r2
9001ecf4:	1c4a      	adds	r2, r1, #1
9001ecf6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ecfa:	9a04      	ldr	r2, [sp, #16]
9001ecfc:	0949      	lsrs	r1, r1, #5
9001ecfe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ed02:	430d      	orrs	r5, r1
9001ed04:	f822 5b02 	strh.w	r5, [r2], #2
9001ed08:	9204      	str	r2, [sp, #16]
9001ed0a:	e7c1      	b.n	9001ec90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001ed0c:	4649      	mov	r1, r9
9001ed0e:	4686      	mov	lr, r0
9001ed10:	b999      	cbnz	r1, 9001ed3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001ed12:	4563      	cmp	r3, ip
9001ed14:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001ed18:	d389      	bcc.n	9001ec2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ed1a:	fa1f f68b 	uxth.w	r6, fp
9001ed1e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001ed22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ed24:	1ba4      	subs	r4, r4, r6
9001ed26:	881b      	ldrh	r3, [r3, #0]
9001ed28:	b2a4      	uxth	r4, r4
9001ed2a:	eba3 030b 	sub.w	r3, r3, fp
9001ed2e:	2c00      	cmp	r4, #0
9001ed30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ed34:	bf18      	it	ne
9001ed36:	2600      	movne	r6, #0
9001ed38:	e779      	b.n	9001ec2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ed3a:	78aa      	ldrb	r2, [r5, #2]
9001ed3c:	3901      	subs	r1, #1
9001ed3e:	4f0e      	ldr	r7, [pc, #56]	; (9001ed78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001ed40:	b289      	uxth	r1, r1
9001ed42:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001ed46:	786a      	ldrb	r2, [r5, #1]
9001ed48:	00d2      	lsls	r2, r2, #3
9001ed4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ed4e:	ea4a 0202 	orr.w	r2, sl, r2
9001ed52:	f895 a000 	ldrb.w	sl, [r5]
9001ed56:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001ed5a:	f82e 2b02 	strh.w	r2, [lr], #2
9001ed5e:	e7d7      	b.n	9001ed10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001ed60:	4b03      	ldr	r3, [pc, #12]	; (9001ed70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001ed62:	6818      	ldr	r0, [r3, #0]
9001ed64:	6803      	ldr	r3, [r0, #0]
9001ed66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ed68:	4798      	blx	r3
9001ed6a:	b013      	add	sp, #76	; 0x4c
9001ed6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ed70:	24039acc 	.word	0x24039acc
9001ed74:	24039ac6 	.word	0x24039ac6
9001ed78:	fffff800 	.word	0xfffff800

9001ed7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ed7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ed80:	b09d      	sub	sp, #116	; 0x74
9001ed82:	461c      	mov	r4, r3
9001ed84:	4683      	mov	fp, r0
9001ed86:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001ed88:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001ed8c:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001ed90:	920e      	str	r2, [sp, #56]	; 0x38
9001ed92:	2a00      	cmp	r2, #0
9001ed94:	f000 81e4 	beq.w	9001f160 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001ed98:	6820      	ldr	r0, [r4, #0]
9001ed9a:	aa18      	add	r2, sp, #96	; 0x60
9001ed9c:	6861      	ldr	r1, [r4, #4]
9001ed9e:	c203      	stmia	r2!, {r0, r1}
9001eda0:	6818      	ldr	r0, [r3, #0]
9001eda2:	aa1a      	add	r2, sp, #104	; 0x68
9001eda4:	6859      	ldr	r1, [r3, #4]
9001eda6:	c203      	stmia	r2!, {r0, r1}
9001eda8:	a818      	add	r0, sp, #96	; 0x60
9001edaa:	f7f8 ffe7 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001edae:	4621      	mov	r1, r4
9001edb0:	a81a      	add	r0, sp, #104	; 0x68
9001edb2:	f7f9 f827 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001edb6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001edba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001edbe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001edc2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001edc6:	bfdb      	ittet	le
9001edc8:	b29a      	uxthle	r2, r3
9001edca:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001edce:	2201      	movgt	r2, #1
9001edd0:	fb91 f2f2 	sdivle	r2, r1, r2
9001edd4:	9202      	str	r2, [sp, #8]
9001edd6:	9802      	ldr	r0, [sp, #8]
9001edd8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001eddc:	9902      	ldr	r1, [sp, #8]
9001edde:	fb92 f0f0 	sdiv	r0, r2, r0
9001ede2:	b280      	uxth	r0, r0
9001ede4:	440c      	add	r4, r1
9001ede6:	900f      	str	r0, [sp, #60]	; 0x3c
9001ede8:	3c01      	subs	r4, #1
9001edea:	9802      	ldr	r0, [sp, #8]
9001edec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001edee:	fb05 2510 	mls	r5, r5, r0, r2
9001edf2:	fb94 f4f1 	sdiv	r4, r4, r1
9001edf6:	fb15 f503 	smulbb	r5, r5, r3
9001edfa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001edfe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001ee02:	3401      	adds	r4, #1
9001ee04:	440d      	add	r5, r1
9001ee06:	4419      	add	r1, r3
9001ee08:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001ee0c:	b2a4      	uxth	r4, r4
9001ee0e:	441a      	add	r2, r3
9001ee10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001ee14:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001ee18:	00a4      	lsls	r4, r4, #2
9001ee1a:	9306      	str	r3, [sp, #24]
9001ee1c:	b2ad      	uxth	r5, r5
9001ee1e:	4bb3      	ldr	r3, [pc, #716]	; (9001f0ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ee20:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001ee24:	6818      	ldr	r0, [r3, #0]
9001ee26:	6803      	ldr	r3, [r0, #0]
9001ee28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ee2a:	4798      	blx	r3
9001ee2c:	4bb0      	ldr	r3, [pc, #704]	; (9001f0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ee2e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001ee32:	2d00      	cmp	r5, #0
9001ee34:	881a      	ldrh	r2, [r3, #0]
9001ee36:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001ee3a:	fb02 f606 	mul.w	r6, r2, r6
9001ee3e:	fb02 7101 	mla	r1, r2, r1, r7
9001ee42:	9316      	str	r3, [sp, #88]	; 0x58
9001ee44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ee48:	4baa      	ldr	r3, [pc, #680]	; (9001f0f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ee4a:	bf18      	it	ne
9001ee4c:	2100      	movne	r1, #0
9001ee4e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ee52:	eba3 030b 	sub.w	r3, r3, fp
9001ee56:	920a      	str	r2, [sp, #40]	; 0x28
9001ee58:	f104 0204 	add.w	r2, r4, #4
9001ee5c:	9317      	str	r3, [sp, #92]	; 0x5c
9001ee5e:	9213      	str	r2, [sp, #76]	; 0x4c
9001ee60:	9a06      	ldr	r2, [sp, #24]
9001ee62:	bf08      	it	eq
9001ee64:	4611      	moveq	r1, r2
9001ee66:	2200      	movs	r2, #0
9001ee68:	b289      	uxth	r1, r1
9001ee6a:	920d      	str	r2, [sp, #52]	; 0x34
9001ee6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ee6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ee70:	fa12 f383 	uxtah	r3, r2, r3
9001ee74:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ee76:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ee7a:	3304      	adds	r3, #4
9001ee7c:	9308      	str	r3, [sp, #32]
9001ee7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ee80:	4543      	cmp	r3, r8
9001ee82:	f240 8168 	bls.w	9001f156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ee86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001ee8a:	f04f 0e01 	mov.w	lr, #1
9001ee8e:	9a02      	ldr	r2, [sp, #8]
9001ee90:	9808      	ldr	r0, [sp, #32]
9001ee92:	fbb5 f3f3 	udiv	r3, r5, r3
9001ee96:	1ad3      	subs	r3, r2, r3
9001ee98:	7800      	ldrb	r0, [r0, #0]
9001ee9a:	b29b      	uxth	r3, r3
9001ee9c:	9010      	str	r0, [sp, #64]	; 0x40
9001ee9e:	3001      	adds	r0, #1
9001eea0:	9314      	str	r3, [sp, #80]	; 0x50
9001eea2:	9b08      	ldr	r3, [sp, #32]
9001eea4:	9007      	str	r0, [sp, #28]
9001eea6:	785a      	ldrb	r2, [r3, #1]
9001eea8:	789b      	ldrb	r3, [r3, #2]
9001eeaa:	021b      	lsls	r3, r3, #8
9001eeac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001eeb0:	9a08      	ldr	r2, [sp, #32]
9001eeb2:	78d2      	ldrb	r2, [r2, #3]
9001eeb4:	4313      	orrs	r3, r2
9001eeb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001eeb8:	441a      	add	r2, r3
9001eeba:	1c50      	adds	r0, r2, #1
9001eebc:	7852      	ldrb	r2, [r2, #1]
9001eebe:	9005      	str	r0, [sp, #20]
9001eec0:	0212      	lsls	r2, r2, #8
9001eec2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001eec4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001eec8:	5cc3      	ldrb	r3, [r0, r3]
9001eeca:	431a      	orrs	r2, r3
9001eecc:	b293      	uxth	r3, r2
9001eece:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001eed2:	930b      	str	r3, [sp, #44]	; 0x2c
9001eed4:	2300      	movs	r3, #0
9001eed6:	9309      	str	r3, [sp, #36]	; 0x24
9001eed8:	2301      	movs	r3, #1
9001eeda:	9301      	str	r3, [sp, #4]
9001eedc:	9304      	str	r3, [sp, #16]
9001eede:	2300      	movs	r3, #0
9001eee0:	9303      	str	r3, [sp, #12]
9001eee2:	2d00      	cmp	r5, #0
9001eee4:	d07d      	beq.n	9001efe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001eee6:	45ae      	cmp	lr, r5
9001eee8:	d26c      	bcs.n	9001efc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001eeea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001eeec:	eba5 050e 	sub.w	r5, r5, lr
9001eef0:	460c      	mov	r4, r1
9001eef2:	4543      	cmp	r3, r8
9001eef4:	b2ad      	uxth	r5, r5
9001eef6:	d802      	bhi.n	9001eefe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001eef8:	e071      	b.n	9001efde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001eefa:	2b00      	cmp	r3, #0
9001eefc:	d15d      	bne.n	9001efba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001eefe:	9b05      	ldr	r3, [sp, #20]
9001ef00:	9a04      	ldr	r2, [sp, #16]
9001ef02:	785b      	ldrb	r3, [r3, #1]
9001ef04:	f1c2 0207 	rsb	r2, r2, #7
9001ef08:	9904      	ldr	r1, [sp, #16]
9001ef0a:	4093      	lsls	r3, r2
9001ef0c:	005b      	lsls	r3, r3, #1
9001ef0e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001ef12:	9b05      	ldr	r3, [sp, #20]
9001ef14:	781b      	ldrb	r3, [r3, #0]
9001ef16:	410b      	asrs	r3, r1
9001ef18:	3101      	adds	r1, #1
9001ef1a:	b2c9      	uxtb	r1, r1
9001ef1c:	b2db      	uxtb	r3, r3
9001ef1e:	2908      	cmp	r1, #8
9001ef20:	9104      	str	r1, [sp, #16]
9001ef22:	9905      	ldr	r1, [sp, #20]
9001ef24:	ea43 0302 	orr.w	r3, r3, r2
9001ef28:	bf0c      	ite	eq
9001ef2a:	3102      	addeq	r1, #2
9001ef2c:	3101      	addne	r1, #1
9001ef2e:	b29a      	uxth	r2, r3
9001ef30:	bf05      	ittet	eq
9001ef32:	9105      	streq	r1, [sp, #20]
9001ef34:	2100      	moveq	r1, #0
9001ef36:	9105      	strne	r1, [sp, #20]
9001ef38:	9104      	streq	r1, [sp, #16]
9001ef3a:	9910      	ldr	r1, [sp, #64]	; 0x40
9001ef3c:	4291      	cmp	r1, r2
9001ef3e:	d30a      	bcc.n	9001ef56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001ef40:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001ef44:	2301      	movs	r3, #1
9001ef46:	9907      	ldr	r1, [sp, #28]
9001ef48:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001ef4c:	d30f      	bcc.n	9001ef6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001ef4e:	2100      	movs	r1, #0
9001ef50:	9301      	str	r3, [sp, #4]
9001ef52:	9103      	str	r1, [sp, #12]
9001ef54:	e032      	b.n	9001efbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001ef56:	9b07      	ldr	r3, [sp, #28]
9001ef58:	429a      	cmp	r2, r3
9001ef5a:	d318      	bcc.n	9001ef8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001ef5c:	9b01      	ldr	r3, [sp, #4]
9001ef5e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001ef62:	445b      	add	r3, fp
9001ef64:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001ef68:	9b01      	ldr	r3, [sp, #4]
9001ef6a:	3301      	adds	r3, #1
9001ef6c:	b29b      	uxth	r3, r3
9001ef6e:	9907      	ldr	r1, [sp, #28]
9001ef70:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001ef74:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001ef78:	7108      	strb	r0, [r1, #4]
9001ef7a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001ef7c:	80c8      	strh	r0, [r1, #6]
9001ef7e:	9801      	ldr	r0, [sp, #4]
9001ef80:	3001      	adds	r0, #1
9001ef82:	7148      	strb	r0, [r1, #5]
9001ef84:	9907      	ldr	r1, [sp, #28]
9001ef86:	3101      	adds	r1, #1
9001ef88:	b289      	uxth	r1, r1
9001ef8a:	9107      	str	r1, [sp, #28]
9001ef8c:	e7df      	b.n	9001ef4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001ef8e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001ef92:	4611      	mov	r1, r2
9001ef94:	795b      	ldrb	r3, [r3, #5]
9001ef96:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001ef9a:	4458      	add	r0, fp
9001ef9c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001ef9e:	4406      	add	r6, r0
9001efa0:	2e00      	cmp	r6, #0
9001efa2:	dd06      	ble.n	9001efb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001efa4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001efa8:	790e      	ldrb	r6, [r1, #4]
9001efaa:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001efae:	88c9      	ldrh	r1, [r1, #6]
9001efb0:	e7f4      	b.n	9001ef9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001efb2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001efb6:	b29b      	uxth	r3, r3
9001efb8:	e7c5      	b.n	9001ef46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001efba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001efbc:	4621      	mov	r1, r4
9001efbe:	920b      	str	r2, [sp, #44]	; 0x2c
9001efc0:	469e      	mov	lr, r3
9001efc2:	e78e      	b.n	9001eee2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001efc4:	9a03      	ldr	r2, [sp, #12]
9001efc6:	ebae 0305 	sub.w	r3, lr, r5
9001efca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001efce:	442a      	add	r2, r5
9001efd0:	b29b      	uxth	r3, r3
9001efd2:	b292      	uxth	r2, r2
9001efd4:	9203      	str	r2, [sp, #12]
9001efd6:	2500      	movs	r5, #0
9001efd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001efda:	4542      	cmp	r2, r8
9001efdc:	d88d      	bhi.n	9001eefa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001efde:	4621      	mov	r1, r4
9001efe0:	e74d      	b.n	9001ee7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001efe2:	458e      	cmp	lr, r1
9001efe4:	f04f 0900 	mov.w	r9, #0
9001efe8:	bf2b      	itete	cs
9001efea:	ebae 0301 	subcs.w	r3, lr, r1
9001efee:	eba1 040e 	subcc.w	r4, r1, lr
9001eff2:	462c      	movcs	r4, r5
9001eff4:	462b      	movcc	r3, r5
9001eff6:	bf27      	ittee	cs
9001eff8:	b29b      	uxthcs	r3, r3
9001effa:	910c      	strcs	r1, [sp, #48]	; 0x30
9001effc:	b2a4      	uxthcc	r4, r4
9001effe:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001f002:	9a03      	ldr	r2, [sp, #12]
9001f004:	980c      	ldr	r0, [sp, #48]	; 0x30
9001f006:	444a      	add	r2, r9
9001f008:	4548      	cmp	r0, r9
9001f00a:	b292      	uxth	r2, r2
9001f00c:	d074      	beq.n	9001f0f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f00e:	2004      	movs	r0, #4
9001f010:	445a      	add	r2, fp
9001f012:	4605      	mov	r5, r0
9001f014:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001f018:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f01a:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f01e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f020:	5880      	ldr	r0, [r0, r2]
9001f022:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f026:	d014      	beq.n	9001f052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f028:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001f02c:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f030:	d112      	bne.n	9001f058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f032:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f034:	2aff      	cmp	r2, #255	; 0xff
9001f036:	d10f      	bne.n	9001f058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f038:	0942      	lsrs	r2, r0, #5
9001f03a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001f03e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f042:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f046:	f025 0507 	bic.w	r5, r5, #7
9001f04a:	4315      	orrs	r5, r2
9001f04c:	4305      	orrs	r5, r0
9001f04e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f052:	f109 0901 	add.w	r9, r9, #1
9001f056:	e7d4      	b.n	9001f002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f058:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f05c:	b2ed      	uxtb	r5, r5
9001f05e:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f062:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f066:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001f06a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f06e:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f072:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f076:	9215      	str	r2, [sp, #84]	; 0x54
9001f078:	fa5f fc8c 	uxtb.w	ip, ip
9001f07c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f07e:	b2c0      	uxtb	r0, r0
9001f080:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f084:	fb02 fa0a 	mul.w	sl, r2, sl
9001f088:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f08c:	f10a 0201 	add.w	r2, sl, #1
9001f090:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f094:	1212      	asrs	r2, r2, #8
9001f096:	fa1f fa82 	uxth.w	sl, r2
9001f09a:	43d2      	mvns	r2, r2
9001f09c:	fb16 f60a 	smulbb	r6, r6, sl
9001f0a0:	b2d2      	uxtb	r2, r2
9001f0a2:	fb10 f00a 	smulbb	r0, r0, sl
9001f0a6:	fb07 6702 	mla	r7, r7, r2, r6
9001f0aa:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001f0ac:	fb0c 0002 	mla	r0, ip, r2, r0
9001f0b0:	fb15 f50a 	smulbb	r5, r5, sl
9001f0b4:	b2bf      	uxth	r7, r7
9001f0b6:	b280      	uxth	r0, r0
9001f0b8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f0bc:	fb06 5602 	mla	r6, r6, r2, r5
9001f0c0:	1c7a      	adds	r2, r7, #1
9001f0c2:	1c45      	adds	r5, r0, #1
9001f0c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f0c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f0cc:	b2b6      	uxth	r6, r6
9001f0ce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001f0d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f0d6:	432f      	orrs	r7, r5
9001f0d8:	1c75      	adds	r5, r6, #1
9001f0da:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f0de:	096d      	lsrs	r5, r5, #5
9001f0e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f0e4:	432f      	orrs	r7, r5
9001f0e6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f0ea:	e7b2      	b.n	9001f052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f0ec:	24039acc 	.word	0x24039acc
9001f0f0:	24039ac6 	.word	0x24039ac6
9001f0f4:	fffff7fb 	.word	0xfffff7fb
9001f0f8:	9203      	str	r2, [sp, #12]
9001f0fa:	458e      	cmp	lr, r1
9001f0fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f0fe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f102:	f4ff af68 	bcc.w	9001efd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f106:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001f108:	9906      	ldr	r1, [sp, #24]
9001f10a:	8812      	ldrh	r2, [r2, #0]
9001f10c:	1a52      	subs	r2, r2, r1
9001f10e:	9914      	ldr	r1, [sp, #80]	; 0x50
9001f110:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f114:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f116:	3201      	adds	r2, #1
9001f118:	428a      	cmp	r2, r1
9001f11a:	9209      	str	r2, [sp, #36]	; 0x24
9001f11c:	d111      	bne.n	9001f142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f11e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001f122:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001f126:	9b06      	ldr	r3, [sp, #24]
9001f128:	eba5 0509 	sub.w	r5, r5, r9
9001f12c:	b2ad      	uxth	r5, r5
9001f12e:	2d00      	cmp	r5, #0
9001f130:	bf08      	it	eq
9001f132:	4619      	moveq	r1, r3
9001f134:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f136:	bf18      	it	ne
9001f138:	2100      	movne	r1, #0
9001f13a:	3301      	adds	r3, #1
9001f13c:	b289      	uxth	r1, r1
9001f13e:	930d      	str	r3, [sp, #52]	; 0x34
9001f140:	e694      	b.n	9001ee6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f142:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f146:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001f14a:	1b2d      	subs	r5, r5, r4
9001f14c:	b2ad      	uxth	r5, r5
9001f14e:	2d00      	cmp	r5, #0
9001f150:	bf18      	it	ne
9001f152:	2400      	movne	r4, #0
9001f154:	e740      	b.n	9001efd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f156:	4b04      	ldr	r3, [pc, #16]	; (9001f168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f158:	6818      	ldr	r0, [r3, #0]
9001f15a:	6803      	ldr	r3, [r0, #0]
9001f15c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f15e:	4798      	blx	r3
9001f160:	b01d      	add	sp, #116	; 0x74
9001f162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f166:	bf00      	nop
9001f168:	24039acc 	.word	0x24039acc

9001f16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f16c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f170:	b09f      	sub	sp, #124	; 0x7c
9001f172:	461d      	mov	r5, r3
9001f174:	4604      	mov	r4, r0
9001f176:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f178:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001f17c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001f180:	920a      	str	r2, [sp, #40]	; 0x28
9001f182:	2a00      	cmp	r2, #0
9001f184:	f000 81fe 	beq.w	9001f584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f188:	6828      	ldr	r0, [r5, #0]
9001f18a:	aa1a      	add	r2, sp, #104	; 0x68
9001f18c:	6869      	ldr	r1, [r5, #4]
9001f18e:	c203      	stmia	r2!, {r0, r1}
9001f190:	6818      	ldr	r0, [r3, #0]
9001f192:	aa1c      	add	r2, sp, #112	; 0x70
9001f194:	6859      	ldr	r1, [r3, #4]
9001f196:	c203      	stmia	r2!, {r0, r1}
9001f198:	a81a      	add	r0, sp, #104	; 0x68
9001f19a:	f7f8 fdef 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f19e:	4629      	mov	r1, r5
9001f1a0:	a81c      	add	r0, sp, #112	; 0x70
9001f1a2:	f7f8 fe2f 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f1a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f1aa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f1ae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f1b2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001f1b6:	bfdb      	ittet	le
9001f1b8:	b29a      	uxthle	r2, r3
9001f1ba:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f1be:	2201      	movgt	r2, #1
9001f1c0:	fb91 f2f2 	sdivle	r2, r1, r2
9001f1c4:	9201      	str	r2, [sp, #4]
9001f1c6:	9801      	ldr	r0, [sp, #4]
9001f1c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001f1cc:	9901      	ldr	r1, [sp, #4]
9001f1ce:	fb92 f0f0 	sdiv	r0, r2, r0
9001f1d2:	b280      	uxth	r0, r0
9001f1d4:	440e      	add	r6, r1
9001f1d6:	9010      	str	r0, [sp, #64]	; 0x40
9001f1d8:	3e01      	subs	r6, #1
9001f1da:	9801      	ldr	r0, [sp, #4]
9001f1dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001f1de:	fb05 2510 	mls	r5, r5, r0, r2
9001f1e2:	fb96 f6f1 	sdiv	r6, r6, r1
9001f1e6:	fb15 f503 	smulbb	r5, r5, r3
9001f1ea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001f1ee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001f1f2:	3601      	adds	r6, #1
9001f1f4:	440d      	add	r5, r1
9001f1f6:	4419      	add	r1, r3
9001f1f8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001f1fc:	b2b6      	uxth	r6, r6
9001f1fe:	441a      	add	r2, r3
9001f200:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001f204:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001f208:	b2ad      	uxth	r5, r5
9001f20a:	9304      	str	r3, [sp, #16]
9001f20c:	4b96      	ldr	r3, [pc, #600]	; (9001f468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f20e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001f212:	6818      	ldr	r0, [r3, #0]
9001f214:	6803      	ldr	r3, [r0, #0]
9001f216:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f218:	4798      	blx	r3
9001f21a:	4b94      	ldr	r3, [pc, #592]	; (9001f46c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f21c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001f220:	2d00      	cmp	r5, #0
9001f222:	881a      	ldrh	r2, [r3, #0]
9001f224:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001f228:	fb02 f707 	mul.w	r7, r2, r7
9001f22c:	fb02 c101 	mla	r1, r2, r1, ip
9001f230:	9318      	str	r3, [sp, #96]	; 0x60
9001f232:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f236:	4b8e      	ldr	r3, [pc, #568]	; (9001f470 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f238:	bf18      	it	ne
9001f23a:	2100      	movne	r1, #0
9001f23c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f240:	eba3 0304 	sub.w	r3, r3, r4
9001f244:	920b      	str	r2, [sp, #44]	; 0x2c
9001f246:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f248:	9319      	str	r3, [sp, #100]	; 0x64
9001f24a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f24e:	f106 0204 	add.w	r2, r6, #4
9001f252:	9206      	str	r2, [sp, #24]
9001f254:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f256:	ea6f 0202 	mvn.w	r2, r2
9001f25a:	b2d2      	uxtb	r2, r2
9001f25c:	9215      	str	r2, [sp, #84]	; 0x54
9001f25e:	9a04      	ldr	r2, [sp, #16]
9001f260:	bf08      	it	eq
9001f262:	4611      	moveq	r1, r2
9001f264:	2200      	movs	r2, #0
9001f266:	b289      	uxth	r1, r1
9001f268:	920d      	str	r2, [sp, #52]	; 0x34
9001f26a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f26c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f26e:	fa12 f383 	uxtah	r3, r2, r3
9001f272:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f274:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f278:	3304      	adds	r3, #4
9001f27a:	9307      	str	r3, [sp, #28]
9001f27c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f27e:	455b      	cmp	r3, fp
9001f280:	f240 817b 	bls.w	9001f57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f284:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001f288:	f04f 0801 	mov.w	r8, #1
9001f28c:	9a01      	ldr	r2, [sp, #4]
9001f28e:	9807      	ldr	r0, [sp, #28]
9001f290:	46c4      	mov	ip, r8
9001f292:	f8cd 8008 	str.w	r8, [sp, #8]
9001f296:	7800      	ldrb	r0, [r0, #0]
9001f298:	fbb5 f3f3 	udiv	r3, r5, r3
9001f29c:	1ad3      	subs	r3, r2, r3
9001f29e:	9011      	str	r0, [sp, #68]	; 0x44
9001f2a0:	3001      	adds	r0, #1
9001f2a2:	b29b      	uxth	r3, r3
9001f2a4:	9005      	str	r0, [sp, #20]
9001f2a6:	9316      	str	r3, [sp, #88]	; 0x58
9001f2a8:	9b07      	ldr	r3, [sp, #28]
9001f2aa:	785a      	ldrb	r2, [r3, #1]
9001f2ac:	789b      	ldrb	r3, [r3, #2]
9001f2ae:	021b      	lsls	r3, r3, #8
9001f2b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f2b4:	9a07      	ldr	r2, [sp, #28]
9001f2b6:	78d2      	ldrb	r2, [r2, #3]
9001f2b8:	4313      	orrs	r3, r2
9001f2ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f2bc:	441a      	add	r2, r3
9001f2be:	1c50      	adds	r0, r2, #1
9001f2c0:	7852      	ldrb	r2, [r2, #1]
9001f2c2:	9003      	str	r0, [sp, #12]
9001f2c4:	0212      	lsls	r2, r2, #8
9001f2c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f2c8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001f2cc:	5cc3      	ldrb	r3, [r0, r3]
9001f2ce:	431a      	orrs	r2, r3
9001f2d0:	b293      	uxth	r3, r2
9001f2d2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001f2d6:	930c      	str	r3, [sp, #48]	; 0x30
9001f2d8:	2300      	movs	r3, #0
9001f2da:	9308      	str	r3, [sp, #32]
9001f2dc:	461a      	mov	r2, r3
9001f2de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001f2e2:	930e      	str	r3, [sp, #56]	; 0x38
9001f2e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001f2e8:	930f      	str	r3, [sp, #60]	; 0x3c
9001f2ea:	2d00      	cmp	r5, #0
9001f2ec:	d07d      	beq.n	9001f3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f2ee:	45ac      	cmp	ip, r5
9001f2f0:	d26d      	bcs.n	9001f3ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f2f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f2f4:	eba5 050c 	sub.w	r5, r5, ip
9001f2f8:	4608      	mov	r0, r1
9001f2fa:	455b      	cmp	r3, fp
9001f2fc:	b2ad      	uxth	r5, r5
9001f2fe:	d802      	bhi.n	9001f306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f300:	e071      	b.n	9001f3e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f302:	2b00      	cmp	r3, #0
9001f304:	d15d      	bne.n	9001f3c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f306:	9b03      	ldr	r3, [sp, #12]
9001f308:	9a02      	ldr	r2, [sp, #8]
9001f30a:	785b      	ldrb	r3, [r3, #1]
9001f30c:	f1c2 0207 	rsb	r2, r2, #7
9001f310:	9902      	ldr	r1, [sp, #8]
9001f312:	4093      	lsls	r3, r2
9001f314:	005b      	lsls	r3, r3, #1
9001f316:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f31a:	9b03      	ldr	r3, [sp, #12]
9001f31c:	781b      	ldrb	r3, [r3, #0]
9001f31e:	410b      	asrs	r3, r1
9001f320:	3101      	adds	r1, #1
9001f322:	b2c9      	uxtb	r1, r1
9001f324:	b2db      	uxtb	r3, r3
9001f326:	2908      	cmp	r1, #8
9001f328:	9102      	str	r1, [sp, #8]
9001f32a:	9903      	ldr	r1, [sp, #12]
9001f32c:	ea43 0302 	orr.w	r3, r3, r2
9001f330:	bf0c      	ite	eq
9001f332:	3102      	addeq	r1, #2
9001f334:	3101      	addne	r1, #1
9001f336:	b29a      	uxth	r2, r3
9001f338:	bf05      	ittet	eq
9001f33a:	9103      	streq	r1, [sp, #12]
9001f33c:	2100      	moveq	r1, #0
9001f33e:	9103      	strne	r1, [sp, #12]
9001f340:	9102      	streq	r1, [sp, #8]
9001f342:	9911      	ldr	r1, [sp, #68]	; 0x44
9001f344:	4291      	cmp	r1, r2
9001f346:	d30a      	bcc.n	9001f35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f348:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001f34c:	2301      	movs	r3, #1
9001f34e:	9905      	ldr	r1, [sp, #20]
9001f350:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f354:	d30f      	bcc.n	9001f376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f356:	2100      	movs	r1, #0
9001f358:	4698      	mov	r8, r3
9001f35a:	9100      	str	r1, [sp, #0]
9001f35c:	e032      	b.n	9001f3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f35e:	9b05      	ldr	r3, [sp, #20]
9001f360:	429a      	cmp	r2, r3
9001f362:	d318      	bcc.n	9001f396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f364:	eb04 0308 	add.w	r3, r4, r8
9001f368:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001f36c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f370:	f108 0301 	add.w	r3, r8, #1
9001f374:	b29b      	uxth	r3, r3
9001f376:	9905      	ldr	r1, [sp, #20]
9001f378:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001f37c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f380:	710e      	strb	r6, [r1, #4]
9001f382:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f384:	80ce      	strh	r6, [r1, #6]
9001f386:	f108 0601 	add.w	r6, r8, #1
9001f38a:	714e      	strb	r6, [r1, #5]
9001f38c:	9905      	ldr	r1, [sp, #20]
9001f38e:	3101      	adds	r1, #1
9001f390:	b289      	uxth	r1, r1
9001f392:	9105      	str	r1, [sp, #20]
9001f394:	e7df      	b.n	9001f356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f396:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f39a:	4611      	mov	r1, r2
9001f39c:	795b      	ldrb	r3, [r3, #5]
9001f39e:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001f3a2:	4426      	add	r6, r4
9001f3a4:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001f3a6:	4437      	add	r7, r6
9001f3a8:	2f00      	cmp	r7, #0
9001f3aa:	dd06      	ble.n	9001f3ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f3ac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f3b0:	790f      	ldrb	r7, [r1, #4]
9001f3b2:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f3b6:	88c9      	ldrh	r1, [r1, #6]
9001f3b8:	e7f4      	b.n	9001f3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f3ba:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001f3be:	b29b      	uxth	r3, r3
9001f3c0:	e7c5      	b.n	9001f34e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f3c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f3c4:	920c      	str	r2, [sp, #48]	; 0x30
9001f3c6:	4601      	mov	r1, r0
9001f3c8:	9a00      	ldr	r2, [sp, #0]
9001f3ca:	469c      	mov	ip, r3
9001f3cc:	e78d      	b.n	9001f2ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f3ce:	ebac 0305 	sub.w	r3, ip, r5
9001f3d2:	1957      	adds	r7, r2, r5
9001f3d4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f3d8:	b2ba      	uxth	r2, r7
9001f3da:	b29b      	uxth	r3, r3
9001f3dc:	9200      	str	r2, [sp, #0]
9001f3de:	2500      	movs	r5, #0
9001f3e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f3e2:	455a      	cmp	r2, fp
9001f3e4:	d88d      	bhi.n	9001f302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f3e6:	4601      	mov	r1, r0
9001f3e8:	e748      	b.n	9001f27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f3ea:	458c      	cmp	ip, r1
9001f3ec:	bf27      	ittee	cs
9001f3ee:	ebac 0301 	subcs.w	r3, ip, r1
9001f3f2:	4628      	movcs	r0, r5
9001f3f4:	eba1 000c 	subcc.w	r0, r1, ip
9001f3f8:	462b      	movcc	r3, r5
9001f3fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001f3fc:	bf27      	ittee	cs
9001f3fe:	b29b      	uxthcs	r3, r3
9001f400:	9109      	strcs	r1, [sp, #36]	; 0x24
9001f402:	b280      	uxthcc	r0, r0
9001f404:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001f408:	2dff      	cmp	r5, #255	; 0xff
9001f40a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001f40c:	eb02 0705 	add.w	r7, r2, r5
9001f410:	b2bd      	uxth	r5, r7
9001f412:	9500      	str	r5, [sp, #0]
9001f414:	d12e      	bne.n	9001f474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f416:	465e      	mov	r6, fp
9001f418:	9d00      	ldr	r5, [sp, #0]
9001f41a:	42aa      	cmp	r2, r5
9001f41c:	f040 8083 	bne.w	9001f526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f420:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f422:	458c      	cmp	ip, r1
9001f424:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f428:	d3d9      	bcc.n	9001f3de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f42a:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001f42c:	9904      	ldr	r1, [sp, #16]
9001f42e:	8812      	ldrh	r2, [r2, #0]
9001f430:	1a52      	subs	r2, r2, r1
9001f432:	9916      	ldr	r1, [sp, #88]	; 0x58
9001f434:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f438:	9a08      	ldr	r2, [sp, #32]
9001f43a:	3201      	adds	r2, #1
9001f43c:	428a      	cmp	r2, r1
9001f43e:	9208      	str	r2, [sp, #32]
9001f440:	f040 8091 	bne.w	9001f566 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f444:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001f448:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001f44c:	9b04      	ldr	r3, [sp, #16]
9001f44e:	eba5 050c 	sub.w	r5, r5, ip
9001f452:	b2ad      	uxth	r5, r5
9001f454:	2d00      	cmp	r5, #0
9001f456:	bf08      	it	eq
9001f458:	4619      	moveq	r1, r3
9001f45a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f45c:	bf18      	it	ne
9001f45e:	2100      	movne	r1, #0
9001f460:	3301      	adds	r3, #1
9001f462:	b289      	uxth	r1, r1
9001f464:	930d      	str	r3, [sp, #52]	; 0x34
9001f466:	e700      	b.n	9001f26a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f468:	24039acc 	.word	0x24039acc
9001f46c:	24039ac6 	.word	0x24039ac6
9001f470:	fffff7fb 	.word	0xfffff7fb
9001f474:	46d9      	mov	r9, fp
9001f476:	9d00      	ldr	r5, [sp, #0]
9001f478:	42aa      	cmp	r2, r5
9001f47a:	d0d1      	beq.n	9001f420 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f47c:	1c55      	adds	r5, r2, #1
9001f47e:	4422      	add	r2, r4
9001f480:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001f484:	9a06      	ldr	r2, [sp, #24]
9001f486:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f48a:	9517      	str	r5, [sp, #92]	; 0x5c
9001f48c:	4472      	add	r2, lr
9001f48e:	9212      	str	r2, [sp, #72]	; 0x48
9001f490:	f8b9 2000 	ldrh.w	r2, [r9]
9001f494:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f496:	1216      	asrs	r6, r2, #8
9001f498:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f49c:	10d5      	asrs	r5, r2, #3
9001f49e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f4a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f4a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001f4a8:	00d2      	lsls	r2, r2, #3
9001f4aa:	fb1a fa07 	smulbb	sl, sl, r7
9001f4ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f4b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f4b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f4b8:	b2d2      	uxtb	r2, r2
9001f4ba:	fb06 a607 	mla	r6, r6, r7, sl
9001f4be:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f4c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f4c4:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f4c8:	b2b6      	uxth	r6, r6
9001f4ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f4cc:	fb1a fa07 	smulbb	sl, sl, r7
9001f4d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f4d2:	fb05 a507 	mla	r5, r5, r7, sl
9001f4d6:	9f06      	ldr	r7, [sp, #24]
9001f4d8:	f106 0a01 	add.w	sl, r6, #1
9001f4dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f4e0:	b2ad      	uxth	r5, r5
9001f4e2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f4e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f4e8:	f105 0a01 	add.w	sl, r5, #1
9001f4ec:	fb1e fe07 	smulbb	lr, lr, r7
9001f4f0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f4f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f4f6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f4fa:	fb02 e207 	mla	r2, r2, r7, lr
9001f4fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f502:	b292      	uxth	r2, r2
9001f504:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f508:	f102 0e01 	add.w	lr, r2, #1
9001f50c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f510:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f514:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f518:	ea4e 0606 	orr.w	r6, lr, r6
9001f51c:	ea46 060a 	orr.w	r6, r6, sl
9001f520:	f829 6b02 	strh.w	r6, [r9], #2
9001f524:	e7a7      	b.n	9001f476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f526:	f102 0e01 	add.w	lr, r2, #1
9001f52a:	4422      	add	r2, r4
9001f52c:	9f06      	ldr	r7, [sp, #24]
9001f52e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001f532:	9a06      	ldr	r2, [sp, #24]
9001f534:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f538:	eb02 0a05 	add.w	sl, r2, r5
9001f53c:	4a13      	ldr	r2, [pc, #76]	; (9001f58c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f53e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f542:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f546:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f54a:	00d2      	lsls	r2, r2, #3
9001f54c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f550:	ea49 0202 	orr.w	r2, r9, r2
9001f554:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f558:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f55c:	f826 2b02 	strh.w	r2, [r6], #2
9001f560:	fa1f f28e 	uxth.w	r2, lr
9001f564:	e758      	b.n	9001f418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f566:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f56a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001f56e:	1a2d      	subs	r5, r5, r0
9001f570:	b2ad      	uxth	r5, r5
9001f572:	2d00      	cmp	r5, #0
9001f574:	bf18      	it	ne
9001f576:	2000      	movne	r0, #0
9001f578:	e732      	b.n	9001f3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f57a:	4b05      	ldr	r3, [pc, #20]	; (9001f590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f57c:	6818      	ldr	r0, [r3, #0]
9001f57e:	6803      	ldr	r3, [r0, #0]
9001f580:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f582:	4798      	blx	r3
9001f584:	b01f      	add	sp, #124	; 0x7c
9001f586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f58a:	bf00      	nop
9001f58c:	fffff800 	.word	0xfffff800
9001f590:	24039acc 	.word	0x24039acc

9001f594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f598:	b091      	sub	sp, #68	; 0x44
9001f59a:	469b      	mov	fp, r3
9001f59c:	4616      	mov	r6, r2
9001f59e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f5a2:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001f5a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f5aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001f5ae:	4604      	mov	r4, r0
9001f5b0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001f5b4:	4640      	mov	r0, r8
9001f5b6:	460d      	mov	r5, r1
9001f5b8:	4659      	mov	r1, fp
9001f5ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001f5be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001f5c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001f5c6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001f5ca:	f7f3 fab9 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
9001f5ce:	4631      	mov	r1, r6
9001f5d0:	4640      	mov	r0, r8
9001f5d2:	f7f3 fab5 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
9001f5d6:	4b74      	ldr	r3, [pc, #464]	; (9001f7a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f5d8:	8818      	ldrh	r0, [r3, #0]
9001f5da:	4b74      	ldr	r3, [pc, #464]	; (9001f7ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f5dc:	b202      	sxth	r2, r0
9001f5de:	8819      	ldrh	r1, [r3, #0]
9001f5e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f5e4:	b20e      	sxth	r6, r1
9001f5e6:	2b00      	cmp	r3, #0
9001f5e8:	da07      	bge.n	9001f5fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f5ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001f5ee:	4463      	add	r3, ip
9001f5f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001f5f4:	2300      	movs	r3, #0
9001f5f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001f5fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f5fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001f602:	1ad2      	subs	r2, r2, r3
9001f604:	4594      	cmp	ip, r2
9001f606:	bfc4      	itt	gt
9001f608:	1ac2      	subgt	r2, r0, r3
9001f60a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001f60e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f612:	2a00      	cmp	r2, #0
9001f614:	da07      	bge.n	9001f626 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f616:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001f61a:	4462      	add	r2, ip
9001f61c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001f620:	2200      	movs	r2, #0
9001f622:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001f626:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001f62a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f62e:	eba6 060a 	sub.w	r6, r6, sl
9001f632:	42b2      	cmp	r2, r6
9001f634:	bfc4      	itt	gt
9001f636:	eba1 020a 	subgt.w	r2, r1, sl
9001f63a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001f63e:	4a5c      	ldr	r2, [pc, #368]	; (9001f7b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f640:	7812      	ldrb	r2, [r2, #0]
9001f642:	b9a2      	cbnz	r2, 9001f66e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f644:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001f648:	4286      	cmp	r6, r0
9001f64a:	4640      	mov	r0, r8
9001f64c:	9303      	str	r3, [sp, #12]
9001f64e:	bf14      	ite	ne
9001f650:	2600      	movne	r6, #0
9001f652:	2601      	moveq	r6, #1
9001f654:	f7f3 fab7 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f658:	9b03      	ldr	r3, [sp, #12]
9001f65a:	b160      	cbz	r0, 9001f676 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f65c:	2300      	movs	r3, #0
9001f65e:	8023      	strh	r3, [r4, #0]
9001f660:	8063      	strh	r3, [r4, #2]
9001f662:	80a3      	strh	r3, [r4, #4]
9001f664:	4620      	mov	r0, r4
9001f666:	80e3      	strh	r3, [r4, #6]
9001f668:	b011      	add	sp, #68	; 0x44
9001f66a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f66e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001f672:	428e      	cmp	r6, r1
9001f674:	e7e9      	b.n	9001f64a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f676:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001f67a:	a90e      	add	r1, sp, #56	; 0x38
9001f67c:	900e      	str	r0, [sp, #56]	; 0x38
9001f67e:	a80c      	add	r0, sp, #48	; 0x30
9001f680:	9205      	str	r2, [sp, #20]
9001f682:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f686:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001f68a:	9206      	str	r2, [sp, #24]
9001f68c:	f8bb 2000 	ldrh.w	r2, [fp]
9001f690:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001f694:	1a9b      	subs	r3, r3, r2
9001f696:	b21b      	sxth	r3, r3
9001f698:	9303      	str	r3, [sp, #12]
9001f69a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f69e:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001f7b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f6a2:	ebaa 0a03 	sub.w	sl, sl, r3
9001f6a6:	fa0f f38a 	sxth.w	r3, sl
9001f6aa:	9304      	str	r3, [sp, #16]
9001f6ac:	9b03      	ldr	r3, [sp, #12]
9001f6ae:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001f6b2:	9b04      	ldr	r3, [sp, #16]
9001f6b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001f6b8:	9b05      	ldr	r3, [sp, #20]
9001f6ba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001f6be:	9b06      	ldr	r3, [sp, #24]
9001f6c0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001f6c4:	f7f8 fb9e 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f6c8:	4640      	mov	r0, r8
9001f6ca:	f7f8 fb57 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f6ce:	a80e      	add	r0, sp, #56	; 0x38
9001f6d0:	f7f8 fb54 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f6d4:	4b37      	ldr	r3, [pc, #220]	; (9001f7b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001f6d6:	4628      	mov	r0, r5
9001f6d8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001f6dc:	881b      	ldrh	r3, [r3, #0]
9001f6de:	9307      	str	r3, [sp, #28]
9001f6e0:	682b      	ldr	r3, [r5, #0]
9001f6e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f6e4:	4798      	blx	r3
9001f6e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001f6ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001f6ee:	4681      	mov	r9, r0
9001f6f0:	f8db 0000 	ldr.w	r0, [fp]
9001f6f4:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001f6f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001f6fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f6fe:	6803      	ldr	r3, [r0, #0]
9001f700:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f702:	4798      	blx	r3
9001f704:	4607      	mov	r7, r0
9001f706:	f8db 0000 	ldr.w	r0, [fp]
9001f70a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001f70e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f712:	6803      	ldr	r3, [r0, #0]
9001f714:	9109      	str	r1, [sp, #36]	; 0x24
9001f716:	9208      	str	r2, [sp, #32]
9001f718:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f71a:	4798      	blx	r3
9001f71c:	f010 0f01 	tst.w	r0, #1
9001f720:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f724:	d012      	beq.n	9001f74c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001f726:	f8db 0000 	ldr.w	r0, [fp]
9001f72a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001f72e:	6803      	ldr	r3, [r0, #0]
9001f730:	9200      	str	r2, [sp, #0]
9001f732:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001f734:	462b      	mov	r3, r5
9001f736:	e898 0006 	ldmia.w	r8, {r1, r2}
9001f73a:	47b0      	blx	r6
9001f73c:	9b03      	ldr	r3, [sp, #12]
9001f73e:	8023      	strh	r3, [r4, #0]
9001f740:	9b04      	ldr	r3, [sp, #16]
9001f742:	8063      	strh	r3, [r4, #2]
9001f744:	9b05      	ldr	r3, [sp, #20]
9001f746:	80a3      	strh	r3, [r4, #4]
9001f748:	9b06      	ldr	r3, [sp, #24]
9001f74a:	e78b      	b.n	9001f664 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001f74c:	fb09 f202 	mul.w	r2, r9, r2
9001f750:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001f754:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001f758:	440f      	add	r7, r1
9001f75a:	b166      	cbz	r6, 9001f776 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f75c:	9a07      	ldr	r2, [sp, #28]
9001f75e:	4592      	cmp	sl, r2
9001f760:	d109      	bne.n	9001f776 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f762:	f8db 0000 	ldr.w	r0, [fp]
9001f766:	fb09 f303 	mul.w	r3, r9, r3
9001f76a:	4629      	mov	r1, r5
9001f76c:	6802      	ldr	r2, [r0, #0]
9001f76e:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001f770:	463a      	mov	r2, r7
9001f772:	47b0      	blx	r6
9001f774:	e7e2      	b.n	9001f73c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f776:	fb0a f303 	mul.w	r3, sl, r3
9001f77a:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001f77e:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001f7b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f782:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001f786:	4545      	cmp	r5, r8
9001f788:	d2d8      	bcs.n	9001f73c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f78a:	f8db 0000 	ldr.w	r0, [fp]
9001f78e:	4629      	mov	r1, r5
9001f790:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001f794:	4435      	add	r5, r6
9001f796:	6802      	ldr	r2, [r0, #0]
9001f798:	005b      	lsls	r3, r3, #1
9001f79a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001f79e:	463a      	mov	r2, r7
9001f7a0:	47d0      	blx	sl
9001f7a2:	444f      	add	r7, r9
9001f7a4:	e7ef      	b.n	9001f786 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001f7a6:	bf00      	nop
9001f7a8:	24039ac0 	.word	0x24039ac0
9001f7ac:	24039ac2 	.word	0x24039ac2
9001f7b0:	24039ac4 	.word	0x24039ac4
9001f7b4:	24039ac6 	.word	0x24039ac6
9001f7b8:	24039acc 	.word	0x24039acc

9001f7bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001f7bc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001f7be:	4606      	mov	r6, r0
9001f7c0:	b087      	sub	sp, #28
9001f7c2:	460c      	mov	r4, r1
9001f7c4:	4617      	mov	r7, r2
9001f7c6:	461d      	mov	r5, r3
9001f7c8:	b333      	cbz	r3, 9001f818 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f7ca:	4608      	mov	r0, r1
9001f7cc:	f7f3 f9fb 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f7d0:	bb10      	cbnz	r0, 9001f818 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f7d2:	6820      	ldr	r0, [r4, #0]
9001f7d4:	ab04      	add	r3, sp, #16
9001f7d6:	6861      	ldr	r1, [r4, #4]
9001f7d8:	4c1b      	ldr	r4, [pc, #108]	; (9001f848 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001f7da:	c303      	stmia	r3!, {r0, r1}
9001f7dc:	a804      	add	r0, sp, #16
9001f7de:	f7f8 facd 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7e2:	6820      	ldr	r0, [r4, #0]
9001f7e4:	6803      	ldr	r3, [r0, #0]
9001f7e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f7e8:	4798      	blx	r3
9001f7ea:	2dff      	cmp	r5, #255	; 0xff
9001f7ec:	d016      	beq.n	9001f81c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001f7ee:	f010 0f08 	tst.w	r0, #8
9001f7f2:	6820      	ldr	r0, [r4, #0]
9001f7f4:	d015      	beq.n	9001f822 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001f7f6:	2400      	movs	r4, #0
9001f7f8:	6801      	ldr	r1, [r0, #0]
9001f7fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001f7fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f802:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001f806:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001f80a:	9401      	str	r4, [sp, #4]
9001f80c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001f810:	9400      	str	r4, [sp, #0]
9001f812:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001f814:	4639      	mov	r1, r7
9001f816:	47a0      	blx	r4
9001f818:	b007      	add	sp, #28
9001f81a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f81c:	f010 0f02 	tst.w	r0, #2
9001f820:	e7e7      	b.n	9001f7f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001f822:	6803      	ldr	r3, [r0, #0]
9001f824:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f826:	4798      	blx	r3
9001f828:	4b08      	ldr	r3, [pc, #32]	; (9001f84c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001f82a:	4601      	mov	r1, r0
9001f82c:	4630      	mov	r0, r6
9001f82e:	881a      	ldrh	r2, [r3, #0]
9001f830:	6833      	ldr	r3, [r6, #0]
9001f832:	e9cd 7500 	strd	r7, r5, [sp]
9001f836:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001f838:	ab04      	add	r3, sp, #16
9001f83a:	47a8      	blx	r5
9001f83c:	6820      	ldr	r0, [r4, #0]
9001f83e:	6803      	ldr	r3, [r0, #0]
9001f840:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f842:	4798      	blx	r3
9001f844:	e7e8      	b.n	9001f818 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f846:	bf00      	nop
9001f848:	24039acc 	.word	0x24039acc
9001f84c:	24039ac6 	.word	0x24039ac6

9001f850 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001f850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f854:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001f858:	4688      	mov	r8, r1
9001f85a:	4614      	mov	r4, r2
9001f85c:	461d      	mov	r5, r3
9001f85e:	9e08      	ldr	r6, [sp, #32]
9001f860:	2f00      	cmp	r7, #0
9001f862:	f000 80ab 	beq.w	9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f866:	4618      	mov	r0, r3
9001f868:	f7f3 f9ad 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f86c:	2800      	cmp	r0, #0
9001f86e:	f040 80a5 	bne.w	9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f872:	f9b5 1000 	ldrsh.w	r1, [r5]
9001f876:	2fff      	cmp	r7, #255	; 0xff
9001f878:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001f87c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001f880:	fb04 1303 	mla	r3, r4, r3, r1
9001f884:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001f888:	eba4 0200 	sub.w	r2, r4, r0
9001f88c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001f890:	fb04 f505 	mul.w	r5, r4, r5
9001f894:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001f898:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001f89c:	d04a      	beq.n	9001f934 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001f89e:	b2bc      	uxth	r4, r7
9001f8a0:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001f8a4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001f8a8:	fa5f f788 	uxtb.w	r7, r8
9001f8ac:	b2f3      	uxtb	r3, r6
9001f8ae:	0040      	lsls	r0, r0, #1
9001f8b0:	fb0e fe04 	mul.w	lr, lr, r4
9001f8b4:	4367      	muls	r7, r4
9001f8b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001f8ba:	4363      	muls	r3, r4
9001f8bc:	fa1f fc8c 	uxth.w	ip, ip
9001f8c0:	42a9      	cmp	r1, r5
9001f8c2:	d27b      	bcs.n	9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f8c4:	eb01 0900 	add.w	r9, r1, r0
9001f8c8:	4549      	cmp	r1, r9
9001f8ca:	d231      	bcs.n	9001f930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001f8cc:	880a      	ldrh	r2, [r1, #0]
9001f8ce:	1214      	asrs	r4, r2, #8
9001f8d0:	10d6      	asrs	r6, r2, #3
9001f8d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001f8d6:	00d2      	lsls	r2, r2, #3
9001f8d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001f8dc:	b2d2      	uxtb	r2, r2
9001f8de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f8e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f8e6:	fb14 f40c 	smulbb	r4, r4, ip
9001f8ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f8ee:	fb12 f20c 	smulbb	r2, r2, ip
9001f8f2:	fb16 f60c 	smulbb	r6, r6, ip
9001f8f6:	4474      	add	r4, lr
9001f8f8:	441a      	add	r2, r3
9001f8fa:	b2a4      	uxth	r4, r4
9001f8fc:	443e      	add	r6, r7
9001f8fe:	b292      	uxth	r2, r2
9001f900:	f104 0a01 	add.w	sl, r4, #1
9001f904:	b2b6      	uxth	r6, r6
9001f906:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f90a:	f102 0a01 	add.w	sl, r2, #1
9001f90e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001f912:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001f916:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f91a:	4322      	orrs	r2, r4
9001f91c:	1c74      	adds	r4, r6, #1
9001f91e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001f922:	0976      	lsrs	r6, r6, #5
9001f924:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001f928:	4332      	orrs	r2, r6
9001f92a:	f821 2b02 	strh.w	r2, [r1], #2
9001f92e:	e7cb      	b.n	9001f8c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001f930:	4441      	add	r1, r8
9001f932:	e7c5      	b.n	9001f8c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001f934:	0973      	lsrs	r3, r6, #5
9001f936:	4f22      	ldr	r7, [pc, #136]	; (9001f9c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001f938:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001f93c:	ea08 0707 	and.w	r7, r8, r7
9001f940:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f944:	433b      	orrs	r3, r7
9001f946:	07e7      	lsls	r7, r4, #31
9001f948:	ea43 0306 	orr.w	r3, r3, r6
9001f94c:	b29b      	uxth	r3, r3
9001f94e:	d50b      	bpl.n	9001f968 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001f950:	0040      	lsls	r0, r0, #1
9001f952:	0052      	lsls	r2, r2, #1
9001f954:	42a9      	cmp	r1, r5
9001f956:	d231      	bcs.n	9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f958:	180c      	adds	r4, r1, r0
9001f95a:	42a1      	cmp	r1, r4
9001f95c:	d202      	bcs.n	9001f964 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001f95e:	f821 3b02 	strh.w	r3, [r1], #2
9001f962:	e7fa      	b.n	9001f95a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001f964:	4411      	add	r1, r2
9001f966:	e7f5      	b.n	9001f954 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001f968:	078e      	lsls	r6, r1, #30
9001f96a:	d008      	beq.n	9001f97e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001f96c:	0066      	lsls	r6, r4, #1
9001f96e:	460a      	mov	r2, r1
9001f970:	42aa      	cmp	r2, r5
9001f972:	d202      	bcs.n	9001f97a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001f974:	8013      	strh	r3, [r2, #0]
9001f976:	4432      	add	r2, r6
9001f978:	e7fa      	b.n	9001f970 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001f97a:	3102      	adds	r1, #2
9001f97c:	3801      	subs	r0, #1
9001f97e:	07c2      	lsls	r2, r0, #31
9001f980:	d50b      	bpl.n	9001f99a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001f982:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001f986:	0066      	lsls	r6, r4, #1
9001f988:	3a01      	subs	r2, #1
9001f98a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001f98e:	42aa      	cmp	r2, r5
9001f990:	d202      	bcs.n	9001f998 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001f992:	8013      	strh	r3, [r2, #0]
9001f994:	4432      	add	r2, r6
9001f996:	e7fa      	b.n	9001f98e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001f998:	3801      	subs	r0, #1
9001f99a:	b178      	cbz	r0, 9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f99c:	1040      	asrs	r0, r0, #1
9001f99e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001f9a2:	0080      	lsls	r0, r0, #2
9001f9a4:	0064      	lsls	r4, r4, #1
9001f9a6:	42a9      	cmp	r1, r5
9001f9a8:	d208      	bcs.n	9001f9bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f9aa:	180e      	adds	r6, r1, r0
9001f9ac:	460a      	mov	r2, r1
9001f9ae:	42b2      	cmp	r2, r6
9001f9b0:	d202      	bcs.n	9001f9b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001f9b2:	f842 3b04 	str.w	r3, [r2], #4
9001f9b6:	e7fa      	b.n	9001f9ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001f9b8:	4421      	add	r1, r4
9001f9ba:	e7f4      	b.n	9001f9a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001f9bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f9c0:	00fff800 	.word	0x00fff800

9001f9c4 <_ZN8touchgfx8LCD16bppC1Ev>:
9001f9c4:	2200      	movs	r2, #0
9001f9c6:	4912      	ldr	r1, [pc, #72]	; (9001fa10 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001f9c8:	6042      	str	r2, [r0, #4]
9001f9ca:	6001      	str	r1, [r0, #0]
9001f9cc:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001f9d0:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001f9d4:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001f9d8:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001f9dc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001f9e0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001f9e4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001f9e8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001f9ec:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001f9f0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001f9f4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001f9f8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001f9fc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001fa00:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001fa04:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001fa08:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001fa0c:	4770      	bx	lr
9001fa0e:	bf00      	nop
9001fa10:	9002de6c 	.word	0x9002de6c

9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001fa14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa18:	b08d      	sub	sp, #52	; 0x34
9001fa1a:	460d      	mov	r5, r1
9001fa1c:	4604      	mov	r4, r0
9001fa1e:	4699      	mov	r9, r3
9001fa20:	6808      	ldr	r0, [r1, #0]
9001fa22:	ab08      	add	r3, sp, #32
9001fa24:	6849      	ldr	r1, [r1, #4]
9001fa26:	c303      	stmia	r3!, {r0, r1}
9001fa28:	6810      	ldr	r0, [r2, #0]
9001fa2a:	ab0a      	add	r3, sp, #40	; 0x28
9001fa2c:	6851      	ldr	r1, [r2, #4]
9001fa2e:	c303      	stmia	r3!, {r0, r1}
9001fa30:	a808      	add	r0, sp, #32
9001fa32:	f7f8 f9a3 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fa36:	4629      	mov	r1, r5
9001fa38:	a80a      	add	r0, sp, #40	; 0x28
9001fa3a:	4d67      	ldr	r5, [pc, #412]	; (9001fbd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fa3c:	f7f8 f9e2 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fa40:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001fa44:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001fa48:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001fa4c:	6828      	ldr	r0, [r5, #0]
9001fa4e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fa52:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001fa56:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001fa5a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fa5e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001fa62:	440a      	add	r2, r1
9001fa64:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001fa68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001fa6c:	4413      	add	r3, r2
9001fa6e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001fa72:	6803      	ldr	r3, [r0, #0]
9001fa74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fa76:	4798      	blx	r3
9001fa78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fa7c:	d119      	bne.n	9001fab2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001fa7e:	f010 0f20 	tst.w	r0, #32
9001fa82:	6828      	ldr	r0, [r5, #0]
9001fa84:	d018      	beq.n	9001fab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001fa86:	2500      	movs	r5, #0
9001fa88:	6801      	ldr	r1, [r0, #0]
9001fa8a:	b2b6      	uxth	r6, r6
9001fa8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001fa90:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001fa94:	9601      	str	r6, [sp, #4]
9001fa96:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001fa9a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001fa9e:	9502      	str	r5, [sp, #8]
9001faa0:	fa1f f588 	uxth.w	r5, r8
9001faa4:	9500      	str	r5, [sp, #0]
9001faa6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001faa8:	4621      	mov	r1, r4
9001faaa:	47a8      	blx	r5
9001faac:	b00d      	add	sp, #52	; 0x34
9001faae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fab2:	f010 0f40 	tst.w	r0, #64	; 0x40
9001fab6:	e7e4      	b.n	9001fa82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001fab8:	6803      	ldr	r3, [r0, #0]
9001faba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fabc:	4798      	blx	r3
9001fabe:	4947      	ldr	r1, [pc, #284]	; (9001fbdc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001fac0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001fac4:	880b      	ldrh	r3, [r1, #0]
9001fac6:	468a      	mov	sl, r1
9001fac8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001facc:	fb03 5202 	mla	r2, r3, r2, r5
9001fad0:	4373      	muls	r3, r6
9001fad2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fad6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fada:	9307      	str	r3, [sp, #28]
9001fadc:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fae0:	9306      	str	r3, [sp, #24]
9001fae2:	9b07      	ldr	r3, [sp, #28]
9001fae4:	4298      	cmp	r0, r3
9001fae6:	d270      	bcs.n	9001fbca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001fae8:	9b06      	ldr	r3, [sp, #24]
9001faea:	4621      	mov	r1, r4
9001faec:	eb00 0b03 	add.w	fp, r0, r3
9001faf0:	4558      	cmp	r0, fp
9001faf2:	d25d      	bcs.n	9001fbb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001faf4:	f851 4b04 	ldr.w	r4, [r1], #4
9001faf8:	0e23      	lsrs	r3, r4, #24
9001fafa:	d014      	beq.n	9001fb26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fafc:	2bff      	cmp	r3, #255	; 0xff
9001fafe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001fb02:	d112      	bne.n	9001fb2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fb04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fb08:	d10f      	bne.n	9001fb2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fb0a:	0963      	lsrs	r3, r4, #5
9001fb0c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001fb10:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001fb14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fb18:	f02c 0c07 	bic.w	ip, ip, #7
9001fb1c:	ea43 0c0c 	orr.w	ip, r3, ip
9001fb20:	ea4c 0404 	orr.w	r4, ip, r4
9001fb24:	8004      	strh	r4, [r0, #0]
9001fb26:	3002      	adds	r0, #2
9001fb28:	e7e2      	b.n	9001faf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001fb2a:	fb09 f303 	mul.w	r3, r9, r3
9001fb2e:	8807      	ldrh	r7, [r0, #0]
9001fb30:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001fb34:	fa5f fc8c 	uxtb.w	ip, ip
9001fb38:	1c5a      	adds	r2, r3, #1
9001fb3a:	123e      	asrs	r6, r7, #8
9001fb3c:	10fd      	asrs	r5, r7, #3
9001fb3e:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001fb42:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001fb46:	00ff      	lsls	r7, r7, #3
9001fb48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fb4c:	1212      	asrs	r2, r2, #8
9001fb4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fb52:	b293      	uxth	r3, r2
9001fb54:	43d2      	mvns	r2, r2
9001fb56:	b2ff      	uxtb	r7, r7
9001fb58:	fb1e fe03 	smulbb	lr, lr, r3
9001fb5c:	b2d2      	uxtb	r2, r2
9001fb5e:	fb1c fc03 	smulbb	ip, ip, r3
9001fb62:	b2e4      	uxtb	r4, r4
9001fb64:	fb06 e602 	mla	r6, r6, r2, lr
9001fb68:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fb6c:	fb14 f403 	smulbb	r4, r4, r3
9001fb70:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001fb74:	b2b6      	uxth	r6, r6
9001fb76:	fb05 c502 	mla	r5, r5, r2, ip
9001fb7a:	fb07 4702 	mla	r7, r7, r2, r4
9001fb7e:	f106 0e01 	add.w	lr, r6, #1
9001fb82:	b2ad      	uxth	r5, r5
9001fb84:	b2bf      	uxth	r7, r7
9001fb86:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001fb8a:	f105 0c01 	add.w	ip, r5, #1
9001fb8e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001fb92:	1c7e      	adds	r6, r7, #1
9001fb94:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fb98:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001fb9c:	096d      	lsrs	r5, r5, #5
9001fb9e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001fba2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001fba6:	ea46 060e 	orr.w	r6, r6, lr
9001fbaa:	432e      	orrs	r6, r5
9001fbac:	8006      	strh	r6, [r0, #0]
9001fbae:	e7ba      	b.n	9001fb26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fbb0:	f8ba 3000 	ldrh.w	r3, [sl]
9001fbb4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001fbb8:	eba3 0308 	sub.w	r3, r3, r8
9001fbbc:	eba4 0408 	sub.w	r4, r4, r8
9001fbc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fbc4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001fbc8:	e78b      	b.n	9001fae2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001fbca:	4b03      	ldr	r3, [pc, #12]	; (9001fbd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fbcc:	6818      	ldr	r0, [r3, #0]
9001fbce:	6803      	ldr	r3, [r0, #0]
9001fbd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fbd2:	4798      	blx	r3
9001fbd4:	e76a      	b.n	9001faac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001fbd6:	bf00      	nop
9001fbd8:	24039acc 	.word	0x24039acc
9001fbdc:	24039ac6 	.word	0x24039ac6

9001fbe0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001fbe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001fbe4:	b085      	sub	sp, #20
9001fbe6:	6810      	ldr	r0, [r2, #0]
9001fbe8:	460c      	mov	r4, r1
9001fbea:	6851      	ldr	r1, [r2, #4]
9001fbec:	466d      	mov	r5, sp
9001fbee:	4616      	mov	r6, r2
9001fbf0:	c503      	stmia	r5!, {r0, r1}
9001fbf2:	6818      	ldr	r0, [r3, #0]
9001fbf4:	6859      	ldr	r1, [r3, #4]
9001fbf6:	c503      	stmia	r5!, {r0, r1}
9001fbf8:	4668      	mov	r0, sp
9001fbfa:	4d2e      	ldr	r5, [pc, #184]	; (9001fcb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001fbfc:	f7f8 f8be 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fc00:	4631      	mov	r1, r6
9001fc02:	a802      	add	r0, sp, #8
9001fc04:	4e2c      	ldr	r6, [pc, #176]	; (9001fcb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001fc06:	f7f8 f8fd 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fc0a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001fc0e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001fc12:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fc16:	6828      	ldr	r0, [r5, #0]
9001fc18:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fc1c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001fc20:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001fc24:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fc28:	f8bd 1000 	ldrh.w	r1, [sp]
9001fc2c:	440a      	add	r2, r1
9001fc2e:	f8ad 2008 	strh.w	r2, [sp, #8]
9001fc32:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001fc36:	4413      	add	r3, r2
9001fc38:	f8ad 300a 	strh.w	r3, [sp, #10]
9001fc3c:	6803      	ldr	r3, [r0, #0]
9001fc3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fc40:	4798      	blx	r3
9001fc42:	8833      	ldrh	r3, [r6, #0]
9001fc44:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001fc48:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001fc4c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001fc50:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001fcbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001fc54:	fb03 1202 	mla	r2, r3, r2, r1
9001fc58:	fb08 f303 	mul.w	r3, r8, r3
9001fc5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fc60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fc64:	4298      	cmp	r0, r3
9001fc66:	d21d      	bcs.n	9001fca4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001fc68:	eb00 080c 	add.w	r8, r0, ip
9001fc6c:	4540      	cmp	r0, r8
9001fc6e:	d20f      	bcs.n	9001fc90 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001fc70:	f854 1b04 	ldr.w	r1, [r4], #4
9001fc74:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001fc78:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001fc7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001fc80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001fc84:	ea42 0209 	orr.w	r2, r2, r9
9001fc88:	430a      	orrs	r2, r1
9001fc8a:	f820 2b02 	strh.w	r2, [r0], #2
9001fc8e:	e7ed      	b.n	9001fc6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001fc90:	8832      	ldrh	r2, [r6, #0]
9001fc92:	1bd2      	subs	r2, r2, r7
9001fc94:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fc98:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001fc9c:	1bd2      	subs	r2, r2, r7
9001fc9e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001fca2:	e7df      	b.n	9001fc64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001fca4:	6828      	ldr	r0, [r5, #0]
9001fca6:	6803      	ldr	r3, [r0, #0]
9001fca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fcaa:	4798      	blx	r3
9001fcac:	b005      	add	sp, #20
9001fcae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001fcb2:	bf00      	nop
9001fcb4:	24039acc 	.word	0x24039acc
9001fcb8:	24039ac6 	.word	0x24039ac6
9001fcbc:	fffff800 	.word	0xfffff800

9001fcc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001fcc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fcc4:	b08e      	sub	sp, #56	; 0x38
9001fcc6:	460e      	mov	r6, r1
9001fcc8:	4604      	mov	r4, r0
9001fcca:	461d      	mov	r5, r3
9001fccc:	6808      	ldr	r0, [r1, #0]
9001fcce:	ab0a      	add	r3, sp, #40	; 0x28
9001fcd0:	6849      	ldr	r1, [r1, #4]
9001fcd2:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001fea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001fcd6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001feac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001fcda:	c303      	stmia	r3!, {r0, r1}
9001fcdc:	6810      	ldr	r0, [r2, #0]
9001fcde:	ab0c      	add	r3, sp, #48	; 0x30
9001fce0:	6851      	ldr	r1, [r2, #4]
9001fce2:	c303      	stmia	r3!, {r0, r1}
9001fce4:	a80a      	add	r0, sp, #40	; 0x28
9001fce6:	f7f8 f849 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fcea:	4631      	mov	r1, r6
9001fcec:	a80c      	add	r0, sp, #48	; 0x30
9001fcee:	f7f8 f889 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fcf2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001fcf6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001fcfa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001fcfe:	f8d8 0000 	ldr.w	r0, [r8]
9001fd02:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fd06:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001fd0a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001fd0e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001fd12:	440c      	add	r4, r1
9001fd14:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001fd18:	440a      	add	r2, r1
9001fd1a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001fd1e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001fd22:	4413      	add	r3, r2
9001fd24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001fd28:	6803      	ldr	r3, [r0, #0]
9001fd2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fd2c:	4798      	blx	r3
9001fd2e:	2dff      	cmp	r5, #255	; 0xff
9001fd30:	d124      	bne.n	9001fd7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001fd32:	f010 0f01 	tst.w	r0, #1
9001fd36:	f8d8 0000 	ldr.w	r0, [r8]
9001fd3a:	d022      	beq.n	9001fd82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001fd3c:	2100      	movs	r1, #0
9001fd3e:	f04f 0e01 	mov.w	lr, #1
9001fd42:	f8d0 c000 	ldr.w	ip, [r0]
9001fd46:	b2b6      	uxth	r6, r6
9001fd48:	f8cd e018 	str.w	lr, [sp, #24]
9001fd4c:	b2bf      	uxth	r7, r7
9001fd4e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001fd52:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001fd56:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001fd5a:	f8b9 e000 	ldrh.w	lr, [r9]
9001fd5e:	9503      	str	r5, [sp, #12]
9001fd60:	9601      	str	r6, [sp, #4]
9001fd62:	9700      	str	r7, [sp, #0]
9001fd64:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001fd68:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001fd6c:	9102      	str	r1, [sp, #8]
9001fd6e:	4621      	mov	r1, r4
9001fd70:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001fd74:	47a8      	blx	r5
9001fd76:	b00e      	add	sp, #56	; 0x38
9001fd78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fd7c:	f010 0f04 	tst.w	r0, #4
9001fd80:	e7d9      	b.n	9001fd36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001fd82:	6803      	ldr	r3, [r0, #0]
9001fd84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fd86:	4798      	blx	r3
9001fd88:	f8b9 3000 	ldrh.w	r3, [r9]
9001fd8c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001fd90:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001fd94:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001fd98:	435e      	muls	r6, r3
9001fd9a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001fd9e:	2dff      	cmp	r5, #255	; 0xff
9001fda0:	fb03 1202 	mla	r2, r3, r2, r1
9001fda4:	ebac 0c07 	sub.w	ip, ip, r7
9001fda8:	eba3 0707 	sub.w	r7, r3, r7
9001fdac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fdb0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001fdb4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001fdb8:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001fdbc:	d049      	beq.n	9001fe52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001fdbe:	43eb      	mvns	r3, r5
9001fdc0:	fa1f f985 	uxth.w	r9, r5
9001fdc4:	b2db      	uxtb	r3, r3
9001fdc6:	42b0      	cmp	r0, r6
9001fdc8:	d266      	bcs.n	9001fe98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001fdca:	eb00 0a0e 	add.w	sl, r0, lr
9001fdce:	4550      	cmp	r0, sl
9001fdd0:	4621      	mov	r1, r4
9001fdd2:	f104 0403 	add.w	r4, r4, #3
9001fdd6:	d25b      	bcs.n	9001fe90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001fdd8:	8802      	ldrh	r2, [r0, #0]
9001fdda:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fdde:	ea4f 2822 	mov.w	r8, r2, asr #8
9001fde2:	fb11 f109 	smulbb	r1, r1, r9
9001fde6:	10d5      	asrs	r5, r2, #3
9001fde8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001fdec:	00d2      	lsls	r2, r2, #3
9001fdee:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fdf2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001fdf6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fdfa:	fb08 1803 	mla	r8, r8, r3, r1
9001fdfe:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001fe02:	b2d2      	uxtb	r2, r2
9001fe04:	fb11 f109 	smulbb	r1, r1, r9
9001fe08:	fa1f f888 	uxth.w	r8, r8
9001fe0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001fe10:	fb05 1503 	mla	r5, r5, r3, r1
9001fe14:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fe18:	fb11 f109 	smulbb	r1, r1, r9
9001fe1c:	b2ad      	uxth	r5, r5
9001fe1e:	fb02 1203 	mla	r2, r2, r3, r1
9001fe22:	f108 0101 	add.w	r1, r8, #1
9001fe26:	b292      	uxth	r2, r2
9001fe28:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001fe2c:	1c51      	adds	r1, r2, #1
9001fe2e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001fe32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001fe36:	1c69      	adds	r1, r5, #1
9001fe38:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001fe3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fe40:	096d      	lsrs	r5, r5, #5
9001fe42:	ea42 0208 	orr.w	r2, r2, r8
9001fe46:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001fe4a:	432a      	orrs	r2, r5
9001fe4c:	f820 2b02 	strh.w	r2, [r0], #2
9001fe50:	e7bd      	b.n	9001fdce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001fe52:	4a14      	ldr	r2, [pc, #80]	; (9001fea4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001fe54:	42b0      	cmp	r0, r6
9001fe56:	d21f      	bcs.n	9001fe98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001fe58:	eb00 050e 	add.w	r5, r0, lr
9001fe5c:	42a8      	cmp	r0, r5
9001fe5e:	4621      	mov	r1, r4
9001fe60:	f104 0403 	add.w	r4, r4, #3
9001fe64:	d210      	bcs.n	9001fe88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001fe66:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001fe6a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fe6e:	00db      	lsls	r3, r3, #3
9001fe70:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001fe74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fe78:	430b      	orrs	r3, r1
9001fe7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001fe7e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001fe82:	f820 3b02 	strh.w	r3, [r0], #2
9001fe86:	e7e9      	b.n	9001fe5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001fe88:	4438      	add	r0, r7
9001fe8a:	eb01 040c 	add.w	r4, r1, ip
9001fe8e:	e7e1      	b.n	9001fe54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001fe90:	4438      	add	r0, r7
9001fe92:	eb01 040c 	add.w	r4, r1, ip
9001fe96:	e796      	b.n	9001fdc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001fe98:	4b03      	ldr	r3, [pc, #12]	; (9001fea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001fe9a:	6818      	ldr	r0, [r3, #0]
9001fe9c:	6803      	ldr	r3, [r0, #0]
9001fe9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fea0:	4798      	blx	r3
9001fea2:	e768      	b.n	9001fd76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001fea4:	fffff800 	.word	0xfffff800
9001fea8:	24039acc 	.word	0x24039acc
9001feac:	24039ac6 	.word	0x24039ac6

9001feb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001feb0:	b4f0      	push	{r4, r5, r6, r7}
9001feb2:	4616      	mov	r6, r2
9001feb4:	461c      	mov	r4, r3
9001feb6:	460d      	mov	r5, r1
9001feb8:	9a04      	ldr	r2, [sp, #16]
9001feba:	2e01      	cmp	r6, #1
9001febc:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001fec0:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001fec4:	d012      	beq.n	9001feec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001fec6:	d303      	bcc.n	9001fed0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001fec8:	2e02      	cmp	r6, #2
9001feca:	d00a      	beq.n	9001fee2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001fecc:	bcf0      	pop	{r4, r5, r6, r7}
9001fece:	4770      	bx	lr
9001fed0:	6805      	ldr	r5, [r0, #0]
9001fed2:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001fed6:	68ed      	ldr	r5, [r5, #12]
9001fed8:	4613      	mov	r3, r2
9001feda:	4622      	mov	r2, r4
9001fedc:	46ac      	mov	ip, r5
9001fede:	bcf0      	pop	{r4, r5, r6, r7}
9001fee0:	4760      	bx	ip
9001fee2:	4621      	mov	r1, r4
9001fee4:	4628      	mov	r0, r5
9001fee6:	bcf0      	pop	{r4, r5, r6, r7}
9001fee8:	f7ff bd94 	b.w	9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001feec:	4621      	mov	r1, r4
9001feee:	4628      	mov	r0, r5
9001fef0:	bcf0      	pop	{r4, r5, r6, r7}
9001fef2:	f7ff bee5 	b.w	9001fcc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001fef8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001fef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fefc:	b093      	sub	sp, #76	; 0x4c
9001fefe:	4681      	mov	r9, r0
9001ff00:	4688      	mov	r8, r1
9001ff02:	6810      	ldr	r0, [r2, #0]
9001ff04:	6851      	ldr	r1, [r2, #4]
9001ff06:	ac0e      	add	r4, sp, #56	; 0x38
9001ff08:	4616      	mov	r6, r2
9001ff0a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001ff0e:	4f6b      	ldr	r7, [pc, #428]	; (900200bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001ff10:	c403      	stmia	r4!, {r0, r1}
9001ff12:	6818      	ldr	r0, [r3, #0]
9001ff14:	ac10      	add	r4, sp, #64	; 0x40
9001ff16:	6859      	ldr	r1, [r3, #4]
9001ff18:	c403      	stmia	r4!, {r0, r1}
9001ff1a:	a80e      	add	r0, sp, #56	; 0x38
9001ff1c:	f7f7 ff2e 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ff20:	4631      	mov	r1, r6
9001ff22:	a810      	add	r0, sp, #64	; 0x40
9001ff24:	4e66      	ldr	r6, [pc, #408]	; (900200c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001ff26:	f7f7 ff6d 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ff2a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001ff2e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001ff32:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001ff36:	6830      	ldr	r0, [r6, #0]
9001ff38:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ff3c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001ff40:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001ff44:	4489      	add	r9, r1
9001ff46:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001ff4a:	440a      	add	r2, r1
9001ff4c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001ff50:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001ff54:	4413      	add	r3, r2
9001ff56:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001ff5a:	6803      	ldr	r3, [r0, #0]
9001ff5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ff5e:	4798      	blx	r3
9001ff60:	f010 0f80 	tst.w	r0, #128	; 0x80
9001ff64:	6830      	ldr	r0, [r6, #0]
9001ff66:	d01d      	beq.n	9001ffa4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001ff68:	2200      	movs	r2, #0
9001ff6a:	6801      	ldr	r1, [r0, #0]
9001ff6c:	b2a4      	uxth	r4, r4
9001ff6e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001ff72:	b2ad      	uxth	r5, r5
9001ff74:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ff78:	220b      	movs	r2, #11
9001ff7a:	9207      	str	r2, [sp, #28]
9001ff7c:	883a      	ldrh	r2, [r7, #0]
9001ff7e:	9502      	str	r5, [sp, #8]
9001ff80:	9206      	str	r2, [sp, #24]
9001ff82:	2201      	movs	r2, #1
9001ff84:	9401      	str	r4, [sp, #4]
9001ff86:	e9cd a204 	strd	sl, r2, [sp, #16]
9001ff8a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001ff8e:	9203      	str	r2, [sp, #12]
9001ff90:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001ff94:	9200      	str	r2, [sp, #0]
9001ff96:	4642      	mov	r2, r8
9001ff98:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001ff9a:	4649      	mov	r1, r9
9001ff9c:	47a0      	blx	r4
9001ff9e:	b013      	add	sp, #76	; 0x4c
9001ffa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ffa4:	6803      	ldr	r3, [r0, #0]
9001ffa6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ffa8:	4798      	blx	r3
9001ffaa:	883b      	ldrh	r3, [r7, #0]
9001ffac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ffb0:	f04f 0e04 	mov.w	lr, #4
9001ffb4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001ffb8:	435d      	muls	r5, r3
9001ffba:	fb03 1202 	mla	r2, r3, r2, r1
9001ffbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001ffc2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001ffc6:	920c      	str	r2, [sp, #48]	; 0x30
9001ffc8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001ffcc:	1b12      	subs	r2, r2, r4
9001ffce:	920d      	str	r2, [sp, #52]	; 0x34
9001ffd0:	0062      	lsls	r2, r4, #1
9001ffd2:	1b1c      	subs	r4, r3, r4
9001ffd4:	920a      	str	r2, [sp, #40]	; 0x28
9001ffd6:	0063      	lsls	r3, r4, #1
9001ffd8:	930b      	str	r3, [sp, #44]	; 0x2c
9001ffda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ffdc:	4298      	cmp	r0, r3
9001ffde:	d266      	bcs.n	900200ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001ffe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ffe2:	eb00 0b03 	add.w	fp, r0, r3
9001ffe6:	4558      	cmp	r0, fp
9001ffe8:	d25c      	bcs.n	900200a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001ffea:	f819 3b01 	ldrb.w	r3, [r9], #1
9001ffee:	fb1e e303 	smlabb	r3, lr, r3, lr
9001fff2:	f858 2003 	ldr.w	r2, [r8, r3]
9001fff6:	0e11      	lsrs	r1, r2, #24
9001fff8:	d012      	beq.n	90020020 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001fffa:	29ff      	cmp	r1, #255	; 0xff
9001fffc:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020000:	d110      	bne.n	90020024 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020002:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90020006:	d10d      	bne.n	90020024 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020008:	0953      	lsrs	r3, r2, #5
9002000a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9002000e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020012:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020016:	f027 0707 	bic.w	r7, r7, #7
9002001a:	431f      	orrs	r7, r3
9002001c:	433a      	orrs	r2, r7
9002001e:	8002      	strh	r2, [r0, #0]
90020020:	3002      	adds	r0, #2
90020022:	e7e0      	b.n	9001ffe6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020024:	fb0a f101 	mul.w	r1, sl, r1
90020028:	8806      	ldrh	r6, [r0, #0]
9002002a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9002002e:	b2d2      	uxtb	r2, r2
90020030:	1c4b      	adds	r3, r1, #1
90020032:	1235      	asrs	r5, r6, #8
90020034:	10f4      	asrs	r4, r6, #3
90020036:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002003a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002003e:	00f6      	lsls	r6, r6, #3
90020040:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90020044:	121b      	asrs	r3, r3, #8
90020046:	b2f6      	uxtb	r6, r6
90020048:	b299      	uxth	r1, r3
9002004a:	43db      	mvns	r3, r3
9002004c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020050:	fb1c fc01 	smulbb	ip, ip, r1
90020054:	b2db      	uxtb	r3, r3
90020056:	fb12 f201 	smulbb	r2, r2, r1
9002005a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002005e:	fb05 c503 	mla	r5, r5, r3, ip
90020062:	b2ff      	uxtb	r7, r7
90020064:	fb06 2203 	mla	r2, r6, r3, r2
90020068:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9002006c:	fb17 f701 	smulbb	r7, r7, r1
90020070:	b2ad      	uxth	r5, r5
90020072:	b292      	uxth	r2, r2
90020074:	fb04 7403 	mla	r4, r4, r3, r7
90020078:	f105 0c01 	add.w	ip, r5, #1
9002007c:	1c57      	adds	r7, r2, #1
9002007e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020082:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90020086:	b2a4      	uxth	r4, r4
90020088:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002008c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020090:	433d      	orrs	r5, r7
90020092:	1c67      	adds	r7, r4, #1
90020094:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90020098:	0964      	lsrs	r4, r4, #5
9002009a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002009e:	4325      	orrs	r5, r4
900200a0:	8005      	strh	r5, [r0, #0]
900200a2:	e7bd      	b.n	90020020 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900200a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900200a6:	4418      	add	r0, r3
900200a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900200aa:	4499      	add	r9, r3
900200ac:	e795      	b.n	9001ffda <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900200ae:	4b04      	ldr	r3, [pc, #16]	; (900200c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900200b0:	6818      	ldr	r0, [r3, #0]
900200b2:	6803      	ldr	r3, [r0, #0]
900200b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900200b6:	4798      	blx	r3
900200b8:	e771      	b.n	9001ff9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900200ba:	bf00      	nop
900200bc:	24039ac6 	.word	0x24039ac6
900200c0:	24039acc 	.word	0x24039acc

900200c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900200c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900200c8:	b087      	sub	sp, #28
900200ca:	4680      	mov	r8, r0
900200cc:	460d      	mov	r5, r1
900200ce:	4614      	mov	r4, r2
900200d0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
900200d4:	2e00      	cmp	r6, #0
900200d6:	f000 80b9 	beq.w	9002024c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900200da:	6810      	ldr	r0, [r2, #0]
900200dc:	af02      	add	r7, sp, #8
900200de:	6851      	ldr	r1, [r2, #4]
900200e0:	c703      	stmia	r7!, {r0, r1}
900200e2:	6818      	ldr	r0, [r3, #0]
900200e4:	af04      	add	r7, sp, #16
900200e6:	6859      	ldr	r1, [r3, #4]
900200e8:	c703      	stmia	r7!, {r0, r1}
900200ea:	a802      	add	r0, sp, #8
900200ec:	f7f7 fe46 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900200f0:	4621      	mov	r1, r4
900200f2:	a804      	add	r0, sp, #16
900200f4:	f7f7 fe86 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900200f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900200fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020100:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020104:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90020108:	fb14 2103 	smlabb	r1, r4, r3, r2
9002010c:	eb08 0401 	add.w	r4, r8, r1
90020110:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020114:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020118:	440a      	add	r2, r1
9002011a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002011e:	f8ad 2010 	strh.w	r2, [sp, #16]
90020122:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020126:	4413      	add	r3, r2
90020128:	f8ad 3012 	strh.w	r3, [sp, #18]
9002012c:	4b49      	ldr	r3, [pc, #292]	; (90020254 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002012e:	6818      	ldr	r0, [r3, #0]
90020130:	6803      	ldr	r3, [r0, #0]
90020132:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020134:	4798      	blx	r3
90020136:	4b48      	ldr	r3, [pc, #288]	; (90020258 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90020138:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9002013c:	2eff      	cmp	r6, #255	; 0xff
9002013e:	881a      	ldrh	r2, [r3, #0]
90020140:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90020144:	fb02 c101 	mla	r1, r2, r1, ip
90020148:	fb02 f207 	mul.w	r2, r2, r7
9002014c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020150:	f105 0104 	add.w	r1, r5, #4
90020154:	461d      	mov	r5, r3
90020156:	d05a      	beq.n	9002020e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90020158:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9002015c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020160:	b2b6      	uxth	r6, r6
90020162:	9301      	str	r3, [sp, #4]
90020164:	fa1f fe8e 	uxth.w	lr, lr
90020168:	4282      	cmp	r2, r0
9002016a:	d96a      	bls.n	90020242 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002016c:	eb00 0b0a 	add.w	fp, r0, sl
90020170:	4583      	cmp	fp, r0
90020172:	d940      	bls.n	900201f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90020174:	8805      	ldrh	r5, [r0, #0]
90020176:	f814 3b01 	ldrb.w	r3, [r4], #1
9002017a:	122f      	asrs	r7, r5, #8
9002017c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020180:	ea4f 09e5 	mov.w	r9, r5, asr #3
90020184:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90020188:	00ed      	lsls	r5, r5, #3
9002018a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002018e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90020192:	fb17 f70e 	smulbb	r7, r7, lr
90020196:	b2ed      	uxtb	r5, r5
90020198:	fb19 f90e 	smulbb	r9, r9, lr
9002019c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900201a0:	fb15 f50e 	smulbb	r5, r5, lr
900201a4:	fb0c 7c06 	mla	ip, ip, r6, r7
900201a8:	10df      	asrs	r7, r3, #3
900201aa:	00db      	lsls	r3, r3, #3
900201ac:	fa1f fc8c 	uxth.w	ip, ip
900201b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900201b4:	b2db      	uxtb	r3, r3
900201b6:	fb07 9706 	mla	r7, r7, r6, r9
900201ba:	f10c 0901 	add.w	r9, ip, #1
900201be:	fb03 5306 	mla	r3, r3, r6, r5
900201c2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900201c6:	b29b      	uxth	r3, r3
900201c8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
900201cc:	b2bf      	uxth	r7, r7
900201ce:	f103 0c01 	add.w	ip, r3, #1
900201d2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900201d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900201da:	ea4c 0c09 	orr.w	ip, ip, r9
900201de:	f107 0901 	add.w	r9, r7, #1
900201e2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900201e6:	097f      	lsrs	r7, r7, #5
900201e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900201ec:	ea4c 0c07 	orr.w	ip, ip, r7
900201f0:	f820 cb02 	strh.w	ip, [r0], #2
900201f4:	e7bc      	b.n	90020170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
900201f6:	9b01      	ldr	r3, [sp, #4]
900201f8:	881b      	ldrh	r3, [r3, #0]
900201fa:	eba3 0308 	sub.w	r3, r3, r8
900201fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020202:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020206:	eba3 0308 	sub.w	r3, r3, r8
9002020a:	441c      	add	r4, r3
9002020c:	e7ac      	b.n	90020168 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9002020e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020212:	4282      	cmp	r2, r0
90020214:	d915      	bls.n	90020242 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020216:	eb00 060a 	add.w	r6, r0, sl
9002021a:	4286      	cmp	r6, r0
9002021c:	d906      	bls.n	9002022c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9002021e:	f814 3b01 	ldrb.w	r3, [r4], #1
90020222:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020226:	f820 3b02 	strh.w	r3, [r0], #2
9002022a:	e7f6      	b.n	9002021a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9002022c:	882b      	ldrh	r3, [r5, #0]
9002022e:	eba3 0308 	sub.w	r3, r3, r8
90020232:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020236:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002023a:	eba3 0308 	sub.w	r3, r3, r8
9002023e:	441c      	add	r4, r3
90020240:	e7e7      	b.n	90020212 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020242:	4b04      	ldr	r3, [pc, #16]	; (90020254 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020244:	6818      	ldr	r0, [r3, #0]
90020246:	6803      	ldr	r3, [r0, #0]
90020248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002024a:	4798      	blx	r3
9002024c:	b007      	add	sp, #28
9002024e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020252:	bf00      	nop
90020254:	24039acc 	.word	0x24039acc
90020258:	24039ac6 	.word	0x24039ac6

9002025c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9002025c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020260:	b091      	sub	sp, #68	; 0x44
90020262:	4680      	mov	r8, r0
90020264:	460f      	mov	r7, r1
90020266:	4614      	mov	r4, r2
90020268:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9002026c:	2d00      	cmp	r5, #0
9002026e:	d051      	beq.n	90020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020270:	6810      	ldr	r0, [r2, #0]
90020272:	ae0c      	add	r6, sp, #48	; 0x30
90020274:	6851      	ldr	r1, [r2, #4]
90020276:	f8df 9200 	ldr.w	r9, [pc, #512]	; 90020478 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9002027a:	c603      	stmia	r6!, {r0, r1}
9002027c:	6818      	ldr	r0, [r3, #0]
9002027e:	ae0e      	add	r6, sp, #56	; 0x38
90020280:	6859      	ldr	r1, [r3, #4]
90020282:	c603      	stmia	r6!, {r0, r1}
90020284:	a80c      	add	r0, sp, #48	; 0x30
90020286:	f7f7 fd79 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002028a:	4621      	mov	r1, r4
9002028c:	a80e      	add	r0, sp, #56	; 0x38
9002028e:	f7f7 fdb9 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020292:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90020296:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002029a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9002029e:	f8d9 0000 	ldr.w	r0, [r9]
900202a2:	fb11 2103 	smlabb	r1, r1, r3, r2
900202a6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
900202aa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
900202ae:	eb08 0401 	add.w	r4, r8, r1
900202b2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
900202b6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9002047c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900202ba:	440a      	add	r2, r1
900202bc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
900202c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900202c4:	4413      	add	r3, r2
900202c6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
900202ca:	6803      	ldr	r3, [r0, #0]
900202cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900202ce:	4798      	blx	r3
900202d0:	f010 0f80 	tst.w	r0, #128	; 0x80
900202d4:	f8d9 0000 	ldr.w	r0, [r9]
900202d8:	d01f      	beq.n	9002031a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900202da:	2200      	movs	r2, #0
900202dc:	6801      	ldr	r1, [r0, #0]
900202de:	b2b6      	uxth	r6, r6
900202e0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900202e4:	e9cd 2208 	strd	r2, r2, [sp, #32]
900202e8:	220b      	movs	r2, #11
900202ea:	9207      	str	r2, [sp, #28]
900202ec:	f8b8 2000 	ldrh.w	r2, [r8]
900202f0:	9601      	str	r6, [sp, #4]
900202f2:	9206      	str	r2, [sp, #24]
900202f4:	2201      	movs	r2, #1
900202f6:	e9cd 5204 	strd	r5, r2, [sp, #16]
900202fa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
900202fe:	9203      	str	r2, [sp, #12]
90020300:	fa1f f28a 	uxth.w	r2, sl
90020304:	9202      	str	r2, [sp, #8]
90020306:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9002030a:	9200      	str	r2, [sp, #0]
9002030c:	463a      	mov	r2, r7
9002030e:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90020310:	4621      	mov	r1, r4
90020312:	47a8      	blx	r5
90020314:	b011      	add	sp, #68	; 0x44
90020316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002031a:	6803      	ldr	r3, [r0, #0]
9002031c:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020320:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020322:	4798      	blx	r3
90020324:	f8b8 2000 	ldrh.w	r2, [r8]
90020328:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002032c:	2dff      	cmp	r5, #255	; 0xff
9002032e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
90020332:	fb0a fa02 	mul.w	sl, sl, r2
90020336:	fb02 1303 	mla	r3, r2, r3, r1
9002033a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002033e:	d062      	beq.n	90020406 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020340:	ea6f 0c05 	mvn.w	ip, r5
90020344:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020348:	b2ad      	uxth	r5, r5
9002034a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9002034e:	fa5f fc8c 	uxtb.w	ip, ip
90020352:	930a      	str	r3, [sp, #40]	; 0x28
90020354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020356:	4298      	cmp	r0, r3
90020358:	f080 8085 	bcs.w	90020466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002035c:	eb00 0b09 	add.w	fp, r0, r9
90020360:	4558      	cmp	r0, fp
90020362:	d246      	bcs.n	900203f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90020364:	f814 eb01 	ldrb.w	lr, [r4], #1
90020368:	2303      	movs	r3, #3
9002036a:	2204      	movs	r2, #4
9002036c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020370:	8803      	ldrh	r3, [r0, #0]
90020372:	eb07 0a0e 	add.w	sl, r7, lr
90020376:	1219      	asrs	r1, r3, #8
90020378:	10da      	asrs	r2, r3, #3
9002037a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002037e:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020382:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020386:	00db      	lsls	r3, r3, #3
90020388:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002038c:	fb18 f805 	smulbb	r8, r8, r5
90020390:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020394:	fb1e fe05 	smulbb	lr, lr, r5
90020398:	b2db      	uxtb	r3, r3
9002039a:	fb01 810c 	mla	r1, r1, ip, r8
9002039e:	f89a 8001 	ldrb.w	r8, [sl, #1]
900203a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900203a6:	fb18 f805 	smulbb	r8, r8, r5
900203aa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900203ae:	b289      	uxth	r1, r1
900203b0:	fb02 820c 	mla	r2, r2, ip, r8
900203b4:	fb03 e30c 	mla	r3, r3, ip, lr
900203b8:	f101 0801 	add.w	r8, r1, #1
900203bc:	b292      	uxth	r2, r2
900203be:	b29b      	uxth	r3, r3
900203c0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900203c4:	f102 0801 	add.w	r8, r2, #1
900203c8:	f103 0e01 	add.w	lr, r3, #1
900203cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900203d0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900203d4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900203d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
900203dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900203e0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900203e4:	ea4e 0101 	orr.w	r1, lr, r1
900203e8:	ea41 0108 	orr.w	r1, r1, r8
900203ec:	f820 1b02 	strh.w	r1, [r0], #2
900203f0:	e7b6      	b.n	90020360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
900203f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900203f4:	881b      	ldrh	r3, [r3, #0]
900203f6:	1b9b      	subs	r3, r3, r6
900203f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900203fc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020400:	1b9b      	subs	r3, r3, r6
90020402:	441c      	add	r4, r3
90020404:	e7a6      	b.n	90020354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020406:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002040a:	2203      	movs	r2, #3
9002040c:	2504      	movs	r5, #4
9002040e:	4919      	ldr	r1, [pc, #100]	; (90020474 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020410:	4550      	cmp	r0, sl
90020412:	d228      	bcs.n	90020466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020414:	eb00 0c09 	add.w	ip, r0, r9
90020418:	4560      	cmp	r0, ip
9002041a:	4623      	mov	r3, r4
9002041c:	d219      	bcs.n	90020452 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9002041e:	f893 e000 	ldrb.w	lr, [r3]
90020422:	3401      	adds	r4, #1
90020424:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020428:	eb07 0b0e 	add.w	fp, r7, lr
9002042c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020430:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020434:	f89b b001 	ldrb.w	fp, [fp, #1]
90020438:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9002043c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020440:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90020444:	ea43 030b 	orr.w	r3, r3, fp
90020448:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9002044c:	f820 3b02 	strh.w	r3, [r0], #2
90020450:	e7e2      	b.n	90020418 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020452:	f8b8 3000 	ldrh.w	r3, [r8]
90020456:	1b9b      	subs	r3, r3, r6
90020458:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002045c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020460:	1b9b      	subs	r3, r3, r6
90020462:	441c      	add	r4, r3
90020464:	e7d4      	b.n	90020410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90020466:	4b04      	ldr	r3, [pc, #16]	; (90020478 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020468:	6818      	ldr	r0, [r3, #0]
9002046a:	6803      	ldr	r3, [r0, #0]
9002046c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002046e:	4798      	blx	r3
90020470:	e750      	b.n	90020314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020472:	bf00      	nop
90020474:	fffff800 	.word	0xfffff800
90020478:	24039acc 	.word	0x24039acc
9002047c:	24039ac6 	.word	0x24039ac6

90020480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020480:	b4f0      	push	{r4, r5, r6, r7}
90020482:	460c      	mov	r4, r1
90020484:	4611      	mov	r1, r2
90020486:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002048a:	461a      	mov	r2, r3
9002048c:	780f      	ldrb	r7, [r1, #0]
9002048e:	9b04      	ldr	r3, [sp, #16]
90020490:	2f01      	cmp	r7, #1
90020492:	784e      	ldrb	r6, [r1, #1]
90020494:	d036      	beq.n	90020504 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
90020496:	d31e      	bcc.n	900204d6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
90020498:	2f02      	cmp	r7, #2
9002049a:	d14a      	bne.n	90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002049c:	2e03      	cmp	r6, #3
9002049e:	d848      	bhi.n	90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900204a0:	e8df f006 	tbb	[pc, r6]
900204a4:	16140702 	.word	0x16140702
900204a8:	9504      	str	r5, [sp, #16]
900204aa:	4620      	mov	r0, r4
900204ac:	bcf0      	pop	{r4, r5, r6, r7}
900204ae:	f7ff be09 	b.w	900200c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900204b2:	6f80      	ldr	r0, [r0, #120]	; 0x78
900204b4:	2800      	cmp	r0, #0
900204b6:	d03c      	beq.n	90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900204b8:	6806      	ldr	r6, [r0, #0]
900204ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
900204be:	68b5      	ldr	r5, [r6, #8]
900204c0:	4613      	mov	r3, r2
900204c2:	46ac      	mov	ip, r5
900204c4:	460a      	mov	r2, r1
900204c6:	4621      	mov	r1, r4
900204c8:	bcf0      	pop	{r4, r5, r6, r7}
900204ca:	4760      	bx	ip
900204cc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
900204ce:	e7f1      	b.n	900204b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900204d0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
900204d4:	e7ee      	b.n	900204b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900204d6:	2e03      	cmp	r6, #3
900204d8:	d82b      	bhi.n	90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900204da:	e8df f006 	tbb	[pc, r6]
900204de:	0702      	.short	0x0702
900204e0:	100e      	.short	0x100e
900204e2:	9504      	str	r5, [sp, #16]
900204e4:	4620      	mov	r0, r4
900204e6:	bcf0      	pop	{r4, r5, r6, r7}
900204e8:	f7ff bd06 	b.w	9001fef8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
900204ec:	6f80      	ldr	r0, [r0, #120]	; 0x78
900204ee:	b300      	cbz	r0, 90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900204f0:	6806      	ldr	r6, [r0, #0]
900204f2:	e9cd 3504 	strd	r3, r5, [sp, #16]
900204f6:	68f5      	ldr	r5, [r6, #12]
900204f8:	e7e2      	b.n	900204c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
900204fa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
900204fc:	e7f7      	b.n	900204ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
900204fe:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020502:	e7f4      	b.n	900204ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
90020504:	2e03      	cmp	r6, #3
90020506:	d814      	bhi.n	90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020508:	e8df f006 	tbb	[pc, r6]
9002050c:	100e0702 	.word	0x100e0702
90020510:	9504      	str	r5, [sp, #16]
90020512:	4620      	mov	r0, r4
90020514:	bcf0      	pop	{r4, r5, r6, r7}
90020516:	f7ff bea1 	b.w	9002025c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9002051a:	6f80      	ldr	r0, [r0, #120]	; 0x78
9002051c:	b148      	cbz	r0, 90020532 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002051e:	6806      	ldr	r6, [r0, #0]
90020520:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020524:	6935      	ldr	r5, [r6, #16]
90020526:	e7cb      	b.n	900204c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020528:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9002052a:	e7f7      	b.n	9002051c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9002052c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020530:	e7f4      	b.n	9002051c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
90020532:	bcf0      	pop	{r4, r5, r6, r7}
90020534:	4770      	bx	lr
	...

90020538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002053c:	b087      	sub	sp, #28
9002053e:	4604      	mov	r4, r0
90020540:	460e      	mov	r6, r1
90020542:	6810      	ldr	r0, [r2, #0]
90020544:	6851      	ldr	r1, [r2, #4]
90020546:	ad02      	add	r5, sp, #8
90020548:	4617      	mov	r7, r2
9002054a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9002054e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90020780 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90020552:	c503      	stmia	r5!, {r0, r1}
90020554:	6818      	ldr	r0, [r3, #0]
90020556:	ad04      	add	r5, sp, #16
90020558:	6859      	ldr	r1, [r3, #4]
9002055a:	c503      	stmia	r5!, {r0, r1}
9002055c:	a802      	add	r0, sp, #8
9002055e:	f7f7 fc0d 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020562:	4639      	mov	r1, r7
90020564:	a804      	add	r0, sp, #16
90020566:	f7f7 fc4d 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002056a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002056e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020572:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020576:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002057a:	fb11 2103 	smlabb	r1, r1, r3, r2
9002057e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020582:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020586:	440e      	add	r6, r1
90020588:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9002058c:	440a      	add	r2, r1
9002058e:	f8ad 2010 	strh.w	r2, [sp, #16]
90020592:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020596:	4413      	add	r3, r2
90020598:	f8ad 3012 	strh.w	r3, [sp, #18]
9002059c:	4b77      	ldr	r3, [pc, #476]	; (9002077c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002059e:	6818      	ldr	r0, [r3, #0]
900205a0:	6803      	ldr	r3, [r0, #0]
900205a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900205a4:	4798      	blx	r3
900205a6:	f8b9 b000 	ldrh.w	fp, [r9]
900205aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900205ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
900205b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900205b6:	fb05 f50b 	mul.w	r5, r5, fp
900205ba:	fb0b 2303 	mla	r3, fp, r3, r2
900205be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900205c2:	ea4f 0348 	mov.w	r3, r8, lsl #1
900205c6:	9300      	str	r3, [sp, #0]
900205c8:	d069      	beq.n	9002069e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
900205ca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
900205ce:	4558      	cmp	r0, fp
900205d0:	f080 80cc 	bcs.w	9002076c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900205d4:	9b00      	ldr	r3, [sp, #0]
900205d6:	4631      	mov	r1, r6
900205d8:	18c3      	adds	r3, r0, r3
900205da:	9301      	str	r3, [sp, #4]
900205dc:	9b01      	ldr	r3, [sp, #4]
900205de:	4298      	cmp	r0, r3
900205e0:	d24f      	bcs.n	90020682 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
900205e2:	f811 2b01 	ldrb.w	r2, [r1], #1
900205e6:	2a00      	cmp	r2, #0
900205e8:	d048      	beq.n	9002067c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900205ea:	fb0a f202 	mul.w	r2, sl, r2
900205ee:	1c53      	adds	r3, r2, #1
900205f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900205f4:	121b      	asrs	r3, r3, #8
900205f6:	d041      	beq.n	9002067c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900205f8:	8802      	ldrh	r2, [r0, #0]
900205fa:	b29e      	uxth	r6, r3
900205fc:	f8b4 c000 	ldrh.w	ip, [r4]
90020600:	43db      	mvns	r3, r3
90020602:	1215      	asrs	r5, r2, #8
90020604:	b2db      	uxtb	r3, r3
90020606:	ea4f 272c 	mov.w	r7, ip, asr #8
9002060a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002060e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020612:	fb15 f503 	smulbb	r5, r5, r3
90020616:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9002061a:	00d2      	lsls	r2, r2, #3
9002061c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90020620:	fb07 5706 	mla	r7, r7, r6, r5
90020624:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020628:	b2d2      	uxtb	r2, r2
9002062a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002062e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020632:	fb1e fe03 	smulbb	lr, lr, r3
90020636:	b2bf      	uxth	r7, r7
90020638:	fb12 f203 	smulbb	r2, r2, r3
9002063c:	fa5f fc8c 	uxtb.w	ip, ip
90020640:	fb05 e506 	mla	r5, r5, r6, lr
90020644:	f107 0e01 	add.w	lr, r7, #1
90020648:	fb0c 2c06 	mla	ip, ip, r6, r2
9002064c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020650:	fa1f fc8c 	uxth.w	ip, ip
90020654:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
90020658:	b2ad      	uxth	r5, r5
9002065a:	f10c 0701 	add.w	r7, ip, #1
9002065e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020662:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020666:	ea47 070e 	orr.w	r7, r7, lr
9002066a:	f105 0e01 	add.w	lr, r5, #1
9002066e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020672:	096d      	lsrs	r5, r5, #5
90020674:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020678:	432f      	orrs	r7, r5
9002067a:	8007      	strh	r7, [r0, #0]
9002067c:	3002      	adds	r0, #2
9002067e:	3402      	adds	r4, #2
90020680:	e7ac      	b.n	900205dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020682:	f8b9 3000 	ldrh.w	r3, [r9]
90020686:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9002068a:	eba3 0308 	sub.w	r3, r3, r8
9002068e:	eba6 0608 	sub.w	r6, r6, r8
90020692:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020696:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9002069a:	440e      	add	r6, r1
9002069c:	e797      	b.n	900205ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9002069e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900206a2:	42a8      	cmp	r0, r5
900206a4:	d262      	bcs.n	9002076c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900206a6:	9b00      	ldr	r3, [sp, #0]
900206a8:	4631      	mov	r1, r6
900206aa:	eb00 0b03 	add.w	fp, r0, r3
900206ae:	4558      	cmp	r0, fp
900206b0:	d24e      	bcs.n	90020750 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900206b2:	f811 3b01 	ldrb.w	r3, [r1], #1
900206b6:	b12b      	cbz	r3, 900206c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900206b8:	2bff      	cmp	r3, #255	; 0xff
900206ba:	f8b4 e000 	ldrh.w	lr, [r4]
900206be:	d104      	bne.n	900206ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
900206c0:	f8a0 e000 	strh.w	lr, [r0]
900206c4:	3002      	adds	r0, #2
900206c6:	3402      	adds	r4, #2
900206c8:	e7f1      	b.n	900206ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
900206ca:	8802      	ldrh	r2, [r0, #0]
900206cc:	b29f      	uxth	r7, r3
900206ce:	43db      	mvns	r3, r3
900206d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900206d4:	1216      	asrs	r6, r2, #8
900206d6:	b2db      	uxtb	r3, r3
900206d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900206dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900206e0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
900206e4:	00d2      	lsls	r2, r2, #3
900206e6:	fb16 f603 	smulbb	r6, r6, r3
900206ea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900206ee:	b2d2      	uxtb	r2, r2
900206f0:	fb0c 6c07 	mla	ip, ip, r7, r6
900206f4:	ea4f 06ee 	mov.w	r6, lr, asr #3
900206f8:	fb1a fa03 	smulbb	sl, sl, r3
900206fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020700:	fa1f fc8c 	uxth.w	ip, ip
90020704:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020708:	fb12 f303 	smulbb	r3, r2, r3
9002070c:	fa5f fe8e 	uxtb.w	lr, lr
90020710:	fb06 a607 	mla	r6, r6, r7, sl
90020714:	f10c 0201 	add.w	r2, ip, #1
90020718:	fb0e 3307 	mla	r3, lr, r7, r3
9002071c:	b2b6      	uxth	r6, r6
9002071e:	b29b      	uxth	r3, r3
90020720:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020724:	f106 0a01 	add.w	sl, r6, #1
90020728:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9002072c:	f103 0c01 	add.w	ip, r3, #1
90020730:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020734:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020738:	0976      	lsrs	r6, r6, #5
9002073a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002073e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90020742:	ea4c 0c02 	orr.w	ip, ip, r2
90020746:	ea4c 0c06 	orr.w	ip, ip, r6
9002074a:	f8a0 c000 	strh.w	ip, [r0]
9002074e:	e7b9      	b.n	900206c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020750:	f8b9 3000 	ldrh.w	r3, [r9]
90020754:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020758:	eba3 0308 	sub.w	r3, r3, r8
9002075c:	eba6 0608 	sub.w	r6, r6, r8
90020760:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020764:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020768:	440e      	add	r6, r1
9002076a:	e79a      	b.n	900206a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9002076c:	4b03      	ldr	r3, [pc, #12]	; (9002077c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002076e:	6818      	ldr	r0, [r3, #0]
90020770:	6803      	ldr	r3, [r0, #0]
90020772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020774:	4798      	blx	r3
90020776:	b007      	add	sp, #28
90020778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002077c:	24039acc 	.word	0x24039acc
90020780:	24039ac6 	.word	0x24039ac6

90020784 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020788:	b089      	sub	sp, #36	; 0x24
9002078a:	4682      	mov	sl, r0
9002078c:	460f      	mov	r7, r1
9002078e:	4691      	mov	r9, r2
90020790:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
90020794:	4698      	mov	r8, r3
90020796:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020798:	2e00      	cmp	r6, #0
9002079a:	d03d      	beq.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002079c:	4608      	mov	r0, r1
9002079e:	f7fa fe4d 	bl	9001b43c <_ZNK8touchgfx6Bitmap8getWidthEv>
900207a2:	4605      	mov	r5, r0
900207a4:	4638      	mov	r0, r7
900207a6:	f7fa fe7d 	bl	9001b4a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900207aa:	f8ad 000e 	strh.w	r0, [sp, #14]
900207ae:	4638      	mov	r0, r7
900207b0:	f8ad 9008 	strh.w	r9, [sp, #8]
900207b4:	f8ad 500c 	strh.w	r5, [sp, #12]
900207b8:	f8ad 800a 	strh.w	r8, [sp, #10]
900207bc:	f7fa ff2a 	bl	9001b614 <_ZNK8touchgfx6Bitmap7getDataEv>
900207c0:	4605      	mov	r5, r0
900207c2:	4638      	mov	r0, r7
900207c4:	f7fa ff56 	bl	9001b674 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900207c8:	4681      	mov	r9, r0
900207ca:	4638      	mov	r0, r7
900207cc:	f7fa ffa6 	bl	9001b71c <_ZNK8touchgfx6Bitmap9getFormatEv>
900207d0:	280b      	cmp	r0, #11
900207d2:	d821      	bhi.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900207d4:	e8df f000 	tbb	[pc, r0]
900207d8:	2006aebe 	.word	0x2006aebe
900207dc:	20202020 	.word	0x20202020
900207e0:	b5202020 	.word	0xb5202020
900207e4:	4bb0      	ldr	r3, [pc, #704]	; (90020aa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
900207e6:	6818      	ldr	r0, [r3, #0]
900207e8:	6803      	ldr	r3, [r0, #0]
900207ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900207ec:	4798      	blx	r3
900207ee:	2eff      	cmp	r6, #255	; 0xff
900207f0:	d101      	bne.n	900207f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
900207f2:	0683      	lsls	r3, r0, #26
900207f4:	d506      	bpl.n	90020804 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
900207f6:	4633      	mov	r3, r6
900207f8:	4622      	mov	r2, r4
900207fa:	a902      	add	r1, sp, #8
900207fc:	4628      	mov	r0, r5
900207fe:	f7ff f909 	bl	9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020802:	e009      	b.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020804:	4638      	mov	r0, r7
90020806:	f7fa fecd 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002080a:	b940      	cbnz	r0, 9002081e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9002080c:	4623      	mov	r3, r4
9002080e:	aa02      	add	r2, sp, #8
90020810:	4629      	mov	r1, r5
90020812:	4650      	mov	r0, sl
90020814:	f7ff f9e4 	bl	9001fbe0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020818:	b009      	add	sp, #36	; 0x24
9002081a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002081e:	f10d 0818 	add.w	r8, sp, #24
90020822:	4639      	mov	r1, r7
90020824:	af04      	add	r7, sp, #16
90020826:	4640      	mov	r0, r8
90020828:	f7fa fe70 	bl	9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002082c:	e898 0003 	ldmia.w	r8, {r0, r1}
90020830:	e887 0003 	stmia.w	r7, {r0, r1}
90020834:	4638      	mov	r0, r7
90020836:	4621      	mov	r1, r4
90020838:	f7f2 f982 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
9002083c:	4638      	mov	r0, r7
9002083e:	f7f2 f9c2 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90020842:	2800      	cmp	r0, #0
90020844:	d1d7      	bne.n	900207f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90020846:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002084a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002084e:	4293      	cmp	r3, r2
90020850:	dd12      	ble.n	90020878 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
90020852:	1a9b      	subs	r3, r3, r2
90020854:	f9b4 0000 	ldrsh.w	r0, [r4]
90020858:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002085c:	f8ad 0018 	strh.w	r0, [sp, #24]
90020860:	4628      	mov	r0, r5
90020862:	f8ad 201a 	strh.w	r2, [sp, #26]
90020866:	4642      	mov	r2, r8
90020868:	f8ad 101c 	strh.w	r1, [sp, #28]
9002086c:	a902      	add	r1, sp, #8
9002086e:	f8ad 301e 	strh.w	r3, [sp, #30]
90020872:	4633      	mov	r3, r6
90020874:	f7ff f8ce 	bl	9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020878:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9002087c:	f9b4 2000 	ldrsh.w	r2, [r4]
90020880:	4293      	cmp	r3, r2
90020882:	dd12      	ble.n	900208aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
90020884:	1a9b      	subs	r3, r3, r2
90020886:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9002088a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002088e:	f8ad 2018 	strh.w	r2, [sp, #24]
90020892:	4642      	mov	r2, r8
90020894:	f8ad 001a 	strh.w	r0, [sp, #26]
90020898:	4628      	mov	r0, r5
9002089a:	f8ad 301c 	strh.w	r3, [sp, #28]
9002089e:	23ff      	movs	r3, #255	; 0xff
900208a0:	f8ad 101e 	strh.w	r1, [sp, #30]
900208a4:	a902      	add	r1, sp, #8
900208a6:	f7ff f8b5 	bl	9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900208aa:	463b      	mov	r3, r7
900208ac:	aa02      	add	r2, sp, #8
900208ae:	4629      	mov	r1, r5
900208b0:	4650      	mov	r0, sl
900208b2:	f7ff f995 	bl	9001fbe0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900208b6:	88a2      	ldrh	r2, [r4, #4]
900208b8:	8823      	ldrh	r3, [r4, #0]
900208ba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900208be:	4413      	add	r3, r2
900208c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900208c4:	440a      	add	r2, r1
900208c6:	b29b      	uxth	r3, r3
900208c8:	b292      	uxth	r2, r2
900208ca:	b218      	sxth	r0, r3
900208cc:	b211      	sxth	r1, r2
900208ce:	4288      	cmp	r0, r1
900208d0:	dd12      	ble.n	900208f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
900208d2:	1a9b      	subs	r3, r3, r2
900208d4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900208d8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
900208dc:	4642      	mov	r2, r8
900208de:	f8ad 1018 	strh.w	r1, [sp, #24]
900208e2:	a902      	add	r1, sp, #8
900208e4:	f8ad 301c 	strh.w	r3, [sp, #28]
900208e8:	23ff      	movs	r3, #255	; 0xff
900208ea:	f8ad 001e 	strh.w	r0, [sp, #30]
900208ee:	4628      	mov	r0, r5
900208f0:	f8ad 601a 	strh.w	r6, [sp, #26]
900208f4:	f7ff f88e 	bl	9001fa14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900208f8:	88e2      	ldrh	r2, [r4, #6]
900208fa:	8863      	ldrh	r3, [r4, #2]
900208fc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020900:	4413      	add	r3, r2
90020902:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020906:	440a      	add	r2, r1
90020908:	b29b      	uxth	r3, r3
9002090a:	b292      	uxth	r2, r2
9002090c:	b218      	sxth	r0, r3
9002090e:	b211      	sxth	r1, r2
90020910:	4288      	cmp	r0, r1
90020912:	dd81      	ble.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020914:	1a9b      	subs	r3, r3, r2
90020916:	f9b4 6000 	ldrsh.w	r6, [r4]
9002091a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002091e:	4642      	mov	r2, r8
90020920:	f8ad 301e 	strh.w	r3, [sp, #30]
90020924:	23ff      	movs	r3, #255	; 0xff
90020926:	f8ad 6018 	strh.w	r6, [sp, #24]
9002092a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002092e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020932:	e762      	b.n	900207fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
90020934:	4633      	mov	r3, r6
90020936:	4622      	mov	r2, r4
90020938:	a902      	add	r1, sp, #8
9002093a:	4628      	mov	r0, r5
9002093c:	f7ff f9c0 	bl	9001fcc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020940:	e76a      	b.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020942:	e9cd 4600 	strd	r4, r6, [sp]
90020946:	ab02      	add	r3, sp, #8
90020948:	464a      	mov	r2, r9
9002094a:	4629      	mov	r1, r5
9002094c:	4650      	mov	r0, sl
9002094e:	f7ff fd97 	bl	90020480 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020952:	e761      	b.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020954:	4638      	mov	r0, r7
90020956:	f7fa fe25 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002095a:	b950      	cbnz	r0, 90020972 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9002095c:	f8da 3000 	ldr.w	r3, [sl]
90020960:	aa02      	add	r2, sp, #8
90020962:	4629      	mov	r1, r5
90020964:	e9cd 6000 	strd	r6, r0, [sp]
90020968:	4650      	mov	r0, sl
9002096a:	68de      	ldr	r6, [r3, #12]
9002096c:	4623      	mov	r3, r4
9002096e:	47b0      	blx	r6
90020970:	e752      	b.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020972:	f10d 0818 	add.w	r8, sp, #24
90020976:	4639      	mov	r1, r7
90020978:	af04      	add	r7, sp, #16
9002097a:	4640      	mov	r0, r8
9002097c:	f7fa fdc6 	bl	9001b50c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020980:	e898 0003 	ldmia.w	r8, {r0, r1}
90020984:	e887 0003 	stmia.w	r7, {r0, r1}
90020988:	4638      	mov	r0, r7
9002098a:	4621      	mov	r1, r4
9002098c:	f7f2 f8d8 	bl	90012b40 <_ZN8touchgfx4RectaNERKS0_>
90020990:	4638      	mov	r0, r7
90020992:	f7f2 f918 	bl	90012bc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90020996:	b138      	cbz	r0, 900209a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
90020998:	4623      	mov	r3, r4
9002099a:	9600      	str	r6, [sp, #0]
9002099c:	aa02      	add	r2, sp, #8
9002099e:	4649      	mov	r1, r9
900209a0:	4628      	mov	r0, r5
900209a2:	f7ff fdc9 	bl	90020538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900209a6:	e737      	b.n	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900209a8:	f8da 3000 	ldr.w	r3, [sl]
900209ac:	aa02      	add	r2, sp, #8
900209ae:	4629      	mov	r1, r5
900209b0:	e9cd 6000 	strd	r6, r0, [sp]
900209b4:	4650      	mov	r0, sl
900209b6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
900209ba:	463b      	mov	r3, r7
900209bc:	47d8      	blx	fp
900209be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900209c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900209c6:	4293      	cmp	r3, r2
900209c8:	dd13      	ble.n	900209f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
900209ca:	f9b4 0000 	ldrsh.w	r0, [r4]
900209ce:	1a9b      	subs	r3, r3, r2
900209d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900209d4:	f8ad 0018 	strh.w	r0, [sp, #24]
900209d8:	4628      	mov	r0, r5
900209da:	f8ad 201a 	strh.w	r2, [sp, #26]
900209de:	aa02      	add	r2, sp, #8
900209e0:	f8ad 101c 	strh.w	r1, [sp, #28]
900209e4:	4649      	mov	r1, r9
900209e6:	f8ad 301e 	strh.w	r3, [sp, #30]
900209ea:	4643      	mov	r3, r8
900209ec:	9600      	str	r6, [sp, #0]
900209ee:	f7ff fda3 	bl	90020538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900209f2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900209f6:	f9b4 2000 	ldrsh.w	r2, [r4]
900209fa:	4293      	cmp	r3, r2
900209fc:	dd13      	ble.n	90020a26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
900209fe:	1a9b      	subs	r3, r3, r2
90020a00:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020a04:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020a08:	f8ad 2018 	strh.w	r2, [sp, #24]
90020a0c:	aa02      	add	r2, sp, #8
90020a0e:	f8ad 001a 	strh.w	r0, [sp, #26]
90020a12:	4628      	mov	r0, r5
90020a14:	f8ad 301c 	strh.w	r3, [sp, #28]
90020a18:	4643      	mov	r3, r8
90020a1a:	f8ad 101e 	strh.w	r1, [sp, #30]
90020a1e:	4649      	mov	r1, r9
90020a20:	9600      	str	r6, [sp, #0]
90020a22:	f7ff fd89 	bl	90020538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020a26:	88a2      	ldrh	r2, [r4, #4]
90020a28:	8823      	ldrh	r3, [r4, #0]
90020a2a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020a2e:	4413      	add	r3, r2
90020a30:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020a34:	440a      	add	r2, r1
90020a36:	b29b      	uxth	r3, r3
90020a38:	b292      	uxth	r2, r2
90020a3a:	b218      	sxth	r0, r3
90020a3c:	b211      	sxth	r1, r2
90020a3e:	4288      	cmp	r0, r1
90020a40:	dd13      	ble.n	90020a6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
90020a42:	1a9b      	subs	r3, r3, r2
90020a44:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020a48:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90020a4c:	aa02      	add	r2, sp, #8
90020a4e:	f8ad 1018 	strh.w	r1, [sp, #24]
90020a52:	4649      	mov	r1, r9
90020a54:	f8ad 301c 	strh.w	r3, [sp, #28]
90020a58:	4643      	mov	r3, r8
90020a5a:	f8ad 001e 	strh.w	r0, [sp, #30]
90020a5e:	4628      	mov	r0, r5
90020a60:	9600      	str	r6, [sp, #0]
90020a62:	f8ad 701a 	strh.w	r7, [sp, #26]
90020a66:	f7ff fd67 	bl	90020538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020a6a:	88e2      	ldrh	r2, [r4, #6]
90020a6c:	8863      	ldrh	r3, [r4, #2]
90020a6e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020a72:	4413      	add	r3, r2
90020a74:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020a78:	440a      	add	r2, r1
90020a7a:	b29b      	uxth	r3, r3
90020a7c:	b292      	uxth	r2, r2
90020a7e:	b218      	sxth	r0, r3
90020a80:	b211      	sxth	r1, r2
90020a82:	4288      	cmp	r0, r1
90020a84:	f77f aec8 	ble.w	90020818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a88:	f9b4 7000 	ldrsh.w	r7, [r4]
90020a8c:	1a9b      	subs	r3, r3, r2
90020a8e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020a92:	f8ad 301e 	strh.w	r3, [sp, #30]
90020a96:	4643      	mov	r3, r8
90020a98:	f8ad 7018 	strh.w	r7, [sp, #24]
90020a9c:	f8ad 101a 	strh.w	r1, [sp, #26]
90020aa0:	f8ad 001c 	strh.w	r0, [sp, #28]
90020aa4:	9600      	str	r6, [sp, #0]
90020aa6:	e779      	b.n	9002099c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
90020aa8:	24039acc 	.word	0x24039acc

90020aac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020aac:	b180      	cbz	r0, 90020ad0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90020aae:	2903      	cmp	r1, #3
90020ab0:	d81c      	bhi.n	90020aec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020ab2:	e8df f001 	tbb	[pc, r1]
90020ab6:	1d02      	.short	0x1d02
90020ab8:	1f08      	.short	0x1f08
90020aba:	4b10      	ldr	r3, [pc, #64]	; (90020afc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020abc:	8818      	ldrh	r0, [r3, #0]
90020abe:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020ac2:	4240      	negs	r0, r0
90020ac4:	4770      	bx	lr
90020ac6:	4b0d      	ldr	r3, [pc, #52]	; (90020afc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020ac8:	8818      	ldrh	r0, [r3, #0]
90020aca:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020ace:	4770      	bx	lr
90020ad0:	2903      	cmp	r1, #3
90020ad2:	d80b      	bhi.n	90020aec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020ad4:	a301      	add	r3, pc, #4	; (adr r3, 90020adc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020ad6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020ada:	bf00      	nop
90020adc:	90020af1 	.word	0x90020af1
90020ae0:	90020ac7 	.word	0x90020ac7
90020ae4:	90020af5 	.word	0x90020af5
90020ae8:	90020abb 	.word	0x90020abb
90020aec:	2000      	movs	r0, #0
90020aee:	4770      	bx	lr
90020af0:	2001      	movs	r0, #1
90020af2:	4770      	bx	lr
90020af4:	f04f 30ff 	mov.w	r0, #4294967295
90020af8:	4770      	bx	lr
90020afa:	bf00      	nop
90020afc:	24039ac6 	.word	0x24039ac6

90020b00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020b00:	b180      	cbz	r0, 90020b24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020b02:	2903      	cmp	r1, #3
90020b04:	d81c      	bhi.n	90020b40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020b06:	e8df f001 	tbb	[pc, r1]
90020b0a:	021d      	.short	0x021d
90020b0c:	071f      	.short	0x071f
90020b0e:	4b10      	ldr	r3, [pc, #64]	; (90020b50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020b10:	8818      	ldrh	r0, [r3, #0]
90020b12:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020b16:	4770      	bx	lr
90020b18:	4b0d      	ldr	r3, [pc, #52]	; (90020b50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020b1a:	8818      	ldrh	r0, [r3, #0]
90020b1c:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020b20:	4240      	negs	r0, r0
90020b22:	4770      	bx	lr
90020b24:	2903      	cmp	r1, #3
90020b26:	d80b      	bhi.n	90020b40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020b28:	a301      	add	r3, pc, #4	; (adr r3, 90020b30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020b2a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020b2e:	bf00      	nop
90020b30:	90020b0f 	.word	0x90020b0f
90020b34:	90020b49 	.word	0x90020b49
90020b38:	90020b19 	.word	0x90020b19
90020b3c:	90020b45 	.word	0x90020b45
90020b40:	2000      	movs	r0, #0
90020b42:	4770      	bx	lr
90020b44:	2001      	movs	r0, #1
90020b46:	4770      	bx	lr
90020b48:	f04f 30ff 	mov.w	r0, #4294967295
90020b4c:	4770      	bx	lr
90020b4e:	bf00      	nop
90020b50:	24039ac6 	.word	0x24039ac6

90020b54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b58:	b099      	sub	sp, #100	; 0x64
90020b5a:	910b      	str	r1, [sp, #44]	; 0x2c
90020b5c:	a914      	add	r1, sp, #80	; 0x50
90020b5e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
90020b62:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
90020b66:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
90020b6a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
90020b6e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
90020b72:	e881 000c 	stmia.w	r1, {r2, r3}
90020b76:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
90020b7a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
90020b7e:	9309      	str	r3, [sp, #36]	; 0x24
90020b80:	f891 900d 	ldrb.w	r9, [r1, #13]
90020b84:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90020b88:	ea4f 1749 	mov.w	r7, r9, lsl #5
90020b8c:	9310      	str	r3, [sp, #64]	; 0x40
90020b8e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
90020b92:	930c      	str	r3, [sp, #48]	; 0x30
90020b94:	f407 7380 	and.w	r3, r7, #256	; 0x100
90020b98:	798f      	ldrb	r7, [r1, #6]
90020b9a:	431f      	orrs	r7, r3
90020b9c:	f000 8195 	beq.w	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020ba0:	ea4f 1909 	mov.w	r9, r9, lsl #4
90020ba4:	f409 7380 	and.w	r3, r9, #256	; 0x100
90020ba8:	f891 9007 	ldrb.w	r9, [r1, #7]
90020bac:	ea59 0903 	orrs.w	r9, r9, r3
90020bb0:	f000 818b 	beq.w	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020bb4:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020bb8:	b29b      	uxth	r3, r3
90020bba:	2d00      	cmp	r5, #0
90020bbc:	f000 812e 	beq.w	90020e1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90020bc0:	1aed      	subs	r5, r5, r3
90020bc2:	b2ad      	uxth	r5, r5
90020bc4:	042b      	lsls	r3, r5, #16
90020bc6:	d502      	bpl.n	90020bce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020bc8:	1b64      	subs	r4, r4, r5
90020bca:	2500      	movs	r5, #0
90020bcc:	b224      	sxth	r4, r4
90020bce:	f9b2 1000 	ldrsh.w	r1, [r2]
90020bd2:	a814      	add	r0, sp, #80	; 0x50
90020bd4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90020bd8:	428c      	cmp	r4, r1
90020bda:	b28b      	uxth	r3, r1
90020bdc:	bfbf      	itttt	lt
90020bde:	18ed      	addlt	r5, r5, r3
90020be0:	1b2c      	sublt	r4, r5, r4
90020be2:	b2a5      	uxthlt	r5, r4
90020be4:	460c      	movlt	r4, r1
90020be6:	8891      	ldrh	r1, [r2, #4]
90020be8:	440b      	add	r3, r1
90020bea:	4621      	mov	r1, r4
90020bec:	b21b      	sxth	r3, r3
90020bee:	930f      	str	r3, [sp, #60]	; 0x3c
90020bf0:	88d3      	ldrh	r3, [r2, #6]
90020bf2:	8852      	ldrh	r2, [r2, #2]
90020bf4:	4413      	add	r3, r2
90020bf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020bf8:	b21b      	sxth	r3, r3
90020bfa:	930d      	str	r3, [sp, #52]	; 0x34
90020bfc:	4bbd      	ldr	r3, [pc, #756]	; (90020ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90020bfe:	f893 b000 	ldrb.w	fp, [r3]
90020c02:	f10b 3cff 	add.w	ip, fp, #4294967295
90020c06:	f1dc 0300 	rsbs	r3, ip, #0
90020c0a:	eb43 030c 	adc.w	r3, r3, ip
90020c0e:	930e      	str	r3, [sp, #56]	; 0x38
90020c10:	4653      	mov	r3, sl
90020c12:	f7f6 ff28 	bl	90017a66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020c16:	4621      	mov	r1, r4
90020c18:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
90020c1c:	4653      	mov	r3, sl
90020c1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020c20:	a814      	add	r0, sp, #80	; 0x50
90020c22:	f7f6 ff3d 	bl	90017aa0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020c26:	a918      	add	r1, sp, #96	; 0x60
90020c28:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020c2c:	a817      	add	r0, sp, #92	; 0x5c
90020c2e:	f7f7 f863 	bl	90017cf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020c32:	f1ba 0f00 	cmp.w	sl, #0
90020c36:	f040 80f4 	bne.w	90020e22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90020c3a:	f1bb 0f01 	cmp.w	fp, #1
90020c3e:	f040 80f8 	bne.w	90020e32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90020c42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020c44:	2b00      	cmp	r3, #0
90020c46:	f040 8145 	bne.w	90020ed4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90020c4a:	b2ba      	uxth	r2, r7
90020c4c:	b905      	cbnz	r5, 90020c50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020c4e:	b16e      	cbz	r6, 90020c6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90020c50:	fb06 5302 	mla	r3, r6, r2, r5
90020c54:	9828      	ldr	r0, [sp, #160]	; 0xa0
90020c56:	4631      	mov	r1, r6
90020c58:	fb08 f303 	mul.w	r3, r8, r3
90020c5c:	f003 0607 	and.w	r6, r3, #7
90020c60:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90020c64:	9328      	str	r3, [sp, #160]	; 0xa0
90020c66:	eba9 0301 	sub.w	r3, r9, r1
90020c6a:	930a      	str	r3, [sp, #40]	; 0x28
90020c6c:	4651      	mov	r1, sl
90020c6e:	980e      	ldr	r0, [sp, #56]	; 0x38
90020c70:	f7ff ff1c 	bl	90020aac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90020c74:	4681      	mov	r9, r0
90020c76:	980e      	ldr	r0, [sp, #56]	; 0x38
90020c78:	f7ff ff42 	bl	90020b00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020c7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020c7e:	9909      	ldr	r1, [sp, #36]	; 0x24
90020c80:	4683      	mov	fp, r0
90020c82:	eba3 0a01 	sub.w	sl, r3, r1
90020c86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020c88:	459a      	cmp	sl, r3
90020c8a:	bfa8      	it	ge
90020c8c:	469a      	movge	sl, r3
90020c8e:	f1ba 0f00 	cmp.w	sl, #0
90020c92:	f340 811a 	ble.w	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020c96:	1b64      	subs	r4, r4, r5
90020c98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020c9a:	1b1c      	subs	r4, r3, r4
90020c9c:	42bc      	cmp	r4, r7
90020c9e:	bfd4      	ite	le
90020ca0:	ebc5 0504 	rsble	r5, r5, r4
90020ca4:	ebc5 0507 	rsbgt	r5, r5, r7
90020ca8:	2d00      	cmp	r5, #0
90020caa:	f340 810e 	ble.w	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020cae:	1b52      	subs	r2, r2, r5
90020cb0:	fb08 f302 	mul.w	r3, r8, r2
90020cb4:	930f      	str	r3, [sp, #60]	; 0x3c
90020cb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020cb8:	2b00      	cmp	r3, #0
90020cba:	f040 8116 	bne.w	90020eea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90020cbe:	4b8e      	ldr	r3, [pc, #568]	; (90020ef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90020cc0:	6818      	ldr	r0, [r3, #0]
90020cc2:	6803      	ldr	r3, [r0, #0]
90020cc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020cc6:	4798      	blx	r3
90020cc8:	2301      	movs	r3, #1
90020cca:	4a8c      	ldr	r2, [pc, #560]	; (90020efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90020ccc:	fa03 f308 	lsl.w	r3, r3, r8
90020cd0:	8811      	ldrh	r1, [r2, #0]
90020cd2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
90020cd6:	3b01      	subs	r3, #1
90020cd8:	b2db      	uxtb	r3, r3
90020cda:	930e      	str	r3, [sp, #56]	; 0x38
90020cdc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
90020ce0:	fb01 2303 	mla	r3, r1, r3, r2
90020ce4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020ce8:	930a      	str	r3, [sp, #40]	; 0x28
90020cea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020cec:	f3c3 4307 	ubfx	r3, r3, #16, #8
90020cf0:	9313      	str	r3, [sp, #76]	; 0x4c
90020cf2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020cf4:	0a19      	lsrs	r1, r3, #8
90020cf6:	b2cb      	uxtb	r3, r1
90020cf8:	9312      	str	r3, [sp, #72]	; 0x48
90020cfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020cfc:	b2db      	uxtb	r3, r3
90020cfe:	9311      	str	r3, [sp, #68]	; 0x44
90020d00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020d02:	095a      	lsrs	r2, r3, #5
90020d04:	4b7e      	ldr	r3, [pc, #504]	; (90020f00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90020d06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020d0a:	400b      	ands	r3, r1
90020d0c:	4313      	orrs	r3, r2
90020d0e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90020d10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020d14:	4313      	orrs	r3, r2
90020d16:	b29b      	uxth	r3, r3
90020d18:	9310      	str	r3, [sp, #64]	; 0x40
90020d1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020d1c:	781a      	ldrb	r2, [r3, #0]
90020d1e:	ea4f 0349 	mov.w	r3, r9, lsl #1
90020d22:	fb05 b919 	mls	r9, r5, r9, fp
90020d26:	4132      	asrs	r2, r6
90020d28:	fb03 fb05 	mul.w	fp, r3, r5
90020d2c:	930d      	str	r3, [sp, #52]	; 0x34
90020d2e:	b2d2      	uxtb	r2, r2
90020d30:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90020d34:	f11a 3aff 	adds.w	sl, sl, #4294967295
90020d38:	f0c0 80f5 	bcc.w	90020f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90020d3c:	46ae      	mov	lr, r5
90020d3e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
90020d42:	f11e 3eff 	adds.w	lr, lr, #4294967295
90020d46:	f0c0 80dd 	bcc.w	90020f04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90020d4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020d4c:	4013      	ands	r3, r2
90020d4e:	d055      	beq.n	90020dfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90020d50:	20ff      	movs	r0, #255	; 0xff
90020d52:	990e      	ldr	r1, [sp, #56]	; 0x38
90020d54:	fb90 f1f1 	sdiv	r1, r0, r1
90020d58:	434b      	muls	r3, r1
90020d5a:	2bfe      	cmp	r3, #254	; 0xfe
90020d5c:	dd03      	ble.n	90020d66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90020d5e:	990c      	ldr	r1, [sp, #48]	; 0x30
90020d60:	4281      	cmp	r1, r0
90020d62:	f000 80c4 	beq.w	90020eee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90020d66:	990c      	ldr	r1, [sp, #48]	; 0x30
90020d68:	f8bc 4000 	ldrh.w	r4, [ip]
90020d6c:	fb11 f303 	smulbb	r3, r1, r3
90020d70:	1220      	asrs	r0, r4, #8
90020d72:	b29b      	uxth	r3, r3
90020d74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020d78:	1c59      	adds	r1, r3, #1
90020d7a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90020d7e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90020d82:	10e1      	asrs	r1, r4, #3
90020d84:	f3c3 2307 	ubfx	r3, r3, #8, #8
90020d88:	00e4      	lsls	r4, r4, #3
90020d8a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020d8e:	b29f      	uxth	r7, r3
90020d90:	43db      	mvns	r3, r3
90020d92:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90020d96:	b2db      	uxtb	r3, r3
90020d98:	b2e4      	uxtb	r4, r4
90020d9a:	9309      	str	r3, [sp, #36]	; 0x24
90020d9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90020d9e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020da2:	fb13 f907 	smulbb	r9, r3, r7
90020da6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020da8:	fb00 9003 	mla	r0, r0, r3, r9
90020dac:	9b12      	ldr	r3, [sp, #72]	; 0x48
90020dae:	fb13 f907 	smulbb	r9, r3, r7
90020db2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020db4:	b280      	uxth	r0, r0
90020db6:	fb01 9103 	mla	r1, r1, r3, r9
90020dba:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020dbc:	fb13 f707 	smulbb	r7, r3, r7
90020dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020dc2:	b289      	uxth	r1, r1
90020dc4:	fb04 7403 	mla	r4, r4, r3, r7
90020dc8:	1c43      	adds	r3, r0, #1
90020dca:	b2a4      	uxth	r4, r4
90020dcc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020dd0:	f104 0901 	add.w	r9, r4, #1
90020dd4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90020dd8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90020ddc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90020de0:	ea49 0000 	orr.w	r0, r9, r0
90020de4:	f101 0901 	add.w	r9, r1, #1
90020de8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90020dec:	ea4f 1959 	mov.w	r9, r9, lsr #5
90020df0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90020df4:	ea40 0009 	orr.w	r0, r0, r9
90020df8:	f8ac 0000 	strh.w	r0, [ip]
90020dfc:	4446      	add	r6, r8
90020dfe:	b2b6      	uxth	r6, r6
90020e00:	2e07      	cmp	r6, #7
90020e02:	bf89      	itett	hi
90020e04:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
90020e06:	fa42 f208 	asrls.w	r2, r2, r8
90020e0a:	2600      	movhi	r6, #0
90020e0c:	785a      	ldrbhi	r2, [r3, #1]
90020e0e:	bf8a      	itet	hi
90020e10:	3301      	addhi	r3, #1
90020e12:	b2d2      	uxtbls	r2, r2
90020e14:	9328      	strhi	r3, [sp, #160]	; 0xa0
90020e16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020e18:	449c      	add	ip, r3
90020e1a:	e792      	b.n	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90020e1c:	441c      	add	r4, r3
90020e1e:	b224      	sxth	r4, r4
90020e20:	e6d5      	b.n	90020bce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020e22:	f1ba 0f01 	cmp.w	sl, #1
90020e26:	f47f af0c 	bne.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e2a:	f1bb 0f01 	cmp.w	fp, #1
90020e2e:	f47f af08 	bne.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e32:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 90020ef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90020e36:	f8db 0000 	ldr.w	r0, [fp]
90020e3a:	6803      	ldr	r3, [r0, #0]
90020e3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020e3e:	4798      	blx	r3
90020e40:	f410 7380 	ands.w	r3, r0, #256	; 0x100
90020e44:	465a      	mov	r2, fp
90020e46:	d006      	beq.n	90020e56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020e48:	f1b8 0f04 	cmp.w	r8, #4
90020e4c:	d140      	bne.n	90020ed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
90020e4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020e50:	3300      	adds	r3, #0
90020e52:	bf18      	it	ne
90020e54:	2301      	movne	r3, #1
90020e56:	0580      	lsls	r0, r0, #22
90020e58:	d56e      	bpl.n	90020f38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020e5a:	f1b8 0f08 	cmp.w	r8, #8
90020e5e:	d16b      	bne.n	90020f38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020e60:	2b00      	cmp	r3, #0
90020e62:	bf0c      	ite	eq
90020e64:	f44f 7100 	moveq.w	r1, #512	; 0x200
90020e68:	f44f 7180 	movne.w	r1, #256	; 0x100
90020e6c:	2d00      	cmp	r5, #0
90020e6e:	f47f aee8 	bne.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e72:	2e00      	cmp	r6, #0
90020e74:	f47f aee5 	bne.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e78:	19e3      	adds	r3, r4, r7
90020e7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
90020e7c:	4283      	cmp	r3, r0
90020e7e:	f73f aee0 	bgt.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e84:	980d      	ldr	r0, [sp, #52]	; 0x34
90020e86:	444b      	add	r3, r9
90020e88:	4283      	cmp	r3, r0
90020e8a:	f73f aeda 	bgt.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020e8e:	b2bf      	uxth	r7, r7
90020e90:	f1b8 0f08 	cmp.w	r8, #8
90020e94:	6810      	ldr	r0, [r2, #0]
90020e96:	f04f 0500 	mov.w	r5, #0
90020e9a:	bf18      	it	ne
90020e9c:	3701      	addne	r7, #1
90020e9e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
90020ea2:	6804      	ldr	r4, [r0, #0]
90020ea4:	bf18      	it	ne
90020ea6:	f027 0701 	bicne.w	r7, r7, #1
90020eaa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
90020eae:	e9cd 1505 	strd	r1, r5, [sp, #20]
90020eb2:	990c      	ldr	r1, [sp, #48]	; 0x30
90020eb4:	bf18      	it	ne
90020eb6:	b2bf      	uxthne	r7, r7
90020eb8:	9104      	str	r1, [sp, #16]
90020eba:	992a      	ldr	r1, [sp, #168]	; 0xa8
90020ebc:	e9cd 7900 	strd	r7, r9, [sp]
90020ec0:	e9cd 7102 	strd	r7, r1, [sp, #8]
90020ec4:	9928      	ldr	r1, [sp, #160]	; 0xa0
90020ec6:	6d64      	ldr	r4, [r4, #84]	; 0x54
90020ec8:	47a0      	blx	r4
90020eca:	b019      	add	sp, #100	; 0x64
90020ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020ed0:	2300      	movs	r3, #0
90020ed2:	e7c0      	b.n	90020e56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020ed4:	2208      	movs	r2, #8
90020ed6:	fb92 f3f8 	sdiv	r3, r2, r8
90020eda:	1e5a      	subs	r2, r3, #1
90020edc:	443a      	add	r2, r7
90020ede:	fb92 f2f3 	sdiv	r2, r2, r3
90020ee2:	fb12 f203 	smulbb	r2, r2, r3
90020ee6:	b292      	uxth	r2, r2
90020ee8:	e6b0      	b.n	90020c4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90020eea:	980b      	ldr	r0, [sp, #44]	; 0x2c
90020eec:	e6ec      	b.n	90020cc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90020eee:	9810      	ldr	r0, [sp, #64]	; 0x40
90020ef0:	e782      	b.n	90020df8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90020ef2:	bf00      	nop
90020ef4:	24039ac4 	.word	0x24039ac4
90020ef8:	24039acc 	.word	0x24039acc
90020efc:	24039ac6 	.word	0x24039ac6
90020f00:	00fff800 	.word	0x00fff800
90020f04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020f06:	b153      	cbz	r3, 90020f1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90020f08:	441e      	add	r6, r3
90020f0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020f0c:	b2b6      	uxth	r6, r6
90020f0e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90020f12:	f006 0607 	and.w	r6, r6, #7
90020f16:	781a      	ldrb	r2, [r3, #0]
90020f18:	9328      	str	r3, [sp, #160]	; 0xa0
90020f1a:	4132      	asrs	r2, r6
90020f1c:	b2d2      	uxtb	r2, r2
90020f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020f20:	445b      	add	r3, fp
90020f22:	930a      	str	r3, [sp, #40]	; 0x28
90020f24:	e706      	b.n	90020d34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90020f26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020f28:	2b00      	cmp	r3, #0
90020f2a:	d1ce      	bne.n	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f2c:	4b05      	ldr	r3, [pc, #20]	; (90020f44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90020f2e:	6818      	ldr	r0, [r3, #0]
90020f30:	6803      	ldr	r3, [r0, #0]
90020f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020f34:	4798      	blx	r3
90020f36:	e7c8      	b.n	90020eca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020f38:	2b00      	cmp	r3, #0
90020f3a:	f43f ae82 	beq.w	90020c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f3e:	f44f 7180 	mov.w	r1, #256	; 0x100
90020f42:	e793      	b.n	90020e6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90020f44:	24039acc 	.word	0x24039acc

90020f48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90020f48:	b538      	push	{r3, r4, r5, lr}
90020f4a:	4c15      	ldr	r4, [pc, #84]	; (90020fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90020f4c:	4605      	mov	r5, r0
90020f4e:	7823      	ldrb	r3, [r4, #0]
90020f50:	f3bf 8f5b 	dmb	ish
90020f54:	07da      	lsls	r2, r3, #31
90020f56:	d40b      	bmi.n	90020f70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020f58:	4620      	mov	r0, r4
90020f5a:	f008 fa05 	bl	90029368 <__cxa_guard_acquire>
90020f5e:	b138      	cbz	r0, 90020f70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90020f60:	4620      	mov	r0, r4
90020f62:	f008 fa0d 	bl	90029380 <__cxa_guard_release>
90020f66:	4a0f      	ldr	r2, [pc, #60]	; (90020fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020f68:	490f      	ldr	r1, [pc, #60]	; (90020fa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90020f6a:	4810      	ldr	r0, [pc, #64]	; (90020fac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020f6c:	f008 f9f5 	bl	9002935a <__aeabi_atexit>
90020f70:	4c0f      	ldr	r4, [pc, #60]	; (90020fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90020f72:	7823      	ldrb	r3, [r4, #0]
90020f74:	f3bf 8f5b 	dmb	ish
90020f78:	07db      	lsls	r3, r3, #31
90020f7a:	d40b      	bmi.n	90020f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020f7c:	4620      	mov	r0, r4
90020f7e:	f008 f9f3 	bl	90029368 <__cxa_guard_acquire>
90020f82:	b138      	cbz	r0, 90020f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90020f84:	4620      	mov	r0, r4
90020f86:	f008 f9fb 	bl	90029380 <__cxa_guard_release>
90020f8a:	4a06      	ldr	r2, [pc, #24]	; (90020fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90020f8c:	4909      	ldr	r1, [pc, #36]	; (90020fb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90020f8e:	480a      	ldr	r0, [pc, #40]	; (90020fb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020f90:	f008 f9e3 	bl	9002935a <__aeabi_atexit>
90020f94:	4b05      	ldr	r3, [pc, #20]	; (90020fac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90020f96:	612b      	str	r3, [r5, #16]
90020f98:	4b07      	ldr	r3, [pc, #28]	; (90020fb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90020f9a:	616b      	str	r3, [r5, #20]
90020f9c:	bd38      	pop	{r3, r4, r5, pc}
90020f9e:	bf00      	nop
90020fa0:	24039bac 	.word	0x24039bac
90020fa4:	24000000 	.word	0x24000000
90020fa8:	9001dd2f 	.word	0x9001dd2f
90020fac:	240000d0 	.word	0x240000d0
90020fb0:	24039bb0 	.word	0x24039bb0
90020fb4:	9001dd2d 	.word	0x9001dd2d
90020fb8:	240000d4 	.word	0x240000d4

90020fbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90020fbc:	b538      	push	{r3, r4, r5, lr}
90020fbe:	4c15      	ldr	r4, [pc, #84]	; (90021014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
90020fc0:	4605      	mov	r5, r0
90020fc2:	7823      	ldrb	r3, [r4, #0]
90020fc4:	f3bf 8f5b 	dmb	ish
90020fc8:	07da      	lsls	r2, r3, #31
90020fca:	d40b      	bmi.n	90020fe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020fcc:	4620      	mov	r0, r4
90020fce:	f008 f9cb 	bl	90029368 <__cxa_guard_acquire>
90020fd2:	b138      	cbz	r0, 90020fe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020fd4:	4620      	mov	r0, r4
90020fd6:	f008 f9d3 	bl	90029380 <__cxa_guard_release>
90020fda:	4a0f      	ldr	r2, [pc, #60]	; (90021018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020fdc:	490f      	ldr	r1, [pc, #60]	; (9002101c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
90020fde:	4810      	ldr	r0, [pc, #64]	; (90021020 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020fe0:	f008 f9bb 	bl	9002935a <__aeabi_atexit>
90020fe4:	4c0f      	ldr	r4, [pc, #60]	; (90021024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90020fe6:	7823      	ldrb	r3, [r4, #0]
90020fe8:	f3bf 8f5b 	dmb	ish
90020fec:	07db      	lsls	r3, r3, #31
90020fee:	d40b      	bmi.n	90021008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020ff0:	4620      	mov	r0, r4
90020ff2:	f008 f9b9 	bl	90029368 <__cxa_guard_acquire>
90020ff6:	b138      	cbz	r0, 90021008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020ff8:	4620      	mov	r0, r4
90020ffa:	f008 f9c1 	bl	90029380 <__cxa_guard_release>
90020ffe:	4a06      	ldr	r2, [pc, #24]	; (90021018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021000:	4909      	ldr	r1, [pc, #36]	; (90021028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90021002:	480a      	ldr	r0, [pc, #40]	; (9002102c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021004:	f008 f9a9 	bl	9002935a <__aeabi_atexit>
90021008:	4b05      	ldr	r3, [pc, #20]	; (90021020 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002100a:	60ab      	str	r3, [r5, #8]
9002100c:	4b07      	ldr	r3, [pc, #28]	; (9002102c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002100e:	60eb      	str	r3, [r5, #12]
90021010:	bd38      	pop	{r3, r4, r5, pc}
90021012:	bf00      	nop
90021014:	24039b84 	.word	0x24039b84
90021018:	24000000 	.word	0x24000000
9002101c:	9001dd33 	.word	0x9001dd33
90021020:	240000a8 	.word	0x240000a8
90021024:	24039b88 	.word	0x24039b88
90021028:	9001dd31 	.word	0x9001dd31
9002102c:	240000ac 	.word	0x240000ac

90021030 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90021030:	b510      	push	{r4, lr}
90021032:	4604      	mov	r4, r0
90021034:	f7ff ff88 	bl	90020f48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90021038:	4620      	mov	r0, r4
9002103a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002103e:	f7ff bfbd 	b.w	90020fbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90021044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90021044:	b538      	push	{r3, r4, r5, lr}
90021046:	4c15      	ldr	r4, [pc, #84]	; (9002109c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90021048:	4605      	mov	r5, r0
9002104a:	7823      	ldrb	r3, [r4, #0]
9002104c:	f3bf 8f5b 	dmb	ish
90021050:	07da      	lsls	r2, r3, #31
90021052:	d40b      	bmi.n	9002106c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021054:	4620      	mov	r0, r4
90021056:	f008 f987 	bl	90029368 <__cxa_guard_acquire>
9002105a:	b138      	cbz	r0, 9002106c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9002105c:	4620      	mov	r0, r4
9002105e:	f008 f98f 	bl	90029380 <__cxa_guard_release>
90021062:	4a0f      	ldr	r2, [pc, #60]	; (900210a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021064:	490f      	ldr	r1, [pc, #60]	; (900210a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90021066:	4810      	ldr	r0, [pc, #64]	; (900210a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021068:	f008 f977 	bl	9002935a <__aeabi_atexit>
9002106c:	4c0f      	ldr	r4, [pc, #60]	; (900210ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002106e:	7823      	ldrb	r3, [r4, #0]
90021070:	f3bf 8f5b 	dmb	ish
90021074:	07db      	lsls	r3, r3, #31
90021076:	d40b      	bmi.n	90021090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021078:	4620      	mov	r0, r4
9002107a:	f008 f975 	bl	90029368 <__cxa_guard_acquire>
9002107e:	b138      	cbz	r0, 90021090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021080:	4620      	mov	r0, r4
90021082:	f008 f97d 	bl	90029380 <__cxa_guard_release>
90021086:	4a06      	ldr	r2, [pc, #24]	; (900210a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021088:	4909      	ldr	r1, [pc, #36]	; (900210b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9002108a:	480a      	ldr	r0, [pc, #40]	; (900210b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9002108c:	f008 f965 	bl	9002935a <__aeabi_atexit>
90021090:	4b05      	ldr	r3, [pc, #20]	; (900210a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021092:	622b      	str	r3, [r5, #32]
90021094:	4b07      	ldr	r3, [pc, #28]	; (900210b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021096:	626b      	str	r3, [r5, #36]	; 0x24
90021098:	bd38      	pop	{r3, r4, r5, pc}
9002109a:	bf00      	nop
9002109c:	24039bb4 	.word	0x24039bb4
900210a0:	24000000 	.word	0x24000000
900210a4:	9001dd27 	.word	0x9001dd27
900210a8:	240000d8 	.word	0x240000d8
900210ac:	24039bb8 	.word	0x24039bb8
900210b0:	9001dd25 	.word	0x9001dd25
900210b4:	240000dc 	.word	0x240000dc

900210b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900210b8:	b538      	push	{r3, r4, r5, lr}
900210ba:	4c15      	ldr	r4, [pc, #84]	; (90021110 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900210bc:	4605      	mov	r5, r0
900210be:	7823      	ldrb	r3, [r4, #0]
900210c0:	f3bf 8f5b 	dmb	ish
900210c4:	07da      	lsls	r2, r3, #31
900210c6:	d40b      	bmi.n	900210e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900210c8:	4620      	mov	r0, r4
900210ca:	f008 f94d 	bl	90029368 <__cxa_guard_acquire>
900210ce:	b138      	cbz	r0, 900210e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900210d0:	4620      	mov	r0, r4
900210d2:	f008 f955 	bl	90029380 <__cxa_guard_release>
900210d6:	4a0f      	ldr	r2, [pc, #60]	; (90021114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900210d8:	490f      	ldr	r1, [pc, #60]	; (90021118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
900210da:	4810      	ldr	r0, [pc, #64]	; (9002111c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900210dc:	f008 f93d 	bl	9002935a <__aeabi_atexit>
900210e0:	4c0f      	ldr	r4, [pc, #60]	; (90021120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
900210e2:	7823      	ldrb	r3, [r4, #0]
900210e4:	f3bf 8f5b 	dmb	ish
900210e8:	07db      	lsls	r3, r3, #31
900210ea:	d40b      	bmi.n	90021104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900210ec:	4620      	mov	r0, r4
900210ee:	f008 f93b 	bl	90029368 <__cxa_guard_acquire>
900210f2:	b138      	cbz	r0, 90021104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900210f4:	4620      	mov	r0, r4
900210f6:	f008 f943 	bl	90029380 <__cxa_guard_release>
900210fa:	4a06      	ldr	r2, [pc, #24]	; (90021114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900210fc:	4909      	ldr	r1, [pc, #36]	; (90021124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
900210fe:	480a      	ldr	r0, [pc, #40]	; (90021128 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021100:	f008 f92b 	bl	9002935a <__aeabi_atexit>
90021104:	4b05      	ldr	r3, [pc, #20]	; (9002111c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021106:	61ab      	str	r3, [r5, #24]
90021108:	4b07      	ldr	r3, [pc, #28]	; (90021128 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002110a:	61eb      	str	r3, [r5, #28]
9002110c:	bd38      	pop	{r3, r4, r5, pc}
9002110e:	bf00      	nop
90021110:	24039b8c 	.word	0x24039b8c
90021114:	24000000 	.word	0x24000000
90021118:	9001dd2b 	.word	0x9001dd2b
9002111c:	240000b0 	.word	0x240000b0
90021120:	24039b90 	.word	0x24039b90
90021124:	9001dd29 	.word	0x9001dd29
90021128:	240000b4 	.word	0x240000b4

9002112c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9002112c:	b510      	push	{r4, lr}
9002112e:	4604      	mov	r4, r0
90021130:	f7ff ff88 	bl	90021044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021134:	4620      	mov	r0, r4
90021136:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002113a:	f7ff bfbd 	b.w	900210b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90021140 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90021140:	b538      	push	{r3, r4, r5, lr}
90021142:	4c15      	ldr	r4, [pc, #84]	; (90021198 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021144:	4605      	mov	r5, r0
90021146:	7823      	ldrb	r3, [r4, #0]
90021148:	f3bf 8f5b 	dmb	ish
9002114c:	07da      	lsls	r2, r3, #31
9002114e:	d40b      	bmi.n	90021168 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021150:	4620      	mov	r0, r4
90021152:	f008 f909 	bl	90029368 <__cxa_guard_acquire>
90021156:	b138      	cbz	r0, 90021168 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021158:	4620      	mov	r0, r4
9002115a:	f008 f911 	bl	90029380 <__cxa_guard_release>
9002115e:	4a0f      	ldr	r2, [pc, #60]	; (9002119c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021160:	490f      	ldr	r1, [pc, #60]	; (900211a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90021162:	4810      	ldr	r0, [pc, #64]	; (900211a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021164:	f008 f8f9 	bl	9002935a <__aeabi_atexit>
90021168:	4c0f      	ldr	r4, [pc, #60]	; (900211a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9002116a:	7823      	ldrb	r3, [r4, #0]
9002116c:	f3bf 8f5b 	dmb	ish
90021170:	07db      	lsls	r3, r3, #31
90021172:	d40b      	bmi.n	9002118c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021174:	4620      	mov	r0, r4
90021176:	f008 f8f7 	bl	90029368 <__cxa_guard_acquire>
9002117a:	b138      	cbz	r0, 9002118c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9002117c:	4620      	mov	r0, r4
9002117e:	f008 f8ff 	bl	90029380 <__cxa_guard_release>
90021182:	4a06      	ldr	r2, [pc, #24]	; (9002119c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021184:	4909      	ldr	r1, [pc, #36]	; (900211ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021186:	480a      	ldr	r0, [pc, #40]	; (900211b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021188:	f008 f8e7 	bl	9002935a <__aeabi_atexit>
9002118c:	4b05      	ldr	r3, [pc, #20]	; (900211a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002118e:	632b      	str	r3, [r5, #48]	; 0x30
90021190:	4b07      	ldr	r3, [pc, #28]	; (900211b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021192:	636b      	str	r3, [r5, #52]	; 0x34
90021194:	bd38      	pop	{r3, r4, r5, pc}
90021196:	bf00      	nop
90021198:	24039bc4 	.word	0x24039bc4
9002119c:	24000000 	.word	0x24000000
900211a0:	9001dd1f 	.word	0x9001dd1f
900211a4:	240000e8 	.word	0x240000e8
900211a8:	24039bc8 	.word	0x24039bc8
900211ac:	9001dd1d 	.word	0x9001dd1d
900211b0:	240000ec 	.word	0x240000ec

900211b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900211b4:	b538      	push	{r3, r4, r5, lr}
900211b6:	4c15      	ldr	r4, [pc, #84]	; (9002120c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900211b8:	4605      	mov	r5, r0
900211ba:	7823      	ldrb	r3, [r4, #0]
900211bc:	f3bf 8f5b 	dmb	ish
900211c0:	07da      	lsls	r2, r3, #31
900211c2:	d40b      	bmi.n	900211dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900211c4:	4620      	mov	r0, r4
900211c6:	f008 f8cf 	bl	90029368 <__cxa_guard_acquire>
900211ca:	b138      	cbz	r0, 900211dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900211cc:	4620      	mov	r0, r4
900211ce:	f008 f8d7 	bl	90029380 <__cxa_guard_release>
900211d2:	4a0f      	ldr	r2, [pc, #60]	; (90021210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900211d4:	490f      	ldr	r1, [pc, #60]	; (90021214 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
900211d6:	4810      	ldr	r0, [pc, #64]	; (90021218 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900211d8:	f008 f8bf 	bl	9002935a <__aeabi_atexit>
900211dc:	4c0f      	ldr	r4, [pc, #60]	; (9002121c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
900211de:	7823      	ldrb	r3, [r4, #0]
900211e0:	f3bf 8f5b 	dmb	ish
900211e4:	07db      	lsls	r3, r3, #31
900211e6:	d40b      	bmi.n	90021200 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900211e8:	4620      	mov	r0, r4
900211ea:	f008 f8bd 	bl	90029368 <__cxa_guard_acquire>
900211ee:	b138      	cbz	r0, 90021200 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900211f0:	4620      	mov	r0, r4
900211f2:	f008 f8c5 	bl	90029380 <__cxa_guard_release>
900211f6:	4a06      	ldr	r2, [pc, #24]	; (90021210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900211f8:	4909      	ldr	r1, [pc, #36]	; (90021220 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900211fa:	480a      	ldr	r0, [pc, #40]	; (90021224 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900211fc:	f008 f8ad 	bl	9002935a <__aeabi_atexit>
90021200:	4b05      	ldr	r3, [pc, #20]	; (90021218 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021202:	62ab      	str	r3, [r5, #40]	; 0x28
90021204:	4b07      	ldr	r3, [pc, #28]	; (90021224 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021206:	62eb      	str	r3, [r5, #44]	; 0x2c
90021208:	bd38      	pop	{r3, r4, r5, pc}
9002120a:	bf00      	nop
9002120c:	24039b94 	.word	0x24039b94
90021210:	24000000 	.word	0x24000000
90021214:	9001dd23 	.word	0x9001dd23
90021218:	240000b8 	.word	0x240000b8
9002121c:	24039b98 	.word	0x24039b98
90021220:	9001dd21 	.word	0x9001dd21
90021224:	240000bc 	.word	0x240000bc

90021228 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021228:	b510      	push	{r4, lr}
9002122a:	4604      	mov	r4, r0
9002122c:	f7ff ff88 	bl	90021140 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90021230:	4620      	mov	r0, r4
90021232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021236:	f7ff bfbd 	b.w	900211b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9002123c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9002123c:	b538      	push	{r3, r4, r5, lr}
9002123e:	4c15      	ldr	r4, [pc, #84]	; (90021294 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021240:	4605      	mov	r5, r0
90021242:	7823      	ldrb	r3, [r4, #0]
90021244:	f3bf 8f5b 	dmb	ish
90021248:	07da      	lsls	r2, r3, #31
9002124a:	d40b      	bmi.n	90021264 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9002124c:	4620      	mov	r0, r4
9002124e:	f008 f88b 	bl	90029368 <__cxa_guard_acquire>
90021252:	b138      	cbz	r0, 90021264 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021254:	4620      	mov	r0, r4
90021256:	f008 f893 	bl	90029380 <__cxa_guard_release>
9002125a:	4a0f      	ldr	r2, [pc, #60]	; (90021298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9002125c:	490f      	ldr	r1, [pc, #60]	; (9002129c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002125e:	4810      	ldr	r0, [pc, #64]	; (900212a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021260:	f008 f87b 	bl	9002935a <__aeabi_atexit>
90021264:	4c0f      	ldr	r4, [pc, #60]	; (900212a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021266:	7823      	ldrb	r3, [r4, #0]
90021268:	f3bf 8f5b 	dmb	ish
9002126c:	07db      	lsls	r3, r3, #31
9002126e:	d40b      	bmi.n	90021288 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021270:	4620      	mov	r0, r4
90021272:	f008 f879 	bl	90029368 <__cxa_guard_acquire>
90021276:	b138      	cbz	r0, 90021288 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021278:	4620      	mov	r0, r4
9002127a:	f008 f881 	bl	90029380 <__cxa_guard_release>
9002127e:	4a06      	ldr	r2, [pc, #24]	; (90021298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021280:	4909      	ldr	r1, [pc, #36]	; (900212a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021282:	480a      	ldr	r0, [pc, #40]	; (900212ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021284:	f008 f869 	bl	9002935a <__aeabi_atexit>
90021288:	4b05      	ldr	r3, [pc, #20]	; (900212a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002128a:	652b      	str	r3, [r5, #80]	; 0x50
9002128c:	4b07      	ldr	r3, [pc, #28]	; (900212ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002128e:	656b      	str	r3, [r5, #84]	; 0x54
90021290:	bd38      	pop	{r3, r4, r5, pc}
90021292:	bf00      	nop
90021294:	24039bcc 	.word	0x24039bcc
90021298:	24000000 	.word	0x24000000
9002129c:	9001dd0f 	.word	0x9001dd0f
900212a0:	240000f0 	.word	0x240000f0
900212a4:	24039bd0 	.word	0x24039bd0
900212a8:	9001dd0d 	.word	0x9001dd0d
900212ac:	240000f4 	.word	0x240000f4

900212b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900212b0:	b538      	push	{r3, r4, r5, lr}
900212b2:	4c15      	ldr	r4, [pc, #84]	; (90021308 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900212b4:	4605      	mov	r5, r0
900212b6:	7823      	ldrb	r3, [r4, #0]
900212b8:	f3bf 8f5b 	dmb	ish
900212bc:	07da      	lsls	r2, r3, #31
900212be:	d40b      	bmi.n	900212d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900212c0:	4620      	mov	r0, r4
900212c2:	f008 f851 	bl	90029368 <__cxa_guard_acquire>
900212c6:	b138      	cbz	r0, 900212d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900212c8:	4620      	mov	r0, r4
900212ca:	f008 f859 	bl	90029380 <__cxa_guard_release>
900212ce:	4a0f      	ldr	r2, [pc, #60]	; (9002130c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900212d0:	490f      	ldr	r1, [pc, #60]	; (90021310 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
900212d2:	4810      	ldr	r0, [pc, #64]	; (90021314 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900212d4:	f008 f841 	bl	9002935a <__aeabi_atexit>
900212d8:	4c0f      	ldr	r4, [pc, #60]	; (90021318 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
900212da:	7823      	ldrb	r3, [r4, #0]
900212dc:	f3bf 8f5b 	dmb	ish
900212e0:	07db      	lsls	r3, r3, #31
900212e2:	d40b      	bmi.n	900212fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900212e4:	4620      	mov	r0, r4
900212e6:	f008 f83f 	bl	90029368 <__cxa_guard_acquire>
900212ea:	b138      	cbz	r0, 900212fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900212ec:	4620      	mov	r0, r4
900212ee:	f008 f847 	bl	90029380 <__cxa_guard_release>
900212f2:	4a06      	ldr	r2, [pc, #24]	; (9002130c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900212f4:	4909      	ldr	r1, [pc, #36]	; (9002131c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
900212f6:	480a      	ldr	r0, [pc, #40]	; (90021320 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900212f8:	f008 f82f 	bl	9002935a <__aeabi_atexit>
900212fc:	4b05      	ldr	r3, [pc, #20]	; (90021314 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900212fe:	64ab      	str	r3, [r5, #72]	; 0x48
90021300:	4b07      	ldr	r3, [pc, #28]	; (90021320 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021302:	64eb      	str	r3, [r5, #76]	; 0x4c
90021304:	bd38      	pop	{r3, r4, r5, pc}
90021306:	bf00      	nop
90021308:	24039bd4 	.word	0x24039bd4
9002130c:	24000000 	.word	0x24000000
90021310:	9001dd13 	.word	0x9001dd13
90021314:	240000f8 	.word	0x240000f8
90021318:	24039bd8 	.word	0x24039bd8
9002131c:	9001dd11 	.word	0x9001dd11
90021320:	240000fc 	.word	0x240000fc

90021324 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021324:	b538      	push	{r3, r4, r5, lr}
90021326:	4c15      	ldr	r4, [pc, #84]	; (9002137c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021328:	4605      	mov	r5, r0
9002132a:	7823      	ldrb	r3, [r4, #0]
9002132c:	f3bf 8f5b 	dmb	ish
90021330:	07da      	lsls	r2, r3, #31
90021332:	d40b      	bmi.n	9002134c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021334:	4620      	mov	r0, r4
90021336:	f008 f817 	bl	90029368 <__cxa_guard_acquire>
9002133a:	b138      	cbz	r0, 9002134c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002133c:	4620      	mov	r0, r4
9002133e:	f008 f81f 	bl	90029380 <__cxa_guard_release>
90021342:	4a0f      	ldr	r2, [pc, #60]	; (90021380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021344:	490f      	ldr	r1, [pc, #60]	; (90021384 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021346:	4810      	ldr	r0, [pc, #64]	; (90021388 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021348:	f008 f807 	bl	9002935a <__aeabi_atexit>
9002134c:	4c0f      	ldr	r4, [pc, #60]	; (9002138c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002134e:	7823      	ldrb	r3, [r4, #0]
90021350:	f3bf 8f5b 	dmb	ish
90021354:	07db      	lsls	r3, r3, #31
90021356:	d40b      	bmi.n	90021370 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021358:	4620      	mov	r0, r4
9002135a:	f008 f805 	bl	90029368 <__cxa_guard_acquire>
9002135e:	b138      	cbz	r0, 90021370 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021360:	4620      	mov	r0, r4
90021362:	f008 f80d 	bl	90029380 <__cxa_guard_release>
90021366:	4a06      	ldr	r2, [pc, #24]	; (90021380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021368:	4909      	ldr	r1, [pc, #36]	; (90021390 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9002136a:	480a      	ldr	r0, [pc, #40]	; (90021394 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9002136c:	f007 fff5 	bl	9002935a <__aeabi_atexit>
90021370:	4b05      	ldr	r3, [pc, #20]	; (90021388 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021372:	642b      	str	r3, [r5, #64]	; 0x40
90021374:	4b07      	ldr	r3, [pc, #28]	; (90021394 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021376:	646b      	str	r3, [r5, #68]	; 0x44
90021378:	bd38      	pop	{r3, r4, r5, pc}
9002137a:	bf00      	nop
9002137c:	24039b9c 	.word	0x24039b9c
90021380:	24000000 	.word	0x24000000
90021384:	9001dd17 	.word	0x9001dd17
90021388:	240000c0 	.word	0x240000c0
9002138c:	24039ba0 	.word	0x24039ba0
90021390:	9001dd15 	.word	0x9001dd15
90021394:	240000c4 	.word	0x240000c4

90021398 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021398:	b538      	push	{r3, r4, r5, lr}
9002139a:	4c15      	ldr	r4, [pc, #84]	; (900213f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9002139c:	4605      	mov	r5, r0
9002139e:	7823      	ldrb	r3, [r4, #0]
900213a0:	f3bf 8f5b 	dmb	ish
900213a4:	07da      	lsls	r2, r3, #31
900213a6:	d40b      	bmi.n	900213c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900213a8:	4620      	mov	r0, r4
900213aa:	f007 ffdd 	bl	90029368 <__cxa_guard_acquire>
900213ae:	b138      	cbz	r0, 900213c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900213b0:	4620      	mov	r0, r4
900213b2:	f007 ffe5 	bl	90029380 <__cxa_guard_release>
900213b6:	4a0f      	ldr	r2, [pc, #60]	; (900213f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900213b8:	490f      	ldr	r1, [pc, #60]	; (900213f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
900213ba:	4810      	ldr	r0, [pc, #64]	; (900213fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900213bc:	f007 ffcd 	bl	9002935a <__aeabi_atexit>
900213c0:	4c0f      	ldr	r4, [pc, #60]	; (90021400 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
900213c2:	7823      	ldrb	r3, [r4, #0]
900213c4:	f3bf 8f5b 	dmb	ish
900213c8:	07db      	lsls	r3, r3, #31
900213ca:	d40b      	bmi.n	900213e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900213cc:	4620      	mov	r0, r4
900213ce:	f007 ffcb 	bl	90029368 <__cxa_guard_acquire>
900213d2:	b138      	cbz	r0, 900213e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900213d4:	4620      	mov	r0, r4
900213d6:	f007 ffd3 	bl	90029380 <__cxa_guard_release>
900213da:	4a06      	ldr	r2, [pc, #24]	; (900213f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900213dc:	4909      	ldr	r1, [pc, #36]	; (90021404 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
900213de:	480a      	ldr	r0, [pc, #40]	; (90021408 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900213e0:	f007 ffbb 	bl	9002935a <__aeabi_atexit>
900213e4:	4b05      	ldr	r3, [pc, #20]	; (900213fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900213e6:	63ab      	str	r3, [r5, #56]	; 0x38
900213e8:	4b07      	ldr	r3, [pc, #28]	; (90021408 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900213ea:	63eb      	str	r3, [r5, #60]	; 0x3c
900213ec:	bd38      	pop	{r3, r4, r5, pc}
900213ee:	bf00      	nop
900213f0:	24039bbc 	.word	0x24039bbc
900213f4:	24000000 	.word	0x24000000
900213f8:	9001dd1b 	.word	0x9001dd1b
900213fc:	240000e0 	.word	0x240000e0
90021400:	24039bc0 	.word	0x24039bc0
90021404:	9001dd19 	.word	0x9001dd19
90021408:	240000e4 	.word	0x240000e4

9002140c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9002140c:	b510      	push	{r4, lr}
9002140e:	4604      	mov	r4, r0
90021410:	f7ff ff14 	bl	9002123c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021414:	4620      	mov	r0, r4
90021416:	f7ff ff85 	bl	90021324 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9002141a:	4620      	mov	r0, r4
9002141c:	f7ff ff48 	bl	900212b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021420:	4620      	mov	r0, r4
90021422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021426:	f7ff bfb7 	b.w	90021398 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9002142c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9002142c:	b538      	push	{r3, r4, r5, lr}
9002142e:	4c15      	ldr	r4, [pc, #84]	; (90021484 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021430:	4605      	mov	r5, r0
90021432:	7823      	ldrb	r3, [r4, #0]
90021434:	f3bf 8f5b 	dmb	ish
90021438:	07da      	lsls	r2, r3, #31
9002143a:	d40b      	bmi.n	90021454 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9002143c:	4620      	mov	r0, r4
9002143e:	f007 ff93 	bl	90029368 <__cxa_guard_acquire>
90021442:	b138      	cbz	r0, 90021454 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021444:	4620      	mov	r0, r4
90021446:	f007 ff9b 	bl	90029380 <__cxa_guard_release>
9002144a:	4a0f      	ldr	r2, [pc, #60]	; (90021488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002144c:	490f      	ldr	r1, [pc, #60]	; (9002148c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002144e:	4810      	ldr	r0, [pc, #64]	; (90021490 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021450:	f007 ff83 	bl	9002935a <__aeabi_atexit>
90021454:	4c0f      	ldr	r4, [pc, #60]	; (90021494 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021456:	7823      	ldrb	r3, [r4, #0]
90021458:	f3bf 8f5b 	dmb	ish
9002145c:	07db      	lsls	r3, r3, #31
9002145e:	d40b      	bmi.n	90021478 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021460:	4620      	mov	r0, r4
90021462:	f007 ff81 	bl	90029368 <__cxa_guard_acquire>
90021466:	b138      	cbz	r0, 90021478 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021468:	4620      	mov	r0, r4
9002146a:	f007 ff89 	bl	90029380 <__cxa_guard_release>
9002146e:	4a06      	ldr	r2, [pc, #24]	; (90021488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021470:	4909      	ldr	r1, [pc, #36]	; (90021498 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021472:	480a      	ldr	r0, [pc, #40]	; (9002149c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021474:	f007 ff71 	bl	9002935a <__aeabi_atexit>
90021478:	4b05      	ldr	r3, [pc, #20]	; (90021490 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002147a:	662b      	str	r3, [r5, #96]	; 0x60
9002147c:	4b07      	ldr	r3, [pc, #28]	; (9002149c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002147e:	666b      	str	r3, [r5, #100]	; 0x64
90021480:	bd38      	pop	{r3, r4, r5, pc}
90021482:	bf00      	nop
90021484:	24039ba4 	.word	0x24039ba4
90021488:	24000000 	.word	0x24000000
9002148c:	9001dd07 	.word	0x9001dd07
90021490:	240000c8 	.word	0x240000c8
90021494:	24039ba8 	.word	0x24039ba8
90021498:	9001dd05 	.word	0x9001dd05
9002149c:	240000cc 	.word	0x240000cc

900214a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900214a0:	b538      	push	{r3, r4, r5, lr}
900214a2:	4c15      	ldr	r4, [pc, #84]	; (900214f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
900214a4:	4605      	mov	r5, r0
900214a6:	7823      	ldrb	r3, [r4, #0]
900214a8:	f3bf 8f5b 	dmb	ish
900214ac:	07da      	lsls	r2, r3, #31
900214ae:	d40b      	bmi.n	900214c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900214b0:	4620      	mov	r0, r4
900214b2:	f007 ff59 	bl	90029368 <__cxa_guard_acquire>
900214b6:	b138      	cbz	r0, 900214c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900214b8:	4620      	mov	r0, r4
900214ba:	f007 ff61 	bl	90029380 <__cxa_guard_release>
900214be:	4a0f      	ldr	r2, [pc, #60]	; (900214fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900214c0:	490f      	ldr	r1, [pc, #60]	; (90021500 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
900214c2:	4810      	ldr	r0, [pc, #64]	; (90021504 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900214c4:	f007 ff49 	bl	9002935a <__aeabi_atexit>
900214c8:	4c0f      	ldr	r4, [pc, #60]	; (90021508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
900214ca:	7823      	ldrb	r3, [r4, #0]
900214cc:	f3bf 8f5b 	dmb	ish
900214d0:	07db      	lsls	r3, r3, #31
900214d2:	d40b      	bmi.n	900214ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900214d4:	4620      	mov	r0, r4
900214d6:	f007 ff47 	bl	90029368 <__cxa_guard_acquire>
900214da:	b138      	cbz	r0, 900214ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900214dc:	4620      	mov	r0, r4
900214de:	f007 ff4f 	bl	90029380 <__cxa_guard_release>
900214e2:	4a06      	ldr	r2, [pc, #24]	; (900214fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900214e4:	4909      	ldr	r1, [pc, #36]	; (9002150c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
900214e6:	480a      	ldr	r0, [pc, #40]	; (90021510 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900214e8:	f007 ff37 	bl	9002935a <__aeabi_atexit>
900214ec:	4b05      	ldr	r3, [pc, #20]	; (90021504 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900214ee:	65ab      	str	r3, [r5, #88]	; 0x58
900214f0:	4b07      	ldr	r3, [pc, #28]	; (90021510 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900214f2:	65eb      	str	r3, [r5, #92]	; 0x5c
900214f4:	bd38      	pop	{r3, r4, r5, pc}
900214f6:	bf00      	nop
900214f8:	24039b7c 	.word	0x24039b7c
900214fc:	24000000 	.word	0x24000000
90021500:	9001dd0b 	.word	0x9001dd0b
90021504:	240000a0 	.word	0x240000a0
90021508:	24039b80 	.word	0x24039b80
9002150c:	9001dd09 	.word	0x9001dd09
90021510:	240000a4 	.word	0x240000a4

90021514 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021514:	b510      	push	{r4, lr}
90021516:	4604      	mov	r4, r0
90021518:	f7ff ff88 	bl	9002142c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9002151c:	4620      	mov	r0, r4
9002151e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021522:	f7ff bfbd 	b.w	900214a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021528 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021528:	b538      	push	{r3, r4, r5, lr}
9002152a:	4c15      	ldr	r4, [pc, #84]	; (90021580 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9002152c:	4605      	mov	r5, r0
9002152e:	7823      	ldrb	r3, [r4, #0]
90021530:	f3bf 8f5b 	dmb	ish
90021534:	07da      	lsls	r2, r3, #31
90021536:	d40b      	bmi.n	90021550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021538:	4620      	mov	r0, r4
9002153a:	f007 ff15 	bl	90029368 <__cxa_guard_acquire>
9002153e:	b138      	cbz	r0, 90021550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021540:	4620      	mov	r0, r4
90021542:	f007 ff1d 	bl	90029380 <__cxa_guard_release>
90021546:	4a0f      	ldr	r2, [pc, #60]	; (90021584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021548:	490f      	ldr	r1, [pc, #60]	; (90021588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9002154a:	4810      	ldr	r0, [pc, #64]	; (9002158c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9002154c:	f007 ff05 	bl	9002935a <__aeabi_atexit>
90021550:	4c0f      	ldr	r4, [pc, #60]	; (90021590 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021552:	7823      	ldrb	r3, [r4, #0]
90021554:	f3bf 8f5b 	dmb	ish
90021558:	07db      	lsls	r3, r3, #31
9002155a:	d40b      	bmi.n	90021574 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9002155c:	4620      	mov	r0, r4
9002155e:	f007 ff03 	bl	90029368 <__cxa_guard_acquire>
90021562:	b138      	cbz	r0, 90021574 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021564:	4620      	mov	r0, r4
90021566:	f007 ff0b 	bl	90029380 <__cxa_guard_release>
9002156a:	4a06      	ldr	r2, [pc, #24]	; (90021584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9002156c:	4909      	ldr	r1, [pc, #36]	; (90021594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002156e:	480a      	ldr	r0, [pc, #40]	; (90021598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021570:	f007 fef3 	bl	9002935a <__aeabi_atexit>
90021574:	4b05      	ldr	r3, [pc, #20]	; (9002158c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021576:	672b      	str	r3, [r5, #112]	; 0x70
90021578:	4b07      	ldr	r3, [pc, #28]	; (90021598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002157a:	676b      	str	r3, [r5, #116]	; 0x74
9002157c:	bd38      	pop	{r3, r4, r5, pc}
9002157e:	bf00      	nop
90021580:	24039b74 	.word	0x24039b74
90021584:	24000000 	.word	0x24000000
90021588:	9001dcff 	.word	0x9001dcff
9002158c:	24000098 	.word	0x24000098
90021590:	24039b78 	.word	0x24039b78
90021594:	9001dcfd 	.word	0x9001dcfd
90021598:	2400009c 	.word	0x2400009c

9002159c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002159c:	b538      	push	{r3, r4, r5, lr}
9002159e:	4c15      	ldr	r4, [pc, #84]	; (900215f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900215a0:	4605      	mov	r5, r0
900215a2:	7823      	ldrb	r3, [r4, #0]
900215a4:	f3bf 8f5b 	dmb	ish
900215a8:	07da      	lsls	r2, r3, #31
900215aa:	d40b      	bmi.n	900215c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900215ac:	4620      	mov	r0, r4
900215ae:	f007 fedb 	bl	90029368 <__cxa_guard_acquire>
900215b2:	b138      	cbz	r0, 900215c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900215b4:	4620      	mov	r0, r4
900215b6:	f007 fee3 	bl	90029380 <__cxa_guard_release>
900215ba:	4a0f      	ldr	r2, [pc, #60]	; (900215f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900215bc:	490f      	ldr	r1, [pc, #60]	; (900215fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
900215be:	4810      	ldr	r0, [pc, #64]	; (90021600 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900215c0:	f007 fecb 	bl	9002935a <__aeabi_atexit>
900215c4:	4c0f      	ldr	r4, [pc, #60]	; (90021604 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
900215c6:	7823      	ldrb	r3, [r4, #0]
900215c8:	f3bf 8f5b 	dmb	ish
900215cc:	07db      	lsls	r3, r3, #31
900215ce:	d40b      	bmi.n	900215e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900215d0:	4620      	mov	r0, r4
900215d2:	f007 fec9 	bl	90029368 <__cxa_guard_acquire>
900215d6:	b138      	cbz	r0, 900215e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900215d8:	4620      	mov	r0, r4
900215da:	f007 fed1 	bl	90029380 <__cxa_guard_release>
900215de:	4a06      	ldr	r2, [pc, #24]	; (900215f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900215e0:	4909      	ldr	r1, [pc, #36]	; (90021608 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
900215e2:	480a      	ldr	r0, [pc, #40]	; (9002160c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900215e4:	f007 feb9 	bl	9002935a <__aeabi_atexit>
900215e8:	4b05      	ldr	r3, [pc, #20]	; (90021600 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900215ea:	66ab      	str	r3, [r5, #104]	; 0x68
900215ec:	4b07      	ldr	r3, [pc, #28]	; (9002160c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900215ee:	66eb      	str	r3, [r5, #108]	; 0x6c
900215f0:	bd38      	pop	{r3, r4, r5, pc}
900215f2:	bf00      	nop
900215f4:	24039b6c 	.word	0x24039b6c
900215f8:	24000000 	.word	0x24000000
900215fc:	9001dd03 	.word	0x9001dd03
90021600:	24000090 	.word	0x24000090
90021604:	24039b70 	.word	0x24039b70
90021608:	9001dd01 	.word	0x9001dd01
9002160c:	24000094 	.word	0x24000094

90021610 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021610:	b510      	push	{r4, lr}
90021612:	4604      	mov	r4, r0
90021614:	f7ff ff88 	bl	90021528 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021618:	4620      	mov	r0, r4
9002161a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002161e:	f7ff bfbd 	b.w	9002159c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021622 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021622:	b510      	push	{r4, lr}
90021624:	4604      	mov	r4, r0
90021626:	f7ff fff3 	bl	90021610 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9002162a:	4620      	mov	r0, r4
9002162c:	f7ff ff72 	bl	90021514 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021630:	4620      	mov	r0, r4
90021632:	f7ff fdf9 	bl	90021228 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021636:	4620      	mov	r0, r4
90021638:	f7ff fcfa 	bl	90021030 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9002163c:	4620      	mov	r0, r4
9002163e:	f7ff fd75 	bl	9002112c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021642:	4620      	mov	r0, r4
90021644:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021648:	f7ff bee0 	b.w	9002140c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9002164c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9002164c:	b538      	push	{r3, r4, r5, lr}
9002164e:	4c0b      	ldr	r4, [pc, #44]	; (9002167c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021650:	4605      	mov	r5, r0
90021652:	7823      	ldrb	r3, [r4, #0]
90021654:	f3bf 8f5b 	dmb	ish
90021658:	07db      	lsls	r3, r3, #31
9002165a:	d40b      	bmi.n	90021674 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9002165c:	4620      	mov	r0, r4
9002165e:	f007 fe83 	bl	90029368 <__cxa_guard_acquire>
90021662:	b138      	cbz	r0, 90021674 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021664:	4620      	mov	r0, r4
90021666:	f007 fe8b 	bl	90029380 <__cxa_guard_release>
9002166a:	4a05      	ldr	r2, [pc, #20]	; (90021680 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9002166c:	4905      	ldr	r1, [pc, #20]	; (90021684 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9002166e:	4806      	ldr	r0, [pc, #24]	; (90021688 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021670:	f007 fe73 	bl	9002935a <__aeabi_atexit>
90021674:	4b04      	ldr	r3, [pc, #16]	; (90021688 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021676:	67ab      	str	r3, [r5, #120]	; 0x78
90021678:	bd38      	pop	{r3, r4, r5, pc}
9002167a:	bf00      	nop
9002167c:	24039b60 	.word	0x24039b60
90021680:	24000000 	.word	0x24000000
90021684:	9001dcfb 	.word	0x9001dcfb
90021688:	24000088 	.word	0x24000088

9002168c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9002168c:	b538      	push	{r3, r4, r5, lr}
9002168e:	4c0b      	ldr	r4, [pc, #44]	; (900216bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021690:	4605      	mov	r5, r0
90021692:	7823      	ldrb	r3, [r4, #0]
90021694:	f3bf 8f5b 	dmb	ish
90021698:	07db      	lsls	r3, r3, #31
9002169a:	d40b      	bmi.n	900216b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9002169c:	4620      	mov	r0, r4
9002169e:	f007 fe63 	bl	90029368 <__cxa_guard_acquire>
900216a2:	b138      	cbz	r0, 900216b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900216a4:	4620      	mov	r0, r4
900216a6:	f007 fe6b 	bl	90029380 <__cxa_guard_release>
900216aa:	4a05      	ldr	r2, [pc, #20]	; (900216c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
900216ac:	4905      	ldr	r1, [pc, #20]	; (900216c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
900216ae:	4806      	ldr	r0, [pc, #24]	; (900216c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900216b0:	f007 fe53 	bl	9002935a <__aeabi_atexit>
900216b4:	4b04      	ldr	r3, [pc, #16]	; (900216c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900216b6:	67eb      	str	r3, [r5, #124]	; 0x7c
900216b8:	bd38      	pop	{r3, r4, r5, pc}
900216ba:	bf00      	nop
900216bc:	24039b64 	.word	0x24039b64
900216c0:	24000000 	.word	0x24000000
900216c4:	9001dcf9 	.word	0x9001dcf9
900216c8:	2400008c 	.word	0x2400008c

900216cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
900216cc:	b570      	push	{r4, r5, r6, lr}
900216ce:	4d0d      	ldr	r5, [pc, #52]	; (90021704 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
900216d0:	4606      	mov	r6, r0
900216d2:	4c0d      	ldr	r4, [pc, #52]	; (90021708 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
900216d4:	782b      	ldrb	r3, [r5, #0]
900216d6:	f3bf 8f5b 	dmb	ish
900216da:	f013 0f01 	tst.w	r3, #1
900216de:	d10d      	bne.n	900216fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900216e0:	4628      	mov	r0, r5
900216e2:	f007 fe41 	bl	90029368 <__cxa_guard_acquire>
900216e6:	b148      	cbz	r0, 900216fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900216e8:	4b08      	ldr	r3, [pc, #32]	; (9002170c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
900216ea:	4628      	mov	r0, r5
900216ec:	6023      	str	r3, [r4, #0]
900216ee:	f007 fe47 	bl	90029380 <__cxa_guard_release>
900216f2:	4a07      	ldr	r2, [pc, #28]	; (90021710 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
900216f4:	4620      	mov	r0, r4
900216f6:	4907      	ldr	r1, [pc, #28]	; (90021714 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
900216f8:	f007 fe2f 	bl	9002935a <__aeabi_atexit>
900216fc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
90021700:	bd70      	pop	{r4, r5, r6, pc}
90021702:	bf00      	nop
90021704:	24039b68 	.word	0x24039b68
90021708:	24039bdc 	.word	0x24039bdc
9002170c:	9002dc20 	.word	0x9002dc20
90021710:	24000000 	.word	0x24000000
90021714:	9001dcf7 	.word	0x9001dcf7

90021718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021718:	b510      	push	{r4, lr}
9002171a:	4604      	mov	r4, r0
9002171c:	f7ff ff96 	bl	9002164c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021720:	4620      	mov	r0, r4
90021722:	f7ff ffb3 	bl	9002168c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021726:	4620      	mov	r0, r4
90021728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002172c:	f7ff bfce 	b.w	900216cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021734:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
90021738:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9002173c:	2d00      	cmp	r5, #0
9002173e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
90021742:	fb05 4c0e 	mla	ip, r5, lr, r4
90021746:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9002174a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9002174e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
90021752:	eb02 0a0c 	add.w	sl, r2, ip
90021756:	8808      	ldrh	r0, [r1, #0]
90021758:	f2c0 80b0 	blt.w	900218bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9002175c:	45ab      	cmp	fp, r5
9002175e:	f340 80ad 	ble.w	900218bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021762:	2c00      	cmp	r4, #0
90021764:	f2c0 80a8 	blt.w	900218b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021768:	45a6      	cmp	lr, r4
9002176a:	f340 80a5 	ble.w	900218b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9002176e:	f812 200c 	ldrb.w	r2, [r2, ip]
90021772:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021776:	1c62      	adds	r2, r4, #1
90021778:	f100 80a3 	bmi.w	900218c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002177c:	4596      	cmp	lr, r2
9002177e:	f340 80a0 	ble.w	900218c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021782:	f1b9 0f00 	cmp.w	r9, #0
90021786:	f000 809c 	beq.w	900218c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002178a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002178e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021792:	3501      	adds	r5, #1
90021794:	f100 8099 	bmi.w	900218ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021798:	45ab      	cmp	fp, r5
9002179a:	f340 8096 	ble.w	900218ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002179e:	2f00      	cmp	r7, #0
900217a0:	f000 8093 	beq.w	900218ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900217a4:	2c00      	cmp	r4, #0
900217a6:	f2c0 808e 	blt.w	900218c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900217aa:	45a6      	cmp	lr, r4
900217ac:	f340 808b 	ble.w	900218c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900217b0:	f81a 200e 	ldrb.w	r2, [sl, lr]
900217b4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
900217b8:	3401      	adds	r4, #1
900217ba:	f100 8089 	bmi.w	900218d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900217be:	45a6      	cmp	lr, r4
900217c0:	f340 8086 	ble.w	900218d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900217c4:	f1b9 0f00 	cmp.w	r9, #0
900217c8:	f000 8082 	beq.w	900218d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900217cc:	44d6      	add	lr, sl
900217ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
900217d2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
900217d6:	ea4f 4408 	mov.w	r4, r8, lsl #16
900217da:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900217de:	fb19 fe07 	smulbb	lr, r9, r7
900217e2:	f1c7 0210 	rsb	r2, r7, #16
900217e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900217ea:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900217ee:	eba2 0209 	sub.w	r2, r2, r9
900217f2:	ea44 0808 	orr.w	r8, r4, r8
900217f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
900217fa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900217fe:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021802:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021806:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9002180a:	ea44 0c0c 	orr.w	ip, r4, ip
9002180e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021812:	fb04 f40c 	mul.w	r4, r4, ip
90021816:	fb02 4808 	mla	r8, r2, r8, r4
9002181a:	041a      	lsls	r2, r3, #16
9002181c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021820:	b2b4      	uxth	r4, r6
90021822:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021826:	43f6      	mvns	r6, r6
90021828:	4313      	orrs	r3, r2
9002182a:	042a      	lsls	r2, r5, #16
9002182c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021830:	b2f6      	uxtb	r6, r6
90021832:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021836:	fb0e 8303 	mla	r3, lr, r3, r8
9002183a:	432a      	orrs	r2, r5
9002183c:	fb07 3202 	mla	r2, r7, r2, r3
90021840:	10c7      	asrs	r7, r0, #3
90021842:	0d53      	lsrs	r3, r2, #21
90021844:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021848:	0952      	lsrs	r2, r2, #5
9002184a:	fb17 f706 	smulbb	r7, r7, r6
9002184e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021852:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021856:	431a      	orrs	r2, r3
90021858:	b293      	uxth	r3, r2
9002185a:	1202      	asrs	r2, r0, #8
9002185c:	121d      	asrs	r5, r3, #8
9002185e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021862:	00c0      	lsls	r0, r0, #3
90021864:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021868:	fb12 f206 	smulbb	r2, r2, r6
9002186c:	b2c0      	uxtb	r0, r0
9002186e:	fb05 2504 	mla	r5, r5, r4, r2
90021872:	10da      	asrs	r2, r3, #3
90021874:	fb10 f006 	smulbb	r0, r0, r6
90021878:	00db      	lsls	r3, r3, #3
9002187a:	b2ad      	uxth	r5, r5
9002187c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021880:	b2db      	uxtb	r3, r3
90021882:	fb02 7204 	mla	r2, r2, r4, r7
90021886:	fb03 0004 	mla	r0, r3, r4, r0
9002188a:	1c6b      	adds	r3, r5, #1
9002188c:	b292      	uxth	r2, r2
9002188e:	b280      	uxth	r0, r0
90021890:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021894:	1c43      	adds	r3, r0, #1
90021896:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002189a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002189e:	1c50      	adds	r0, r2, #1
900218a0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900218a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900218a8:	0952      	lsrs	r2, r2, #5
900218aa:	432b      	orrs	r3, r5
900218ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900218b0:	4313      	orrs	r3, r2
900218b2:	800b      	strh	r3, [r1, #0]
900218b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900218b8:	4680      	mov	r8, r0
900218ba:	e75c      	b.n	90021776 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
900218bc:	4684      	mov	ip, r0
900218be:	4680      	mov	r8, r0
900218c0:	e767      	b.n	90021792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900218c2:	4684      	mov	ip, r0
900218c4:	e765      	b.n	90021792 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900218c6:	4605      	mov	r5, r0
900218c8:	e776      	b.n	900217b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
900218ca:	4603      	mov	r3, r0
900218cc:	4605      	mov	r5, r0
900218ce:	e782      	b.n	900217d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
900218d0:	4603      	mov	r3, r0
900218d2:	e780      	b.n	900217d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

900218d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900218d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900218d8:	b099      	sub	sp, #100	; 0x64
900218da:	9215      	str	r2, [sp, #84]	; 0x54
900218dc:	9309      	str	r3, [sp, #36]	; 0x24
900218de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
900218e0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
900218e4:	9016      	str	r0, [sp, #88]	; 0x58
900218e6:	930d      	str	r3, [sp, #52]	; 0x34
900218e8:	6850      	ldr	r0, [r2, #4]
900218ea:	910c      	str	r1, [sp, #48]	; 0x30
900218ec:	6812      	ldr	r2, [r2, #0]
900218ee:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
900218f2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
900218f6:	fb00 1303 	mla	r3, r0, r3, r1
900218fa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900218fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021900:	681b      	ldr	r3, [r3, #0]
90021902:	930b      	str	r3, [sp, #44]	; 0x2c
90021904:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021906:	685e      	ldr	r6, [r3, #4]
90021908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002190a:	3604      	adds	r6, #4
9002190c:	43db      	mvns	r3, r3
9002190e:	b2db      	uxtb	r3, r3
90021910:	930a      	str	r3, [sp, #40]	; 0x28
90021912:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021914:	2b00      	cmp	r3, #0
90021916:	dc03      	bgt.n	90021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021918:	9b15      	ldr	r3, [sp, #84]	; 0x54
9002191a:	2b00      	cmp	r3, #0
9002191c:	f340 8225 	ble.w	90021d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021920:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021922:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021926:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002192a:	1e48      	subs	r0, r1, #1
9002192c:	1e57      	subs	r7, r2, #1
9002192e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021930:	2b00      	cmp	r3, #0
90021932:	f340 80e3 	ble.w	90021afc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021936:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9002193a:	ea4f 4325 	mov.w	r3, r5, asr #16
9002193e:	d406      	bmi.n	9002194e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021940:	4584      	cmp	ip, r0
90021942:	da04      	bge.n	9002194e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021944:	2b00      	cmp	r3, #0
90021946:	db02      	blt.n	9002194e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021948:	42bb      	cmp	r3, r7
9002194a:	f2c0 80d8 	blt.w	90021afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002194e:	f11c 0c01 	adds.w	ip, ip, #1
90021952:	f100 80c9 	bmi.w	90021ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021956:	4561      	cmp	r1, ip
90021958:	f2c0 80c6 	blt.w	90021ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9002195c:	3301      	adds	r3, #1
9002195e:	f100 80c3 	bmi.w	90021ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021962:	429a      	cmp	r2, r3
90021964:	f2c0 80c0 	blt.w	90021ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021968:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002196c:	4647      	mov	r7, r8
9002196e:	f1bb 0f00 	cmp.w	fp, #0
90021972:	f340 80e3 	ble.w	90021b3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90021976:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90021978:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002197c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002197e:	f3ca 3003 	ubfx	r0, sl, #12, #4
90021982:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021986:	ea5f 422a 	movs.w	r2, sl, asr #16
9002198a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002198e:	689b      	ldr	r3, [r3, #8]
90021990:	f100 8121 	bmi.w	90021bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021994:	f103 39ff 	add.w	r9, r3, #4294967295
90021998:	454a      	cmp	r2, r9
9002199a:	f280 811c 	bge.w	90021bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002199e:	f1bc 0f00 	cmp.w	ip, #0
900219a2:	f2c0 8118 	blt.w	90021bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900219a6:	f10e 39ff 	add.w	r9, lr, #4294967295
900219aa:	45cc      	cmp	ip, r9
900219ac:	f280 8113 	bge.w	90021bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
900219b0:	b21b      	sxth	r3, r3
900219b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900219b4:	fb0c 2203 	mla	r2, ip, r3, r2
900219b8:	eb04 0902 	add.w	r9, r4, r2
900219bc:	5ca2      	ldrb	r2, [r4, r2]
900219be:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
900219c2:	2800      	cmp	r0, #0
900219c4:	f000 80fe 	beq.w	90021bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
900219c8:	f899 2001 	ldrb.w	r2, [r9, #1]
900219cc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900219d0:	9211      	str	r2, [sp, #68]	; 0x44
900219d2:	b151      	cbz	r1, 900219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900219d4:	eb09 0203 	add.w	r2, r9, r3
900219d8:	f819 3003 	ldrb.w	r3, [r9, r3]
900219dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900219e0:	930f      	str	r3, [sp, #60]	; 0x3c
900219e2:	7853      	ldrb	r3, [r2, #1]
900219e4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900219e8:	9312      	str	r3, [sp, #72]	; 0x48
900219ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
900219ec:	fb10 f201 	smulbb	r2, r0, r1
900219f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
900219f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900219f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900219fa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900219fe:	10d2      	asrs	r2, r2, #3
90021a00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021a04:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021a08:	ea4c 0c03 	orr.w	ip, ip, r3
90021a0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90021a0e:	041b      	lsls	r3, r3, #16
90021a10:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021a14:	4323      	orrs	r3, r4
90021a16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021a18:	4353      	muls	r3, r2
90021a1a:	fb09 330c 	mla	r3, r9, ip, r3
90021a1e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021a22:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021a26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021a2a:	ea4c 0e0e 	orr.w	lr, ip, lr
90021a2e:	f1c1 0c10 	rsb	ip, r1, #16
90021a32:	ebac 0c00 	sub.w	ip, ip, r0
90021a36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021a3a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021a3e:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021a42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021a44:	0418      	lsls	r0, r3, #16
90021a46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021a4a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90021a4e:	4318      	orrs	r0, r3
90021a50:	fb02 c200 	mla	r2, r2, r0, ip
90021a54:	8838      	ldrh	r0, [r7, #0]
90021a56:	0d53      	lsrs	r3, r2, #21
90021a58:	0952      	lsrs	r2, r2, #5
90021a5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021a5e:	1201      	asrs	r1, r0, #8
90021a60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021a64:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021a68:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021a6c:	00c0      	lsls	r0, r0, #3
90021a6e:	431a      	orrs	r2, r3
90021a70:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90021a74:	fb11 f104 	smulbb	r1, r1, r4
90021a78:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90021a7c:	b292      	uxth	r2, r2
90021a7e:	fb1e fe04 	smulbb	lr, lr, r4
90021a82:	b2c0      	uxtb	r0, r0
90021a84:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021a88:	fb10 f004 	smulbb	r0, r0, r4
90021a8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90021a90:	fb0c 1c03 	mla	ip, ip, r3, r1
90021a94:	10d1      	asrs	r1, r2, #3
90021a96:	00d2      	lsls	r2, r2, #3
90021a98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021a9c:	fa1f fc8c 	uxth.w	ip, ip
90021aa0:	b2d2      	uxtb	r2, r2
90021aa2:	fb01 e103 	mla	r1, r1, r3, lr
90021aa6:	fb02 0303 	mla	r3, r2, r3, r0
90021aaa:	b289      	uxth	r1, r1
90021aac:	b29a      	uxth	r2, r3
90021aae:	f10c 0301 	add.w	r3, ip, #1
90021ab2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021ab6:	1c53      	adds	r3, r2, #1
90021ab8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021abc:	1c4a      	adds	r2, r1, #1
90021abe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90021ac2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021ac6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021aca:	0949      	lsrs	r1, r1, #5
90021acc:	ea43 030c 	orr.w	r3, r3, ip
90021ad0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021ad4:	430b      	orrs	r3, r1
90021ad6:	803b      	strh	r3, [r7, #0]
90021ad8:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021ada:	3702      	adds	r7, #2
90021adc:	f10b 3bff 	add.w	fp, fp, #4294967295
90021ae0:	449a      	add	sl, r3
90021ae2:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021ae4:	441d      	add	r5, r3
90021ae6:	e742      	b.n	9002196e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021ae8:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021aea:	f108 0802 	add.w	r8, r8, #2
90021aee:	449a      	add	sl, r3
90021af0:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021af2:	441d      	add	r5, r3
90021af4:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021af6:	3b01      	subs	r3, #1
90021af8:	9309      	str	r3, [sp, #36]	; 0x24
90021afa:	e718      	b.n	9002192e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021afc:	d023      	beq.n	90021b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021afe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021b00:	9825      	ldr	r0, [sp, #148]	; 0x94
90021b02:	3b01      	subs	r3, #1
90021b04:	fb00 a003 	mla	r0, r0, r3, sl
90021b08:	1400      	asrs	r0, r0, #16
90021b0a:	f53f af2d 	bmi.w	90021968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021b0e:	3901      	subs	r1, #1
90021b10:	4288      	cmp	r0, r1
90021b12:	f6bf af29 	bge.w	90021968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021b16:	9926      	ldr	r1, [sp, #152]	; 0x98
90021b18:	fb01 5303 	mla	r3, r1, r3, r5
90021b1c:	141b      	asrs	r3, r3, #16
90021b1e:	f53f af23 	bmi.w	90021968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021b22:	3a01      	subs	r2, #1
90021b24:	4293      	cmp	r3, r2
90021b26:	f6bf af1f 	bge.w	90021968 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021b2a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90021b2e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90021b32:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90021b36:	f1be 0f00 	cmp.w	lr, #0
90021b3a:	dc6c      	bgt.n	90021c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021b3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021b3e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021b42:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021b46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021b48:	2b00      	cmp	r3, #0
90021b4a:	f340 810e 	ble.w	90021d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021b4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021b52:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021b54:	ee30 0a04 	vadd.f32	s0, s0, s8
90021b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021b5c:	eef0 6a62 	vmov.f32	s13, s5
90021b60:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021b64:	ee31 1a05 	vadd.f32	s2, s2, s10
90021b68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021b6c:	ee16 aa90 	vmov	sl, s13
90021b70:	eef0 6a43 	vmov.f32	s13, s6
90021b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021b78:	ee16 5a90 	vmov	r5, s13
90021b7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021b80:	ee61 7a27 	vmul.f32	s15, s2, s15
90021b84:	ee77 2a62 	vsub.f32	s5, s14, s5
90021b88:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021b8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021b90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021b94:	ee12 2a90 	vmov	r2, s5
90021b98:	eef0 2a47 	vmov.f32	s5, s14
90021b9c:	fb92 f3f3 	sdiv	r3, r2, r3
90021ba0:	ee13 2a10 	vmov	r2, s6
90021ba4:	9325      	str	r3, [sp, #148]	; 0x94
90021ba6:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021ba8:	eeb0 3a67 	vmov.f32	s6, s15
90021bac:	fb92 f3f3 	sdiv	r3, r2, r3
90021bb0:	9326      	str	r3, [sp, #152]	; 0x98
90021bb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021bb4:	9a15      	ldr	r2, [sp, #84]	; 0x54
90021bb6:	3b01      	subs	r3, #1
90021bb8:	930c      	str	r3, [sp, #48]	; 0x30
90021bba:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021bbc:	bf08      	it	eq
90021bbe:	4613      	moveq	r3, r2
90021bc0:	9309      	str	r3, [sp, #36]	; 0x24
90021bc2:	e6a6      	b.n	90021912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021bc4:	2900      	cmp	r1, #0
90021bc6:	f43f af10 	beq.w	900219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021bca:	f819 3003 	ldrb.w	r3, [r9, r3]
90021bce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021bd2:	930f      	str	r3, [sp, #60]	; 0x3c
90021bd4:	e709      	b.n	900219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021bd6:	f112 0901 	adds.w	r9, r2, #1
90021bda:	f53f af7d 	bmi.w	90021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021bde:	454b      	cmp	r3, r9
90021be0:	f6ff af7a 	blt.w	90021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021be4:	f11c 0901 	adds.w	r9, ip, #1
90021be8:	f53f af76 	bmi.w	90021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021bec:	45ce      	cmp	lr, r9
90021bee:	f6ff af73 	blt.w	90021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021bf2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021bf4:	b21b      	sxth	r3, r3
90021bf6:	9202      	str	r2, [sp, #8]
90021bf8:	fa0f f28e 	sxth.w	r2, lr
90021bfc:	9300      	str	r3, [sp, #0]
90021bfe:	4633      	mov	r3, r6
90021c00:	9201      	str	r2, [sp, #4]
90021c02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021c04:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021c08:	e9cd c003 	strd	ip, r0, [sp, #12]
90021c0c:	4639      	mov	r1, r7
90021c0e:	9816      	ldr	r0, [sp, #88]	; 0x58
90021c10:	f7ff fd8e 	bl	90021730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90021c14:	e760      	b.n	90021ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021c16:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021c18:	ea4f 422a 	mov.w	r2, sl, asr #16
90021c1c:	1429      	asrs	r1, r5, #16
90021c1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021c20:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90021c24:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90021c28:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021c2c:	fb03 2101 	mla	r1, r3, r1, r2
90021c30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021c32:	440a      	add	r2, r1
90021c34:	5c61      	ldrb	r1, [r4, r1]
90021c36:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90021c3a:	f1bc 0f00 	cmp.w	ip, #0
90021c3e:	f000 808c 	beq.w	90021d5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90021c42:	7857      	ldrb	r7, [r2, #1]
90021c44:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90021c48:	9413      	str	r4, [sp, #76]	; 0x4c
90021c4a:	b140      	cbz	r0, 90021c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021c4c:	18d7      	adds	r7, r2, r3
90021c4e:	5cd3      	ldrb	r3, [r2, r3]
90021c50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021c54:	9310      	str	r3, [sp, #64]	; 0x40
90021c56:	787b      	ldrb	r3, [r7, #1]
90021c58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021c5c:	9314      	str	r3, [sp, #80]	; 0x50
90021c5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021c60:	fb1c f200 	smulbb	r2, ip, r0
90021c64:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021c66:	f10e 3eff 	add.w	lr, lr, #4294967295
90021c6a:	041f      	lsls	r7, r3, #16
90021c6c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021c70:	10d2      	asrs	r2, r2, #3
90021c72:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90021c76:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90021c7a:	431f      	orrs	r7, r3
90021c7c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021c80:	9317      	str	r3, [sp, #92]	; 0x5c
90021c82:	9b14      	ldr	r3, [sp, #80]	; 0x50
90021c84:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021c86:	041b      	lsls	r3, r3, #16
90021c88:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021c8c:	ea43 030b 	orr.w	r3, r3, fp
90021c90:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90021c94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021c98:	4353      	muls	r3, r2
90021c9a:	fb04 3707 	mla	r7, r4, r7, r3
90021c9e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90021ca2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021ca4:	ea43 0b01 	orr.w	fp, r3, r1
90021ca8:	f1c0 0110 	rsb	r1, r0, #16
90021cac:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021cae:	eba1 0c0c 	sub.w	ip, r1, ip
90021cb2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021cb6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021cba:	fb0c 770b 	mla	r7, ip, fp, r7
90021cbe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021cc2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90021cc6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021cca:	ea4c 0c0b 	orr.w	ip, ip, fp
90021cce:	fb02 770c 	mla	r7, r2, ip, r7
90021cd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90021cd4:	0d79      	lsrs	r1, r7, #21
90021cd6:	8812      	ldrh	r2, [r2, #0]
90021cd8:	097f      	lsrs	r7, r7, #5
90021cda:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021cde:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021ce2:	430f      	orrs	r7, r1
90021ce4:	1211      	asrs	r1, r2, #8
90021ce6:	b2bb      	uxth	r3, r7
90021ce8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021cec:	10d7      	asrs	r7, r2, #3
90021cee:	fb11 f104 	smulbb	r1, r1, r4
90021cf2:	1218      	asrs	r0, r3, #8
90021cf4:	00d2      	lsls	r2, r2, #3
90021cf6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021cfa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021cfe:	fb17 f704 	smulbb	r7, r7, r4
90021d02:	b2d2      	uxtb	r2, r2
90021d04:	fb00 1009 	mla	r0, r0, r9, r1
90021d08:	10d9      	asrs	r1, r3, #3
90021d0a:	fb12 f204 	smulbb	r2, r2, r4
90021d0e:	00db      	lsls	r3, r3, #3
90021d10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021d14:	b280      	uxth	r0, r0
90021d16:	b2db      	uxtb	r3, r3
90021d18:	fb01 7109 	mla	r1, r1, r9, r7
90021d1c:	fb03 2309 	mla	r3, r3, r9, r2
90021d20:	1c42      	adds	r2, r0, #1
90021d22:	b289      	uxth	r1, r1
90021d24:	b29b      	uxth	r3, r3
90021d26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021d2a:	1c4f      	adds	r7, r1, #1
90021d2c:	1c5a      	adds	r2, r3, #1
90021d2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021d32:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90021d36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90021d3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021d3c:	0949      	lsrs	r1, r1, #5
90021d3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021d42:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021d46:	4310      	orrs	r0, r2
90021d48:	4308      	orrs	r0, r1
90021d4a:	f823 0b02 	strh.w	r0, [r3], #2
90021d4e:	930e      	str	r3, [sp, #56]	; 0x38
90021d50:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021d52:	449a      	add	sl, r3
90021d54:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021d56:	441d      	add	r5, r3
90021d58:	e6ed      	b.n	90021b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90021d5a:	2800      	cmp	r0, #0
90021d5c:	f43f af7f 	beq.w	90021c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021d60:	5cd3      	ldrb	r3, [r2, r3]
90021d62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021d66:	9310      	str	r3, [sp, #64]	; 0x40
90021d68:	e779      	b.n	90021c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021d6a:	b019      	add	sp, #100	; 0x64
90021d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021d70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021d70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021d74:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90021d78:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021d7c:	f1b8 0f00 	cmp.w	r8, #0
90021d80:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90021d84:	fb08 470e 	mla	r7, r8, lr, r4
90021d88:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90021d8c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90021d90:	eb02 0907 	add.w	r9, r2, r7
90021d94:	8808      	ldrh	r0, [r1, #0]
90021d96:	db67      	blt.n	90021e68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021d98:	45c2      	cmp	sl, r8
90021d9a:	dd65      	ble.n	90021e68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021d9c:	2c00      	cmp	r4, #0
90021d9e:	db61      	blt.n	90021e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021da0:	45a6      	cmp	lr, r4
90021da2:	dd5f      	ble.n	90021e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021da4:	5dd2      	ldrb	r2, [r2, r7]
90021da6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021daa:	1c62      	adds	r2, r4, #1
90021dac:	d45f      	bmi.n	90021e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021dae:	4596      	cmp	lr, r2
90021db0:	dd5d      	ble.n	90021e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021db2:	2d00      	cmp	r5, #0
90021db4:	d05b      	beq.n	90021e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021db6:	f899 2001 	ldrb.w	r2, [r9, #1]
90021dba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021dbe:	f118 0801 	adds.w	r8, r8, #1
90021dc2:	d458      	bmi.n	90021e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021dc4:	45c2      	cmp	sl, r8
90021dc6:	dd56      	ble.n	90021e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021dc8:	2e00      	cmp	r6, #0
90021dca:	d054      	beq.n	90021e76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021dcc:	2c00      	cmp	r4, #0
90021dce:	db50      	blt.n	90021e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021dd0:	45a6      	cmp	lr, r4
90021dd2:	dd4e      	ble.n	90021e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021dd4:	f819 200e 	ldrb.w	r2, [r9, lr]
90021dd8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021ddc:	3401      	adds	r4, #1
90021dde:	d407      	bmi.n	90021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021de0:	45a6      	cmp	lr, r4
90021de2:	dd05      	ble.n	90021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021de4:	b125      	cbz	r5, 90021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021de6:	44ce      	add	lr, r9
90021de8:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021dec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021df0:	fb15 f406 	smulbb	r4, r5, r6
90021df4:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021df8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021dfc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90021e00:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021e04:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90021e08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021e0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021e10:	ea43 0c0c 	orr.w	ip, r3, ip
90021e14:	f1c6 0310 	rsb	r3, r6, #16
90021e18:	ea4e 0707 	orr.w	r7, lr, r7
90021e1c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90021e20:	1b5b      	subs	r3, r3, r5
90021e22:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90021e26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90021e2a:	437d      	muls	r5, r7
90021e2c:	fb03 5c0c 	mla	ip, r3, ip, r5
90021e30:	0403      	lsls	r3, r0, #16
90021e32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021e36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021e3a:	4318      	orrs	r0, r3
90021e3c:	0413      	lsls	r3, r2, #16
90021e3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021e42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021e46:	fb04 c000 	mla	r0, r4, r0, ip
90021e4a:	4313      	orrs	r3, r2
90021e4c:	fb06 0003 	mla	r0, r6, r3, r0
90021e50:	0d43      	lsrs	r3, r0, #21
90021e52:	0940      	lsrs	r0, r0, #5
90021e54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021e58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021e5c:	4318      	orrs	r0, r3
90021e5e:	8008      	strh	r0, [r1, #0]
90021e60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021e64:	4684      	mov	ip, r0
90021e66:	e7a0      	b.n	90021daa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90021e68:	4607      	mov	r7, r0
90021e6a:	4684      	mov	ip, r0
90021e6c:	e7a7      	b.n	90021dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021e6e:	4607      	mov	r7, r0
90021e70:	e7a5      	b.n	90021dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021e72:	4602      	mov	r2, r0
90021e74:	e7b2      	b.n	90021ddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90021e76:	4602      	mov	r2, r0
90021e78:	e7ba      	b.n	90021df0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90021e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021e7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021e7e:	b093      	sub	sp, #76	; 0x4c
90021e80:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90021e84:	920f      	str	r2, [sp, #60]	; 0x3c
90021e86:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021e88:	9010      	str	r0, [sp, #64]	; 0x40
90021e8a:	9108      	str	r1, [sp, #32]
90021e8c:	6850      	ldr	r0, [r2, #4]
90021e8e:	9306      	str	r3, [sp, #24]
90021e90:	6812      	ldr	r2, [r2, #0]
90021e92:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021e96:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90021e9a:	fb00 1303 	mla	r3, r0, r3, r1
90021e9e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90021ea2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021ea4:	681b      	ldr	r3, [r3, #0]
90021ea6:	9307      	str	r3, [sp, #28]
90021ea8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021eaa:	685f      	ldr	r7, [r3, #4]
90021eac:	3704      	adds	r7, #4
90021eae:	9b08      	ldr	r3, [sp, #32]
90021eb0:	2b00      	cmp	r3, #0
90021eb2:	dc03      	bgt.n	90021ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90021eb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021eb6:	2b00      	cmp	r3, #0
90021eb8:	f340 81b2 	ble.w	90022220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021ebc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021ebe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021ec2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021ec6:	1e48      	subs	r0, r1, #1
90021ec8:	f102 3cff 	add.w	ip, r2, #4294967295
90021ecc:	9b06      	ldr	r3, [sp, #24]
90021ece:	2b00      	cmp	r3, #0
90021ed0:	f340 80a9 	ble.w	90022026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021ed4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021ed8:	ea4f 4326 	mov.w	r3, r6, asr #16
90021edc:	d406      	bmi.n	90021eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021ede:	4586      	cmp	lr, r0
90021ee0:	da04      	bge.n	90021eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021ee2:	2b00      	cmp	r3, #0
90021ee4:	db02      	blt.n	90021eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021ee6:	4563      	cmp	r3, ip
90021ee8:	f2c0 809e 	blt.w	90022028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021eec:	f11e 0e01 	adds.w	lr, lr, #1
90021ef0:	f100 808f 	bmi.w	90022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021ef4:	4571      	cmp	r1, lr
90021ef6:	f2c0 808c 	blt.w	90022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021efa:	3301      	adds	r3, #1
90021efc:	f100 8089 	bmi.w	90022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021f00:	429a      	cmp	r2, r3
90021f02:	f2c0 8086 	blt.w	90022012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021f06:	f8dd b018 	ldr.w	fp, [sp, #24]
90021f0a:	46c8      	mov	r8, r9
90021f0c:	f1bb 0f00 	cmp.w	fp, #0
90021f10:	f340 80a6 	ble.w	90022060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90021f14:	9a24      	ldr	r2, [sp, #144]	; 0x90
90021f16:	ea4f 4c26 	mov.w	ip, r6, asr #16
90021f1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021f1c:	f3c4 3003 	ubfx	r0, r4, #12, #4
90021f20:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021f24:	1422      	asrs	r2, r4, #16
90021f26:	f3c6 3103 	ubfx	r1, r6, #12, #4
90021f2a:	689b      	ldr	r3, [r3, #8]
90021f2c:	f100 80e3 	bmi.w	900220f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021f30:	f103 3aff 	add.w	sl, r3, #4294967295
90021f34:	4552      	cmp	r2, sl
90021f36:	f280 80de 	bge.w	900220f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021f3a:	f1bc 0f00 	cmp.w	ip, #0
90021f3e:	f2c0 80da 	blt.w	900220f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021f42:	f10e 3aff 	add.w	sl, lr, #4294967295
90021f46:	45d4      	cmp	ip, sl
90021f48:	f280 80d5 	bge.w	900220f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90021f4c:	b21b      	sxth	r3, r3
90021f4e:	9d07      	ldr	r5, [sp, #28]
90021f50:	fb0c 2203 	mla	r2, ip, r3, r2
90021f54:	eb05 0a02 	add.w	sl, r5, r2
90021f58:	5caa      	ldrb	r2, [r5, r2]
90021f5a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90021f5e:	2800      	cmp	r0, #0
90021f60:	f000 80c0 	beq.w	900220e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90021f64:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021f68:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90021f6c:	920b      	str	r2, [sp, #44]	; 0x2c
90021f6e:	b151      	cbz	r1, 90021f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021f70:	eb0a 0203 	add.w	r2, sl, r3
90021f74:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021f78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021f7c:	9309      	str	r3, [sp, #36]	; 0x24
90021f7e:	7853      	ldrb	r3, [r2, #1]
90021f80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021f84:	930c      	str	r3, [sp, #48]	; 0x30
90021f86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021f88:	fb10 f201 	smulbb	r2, r0, r1
90021f8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90021f8e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021f92:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021f96:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021f9a:	10d2      	asrs	r2, r2, #3
90021f9c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021fa0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90021fa4:	ea4c 0c03 	orr.w	ip, ip, r3
90021fa8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021faa:	041b      	lsls	r3, r3, #16
90021fac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021fb0:	432b      	orrs	r3, r5
90021fb2:	4353      	muls	r3, r2
90021fb4:	fb0a 330c 	mla	r3, sl, ip, r3
90021fb8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021fbc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021fc0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021fc4:	ea4c 0e0e 	orr.w	lr, ip, lr
90021fc8:	f1c1 0c10 	rsb	ip, r1, #16
90021fcc:	ebac 0c00 	sub.w	ip, ip, r0
90021fd0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021fd4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021fd8:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021fdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021fde:	0418      	lsls	r0, r3, #16
90021fe0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021fe4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90021fe8:	4318      	orrs	r0, r3
90021fea:	fb02 c200 	mla	r2, r2, r0, ip
90021fee:	0d53      	lsrs	r3, r2, #21
90021ff0:	0952      	lsrs	r2, r2, #5
90021ff2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021ff6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021ffa:	431a      	orrs	r2, r3
90021ffc:	f8a8 2000 	strh.w	r2, [r8]
90022000:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022002:	f108 0802 	add.w	r8, r8, #2
90022006:	f10b 3bff 	add.w	fp, fp, #4294967295
9002200a:	441c      	add	r4, r3
9002200c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002200e:	441e      	add	r6, r3
90022010:	e77c      	b.n	90021f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022012:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022014:	f109 0902 	add.w	r9, r9, #2
90022018:	441c      	add	r4, r3
9002201a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002201c:	441e      	add	r6, r3
9002201e:	9b06      	ldr	r3, [sp, #24]
90022020:	3b01      	subs	r3, #1
90022022:	9306      	str	r3, [sp, #24]
90022024:	e752      	b.n	90021ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90022026:	d020      	beq.n	9002206a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90022028:	9b06      	ldr	r3, [sp, #24]
9002202a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002202c:	3b01      	subs	r3, #1
9002202e:	fb00 4003 	mla	r0, r0, r3, r4
90022032:	1400      	asrs	r0, r0, #16
90022034:	f53f af67 	bmi.w	90021f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022038:	3901      	subs	r1, #1
9002203a:	4288      	cmp	r0, r1
9002203c:	f6bf af63 	bge.w	90021f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022040:	9920      	ldr	r1, [sp, #128]	; 0x80
90022042:	fb01 6303 	mla	r3, r1, r3, r6
90022046:	141b      	asrs	r3, r3, #16
90022048:	f53f af5d 	bmi.w	90021f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002204c:	3a01      	subs	r2, #1
9002204e:	4293      	cmp	r3, r2
90022050:	f6bf af59 	bge.w	90021f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022054:	f8dd 8018 	ldr.w	r8, [sp, #24]
90022058:	46ca      	mov	sl, r9
9002205a:	f1b8 0f00 	cmp.w	r8, #0
9002205e:	dc67      	bgt.n	90022130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90022060:	9b06      	ldr	r3, [sp, #24]
90022062:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90022066:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002206a:	9b08      	ldr	r3, [sp, #32]
9002206c:	2b00      	cmp	r3, #0
9002206e:	f340 80d7 	ble.w	90022220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90022072:	ee30 0a04 	vadd.f32	s0, s0, s8
90022076:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022078:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002207c:	eeb0 6a62 	vmov.f32	s12, s5
90022080:	eec6 7a80 	vdiv.f32	s15, s13, s0
90022084:	ee31 1a05 	vadd.f32	s2, s2, s10
90022088:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002208c:	ee16 4a10 	vmov	r4, s12
90022090:	eeb0 6a43 	vmov.f32	s12, s6
90022094:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022098:	ee16 6a10 	vmov	r6, s12
9002209c:	ee20 7aa7 	vmul.f32	s14, s1, s15
900220a0:	ee61 7a27 	vmul.f32	s15, s2, s15
900220a4:	ee77 2a62 	vsub.f32	s5, s14, s5
900220a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900220ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900220b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900220b4:	ee12 2a90 	vmov	r2, s5
900220b8:	eef0 2a47 	vmov.f32	s5, s14
900220bc:	fb92 f3f3 	sdiv	r3, r2, r3
900220c0:	ee13 2a10 	vmov	r2, s6
900220c4:	931f      	str	r3, [sp, #124]	; 0x7c
900220c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900220c8:	eeb0 3a67 	vmov.f32	s6, s15
900220cc:	fb92 f3f3 	sdiv	r3, r2, r3
900220d0:	9320      	str	r3, [sp, #128]	; 0x80
900220d2:	9b08      	ldr	r3, [sp, #32]
900220d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900220d6:	3b01      	subs	r3, #1
900220d8:	9308      	str	r3, [sp, #32]
900220da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900220dc:	bf08      	it	eq
900220de:	4613      	moveq	r3, r2
900220e0:	9306      	str	r3, [sp, #24]
900220e2:	e6e4      	b.n	90021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900220e4:	2900      	cmp	r1, #0
900220e6:	f43f af4e 	beq.w	90021f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900220ea:	f81a 3003 	ldrb.w	r3, [sl, r3]
900220ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900220f2:	9309      	str	r3, [sp, #36]	; 0x24
900220f4:	e747      	b.n	90021f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900220f6:	f112 0a01 	adds.w	sl, r2, #1
900220fa:	d481      	bmi.n	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900220fc:	4553      	cmp	r3, sl
900220fe:	f6ff af7f 	blt.w	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022102:	f11c 0a01 	adds.w	sl, ip, #1
90022106:	f53f af7b 	bmi.w	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002210a:	45d6      	cmp	lr, sl
9002210c:	f6ff af78 	blt.w	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022110:	b21b      	sxth	r3, r3
90022112:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90022116:	fa0f f28e 	sxth.w	r2, lr
9002211a:	9300      	str	r3, [sp, #0]
9002211c:	463b      	mov	r3, r7
9002211e:	9201      	str	r2, [sp, #4]
90022120:	9a07      	ldr	r2, [sp, #28]
90022122:	e9cd 0104 	strd	r0, r1, [sp, #16]
90022126:	4641      	mov	r1, r8
90022128:	9810      	ldr	r0, [sp, #64]	; 0x40
9002212a:	f7ff fe21 	bl	90021d70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002212e:	e767      	b.n	90022000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022130:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022132:	1422      	asrs	r2, r4, #16
90022134:	1431      	asrs	r1, r6, #16
90022136:	9d07      	ldr	r5, [sp, #28]
90022138:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002213c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90022140:	f3c6 3003 	ubfx	r0, r6, #12, #4
90022144:	fb03 2101 	mla	r1, r3, r1, r2
90022148:	9a07      	ldr	r2, [sp, #28]
9002214a:	440a      	add	r2, r1
9002214c:	5c69      	ldrb	r1, [r5, r1]
9002214e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90022152:	f1be 0f00 	cmp.w	lr, #0
90022156:	d05c      	beq.n	90022212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90022158:	f892 c001 	ldrb.w	ip, [r2, #1]
9002215c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90022160:	950d      	str	r5, [sp, #52]	; 0x34
90022162:	b150      	cbz	r0, 9002217a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022164:	eb02 0c03 	add.w	ip, r2, r3
90022168:	5cd3      	ldrb	r3, [r2, r3]
9002216a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002216e:	930a      	str	r3, [sp, #40]	; 0x28
90022170:	f89c 3001 	ldrb.w	r3, [ip, #1]
90022174:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022178:	930e      	str	r3, [sp, #56]	; 0x38
9002217a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002217c:	fb1e f200 	smulbb	r2, lr, r0
90022180:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90022182:	f108 38ff 	add.w	r8, r8, #4294967295
90022186:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002218a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002218e:	10d2      	asrs	r2, r2, #3
90022190:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90022194:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022198:	ea4c 0c03 	orr.w	ip, ip, r3
9002219c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900221a0:	9311      	str	r3, [sp, #68]	; 0x44
900221a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900221a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
900221a6:	041b      	lsls	r3, r3, #16
900221a8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900221ac:	ea43 030b 	orr.w	r3, r3, fp
900221b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900221b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900221b8:	4353      	muls	r3, r2
900221ba:	fb05 3c0c 	mla	ip, r5, ip, r3
900221be:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
900221c2:	ea43 0b01 	orr.w	fp, r3, r1
900221c6:	f1c0 0110 	rsb	r1, r0, #16
900221ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900221cc:	eba1 0e0e 	sub.w	lr, r1, lr
900221d0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900221d4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900221d8:	fb0e cc0b 	mla	ip, lr, fp, ip
900221dc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900221e0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
900221e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900221e8:	ea4b 0e0e 	orr.w	lr, fp, lr
900221ec:	fb02 cc0e 	mla	ip, r2, lr, ip
900221f0:	ea4f 535c 	mov.w	r3, ip, lsr #21
900221f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900221f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900221fc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022200:	ea43 0c0c 	orr.w	ip, r3, ip
90022204:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022206:	441c      	add	r4, r3
90022208:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002220a:	f82a cb02 	strh.w	ip, [sl], #2
9002220e:	441e      	add	r6, r3
90022210:	e723      	b.n	9002205a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022212:	2800      	cmp	r0, #0
90022214:	d0b1      	beq.n	9002217a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022216:	5cd3      	ldrb	r3, [r2, r3]
90022218:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002221c:	930a      	str	r3, [sp, #40]	; 0x28
9002221e:	e7ac      	b.n	9002217a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022220:	b013      	add	sp, #76	; 0x4c
90022222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90022226:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002222a:	880d      	ldrh	r5, [r1, #0]
9002222c:	b087      	sub	sp, #28
9002222e:	10ef      	asrs	r7, r5, #3
90022230:	9103      	str	r1, [sp, #12]
90022232:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022236:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9002223a:	00ed      	lsls	r5, r5, #3
9002223c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022240:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90022244:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90022248:	b2ed      	uxtb	r5, r5
9002224a:	9701      	str	r7, [sp, #4]
9002224c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
90022250:	9502      	str	r5, [sp, #8]
90022252:	9d01      	ldr	r5, [sp, #4]
90022254:	9902      	ldr	r1, [sp, #8]
90022256:	022d      	lsls	r5, r5, #8
90022258:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9002225c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
90022260:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90022264:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90022268:	430d      	orrs	r5, r1
9002226a:	fb06 0709 	mla	r7, r6, r9, r0
9002226e:	2e00      	cmp	r6, #0
90022270:	9505      	str	r5, [sp, #20]
90022272:	eb02 0c07 	add.w	ip, r2, r7
90022276:	f2c0 80b6 	blt.w	900223e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9002227a:	45b3      	cmp	fp, r6
9002227c:	f340 80b3 	ble.w	900223e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022280:	2800      	cmp	r0, #0
90022282:	f2c0 80ae 	blt.w	900223e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022286:	4581      	cmp	r9, r0
90022288:	f340 80ab 	ble.w	900223e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002228c:	5dd7      	ldrb	r7, [r2, r7]
9002228e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022292:	441f      	add	r7, r3
90022294:	1c42      	adds	r2, r0, #1
90022296:	f100 80a9 	bmi.w	900223ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002229a:	4591      	cmp	r9, r2
9002229c:	f340 80a6 	ble.w	900223ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900222a0:	2c00      	cmp	r4, #0
900222a2:	f000 80a3 	beq.w	900223ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900222a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
900222aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900222ae:	441d      	add	r5, r3
900222b0:	3601      	adds	r6, #1
900222b2:	f100 809f 	bmi.w	900223f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900222b6:	45b3      	cmp	fp, r6
900222b8:	f340 809c 	ble.w	900223f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900222bc:	f1be 0f00 	cmp.w	lr, #0
900222c0:	f000 8098 	beq.w	900223f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900222c4:	2800      	cmp	r0, #0
900222c6:	f2c0 8093 	blt.w	900223f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900222ca:	4581      	cmp	r9, r0
900222cc:	f340 8090 	ble.w	900223f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900222d0:	f81c 6009 	ldrb.w	r6, [ip, r9]
900222d4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900222d8:	441e      	add	r6, r3
900222da:	3001      	adds	r0, #1
900222dc:	f100 808d 	bmi.w	900223fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900222e0:	4581      	cmp	r9, r0
900222e2:	f340 808a 	ble.w	900223fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900222e6:	2c00      	cmp	r4, #0
900222e8:	f000 8087 	beq.w	900223fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900222ec:	44e1      	add	r9, ip
900222ee:	f899 2001 	ldrb.w	r2, [r9, #1]
900222f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900222f6:	4413      	add	r3, r2
900222f8:	b2a4      	uxth	r4, r4
900222fa:	f897 c002 	ldrb.w	ip, [r7, #2]
900222fe:	fa1f fe8e 	uxth.w	lr, lr
90022302:	9901      	ldr	r1, [sp, #4]
90022304:	fb04 fb0e 	mul.w	fp, r4, lr
90022308:	0124      	lsls	r4, r4, #4
9002230a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002230e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90022312:	eba4 040b 	sub.w	r4, r4, fp
90022316:	fa1f f08e 	uxth.w	r0, lr
9002231a:	b2a2      	uxth	r2, r4
9002231c:	78ac      	ldrb	r4, [r5, #2]
9002231e:	eba9 0900 	sub.w	r9, r9, r0
90022322:	fa1f fe88 	uxth.w	lr, r8
90022326:	4354      	muls	r4, r2
90022328:	ea6f 0808 	mvn.w	r8, r8
9002232c:	fa1f f989 	uxth.w	r9, r9
90022330:	fa5f f888 	uxtb.w	r8, r8
90022334:	fb09 440c 	mla	r4, r9, ip, r4
90022338:	f896 c002 	ldrb.w	ip, [r6, #2]
9002233c:	fb1a fa08 	smulbb	sl, sl, r8
90022340:	fb00 440c 	mla	r4, r0, ip, r4
90022344:	f893 c002 	ldrb.w	ip, [r3, #2]
90022348:	fb0b 4c0c 	mla	ip, fp, ip, r4
9002234c:	787c      	ldrb	r4, [r7, #1]
9002234e:	783f      	ldrb	r7, [r7, #0]
90022350:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022354:	fb0c ac0e 	mla	ip, ip, lr, sl
90022358:	f895 a001 	ldrb.w	sl, [r5, #1]
9002235c:	782d      	ldrb	r5, [r5, #0]
9002235e:	fb02 fa0a 	mul.w	sl, r2, sl
90022362:	fa1f fc8c 	uxth.w	ip, ip
90022366:	436a      	muls	r2, r5
90022368:	7835      	ldrb	r5, [r6, #0]
9002236a:	fb09 aa04 	mla	sl, r9, r4, sl
9002236e:	7874      	ldrb	r4, [r6, #1]
90022370:	fb09 2207 	mla	r2, r9, r7, r2
90022374:	fb00 aa04 	mla	sl, r0, r4, sl
90022378:	785c      	ldrb	r4, [r3, #1]
9002237a:	fb00 2005 	mla	r0, r0, r5, r2
9002237e:	781b      	ldrb	r3, [r3, #0]
90022380:	fb0b a404 	mla	r4, fp, r4, sl
90022384:	fb11 fa08 	smulbb	sl, r1, r8
90022388:	fb0b 0b03 	mla	fp, fp, r3, r0
9002238c:	9b02      	ldr	r3, [sp, #8]
9002238e:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022392:	fb13 f808 	smulbb	r8, r3, r8
90022396:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002239a:	fb04 a40e 	mla	r4, r4, lr, sl
9002239e:	f10c 0301 	add.w	r3, ip, #1
900223a2:	fb0b 8e0e 	mla	lr, fp, lr, r8
900223a6:	b2a4      	uxth	r4, r4
900223a8:	fa1f fe8e 	uxth.w	lr, lr
900223ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900223b0:	f104 0a01 	add.w	sl, r4, #1
900223b4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
900223b8:	f10e 0c01 	add.w	ip, lr, #1
900223bc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900223c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900223c4:	0964      	lsrs	r4, r4, #5
900223c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900223ca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900223ce:	ea4c 0c03 	orr.w	ip, ip, r3
900223d2:	9b03      	ldr	r3, [sp, #12]
900223d4:	ea4c 0c04 	orr.w	ip, ip, r4
900223d8:	f8a3 c000 	strh.w	ip, [r3]
900223dc:	b007      	add	sp, #28
900223de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900223e2:	af05      	add	r7, sp, #20
900223e4:	e756      	b.n	90022294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900223e6:	ad05      	add	r5, sp, #20
900223e8:	462f      	mov	r7, r5
900223ea:	e761      	b.n	900222b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900223ec:	ad05      	add	r5, sp, #20
900223ee:	e75f      	b.n	900222b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900223f0:	ae05      	add	r6, sp, #20
900223f2:	e772      	b.n	900222da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900223f4:	ab05      	add	r3, sp, #20
900223f6:	461e      	mov	r6, r3
900223f8:	e77e      	b.n	900222f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900223fa:	ab05      	add	r3, sp, #20
900223fc:	e77c      	b.n	900222f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900223fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900223fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022402:	b095      	sub	sp, #84	; 0x54
90022404:	9212      	str	r2, [sp, #72]	; 0x48
90022406:	9309      	str	r3, [sp, #36]	; 0x24
90022408:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002240a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9002240e:	9013      	str	r0, [sp, #76]	; 0x4c
90022410:	930f      	str	r3, [sp, #60]	; 0x3c
90022412:	6850      	ldr	r0, [r2, #4]
90022414:	910e      	str	r1, [sp, #56]	; 0x38
90022416:	6812      	ldr	r2, [r2, #0]
90022418:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9002241c:	fb00 1303 	mla	r3, r0, r3, r1
90022420:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022424:	930a      	str	r3, [sp, #40]	; 0x28
90022426:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022428:	681b      	ldr	r3, [r3, #0]
9002242a:	930d      	str	r3, [sp, #52]	; 0x34
9002242c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002242e:	685c      	ldr	r4, [r3, #4]
90022430:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022432:	3404      	adds	r4, #4
90022434:	43db      	mvns	r3, r3
90022436:	b2db      	uxtb	r3, r3
90022438:	930b      	str	r3, [sp, #44]	; 0x2c
9002243a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002243c:	2b00      	cmp	r3, #0
9002243e:	dc03      	bgt.n	90022448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022440:	9b12      	ldr	r3, [sp, #72]	; 0x48
90022442:	2b00      	cmp	r3, #0
90022444:	f340 8255 	ble.w	900228f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022448:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002244a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002244e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022452:	1e48      	subs	r0, r1, #1
90022454:	1e55      	subs	r5, r2, #1
90022456:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022458:	2b00      	cmp	r3, #0
9002245a:	f340 80f9 	ble.w	90022650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9002245e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90022460:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022462:	1436      	asrs	r6, r6, #16
90022464:	ea4f 4323 	mov.w	r3, r3, asr #16
90022468:	d406      	bmi.n	90022478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002246a:	4286      	cmp	r6, r0
9002246c:	da04      	bge.n	90022478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002246e:	2b00      	cmp	r3, #0
90022470:	db02      	blt.n	90022478 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022472:	42ab      	cmp	r3, r5
90022474:	f2c0 80ed 	blt.w	90022652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022478:	3601      	adds	r6, #1
9002247a:	f100 80da 	bmi.w	90022632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002247e:	42b1      	cmp	r1, r6
90022480:	f2c0 80d7 	blt.w	90022632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022484:	3301      	adds	r3, #1
90022486:	f100 80d4 	bmi.w	90022632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002248a:	429a      	cmp	r2, r3
9002248c:	f2c0 80d1 	blt.w	90022632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022490:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022492:	9311      	str	r3, [sp, #68]	; 0x44
90022494:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022496:	930c      	str	r3, [sp, #48]	; 0x30
90022498:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002249a:	2b00      	cmp	r3, #0
9002249c:	f340 80fa 	ble.w	90022694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900224a0:	9826      	ldr	r0, [sp, #152]	; 0x98
900224a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
900224a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
900224a6:	68c6      	ldr	r6, [r0, #12]
900224a8:	141d      	asrs	r5, r3, #16
900224aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
900224ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
900224b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900224b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
900224b4:	1400      	asrs	r0, r0, #16
900224b6:	f3c3 3303 	ubfx	r3, r3, #12, #4
900224ba:	6892      	ldr	r2, [r2, #8]
900224bc:	f100 813e 	bmi.w	9002273c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900224c0:	1e57      	subs	r7, r2, #1
900224c2:	42b8      	cmp	r0, r7
900224c4:	f280 813a 	bge.w	9002273c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900224c8:	2d00      	cmp	r5, #0
900224ca:	f2c0 8137 	blt.w	9002273c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900224ce:	1e77      	subs	r7, r6, #1
900224d0:	42bd      	cmp	r5, r7
900224d2:	f280 8133 	bge.w	9002273c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900224d6:	b212      	sxth	r2, r2
900224d8:	fb05 0002 	mla	r0, r5, r2, r0
900224dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900224de:	f815 a000 	ldrb.w	sl, [r5, r0]
900224e2:	182e      	adds	r6, r5, r0
900224e4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900224e8:	eb04 050a 	add.w	r5, r4, sl
900224ec:	2b00      	cmp	r3, #0
900224ee:	f000 8117 	beq.w	90022720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900224f2:	f896 c001 	ldrb.w	ip, [r6, #1]
900224f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900224fa:	44a4      	add	ip, r4
900224fc:	2900      	cmp	r1, #0
900224fe:	f000 8117 	beq.w	90022730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022502:	18b0      	adds	r0, r6, r2
90022504:	5cb2      	ldrb	r2, [r6, r2]
90022506:	7840      	ldrb	r0, [r0, #1]
90022508:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002250c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022510:	4422      	add	r2, r4
90022512:	4420      	add	r0, r4
90022514:	b29b      	uxth	r3, r3
90022516:	f89c 7002 	ldrb.w	r7, [ip, #2]
9002251a:	b289      	uxth	r1, r1
9002251c:	f895 b002 	ldrb.w	fp, [r5, #2]
90022520:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90022522:	fb03 f901 	mul.w	r9, r3, r1
90022526:	011b      	lsls	r3, r3, #4
90022528:	f8b6 e000 	ldrh.w	lr, [r6]
9002252c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022530:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90022534:	eba3 0309 	sub.w	r3, r3, r9
90022538:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9002253c:	b289      	uxth	r1, r1
9002253e:	f814 a00a 	ldrb.w	sl, [r4, sl]
90022542:	b29b      	uxth	r3, r3
90022544:	eba8 0801 	sub.w	r8, r8, r1
90022548:	435f      	muls	r7, r3
9002254a:	fa1f f888 	uxth.w	r8, r8
9002254e:	9310      	str	r3, [sp, #64]	; 0x40
90022550:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022552:	fb08 770b 	mla	r7, r8, fp, r7
90022556:	f892 b002 	ldrb.w	fp, [r2, #2]
9002255a:	fb01 770b 	mla	r7, r1, fp, r7
9002255e:	f890 b002 	ldrb.w	fp, [r0, #2]
90022562:	fb09 770b 	mla	r7, r9, fp, r7
90022566:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9002256a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002256e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022572:	fb1b fb03 	smulbb	fp, fp, r3
90022576:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022578:	fb07 b706 	mla	r7, r7, r6, fp
9002257c:	f895 b001 	ldrb.w	fp, [r5, #1]
90022580:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022584:	f89c c000 	ldrb.w	ip, [ip]
90022588:	b2bf      	uxth	r7, r7
9002258a:	435d      	muls	r5, r3
9002258c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002258e:	fb08 550b 	mla	r5, r8, fp, r5
90022592:	f892 b001 	ldrb.w	fp, [r2, #1]
90022596:	fb01 550b 	mla	r5, r1, fp, r5
9002259a:	f890 b001 	ldrb.w	fp, [r0, #1]
9002259e:	fb09 550b 	mla	r5, r9, fp, r5
900225a2:	ea4f 0bee 	mov.w	fp, lr, asr #3
900225a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900225aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
900225ae:	f3c5 2507 	ubfx	r5, r5, #8, #8
900225b2:	fa5f fe8e 	uxtb.w	lr, lr
900225b6:	fb1b fb03 	smulbb	fp, fp, r3
900225ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
900225bc:	fb03 f30c 	mul.w	r3, r3, ip
900225c0:	f892 c000 	ldrb.w	ip, [r2]
900225c4:	fb05 b506 	mla	r5, r5, r6, fp
900225c8:	fb08 330a 	mla	r3, r8, sl, r3
900225cc:	b2ad      	uxth	r5, r5
900225ce:	fb01 330c 	mla	r3, r1, ip, r3
900225d2:	f890 c000 	ldrb.w	ip, [r0]
900225d6:	f105 0b01 	add.w	fp, r5, #1
900225da:	fb09 3c0c 	mla	ip, r9, ip, r3
900225de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900225e0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900225e4:	fb1e fe03 	smulbb	lr, lr, r3
900225e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900225ec:	1c7b      	adds	r3, r7, #1
900225ee:	096d      	lsrs	r5, r5, #5
900225f0:	fb0c e606 	mla	r6, ip, r6, lr
900225f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900225f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900225fc:	b2b6      	uxth	r6, r6
900225fe:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90022602:	1c77      	adds	r7, r6, #1
90022604:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022608:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002260c:	431f      	orrs	r7, r3
9002260e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022610:	433d      	orrs	r5, r7
90022612:	801d      	strh	r5, [r3, #0]
90022614:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022616:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022618:	3302      	adds	r3, #2
9002261a:	930c      	str	r3, [sp, #48]	; 0x30
9002261c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002261e:	4413      	add	r3, r2
90022620:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022622:	931f      	str	r3, [sp, #124]	; 0x7c
90022624:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022626:	4413      	add	r3, r2
90022628:	9320      	str	r3, [sp, #128]	; 0x80
9002262a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002262c:	3b01      	subs	r3, #1
9002262e:	9311      	str	r3, [sp, #68]	; 0x44
90022630:	e732      	b.n	90022498 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022632:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022634:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022636:	4433      	add	r3, r6
90022638:	9e22      	ldr	r6, [sp, #136]	; 0x88
9002263a:	931f      	str	r3, [sp, #124]	; 0x7c
9002263c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002263e:	4433      	add	r3, r6
90022640:	9320      	str	r3, [sp, #128]	; 0x80
90022642:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022644:	3b01      	subs	r3, #1
90022646:	9309      	str	r3, [sp, #36]	; 0x24
90022648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002264a:	3302      	adds	r3, #2
9002264c:	930a      	str	r3, [sp, #40]	; 0x28
9002264e:	e702      	b.n	90022456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022650:	d027      	beq.n	900226a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022652:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022654:	9821      	ldr	r0, [sp, #132]	; 0x84
90022656:	3b01      	subs	r3, #1
90022658:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9002265a:	fb00 5003 	mla	r0, r0, r3, r5
9002265e:	1400      	asrs	r0, r0, #16
90022660:	f53f af16 	bmi.w	90022490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022664:	3901      	subs	r1, #1
90022666:	4288      	cmp	r0, r1
90022668:	f6bf af12 	bge.w	90022490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002266c:	9922      	ldr	r1, [sp, #136]	; 0x88
9002266e:	9820      	ldr	r0, [sp, #128]	; 0x80
90022670:	fb01 0303 	mla	r3, r1, r3, r0
90022674:	141b      	asrs	r3, r3, #16
90022676:	f53f af0b 	bmi.w	90022490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002267a:	3a01      	subs	r2, #1
9002267c:	4293      	cmp	r3, r2
9002267e:	f6bf af07 	bge.w	90022490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022682:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022684:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90022688:	9311      	str	r3, [sp, #68]	; 0x44
9002268a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002268c:	930c      	str	r3, [sp, #48]	; 0x30
9002268e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022690:	2b00      	cmp	r3, #0
90022692:	dc70      	bgt.n	90022776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022694:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022696:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022698:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002269c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900226a0:	930a      	str	r3, [sp, #40]	; 0x28
900226a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900226a4:	2b00      	cmp	r3, #0
900226a6:	f340 8124 	ble.w	900228f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900226aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900226ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900226b0:	ee30 0a04 	vadd.f32	s0, s0, s8
900226b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900226b8:	eef0 6a62 	vmov.f32	s13, s5
900226bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900226c0:	ee31 1a05 	vadd.f32	s2, s2, s10
900226c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900226c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900226cc:	eef0 6a43 	vmov.f32	s13, s6
900226d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900226d4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
900226d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900226dc:	ee61 7a27 	vmul.f32	s15, s2, s15
900226e0:	ee77 2a62 	vsub.f32	s5, s14, s5
900226e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900226e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900226ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900226f0:	ee12 2a90 	vmov	r2, s5
900226f4:	eef0 2a47 	vmov.f32	s5, s14
900226f8:	fb92 f3f3 	sdiv	r3, r2, r3
900226fc:	ee13 2a10 	vmov	r2, s6
90022700:	9321      	str	r3, [sp, #132]	; 0x84
90022702:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022704:	eeb0 3a67 	vmov.f32	s6, s15
90022708:	fb92 f3f3 	sdiv	r3, r2, r3
9002270c:	9322      	str	r3, [sp, #136]	; 0x88
9002270e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022710:	9a12      	ldr	r2, [sp, #72]	; 0x48
90022712:	3b01      	subs	r3, #1
90022714:	930e      	str	r3, [sp, #56]	; 0x38
90022716:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022718:	bf08      	it	eq
9002271a:	4613      	moveq	r3, r2
9002271c:	9309      	str	r3, [sp, #36]	; 0x24
9002271e:	e68c      	b.n	9002243a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022720:	b149      	cbz	r1, 90022736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022722:	5cb2      	ldrb	r2, [r6, r2]
90022724:	4628      	mov	r0, r5
90022726:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002272a:	4422      	add	r2, r4
9002272c:	46ac      	mov	ip, r5
9002272e:	e6f1      	b.n	90022514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022730:	4628      	mov	r0, r5
90022732:	462a      	mov	r2, r5
90022734:	e6ee      	b.n	90022514 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022736:	4628      	mov	r0, r5
90022738:	462a      	mov	r2, r5
9002273a:	e7f7      	b.n	9002272c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9002273c:	1c47      	adds	r7, r0, #1
9002273e:	f53f af69 	bmi.w	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022742:	42ba      	cmp	r2, r7
90022744:	f6ff af66 	blt.w	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022748:	1c6f      	adds	r7, r5, #1
9002274a:	f53f af63 	bmi.w	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002274e:	42be      	cmp	r6, r7
90022750:	f6ff af60 	blt.w	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022754:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90022756:	b236      	sxth	r6, r6
90022758:	b212      	sxth	r2, r2
9002275a:	9002      	str	r0, [sp, #8]
9002275c:	9601      	str	r6, [sp, #4]
9002275e:	9200      	str	r2, [sp, #0]
90022760:	9813      	ldr	r0, [sp, #76]	; 0x4c
90022762:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022766:	e9cd 5303 	strd	r5, r3, [sp, #12]
9002276a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9002276e:	4623      	mov	r3, r4
90022770:	f7ff fd59 	bl	90022226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022774:	e74e      	b.n	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022776:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022778:	9820      	ldr	r0, [sp, #128]	; 0x80
9002277a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002277e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90022780:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022782:	1400      	asrs	r0, r0, #16
90022784:	142d      	asrs	r5, r5, #16
90022786:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022788:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9002278c:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022790:	fb02 5000 	mla	r0, r2, r0, r5
90022794:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90022796:	f815 9000 	ldrb.w	r9, [r5, r0]
9002279a:	182e      	adds	r6, r5, r0
9002279c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
900227a0:	eb04 0509 	add.w	r5, r4, r9
900227a4:	2b00      	cmp	r3, #0
900227a6:	f000 8096 	beq.w	900228d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
900227aa:	7877      	ldrb	r7, [r6, #1]
900227ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900227b0:	4427      	add	r7, r4
900227b2:	2900      	cmp	r1, #0
900227b4:	f000 8097 	beq.w	900228e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
900227b8:	18b0      	adds	r0, r6, r2
900227ba:	5cb2      	ldrb	r2, [r6, r2]
900227bc:	7840      	ldrb	r0, [r0, #1]
900227be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900227c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900227c6:	4422      	add	r2, r4
900227c8:	4420      	add	r0, r4
900227ca:	b29b      	uxth	r3, r3
900227cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900227ce:	b289      	uxth	r1, r1
900227d0:	f895 b002 	ldrb.w	fp, [r5, #2]
900227d4:	f8b6 c000 	ldrh.w	ip, [r6]
900227d8:	fb03 f801 	mul.w	r8, r3, r1
900227dc:	011b      	lsls	r3, r3, #4
900227de:	78be      	ldrb	r6, [r7, #2]
900227e0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
900227e4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
900227e8:	eba3 0308 	sub.w	r3, r3, r8
900227ec:	f814 9009 	ldrb.w	r9, [r4, r9]
900227f0:	b289      	uxth	r1, r1
900227f2:	b29b      	uxth	r3, r3
900227f4:	ebae 0e01 	sub.w	lr, lr, r1
900227f8:	435e      	muls	r6, r3
900227fa:	fa1f fe8e 	uxth.w	lr, lr
900227fe:	9310      	str	r3, [sp, #64]	; 0x40
90022800:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022802:	fb0e 660b 	mla	r6, lr, fp, r6
90022806:	f892 b002 	ldrb.w	fp, [r2, #2]
9002280a:	fb01 660b 	mla	r6, r1, fp, r6
9002280e:	f890 b002 	ldrb.w	fp, [r0, #2]
90022812:	fb08 660b 	mla	r6, r8, fp, r6
90022816:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9002281a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002281e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022822:	fb1b fb03 	smulbb	fp, fp, r3
90022826:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022828:	fb06 b60a 	mla	r6, r6, sl, fp
9002282c:	f895 b001 	ldrb.w	fp, [r5, #1]
90022830:	787d      	ldrb	r5, [r7, #1]
90022832:	783f      	ldrb	r7, [r7, #0]
90022834:	b2b6      	uxth	r6, r6
90022836:	435d      	muls	r5, r3
90022838:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002283a:	fb0e 550b 	mla	r5, lr, fp, r5
9002283e:	f892 b001 	ldrb.w	fp, [r2, #1]
90022842:	fb01 550b 	mla	r5, r1, fp, r5
90022846:	f890 b001 	ldrb.w	fp, [r0, #1]
9002284a:	fb08 550b 	mla	r5, r8, fp, r5
9002284e:	ea4f 0bec 	mov.w	fp, ip, asr #3
90022852:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022856:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002285a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002285e:	fa5f fc8c 	uxtb.w	ip, ip
90022862:	fb1b fb03 	smulbb	fp, fp, r3
90022866:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022868:	437b      	muls	r3, r7
9002286a:	7817      	ldrb	r7, [r2, #0]
9002286c:	fb05 b50a 	mla	r5, r5, sl, fp
90022870:	fb0e 3309 	mla	r3, lr, r9, r3
90022874:	b2ad      	uxth	r5, r5
90022876:	fb01 3307 	mla	r3, r1, r7, r3
9002287a:	7807      	ldrb	r7, [r0, #0]
9002287c:	f105 0b01 	add.w	fp, r5, #1
90022880:	fb08 3707 	mla	r7, r8, r7, r3
90022884:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022886:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9002288a:	fb1c fc03 	smulbb	ip, ip, r3
9002288e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022892:	1c73      	adds	r3, r6, #1
90022894:	096d      	lsrs	r5, r5, #5
90022896:	fb07 c70a 	mla	r7, r7, sl, ip
9002289a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002289e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900228a2:	b2bf      	uxth	r7, r7
900228a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900228a6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
900228aa:	1c7a      	adds	r2, r7, #1
900228ac:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900228b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900228b4:	4316      	orrs	r6, r2
900228b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900228b8:	432e      	orrs	r6, r5
900228ba:	f823 6b02 	strh.w	r6, [r3], #2
900228be:	930c      	str	r3, [sp, #48]	; 0x30
900228c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900228c2:	4413      	add	r3, r2
900228c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
900228c6:	931f      	str	r3, [sp, #124]	; 0x7c
900228c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900228ca:	4413      	add	r3, r2
900228cc:	9320      	str	r3, [sp, #128]	; 0x80
900228ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
900228d0:	3b01      	subs	r3, #1
900228d2:	9311      	str	r3, [sp, #68]	; 0x44
900228d4:	e6db      	b.n	9002268e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
900228d6:	b149      	cbz	r1, 900228ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
900228d8:	5cb2      	ldrb	r2, [r6, r2]
900228da:	4628      	mov	r0, r5
900228dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900228e0:	4422      	add	r2, r4
900228e2:	462f      	mov	r7, r5
900228e4:	e771      	b.n	900227ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900228e6:	4628      	mov	r0, r5
900228e8:	462a      	mov	r2, r5
900228ea:	e76e      	b.n	900227ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900228ec:	4628      	mov	r0, r5
900228ee:	462a      	mov	r2, r5
900228f0:	e7f7      	b.n	900228e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900228f2:	b015      	add	sp, #84	; 0x54
900228f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900228f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900228f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900228fc:	880f      	ldrh	r7, [r1, #0]
900228fe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90022902:	023c      	lsls	r4, r7, #8
90022904:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90022908:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
9002290c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90022910:	017c      	lsls	r4, r7, #5
90022912:	00ff      	lsls	r7, r7, #3
90022914:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022918:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
9002291c:	b2ff      	uxtb	r7, r7
9002291e:	ea4b 0404 	orr.w	r4, fp, r4
90022922:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90022926:	4327      	orrs	r7, r4
90022928:	fb05 ca0e 	mla	sl, r5, lr, ip
9002292c:	2d00      	cmp	r5, #0
9002292e:	9701      	str	r7, [sp, #4]
90022930:	eb02 080a 	add.w	r8, r2, sl
90022934:	db7e      	blt.n	90022a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022936:	45a9      	cmp	r9, r5
90022938:	dd7c      	ble.n	90022a34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9002293a:	f1bc 0f00 	cmp.w	ip, #0
9002293e:	db77      	blt.n	90022a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022940:	45e6      	cmp	lr, ip
90022942:	dd75      	ble.n	90022a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022944:	f812 700a 	ldrb.w	r7, [r2, sl]
90022948:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002294c:	441f      	add	r7, r3
9002294e:	f11c 0201 	adds.w	r2, ip, #1
90022952:	d472      	bmi.n	90022a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022954:	4596      	cmp	lr, r2
90022956:	dd70      	ble.n	90022a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022958:	2800      	cmp	r0, #0
9002295a:	d06e      	beq.n	90022a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9002295c:	f898 4001 	ldrb.w	r4, [r8, #1]
90022960:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90022964:	441c      	add	r4, r3
90022966:	3501      	adds	r5, #1
90022968:	d46b      	bmi.n	90022a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002296a:	45a9      	cmp	r9, r5
9002296c:	dd69      	ble.n	90022a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002296e:	2e00      	cmp	r6, #0
90022970:	d067      	beq.n	90022a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022972:	f1bc 0f00 	cmp.w	ip, #0
90022976:	db62      	blt.n	90022a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022978:	45e6      	cmp	lr, ip
9002297a:	dd60      	ble.n	90022a3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9002297c:	f818 500e 	ldrb.w	r5, [r8, lr]
90022980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022984:	441d      	add	r5, r3
90022986:	f11c 0201 	adds.w	r2, ip, #1
9002298a:	d45d      	bmi.n	90022a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002298c:	4596      	cmp	lr, r2
9002298e:	dd5b      	ble.n	90022a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022990:	2800      	cmp	r0, #0
90022992:	d059      	beq.n	90022a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022994:	44c6      	add	lr, r8
90022996:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002299a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002299e:	4413      	add	r3, r2
900229a0:	b280      	uxth	r0, r0
900229a2:	f897 e002 	ldrb.w	lr, [r7, #2]
900229a6:	b2b2      	uxth	r2, r6
900229a8:	f897 9000 	ldrb.w	r9, [r7]
900229ac:	787f      	ldrb	r7, [r7, #1]
900229ae:	fb00 f602 	mul.w	r6, r0, r2
900229b2:	0100      	lsls	r0, r0, #4
900229b4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
900229b8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
900229bc:	1b80      	subs	r0, r0, r6
900229be:	fa1f fc82 	uxth.w	ip, r2
900229c2:	b282      	uxth	r2, r0
900229c4:	78a0      	ldrb	r0, [r4, #2]
900229c6:	eba8 080c 	sub.w	r8, r8, ip
900229ca:	4350      	muls	r0, r2
900229cc:	fa1f f888 	uxth.w	r8, r8
900229d0:	fb08 0e0e 	mla	lr, r8, lr, r0
900229d4:	78a8      	ldrb	r0, [r5, #2]
900229d6:	fb0c e000 	mla	r0, ip, r0, lr
900229da:	f893 e002 	ldrb.w	lr, [r3, #2]
900229de:	fb06 0e0e 	mla	lr, r6, lr, r0
900229e2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
900229e6:	f894 e000 	ldrb.w	lr, [r4]
900229ea:	fb02 fe0e 	mul.w	lr, r2, lr
900229ee:	fb08 e909 	mla	r9, r8, r9, lr
900229f2:	f895 e000 	ldrb.w	lr, [r5]
900229f6:	fb0c 990e 	mla	r9, ip, lr, r9
900229fa:	f893 e000 	ldrb.w	lr, [r3]
900229fe:	785b      	ldrb	r3, [r3, #1]
90022a00:	fb06 9e0e 	mla	lr, r6, lr, r9
90022a04:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022a08:	ea4e 0e00 	orr.w	lr, lr, r0
90022a0c:	7860      	ldrb	r0, [r4, #1]
90022a0e:	4350      	muls	r0, r2
90022a10:	786a      	ldrb	r2, [r5, #1]
90022a12:	fb08 0007 	mla	r0, r8, r7, r0
90022a16:	fb0c 0202 	mla	r2, ip, r2, r0
90022a1a:	fb06 2303 	mla	r3, r6, r3, r2
90022a1e:	095b      	lsrs	r3, r3, #5
90022a20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022a24:	ea4e 0303 	orr.w	r3, lr, r3
90022a28:	800b      	strh	r3, [r1, #0]
90022a2a:	b003      	add	sp, #12
90022a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022a30:	af01      	add	r7, sp, #4
90022a32:	e78c      	b.n	9002294e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022a34:	ac01      	add	r4, sp, #4
90022a36:	4627      	mov	r7, r4
90022a38:	e795      	b.n	90022966 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022a3a:	ac01      	add	r4, sp, #4
90022a3c:	e793      	b.n	90022966 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022a3e:	ad01      	add	r5, sp, #4
90022a40:	e7a1      	b.n	90022986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90022a42:	ab01      	add	r3, sp, #4
90022a44:	461d      	mov	r5, r3
90022a46:	e7ab      	b.n	900229a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022a48:	ab01      	add	r3, sp, #4
90022a4a:	e7a9      	b.n	900229a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a50:	b08f      	sub	sp, #60	; 0x3c
90022a52:	920c      	str	r2, [sp, #48]	; 0x30
90022a54:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90022a56:	900d      	str	r0, [sp, #52]	; 0x34
90022a58:	910a      	str	r1, [sp, #40]	; 0x28
90022a5a:	6850      	ldr	r0, [r2, #4]
90022a5c:	9306      	str	r3, [sp, #24]
90022a5e:	6812      	ldr	r2, [r2, #0]
90022a60:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90022a64:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90022a68:	fb00 1303 	mla	r3, r0, r3, r1
90022a6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022a70:	9307      	str	r3, [sp, #28]
90022a72:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022a74:	681b      	ldr	r3, [r3, #0]
90022a76:	9308      	str	r3, [sp, #32]
90022a78:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022a7a:	685c      	ldr	r4, [r3, #4]
90022a7c:	3404      	adds	r4, #4
90022a7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022a80:	2b00      	cmp	r3, #0
90022a82:	dc03      	bgt.n	90022a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90022a84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022a86:	2b00      	cmp	r3, #0
90022a88:	f340 81d5 	ble.w	90022e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022a8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022a8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022a92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022a96:	1e48      	subs	r0, r1, #1
90022a98:	1e56      	subs	r6, r2, #1
90022a9a:	9b06      	ldr	r3, [sp, #24]
90022a9c:	2b00      	cmp	r3, #0
90022a9e:	f340 80b6 	ble.w	90022c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022aa2:	ea5f 472b 	movs.w	r7, fp, asr #16
90022aa6:	ea4f 4325 	mov.w	r3, r5, asr #16
90022aaa:	d406      	bmi.n	90022aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022aac:	4287      	cmp	r7, r0
90022aae:	da04      	bge.n	90022aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022ab0:	2b00      	cmp	r3, #0
90022ab2:	db02      	blt.n	90022aba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022ab4:	42b3      	cmp	r3, r6
90022ab6:	f2c0 80ab 	blt.w	90022c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022aba:	3701      	adds	r7, #1
90022abc:	f100 809c 	bmi.w	90022bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022ac0:	42b9      	cmp	r1, r7
90022ac2:	f2c0 8099 	blt.w	90022bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022ac6:	3301      	adds	r3, #1
90022ac8:	f100 8096 	bmi.w	90022bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022acc:	429a      	cmp	r2, r3
90022ace:	f2c0 8093 	blt.w	90022bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022ad2:	9b06      	ldr	r3, [sp, #24]
90022ad4:	930b      	str	r3, [sp, #44]	; 0x2c
90022ad6:	9b07      	ldr	r3, [sp, #28]
90022ad8:	9309      	str	r3, [sp, #36]	; 0x24
90022ada:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022adc:	2b00      	cmp	r3, #0
90022ade:	f340 80b4 	ble.w	90022c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022ae2:	9820      	ldr	r0, [sp, #128]	; 0x80
90022ae4:	142e      	asrs	r6, r5, #16
90022ae6:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022ae8:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022aec:	68c7      	ldr	r7, [r0, #12]
90022aee:	ea5f 402b 	movs.w	r0, fp, asr #16
90022af2:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022af6:	6892      	ldr	r2, [r2, #8]
90022af8:	f100 80fb 	bmi.w	90022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022afc:	f102 3cff 	add.w	ip, r2, #4294967295
90022b00:	4560      	cmp	r0, ip
90022b02:	f280 80f6 	bge.w	90022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022b06:	2e00      	cmp	r6, #0
90022b08:	f2c0 80f3 	blt.w	90022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022b0c:	f107 3cff 	add.w	ip, r7, #4294967295
90022b10:	4566      	cmp	r6, ip
90022b12:	f280 80ee 	bge.w	90022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022b16:	b212      	sxth	r2, r2
90022b18:	fb06 0002 	mla	r0, r6, r2, r0
90022b1c:	9e08      	ldr	r6, [sp, #32]
90022b1e:	1837      	adds	r7, r6, r0
90022b20:	5c30      	ldrb	r0, [r6, r0]
90022b22:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022b26:	eb04 0c08 	add.w	ip, r4, r8
90022b2a:	2b00      	cmp	r3, #0
90022b2c:	f000 80d3 	beq.w	90022cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022b30:	787e      	ldrb	r6, [r7, #1]
90022b32:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022b36:	4426      	add	r6, r4
90022b38:	2900      	cmp	r1, #0
90022b3a:	f000 80d4 	beq.w	90022ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022b3e:	18b8      	adds	r0, r7, r2
90022b40:	5cba      	ldrb	r2, [r7, r2]
90022b42:	7840      	ldrb	r0, [r0, #1]
90022b44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022b48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022b4c:	4422      	add	r2, r4
90022b4e:	4420      	add	r0, r4
90022b50:	b29b      	uxth	r3, r3
90022b52:	78b7      	ldrb	r7, [r6, #2]
90022b54:	b289      	uxth	r1, r1
90022b56:	f89c a002 	ldrb.w	sl, [ip, #2]
90022b5a:	f89c c001 	ldrb.w	ip, [ip, #1]
90022b5e:	fb03 f901 	mul.w	r9, r3, r1
90022b62:	011b      	lsls	r3, r3, #4
90022b64:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022b68:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022b6c:	eba3 0309 	sub.w	r3, r3, r9
90022b70:	b289      	uxth	r1, r1
90022b72:	b29b      	uxth	r3, r3
90022b74:	ebae 0e01 	sub.w	lr, lr, r1
90022b78:	435f      	muls	r7, r3
90022b7a:	fa1f fe8e 	uxth.w	lr, lr
90022b7e:	fb0e 770a 	mla	r7, lr, sl, r7
90022b82:	f892 a002 	ldrb.w	sl, [r2, #2]
90022b86:	fb01 770a 	mla	r7, r1, sl, r7
90022b8a:	f890 a002 	ldrb.w	sl, [r0, #2]
90022b8e:	fb09 7a0a 	mla	sl, r9, sl, r7
90022b92:	f814 7008 	ldrb.w	r7, [r4, r8]
90022b96:	f896 8000 	ldrb.w	r8, [r6]
90022b9a:	7876      	ldrb	r6, [r6, #1]
90022b9c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90022ba0:	fb03 f808 	mul.w	r8, r3, r8
90022ba4:	4373      	muls	r3, r6
90022ba6:	fb0e 8807 	mla	r8, lr, r7, r8
90022baa:	7817      	ldrb	r7, [r2, #0]
90022bac:	fb0e 330c 	mla	r3, lr, ip, r3
90022bb0:	fb01 8807 	mla	r8, r1, r7, r8
90022bb4:	7807      	ldrb	r7, [r0, #0]
90022bb6:	fb09 8707 	mla	r7, r9, r7, r8
90022bba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022bbe:	ea47 070a 	orr.w	r7, r7, sl
90022bc2:	f892 a001 	ldrb.w	sl, [r2, #1]
90022bc6:	fb01 310a 	mla	r1, r1, sl, r3
90022bca:	f890 a001 	ldrb.w	sl, [r0, #1]
90022bce:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022bd0:	fb09 1a0a 	mla	sl, r9, sl, r1
90022bd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022bd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90022bdc:	ea47 070a 	orr.w	r7, r7, sl
90022be0:	801f      	strh	r7, [r3, #0]
90022be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022be4:	3302      	adds	r3, #2
90022be6:	9309      	str	r3, [sp, #36]	; 0x24
90022be8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022bea:	449b      	add	fp, r3
90022bec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022bee:	441d      	add	r5, r3
90022bf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022bf2:	3b01      	subs	r3, #1
90022bf4:	930b      	str	r3, [sp, #44]	; 0x2c
90022bf6:	e770      	b.n	90022ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022bf8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022bfa:	449b      	add	fp, r3
90022bfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022bfe:	441d      	add	r5, r3
90022c00:	9b06      	ldr	r3, [sp, #24]
90022c02:	3b01      	subs	r3, #1
90022c04:	9306      	str	r3, [sp, #24]
90022c06:	9b07      	ldr	r3, [sp, #28]
90022c08:	3302      	adds	r3, #2
90022c0a:	9307      	str	r3, [sp, #28]
90022c0c:	e745      	b.n	90022a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022c0e:	d023      	beq.n	90022c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022c10:	9b06      	ldr	r3, [sp, #24]
90022c12:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022c14:	3b01      	subs	r3, #1
90022c16:	fb00 b003 	mla	r0, r0, r3, fp
90022c1a:	1400      	asrs	r0, r0, #16
90022c1c:	f53f af59 	bmi.w	90022ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022c20:	3901      	subs	r1, #1
90022c22:	4288      	cmp	r0, r1
90022c24:	f6bf af55 	bge.w	90022ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022c28:	991c      	ldr	r1, [sp, #112]	; 0x70
90022c2a:	fb01 5303 	mla	r3, r1, r3, r5
90022c2e:	141b      	asrs	r3, r3, #16
90022c30:	f53f af4f 	bmi.w	90022ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022c34:	3a01      	subs	r2, #1
90022c36:	4293      	cmp	r3, r2
90022c38:	f6bf af4b 	bge.w	90022ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022c3c:	9b06      	ldr	r3, [sp, #24]
90022c3e:	9309      	str	r3, [sp, #36]	; 0x24
90022c40:	9b07      	ldr	r3, [sp, #28]
90022c42:	930b      	str	r3, [sp, #44]	; 0x2c
90022c44:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022c46:	2b00      	cmp	r3, #0
90022c48:	dc70      	bgt.n	90022d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90022c4a:	9b06      	ldr	r3, [sp, #24]
90022c4c:	9a07      	ldr	r2, [sp, #28]
90022c4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022c52:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022c56:	9307      	str	r3, [sp, #28]
90022c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022c5a:	2b00      	cmp	r3, #0
90022c5c:	f340 80eb 	ble.w	90022e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022c60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022c64:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022c66:	ee30 0a04 	vadd.f32	s0, s0, s8
90022c6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022c6e:	eef0 6a62 	vmov.f32	s13, s5
90022c72:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022c76:	ee31 1a05 	vadd.f32	s2, s2, s10
90022c7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c7e:	ee16 ba90 	vmov	fp, s13
90022c82:	eef0 6a43 	vmov.f32	s13, s6
90022c86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c8a:	ee16 5a90 	vmov	r5, s13
90022c8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022c92:	ee61 7a27 	vmul.f32	s15, s2, s15
90022c96:	ee77 2a62 	vsub.f32	s5, s14, s5
90022c9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022c9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022ca2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022ca6:	ee12 2a90 	vmov	r2, s5
90022caa:	eef0 2a47 	vmov.f32	s5, s14
90022cae:	fb92 f3f3 	sdiv	r3, r2, r3
90022cb2:	ee13 2a10 	vmov	r2, s6
90022cb6:	931b      	str	r3, [sp, #108]	; 0x6c
90022cb8:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022cba:	eeb0 3a67 	vmov.f32	s6, s15
90022cbe:	fb92 f3f3 	sdiv	r3, r2, r3
90022cc2:	931c      	str	r3, [sp, #112]	; 0x70
90022cc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022cc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022cc8:	3b01      	subs	r3, #1
90022cca:	930a      	str	r3, [sp, #40]	; 0x28
90022ccc:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022cce:	bf08      	it	eq
90022cd0:	4613      	moveq	r3, r2
90022cd2:	9306      	str	r3, [sp, #24]
90022cd4:	e6d3      	b.n	90022a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90022cd6:	b149      	cbz	r1, 90022cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022cd8:	5cba      	ldrb	r2, [r7, r2]
90022cda:	4660      	mov	r0, ip
90022cdc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022ce0:	4422      	add	r2, r4
90022ce2:	4666      	mov	r6, ip
90022ce4:	e734      	b.n	90022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022ce6:	4660      	mov	r0, ip
90022ce8:	4662      	mov	r2, ip
90022cea:	e731      	b.n	90022b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022cec:	4660      	mov	r0, ip
90022cee:	4662      	mov	r2, ip
90022cf0:	e7f7      	b.n	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022cf2:	f110 0c01 	adds.w	ip, r0, #1
90022cf6:	f53f af74 	bmi.w	90022be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022cfa:	4562      	cmp	r2, ip
90022cfc:	f6ff af71 	blt.w	90022be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022d00:	f116 0c01 	adds.w	ip, r6, #1
90022d04:	f53f af6d 	bmi.w	90022be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022d08:	4567      	cmp	r7, ip
90022d0a:	f6ff af6a 	blt.w	90022be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022d0e:	b23f      	sxth	r7, r7
90022d10:	b212      	sxth	r2, r2
90022d12:	9701      	str	r7, [sp, #4]
90022d14:	9200      	str	r2, [sp, #0]
90022d16:	e9cd 3104 	strd	r3, r1, [sp, #16]
90022d1a:	e9cd 0602 	strd	r0, r6, [sp, #8]
90022d1e:	4623      	mov	r3, r4
90022d20:	980d      	ldr	r0, [sp, #52]	; 0x34
90022d22:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90022d26:	f7ff fde7 	bl	900228f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90022d2a:	e75a      	b.n	90022be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022d2c:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022d2e:	ea4f 462b 	mov.w	r6, fp, asr #16
90022d32:	1428      	asrs	r0, r5, #16
90022d34:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022d38:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022d3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022d40:	fb02 6000 	mla	r0, r2, r0, r6
90022d44:	9e08      	ldr	r6, [sp, #32]
90022d46:	f816 8000 	ldrb.w	r8, [r6, r0]
90022d4a:	1837      	adds	r7, r6, r0
90022d4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90022d50:	eb04 0c08 	add.w	ip, r4, r8
90022d54:	2b00      	cmp	r3, #0
90022d56:	d060      	beq.n	90022e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90022d58:	787e      	ldrb	r6, [r7, #1]
90022d5a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022d5e:	4426      	add	r6, r4
90022d60:	2900      	cmp	r1, #0
90022d62:	d062      	beq.n	90022e2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90022d64:	18b8      	adds	r0, r7, r2
90022d66:	5cba      	ldrb	r2, [r7, r2]
90022d68:	7840      	ldrb	r0, [r0, #1]
90022d6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022d6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022d72:	4422      	add	r2, r4
90022d74:	4420      	add	r0, r4
90022d76:	b29b      	uxth	r3, r3
90022d78:	78b7      	ldrb	r7, [r6, #2]
90022d7a:	b289      	uxth	r1, r1
90022d7c:	f89c a002 	ldrb.w	sl, [ip, #2]
90022d80:	f89c c001 	ldrb.w	ip, [ip, #1]
90022d84:	fb03 f901 	mul.w	r9, r3, r1
90022d88:	011b      	lsls	r3, r3, #4
90022d8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022d8e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022d92:	eba3 0309 	sub.w	r3, r3, r9
90022d96:	b289      	uxth	r1, r1
90022d98:	b29b      	uxth	r3, r3
90022d9a:	ebae 0e01 	sub.w	lr, lr, r1
90022d9e:	435f      	muls	r7, r3
90022da0:	fa1f fe8e 	uxth.w	lr, lr
90022da4:	fb0e 770a 	mla	r7, lr, sl, r7
90022da8:	f892 a002 	ldrb.w	sl, [r2, #2]
90022dac:	fb01 770a 	mla	r7, r1, sl, r7
90022db0:	f890 a002 	ldrb.w	sl, [r0, #2]
90022db4:	fb09 7a0a 	mla	sl, r9, sl, r7
90022db8:	f814 7008 	ldrb.w	r7, [r4, r8]
90022dbc:	f896 8000 	ldrb.w	r8, [r6]
90022dc0:	7876      	ldrb	r6, [r6, #1]
90022dc2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90022dc6:	fb03 f808 	mul.w	r8, r3, r8
90022dca:	4373      	muls	r3, r6
90022dcc:	7856      	ldrb	r6, [r2, #1]
90022dce:	fb0e 8807 	mla	r8, lr, r7, r8
90022dd2:	7817      	ldrb	r7, [r2, #0]
90022dd4:	fb0e 330c 	mla	r3, lr, ip, r3
90022dd8:	fb01 8807 	mla	r8, r1, r7, r8
90022ddc:	7807      	ldrb	r7, [r0, #0]
90022dde:	fb01 3306 	mla	r3, r1, r6, r3
90022de2:	fb09 8707 	mla	r7, r9, r7, r8
90022de6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022dea:	ea47 070a 	orr.w	r7, r7, sl
90022dee:	f890 a001 	ldrb.w	sl, [r0, #1]
90022df2:	fb09 3a0a 	mla	sl, r9, sl, r3
90022df6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022df8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022dfc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90022e00:	ea47 070a 	orr.w	r7, r7, sl
90022e04:	f823 7b02 	strh.w	r7, [r3], #2
90022e08:	930b      	str	r3, [sp, #44]	; 0x2c
90022e0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022e0c:	449b      	add	fp, r3
90022e0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022e10:	441d      	add	r5, r3
90022e12:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022e14:	3b01      	subs	r3, #1
90022e16:	9309      	str	r3, [sp, #36]	; 0x24
90022e18:	e714      	b.n	90022c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90022e1a:	b149      	cbz	r1, 90022e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90022e1c:	5cba      	ldrb	r2, [r7, r2]
90022e1e:	4660      	mov	r0, ip
90022e20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022e24:	4422      	add	r2, r4
90022e26:	4666      	mov	r6, ip
90022e28:	e7a5      	b.n	90022d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022e2a:	4660      	mov	r0, ip
90022e2c:	4662      	mov	r2, ip
90022e2e:	e7a2      	b.n	90022d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022e30:	4660      	mov	r0, ip
90022e32:	4662      	mov	r2, ip
90022e34:	e7f7      	b.n	90022e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90022e36:	b00f      	add	sp, #60	; 0x3c
90022e38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022e3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90022e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022e40:	b085      	sub	sp, #20
90022e42:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90022e46:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90022e4a:	9102      	str	r1, [sp, #8]
90022e4c:	2c00      	cmp	r4, #0
90022e4e:	fb04 710c 	mla	r1, r4, ip, r7
90022e52:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90022e56:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90022e5a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90022e5e:	eb02 0e01 	add.w	lr, r2, r1
90022e62:	f2c0 8122 	blt.w	900230aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022e66:	45a0      	cmp	r8, r4
90022e68:	f340 811f 	ble.w	900230aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022e6c:	2f00      	cmp	r7, #0
90022e6e:	f2c0 811a 	blt.w	900230a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022e72:	45bc      	cmp	ip, r7
90022e74:	f340 8117 	ble.w	900230a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022e78:	5c52      	ldrb	r2, [r2, r1]
90022e7a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90022e7e:	1c7a      	adds	r2, r7, #1
90022e80:	f100 8116 	bmi.w	900230b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022e84:	4594      	cmp	ip, r2
90022e86:	f340 8113 	ble.w	900230b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022e8a:	2e00      	cmp	r6, #0
90022e8c:	f000 8112 	beq.w	900230b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022e90:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022e94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022e98:	3401      	adds	r4, #1
90022e9a:	f100 810f 	bmi.w	900230bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022e9e:	45a0      	cmp	r8, r4
90022ea0:	f340 810c 	ble.w	900230bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022ea4:	2800      	cmp	r0, #0
90022ea6:	f000 810c 	beq.w	900230c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022eaa:	2f00      	cmp	r7, #0
90022eac:	f2c0 8104 	blt.w	900230b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022eb0:	45bc      	cmp	ip, r7
90022eb2:	f340 8101 	ble.w	900230b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022eb6:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022eba:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022ebe:	3701      	adds	r7, #1
90022ec0:	f100 8102 	bmi.w	900230c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022ec4:	45bc      	cmp	ip, r7
90022ec6:	f340 80ff 	ble.w	900230c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022eca:	2e00      	cmp	r6, #0
90022ecc:	f000 80fe 	beq.w	900230cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022ed0:	44f4      	add	ip, lr
90022ed2:	f89c 2001 	ldrb.w	r2, [ip, #1]
90022ed6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022eda:	b2b6      	uxth	r6, r6
90022edc:	b280      	uxth	r0, r0
90022ede:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022ee2:	fb00 fe06 	mul.w	lr, r0, r6
90022ee6:	0136      	lsls	r6, r6, #4
90022ee8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022eec:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022ef0:	eba6 070e 	sub.w	r7, r6, lr
90022ef4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90022ef8:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022efc:	b280      	uxth	r0, r0
90022efe:	b2bf      	uxth	r7, r7
90022f00:	1a1b      	subs	r3, r3, r0
90022f02:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022f06:	fb0a f607 	mul.w	r6, sl, r7
90022f0a:	b29b      	uxth	r3, r3
90022f0c:	fb0b 6603 	mla	r6, fp, r3, r6
90022f10:	fb00 6609 	mla	r6, r0, r9, r6
90022f14:	fb0e 6608 	mla	r6, lr, r8, r6
90022f18:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022f1c:	9600      	str	r6, [sp, #0]
90022f1e:	2e00      	cmp	r6, #0
90022f20:	f000 80be 	beq.w	900230a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90022f24:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90022f28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90022f2c:	9e02      	ldr	r6, [sp, #8]
90022f2e:	fb0b fc0c 	mul.w	ip, fp, ip
90022f32:	fb0b f505 	mul.w	r5, fp, r5
90022f36:	8836      	ldrh	r6, [r6, #0]
90022f38:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022f3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022f40:	9501      	str	r5, [sp, #4]
90022f42:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90022f46:	44dc      	add	ip, fp
90022f48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022f4c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90022f50:	9503      	str	r5, [sp, #12]
90022f52:	9d01      	ldr	r5, [sp, #4]
90022f54:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90022f58:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022f5c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90022f60:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022f64:	fb0a fc0c 	mul.w	ip, sl, ip
90022f68:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022f6c:	fb0a fa01 	mul.w	sl, sl, r1
90022f70:	ea4f 251c 	mov.w	r5, ip, lsr #8
90022f74:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022f78:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90022f7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022f80:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90022f84:	4465      	add	r5, ip
90022f86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022f8a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90022f8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022f92:	fb09 fc0c 	mul.w	ip, r9, ip
90022f96:	0a2d      	lsrs	r5, r5, #8
90022f98:	fb09 f904 	mul.w	r9, r9, r4
90022f9c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022fa0:	ea4f 211c 	mov.w	r1, ip, lsr #8
90022fa4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022fa8:	f509 7480 	add.w	r4, r9, #256	; 0x100
90022fac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022fb0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022fb4:	437d      	muls	r5, r7
90022fb6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022fba:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90022fbe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90022fc2:	4461      	add	r1, ip
90022fc4:	fb08 f404 	mul.w	r4, r8, r4
90022fc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022fcc:	fb08 f802 	mul.w	r8, r8, r2
90022fd0:	0a09      	lsrs	r1, r1, #8
90022fd2:	0a22      	lsrs	r2, r4, #8
90022fd4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90022fd8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022fdc:	fb07 f70a 	mul.w	r7, r7, sl
90022fe0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90022fe4:	4414      	add	r4, r2
90022fe6:	f508 7280 	add.w	r2, r8, #256	; 0x100
90022fea:	0a24      	lsrs	r4, r4, #8
90022fec:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022ff0:	9a03      	ldr	r2, [sp, #12]
90022ff2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90022ff6:	fb02 5503 	mla	r5, r2, r3, r5
90022ffa:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022ffe:	9a00      	ldr	r2, [sp, #0]
90023000:	fb04 540e 	mla	r4, r4, lr, r5
90023004:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90023008:	1235      	asrs	r5, r6, #8
9002300a:	fb01 4100 	mla	r1, r1, r0, r4
9002300e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023012:	0a09      	lsrs	r1, r1, #8
90023014:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90023018:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9002301c:	fb03 7101 	mla	r1, r3, r1, r7
90023020:	fb0e 1e08 	mla	lr, lr, r8, r1
90023024:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90023028:	fb00 e101 	mla	r1, r0, r1, lr
9002302c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90023030:	b287      	uxth	r7, r0
90023032:	0a09      	lsrs	r1, r1, #8
90023034:	437a      	muls	r2, r7
90023036:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002303a:	1c53      	adds	r3, r2, #1
9002303c:	4321      	orrs	r1, r4
9002303e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023042:	0c0a      	lsrs	r2, r1, #16
90023044:	f3c1 2407 	ubfx	r4, r1, #8, #8
90023048:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002304c:	b2c8      	uxtb	r0, r1
9002304e:	fb12 f207 	smulbb	r2, r2, r7
90023052:	fb14 f407 	smulbb	r4, r4, r7
90023056:	b2db      	uxtb	r3, r3
90023058:	fb10 f007 	smulbb	r0, r0, r7
9002305c:	fb05 2503 	mla	r5, r5, r3, r2
90023060:	10f2      	asrs	r2, r6, #3
90023062:	00f6      	lsls	r6, r6, #3
90023064:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023068:	b2ad      	uxth	r5, r5
9002306a:	b2f6      	uxtb	r6, r6
9002306c:	fb02 4203 	mla	r2, r2, r3, r4
90023070:	fb06 0303 	mla	r3, r6, r3, r0
90023074:	b294      	uxth	r4, r2
90023076:	b299      	uxth	r1, r3
90023078:	1c6b      	adds	r3, r5, #1
9002307a:	1c62      	adds	r2, r4, #1
9002307c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023080:	1c4b      	adds	r3, r1, #1
90023082:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90023086:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002308a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002308e:	0952      	lsrs	r2, r2, #5
90023090:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023094:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023098:	432b      	orrs	r3, r5
9002309a:	4313      	orrs	r3, r2
9002309c:	9a02      	ldr	r2, [sp, #8]
9002309e:	8013      	strh	r3, [r2, #0]
900230a0:	b005      	add	sp, #20
900230a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900230a6:	2500      	movs	r5, #0
900230a8:	e6e9      	b.n	90022e7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900230aa:	2100      	movs	r1, #0
900230ac:	460d      	mov	r5, r1
900230ae:	e6f3      	b.n	90022e98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900230b0:	2100      	movs	r1, #0
900230b2:	e6f1      	b.n	90022e98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900230b4:	4631      	mov	r1, r6
900230b6:	e6ef      	b.n	90022e98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900230b8:	2400      	movs	r4, #0
900230ba:	e700      	b.n	90022ebe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
900230bc:	2200      	movs	r2, #0
900230be:	4614      	mov	r4, r2
900230c0:	e70b      	b.n	90022eda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900230c2:	4602      	mov	r2, r0
900230c4:	4604      	mov	r4, r0
900230c6:	e708      	b.n	90022eda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900230c8:	2200      	movs	r2, #0
900230ca:	e706      	b.n	90022eda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900230cc:	4632      	mov	r2, r6
900230ce:	e704      	b.n	90022eda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

900230d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900230d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900230d4:	b09f      	sub	sp, #124	; 0x7c
900230d6:	921b      	str	r2, [sp, #108]	; 0x6c
900230d8:	9309      	str	r3, [sp, #36]	; 0x24
900230da:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900230dc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
900230e0:	901d      	str	r0, [sp, #116]	; 0x74
900230e2:	931c      	str	r3, [sp, #112]	; 0x70
900230e4:	6850      	ldr	r0, [r2, #4]
900230e6:	9119      	str	r1, [sp, #100]	; 0x64
900230e8:	6812      	ldr	r2, [r2, #0]
900230ea:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900230ec:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
900230f0:	fb00 1303 	mla	r3, r0, r3, r1
900230f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900230f8:	930c      	str	r3, [sp, #48]	; 0x30
900230fa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900230fc:	681b      	ldr	r3, [r3, #0]
900230fe:	9312      	str	r3, [sp, #72]	; 0x48
90023100:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023102:	685e      	ldr	r6, [r3, #4]
90023104:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90023108:	3604      	adds	r6, #4
9002310a:	930d      	str	r3, [sp, #52]	; 0x34
9002310c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002310e:	2b00      	cmp	r3, #0
90023110:	dc03      	bgt.n	9002311a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023112:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023114:	2b00      	cmp	r3, #0
90023116:	f340 8387 	ble.w	90023828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002311a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002311c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023120:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023124:	1e48      	subs	r0, r1, #1
90023126:	1e57      	subs	r7, r2, #1
90023128:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002312a:	2b00      	cmp	r3, #0
9002312c:	f340 8194 	ble.w	90023458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90023130:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023132:	142b      	asrs	r3, r5, #16
90023134:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023138:	d406      	bmi.n	90023148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002313a:	4584      	cmp	ip, r0
9002313c:	da04      	bge.n	90023148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002313e:	2b00      	cmp	r3, #0
90023140:	db02      	blt.n	90023148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023142:	42bb      	cmp	r3, r7
90023144:	f2c0 8189 	blt.w	9002345a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023148:	f11c 0c01 	adds.w	ip, ip, #1
9002314c:	f100 8177 	bmi.w	9002343e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023150:	4561      	cmp	r1, ip
90023152:	f2c0 8174 	blt.w	9002343e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023156:	3301      	adds	r3, #1
90023158:	f100 8171 	bmi.w	9002343e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002315c:	429a      	cmp	r2, r3
9002315e:	f2c0 816e 	blt.w	9002343e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023162:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023164:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90023166:	931a      	str	r3, [sp, #104]	; 0x68
90023168:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9002316a:	2b00      	cmp	r3, #0
9002316c:	f340 8193 	ble.w	90023496 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90023170:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023172:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023176:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002317a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002317e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023180:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90023184:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023186:	141b      	asrs	r3, r3, #16
90023188:	f100 81d6 	bmi.w	90023538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002318c:	f100 38ff 	add.w	r8, r0, #4294967295
90023190:	4543      	cmp	r3, r8
90023192:	f280 81d1 	bge.w	90023538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023196:	f1bc 0f00 	cmp.w	ip, #0
9002319a:	f2c0 81cd 	blt.w	90023538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002319e:	f10e 38ff 	add.w	r8, lr, #4294967295
900231a2:	45c4      	cmp	ip, r8
900231a4:	f280 81c8 	bge.w	90023538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900231a8:	b200      	sxth	r0, r0
900231aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
900231ac:	fb0c 3300 	mla	r3, ip, r0, r3
900231b0:	eb04 0803 	add.w	r8, r4, r3
900231b4:	5ce3      	ldrb	r3, [r4, r3]
900231b6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900231ba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900231be:	2a00      	cmp	r2, #0
900231c0:	f000 81af 	beq.w	90023522 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900231c4:	f898 c001 	ldrb.w	ip, [r8, #1]
900231c8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900231cc:	940e      	str	r4, [sp, #56]	; 0x38
900231ce:	0e24      	lsrs	r4, r4, #24
900231d0:	9415      	str	r4, [sp, #84]	; 0x54
900231d2:	b179      	cbz	r1, 900231f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900231d4:	eb08 0c00 	add.w	ip, r8, r0
900231d8:	f818 0000 	ldrb.w	r0, [r8, r0]
900231dc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900231e0:	900a      	str	r0, [sp, #40]	; 0x28
900231e2:	0e00      	lsrs	r0, r0, #24
900231e4:	9013      	str	r0, [sp, #76]	; 0x4c
900231e6:	f89c 0001 	ldrb.w	r0, [ip, #1]
900231ea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900231ee:	900f      	str	r0, [sp, #60]	; 0x3c
900231f0:	0e00      	lsrs	r0, r0, #24
900231f2:	9016      	str	r0, [sp, #88]	; 0x58
900231f4:	b292      	uxth	r2, r2
900231f6:	9815      	ldr	r0, [sp, #84]	; 0x54
900231f8:	b289      	uxth	r1, r1
900231fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900231fc:	fb02 f901 	mul.w	r9, r2, r1
90023200:	0112      	lsls	r2, r2, #4
90023202:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023206:	eba2 0809 	sub.w	r8, r2, r9
9002320a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002320e:	b289      	uxth	r1, r1
90023210:	fa1f f888 	uxth.w	r8, r8
90023214:	1a52      	subs	r2, r2, r1
90023216:	fb08 f000 	mul.w	r0, r8, r0
9002321a:	b292      	uxth	r2, r2
9002321c:	fb02 000e 	mla	r0, r2, lr, r0
90023220:	fb01 0004 	mla	r0, r1, r4, r0
90023224:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023226:	fb09 0004 	mla	r0, r9, r4, r0
9002322a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002322e:	2800      	cmp	r0, #0
90023230:	f000 80fa 	beq.w	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023234:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023238:	d01b      	beq.n	90023272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002323a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002323e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023242:	fb0e fa0a 	mul.w	sl, lr, sl
90023246:	fb0e fe03 	mul.w	lr, lr, r3
9002324a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002324e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023252:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023256:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002325a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002325e:	4453      	add	r3, sl
90023260:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023264:	0a1b      	lsrs	r3, r3, #8
90023266:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002326a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002326e:	ea43 030c 	orr.w	r3, r3, ip
90023272:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023274:	2cff      	cmp	r4, #255	; 0xff
90023276:	d021      	beq.n	900232bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023278:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002327a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002327e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023280:	fb04 fb0b 	mul.w	fp, r4, fp
90023284:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023286:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002328a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002328c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023290:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023294:	fb04 fa0a 	mul.w	sl, r4, sl
90023298:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002329c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900232a0:	44de      	add	lr, fp
900232a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900232a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900232aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900232ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900232b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900232b6:	ea4e 040a 	orr.w	r4, lr, sl
900232ba:	940e      	str	r4, [sp, #56]	; 0x38
900232bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900232be:	2cff      	cmp	r4, #255	; 0xff
900232c0:	d021      	beq.n	90023306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900232c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900232c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900232c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900232ca:	fb04 fb0b 	mul.w	fp, r4, fp
900232ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900232d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900232d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900232d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900232da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900232de:	fb04 fa0a 	mul.w	sl, r4, sl
900232e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900232e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900232ea:	44de      	add	lr, fp
900232ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900232f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900232f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900232f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900232fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023300:	ea4e 040a 	orr.w	r4, lr, sl
90023304:	940a      	str	r4, [sp, #40]	; 0x28
90023306:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023308:	2cff      	cmp	r4, #255	; 0xff
9002330a:	d021      	beq.n	90023350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9002330c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002330e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023312:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023314:	fb04 fb0b 	mul.w	fp, r4, fp
90023318:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002331a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002331e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023320:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023324:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023328:	fb04 fa0a 	mul.w	sl, r4, sl
9002332c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023330:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023334:	44de      	add	lr, fp
90023336:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002333a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002333e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023342:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023346:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002334a:	ea4e 040a 	orr.w	r4, lr, sl
9002334e:	940f      	str	r4, [sp, #60]	; 0x3c
90023350:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023352:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023356:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002335a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002335e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023360:	fb08 fc0c 	mul.w	ip, r8, ip
90023364:	fb02 cc0e 	mla	ip, r2, lr, ip
90023368:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002336c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002336e:	fb01 cc0e 	mla	ip, r1, lr, ip
90023372:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023376:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023378:	fb09 cc0e 	mla	ip, r9, lr, ip
9002337c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023380:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023382:	fb08 f80e 	mul.w	r8, r8, lr
90023386:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002338a:	fb02 8303 	mla	r3, r2, r3, r8
9002338e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90023390:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023394:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023398:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002339a:	fb01 330a 	mla	r3, r1, sl, r3
9002339e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
900233a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900233a4:	fb09 3901 	mla	r9, r9, r1, r3
900233a8:	883b      	ldrh	r3, [r7, #0]
900233aa:	4342      	muls	r2, r0
900233ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
900233b0:	1c50      	adds	r0, r2, #1
900233b2:	1219      	asrs	r1, r3, #8
900233b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900233b8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900233bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900233c0:	ea4c 0c09 	orr.w	ip, ip, r9
900233c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900233c8:	ea4f 421c 	mov.w	r2, ip, lsr #16
900233cc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900233d0:	b2c0      	uxtb	r0, r0
900233d2:	fb12 f204 	smulbb	r2, r2, r4
900233d6:	fa5f fc8c 	uxtb.w	ip, ip
900233da:	fb1e fe04 	smulbb	lr, lr, r4
900233de:	fb01 2100 	mla	r1, r1, r0, r2
900233e2:	10da      	asrs	r2, r3, #3
900233e4:	fb1c fc04 	smulbb	ip, ip, r4
900233e8:	00db      	lsls	r3, r3, #3
900233ea:	b289      	uxth	r1, r1
900233ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900233f0:	b2db      	uxtb	r3, r3
900233f2:	fb02 e200 	mla	r2, r2, r0, lr
900233f6:	fb03 c300 	mla	r3, r3, r0, ip
900233fa:	b292      	uxth	r2, r2
900233fc:	fa1f fc83 	uxth.w	ip, r3
90023400:	1c4b      	adds	r3, r1, #1
90023402:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023406:	f10c 0301 	add.w	r3, ip, #1
9002340a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002340e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023412:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023416:	430b      	orrs	r3, r1
90023418:	1c51      	adds	r1, r2, #1
9002341a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002341e:	0952      	lsrs	r2, r2, #5
90023420:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023424:	4313      	orrs	r3, r2
90023426:	803b      	strh	r3, [r7, #0]
90023428:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002342a:	3702      	adds	r7, #2
9002342c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002342e:	441a      	add	r2, r3
90023430:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023432:	441d      	add	r5, r3
90023434:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90023436:	9229      	str	r2, [sp, #164]	; 0xa4
90023438:	3b01      	subs	r3, #1
9002343a:	931a      	str	r3, [sp, #104]	; 0x68
9002343c:	e694      	b.n	90023168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002343e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023440:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023442:	441c      	add	r4, r3
90023444:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023446:	441d      	add	r5, r3
90023448:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002344a:	9429      	str	r4, [sp, #164]	; 0xa4
9002344c:	3b01      	subs	r3, #1
9002344e:	9309      	str	r3, [sp, #36]	; 0x24
90023450:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023452:	3302      	adds	r3, #2
90023454:	930c      	str	r3, [sp, #48]	; 0x30
90023456:	e667      	b.n	90023128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023458:	d024      	beq.n	900234a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9002345a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002345c:	982b      	ldr	r0, [sp, #172]	; 0xac
9002345e:	3b01      	subs	r3, #1
90023460:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023462:	fb00 4003 	mla	r0, r0, r3, r4
90023466:	1400      	asrs	r0, r0, #16
90023468:	f53f ae7b 	bmi.w	90023162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002346c:	3901      	subs	r1, #1
9002346e:	4288      	cmp	r0, r1
90023470:	f6bf ae77 	bge.w	90023162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023474:	992c      	ldr	r1, [sp, #176]	; 0xb0
90023476:	fb01 5303 	mla	r3, r1, r3, r5
9002347a:	141b      	asrs	r3, r3, #16
9002347c:	f53f ae71 	bmi.w	90023162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023480:	3a01      	subs	r2, #1
90023482:	4293      	cmp	r3, r2
90023484:	f6bf ae6d 	bge.w	90023162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023488:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002348c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90023490:	f1bb 0f00 	cmp.w	fp, #0
90023494:	dc70      	bgt.n	90023578 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023496:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023498:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002349c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002349e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900234a2:	930c      	str	r3, [sp, #48]	; 0x30
900234a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900234a6:	2b00      	cmp	r3, #0
900234a8:	f340 81be 	ble.w	90023828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900234ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900234b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900234b2:	ee30 0a04 	vadd.f32	s0, s0, s8
900234b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900234ba:	eef0 6a62 	vmov.f32	s13, s5
900234be:	eec7 7a00 	vdiv.f32	s15, s14, s0
900234c2:	ee31 1a05 	vadd.f32	s2, s2, s10
900234c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900234ca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
900234ce:	eef0 6a43 	vmov.f32	s13, s6
900234d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900234d6:	ee16 5a90 	vmov	r5, s13
900234da:	ee20 7aa7 	vmul.f32	s14, s1, s15
900234de:	ee61 7a27 	vmul.f32	s15, s2, s15
900234e2:	ee77 2a62 	vsub.f32	s5, s14, s5
900234e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900234ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900234ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900234f2:	ee12 2a90 	vmov	r2, s5
900234f6:	eef0 2a47 	vmov.f32	s5, s14
900234fa:	fb92 f3f3 	sdiv	r3, r2, r3
900234fe:	ee13 2a10 	vmov	r2, s6
90023502:	932b      	str	r3, [sp, #172]	; 0xac
90023504:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023506:	eeb0 3a67 	vmov.f32	s6, s15
9002350a:	fb92 f3f3 	sdiv	r3, r2, r3
9002350e:	932c      	str	r3, [sp, #176]	; 0xb0
90023510:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023512:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90023514:	3b01      	subs	r3, #1
90023516:	9319      	str	r3, [sp, #100]	; 0x64
90023518:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002351a:	bf08      	it	eq
9002351c:	4613      	moveq	r3, r2
9002351e:	9309      	str	r3, [sp, #36]	; 0x24
90023520:	e5f4      	b.n	9002310c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023522:	2900      	cmp	r1, #0
90023524:	f43f ae66 	beq.w	900231f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023528:	f818 0000 	ldrb.w	r0, [r8, r0]
9002352c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023530:	900a      	str	r0, [sp, #40]	; 0x28
90023532:	0e00      	lsrs	r0, r0, #24
90023534:	9013      	str	r0, [sp, #76]	; 0x4c
90023536:	e65d      	b.n	900231f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023538:	f113 0801 	adds.w	r8, r3, #1
9002353c:	f53f af74 	bmi.w	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023540:	4540      	cmp	r0, r8
90023542:	f6ff af71 	blt.w	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023546:	f11c 0801 	adds.w	r8, ip, #1
9002354a:	f53f af6d 	bmi.w	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002354e:	45c6      	cmp	lr, r8
90023550:	f6ff af6a 	blt.w	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023554:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90023556:	b200      	sxth	r0, r0
90023558:	9302      	str	r3, [sp, #8]
9002355a:	fa0f f38e 	sxth.w	r3, lr
9002355e:	9000      	str	r0, [sp, #0]
90023560:	9301      	str	r3, [sp, #4]
90023562:	4633      	mov	r3, r6
90023564:	981d      	ldr	r0, [sp, #116]	; 0x74
90023566:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002356a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002356e:	4639      	mov	r1, r7
90023570:	9a12      	ldr	r2, [sp, #72]	; 0x48
90023572:	f7ff fc63 	bl	90022e3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90023576:	e757      	b.n	90023428 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023578:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002357a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002357e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023580:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023584:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023586:	1427      	asrs	r7, r4, #16
90023588:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002358a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002358e:	142b      	asrs	r3, r5, #16
90023590:	fb01 7303 	mla	r3, r1, r3, r7
90023594:	18e7      	adds	r7, r4, r3
90023596:	5ce3      	ldrb	r3, [r4, r3]
90023598:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002359c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900235a0:	2a00      	cmp	r2, #0
900235a2:	f000 8137 	beq.w	90023814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900235a6:	f897 e001 	ldrb.w	lr, [r7, #1]
900235aa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900235ae:	9410      	str	r4, [sp, #64]	; 0x40
900235b0:	0e24      	lsrs	r4, r4, #24
900235b2:	9417      	str	r4, [sp, #92]	; 0x5c
900235b4:	b170      	cbz	r0, 900235d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900235b6:	eb07 0e01 	add.w	lr, r7, r1
900235ba:	5c79      	ldrb	r1, [r7, r1]
900235bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900235c0:	910b      	str	r1, [sp, #44]	; 0x2c
900235c2:	0e09      	lsrs	r1, r1, #24
900235c4:	9114      	str	r1, [sp, #80]	; 0x50
900235c6:	f89e 1001 	ldrb.w	r1, [lr, #1]
900235ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900235ce:	9111      	str	r1, [sp, #68]	; 0x44
900235d0:	0e09      	lsrs	r1, r1, #24
900235d2:	9118      	str	r1, [sp, #96]	; 0x60
900235d4:	b292      	uxth	r2, r2
900235d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900235d8:	b280      	uxth	r0, r0
900235da:	9c14      	ldr	r4, [sp, #80]	; 0x50
900235dc:	fb02 f800 	mul.w	r8, r2, r0
900235e0:	0112      	lsls	r2, r2, #4
900235e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900235e6:	eba2 0e08 	sub.w	lr, r2, r8
900235ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900235ee:	b280      	uxth	r0, r0
900235f0:	fa1f fe8e 	uxth.w	lr, lr
900235f4:	1a12      	subs	r2, r2, r0
900235f6:	fb0e f101 	mul.w	r1, lr, r1
900235fa:	b292      	uxth	r2, r2
900235fc:	fb02 110c 	mla	r1, r2, ip, r1
90023600:	fb00 1104 	mla	r1, r0, r4, r1
90023604:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023606:	fb08 1104 	mla	r1, r8, r4, r1
9002360a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002360e:	2900      	cmp	r1, #0
90023610:	f000 80f5 	beq.w	900237fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023614:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023618:	d019      	beq.n	9002364e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002361a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002361e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023622:	fb0c fa0a 	mul.w	sl, ip, sl
90023626:	fb0c fc03 	mul.w	ip, ip, r3
9002362a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002362e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023632:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023636:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002363a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002363e:	4453      	add	r3, sl
90023640:	0a3f      	lsrs	r7, r7, #8
90023642:	0a1b      	lsrs	r3, r3, #8
90023644:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023648:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002364c:	433b      	orrs	r3, r7
9002364e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90023650:	2cff      	cmp	r4, #255	; 0xff
90023652:	d020      	beq.n	90023696 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023654:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023656:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002365a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002365c:	4367      	muls	r7, r4
9002365e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023660:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023664:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023668:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002366a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002366e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023672:	fb04 fa0a 	mul.w	sl, r4, sl
90023676:	44bc      	add	ip, r7
90023678:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002367c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023680:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023684:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002368c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023690:	ea4c 040a 	orr.w	r4, ip, sl
90023694:	9410      	str	r4, [sp, #64]	; 0x40
90023696:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023698:	2cff      	cmp	r4, #255	; 0xff
9002369a:	d020      	beq.n	900236de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002369c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002369e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900236a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900236a4:	4367      	muls	r7, r4
900236a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900236a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900236ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900236b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900236b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900236b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900236ba:	fb04 fa0a 	mul.w	sl, r4, sl
900236be:	44bc      	add	ip, r7
900236c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900236c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900236c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900236cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900236d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900236d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900236d8:	ea4c 040a 	orr.w	r4, ip, sl
900236dc:	940b      	str	r4, [sp, #44]	; 0x2c
900236de:	9c18      	ldr	r4, [sp, #96]	; 0x60
900236e0:	2cff      	cmp	r4, #255	; 0xff
900236e2:	d020      	beq.n	90023726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900236e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900236e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900236ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
900236ec:	4367      	muls	r7, r4
900236ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
900236f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900236f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900236f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
900236fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900236fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023702:	fb04 fa0a 	mul.w	sl, r4, sl
90023706:	44bc      	add	ip, r7
90023708:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002370c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023710:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023714:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023718:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002371c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023720:	ea4c 040a 	orr.w	r4, ip, sl
90023724:	9411      	str	r4, [sp, #68]	; 0x44
90023726:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023728:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002372c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023730:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023734:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023736:	fb0e f707 	mul.w	r7, lr, r7
9002373a:	fb02 770c 	mla	r7, r2, ip, r7
9002373e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023742:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023744:	fb00 770c 	mla	r7, r0, ip, r7
90023748:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002374c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002374e:	fb08 770c 	mla	r7, r8, ip, r7
90023752:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90023756:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023758:	fb0e fe0c 	mul.w	lr, lr, ip
9002375c:	0a3f      	lsrs	r7, r7, #8
9002375e:	fb02 e303 	mla	r3, r2, r3, lr
90023762:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023764:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90023768:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002376c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002376e:	fb00 330a 	mla	r3, r0, sl, r3
90023772:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90023776:	f8b9 0000 	ldrh.w	r0, [r9]
9002377a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002377e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023780:	1202      	asrs	r2, r0, #8
90023782:	434b      	muls	r3, r1
90023784:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023788:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002378c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023790:	1c59      	adds	r1, r3, #1
90023792:	ea47 070c 	orr.w	r7, r7, ip
90023796:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002379a:	0c3b      	lsrs	r3, r7, #16
9002379c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900237a0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900237a4:	b2ff      	uxtb	r7, r7
900237a6:	fb13 f304 	smulbb	r3, r3, r4
900237aa:	b2c9      	uxtb	r1, r1
900237ac:	fb1c fc04 	smulbb	ip, ip, r4
900237b0:	fb02 3201 	mla	r2, r2, r1, r3
900237b4:	10c3      	asrs	r3, r0, #3
900237b6:	fb17 f704 	smulbb	r7, r7, r4
900237ba:	00c0      	lsls	r0, r0, #3
900237bc:	b292      	uxth	r2, r2
900237be:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900237c2:	b2c0      	uxtb	r0, r0
900237c4:	fb03 c301 	mla	r3, r3, r1, ip
900237c8:	f102 0c01 	add.w	ip, r2, #1
900237cc:	fb00 7001 	mla	r0, r0, r1, r7
900237d0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900237d4:	b280      	uxth	r0, r0
900237d6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
900237da:	b29b      	uxth	r3, r3
900237dc:	1c42      	adds	r2, r0, #1
900237de:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900237e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900237e6:	ea42 020c 	orr.w	r2, r2, ip
900237ea:	f103 0c01 	add.w	ip, r3, #1
900237ee:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900237f2:	095b      	lsrs	r3, r3, #5
900237f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900237f8:	431a      	orrs	r2, r3
900237fa:	f8a9 2000 	strh.w	r2, [r9]
900237fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023800:	f109 0902 	add.w	r9, r9, #2
90023804:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023806:	f10b 3bff 	add.w	fp, fp, #4294967295
9002380a:	441a      	add	r2, r3
9002380c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002380e:	9229      	str	r2, [sp, #164]	; 0xa4
90023810:	441d      	add	r5, r3
90023812:	e63d      	b.n	90023490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023814:	2800      	cmp	r0, #0
90023816:	f43f aedd 	beq.w	900235d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002381a:	5c79      	ldrb	r1, [r7, r1]
9002381c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023820:	910b      	str	r1, [sp, #44]	; 0x2c
90023822:	0e09      	lsrs	r1, r1, #24
90023824:	9114      	str	r1, [sp, #80]	; 0x50
90023826:	e6d5      	b.n	900235d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023828:	b01f      	add	sp, #124	; 0x7c
9002382a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002382e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002382e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023832:	b089      	sub	sp, #36	; 0x24
90023834:	9101      	str	r1, [sp, #4]
90023836:	9801      	ldr	r0, [sp, #4]
90023838:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002383c:	8800      	ldrh	r0, [r0, #0]
9002383e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90023842:	1206      	asrs	r6, r0, #8
90023844:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90023848:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
9002384c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90023850:	9602      	str	r6, [sp, #8]
90023852:	10c6      	asrs	r6, r0, #3
90023854:	00c0      	lsls	r0, r0, #3
90023856:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002385a:	b2c0      	uxtb	r0, r0
9002385c:	9603      	str	r6, [sp, #12]
9002385e:	9004      	str	r0, [sp, #16]
90023860:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90023864:	fb07 100c 	mla	r0, r7, ip, r1
90023868:	2f00      	cmp	r7, #0
9002386a:	eb02 0e00 	add.w	lr, r2, r0
9002386e:	f2c0 810a 	blt.w	90023a86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023872:	45b8      	cmp	r8, r7
90023874:	f340 8107 	ble.w	90023a86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023878:	2900      	cmp	r1, #0
9002387a:	f2c0 8102 	blt.w	90023a82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002387e:	458c      	cmp	ip, r1
90023880:	f340 80ff 	ble.w	90023a82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023884:	5c12      	ldrb	r2, [r2, r0]
90023886:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002388a:	1c4a      	adds	r2, r1, #1
9002388c:	f100 80fe 	bmi.w	90023a8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023890:	4594      	cmp	ip, r2
90023892:	f340 80fb 	ble.w	90023a8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023896:	2d00      	cmp	r5, #0
90023898:	f000 80fa 	beq.w	90023a90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
9002389c:	f89e 2001 	ldrb.w	r2, [lr, #1]
900238a0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900238a4:	3701      	adds	r7, #1
900238a6:	f100 80f7 	bmi.w	90023a98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900238aa:	45b8      	cmp	r8, r7
900238ac:	f340 80f4 	ble.w	90023a98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900238b0:	2c00      	cmp	r4, #0
900238b2:	f000 80f4 	beq.w	90023a9e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
900238b6:	2900      	cmp	r1, #0
900238b8:	eb0e 020c 	add.w	r2, lr, ip
900238bc:	f2c0 80ea 	blt.w	90023a94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900238c0:	458c      	cmp	ip, r1
900238c2:	f340 80e7 	ble.w	90023a94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900238c6:	f81e 700c 	ldrb.w	r7, [lr, ip]
900238ca:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
900238ce:	3101      	adds	r1, #1
900238d0:	f100 80e8 	bmi.w	90023aa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900238d4:	458c      	cmp	ip, r1
900238d6:	f340 80e5 	ble.w	90023aa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900238da:	2d00      	cmp	r5, #0
900238dc:	f000 80e4 	beq.w	90023aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900238e0:	7852      	ldrb	r2, [r2, #1]
900238e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900238e6:	0e0b      	lsrs	r3, r1, #24
900238e8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900238ec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900238f0:	9300      	str	r3, [sp, #0]
900238f2:	b2a4      	uxth	r4, r4
900238f4:	b2ab      	uxth	r3, r5
900238f6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900238fa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900238fe:	fb03 f904 	mul.w	r9, r3, r4
90023902:	011b      	lsls	r3, r3, #4
90023904:	fb0a f505 	mul.w	r5, sl, r5
90023908:	ea4f 6817 	mov.w	r8, r7, lsr #24
9002390c:	eba3 0e09 	sub.w	lr, r3, r9
90023910:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90023914:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90023918:	0a28      	lsrs	r0, r5, #8
9002391a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
9002391e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023922:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023926:	fb0a f303 	mul.w	r3, sl, r3
9002392a:	fb08 f707 	mul.w	r7, r8, r7
9002392e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90023932:	4405      	add	r5, r0
90023934:	fb08 fc0c 	mul.w	ip, r8, ip
90023938:	b2a4      	uxth	r4, r4
9002393a:	0a2d      	lsrs	r5, r5, #8
9002393c:	fa1f fe8e 	uxth.w	lr, lr
90023940:	1b12      	subs	r2, r2, r4
90023942:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90023946:	b292      	uxth	r2, r2
90023948:	9005      	str	r0, [sp, #20]
9002394a:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002394e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023952:	ea4f 201c 	mov.w	r0, ip, lsr #8
90023956:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002395a:	0a1b      	lsrs	r3, r3, #8
9002395c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023960:	9306      	str	r3, [sp, #24]
90023962:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90023966:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002396a:	4460      	add	r0, ip
9002396c:	fb0b f303 	mul.w	r3, fp, r3
90023970:	fb0b f606 	mul.w	r6, fp, r6
90023974:	0a00      	lsrs	r0, r0, #8
90023976:	0a1d      	lsrs	r5, r3, #8
90023978:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
9002397c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023980:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023984:	441d      	add	r5, r3
90023986:	f506 7380 	add.w	r3, r6, #256	; 0x100
9002398a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002398e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90023992:	0a2d      	lsrs	r5, r5, #8
90023994:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023998:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
9002399c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900239a0:	0a36      	lsrs	r6, r6, #8
900239a2:	0a1b      	lsrs	r3, r3, #8
900239a4:	fb05 f50e 	mul.w	r5, r5, lr
900239a8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
900239ac:	9307      	str	r3, [sp, #28]
900239ae:	0e0b      	lsrs	r3, r1, #24
900239b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900239b4:	fb0e f606 	mul.w	r6, lr, r6
900239b8:	435f      	muls	r7, r3
900239ba:	4359      	muls	r1, r3
900239bc:	9b05      	ldr	r3, [sp, #20]
900239be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900239c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900239c6:	fb03 5502 	mla	r5, r3, r2, r5
900239ca:	9b06      	ldr	r3, [sp, #24]
900239cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900239d0:	fb0e fe0b 	mul.w	lr, lr, fp
900239d4:	44bc      	add	ip, r7
900239d6:	f501 7780 	add.w	r7, r1, #256	; 0x100
900239da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900239de:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900239e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900239e6:	0a09      	lsrs	r1, r1, #8
900239e8:	fb0c 5509 	mla	r5, ip, r9, r5
900239ec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900239f0:	fb00 5504 	mla	r5, r0, r4, r5
900239f4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
900239f8:	9b07      	ldr	r3, [sp, #28]
900239fa:	fb02 6000 	mla	r0, r2, r0, r6
900239fe:	0a2d      	lsrs	r5, r5, #8
90023a00:	fb02 e20a 	mla	r2, r2, sl, lr
90023a04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023a08:	fb09 0001 	mla	r0, r9, r1, r0
90023a0c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023a10:	fb04 0003 	mla	r0, r4, r3, r0
90023a14:	9b00      	ldr	r3, [sp, #0]
90023a16:	fb04 2408 	mla	r4, r4, r8, r2
90023a1a:	9a04      	ldr	r2, [sp, #16]
90023a1c:	0a00      	lsrs	r0, r0, #8
90023a1e:	fb09 4903 	mla	r9, r9, r3, r4
90023a22:	9b02      	ldr	r3, [sp, #8]
90023a24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90023a28:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023a2c:	4305      	orrs	r5, r0
90023a2e:	fa5f f989 	uxtb.w	r9, r9
90023a32:	fb03 f109 	mul.w	r1, r3, r9
90023a36:	9b03      	ldr	r3, [sp, #12]
90023a38:	fb03 f309 	mul.w	r3, r3, r9
90023a3c:	fb02 f909 	mul.w	r9, r2, r9
90023a40:	1c4a      	adds	r2, r1, #1
90023a42:	1c58      	adds	r0, r3, #1
90023a44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023a48:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023a4c:	0c2a      	lsrs	r2, r5, #16
90023a4e:	0a2b      	lsrs	r3, r5, #8
90023a50:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90023a54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023a58:	0212      	lsls	r2, r2, #8
90023a5a:	00db      	lsls	r3, r3, #3
90023a5c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90023a60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023a64:	4313      	orrs	r3, r2
90023a66:	f109 0201 	add.w	r2, r9, #1
90023a6a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023a6e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90023a72:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90023a76:	431d      	orrs	r5, r3
90023a78:	9b01      	ldr	r3, [sp, #4]
90023a7a:	801d      	strh	r5, [r3, #0]
90023a7c:	b009      	add	sp, #36	; 0x24
90023a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023a82:	2000      	movs	r0, #0
90023a84:	e701      	b.n	9002388a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90023a86:	2600      	movs	r6, #0
90023a88:	4630      	mov	r0, r6
90023a8a:	e70b      	b.n	900238a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023a8c:	2600      	movs	r6, #0
90023a8e:	e709      	b.n	900238a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023a90:	462e      	mov	r6, r5
90023a92:	e707      	b.n	900238a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023a94:	2700      	movs	r7, #0
90023a96:	e71a      	b.n	900238ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023a98:	2100      	movs	r1, #0
90023a9a:	460f      	mov	r7, r1
90023a9c:	e723      	b.n	900238e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023a9e:	4621      	mov	r1, r4
90023aa0:	4627      	mov	r7, r4
90023aa2:	e720      	b.n	900238e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023aa4:	2100      	movs	r1, #0
90023aa6:	e71e      	b.n	900238e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023aa8:	4629      	mov	r1, r5
90023aaa:	e71c      	b.n	900238e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023aac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023ab0:	b09b      	sub	sp, #108	; 0x6c
90023ab2:	9218      	str	r2, [sp, #96]	; 0x60
90023ab4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023ab6:	9019      	str	r0, [sp, #100]	; 0x64
90023ab8:	9116      	str	r1, [sp, #88]	; 0x58
90023aba:	6850      	ldr	r0, [r2, #4]
90023abc:	9307      	str	r3, [sp, #28]
90023abe:	6812      	ldr	r2, [r2, #0]
90023ac0:	9d26      	ldr	r5, [sp, #152]	; 0x98
90023ac2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023ac6:	fb00 1303 	mla	r3, r0, r3, r1
90023aca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023ace:	930a      	str	r3, [sp, #40]	; 0x28
90023ad0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023ad2:	681b      	ldr	r3, [r3, #0]
90023ad4:	930f      	str	r3, [sp, #60]	; 0x3c
90023ad6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023ad8:	685e      	ldr	r6, [r3, #4]
90023ada:	3604      	adds	r6, #4
90023adc:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023ade:	2b00      	cmp	r3, #0
90023ae0:	dc03      	bgt.n	90023aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023ae2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023ae4:	2b00      	cmp	r3, #0
90023ae6:	f340 8373 	ble.w	900241d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023aea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023aec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023af0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023af4:	1e48      	subs	r0, r1, #1
90023af6:	1e57      	subs	r7, r2, #1
90023af8:	9b07      	ldr	r3, [sp, #28]
90023afa:	2b00      	cmp	r3, #0
90023afc:	f340 818f 	ble.w	90023e1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023b00:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023b02:	142b      	asrs	r3, r5, #16
90023b04:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023b08:	d406      	bmi.n	90023b18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023b0a:	4584      	cmp	ip, r0
90023b0c:	da04      	bge.n	90023b18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023b0e:	2b00      	cmp	r3, #0
90023b10:	db02      	blt.n	90023b18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023b12:	42bb      	cmp	r3, r7
90023b14:	f2c0 8184 	blt.w	90023e20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023b18:	f11c 0c01 	adds.w	ip, ip, #1
90023b1c:	f100 8172 	bmi.w	90023e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023b20:	4561      	cmp	r1, ip
90023b22:	f2c0 816f 	blt.w	90023e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023b26:	3301      	adds	r3, #1
90023b28:	f100 816c 	bmi.w	90023e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023b2c:	429a      	cmp	r2, r3
90023b2e:	f2c0 8169 	blt.w	90023e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023b32:	9b07      	ldr	r3, [sp, #28]
90023b34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023b36:	9317      	str	r3, [sp, #92]	; 0x5c
90023b38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023b3a:	2b00      	cmp	r3, #0
90023b3c:	f340 818e 	ble.w	90023e5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023b40:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023b42:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023b46:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023b4a:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023b4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023b50:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023b54:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023b56:	141b      	asrs	r3, r3, #16
90023b58:	f100 81d1 	bmi.w	90023efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b5c:	f101 38ff 	add.w	r8, r1, #4294967295
90023b60:	4543      	cmp	r3, r8
90023b62:	f280 81cc 	bge.w	90023efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b66:	f1bc 0f00 	cmp.w	ip, #0
90023b6a:	f2c0 81c8 	blt.w	90023efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b6e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023b72:	45c4      	cmp	ip, r8
90023b74:	f280 81c3 	bge.w	90023efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023b78:	b209      	sxth	r1, r1
90023b7a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023b7c:	fb0c 3301 	mla	r3, ip, r1, r3
90023b80:	eb04 0803 	add.w	r8, r4, r3
90023b84:	5ce3      	ldrb	r3, [r4, r3]
90023b86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023b8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023b8e:	2a00      	cmp	r2, #0
90023b90:	f000 81aa 	beq.w	90023ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90023b94:	f898 c001 	ldrb.w	ip, [r8, #1]
90023b98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023b9c:	940b      	str	r4, [sp, #44]	; 0x2c
90023b9e:	0e24      	lsrs	r4, r4, #24
90023ba0:	9412      	str	r4, [sp, #72]	; 0x48
90023ba2:	b178      	cbz	r0, 90023bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023ba4:	eb08 0c01 	add.w	ip, r8, r1
90023ba8:	f818 1001 	ldrb.w	r1, [r8, r1]
90023bac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023bb0:	9108      	str	r1, [sp, #32]
90023bb2:	0e09      	lsrs	r1, r1, #24
90023bb4:	9110      	str	r1, [sp, #64]	; 0x40
90023bb6:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023bba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023bbe:	910c      	str	r1, [sp, #48]	; 0x30
90023bc0:	0e09      	lsrs	r1, r1, #24
90023bc2:	9113      	str	r1, [sp, #76]	; 0x4c
90023bc4:	b292      	uxth	r2, r2
90023bc6:	9912      	ldr	r1, [sp, #72]	; 0x48
90023bc8:	b280      	uxth	r0, r0
90023bca:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023bcc:	fb02 f900 	mul.w	r9, r2, r0
90023bd0:	0112      	lsls	r2, r2, #4
90023bd2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023bd6:	eba2 0809 	sub.w	r8, r2, r9
90023bda:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023bde:	b280      	uxth	r0, r0
90023be0:	fa1f f888 	uxth.w	r8, r8
90023be4:	1a12      	subs	r2, r2, r0
90023be6:	fb08 f101 	mul.w	r1, r8, r1
90023bea:	b292      	uxth	r2, r2
90023bec:	fb02 110e 	mla	r1, r2, lr, r1
90023bf0:	fb00 1104 	mla	r1, r0, r4, r1
90023bf4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023bf6:	fb09 1104 	mla	r1, r9, r4, r1
90023bfa:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023bfe:	2900      	cmp	r1, #0
90023c00:	f000 80f5 	beq.w	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023c04:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023c08:	d01b      	beq.n	90023c42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023c0a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023c0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023c12:	fb0e fa0a 	mul.w	sl, lr, sl
90023c16:	fb0e fe03 	mul.w	lr, lr, r3
90023c1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023c1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023c22:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023c26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023c2a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023c2e:	4453      	add	r3, sl
90023c30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023c34:	0a1b      	lsrs	r3, r3, #8
90023c36:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023c3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023c3e:	ea43 030c 	orr.w	r3, r3, ip
90023c42:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023c44:	2cff      	cmp	r4, #255	; 0xff
90023c46:	d021      	beq.n	90023c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023c48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023c4a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023c4e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023c50:	fb04 fb0b 	mul.w	fp, r4, fp
90023c54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023c56:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023c5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023c5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023c60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023c64:	fb04 fa0a 	mul.w	sl, r4, sl
90023c68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023c6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023c70:	44de      	add	lr, fp
90023c72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023c76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023c7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023c7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023c82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023c86:	ea4e 040a 	orr.w	r4, lr, sl
90023c8a:	940b      	str	r4, [sp, #44]	; 0x2c
90023c8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023c8e:	2cff      	cmp	r4, #255	; 0xff
90023c90:	d021      	beq.n	90023cd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023c92:	9c08      	ldr	r4, [sp, #32]
90023c94:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023c98:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023c9a:	fb04 fb0b 	mul.w	fp, r4, fp
90023c9e:	9c08      	ldr	r4, [sp, #32]
90023ca0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023ca4:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023ca6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023caa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023cae:	fb04 fa0a 	mul.w	sl, r4, sl
90023cb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023cb6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023cba:	44de      	add	lr, fp
90023cbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023cc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023cc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023cc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023ccc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023cd0:	ea4e 040a 	orr.w	r4, lr, sl
90023cd4:	9408      	str	r4, [sp, #32]
90023cd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023cd8:	2cff      	cmp	r4, #255	; 0xff
90023cda:	d021      	beq.n	90023d20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023cdc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023cde:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023ce2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023ce4:	fb04 fb0b 	mul.w	fp, r4, fp
90023ce8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023cea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023cee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023cf0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023cf4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023cf8:	fb04 fa0a 	mul.w	sl, r4, sl
90023cfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023d04:	44de      	add	lr, fp
90023d06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023d0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023d0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023d1a:	ea4e 040a 	orr.w	r4, lr, sl
90023d1e:	940c      	str	r4, [sp, #48]	; 0x30
90023d20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023d22:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023d26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023d2a:	43c9      	mvns	r1, r1
90023d2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023d30:	9c08      	ldr	r4, [sp, #32]
90023d32:	fb08 fc0c 	mul.w	ip, r8, ip
90023d36:	fb02 cc0e 	mla	ip, r2, lr, ip
90023d3a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023d3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023d40:	fb00 cc0e 	mla	ip, r0, lr, ip
90023d44:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023d48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023d4a:	fb09 cc0e 	mla	ip, r9, lr, ip
90023d4e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023d52:	fb08 f80e 	mul.w	r8, r8, lr
90023d56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023d5a:	fa5f fe81 	uxtb.w	lr, r1
90023d5e:	fb02 8303 	mla	r3, r2, r3, r8
90023d62:	9a08      	ldr	r2, [sp, #32]
90023d64:	f8b7 8000 	ldrh.w	r8, [r7]
90023d68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023d6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023d70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023d72:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90023d76:	fb00 330a 	mla	r3, r0, sl, r3
90023d7a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90023d7e:	ea4f 2228 	mov.w	r2, r8, asr #8
90023d82:	fb09 3900 	mla	r9, r9, r0, r3
90023d86:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023d8a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023d8e:	b2c9      	uxtb	r1, r1
90023d90:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023d94:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023d98:	fb02 f20e 	mul.w	r2, r2, lr
90023d9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023da0:	fb00 f00e 	mul.w	r0, r0, lr
90023da4:	1c53      	adds	r3, r2, #1
90023da6:	fb01 f10e 	mul.w	r1, r1, lr
90023daa:	ea4c 0c09 	orr.w	ip, ip, r9
90023dae:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90023db2:	ea4f 431c 	mov.w	r3, ip, lsr #16
90023db6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023dba:	4a60      	ldr	r2, [pc, #384]	; (90023f3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023dbc:	b2db      	uxtb	r3, r3
90023dbe:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90023dc2:	1c43      	adds	r3, r0, #1
90023dc4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023dc8:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023dcc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023dd0:	00db      	lsls	r3, r3, #3
90023dd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023dd6:	4313      	orrs	r3, r2
90023dd8:	1c4a      	adds	r2, r1, #1
90023dda:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023dde:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023de2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023de6:	ea4c 0c03 	orr.w	ip, ip, r3
90023dea:	f8a7 c000 	strh.w	ip, [r7]
90023dee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023df0:	3702      	adds	r7, #2
90023df2:	9a25      	ldr	r2, [sp, #148]	; 0x94
90023df4:	441a      	add	r2, r3
90023df6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023df8:	441d      	add	r5, r3
90023dfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023dfc:	9225      	str	r2, [sp, #148]	; 0x94
90023dfe:	3b01      	subs	r3, #1
90023e00:	9317      	str	r3, [sp, #92]	; 0x5c
90023e02:	e699      	b.n	90023b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023e04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023e06:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023e08:	441c      	add	r4, r3
90023e0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023e0c:	441d      	add	r5, r3
90023e0e:	9b07      	ldr	r3, [sp, #28]
90023e10:	9425      	str	r4, [sp, #148]	; 0x94
90023e12:	3b01      	subs	r3, #1
90023e14:	9307      	str	r3, [sp, #28]
90023e16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023e18:	3302      	adds	r3, #2
90023e1a:	930a      	str	r3, [sp, #40]	; 0x28
90023e1c:	e66c      	b.n	90023af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023e1e:	d024      	beq.n	90023e6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90023e20:	9b07      	ldr	r3, [sp, #28]
90023e22:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023e24:	3b01      	subs	r3, #1
90023e26:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023e28:	fb00 4003 	mla	r0, r0, r3, r4
90023e2c:	1400      	asrs	r0, r0, #16
90023e2e:	f53f ae80 	bmi.w	90023b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023e32:	3901      	subs	r1, #1
90023e34:	4288      	cmp	r0, r1
90023e36:	f6bf ae7c 	bge.w	90023b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023e3a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023e3c:	fb01 5303 	mla	r3, r1, r3, r5
90023e40:	141b      	asrs	r3, r3, #16
90023e42:	f53f ae76 	bmi.w	90023b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023e46:	3a01      	subs	r2, #1
90023e48:	4293      	cmp	r3, r2
90023e4a:	f6bf ae72 	bge.w	90023b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023e4e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023e52:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90023e56:	f1bb 0f00 	cmp.w	fp, #0
90023e5a:	dc71      	bgt.n	90023f40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023e5c:	9b07      	ldr	r3, [sp, #28]
90023e5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023e62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023e64:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023e68:	930a      	str	r3, [sp, #40]	; 0x28
90023e6a:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023e6c:	2b00      	cmp	r3, #0
90023e6e:	f340 81af 	ble.w	900241d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023e72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023e76:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023e78:	ee30 0a04 	vadd.f32	s0, s0, s8
90023e7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023e80:	eef0 6a62 	vmov.f32	s13, s5
90023e84:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023e88:	ee31 1a05 	vadd.f32	s2, s2, s10
90023e8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e90:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90023e94:	eef0 6a43 	vmov.f32	s13, s6
90023e98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e9c:	ee16 5a90 	vmov	r5, s13
90023ea0:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023ea4:	ee61 7a27 	vmul.f32	s15, s2, s15
90023ea8:	ee77 2a62 	vsub.f32	s5, s14, s5
90023eac:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023eb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023eb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023eb8:	ee12 2a90 	vmov	r2, s5
90023ebc:	eef0 2a47 	vmov.f32	s5, s14
90023ec0:	fb92 f3f3 	sdiv	r3, r2, r3
90023ec4:	ee13 2a10 	vmov	r2, s6
90023ec8:	9327      	str	r3, [sp, #156]	; 0x9c
90023eca:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023ecc:	eeb0 3a67 	vmov.f32	s6, s15
90023ed0:	fb92 f3f3 	sdiv	r3, r2, r3
90023ed4:	9328      	str	r3, [sp, #160]	; 0xa0
90023ed6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023ed8:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023eda:	3b01      	subs	r3, #1
90023edc:	9316      	str	r3, [sp, #88]	; 0x58
90023ede:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023ee0:	bf08      	it	eq
90023ee2:	4613      	moveq	r3, r2
90023ee4:	9307      	str	r3, [sp, #28]
90023ee6:	e5f9      	b.n	90023adc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023ee8:	2800      	cmp	r0, #0
90023eea:	f43f ae6b 	beq.w	90023bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023eee:	f818 1001 	ldrb.w	r1, [r8, r1]
90023ef2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023ef6:	9108      	str	r1, [sp, #32]
90023ef8:	0e09      	lsrs	r1, r1, #24
90023efa:	9110      	str	r1, [sp, #64]	; 0x40
90023efc:	e662      	b.n	90023bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023efe:	f113 0801 	adds.w	r8, r3, #1
90023f02:	f53f af74 	bmi.w	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023f06:	4541      	cmp	r1, r8
90023f08:	f6ff af71 	blt.w	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023f0c:	f11c 0801 	adds.w	r8, ip, #1
90023f10:	f53f af6d 	bmi.w	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023f14:	45c6      	cmp	lr, r8
90023f16:	f6ff af6a 	blt.w	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023f1a:	b209      	sxth	r1, r1
90023f1c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90023f20:	fa0f f38e 	sxth.w	r3, lr
90023f24:	9100      	str	r1, [sp, #0]
90023f26:	4639      	mov	r1, r7
90023f28:	9301      	str	r3, [sp, #4]
90023f2a:	4633      	mov	r3, r6
90023f2c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90023f30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023f32:	9819      	ldr	r0, [sp, #100]	; 0x64
90023f34:	f7ff fc7b 	bl	9002382e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90023f38:	e759      	b.n	90023dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023f3a:	bf00      	nop
90023f3c:	fffff800 	.word	0xfffff800
90023f40:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023f42:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023f46:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023f48:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023f4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023f4e:	1427      	asrs	r7, r4, #16
90023f50:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023f52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023f56:	142b      	asrs	r3, r5, #16
90023f58:	fb01 7303 	mla	r3, r1, r3, r7
90023f5c:	18e7      	adds	r7, r4, r3
90023f5e:	5ce3      	ldrb	r3, [r4, r3]
90023f60:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023f64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023f68:	2a00      	cmp	r2, #0
90023f6a:	f000 8127 	beq.w	900241bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90023f6e:	f897 e001 	ldrb.w	lr, [r7, #1]
90023f72:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90023f76:	940d      	str	r4, [sp, #52]	; 0x34
90023f78:	0e24      	lsrs	r4, r4, #24
90023f7a:	9414      	str	r4, [sp, #80]	; 0x50
90023f7c:	b170      	cbz	r0, 90023f9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023f7e:	eb07 0e01 	add.w	lr, r7, r1
90023f82:	5c79      	ldrb	r1, [r7, r1]
90023f84:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023f88:	9109      	str	r1, [sp, #36]	; 0x24
90023f8a:	0e09      	lsrs	r1, r1, #24
90023f8c:	9111      	str	r1, [sp, #68]	; 0x44
90023f8e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90023f92:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023f96:	910e      	str	r1, [sp, #56]	; 0x38
90023f98:	0e09      	lsrs	r1, r1, #24
90023f9a:	9115      	str	r1, [sp, #84]	; 0x54
90023f9c:	b292      	uxth	r2, r2
90023f9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023fa0:	b280      	uxth	r0, r0
90023fa2:	fb02 f800 	mul.w	r8, r2, r0
90023fa6:	0112      	lsls	r2, r2, #4
90023fa8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023fac:	eba2 0e08 	sub.w	lr, r2, r8
90023fb0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90023fb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
90023fb6:	b280      	uxth	r0, r0
90023fb8:	fa1f fe8e 	uxth.w	lr, lr
90023fbc:	1a09      	subs	r1, r1, r0
90023fbe:	fb0e f202 	mul.w	r2, lr, r2
90023fc2:	b289      	uxth	r1, r1
90023fc4:	fb01 220c 	mla	r2, r1, ip, r2
90023fc8:	fb00 2204 	mla	r2, r0, r4, r2
90023fcc:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023fce:	fb08 2204 	mla	r2, r8, r4, r2
90023fd2:	f3c2 2207 	ubfx	r2, r2, #8, #8
90023fd6:	2a00      	cmp	r2, #0
90023fd8:	f000 80e5 	beq.w	900241a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90023fdc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023fe0:	d019      	beq.n	90024016 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90023fe2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023fe6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023fea:	fb0c fa0a 	mul.w	sl, ip, sl
90023fee:	fb0c fc03 	mul.w	ip, ip, r3
90023ff2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023ff6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023ffa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023ffe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024002:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024006:	4453      	add	r3, sl
90024008:	0a3f      	lsrs	r7, r7, #8
9002400a:	0a1b      	lsrs	r3, r3, #8
9002400c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024010:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024014:	433b      	orrs	r3, r7
90024016:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024018:	2cff      	cmp	r4, #255	; 0xff
9002401a:	d020      	beq.n	9002405e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
9002401c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002401e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90024022:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024024:	4367      	muls	r7, r4
90024026:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024028:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002402c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024030:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024032:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024036:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002403a:	fb04 fa0a 	mul.w	sl, r4, sl
9002403e:	44bc      	add	ip, r7
90024040:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024044:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024048:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002404c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024050:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024054:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024058:	ea4c 040a 	orr.w	r4, ip, sl
9002405c:	940d      	str	r4, [sp, #52]	; 0x34
9002405e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024060:	2cff      	cmp	r4, #255	; 0xff
90024062:	d020      	beq.n	900240a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90024064:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024066:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002406a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002406c:	4367      	muls	r7, r4
9002406e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024070:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024074:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024078:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002407a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002407e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024082:	fb04 fa0a 	mul.w	sl, r4, sl
90024086:	44bc      	add	ip, r7
90024088:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002408c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024090:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024094:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024098:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002409c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900240a0:	ea4c 040a 	orr.w	r4, ip, sl
900240a4:	9409      	str	r4, [sp, #36]	; 0x24
900240a6:	9c15      	ldr	r4, [sp, #84]	; 0x54
900240a8:	2cff      	cmp	r4, #255	; 0xff
900240aa:	d020      	beq.n	900240ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900240ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900240ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900240b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
900240b4:	4367      	muls	r7, r4
900240b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900240b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900240bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900240c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
900240c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900240c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900240ca:	fb04 fa0a 	mul.w	sl, r4, sl
900240ce:	44bc      	add	ip, r7
900240d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900240d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900240dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900240e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900240e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900240e8:	ea4c 040a 	orr.w	r4, ip, sl
900240ec:	940e      	str	r4, [sp, #56]	; 0x38
900240ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900240f0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900240f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900240f8:	43d2      	mvns	r2, r2
900240fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900240fe:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024100:	b2d2      	uxtb	r2, r2
90024102:	fb0e f707 	mul.w	r7, lr, r7
90024106:	fb01 770c 	mla	r7, r1, ip, r7
9002410a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002410e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024110:	fb00 770c 	mla	r7, r0, ip, r7
90024114:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024118:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002411a:	fb08 770c 	mla	r7, r8, ip, r7
9002411e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90024122:	fb0e fe0c 	mul.w	lr, lr, ip
90024126:	0a3f      	lsrs	r7, r7, #8
90024128:	fb01 e303 	mla	r3, r1, r3, lr
9002412c:	9909      	ldr	r1, [sp, #36]	; 0x24
9002412e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90024132:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90024136:	990e      	ldr	r1, [sp, #56]	; 0x38
90024138:	fb00 330a 	mla	r3, r0, sl, r3
9002413c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90024140:	fb08 3c0c 	mla	ip, r8, ip, r3
90024144:	f8b9 3000 	ldrh.w	r3, [r9]
90024148:	1218      	asrs	r0, r3, #8
9002414a:	10d9      	asrs	r1, r3, #3
9002414c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024150:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024154:	00db      	lsls	r3, r3, #3
90024156:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002415a:	4350      	muls	r0, r2
9002415c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024160:	b2db      	uxtb	r3, r3
90024162:	4351      	muls	r1, r2
90024164:	ea47 070c 	orr.w	r7, r7, ip
90024168:	4353      	muls	r3, r2
9002416a:	1c42      	adds	r2, r0, #1
9002416c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024170:	0c3a      	lsrs	r2, r7, #16
90024172:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024176:	4a18      	ldr	r2, [pc, #96]	; (900241d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024178:	b2c0      	uxtb	r0, r0
9002417a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002417e:	1c4a      	adds	r2, r1, #1
90024180:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024184:	0a3a      	lsrs	r2, r7, #8
90024186:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002418a:	00c9      	lsls	r1, r1, #3
9002418c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024190:	4301      	orrs	r1, r0
90024192:	1c58      	adds	r0, r3, #1
90024194:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024198:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002419c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900241a0:	4308      	orrs	r0, r1
900241a2:	f8a9 0000 	strh.w	r0, [r9]
900241a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900241a8:	f109 0902 	add.w	r9, r9, #2
900241ac:	9a25      	ldr	r2, [sp, #148]	; 0x94
900241ae:	f10b 3bff 	add.w	fp, fp, #4294967295
900241b2:	441a      	add	r2, r3
900241b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900241b6:	9225      	str	r2, [sp, #148]	; 0x94
900241b8:	441d      	add	r5, r3
900241ba:	e64c      	b.n	90023e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900241bc:	2800      	cmp	r0, #0
900241be:	f43f aeed 	beq.w	90023f9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900241c2:	5c79      	ldrb	r1, [r7, r1]
900241c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900241c8:	9109      	str	r1, [sp, #36]	; 0x24
900241ca:	0e09      	lsrs	r1, r1, #24
900241cc:	9111      	str	r1, [sp, #68]	; 0x44
900241ce:	e6e5      	b.n	90023f9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900241d0:	b01b      	add	sp, #108	; 0x6c
900241d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900241d6:	bf00      	nop
900241d8:	fffff800 	.word	0xfffff800

900241dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900241dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900241e0:	b085      	sub	sp, #20
900241e2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900241e6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900241ea:	2800      	cmp	r0, #0
900241ec:	9103      	str	r1, [sp, #12]
900241ee:	fb00 7406 	mla	r4, r0, r6, r7
900241f2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900241f6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900241fa:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900241fe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024202:	eb03 0904 	add.w	r9, r3, r4
90024206:	9501      	str	r5, [sp, #4]
90024208:	f2c0 8150 	blt.w	900244ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002420c:	4583      	cmp	fp, r0
9002420e:	f340 814d 	ble.w	900244ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024212:	2f00      	cmp	r7, #0
90024214:	f2c0 8146 	blt.w	900244a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024218:	42be      	cmp	r6, r7
9002421a:	f340 8143 	ble.w	900244a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002421e:	f813 c004 	ldrb.w	ip, [r3, r4]
90024222:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90024226:	f64f 041f 	movw	r4, #63519	; 0xf81f
9002422a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002422e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90024232:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024236:	4355      	muls	r5, r2
90024238:	fb0c f203 	mul.w	r2, ip, r3
9002423c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024240:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024244:	441d      	add	r5, r3
90024246:	f102 0320 	add.w	r3, r2, #32
9002424a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002424e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024252:	0a1b      	lsrs	r3, r3, #8
90024254:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024258:	431c      	orrs	r4, r3
9002425a:	1c7b      	adds	r3, r7, #1
9002425c:	f100 812b 	bmi.w	900244b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024260:	429e      	cmp	r6, r3
90024262:	f340 8128 	ble.w	900244b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024266:	2900      	cmp	r1, #0
90024268:	f000 8128 	beq.w	900244bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
9002426c:	9a01      	ldr	r2, [sp, #4]
9002426e:	f899 3001 	ldrb.w	r3, [r9, #1]
90024272:	8855      	ldrh	r5, [r2, #2]
90024274:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024278:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9002427c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024280:	fb08 f802 	mul.w	r8, r8, r2
90024284:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024288:	435d      	muls	r5, r3
9002428a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002428e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024292:	44d0      	add	r8, sl
90024294:	f105 0a20 	add.w	sl, r5, #32
90024298:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002429c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900242a0:	0a2d      	lsrs	r5, r5, #8
900242a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900242a6:	432a      	orrs	r2, r5
900242a8:	3001      	adds	r0, #1
900242aa:	f100 810d 	bmi.w	900244c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900242ae:	4583      	cmp	fp, r0
900242b0:	f340 810a 	ble.w	900244c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900242b4:	f1be 0f00 	cmp.w	lr, #0
900242b8:	f000 810b 	beq.w	900244d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
900242bc:	2f00      	cmp	r7, #0
900242be:	f2c0 8100 	blt.w	900244c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900242c2:	42be      	cmp	r6, r7
900242c4:	f340 80fd 	ble.w	900244c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900242c8:	9801      	ldr	r0, [sp, #4]
900242ca:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
900242ce:	f819 5006 	ldrb.w	r5, [r9, r6]
900242d2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900242d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900242da:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
900242de:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900242e2:	fb0a fa00 	mul.w	sl, sl, r0
900242e6:	fb05 f808 	mul.w	r8, r5, r8
900242ea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900242ee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900242f2:	4482      	add	sl, r0
900242f4:	f108 0020 	add.w	r0, r8, #32
900242f8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900242fc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024300:	0a00      	lsrs	r0, r0, #8
90024302:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024306:	ea4b 0b00 	orr.w	fp, fp, r0
9002430a:	3701      	adds	r7, #1
9002430c:	f100 80e6 	bmi.w	900244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024310:	42be      	cmp	r6, r7
90024312:	f340 80e3 	ble.w	900244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024316:	2900      	cmp	r1, #0
90024318:	f000 80e3 	beq.w	900244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
9002431c:	3601      	adds	r6, #1
9002431e:	9801      	ldr	r0, [sp, #4]
90024320:	f819 7006 	ldrb.w	r7, [r9, r6]
90024324:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024328:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002432c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90024330:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024334:	fb09 f906 	mul.w	r9, r9, r6
90024338:	fb07 f800 	mul.w	r8, r7, r0
9002433c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90024340:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024344:	f609 0901 	addw	r9, r9, #2049	; 0x801
90024348:	44d1      	add	r9, sl
9002434a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002434e:	f108 0020 	add.w	r0, r8, #32
90024352:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024356:	0a00      	lsrs	r0, r0, #8
90024358:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002435c:	4330      	orrs	r0, r6
9002435e:	b28e      	uxth	r6, r1
90024360:	fa1f f98e 	uxth.w	r9, lr
90024364:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024368:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002436c:	fb06 f809 	mul.w	r8, r6, r9
90024370:	0136      	lsls	r6, r6, #4
90024372:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024376:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002437a:	9601      	str	r6, [sp, #4]
9002437c:	ea4a 0404 	orr.w	r4, sl, r4
90024380:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024384:	fa1f f689 	uxth.w	r6, r9
90024388:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002438c:	fb11 f90e 	smulbb	r9, r1, lr
90024390:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024394:	9602      	str	r6, [sp, #8]
90024396:	4626      	mov	r6, r4
90024398:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002439c:	f1ce 0410 	rsb	r4, lr, #16
900243a0:	ea4a 0202 	orr.w	r2, sl, r2
900243a4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900243a8:	1a64      	subs	r4, r4, r1
900243aa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900243ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900243b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900243b6:	434a      	muls	r2, r1
900243b8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900243bc:	ea4a 0000 	orr.w	r0, sl, r0
900243c0:	9903      	ldr	r1, [sp, #12]
900243c2:	fb04 2406 	mla	r4, r4, r6, r2
900243c6:	9e02      	ldr	r6, [sp, #8]
900243c8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900243cc:	fb09 4200 	mla	r2, r9, r0, r4
900243d0:	ea4f 440b 	mov.w	r4, fp, lsl #16
900243d4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900243d8:	8808      	ldrh	r0, [r1, #0]
900243da:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900243de:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
900243e2:	ea44 0b0b 	orr.w	fp, r4, fp
900243e6:	9c01      	ldr	r4, [sp, #4]
900243e8:	b289      	uxth	r1, r1
900243ea:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
900243ee:	fb0e 2e0b 	mla	lr, lr, fp, r2
900243f2:	1ba4      	subs	r4, r4, r6
900243f4:	9e01      	ldr	r6, [sp, #4]
900243f6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900243fa:	eba6 0608 	sub.w	r6, r6, r8
900243fe:	b2a4      	uxth	r4, r4
90024400:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024404:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024408:	b2b6      	uxth	r6, r6
9002440a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002440e:	4373      	muls	r3, r6
90024410:	ea42 0e0e 	orr.w	lr, r2, lr
90024414:	fb0c 3304 	mla	r3, ip, r4, r3
90024418:	9c02      	ldr	r4, [sp, #8]
9002441a:	fa1f f28e 	uxth.w	r2, lr
9002441e:	fb04 3505 	mla	r5, r4, r5, r3
90024422:	10d4      	asrs	r4, r2, #3
90024424:	fb08 5707 	mla	r7, r8, r7, r5
90024428:	1215      	asrs	r5, r2, #8
9002442a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002442e:	00d2      	lsls	r2, r2, #3
90024430:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024434:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024438:	b2d2      	uxtb	r2, r2
9002443a:	434f      	muls	r7, r1
9002443c:	1c7b      	adds	r3, r7, #1
9002443e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024442:	1203      	asrs	r3, r0, #8
90024444:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024448:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002444c:	b2ff      	uxtb	r7, r7
9002444e:	fb13 f307 	smulbb	r3, r3, r7
90024452:	fb05 3501 	mla	r5, r5, r1, r3
90024456:	10c3      	asrs	r3, r0, #3
90024458:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002445c:	b2ad      	uxth	r5, r5
9002445e:	fb13 f307 	smulbb	r3, r3, r7
90024462:	fb04 3401 	mla	r4, r4, r1, r3
90024466:	00c3      	lsls	r3, r0, #3
90024468:	b2db      	uxtb	r3, r3
9002446a:	b2a4      	uxth	r4, r4
9002446c:	fb13 f307 	smulbb	r3, r3, r7
90024470:	fb02 3101 	mla	r1, r2, r1, r3
90024474:	1c6b      	adds	r3, r5, #1
90024476:	1c62      	adds	r2, r4, #1
90024478:	b289      	uxth	r1, r1
9002447a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002447e:	1c4b      	adds	r3, r1, #1
90024480:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024484:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024488:	9a03      	ldr	r2, [sp, #12]
9002448a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002448e:	0964      	lsrs	r4, r4, #5
90024490:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024494:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024498:	432b      	orrs	r3, r5
9002449a:	4323      	orrs	r3, r4
9002449c:	8013      	strh	r3, [r2, #0]
9002449e:	b005      	add	sp, #20
900244a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900244a4:	f04f 0c00 	mov.w	ip, #0
900244a8:	4664      	mov	r4, ip
900244aa:	e6d6      	b.n	9002425a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900244ac:	2300      	movs	r3, #0
900244ae:	469c      	mov	ip, r3
900244b0:	461a      	mov	r2, r3
900244b2:	461c      	mov	r4, r3
900244b4:	e6f8      	b.n	900242a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900244b6:	2300      	movs	r3, #0
900244b8:	461a      	mov	r2, r3
900244ba:	e6f5      	b.n	900242a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900244bc:	460b      	mov	r3, r1
900244be:	460a      	mov	r2, r1
900244c0:	e6f2      	b.n	900242a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900244c2:	2500      	movs	r5, #0
900244c4:	46ab      	mov	fp, r5
900244c6:	e720      	b.n	9002430a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900244c8:	2700      	movs	r7, #0
900244ca:	463d      	mov	r5, r7
900244cc:	4638      	mov	r0, r7
900244ce:	46bb      	mov	fp, r7
900244d0:	e745      	b.n	9002435e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900244d2:	4677      	mov	r7, lr
900244d4:	4675      	mov	r5, lr
900244d6:	4670      	mov	r0, lr
900244d8:	46f3      	mov	fp, lr
900244da:	e740      	b.n	9002435e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900244dc:	2700      	movs	r7, #0
900244de:	4638      	mov	r0, r7
900244e0:	e73d      	b.n	9002435e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900244e2:	460f      	mov	r7, r1
900244e4:	4608      	mov	r0, r1
900244e6:	e73a      	b.n	9002435e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900244e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244ec:	b097      	sub	sp, #92	; 0x5c
900244ee:	9214      	str	r2, [sp, #80]	; 0x50
900244f0:	9308      	str	r3, [sp, #32]
900244f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900244f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900244f8:	9015      	str	r0, [sp, #84]	; 0x54
900244fa:	9312      	str	r3, [sp, #72]	; 0x48
900244fc:	6850      	ldr	r0, [r2, #4]
900244fe:	9111      	str	r1, [sp, #68]	; 0x44
90024500:	6812      	ldr	r2, [r2, #0]
90024502:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024506:	fb00 1303 	mla	r3, r0, r3, r1
9002450a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002450e:	9309      	str	r3, [sp, #36]	; 0x24
90024510:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024512:	681b      	ldr	r3, [r3, #0]
90024514:	930b      	str	r3, [sp, #44]	; 0x2c
90024516:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024518:	685b      	ldr	r3, [r3, #4]
9002451a:	930c      	str	r3, [sp, #48]	; 0x30
9002451c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90024520:	930a      	str	r3, [sp, #40]	; 0x28
90024522:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024524:	2b00      	cmp	r3, #0
90024526:	dc03      	bgt.n	90024530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024528:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002452a:	2b00      	cmp	r3, #0
9002452c:	f340 83cd 	ble.w	90024cca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024530:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024532:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024536:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002453a:	1e48      	subs	r0, r1, #1
9002453c:	1e55      	subs	r5, r2, #1
9002453e:	9b08      	ldr	r3, [sp, #32]
90024540:	2b00      	cmp	r3, #0
90024542:	f340 81a5 	ble.w	90024890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024546:	9e21      	ldr	r6, [sp, #132]	; 0x84
90024548:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002454a:	1436      	asrs	r6, r6, #16
9002454c:	ea4f 4323 	mov.w	r3, r3, asr #16
90024550:	d406      	bmi.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024552:	4286      	cmp	r6, r0
90024554:	da04      	bge.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024556:	2b00      	cmp	r3, #0
90024558:	db02      	blt.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002455a:	42ab      	cmp	r3, r5
9002455c:	f2c0 8199 	blt.w	90024892 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024560:	3601      	adds	r6, #1
90024562:	f100 8186 	bmi.w	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024566:	42b1      	cmp	r1, r6
90024568:	f2c0 8183 	blt.w	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002456c:	3301      	adds	r3, #1
9002456e:	f100 8180 	bmi.w	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024572:	429a      	cmp	r2, r3
90024574:	f2c0 817d 	blt.w	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024578:	9b08      	ldr	r3, [sp, #32]
9002457a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002457e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90024580:	9313      	str	r3, [sp, #76]	; 0x4c
90024582:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024584:	2b00      	cmp	r3, #0
90024586:	f340 81a6 	ble.w	900248d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002458a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002458c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002458e:	1418      	asrs	r0, r3, #16
90024590:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024592:	142d      	asrs	r5, r5, #16
90024594:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024598:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002459a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002459e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900245a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900245a4:	f100 81fa 	bmi.w	9002499c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900245a8:	f102 3eff 	add.w	lr, r2, #4294967295
900245ac:	4575      	cmp	r5, lr
900245ae:	f280 81f5 	bge.w	9002499c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900245b2:	2800      	cmp	r0, #0
900245b4:	f2c0 81f2 	blt.w	9002499c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900245b8:	f103 3eff 	add.w	lr, r3, #4294967295
900245bc:	4570      	cmp	r0, lr
900245be:	f280 81ed 	bge.w	9002499c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900245c2:	b212      	sxth	r2, r2
900245c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900245c6:	fa1f fe81 	uxth.w	lr, r1
900245ca:	fb00 5002 	mla	r0, r0, r2, r5
900245ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
900245d2:	eb03 0a00 	add.w	sl, r3, r0
900245d6:	f813 9000 	ldrb.w	r9, [r3, r0]
900245da:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900245de:	f89a 8001 	ldrb.w	r8, [sl, #1]
900245e2:	b29b      	uxth	r3, r3
900245e4:	f1bc 0f00 	cmp.w	ip, #0
900245e8:	f000 81bb 	beq.w	90024962 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900245ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
900245f0:	eb0a 0b02 	add.w	fp, sl, r2
900245f4:	fa1f fa8c 	uxth.w	sl, ip
900245f8:	940d      	str	r4, [sp, #52]	; 0x34
900245fa:	fb0a fe0e 	mul.w	lr, sl, lr
900245fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024602:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024606:	eba5 050e 	sub.w	r5, r5, lr
9002460a:	940e      	str	r4, [sp, #56]	; 0x38
9002460c:	fa1f fa8a 	uxth.w	sl, sl
90024610:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024612:	b2ad      	uxth	r5, r5
90024614:	eba3 030a 	sub.w	r3, r3, sl
90024618:	fb08 f505 	mul.w	r5, r8, r5
9002461c:	b29b      	uxth	r3, r3
9002461e:	fb09 5303 	mla	r3, r9, r3, r5
90024622:	fb0a 3304 	mla	r3, sl, r4, r3
90024626:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024628:	fb0e 3304 	mla	r3, lr, r4, r3
9002462c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024630:	2b00      	cmp	r3, #0
90024632:	f000 8111 	beq.w	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024636:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024638:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002463c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024640:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024644:	f000 8192 	beq.w	9002496c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024648:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002464c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024650:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024654:	fb0a fe0e 	mul.w	lr, sl, lr
90024658:	fb09 f000 	mul.w	r0, r9, r0
9002465c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024660:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90024664:	f100 0b20 	add.w	fp, r0, #32
90024668:	44ce      	add	lr, r9
9002466a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002466e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024672:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024676:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002467a:	ea4e 0909 	orr.w	r9, lr, r9
9002467e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024682:	8868      	ldrh	r0, [r5, #2]
90024684:	d019      	beq.n	900246ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024686:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002468a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002468e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024692:	fb0a fe0e 	mul.w	lr, sl, lr
90024696:	fb08 f800 	mul.w	r8, r8, r0
9002469a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002469e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900246a2:	f108 0b20 	add.w	fp, r8, #32
900246a6:	4486      	add	lr, r0
900246a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900246ac:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900246b0:	0a00      	lsrs	r0, r0, #8
900246b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900246b6:	ea4e 0000 	orr.w	r0, lr, r0
900246ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900246be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900246c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900246c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900246ca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900246ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900246d2:	ea4e 0909 	orr.w	r9, lr, r9
900246d6:	ea4a 0000 	orr.w	r0, sl, r0
900246da:	f1bc 0f00 	cmp.w	ip, #0
900246de:	f000 8147 	beq.w	90024970 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900246e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900246e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900246e8:	3a01      	subs	r2, #1
900246ea:	2cff      	cmp	r4, #255	; 0xff
900246ec:	ea4f 0242 	mov.w	r2, r2, lsl #1
900246f0:	f102 0202 	add.w	r2, r2, #2
900246f4:	eb05 0e02 	add.w	lr, r5, r2
900246f8:	5aaa      	ldrh	r2, [r5, r2]
900246fa:	d018      	beq.n	9002472e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900246fc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90024700:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024704:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024708:	fb04 fa02 	mul.w	sl, r4, r2
9002470c:	fb08 f805 	mul.w	r8, r8, r5
90024710:	f10a 0520 	add.w	r5, sl, #32
90024714:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024718:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002471c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024720:	4442      	add	r2, r8
90024722:	0a2d      	lsrs	r5, r5, #8
90024724:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024728:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002472c:	432a      	orrs	r2, r5
9002472e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024730:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024734:	2cff      	cmp	r4, #255	; 0xff
90024736:	d01a      	beq.n	9002476e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024738:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002473c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024740:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024744:	fb04 fa05 	mul.w	sl, r4, r5
90024748:	fb08 f80e 	mul.w	r8, r8, lr
9002474c:	f10a 0e20 	add.w	lr, sl, #32
90024750:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024754:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024758:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002475c:	4445      	add	r5, r8
9002475e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024762:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024766:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002476a:	ea45 050e 	orr.w	r5, r5, lr
9002476e:	fb1c fe01 	smulbb	lr, ip, r1
90024772:	f1cc 0810 	rsb	r8, ip, #16
90024776:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002477a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002477e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024782:	eba8 0801 	sub.w	r8, r8, r1
90024786:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002478a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002478e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024792:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90024796:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002479a:	ea4a 0202 	orr.w	r2, sl, r2
9002479e:	4341      	muls	r1, r0
900247a0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900247a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900247a8:	fb09 1108 	mla	r1, r9, r8, r1
900247ac:	ea4b 0505 	orr.w	r5, fp, r5
900247b0:	fb0c 1102 	mla	r1, ip, r2, r1
900247b4:	fb0e 1e05 	mla	lr, lr, r5, r1
900247b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900247bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900247c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900247c4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900247c8:	ea42 0e0e 	orr.w	lr, r2, lr
900247cc:	fa1f f28e 	uxth.w	r2, lr
900247d0:	2bff      	cmp	r3, #255	; 0xff
900247d2:	d103      	bne.n	900247dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900247d4:	9912      	ldr	r1, [sp, #72]	; 0x48
900247d6:	29ff      	cmp	r1, #255	; 0xff
900247d8:	f000 80de 	beq.w	90024998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900247dc:	990a      	ldr	r1, [sp, #40]	; 0x28
900247de:	1215      	asrs	r5, r2, #8
900247e0:	8838      	ldrh	r0, [r7, #0]
900247e2:	434b      	muls	r3, r1
900247e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900247e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900247ea:	f103 0c01 	add.w	ip, r3, #1
900247ee:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900247f2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900247f6:	fa5f fc83 	uxtb.w	ip, r3
900247fa:	1203      	asrs	r3, r0, #8
900247fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024800:	fb13 f30c 	smulbb	r3, r3, ip
90024804:	fb05 3501 	mla	r5, r5, r1, r3
90024808:	10c3      	asrs	r3, r0, #3
9002480a:	10d1      	asrs	r1, r2, #3
9002480c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024810:	00d2      	lsls	r2, r2, #3
90024812:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024816:	b2ad      	uxth	r5, r5
90024818:	fb13 f30c 	smulbb	r3, r3, ip
9002481c:	b2d2      	uxtb	r2, r2
9002481e:	fb01 3104 	mla	r1, r1, r4, r3
90024822:	00c3      	lsls	r3, r0, #3
90024824:	b2db      	uxtb	r3, r3
90024826:	b289      	uxth	r1, r1
90024828:	fb13 f30c 	smulbb	r3, r3, ip
9002482c:	fb02 3304 	mla	r3, r2, r4, r3
90024830:	b29a      	uxth	r2, r3
90024832:	1c6b      	adds	r3, r5, #1
90024834:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024838:	1c53      	adds	r3, r2, #1
9002483a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002483e:	1c4a      	adds	r2, r1, #1
90024840:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024844:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024848:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002484c:	0949      	lsrs	r1, r1, #5
9002484e:	432b      	orrs	r3, r5
90024850:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024854:	430b      	orrs	r3, r1
90024856:	803b      	strh	r3, [r7, #0]
90024858:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002485a:	3702      	adds	r7, #2
9002485c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002485e:	4413      	add	r3, r2
90024860:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024862:	9321      	str	r3, [sp, #132]	; 0x84
90024864:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024866:	441a      	add	r2, r3
90024868:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002486a:	3b01      	subs	r3, #1
9002486c:	9222      	str	r2, [sp, #136]	; 0x88
9002486e:	9313      	str	r3, [sp, #76]	; 0x4c
90024870:	e687      	b.n	90024582 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024872:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024874:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90024876:	9c22      	ldr	r4, [sp, #136]	; 0x88
90024878:	4433      	add	r3, r6
9002487a:	9321      	str	r3, [sp, #132]	; 0x84
9002487c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002487e:	441c      	add	r4, r3
90024880:	9b08      	ldr	r3, [sp, #32]
90024882:	3b01      	subs	r3, #1
90024884:	9422      	str	r4, [sp, #136]	; 0x88
90024886:	9308      	str	r3, [sp, #32]
90024888:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002488a:	3302      	adds	r3, #2
9002488c:	9309      	str	r3, [sp, #36]	; 0x24
9002488e:	e656      	b.n	9002453e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024890:	d028      	beq.n	900248e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024892:	9b08      	ldr	r3, [sp, #32]
90024894:	9823      	ldr	r0, [sp, #140]	; 0x8c
90024896:	3b01      	subs	r3, #1
90024898:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002489a:	fb00 5003 	mla	r0, r0, r3, r5
9002489e:	1400      	asrs	r0, r0, #16
900248a0:	f53f ae6a 	bmi.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900248a4:	3901      	subs	r1, #1
900248a6:	4288      	cmp	r0, r1
900248a8:	f6bf ae66 	bge.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900248ac:	9924      	ldr	r1, [sp, #144]	; 0x90
900248ae:	9822      	ldr	r0, [sp, #136]	; 0x88
900248b0:	fb01 0303 	mla	r3, r1, r3, r0
900248b4:	141b      	asrs	r3, r3, #16
900248b6:	f53f ae5f 	bmi.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900248ba:	3a01      	subs	r2, #1
900248bc:	4293      	cmp	r3, r2
900248be:	f6bf ae5b 	bge.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900248c2:	9b08      	ldr	r3, [sp, #32]
900248c4:	f64f 061f 	movw	r6, #63519	; 0xf81f
900248c8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900248cc:	9313      	str	r3, [sp, #76]	; 0x4c
900248ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900248d0:	2b00      	cmp	r3, #0
900248d2:	f300 8082 	bgt.w	900249da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900248d6:	9b08      	ldr	r3, [sp, #32]
900248d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900248dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900248de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900248e2:	9309      	str	r3, [sp, #36]	; 0x24
900248e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900248e6:	2b00      	cmp	r3, #0
900248e8:	f340 81ef 	ble.w	90024cca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900248ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900248f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900248f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900248f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900248fa:	eef0 6a62 	vmov.f32	s13, s5
900248fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024902:	ee31 1a05 	vadd.f32	s2, s2, s10
90024906:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002490a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
9002490e:	eef0 6a43 	vmov.f32	s13, s6
90024912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024916:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
9002491a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002491e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024922:	ee77 2a62 	vsub.f32	s5, s14, s5
90024926:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002492a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002492e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024932:	ee12 2a90 	vmov	r2, s5
90024936:	eef0 2a47 	vmov.f32	s5, s14
9002493a:	fb92 f3f3 	sdiv	r3, r2, r3
9002493e:	ee13 2a10 	vmov	r2, s6
90024942:	9323      	str	r3, [sp, #140]	; 0x8c
90024944:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024946:	eeb0 3a67 	vmov.f32	s6, s15
9002494a:	fb92 f3f3 	sdiv	r3, r2, r3
9002494e:	9324      	str	r3, [sp, #144]	; 0x90
90024950:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024952:	9a14      	ldr	r2, [sp, #80]	; 0x50
90024954:	3b01      	subs	r3, #1
90024956:	9311      	str	r3, [sp, #68]	; 0x44
90024958:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002495a:	bf08      	it	eq
9002495c:	4613      	moveq	r3, r2
9002495e:	9308      	str	r3, [sp, #32]
90024960:	e5df      	b.n	90024522 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024962:	fb08 f505 	mul.w	r5, r8, r5
90024966:	fb09 5303 	mla	r3, r9, r3, r5
9002496a:	e65f      	b.n	9002462c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
9002496c:	4681      	mov	r9, r0
9002496e:	e686      	b.n	9002467e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024970:	f1c1 0210 	rsb	r2, r1, #16
90024974:	4341      	muls	r1, r0
90024976:	fb09 1902 	mla	r9, r9, r2, r1
9002497a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002497e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024982:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024986:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002498a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002498e:	ea42 0909 	orr.w	r9, r2, r9
90024992:	fa1f f289 	uxth.w	r2, r9
90024996:	e71b      	b.n	900247d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024998:	803a      	strh	r2, [r7, #0]
9002499a:	e75d      	b.n	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002499c:	f115 0e01 	adds.w	lr, r5, #1
900249a0:	f53f af5a 	bmi.w	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900249a4:	4572      	cmp	r2, lr
900249a6:	f6ff af57 	blt.w	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900249aa:	f110 0e01 	adds.w	lr, r0, #1
900249ae:	f53f af53 	bmi.w	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900249b2:	4573      	cmp	r3, lr
900249b4:	f6ff af50 	blt.w	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900249b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
900249ba:	b21b      	sxth	r3, r3
900249bc:	b212      	sxth	r2, r2
900249be:	9502      	str	r5, [sp, #8]
900249c0:	9301      	str	r3, [sp, #4]
900249c2:	9200      	str	r2, [sp, #0]
900249c4:	e9cd 0103 	strd	r0, r1, [sp, #12]
900249c8:	e9cd c405 	strd	ip, r4, [sp, #20]
900249cc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900249d0:	4639      	mov	r1, r7
900249d2:	9815      	ldr	r0, [sp, #84]	; 0x54
900249d4:	f7ff fc02 	bl	900241dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900249d8:	e73e      	b.n	90024858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900249da:	9b21      	ldr	r3, [sp, #132]	; 0x84
900249dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900249e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900249e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900249e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900249e8:	fa1f fc82 	uxth.w	ip, r2
900249ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900249f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900249f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900249f6:	141f      	asrs	r7, r3, #16
900249f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900249fa:	141b      	asrs	r3, r3, #16
900249fc:	fb01 3707 	mla	r7, r1, r7, r3
90024a00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024a02:	eb03 0a07 	add.w	sl, r3, r7
90024a06:	f813 9007 	ldrb.w	r9, [r3, r7]
90024a0a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024a0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024a12:	b29b      	uxth	r3, r3
90024a14:	2d00      	cmp	r5, #0
90024a16:	f000 813d 	beq.w	90024c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024a1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024a1e:	eb0a 0b01 	add.w	fp, sl, r1
90024a22:	fa1f fa85 	uxth.w	sl, r5
90024a26:	940f      	str	r4, [sp, #60]	; 0x3c
90024a28:	fb0a fc0c 	mul.w	ip, sl, ip
90024a2c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024a30:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024a34:	eba0 000c 	sub.w	r0, r0, ip
90024a38:	9410      	str	r4, [sp, #64]	; 0x40
90024a3a:	fa1f fa8a 	uxth.w	sl, sl
90024a3e:	b280      	uxth	r0, r0
90024a40:	eba3 030a 	sub.w	r3, r3, sl
90024a44:	fb08 f000 	mul.w	r0, r8, r0
90024a48:	b29b      	uxth	r3, r3
90024a4a:	fb09 0303 	mla	r3, r9, r3, r0
90024a4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024a50:	fb0a 3300 	mla	r3, sl, r0, r3
90024a54:	fb0c 3304 	mla	r3, ip, r4, r3
90024a58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024a5c:	2b00      	cmp	r3, #0
90024a5e:	f000 810b 	beq.w	90024c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024a62:	980b      	ldr	r0, [sp, #44]	; 0x2c
90024a64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90024a68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024a6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024a6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024a72:	f000 8114 	beq.w	90024c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90024a76:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024a7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024a7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024a82:	fb0a fc0c 	mul.w	ip, sl, ip
90024a86:	fb09 f707 	mul.w	r7, r9, r7
90024a8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024a8e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024a92:	f107 0b20 	add.w	fp, r7, #32
90024a96:	44cc      	add	ip, r9
90024a98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024a9c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024aa0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024aa4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90024aa8:	ea4c 0909 	orr.w	r9, ip, r9
90024aac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024ab0:	8847      	ldrh	r7, [r0, #2]
90024ab2:	d019      	beq.n	90024ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024ab4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024ab8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024abc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024ac0:	fb0a fc0c 	mul.w	ip, sl, ip
90024ac4:	fb08 f807 	mul.w	r8, r8, r7
90024ac8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024acc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024ad0:	f108 0b20 	add.w	fp, r8, #32
90024ad4:	44bc      	add	ip, r7
90024ad6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024ada:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024ade:	0a3f      	lsrs	r7, r7, #8
90024ae0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024ae4:	ea4c 0707 	orr.w	r7, ip, r7
90024ae8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024aec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024af0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024af4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90024af8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90024afc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024b00:	ea4c 0909 	orr.w	r9, ip, r9
90024b04:	ea4a 0707 	orr.w	r7, sl, r7
90024b08:	2d00      	cmp	r5, #0
90024b0a:	f000 80ca 	beq.w	90024ca2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024b0e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90024b12:	3901      	subs	r1, #1
90024b14:	0049      	lsls	r1, r1, #1
90024b16:	3102      	adds	r1, #2
90024b18:	eb00 0c01 	add.w	ip, r0, r1
90024b1c:	5a41      	ldrh	r1, [r0, r1]
90024b1e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024b20:	28ff      	cmp	r0, #255	; 0xff
90024b22:	d019      	beq.n	90024b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024b24:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90024b28:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024b2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024b2e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024b32:	fb04 fa01 	mul.w	sl, r4, r1
90024b36:	fb08 f800 	mul.w	r8, r8, r0
90024b3a:	f10a 0020 	add.w	r0, sl, #32
90024b3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024b42:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024b46:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024b4a:	4441      	add	r1, r8
90024b4c:	0a00      	lsrs	r0, r0, #8
90024b4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024b52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024b56:	4301      	orrs	r1, r0
90024b58:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024b5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024b5e:	2cff      	cmp	r4, #255	; 0xff
90024b60:	d01a      	beq.n	90024b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024b62:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90024b66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024b6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024b6e:	fb04 fa00 	mul.w	sl, r4, r0
90024b72:	fb08 f80c 	mul.w	r8, r8, ip
90024b76:	f10a 0c20 	add.w	ip, sl, #32
90024b7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024b7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024b82:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024b86:	4440      	add	r0, r8
90024b88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024b8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024b90:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024b94:	ea40 000c 	orr.w	r0, r0, ip
90024b98:	fb15 fc02 	smulbb	ip, r5, r2
90024b9c:	f1c5 0810 	rsb	r8, r5, #16
90024ba0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024ba4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024ba8:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024bac:	eba8 0802 	sub.w	r8, r8, r2
90024bb0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024bb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024bb8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024bbc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024bc0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024bc4:	ea4a 0101 	orr.w	r1, sl, r1
90024bc8:	437a      	muls	r2, r7
90024bca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024bce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024bd2:	fb09 2208 	mla	r2, r9, r8, r2
90024bd6:	ea4b 0000 	orr.w	r0, fp, r0
90024bda:	fb05 2201 	mla	r2, r5, r1, r2
90024bde:	fb0c 2200 	mla	r2, ip, r0, r2
90024be2:	0d57      	lsrs	r7, r2, #21
90024be4:	0952      	lsrs	r2, r2, #5
90024be6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024bea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024bee:	433a      	orrs	r2, r7
90024bf0:	2bff      	cmp	r3, #255	; 0xff
90024bf2:	b292      	uxth	r2, r2
90024bf4:	d102      	bne.n	90024bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024bf6:	9912      	ldr	r1, [sp, #72]	; 0x48
90024bf8:	29ff      	cmp	r1, #255	; 0xff
90024bfa:	d063      	beq.n	90024cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024bfc:	980a      	ldr	r0, [sp, #40]	; 0x28
90024bfe:	1215      	asrs	r5, r2, #8
90024c00:	f8be 1000 	ldrh.w	r1, [lr]
90024c04:	4343      	muls	r3, r0
90024c06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024c08:	10cf      	asrs	r7, r1, #3
90024c0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024c0e:	1c58      	adds	r0, r3, #1
90024c10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90024c14:	eb00 2323 	add.w	r3, r0, r3, asr #8
90024c18:	1208      	asrs	r0, r1, #8
90024c1a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024c1e:	00c9      	lsls	r1, r1, #3
90024c20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024c24:	b2db      	uxtb	r3, r3
90024c26:	b2c9      	uxtb	r1, r1
90024c28:	fb10 f003 	smulbb	r0, r0, r3
90024c2c:	fb11 f103 	smulbb	r1, r1, r3
90024c30:	fb05 0504 	mla	r5, r5, r4, r0
90024c34:	10d0      	asrs	r0, r2, #3
90024c36:	fb17 f703 	smulbb	r7, r7, r3
90024c3a:	00d2      	lsls	r2, r2, #3
90024c3c:	b2ad      	uxth	r5, r5
90024c3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024c42:	b2d2      	uxtb	r2, r2
90024c44:	fb00 7004 	mla	r0, r0, r4, r7
90024c48:	1c6b      	adds	r3, r5, #1
90024c4a:	fb02 1204 	mla	r2, r2, r4, r1
90024c4e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024c52:	b292      	uxth	r2, r2
90024c54:	b280      	uxth	r0, r0
90024c56:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024c5a:	1c57      	adds	r7, r2, #1
90024c5c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024c60:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024c64:	433d      	orrs	r5, r7
90024c66:	1c47      	adds	r7, r0, #1
90024c68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024c6c:	097f      	lsrs	r7, r7, #5
90024c6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024c72:	433d      	orrs	r5, r7
90024c74:	f8ae 5000 	strh.w	r5, [lr]
90024c78:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024c7a:	f10e 0e02 	add.w	lr, lr, #2
90024c7e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90024c80:	4413      	add	r3, r2
90024c82:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024c84:	9321      	str	r3, [sp, #132]	; 0x84
90024c86:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024c88:	441a      	add	r2, r3
90024c8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024c8c:	3b01      	subs	r3, #1
90024c8e:	9222      	str	r2, [sp, #136]	; 0x88
90024c90:	9313      	str	r3, [sp, #76]	; 0x4c
90024c92:	e61c      	b.n	900248ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90024c94:	fb08 f000 	mul.w	r0, r8, r0
90024c98:	fb09 0303 	mla	r3, r9, r3, r0
90024c9c:	e6dc      	b.n	90024a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024c9e:	46b9      	mov	r9, r7
90024ca0:	e704      	b.n	90024aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90024ca2:	f1c2 0110 	rsb	r1, r2, #16
90024ca6:	437a      	muls	r2, r7
90024ca8:	fb09 2901 	mla	r9, r9, r1, r2
90024cac:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024cb0:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024cb4:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024cb8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024cbc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024cc0:	4302      	orrs	r2, r0
90024cc2:	e795      	b.n	90024bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90024cc4:	f8ae 2000 	strh.w	r2, [lr]
90024cc8:	e7d6      	b.n	90024c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024cca:	b017      	add	sp, #92	; 0x5c
90024ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024cd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024cd4:	b085      	sub	sp, #20
90024cd6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90024cda:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90024cde:	2800      	cmp	r0, #0
90024ce0:	9103      	str	r1, [sp, #12]
90024ce2:	fb00 7406 	mla	r4, r0, r6, r7
90024ce6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90024cea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90024cee:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90024cf2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024cf6:	eb02 0904 	add.w	r9, r2, r4
90024cfa:	9501      	str	r5, [sp, #4]
90024cfc:	f2c0 8141 	blt.w	90024f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024d00:	4583      	cmp	fp, r0
90024d02:	f340 813e 	ble.w	90024f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024d06:	2f00      	cmp	r7, #0
90024d08:	f2c0 8137 	blt.w	90024f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024d0c:	42be      	cmp	r6, r7
90024d0e:	f340 8134 	ble.w	90024f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024d12:	f812 c004 	ldrb.w	ip, [r2, r4]
90024d16:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90024d1a:	f64f 041f 	movw	r4, #63519	; 0xf81f
90024d1e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024d22:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90024d26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024d2a:	4355      	muls	r5, r2
90024d2c:	fb0c f203 	mul.w	r2, ip, r3
90024d30:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024d34:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024d38:	441d      	add	r5, r3
90024d3a:	f102 0320 	add.w	r3, r2, #32
90024d3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024d42:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024d46:	0a1b      	lsrs	r3, r3, #8
90024d48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024d4c:	431c      	orrs	r4, r3
90024d4e:	1c7b      	adds	r3, r7, #1
90024d50:	f100 811c 	bmi.w	90024f8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024d54:	429e      	cmp	r6, r3
90024d56:	f340 8119 	ble.w	90024f8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024d5a:	2900      	cmp	r1, #0
90024d5c:	f000 8119 	beq.w	90024f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90024d60:	9a01      	ldr	r2, [sp, #4]
90024d62:	f899 3001 	ldrb.w	r3, [r9, #1]
90024d66:	8855      	ldrh	r5, [r2, #2]
90024d68:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024d6c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90024d70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024d74:	fb08 f802 	mul.w	r8, r8, r2
90024d78:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024d7c:	435d      	muls	r5, r3
90024d7e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024d82:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024d86:	44d0      	add	r8, sl
90024d88:	f105 0a20 	add.w	sl, r5, #32
90024d8c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024d90:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024d94:	0a2d      	lsrs	r5, r5, #8
90024d96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024d9a:	432a      	orrs	r2, r5
90024d9c:	3001      	adds	r0, #1
90024d9e:	f100 80fe 	bmi.w	90024f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024da2:	4583      	cmp	fp, r0
90024da4:	f340 80fb 	ble.w	90024f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024da8:	f1be 0f00 	cmp.w	lr, #0
90024dac:	f000 80fc 	beq.w	90024fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024db0:	2f00      	cmp	r7, #0
90024db2:	f2c0 80f1 	blt.w	90024f98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024db6:	42be      	cmp	r6, r7
90024db8:	f340 80ee 	ble.w	90024f98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024dbc:	9801      	ldr	r0, [sp, #4]
90024dbe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90024dc2:	f819 5006 	ldrb.w	r5, [r9, r6]
90024dc6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024dca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024dce:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90024dd2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90024dd6:	fb0a fa00 	mul.w	sl, sl, r0
90024dda:	fb05 f808 	mul.w	r8, r5, r8
90024dde:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024de2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90024de6:	4482      	add	sl, r0
90024de8:	f108 0020 	add.w	r0, r8, #32
90024dec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024df0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024df4:	0a00      	lsrs	r0, r0, #8
90024df6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024dfa:	ea4b 0b00 	orr.w	fp, fp, r0
90024dfe:	3701      	adds	r7, #1
90024e00:	f100 80d7 	bmi.w	90024fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024e04:	42be      	cmp	r6, r7
90024e06:	f340 80d4 	ble.w	90024fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024e0a:	2900      	cmp	r1, #0
90024e0c:	f000 80d4 	beq.w	90024fb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90024e10:	3601      	adds	r6, #1
90024e12:	9801      	ldr	r0, [sp, #4]
90024e14:	f819 7006 	ldrb.w	r7, [r9, r6]
90024e18:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024e1c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024e20:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90024e24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024e28:	fb09 f906 	mul.w	r9, r9, r6
90024e2c:	fb07 f800 	mul.w	r8, r7, r0
90024e30:	f64f 001f 	movw	r0, #63519	; 0xf81f
90024e34:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024e38:	f609 0901 	addw	r9, r9, #2049	; 0x801
90024e3c:	44d1      	add	r9, sl
90024e3e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024e42:	f108 0020 	add.w	r0, r8, #32
90024e46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024e4a:	0a00      	lsrs	r0, r0, #8
90024e4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024e50:	4330      	orrs	r0, r6
90024e52:	b28e      	uxth	r6, r1
90024e54:	fa1f f98e 	uxth.w	r9, lr
90024e58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024e5c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90024e60:	fb06 f809 	mul.w	r8, r6, r9
90024e64:	0136      	lsls	r6, r6, #4
90024e66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024e6a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024e6e:	9601      	str	r6, [sp, #4]
90024e70:	ea4a 0404 	orr.w	r4, sl, r4
90024e74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024e78:	fa1f f689 	uxth.w	r6, r9
90024e7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024e80:	fb11 f90e 	smulbb	r9, r1, lr
90024e84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024e88:	9602      	str	r6, [sp, #8]
90024e8a:	4626      	mov	r6, r4
90024e8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024e90:	f1ce 0410 	rsb	r4, lr, #16
90024e94:	ea4a 0202 	orr.w	r2, sl, r2
90024e98:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024e9c:	1a64      	subs	r4, r4, r1
90024e9e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024ea2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024ea6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024eaa:	434a      	muls	r2, r1
90024eac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024eb0:	ea4a 0000 	orr.w	r0, sl, r0
90024eb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024eb8:	fb04 2406 	mla	r4, r4, r6, r2
90024ebc:	9903      	ldr	r1, [sp, #12]
90024ebe:	fb09 4200 	mla	r2, r9, r0, r4
90024ec2:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024ec6:	9801      	ldr	r0, [sp, #4]
90024ec8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024ecc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90024ed0:	8809      	ldrh	r1, [r1, #0]
90024ed2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90024ed6:	ea44 0b0b 	orr.w	fp, r4, fp
90024eda:	9c02      	ldr	r4, [sp, #8]
90024edc:	1b00      	subs	r0, r0, r4
90024ede:	9c01      	ldr	r4, [sp, #4]
90024ee0:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024ee4:	eba4 0608 	sub.w	r6, r4, r8
90024ee8:	b280      	uxth	r0, r0
90024eea:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024eee:	b2b6      	uxth	r6, r6
90024ef0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024ef4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024ef8:	4373      	muls	r3, r6
90024efa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90024efe:	fb0c 3300 	mla	r3, ip, r0, r3
90024f02:	9802      	ldr	r0, [sp, #8]
90024f04:	ea42 0e0e 	orr.w	lr, r2, lr
90024f08:	fb00 3505 	mla	r5, r0, r5, r3
90024f0c:	120b      	asrs	r3, r1, #8
90024f0e:	10c8      	asrs	r0, r1, #3
90024f10:	fb08 5707 	mla	r7, r8, r7, r5
90024f14:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024f18:	00c9      	lsls	r1, r1, #3
90024f1a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024f1e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90024f22:	fa1f f28e 	uxth.w	r2, lr
90024f26:	b2c9      	uxtb	r1, r1
90024f28:	b2ff      	uxtb	r7, r7
90024f2a:	437b      	muls	r3, r7
90024f2c:	4378      	muls	r0, r7
90024f2e:	434f      	muls	r7, r1
90024f30:	1c59      	adds	r1, r3, #1
90024f32:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024f36:	1213      	asrs	r3, r2, #8
90024f38:	f023 0307 	bic.w	r3, r3, #7
90024f3c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024f40:	1c41      	adds	r1, r0, #1
90024f42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024f46:	10d1      	asrs	r1, r2, #3
90024f48:	021b      	lsls	r3, r3, #8
90024f4a:	f021 0103 	bic.w	r1, r1, #3
90024f4e:	00d2      	lsls	r2, r2, #3
90024f50:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90024f54:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90024f58:	00c9      	lsls	r1, r1, #3
90024f5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024f5e:	430b      	orrs	r3, r1
90024f60:	1c79      	adds	r1, r7, #1
90024f62:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90024f66:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024f6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024f6e:	431a      	orrs	r2, r3
90024f70:	9b03      	ldr	r3, [sp, #12]
90024f72:	801a      	strh	r2, [r3, #0]
90024f74:	b005      	add	sp, #20
90024f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024f7a:	f04f 0c00 	mov.w	ip, #0
90024f7e:	4664      	mov	r4, ip
90024f80:	e6e5      	b.n	90024d4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90024f82:	2300      	movs	r3, #0
90024f84:	469c      	mov	ip, r3
90024f86:	461a      	mov	r2, r3
90024f88:	461c      	mov	r4, r3
90024f8a:	e707      	b.n	90024d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024f8c:	2300      	movs	r3, #0
90024f8e:	461a      	mov	r2, r3
90024f90:	e704      	b.n	90024d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024f92:	460b      	mov	r3, r1
90024f94:	460a      	mov	r2, r1
90024f96:	e701      	b.n	90024d9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024f98:	2500      	movs	r5, #0
90024f9a:	46ab      	mov	fp, r5
90024f9c:	e72f      	b.n	90024dfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90024f9e:	2700      	movs	r7, #0
90024fa0:	463d      	mov	r5, r7
90024fa2:	4638      	mov	r0, r7
90024fa4:	46bb      	mov	fp, r7
90024fa6:	e754      	b.n	90024e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024fa8:	4677      	mov	r7, lr
90024faa:	4675      	mov	r5, lr
90024fac:	4670      	mov	r0, lr
90024fae:	46f3      	mov	fp, lr
90024fb0:	e74f      	b.n	90024e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024fb2:	2700      	movs	r7, #0
90024fb4:	4638      	mov	r0, r7
90024fb6:	e74c      	b.n	90024e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024fb8:	460f      	mov	r7, r1
90024fba:	4608      	mov	r0, r1
90024fbc:	e749      	b.n	90024e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90024fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024fc4:	b093      	sub	sp, #76	; 0x4c
90024fc6:	9210      	str	r2, [sp, #64]	; 0x40
90024fc8:	9a21      	ldr	r2, [sp, #132]	; 0x84
90024fca:	9011      	str	r0, [sp, #68]	; 0x44
90024fcc:	910e      	str	r1, [sp, #56]	; 0x38
90024fce:	6850      	ldr	r0, [r2, #4]
90024fd0:	9306      	str	r3, [sp, #24]
90024fd2:	6812      	ldr	r2, [r2, #0]
90024fd4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90024fd8:	fb00 1303 	mla	r3, r0, r3, r1
90024fdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024fe0:	9307      	str	r3, [sp, #28]
90024fe2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024fe4:	681b      	ldr	r3, [r3, #0]
90024fe6:	9308      	str	r3, [sp, #32]
90024fe8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024fea:	685b      	ldr	r3, [r3, #4]
90024fec:	9309      	str	r3, [sp, #36]	; 0x24
90024fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024ff0:	2b00      	cmp	r3, #0
90024ff2:	dc03      	bgt.n	90024ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024ff4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90024ff6:	2b00      	cmp	r3, #0
90024ff8:	f340 83b6 	ble.w	90025768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024ffc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024ffe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025002:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025006:	1e48      	subs	r0, r1, #1
90025008:	1e55      	subs	r5, r2, #1
9002500a:	9b06      	ldr	r3, [sp, #24]
9002500c:	2b00      	cmp	r3, #0
9002500e:	f340 8165 	ble.w	900252dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90025012:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90025014:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025016:	1436      	asrs	r6, r6, #16
90025018:	ea4f 4323 	mov.w	r3, r3, asr #16
9002501c:	d406      	bmi.n	9002502c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002501e:	4286      	cmp	r6, r0
90025020:	da04      	bge.n	9002502c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025022:	2b00      	cmp	r3, #0
90025024:	db02      	blt.n	9002502c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025026:	42ab      	cmp	r3, r5
90025028:	f2c0 8159 	blt.w	900252de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002502c:	3601      	adds	r6, #1
9002502e:	f100 8146 	bmi.w	900252be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025032:	42b1      	cmp	r1, r6
90025034:	f2c0 8143 	blt.w	900252be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025038:	3301      	adds	r3, #1
9002503a:	f100 8140 	bmi.w	900252be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002503e:	429a      	cmp	r2, r3
90025040:	f2c0 813d 	blt.w	900252be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025044:	9b06      	ldr	r3, [sp, #24]
90025046:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002504a:	9f07      	ldr	r7, [sp, #28]
9002504c:	930f      	str	r3, [sp, #60]	; 0x3c
9002504e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025050:	2b00      	cmp	r3, #0
90025052:	f340 8166 	ble.w	90025322 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025056:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025058:	9d1d      	ldr	r5, [sp, #116]	; 0x74
9002505a:	1418      	asrs	r0, r3, #16
9002505c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002505e:	142d      	asrs	r5, r5, #16
90025060:	f3c3 3103 	ubfx	r1, r3, #12, #4
90025064:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025066:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002506a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002506c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90025070:	f100 81f0 	bmi.w	90025454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025074:	f102 3eff 	add.w	lr, r2, #4294967295
90025078:	4575      	cmp	r5, lr
9002507a:	f280 81eb 	bge.w	90025454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002507e:	2800      	cmp	r0, #0
90025080:	f2c0 81e8 	blt.w	90025454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025084:	f103 3eff 	add.w	lr, r3, #4294967295
90025088:	4570      	cmp	r0, lr
9002508a:	f280 81e3 	bge.w	90025454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002508e:	b212      	sxth	r2, r2
90025090:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025092:	fa1f fe81 	uxth.w	lr, r1
90025096:	fb00 5002 	mla	r0, r0, r2, r5
9002509a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002509e:	eb03 0a00 	add.w	sl, r3, r0
900250a2:	f813 9000 	ldrb.w	r9, [r3, r0]
900250a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900250aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
900250ae:	b29b      	uxth	r3, r3
900250b0:	f1bc 0f00 	cmp.w	ip, #0
900250b4:	f000 817b 	beq.w	900253ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900250b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
900250bc:	eb0a 0b02 	add.w	fp, sl, r2
900250c0:	fa1f fa8c 	uxth.w	sl, ip
900250c4:	940a      	str	r4, [sp, #40]	; 0x28
900250c6:	fb0a fe0e 	mul.w	lr, sl, lr
900250ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
900250ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900250d2:	eba5 050e 	sub.w	r5, r5, lr
900250d6:	940b      	str	r4, [sp, #44]	; 0x2c
900250d8:	fa1f fa8a 	uxth.w	sl, sl
900250dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900250de:	b2ad      	uxth	r5, r5
900250e0:	eba3 030a 	sub.w	r3, r3, sl
900250e4:	fb08 f505 	mul.w	r5, r8, r5
900250e8:	b29b      	uxth	r3, r3
900250ea:	fb09 5303 	mla	r3, r9, r3, r5
900250ee:	fb0a 3304 	mla	r3, sl, r4, r3
900250f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900250f4:	fb0e 3304 	mla	r3, lr, r4, r3
900250f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900250fc:	2b00      	cmp	r3, #0
900250fe:	f000 80d1 	beq.w	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025102:	9c08      	ldr	r4, [sp, #32]
90025104:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025108:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002510c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025110:	f000 8152 	beq.w	900253b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025114:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025118:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002511c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025120:	fb0a fe0e 	mul.w	lr, sl, lr
90025124:	fb09 f000 	mul.w	r0, r9, r0
90025128:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9002512c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90025130:	f100 0b20 	add.w	fp, r0, #32
90025134:	44ce      	add	lr, r9
90025136:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002513a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002513e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025142:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025146:	ea4e 0909 	orr.w	r9, lr, r9
9002514a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002514e:	8868      	ldrh	r0, [r5, #2]
90025150:	d019      	beq.n	90025186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90025152:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025156:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002515a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002515e:	fb0a fe0e 	mul.w	lr, sl, lr
90025162:	fb08 f800 	mul.w	r8, r8, r0
90025166:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002516a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002516e:	f108 0b20 	add.w	fp, r8, #32
90025172:	4486      	add	lr, r0
90025174:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025178:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002517c:	0a00      	lsrs	r0, r0, #8
9002517e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025182:	ea4e 0000 	orr.w	r0, lr, r0
90025186:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002518a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002518e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025192:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025196:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002519a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002519e:	ea4e 0909 	orr.w	r9, lr, r9
900251a2:	ea4a 0000 	orr.w	r0, sl, r0
900251a6:	f1bc 0f00 	cmp.w	ip, #0
900251aa:	f000 8107 	beq.w	900253bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900251ae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900251b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900251b4:	3a01      	subs	r2, #1
900251b6:	2cff      	cmp	r4, #255	; 0xff
900251b8:	ea4f 0242 	mov.w	r2, r2, lsl #1
900251bc:	f102 0202 	add.w	r2, r2, #2
900251c0:	eb05 0e02 	add.w	lr, r5, r2
900251c4:	5aaa      	ldrh	r2, [r5, r2]
900251c6:	d018      	beq.n	900251fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
900251c8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900251cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900251d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900251d4:	fb04 fa02 	mul.w	sl, r4, r2
900251d8:	fb08 f805 	mul.w	r8, r8, r5
900251dc:	f10a 0520 	add.w	r5, sl, #32
900251e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900251e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900251e8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900251ec:	4442      	add	r2, r8
900251ee:	0a2d      	lsrs	r5, r5, #8
900251f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900251f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900251f8:	432a      	orrs	r2, r5
900251fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900251fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025200:	2cff      	cmp	r4, #255	; 0xff
90025202:	d01a      	beq.n	9002523a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025204:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90025208:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002520c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025210:	fb04 fa05 	mul.w	sl, r4, r5
90025214:	fb08 f80e 	mul.w	r8, r8, lr
90025218:	f10a 0e20 	add.w	lr, sl, #32
9002521c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025220:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025224:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025228:	4445      	add	r5, r8
9002522a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002522e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90025232:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90025236:	ea45 050e 	orr.w	r5, r5, lr
9002523a:	fb1c fe01 	smulbb	lr, ip, r1
9002523e:	f1cc 0810 	rsb	r8, ip, #16
90025242:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025246:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002524a:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002524e:	eba8 0801 	sub.w	r8, r8, r1
90025252:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025256:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002525a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002525e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90025262:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025266:	ea4a 0202 	orr.w	r2, sl, r2
9002526a:	4341      	muls	r1, r0
9002526c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025270:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025274:	fb09 1108 	mla	r1, r9, r8, r1
90025278:	ea4b 0505 	orr.w	r5, fp, r5
9002527c:	fb0c 1102 	mla	r1, ip, r2, r1
90025280:	fb0e 1e05 	mla	lr, lr, r5, r1
90025284:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025288:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002528c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025290:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025294:	ea42 0e0e 	orr.w	lr, r2, lr
90025298:	fa1f f28e 	uxth.w	r2, lr
9002529c:	2bff      	cmp	r3, #255	; 0xff
9002529e:	f040 80a1 	bne.w	900253e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900252a2:	803a      	strh	r2, [r7, #0]
900252a4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900252a6:	3702      	adds	r7, #2
900252a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900252aa:	4413      	add	r3, r2
900252ac:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900252ae:	931d      	str	r3, [sp, #116]	; 0x74
900252b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900252b2:	441a      	add	r2, r3
900252b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900252b6:	3b01      	subs	r3, #1
900252b8:	921e      	str	r2, [sp, #120]	; 0x78
900252ba:	930f      	str	r3, [sp, #60]	; 0x3c
900252bc:	e6c7      	b.n	9002504e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900252be:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900252c0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900252c2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
900252c4:	4433      	add	r3, r6
900252c6:	931d      	str	r3, [sp, #116]	; 0x74
900252c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900252ca:	441c      	add	r4, r3
900252cc:	9b06      	ldr	r3, [sp, #24]
900252ce:	3b01      	subs	r3, #1
900252d0:	941e      	str	r4, [sp, #120]	; 0x78
900252d2:	9306      	str	r3, [sp, #24]
900252d4:	9b07      	ldr	r3, [sp, #28]
900252d6:	3302      	adds	r3, #2
900252d8:	9307      	str	r3, [sp, #28]
900252da:	e696      	b.n	9002500a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900252dc:	d028      	beq.n	90025330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900252de:	9b06      	ldr	r3, [sp, #24]
900252e0:	981f      	ldr	r0, [sp, #124]	; 0x7c
900252e2:	3b01      	subs	r3, #1
900252e4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900252e6:	fb00 5003 	mla	r0, r0, r3, r5
900252ea:	1400      	asrs	r0, r0, #16
900252ec:	f53f aeaa 	bmi.w	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900252f0:	3901      	subs	r1, #1
900252f2:	4288      	cmp	r0, r1
900252f4:	f6bf aea6 	bge.w	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900252f8:	9920      	ldr	r1, [sp, #128]	; 0x80
900252fa:	981e      	ldr	r0, [sp, #120]	; 0x78
900252fc:	fb01 0303 	mla	r3, r1, r3, r0
90025300:	141b      	asrs	r3, r3, #16
90025302:	f53f ae9f 	bmi.w	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025306:	3a01      	subs	r2, #1
90025308:	4293      	cmp	r3, r2
9002530a:	f6bf ae9b 	bge.w	90025044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002530e:	9b06      	ldr	r3, [sp, #24]
90025310:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025314:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025318:	930f      	str	r3, [sp, #60]	; 0x3c
9002531a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002531c:	2b00      	cmp	r3, #0
9002531e:	f300 80b6 	bgt.w	9002548e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90025322:	9b06      	ldr	r3, [sp, #24]
90025324:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025328:	9b07      	ldr	r3, [sp, #28]
9002532a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002532e:	9307      	str	r3, [sp, #28]
90025330:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025332:	2b00      	cmp	r3, #0
90025334:	f340 8218 	ble.w	90025768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025338:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002533c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002533e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025342:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025346:	eef0 6a62 	vmov.f32	s13, s5
9002534a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002534e:	ee31 1a05 	vadd.f32	s2, s2, s10
90025352:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025356:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
9002535a:	eef0 6a43 	vmov.f32	s13, s6
9002535e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025362:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90025366:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002536a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002536e:	ee77 2a62 	vsub.f32	s5, s14, s5
90025372:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025376:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002537a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002537e:	ee12 2a90 	vmov	r2, s5
90025382:	eef0 2a47 	vmov.f32	s5, s14
90025386:	fb92 f3f3 	sdiv	r3, r2, r3
9002538a:	ee13 2a10 	vmov	r2, s6
9002538e:	931f      	str	r3, [sp, #124]	; 0x7c
90025390:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025392:	eeb0 3a67 	vmov.f32	s6, s15
90025396:	fb92 f3f3 	sdiv	r3, r2, r3
9002539a:	9320      	str	r3, [sp, #128]	; 0x80
9002539c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002539e:	9a10      	ldr	r2, [sp, #64]	; 0x40
900253a0:	3b01      	subs	r3, #1
900253a2:	930e      	str	r3, [sp, #56]	; 0x38
900253a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900253a6:	bf08      	it	eq
900253a8:	4613      	moveq	r3, r2
900253aa:	9306      	str	r3, [sp, #24]
900253ac:	e61f      	b.n	90024fee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900253ae:	fb08 f505 	mul.w	r5, r8, r5
900253b2:	fb09 5303 	mla	r3, r9, r3, r5
900253b6:	e69f      	b.n	900250f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900253b8:	4681      	mov	r9, r0
900253ba:	e6c6      	b.n	9002514a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900253bc:	f1c1 0210 	rsb	r2, r1, #16
900253c0:	4341      	muls	r1, r0
900253c2:	fb09 1902 	mla	r9, r9, r2, r1
900253c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900253ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
900253ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
900253d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900253d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900253da:	ea42 0909 	orr.w	r9, r2, r9
900253de:	fa1f f289 	uxth.w	r2, r9
900253e2:	e75b      	b.n	9002529c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900253e4:	f8b7 c000 	ldrh.w	ip, [r7]
900253e8:	43db      	mvns	r3, r3
900253ea:	ea4f 202c 	mov.w	r0, ip, asr #8
900253ee:	fa5f fe83 	uxtb.w	lr, r3
900253f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900253f6:	ea4f 05ec 	mov.w	r5, ip, asr #3
900253fa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900253fe:	fb00 f00e 	mul.w	r0, r0, lr
90025402:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025406:	b2db      	uxtb	r3, r3
90025408:	1c41      	adds	r1, r0, #1
9002540a:	fb05 f50e 	mul.w	r5, r5, lr
9002540e:	fb03 f30e 	mul.w	r3, r3, lr
90025412:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025416:	1211      	asrs	r1, r2, #8
90025418:	f021 0107 	bic.w	r1, r1, #7
9002541c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025420:	48d3      	ldr	r0, [pc, #844]	; (90025770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025422:	b2c9      	uxtb	r1, r1
90025424:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025428:	1c69      	adds	r1, r5, #1
9002542a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002542e:	10d1      	asrs	r1, r2, #3
90025430:	00d2      	lsls	r2, r2, #3
90025432:	f021 0103 	bic.w	r1, r1, #3
90025436:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002543a:	00c9      	lsls	r1, r1, #3
9002543c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025440:	4301      	orrs	r1, r0
90025442:	1c58      	adds	r0, r3, #1
90025444:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025448:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002544c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025450:	430a      	orrs	r2, r1
90025452:	e726      	b.n	900252a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90025454:	f115 0e01 	adds.w	lr, r5, #1
90025458:	f53f af24 	bmi.w	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002545c:	4572      	cmp	r2, lr
9002545e:	f6ff af21 	blt.w	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025462:	f110 0e01 	adds.w	lr, r0, #1
90025466:	f53f af1d 	bmi.w	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002546a:	4573      	cmp	r3, lr
9002546c:	f6ff af1a 	blt.w	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025470:	b21b      	sxth	r3, r3
90025472:	b212      	sxth	r2, r2
90025474:	9301      	str	r3, [sp, #4]
90025476:	9200      	str	r2, [sp, #0]
90025478:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9002547c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025480:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025484:	4639      	mov	r1, r7
90025486:	9811      	ldr	r0, [sp, #68]	; 0x44
90025488:	f7ff fc22 	bl	90024cd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002548c:	e70a      	b.n	900252a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002548e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025490:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025494:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025496:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002549a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002549c:	fa1f fc82 	uxth.w	ip, r2
900254a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900254a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900254a6:	ea4f 100c 	mov.w	r0, ip, lsl #4
900254aa:	141f      	asrs	r7, r3, #16
900254ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900254ae:	141b      	asrs	r3, r3, #16
900254b0:	fb01 3707 	mla	r7, r1, r7, r3
900254b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900254b6:	eb03 0a07 	add.w	sl, r3, r7
900254ba:	f813 9007 	ldrb.w	r9, [r3, r7]
900254be:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900254c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900254c6:	b29b      	uxth	r3, r3
900254c8:	2d00      	cmp	r5, #0
900254ca:	f000 80fe 	beq.w	900256ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900254ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
900254d2:	eb0a 0b01 	add.w	fp, sl, r1
900254d6:	fa1f fa85 	uxth.w	sl, r5
900254da:	940c      	str	r4, [sp, #48]	; 0x30
900254dc:	fb0a fc0c 	mul.w	ip, sl, ip
900254e0:	f89b 4001 	ldrb.w	r4, [fp, #1]
900254e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900254e8:	eba0 000c 	sub.w	r0, r0, ip
900254ec:	940d      	str	r4, [sp, #52]	; 0x34
900254ee:	fa1f fa8a 	uxth.w	sl, sl
900254f2:	b280      	uxth	r0, r0
900254f4:	eba3 030a 	sub.w	r3, r3, sl
900254f8:	fb08 f000 	mul.w	r0, r8, r0
900254fc:	b29b      	uxth	r3, r3
900254fe:	fb09 0303 	mla	r3, r9, r3, r0
90025502:	980c      	ldr	r0, [sp, #48]	; 0x30
90025504:	fb0a 3300 	mla	r3, sl, r0, r3
90025508:	fb0c 3304 	mla	r3, ip, r4, r3
9002550c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025510:	2b00      	cmp	r3, #0
90025512:	f000 80cc 	beq.w	900256ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025516:	9808      	ldr	r0, [sp, #32]
90025518:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002551c:	9c08      	ldr	r4, [sp, #32]
9002551e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025522:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025526:	f000 80d5 	beq.w	900256d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002552a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002552e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025532:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025536:	fb0a fc0c 	mul.w	ip, sl, ip
9002553a:	fb09 f707 	mul.w	r7, r9, r7
9002553e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025542:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025546:	f107 0b20 	add.w	fp, r7, #32
9002554a:	44cc      	add	ip, r9
9002554c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025550:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025554:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025558:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002555c:	ea4c 0909 	orr.w	r9, ip, r9
90025560:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90025564:	8847      	ldrh	r7, [r0, #2]
90025566:	d019      	beq.n	9002559c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025568:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002556c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025570:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025574:	fb0a fc0c 	mul.w	ip, sl, ip
90025578:	fb08 f807 	mul.w	r8, r8, r7
9002557c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025580:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025584:	f108 0b20 	add.w	fp, r8, #32
90025588:	44bc      	add	ip, r7
9002558a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002558e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025592:	0a3f      	lsrs	r7, r7, #8
90025594:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025598:	ea4c 0707 	orr.w	r7, ip, r7
9002559c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900255a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900255a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900255a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900255ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900255b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900255b4:	ea4c 0909 	orr.w	r9, ip, r9
900255b8:	ea4a 0707 	orr.w	r7, sl, r7
900255bc:	2d00      	cmp	r5, #0
900255be:	f000 808b 	beq.w	900256d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900255c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900255c6:	3901      	subs	r1, #1
900255c8:	0049      	lsls	r1, r1, #1
900255ca:	3102      	adds	r1, #2
900255cc:	eb00 0c01 	add.w	ip, r0, r1
900255d0:	5a41      	ldrh	r1, [r0, r1]
900255d2:	980c      	ldr	r0, [sp, #48]	; 0x30
900255d4:	28ff      	cmp	r0, #255	; 0xff
900255d6:	d019      	beq.n	9002560c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900255d8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900255dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900255de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900255e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900255e6:	fb04 fa01 	mul.w	sl, r4, r1
900255ea:	fb08 f800 	mul.w	r8, r8, r0
900255ee:	f10a 0020 	add.w	r0, sl, #32
900255f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900255f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
900255fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900255fe:	4441      	add	r1, r8
90025600:	0a00      	lsrs	r0, r0, #8
90025602:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025606:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002560a:	4301      	orrs	r1, r0
9002560c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002560e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025612:	2cff      	cmp	r4, #255	; 0xff
90025614:	d01a      	beq.n	9002564c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025616:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002561a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002561e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025622:	fb04 fa00 	mul.w	sl, r4, r0
90025626:	fb08 f80c 	mul.w	r8, r8, ip
9002562a:	f10a 0c20 	add.w	ip, sl, #32
9002562e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025632:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025636:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002563a:	4440      	add	r0, r8
9002563c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025640:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025644:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025648:	ea40 000c 	orr.w	r0, r0, ip
9002564c:	fb15 fc02 	smulbb	ip, r5, r2
90025650:	f1c5 0810 	rsb	r8, r5, #16
90025654:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025658:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002565c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025660:	eba8 0802 	sub.w	r8, r8, r2
90025664:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025668:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002566c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025670:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025674:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025678:	ea4a 0101 	orr.w	r1, sl, r1
9002567c:	437a      	muls	r2, r7
9002567e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025682:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025686:	fb09 2208 	mla	r2, r9, r8, r2
9002568a:	ea4b 0000 	orr.w	r0, fp, r0
9002568e:	fb05 2201 	mla	r2, r5, r1, r2
90025692:	fb0c 2200 	mla	r2, ip, r0, r2
90025696:	0d57      	lsrs	r7, r2, #21
90025698:	0952      	lsrs	r2, r2, #5
9002569a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002569e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900256a2:	433a      	orrs	r2, r7
900256a4:	2bff      	cmp	r3, #255	; 0xff
900256a6:	b292      	uxth	r2, r2
900256a8:	d127      	bne.n	900256fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900256aa:	f8ae 2000 	strh.w	r2, [lr]
900256ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900256b0:	f10e 0e02 	add.w	lr, lr, #2
900256b4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900256b6:	4413      	add	r3, r2
900256b8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900256ba:	931d      	str	r3, [sp, #116]	; 0x74
900256bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900256be:	441a      	add	r2, r3
900256c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900256c2:	3b01      	subs	r3, #1
900256c4:	921e      	str	r2, [sp, #120]	; 0x78
900256c6:	930f      	str	r3, [sp, #60]	; 0x3c
900256c8:	e627      	b.n	9002531a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900256ca:	fb08 f000 	mul.w	r0, r8, r0
900256ce:	fb09 0303 	mla	r3, r9, r3, r0
900256d2:	e71b      	b.n	9002550c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900256d4:	46b9      	mov	r9, r7
900256d6:	e743      	b.n	90025560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900256d8:	f1c2 0110 	rsb	r1, r2, #16
900256dc:	437a      	muls	r2, r7
900256de:	fb09 2901 	mla	r9, r9, r1, r2
900256e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900256e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
900256ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
900256ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900256f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900256f6:	4302      	orrs	r2, r0
900256f8:	e7d4      	b.n	900256a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900256fa:	f8be 7000 	ldrh.w	r7, [lr]
900256fe:	43db      	mvns	r3, r3
90025700:	4c1b      	ldr	r4, [pc, #108]	; (90025770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025702:	1238      	asrs	r0, r7, #8
90025704:	fa5f fc83 	uxtb.w	ip, r3
90025708:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002570c:	10fd      	asrs	r5, r7, #3
9002570e:	00fb      	lsls	r3, r7, #3
90025710:	fb00 f00c 	mul.w	r0, r0, ip
90025714:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025718:	b2db      	uxtb	r3, r3
9002571a:	fb05 f10c 	mul.w	r1, r5, ip
9002571e:	1c45      	adds	r5, r0, #1
90025720:	fb03 f30c 	mul.w	r3, r3, ip
90025724:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025728:	1215      	asrs	r5, r2, #8
9002572a:	f025 0507 	bic.w	r5, r5, #7
9002572e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025732:	1c4d      	adds	r5, r1, #1
90025734:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025738:	10d1      	asrs	r1, r2, #3
9002573a:	b2c0      	uxtb	r0, r0
9002573c:	f021 0103 	bic.w	r1, r1, #3
90025740:	00d2      	lsls	r2, r2, #3
90025742:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025746:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002574a:	00c9      	lsls	r1, r1, #3
9002574c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025750:	4308      	orrs	r0, r1
90025752:	1c59      	adds	r1, r3, #1
90025754:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025758:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002575c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025760:	4318      	orrs	r0, r3
90025762:	f8ae 0000 	strh.w	r0, [lr]
90025766:	e7a2      	b.n	900256ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025768:	b013      	add	sp, #76	; 0x4c
9002576a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002576e:	bf00      	nop
90025770:	fffff800 	.word	0xfffff800

90025774 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025778:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002577c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025780:	fb05 4c03 	mla	ip, r5, r3, r4
90025784:	2d00      	cmp	r5, #0
90025786:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002578a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002578e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025792:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90025796:	8808      	ldrh	r0, [r1, #0]
90025798:	f2c0 80a7 	blt.w	900258ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002579c:	45aa      	cmp	sl, r5
9002579e:	f340 80a4 	ble.w	900258ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900257a2:	2c00      	cmp	r4, #0
900257a4:	f2c0 809f 	blt.w	900258e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900257a8:	42a3      	cmp	r3, r4
900257aa:	f340 809c 	ble.w	900258e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900257ae:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900257b2:	1c62      	adds	r2, r4, #1
900257b4:	f100 809c 	bmi.w	900258f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900257b8:	4293      	cmp	r3, r2
900257ba:	f340 8099 	ble.w	900258f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900257be:	f1b9 0f00 	cmp.w	r9, #0
900257c2:	f000 8095 	beq.w	900258f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900257c6:	f8be c002 	ldrh.w	ip, [lr, #2]
900257ca:	3501      	adds	r5, #1
900257cc:	f100 8094 	bmi.w	900258f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900257d0:	45aa      	cmp	sl, r5
900257d2:	f340 8091 	ble.w	900258f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900257d6:	2f00      	cmp	r7, #0
900257d8:	f000 808e 	beq.w	900258f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900257dc:	2c00      	cmp	r4, #0
900257de:	f2c0 8089 	blt.w	900258f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900257e2:	42a3      	cmp	r3, r4
900257e4:	f340 8086 	ble.w	900258f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900257e8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900257ec:	3401      	adds	r4, #1
900257ee:	f100 8086 	bmi.w	900258fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900257f2:	42a3      	cmp	r3, r4
900257f4:	f340 8083 	ble.w	900258fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900257f8:	f1b9 0f00 	cmp.w	r9, #0
900257fc:	d07f      	beq.n	900258fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900257fe:	3301      	adds	r3, #1
90025800:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025804:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025808:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9002580c:	fb19 fe07 	smulbb	lr, r9, r7
90025810:	f1c7 0210 	rsb	r2, r7, #16
90025814:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025818:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002581c:	eba2 0209 	sub.w	r2, r2, r9
90025820:	ea44 0808 	orr.w	r8, r4, r8
90025824:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025828:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002582c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025830:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025834:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025838:	ea44 0c0c 	orr.w	ip, r4, ip
9002583c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90025840:	fb04 f40c 	mul.w	r4, r4, ip
90025844:	fb02 4808 	mla	r8, r2, r8, r4
90025848:	041a      	lsls	r2, r3, #16
9002584a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002584e:	b2b4      	uxth	r4, r6
90025850:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025854:	43f6      	mvns	r6, r6
90025856:	4313      	orrs	r3, r2
90025858:	042a      	lsls	r2, r5, #16
9002585a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002585e:	b2f6      	uxtb	r6, r6
90025860:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025864:	fb0e 8303 	mla	r3, lr, r3, r8
90025868:	432a      	orrs	r2, r5
9002586a:	fb07 3202 	mla	r2, r7, r2, r3
9002586e:	10c7      	asrs	r7, r0, #3
90025870:	0d53      	lsrs	r3, r2, #21
90025872:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90025876:	0952      	lsrs	r2, r2, #5
90025878:	fb17 f706 	smulbb	r7, r7, r6
9002587c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025880:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025884:	431a      	orrs	r2, r3
90025886:	b293      	uxth	r3, r2
90025888:	1202      	asrs	r2, r0, #8
9002588a:	121d      	asrs	r5, r3, #8
9002588c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90025890:	00c0      	lsls	r0, r0, #3
90025892:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90025896:	fb12 f206 	smulbb	r2, r2, r6
9002589a:	b2c0      	uxtb	r0, r0
9002589c:	fb05 2504 	mla	r5, r5, r4, r2
900258a0:	10da      	asrs	r2, r3, #3
900258a2:	fb10 f006 	smulbb	r0, r0, r6
900258a6:	00db      	lsls	r3, r3, #3
900258a8:	b2ad      	uxth	r5, r5
900258aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900258ae:	b2db      	uxtb	r3, r3
900258b0:	fb02 7204 	mla	r2, r2, r4, r7
900258b4:	fb03 0004 	mla	r0, r3, r4, r0
900258b8:	1c6b      	adds	r3, r5, #1
900258ba:	b292      	uxth	r2, r2
900258bc:	b280      	uxth	r0, r0
900258be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900258c2:	1c43      	adds	r3, r0, #1
900258c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900258c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900258cc:	1c50      	adds	r0, r2, #1
900258ce:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900258d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900258d6:	0952      	lsrs	r2, r2, #5
900258d8:	432b      	orrs	r3, r5
900258da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900258de:	4313      	orrs	r3, r2
900258e0:	800b      	strh	r3, [r1, #0]
900258e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900258e6:	4680      	mov	r8, r0
900258e8:	e763      	b.n	900257b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900258ea:	4684      	mov	ip, r0
900258ec:	4680      	mov	r8, r0
900258ee:	e76c      	b.n	900257ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900258f0:	4684      	mov	ip, r0
900258f2:	e76a      	b.n	900257ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900258f4:	4605      	mov	r5, r0
900258f6:	e779      	b.n	900257ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900258f8:	4603      	mov	r3, r0
900258fa:	4605      	mov	r5, r0
900258fc:	e782      	b.n	90025804 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900258fe:	4603      	mov	r3, r0
90025900:	e780      	b.n	90025804 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90025902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025902:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025906:	b093      	sub	sp, #76	; 0x4c
90025908:	461d      	mov	r5, r3
9002590a:	9210      	str	r2, [sp, #64]	; 0x40
9002590c:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002590e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90025912:	910a      	str	r1, [sp, #40]	; 0x28
90025914:	920b      	str	r2, [sp, #44]	; 0x2c
90025916:	6859      	ldr	r1, [r3, #4]
90025918:	681b      	ldr	r3, [r3, #0]
9002591a:	9011      	str	r0, [sp, #68]	; 0x44
9002591c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90025920:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90025924:	fb01 2707 	mla	r7, r1, r7, r2
90025928:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9002592c:	9307      	str	r3, [sp, #28]
9002592e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025930:	681b      	ldr	r3, [r3, #0]
90025932:	9309      	str	r3, [sp, #36]	; 0x24
90025934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90025936:	43db      	mvns	r3, r3
90025938:	b2db      	uxtb	r3, r3
9002593a:	9308      	str	r3, [sp, #32]
9002593c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002593e:	2b00      	cmp	r3, #0
90025940:	dc03      	bgt.n	9002594a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025942:	9b10      	ldr	r3, [sp, #64]	; 0x40
90025944:	2b00      	cmp	r3, #0
90025946:	f340 8205 	ble.w	90025d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002594a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002594c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025950:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025954:	1e48      	subs	r0, r1, #1
90025956:	f102 3cff 	add.w	ip, r2, #4294967295
9002595a:	2d00      	cmp	r5, #0
9002595c:	f340 80da 	ble.w	90025b14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90025960:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025964:	ea4f 4326 	mov.w	r3, r6, asr #16
90025968:	d406      	bmi.n	90025978 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002596a:	4586      	cmp	lr, r0
9002596c:	da04      	bge.n	90025978 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002596e:	2b00      	cmp	r3, #0
90025970:	db02      	blt.n	90025978 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025972:	4563      	cmp	r3, ip
90025974:	f2c0 80cf 	blt.w	90025b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025978:	f11e 0e01 	adds.w	lr, lr, #1
9002597c:	f100 80c1 	bmi.w	90025b02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025980:	4571      	cmp	r1, lr
90025982:	f2c0 80be 	blt.w	90025b02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025986:	3301      	adds	r3, #1
90025988:	f100 80bb 	bmi.w	90025b02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002598c:	429a      	cmp	r2, r3
9002598e:	f2c0 80b8 	blt.w	90025b02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025992:	46a9      	mov	r9, r5
90025994:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025998:	f1b9 0f00 	cmp.w	r9, #0
9002599c:	f340 80d8 	ble.w	90025b50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
900259a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900259a2:	1421      	asrs	r1, r4, #16
900259a4:	ea4f 4026 	mov.w	r0, r6, asr #16
900259a8:	f3c4 3203 	ubfx	r2, r4, #12, #4
900259ac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900259b0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900259b4:	f100 8112 	bmi.w	90025bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900259b8:	f10e 3aff 	add.w	sl, lr, #4294967295
900259bc:	4551      	cmp	r1, sl
900259be:	f280 810d 	bge.w	90025bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900259c2:	2800      	cmp	r0, #0
900259c4:	f2c0 810a 	blt.w	90025bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900259c8:	f103 3aff 	add.w	sl, r3, #4294967295
900259cc:	4550      	cmp	r0, sl
900259ce:	f280 8105 	bge.w	90025bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900259d2:	fa0f f38e 	sxth.w	r3, lr
900259d6:	fb00 1103 	mla	r1, r0, r3, r1
900259da:	9809      	ldr	r0, [sp, #36]	; 0x24
900259dc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900259e0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900259e4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900259e8:	f1bc 0f00 	cmp.w	ip, #0
900259ec:	d007      	beq.n	900259fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900259ee:	005b      	lsls	r3, r3, #1
900259f0:	eb0a 0003 	add.w	r0, sl, r3
900259f4:	f83a 3003 	ldrh.w	r3, [sl, r3]
900259f8:	930c      	str	r3, [sp, #48]	; 0x30
900259fa:	8843      	ldrh	r3, [r0, #2]
900259fc:	930d      	str	r3, [sp, #52]	; 0x34
900259fe:	ea4f 400e 	mov.w	r0, lr, lsl #16
90025a02:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025a06:	fb12 f30c 	smulbb	r3, r2, ip
90025a0a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025a0e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025a12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025a16:	10db      	asrs	r3, r3, #3
90025a18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025a1c:	ea40 000e 	orr.w	r0, r0, lr
90025a20:	f1cc 0e10 	rsb	lr, ip, #16
90025a24:	ea4a 0101 	orr.w	r1, sl, r1
90025a28:	9f08      	ldr	r7, [sp, #32]
90025a2a:	ebae 0e02 	sub.w	lr, lr, r2
90025a2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025a32:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025a36:	4351      	muls	r1, r2
90025a38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90025a3a:	fb0e 1e00 	mla	lr, lr, r0, r1
90025a3e:	990c      	ldr	r1, [sp, #48]	; 0x30
90025a40:	0410      	lsls	r0, r2, #16
90025a42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025a46:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025a4a:	4310      	orrs	r0, r2
90025a4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90025a4e:	0412      	lsls	r2, r2, #16
90025a50:	fb03 e000 	mla	r0, r3, r0, lr
90025a54:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90025a58:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025a5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025a60:	ea42 020e 	orr.w	r2, r2, lr
90025a64:	fb03 0302 	mla	r3, r3, r2, r0
90025a68:	f8b8 0000 	ldrh.w	r0, [r8]
90025a6c:	0d5a      	lsrs	r2, r3, #21
90025a6e:	095b      	lsrs	r3, r3, #5
90025a70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025a74:	1201      	asrs	r1, r0, #8
90025a76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90025a7a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025a7e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025a82:	00c0      	lsls	r0, r0, #3
90025a84:	4313      	orrs	r3, r2
90025a86:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90025a8a:	fb11 f107 	smulbb	r1, r1, r7
90025a8e:	b2c0      	uxtb	r0, r0
90025a90:	b29b      	uxth	r3, r3
90025a92:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90025a96:	fb10 f007 	smulbb	r0, r0, r7
90025a9a:	fb1e fe07 	smulbb	lr, lr, r7
90025a9e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90025aa2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90025aa6:	fb0c 1c02 	mla	ip, ip, r2, r1
90025aaa:	10d9      	asrs	r1, r3, #3
90025aac:	00db      	lsls	r3, r3, #3
90025aae:	fa1f fc8c 	uxth.w	ip, ip
90025ab2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025ab6:	b2db      	uxtb	r3, r3
90025ab8:	fb01 e102 	mla	r1, r1, r2, lr
90025abc:	fb03 0302 	mla	r3, r3, r2, r0
90025ac0:	b289      	uxth	r1, r1
90025ac2:	b29a      	uxth	r2, r3
90025ac4:	f10c 0301 	add.w	r3, ip, #1
90025ac8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025acc:	1c53      	adds	r3, r2, #1
90025ace:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025ad2:	1c4a      	adds	r2, r1, #1
90025ad4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90025ad8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025adc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025ae0:	0949      	lsrs	r1, r1, #5
90025ae2:	ea43 030c 	orr.w	r3, r3, ip
90025ae6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025aea:	430b      	orrs	r3, r1
90025aec:	f8a8 3000 	strh.w	r3, [r8]
90025af0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025af2:	f108 0802 	add.w	r8, r8, #2
90025af6:	f109 39ff 	add.w	r9, r9, #4294967295
90025afa:	441c      	add	r4, r3
90025afc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025afe:	441e      	add	r6, r3
90025b00:	e74a      	b.n	90025998 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025b02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025b04:	3d01      	subs	r5, #1
90025b06:	441c      	add	r4, r3
90025b08:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025b0a:	441e      	add	r6, r3
90025b0c:	9b07      	ldr	r3, [sp, #28]
90025b0e:	3302      	adds	r3, #2
90025b10:	9307      	str	r3, [sp, #28]
90025b12:	e722      	b.n	9002595a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025b14:	d022      	beq.n	90025b5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025b16:	1e6b      	subs	r3, r5, #1
90025b18:	981f      	ldr	r0, [sp, #124]	; 0x7c
90025b1a:	fb00 4003 	mla	r0, r0, r3, r4
90025b1e:	1400      	asrs	r0, r0, #16
90025b20:	f53f af37 	bmi.w	90025992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025b24:	3901      	subs	r1, #1
90025b26:	4288      	cmp	r0, r1
90025b28:	f6bf af33 	bge.w	90025992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025b2c:	9920      	ldr	r1, [sp, #128]	; 0x80
90025b2e:	fb01 6303 	mla	r3, r1, r3, r6
90025b32:	141b      	asrs	r3, r3, #16
90025b34:	f53f af2d 	bmi.w	90025992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025b38:	3a01      	subs	r2, #1
90025b3a:	4293      	cmp	r3, r2
90025b3c:	f6bf af29 	bge.w	90025992 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025b40:	46a8      	mov	r8, r5
90025b42:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025b46:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90025b4a:	f1b8 0f00 	cmp.w	r8, #0
90025b4e:	dc60      	bgt.n	90025c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025b50:	9b07      	ldr	r3, [sp, #28]
90025b52:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025b56:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025b5a:	9307      	str	r3, [sp, #28]
90025b5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025b5e:	2b00      	cmp	r3, #0
90025b60:	f340 80f8 	ble.w	90025d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025b64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025b68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025b6a:	ee30 0a04 	vadd.f32	s0, s0, s8
90025b6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025b72:	eef0 6a62 	vmov.f32	s13, s5
90025b76:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025b7a:	ee31 1a05 	vadd.f32	s2, s2, s10
90025b7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b82:	ee16 4a90 	vmov	r4, s13
90025b86:	eef0 6a43 	vmov.f32	s13, s6
90025b8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025b8e:	ee16 6a90 	vmov	r6, s13
90025b92:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025b96:	ee61 7a27 	vmul.f32	s15, s2, s15
90025b9a:	ee77 2a62 	vsub.f32	s5, s14, s5
90025b9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025ba2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ba6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025baa:	ee12 2a90 	vmov	r2, s5
90025bae:	eef0 2a47 	vmov.f32	s5, s14
90025bb2:	fb92 f3f3 	sdiv	r3, r2, r3
90025bb6:	ee13 2a10 	vmov	r2, s6
90025bba:	931f      	str	r3, [sp, #124]	; 0x7c
90025bbc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025bbe:	eeb0 3a67 	vmov.f32	s6, s15
90025bc2:	fb92 f3f3 	sdiv	r3, r2, r3
90025bc6:	9320      	str	r3, [sp, #128]	; 0x80
90025bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025bca:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025bcc:	3b01      	subs	r3, #1
90025bce:	930a      	str	r3, [sp, #40]	; 0x28
90025bd0:	bf08      	it	eq
90025bd2:	4615      	moveq	r5, r2
90025bd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025bd6:	bf18      	it	ne
90025bd8:	461d      	movne	r5, r3
90025bda:	e6af      	b.n	9002593c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025bdc:	f111 0a01 	adds.w	sl, r1, #1
90025be0:	d486      	bmi.n	90025af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025be2:	45d6      	cmp	lr, sl
90025be4:	db84      	blt.n	90025af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025be6:	f110 0a01 	adds.w	sl, r0, #1
90025bea:	d481      	bmi.n	90025af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025bec:	4553      	cmp	r3, sl
90025bee:	f6ff af7f 	blt.w	90025af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025bf2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90025bf4:	b21b      	sxth	r3, r3
90025bf6:	9101      	str	r1, [sp, #4]
90025bf8:	4641      	mov	r1, r8
90025bfa:	9300      	str	r3, [sp, #0]
90025bfc:	fa0f f38e 	sxth.w	r3, lr
90025c00:	e9cd 0202 	strd	r0, r2, [sp, #8]
90025c04:	e9cd c704 	strd	ip, r7, [sp, #16]
90025c08:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025c0a:	9811      	ldr	r0, [sp, #68]	; 0x44
90025c0c:	f7ff fdb2 	bl	90025774 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025c10:	e76e      	b.n	90025af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025c12:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025c14:	1430      	asrs	r0, r6, #16
90025c16:	9f09      	ldr	r7, [sp, #36]	; 0x24
90025c18:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025c1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025c20:	1423      	asrs	r3, r4, #16
90025c22:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025c26:	fb01 3000 	mla	r0, r1, r0, r3
90025c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025c2c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90025c30:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90025c34:	8858      	ldrh	r0, [r3, #2]
90025c36:	f1be 0f00 	cmp.w	lr, #0
90025c3a:	d00b      	beq.n	90025c54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025c3c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025c40:	3901      	subs	r1, #1
90025c42:	0049      	lsls	r1, r1, #1
90025c44:	3102      	adds	r1, #2
90025c46:	eb03 0b01 	add.w	fp, r3, r1
90025c4a:	5a5b      	ldrh	r3, [r3, r1]
90025c4c:	930e      	str	r3, [sp, #56]	; 0x38
90025c4e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025c52:	930f      	str	r3, [sp, #60]	; 0x3c
90025c54:	ea4f 410c 	mov.w	r1, ip, lsl #16
90025c58:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025c5c:	fb12 f30e 	smulbb	r3, r2, lr
90025c60:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025c64:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90025c68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025c6c:	10db      	asrs	r3, r3, #3
90025c6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025c72:	ea41 010c 	orr.w	r1, r1, ip
90025c76:	f1ce 0c10 	rsb	ip, lr, #16
90025c7a:	ea4b 0000 	orr.w	r0, fp, r0
90025c7e:	9f08      	ldr	r7, [sp, #32]
90025c80:	ebac 0c02 	sub.w	ip, ip, r2
90025c84:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025c88:	f108 38ff 	add.w	r8, r8, #4294967295
90025c8c:	4350      	muls	r0, r2
90025c8e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90025c92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025c94:	fb0c 0c01 	mla	ip, ip, r1, r0
90025c98:	980e      	ldr	r0, [sp, #56]	; 0x38
90025c9a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025c9e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90025ca2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90025ca4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025ca8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025cac:	0412      	lsls	r2, r2, #16
90025cae:	ea4b 0101 	orr.w	r1, fp, r1
90025cb2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025cb6:	fb03 c101 	mla	r1, r3, r1, ip
90025cba:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025cbe:	4302      	orrs	r2, r0
90025cc0:	fb03 1202 	mla	r2, r3, r2, r1
90025cc4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025cc8:	0952      	lsrs	r2, r2, #5
90025cca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90025cce:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90025cd2:	f8b9 2000 	ldrh.w	r2, [r9]
90025cd6:	ea4b 0303 	orr.w	r3, fp, r3
90025cda:	1211      	asrs	r1, r2, #8
90025cdc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025ce0:	b29b      	uxth	r3, r3
90025ce2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025ce6:	00d2      	lsls	r2, r2, #3
90025ce8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90025cec:	fb11 f107 	smulbb	r1, r1, r7
90025cf0:	1218      	asrs	r0, r3, #8
90025cf2:	fb1c fc07 	smulbb	ip, ip, r7
90025cf6:	b2d2      	uxtb	r2, r2
90025cf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025cfc:	fb12 f207 	smulbb	r2, r2, r7
90025d00:	fb00 100a 	mla	r0, r0, sl, r1
90025d04:	10d9      	asrs	r1, r3, #3
90025d06:	00db      	lsls	r3, r3, #3
90025d08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025d0c:	b280      	uxth	r0, r0
90025d0e:	b2db      	uxtb	r3, r3
90025d10:	fb01 c10a 	mla	r1, r1, sl, ip
90025d14:	fb03 230a 	mla	r3, r3, sl, r2
90025d18:	1c42      	adds	r2, r0, #1
90025d1a:	b289      	uxth	r1, r1
90025d1c:	b29b      	uxth	r3, r3
90025d1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025d22:	f101 0c01 	add.w	ip, r1, #1
90025d26:	1c5a      	adds	r2, r3, #1
90025d28:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025d2c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90025d30:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025d34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025d36:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025d3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025d3e:	441c      	add	r4, r3
90025d40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025d44:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025d46:	4310      	orrs	r0, r2
90025d48:	441e      	add	r6, r3
90025d4a:	ea40 000c 	orr.w	r0, r0, ip
90025d4e:	f829 0b02 	strh.w	r0, [r9], #2
90025d52:	e6fa      	b.n	90025b4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90025d54:	b013      	add	sp, #76	; 0x4c
90025d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025d5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90025d5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90025d5e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90025d62:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90025d66:	fb0e 4703 	mla	r7, lr, r3, r4
90025d6a:	f1be 0f00 	cmp.w	lr, #0
90025d6e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90025d72:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90025d76:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025d7a:	8808      	ldrh	r0, [r1, #0]
90025d7c:	db60      	blt.n	90025e40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025d7e:	45f1      	cmp	r9, lr
90025d80:	dd5e      	ble.n	90025e40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025d82:	2c00      	cmp	r4, #0
90025d84:	db5a      	blt.n	90025e3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025d86:	42a3      	cmp	r3, r4
90025d88:	dd58      	ble.n	90025e3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025d8a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025d8e:	1c62      	adds	r2, r4, #1
90025d90:	d459      	bmi.n	90025e46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025d92:	4293      	cmp	r3, r2
90025d94:	dd57      	ble.n	90025e46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025d96:	2d00      	cmp	r5, #0
90025d98:	d055      	beq.n	90025e46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025d9a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025d9e:	f11e 0e01 	adds.w	lr, lr, #1
90025da2:	d454      	bmi.n	90025e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025da4:	45f1      	cmp	r9, lr
90025da6:	dd52      	ble.n	90025e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025da8:	2e00      	cmp	r6, #0
90025daa:	d050      	beq.n	90025e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025dac:	2c00      	cmp	r4, #0
90025dae:	db4c      	blt.n	90025e4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025db0:	42a3      	cmp	r3, r4
90025db2:	dd4a      	ble.n	90025e4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025db4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025db8:	3401      	adds	r4, #1
90025dba:	d405      	bmi.n	90025dc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025dbc:	42a3      	cmp	r3, r4
90025dbe:	dd03      	ble.n	90025dc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025dc0:	b115      	cbz	r5, 90025dc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025dc2:	3301      	adds	r3, #1
90025dc4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025dc8:	fb15 f406 	smulbb	r4, r5, r6
90025dcc:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025dd0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90025dd4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025dd8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025ddc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025de0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90025de4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90025de8:	ea43 0c0c 	orr.w	ip, r3, ip
90025dec:	f1c6 0310 	rsb	r3, r6, #16
90025df0:	ea4e 0707 	orr.w	r7, lr, r7
90025df4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025df8:	1b5b      	subs	r3, r3, r5
90025dfa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025dfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025e02:	437d      	muls	r5, r7
90025e04:	fb03 5c0c 	mla	ip, r3, ip, r5
90025e08:	0403      	lsls	r3, r0, #16
90025e0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025e0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025e12:	4318      	orrs	r0, r3
90025e14:	0413      	lsls	r3, r2, #16
90025e16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025e1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025e1e:	fb04 c000 	mla	r0, r4, r0, ip
90025e22:	4313      	orrs	r3, r2
90025e24:	fb06 0003 	mla	r0, r6, r3, r0
90025e28:	0d43      	lsrs	r3, r0, #21
90025e2a:	0940      	lsrs	r0, r0, #5
90025e2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025e30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025e34:	4318      	orrs	r0, r3
90025e36:	8008      	strh	r0, [r1, #0]
90025e38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90025e3c:	4684      	mov	ip, r0
90025e3e:	e7a6      	b.n	90025d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90025e40:	4607      	mov	r7, r0
90025e42:	4684      	mov	ip, r0
90025e44:	e7ab      	b.n	90025d9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025e46:	4607      	mov	r7, r0
90025e48:	e7a9      	b.n	90025d9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025e4a:	4602      	mov	r2, r0
90025e4c:	e7b4      	b.n	90025db8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90025e4e:	4602      	mov	r2, r0
90025e50:	e7ba      	b.n	90025dc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90025e52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025e52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025e56:	b08f      	sub	sp, #60	; 0x3c
90025e58:	461d      	mov	r5, r3
90025e5a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025e5c:	9107      	str	r1, [sp, #28]
90025e5e:	920c      	str	r2, [sp, #48]	; 0x30
90025e60:	6859      	ldr	r1, [r3, #4]
90025e62:	681b      	ldr	r3, [r3, #0]
90025e64:	900d      	str	r0, [sp, #52]	; 0x34
90025e66:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90025e6a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90025e6e:	fb01 2707 	mla	r7, r1, r7, r2
90025e72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90025e76:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025e78:	f8d3 8000 	ldr.w	r8, [r3]
90025e7c:	9b07      	ldr	r3, [sp, #28]
90025e7e:	2b00      	cmp	r3, #0
90025e80:	dc03      	bgt.n	90025e8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025e82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90025e84:	2b00      	cmp	r3, #0
90025e86:	f340 8182 	ble.w	9002618e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025e8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025e8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025e90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025e94:	1e48      	subs	r0, r1, #1
90025e96:	f102 3cff 	add.w	ip, r2, #4294967295
90025e9a:	2d00      	cmp	r5, #0
90025e9c:	f340 809b 	ble.w	90025fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025ea0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025ea4:	ea4f 4326 	mov.w	r3, r6, asr #16
90025ea8:	d406      	bmi.n	90025eb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025eaa:	4586      	cmp	lr, r0
90025eac:	da04      	bge.n	90025eb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025eae:	2b00      	cmp	r3, #0
90025eb0:	db02      	blt.n	90025eb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025eb2:	4563      	cmp	r3, ip
90025eb4:	f2c0 8090 	blt.w	90025fd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025eb8:	f11e 0e01 	adds.w	lr, lr, #1
90025ebc:	f100 8084 	bmi.w	90025fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025ec0:	4571      	cmp	r1, lr
90025ec2:	f2c0 8081 	blt.w	90025fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025ec6:	3301      	adds	r3, #1
90025ec8:	d47e      	bmi.n	90025fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025eca:	429a      	cmp	r2, r3
90025ecc:	db7c      	blt.n	90025fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025ece:	46aa      	mov	sl, r5
90025ed0:	46b9      	mov	r9, r7
90025ed2:	f1ba 0f00 	cmp.w	sl, #0
90025ed6:	f340 8099 	ble.w	9002600c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025eda:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025edc:	1421      	asrs	r1, r4, #16
90025ede:	ea4f 4026 	mov.w	r0, r6, asr #16
90025ee2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025ee6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025eea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025eee:	f100 80d1 	bmi.w	90026094 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025ef2:	f10e 3bff 	add.w	fp, lr, #4294967295
90025ef6:	4559      	cmp	r1, fp
90025ef8:	f280 80cc 	bge.w	90026094 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025efc:	2800      	cmp	r0, #0
90025efe:	f2c0 80c9 	blt.w	90026094 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025f02:	f103 3bff 	add.w	fp, r3, #4294967295
90025f06:	4558      	cmp	r0, fp
90025f08:	f280 80c4 	bge.w	90026094 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025f0c:	fa0f fe8e 	sxth.w	lr, lr
90025f10:	fb00 110e 	mla	r1, r0, lr, r1
90025f14:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025f18:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90025f1c:	8841      	ldrh	r1, [r0, #2]
90025f1e:	f1bc 0f00 	cmp.w	ip, #0
90025f22:	d00b      	beq.n	90025f3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90025f24:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90025f28:	3b01      	subs	r3, #1
90025f2a:	005b      	lsls	r3, r3, #1
90025f2c:	3302      	adds	r3, #2
90025f2e:	eb00 0e03 	add.w	lr, r0, r3
90025f32:	5ac3      	ldrh	r3, [r0, r3]
90025f34:	9308      	str	r3, [sp, #32]
90025f36:	f8be 3002 	ldrh.w	r3, [lr, #2]
90025f3a:	9309      	str	r3, [sp, #36]	; 0x24
90025f3c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90025f40:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90025f44:	fb12 f30c 	smulbb	r3, r2, ip
90025f48:	f1cc 0e10 	rsb	lr, ip, #16
90025f4c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025f50:	10db      	asrs	r3, r3, #3
90025f52:	ebae 0e02 	sub.w	lr, lr, r2
90025f56:	ea40 000b 	orr.w	r0, r0, fp
90025f5a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90025f5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025f62:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025f66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025f6a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025f6e:	ea4b 0101 	orr.w	r1, fp, r1
90025f72:	4351      	muls	r1, r2
90025f74:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025f76:	fb0e 1e00 	mla	lr, lr, r0, r1
90025f7a:	0410      	lsls	r0, r2, #16
90025f7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025f80:	9908      	ldr	r1, [sp, #32]
90025f82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025f86:	4310      	orrs	r0, r2
90025f88:	9a08      	ldr	r2, [sp, #32]
90025f8a:	0412      	lsls	r2, r2, #16
90025f8c:	fb03 e000 	mla	r0, r3, r0, lr
90025f90:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90025f94:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025f98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025f9c:	ea42 020e 	orr.w	r2, r2, lr
90025fa0:	fb03 0302 	mla	r3, r3, r2, r0
90025fa4:	0d5a      	lsrs	r2, r3, #21
90025fa6:	095b      	lsrs	r3, r3, #5
90025fa8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025fac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90025fb0:	4313      	orrs	r3, r2
90025fb2:	f8a9 3000 	strh.w	r3, [r9]
90025fb6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90025fb8:	f109 0902 	add.w	r9, r9, #2
90025fbc:	f10a 3aff 	add.w	sl, sl, #4294967295
90025fc0:	441c      	add	r4, r3
90025fc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025fc4:	441e      	add	r6, r3
90025fc6:	e784      	b.n	90025ed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90025fc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90025fca:	3d01      	subs	r5, #1
90025fcc:	3702      	adds	r7, #2
90025fce:	441c      	add	r4, r3
90025fd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025fd2:	441e      	add	r6, r3
90025fd4:	e761      	b.n	90025e9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025fd6:	d01d      	beq.n	90026014 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025fd8:	1e6b      	subs	r3, r5, #1
90025fda:	981b      	ldr	r0, [sp, #108]	; 0x6c
90025fdc:	fb00 4003 	mla	r0, r0, r3, r4
90025fe0:	1400      	asrs	r0, r0, #16
90025fe2:	f53f af74 	bmi.w	90025ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025fe6:	3901      	subs	r1, #1
90025fe8:	4288      	cmp	r0, r1
90025fea:	f6bf af70 	bge.w	90025ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025fee:	991c      	ldr	r1, [sp, #112]	; 0x70
90025ff0:	fb01 6303 	mla	r3, r1, r3, r6
90025ff4:	141b      	asrs	r3, r3, #16
90025ff6:	f53f af6a 	bmi.w	90025ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025ffa:	3a01      	subs	r2, #1
90025ffc:	4293      	cmp	r3, r2
90025ffe:	f6bf af66 	bge.w	90025ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026002:	46a9      	mov	r9, r5
90026004:	46ba      	mov	sl, r7
90026006:	f1b9 0f00 	cmp.w	r9, #0
9002600a:	dc5b      	bgt.n	900260c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002600c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026010:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90026014:	9b07      	ldr	r3, [sp, #28]
90026016:	2b00      	cmp	r3, #0
90026018:	f340 80b9 	ble.w	9002618e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002601c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026020:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026022:	ee30 0a04 	vadd.f32	s0, s0, s8
90026026:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002602a:	eef0 6a62 	vmov.f32	s13, s5
9002602e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026032:	ee31 1a05 	vadd.f32	s2, s2, s10
90026036:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002603a:	ee16 4a90 	vmov	r4, s13
9002603e:	eef0 6a43 	vmov.f32	s13, s6
90026042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026046:	ee16 6a90 	vmov	r6, s13
9002604a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002604e:	ee61 7a27 	vmul.f32	s15, s2, s15
90026052:	ee77 2a62 	vsub.f32	s5, s14, s5
90026056:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002605a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002605e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026062:	ee12 2a90 	vmov	r2, s5
90026066:	eef0 2a47 	vmov.f32	s5, s14
9002606a:	fb92 f3f3 	sdiv	r3, r2, r3
9002606e:	ee13 2a10 	vmov	r2, s6
90026072:	931b      	str	r3, [sp, #108]	; 0x6c
90026074:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026076:	eeb0 3a67 	vmov.f32	s6, s15
9002607a:	fb92 f3f3 	sdiv	r3, r2, r3
9002607e:	931c      	str	r3, [sp, #112]	; 0x70
90026080:	9b07      	ldr	r3, [sp, #28]
90026082:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026084:	3b01      	subs	r3, #1
90026086:	9307      	str	r3, [sp, #28]
90026088:	bf08      	it	eq
9002608a:	4615      	moveq	r5, r2
9002608c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002608e:	bf18      	it	ne
90026090:	461d      	movne	r5, r3
90026092:	e6f3      	b.n	90025e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90026094:	f111 0b01 	adds.w	fp, r1, #1
90026098:	d48d      	bmi.n	90025fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002609a:	45de      	cmp	lr, fp
9002609c:	db8b      	blt.n	90025fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002609e:	f110 0b01 	adds.w	fp, r0, #1
900260a2:	d488      	bmi.n	90025fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900260a4:	455b      	cmp	r3, fp
900260a6:	db86      	blt.n	90025fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900260a8:	b21b      	sxth	r3, r3
900260aa:	e9cd 1001 	strd	r1, r0, [sp, #4]
900260ae:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900260b2:	9300      	str	r3, [sp, #0]
900260b4:	4642      	mov	r2, r8
900260b6:	fa0f f38e 	sxth.w	r3, lr
900260ba:	4649      	mov	r1, r9
900260bc:	980d      	ldr	r0, [sp, #52]	; 0x34
900260be:	f7ff fe4c 	bl	90025d5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
900260c2:	e778      	b.n	90025fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900260c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900260c6:	1420      	asrs	r0, r4, #16
900260c8:	1431      	asrs	r1, r6, #16
900260ca:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900260ce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900260d2:	f3c4 3203 	ubfx	r2, r4, #12, #4
900260d6:	fb03 0101 	mla	r1, r3, r1, r0
900260da:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900260de:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900260e2:	8841      	ldrh	r1, [r0, #2]
900260e4:	f1be 0f00 	cmp.w	lr, #0
900260e8:	d00b      	beq.n	90026102 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900260ea:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900260ee:	3b01      	subs	r3, #1
900260f0:	005b      	lsls	r3, r3, #1
900260f2:	3302      	adds	r3, #2
900260f4:	eb00 0b03 	add.w	fp, r0, r3
900260f8:	5ac3      	ldrh	r3, [r0, r3]
900260fa:	930a      	str	r3, [sp, #40]	; 0x28
900260fc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026100:	930b      	str	r3, [sp, #44]	; 0x2c
90026102:	ea4f 400c 	mov.w	r0, ip, lsl #16
90026106:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002610a:	fb12 f30e 	smulbb	r3, r2, lr
9002610e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90026112:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026116:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002611a:	10db      	asrs	r3, r3, #3
9002611c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026120:	ea40 000c 	orr.w	r0, r0, ip
90026124:	f1ce 0c10 	rsb	ip, lr, #16
90026128:	ea4b 0101 	orr.w	r1, fp, r1
9002612c:	f109 39ff 	add.w	r9, r9, #4294967295
90026130:	ebac 0c02 	sub.w	ip, ip, r2
90026134:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026138:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002613c:	4351      	muls	r1, r2
9002613e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90026140:	fb0c 1c00 	mla	ip, ip, r0, r1
90026144:	990a      	ldr	r1, [sp, #40]	; 0x28
90026146:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002614a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002614e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90026150:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026154:	0412      	lsls	r2, r2, #16
90026156:	ea4b 0000 	orr.w	r0, fp, r0
9002615a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9002615e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026162:	fb03 c000 	mla	r0, r3, r0, ip
90026166:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002616a:	ea42 0b0b 	orr.w	fp, r2, fp
9002616e:	fb03 000b 	mla	r0, r3, fp, r0
90026172:	0d43      	lsrs	r3, r0, #21
90026174:	0940      	lsrs	r0, r0, #5
90026176:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002617a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002617e:	4318      	orrs	r0, r3
90026180:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026182:	441c      	add	r4, r3
90026184:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026186:	f82a 0b02 	strh.w	r0, [sl], #2
9002618a:	441e      	add	r6, r3
9002618c:	e73b      	b.n	90026006 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002618e:	b00f      	add	sp, #60	; 0x3c
90026190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90026194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026198:	b085      	sub	sp, #20
9002619a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002619e:	9102      	str	r1, [sp, #8]
900261a0:	2c00      	cmp	r4, #0
900261a2:	fb04 7103 	mla	r1, r4, r3, r7
900261a6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
900261aa:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900261ae:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900261b2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
900261b6:	f2c0 811b 	blt.w	900263f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900261ba:	45a6      	cmp	lr, r4
900261bc:	f340 8118 	ble.w	900263f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900261c0:	2f00      	cmp	r7, #0
900261c2:	f2c0 8113 	blt.w	900263ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900261c6:	42bb      	cmp	r3, r7
900261c8:	f340 8110 	ble.w	900263ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900261cc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900261d0:	1c7a      	adds	r2, r7, #1
900261d2:	f100 8110 	bmi.w	900263f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900261d6:	4293      	cmp	r3, r2
900261d8:	f340 810d 	ble.w	900263f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900261dc:	2e00      	cmp	r6, #0
900261de:	f000 810c 	beq.w	900263fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900261e2:	f8dc 1004 	ldr.w	r1, [ip, #4]
900261e6:	3401      	adds	r4, #1
900261e8:	f100 810b 	bmi.w	90026402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900261ec:	45a6      	cmp	lr, r4
900261ee:	f340 8108 	ble.w	90026402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900261f2:	2800      	cmp	r0, #0
900261f4:	f000 8108 	beq.w	90026408 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900261f8:	2f00      	cmp	r7, #0
900261fa:	f2c0 8100 	blt.w	900263fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900261fe:	42bb      	cmp	r3, r7
90026200:	f340 80fd 	ble.w	900263fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026204:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026208:	3701      	adds	r7, #1
9002620a:	f100 8100 	bmi.w	9002640e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002620e:	42bb      	cmp	r3, r7
90026210:	f340 80fd 	ble.w	9002640e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026214:	2e00      	cmp	r6, #0
90026216:	f000 80fc 	beq.w	90026412 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002621a:	3301      	adds	r3, #1
9002621c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90026220:	b2b6      	uxth	r6, r6
90026222:	b280      	uxth	r0, r0
90026224:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026228:	fb00 fe06 	mul.w	lr, r0, r6
9002622c:	0136      	lsls	r6, r6, #4
9002622e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026232:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026236:	eba6 070e 	sub.w	r7, r6, lr
9002623a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9002623e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026242:	b280      	uxth	r0, r0
90026244:	b2bf      	uxth	r7, r7
90026246:	1a1b      	subs	r3, r3, r0
90026248:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002624c:	fb0a f607 	mul.w	r6, sl, r7
90026250:	b29b      	uxth	r3, r3
90026252:	fb0b 6603 	mla	r6, fp, r3, r6
90026256:	fb00 6609 	mla	r6, r0, r9, r6
9002625a:	fb0e 6608 	mla	r6, lr, r8, r6
9002625e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026262:	9600      	str	r6, [sp, #0]
90026264:	2e00      	cmp	r6, #0
90026266:	f000 80be 	beq.w	900263e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
9002626a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002626e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026272:	9e02      	ldr	r6, [sp, #8]
90026274:	fb0b fc0c 	mul.w	ip, fp, ip
90026278:	fb0b f505 	mul.w	r5, fp, r5
9002627c:	8836      	ldrh	r6, [r6, #0]
9002627e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026282:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026286:	9501      	str	r5, [sp, #4]
90026288:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9002628c:	44dc      	add	ip, fp
9002628e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026292:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026296:	9503      	str	r5, [sp, #12]
90026298:	9d01      	ldr	r5, [sp, #4]
9002629a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9002629e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900262a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900262a6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900262aa:	fb0a fc0c 	mul.w	ip, sl, ip
900262ae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900262b2:	fb0a fa01 	mul.w	sl, sl, r1
900262b6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900262ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900262be:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900262c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900262c6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900262ca:	4465      	add	r5, ip
900262cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900262d0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900262d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900262d8:	fb09 fc0c 	mul.w	ip, r9, ip
900262dc:	0a2d      	lsrs	r5, r5, #8
900262de:	fb09 f904 	mul.w	r9, r9, r4
900262e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900262e6:	ea4f 211c 	mov.w	r1, ip, lsr #8
900262ea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900262ee:	f509 7480 	add.w	r4, r9, #256	; 0x100
900262f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900262f6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900262fa:	437d      	muls	r5, r7
900262fc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026300:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026304:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026308:	4461      	add	r1, ip
9002630a:	fb08 f404 	mul.w	r4, r8, r4
9002630e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026312:	fb08 f802 	mul.w	r8, r8, r2
90026316:	0a09      	lsrs	r1, r1, #8
90026318:	0a22      	lsrs	r2, r4, #8
9002631a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002631e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026322:	fb07 f70a 	mul.w	r7, r7, sl
90026326:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002632a:	4414      	add	r4, r2
9002632c:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026330:	0a24      	lsrs	r4, r4, #8
90026332:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026336:	9a03      	ldr	r2, [sp, #12]
90026338:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002633c:	fb02 5503 	mla	r5, r2, r3, r5
90026340:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026344:	9a00      	ldr	r2, [sp, #0]
90026346:	fb04 540e 	mla	r4, r4, lr, r5
9002634a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002634e:	1235      	asrs	r5, r6, #8
90026350:	fb01 4100 	mla	r1, r1, r0, r4
90026354:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90026358:	0a09      	lsrs	r1, r1, #8
9002635a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002635e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026362:	fb03 7101 	mla	r1, r3, r1, r7
90026366:	fb0e 1e08 	mla	lr, lr, r8, r1
9002636a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002636e:	fb00 e101 	mla	r1, r0, r1, lr
90026372:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90026376:	b287      	uxth	r7, r0
90026378:	0a09      	lsrs	r1, r1, #8
9002637a:	437a      	muls	r2, r7
9002637c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026380:	1c53      	adds	r3, r2, #1
90026382:	4321      	orrs	r1, r4
90026384:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026388:	0c0a      	lsrs	r2, r1, #16
9002638a:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002638e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026392:	b2c8      	uxtb	r0, r1
90026394:	fb12 f207 	smulbb	r2, r2, r7
90026398:	fb14 f407 	smulbb	r4, r4, r7
9002639c:	b2db      	uxtb	r3, r3
9002639e:	fb10 f007 	smulbb	r0, r0, r7
900263a2:	fb05 2503 	mla	r5, r5, r3, r2
900263a6:	10f2      	asrs	r2, r6, #3
900263a8:	00f6      	lsls	r6, r6, #3
900263aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900263ae:	b2ad      	uxth	r5, r5
900263b0:	b2f6      	uxtb	r6, r6
900263b2:	fb02 4203 	mla	r2, r2, r3, r4
900263b6:	fb06 0303 	mla	r3, r6, r3, r0
900263ba:	b294      	uxth	r4, r2
900263bc:	b299      	uxth	r1, r3
900263be:	1c6b      	adds	r3, r5, #1
900263c0:	1c62      	adds	r2, r4, #1
900263c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900263c6:	1c4b      	adds	r3, r1, #1
900263c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900263cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900263d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900263d4:	0952      	lsrs	r2, r2, #5
900263d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900263da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900263de:	432b      	orrs	r3, r5
900263e0:	4313      	orrs	r3, r2
900263e2:	9a02      	ldr	r2, [sp, #8]
900263e4:	8013      	strh	r3, [r2, #0]
900263e6:	b005      	add	sp, #20
900263e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900263ec:	2500      	movs	r5, #0
900263ee:	e6ef      	b.n	900261d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900263f0:	2100      	movs	r1, #0
900263f2:	460d      	mov	r5, r1
900263f4:	e6f7      	b.n	900261e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900263f6:	2100      	movs	r1, #0
900263f8:	e6f5      	b.n	900261e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900263fa:	4631      	mov	r1, r6
900263fc:	e6f3      	b.n	900261e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900263fe:	2400      	movs	r4, #0
90026400:	e702      	b.n	90026208 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026402:	2200      	movs	r2, #0
90026404:	4614      	mov	r4, r2
90026406:	e70b      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026408:	4602      	mov	r2, r0
9002640a:	4604      	mov	r4, r0
9002640c:	e708      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002640e:	2200      	movs	r2, #0
90026410:	e706      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026412:	4632      	mov	r2, r6
90026414:	e704      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026416 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026416:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002641a:	b09d      	sub	sp, #116	; 0x74
9002641c:	9219      	str	r2, [sp, #100]	; 0x64
9002641e:	9307      	str	r3, [sp, #28]
90026420:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90026422:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90026426:	901b      	str	r0, [sp, #108]	; 0x6c
90026428:	931a      	str	r3, [sp, #104]	; 0x68
9002642a:	6850      	ldr	r0, [r2, #4]
9002642c:	9117      	str	r1, [sp, #92]	; 0x5c
9002642e:	6812      	ldr	r2, [r2, #0]
90026430:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90026434:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90026438:	fb00 1303 	mla	r3, r0, r3, r1
9002643c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026440:	930a      	str	r3, [sp, #40]	; 0x28
90026442:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026444:	681b      	ldr	r3, [r3, #0]
90026446:	9310      	str	r3, [sp, #64]	; 0x40
90026448:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9002644c:	930b      	str	r3, [sp, #44]	; 0x2c
9002644e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026450:	2b00      	cmp	r3, #0
90026452:	dc03      	bgt.n	9002645c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90026454:	9b19      	ldr	r3, [sp, #100]	; 0x64
90026456:	2b00      	cmp	r3, #0
90026458:	f340 8375 	ble.w	90026b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002645c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002645e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026462:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026466:	1e48      	subs	r0, r1, #1
90026468:	1e57      	subs	r7, r2, #1
9002646a:	9b07      	ldr	r3, [sp, #28]
9002646c:	2b00      	cmp	r3, #0
9002646e:	f340 818e 	ble.w	9002678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90026472:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026476:	ea4f 4326 	mov.w	r3, r6, asr #16
9002647a:	d406      	bmi.n	9002648a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002647c:	4584      	cmp	ip, r0
9002647e:	da04      	bge.n	9002648a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026480:	2b00      	cmp	r3, #0
90026482:	db02      	blt.n	9002648a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026484:	42bb      	cmp	r3, r7
90026486:	f2c0 8183 	blt.w	90026790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002648a:	f11c 0c01 	adds.w	ip, ip, #1
9002648e:	f100 8173 	bmi.w	90026778 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026492:	4561      	cmp	r1, ip
90026494:	f2c0 8170 	blt.w	90026778 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026498:	3301      	adds	r3, #1
9002649a:	f100 816d 	bmi.w	90026778 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002649e:	429a      	cmp	r2, r3
900264a0:	f2c0 816a 	blt.w	90026778 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900264a4:	9b07      	ldr	r3, [sp, #28]
900264a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900264a8:	9318      	str	r3, [sp, #96]	; 0x60
900264aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
900264ac:	2b00      	cmp	r3, #0
900264ae:	f340 818c 	ble.w	900267ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900264b2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
900264b4:	ea4f 4c26 	mov.w	ip, r6, asr #16
900264b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900264ba:	f3c4 3003 	ubfx	r0, r4, #12, #4
900264be:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900264c2:	1422      	asrs	r2, r4, #16
900264c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
900264c8:	689b      	ldr	r3, [r3, #8]
900264ca:	f100 81cd 	bmi.w	90026868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900264ce:	f103 38ff 	add.w	r8, r3, #4294967295
900264d2:	4542      	cmp	r2, r8
900264d4:	f280 81c8 	bge.w	90026868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900264d8:	f1bc 0f00 	cmp.w	ip, #0
900264dc:	f2c0 81c4 	blt.w	90026868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900264e0:	f10e 38ff 	add.w	r8, lr, #4294967295
900264e4:	45c4      	cmp	ip, r8
900264e6:	f280 81bf 	bge.w	90026868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900264ea:	b21b      	sxth	r3, r3
900264ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
900264ee:	fb0c 2203 	mla	r2, ip, r3, r2
900264f2:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900264f6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900264fa:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900264fe:	2800      	cmp	r0, #0
90026500:	f000 81a9 	beq.w	90026856 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026504:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026508:	950c      	str	r5, [sp, #48]	; 0x30
9002650a:	0e2d      	lsrs	r5, r5, #24
9002650c:	9513      	str	r5, [sp, #76]	; 0x4c
9002650e:	b181      	cbz	r1, 90026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026510:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026514:	3b01      	subs	r3, #1
90026516:	009b      	lsls	r3, r3, #2
90026518:	3304      	adds	r3, #4
9002651a:	eb08 0c03 	add.w	ip, r8, r3
9002651e:	f858 3003 	ldr.w	r3, [r8, r3]
90026522:	9308      	str	r3, [sp, #32]
90026524:	0e1b      	lsrs	r3, r3, #24
90026526:	9311      	str	r3, [sp, #68]	; 0x44
90026528:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002652c:	930d      	str	r3, [sp, #52]	; 0x34
9002652e:	0e1b      	lsrs	r3, r3, #24
90026530:	9314      	str	r3, [sp, #80]	; 0x50
90026532:	b280      	uxth	r0, r0
90026534:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026536:	b289      	uxth	r1, r1
90026538:	fb00 f901 	mul.w	r9, r0, r1
9002653c:	0100      	lsls	r0, r0, #4
9002653e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90026542:	eba0 0809 	sub.w	r8, r0, r9
90026546:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002654a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002654c:	b289      	uxth	r1, r1
9002654e:	fa1f f888 	uxth.w	r8, r8
90026552:	1a5b      	subs	r3, r3, r1
90026554:	fb08 f000 	mul.w	r0, r8, r0
90026558:	b29b      	uxth	r3, r3
9002655a:	fb03 000e 	mla	r0, r3, lr, r0
9002655e:	fb01 0005 	mla	r0, r1, r5, r0
90026562:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026564:	fb09 0005 	mla	r0, r9, r5, r0
90026568:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002656c:	2800      	cmp	r0, #0
9002656e:	f000 80fa 	beq.w	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026572:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90026576:	d01b      	beq.n	900265b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026578:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002657c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026580:	fb0e fa0a 	mul.w	sl, lr, sl
90026584:	fb0e fe02 	mul.w	lr, lr, r2
90026588:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002658c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026590:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90026594:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026598:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002659c:	4452      	add	r2, sl
9002659e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900265a2:	0a12      	lsrs	r2, r2, #8
900265a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900265a8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900265ac:	ea42 020c 	orr.w	r2, r2, ip
900265b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900265b2:	2dff      	cmp	r5, #255	; 0xff
900265b4:	d021      	beq.n	900265fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900265b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900265b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900265bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900265be:	fb05 fb0b 	mul.w	fp, r5, fp
900265c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900265c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900265c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900265ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900265ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900265d2:	fb05 fa0a 	mul.w	sl, r5, sl
900265d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900265da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900265de:	44de      	add	lr, fp
900265e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900265e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900265e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900265ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900265f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900265f4:	ea4e 050a 	orr.w	r5, lr, sl
900265f8:	950c      	str	r5, [sp, #48]	; 0x30
900265fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
900265fc:	2dff      	cmp	r5, #255	; 0xff
900265fe:	d021      	beq.n	90026644 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026600:	9d08      	ldr	r5, [sp, #32]
90026602:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026606:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026608:	fb05 fb0b 	mul.w	fp, r5, fp
9002660c:	9d08      	ldr	r5, [sp, #32]
9002660e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026612:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026614:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026618:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002661c:	fb05 fa0a 	mul.w	sl, r5, sl
90026620:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026624:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026628:	44de      	add	lr, fp
9002662a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002662e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026632:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026636:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002663a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002663e:	ea4e 050a 	orr.w	r5, lr, sl
90026642:	9508      	str	r5, [sp, #32]
90026644:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026646:	2dff      	cmp	r5, #255	; 0xff
90026648:	d021      	beq.n	9002668e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
9002664a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002664c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026650:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026652:	fb05 fb0b 	mul.w	fp, r5, fp
90026656:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90026658:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002665c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002665e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026662:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026666:	fb05 fa0a 	mul.w	sl, r5, sl
9002666a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002666e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026672:	44de      	add	lr, fp
90026674:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026678:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002667c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026680:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026684:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026688:	ea4e 050a 	orr.w	r5, lr, sl
9002668c:	950d      	str	r5, [sp, #52]	; 0x34
9002668e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026690:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90026694:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026698:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002669c:	9d08      	ldr	r5, [sp, #32]
9002669e:	fb08 fc0c 	mul.w	ip, r8, ip
900266a2:	fb03 cc0e 	mla	ip, r3, lr, ip
900266a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900266aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900266ac:	fb01 cc0e 	mla	ip, r1, lr, ip
900266b0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900266b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900266b6:	fb09 cc0e 	mla	ip, r9, lr, ip
900266ba:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900266be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900266c0:	fb08 f80e 	mul.w	r8, r8, lr
900266c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266c8:	fb03 8202 	mla	r2, r3, r2, r8
900266cc:	9b08      	ldr	r3, [sp, #32]
900266ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900266d2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
900266d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900266d8:	fb01 220a 	mla	r2, r1, sl, r2
900266dc:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
900266e0:	883b      	ldrh	r3, [r7, #0]
900266e2:	fb09 2901 	mla	r9, r9, r1, r2
900266e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900266e8:	1219      	asrs	r1, r3, #8
900266ea:	4342      	muls	r2, r0
900266ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
900266f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900266f4:	1c50      	adds	r0, r2, #1
900266f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900266fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900266fe:	ea4c 0c09 	orr.w	ip, ip, r9
90026702:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026706:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002670a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002670e:	fa5f fc8c 	uxtb.w	ip, ip
90026712:	fb12 f205 	smulbb	r2, r2, r5
90026716:	b2c0      	uxtb	r0, r0
90026718:	fb1c fc05 	smulbb	ip, ip, r5
9002671c:	fb01 2100 	mla	r1, r1, r0, r2
90026720:	10da      	asrs	r2, r3, #3
90026722:	fb1e fe05 	smulbb	lr, lr, r5
90026726:	00db      	lsls	r3, r3, #3
90026728:	b289      	uxth	r1, r1
9002672a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002672e:	b2db      	uxtb	r3, r3
90026730:	fb02 e200 	mla	r2, r2, r0, lr
90026734:	fb03 c300 	mla	r3, r3, r0, ip
90026738:	b292      	uxth	r2, r2
9002673a:	fa1f fc83 	uxth.w	ip, r3
9002673e:	1c4b      	adds	r3, r1, #1
90026740:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026744:	f10c 0301 	add.w	r3, ip, #1
90026748:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002674c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90026750:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026754:	430b      	orrs	r3, r1
90026756:	1c51      	adds	r1, r2, #1
90026758:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002675c:	0952      	lsrs	r2, r2, #5
9002675e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026762:	4313      	orrs	r3, r2
90026764:	803b      	strh	r3, [r7, #0]
90026766:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026768:	3702      	adds	r7, #2
9002676a:	441c      	add	r4, r3
9002676c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002676e:	441e      	add	r6, r3
90026770:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026772:	3b01      	subs	r3, #1
90026774:	9318      	str	r3, [sp, #96]	; 0x60
90026776:	e698      	b.n	900264aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026778:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002677a:	441c      	add	r4, r3
9002677c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002677e:	441e      	add	r6, r3
90026780:	9b07      	ldr	r3, [sp, #28]
90026782:	3b01      	subs	r3, #1
90026784:	9307      	str	r3, [sp, #28]
90026786:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026788:	3302      	adds	r3, #2
9002678a:	930a      	str	r3, [sp, #40]	; 0x28
9002678c:	e66d      	b.n	9002646a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002678e:	d023      	beq.n	900267d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026790:	9b07      	ldr	r3, [sp, #28]
90026792:	9829      	ldr	r0, [sp, #164]	; 0xa4
90026794:	3b01      	subs	r3, #1
90026796:	fb00 4003 	mla	r0, r0, r3, r4
9002679a:	1400      	asrs	r0, r0, #16
9002679c:	f53f ae82 	bmi.w	900264a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900267a0:	3901      	subs	r1, #1
900267a2:	4288      	cmp	r0, r1
900267a4:	f6bf ae7e 	bge.w	900264a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900267a8:	992a      	ldr	r1, [sp, #168]	; 0xa8
900267aa:	fb01 6303 	mla	r3, r1, r3, r6
900267ae:	141b      	asrs	r3, r3, #16
900267b0:	f53f ae78 	bmi.w	900264a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900267b4:	3a01      	subs	r2, #1
900267b6:	4293      	cmp	r3, r2
900267b8:	f6bf ae74 	bge.w	900264a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900267bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
900267c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900267c4:	f1bb 0f00 	cmp.w	fp, #0
900267c8:	dc6c      	bgt.n	900268a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900267ca:	9b07      	ldr	r3, [sp, #28]
900267cc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900267d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900267d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900267d6:	930a      	str	r3, [sp, #40]	; 0x28
900267d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900267da:	2b00      	cmp	r3, #0
900267dc:	f340 81b3 	ble.w	90026b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900267e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900267e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900267e6:	ee30 0a04 	vadd.f32	s0, s0, s8
900267ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
900267ee:	eef0 6a62 	vmov.f32	s13, s5
900267f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900267f6:	ee31 1a05 	vadd.f32	s2, s2, s10
900267fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900267fe:	ee16 4a90 	vmov	r4, s13
90026802:	eef0 6a43 	vmov.f32	s13, s6
90026806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002680a:	ee16 6a90 	vmov	r6, s13
9002680e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026812:	ee61 7a27 	vmul.f32	s15, s2, s15
90026816:	ee77 2a62 	vsub.f32	s5, s14, s5
9002681a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002681e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026822:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026826:	ee12 2a90 	vmov	r2, s5
9002682a:	eef0 2a47 	vmov.f32	s5, s14
9002682e:	fb92 f3f3 	sdiv	r3, r2, r3
90026832:	ee13 2a10 	vmov	r2, s6
90026836:	9329      	str	r3, [sp, #164]	; 0xa4
90026838:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002683a:	eeb0 3a67 	vmov.f32	s6, s15
9002683e:	fb92 f3f3 	sdiv	r3, r2, r3
90026842:	932a      	str	r3, [sp, #168]	; 0xa8
90026844:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026846:	9a19      	ldr	r2, [sp, #100]	; 0x64
90026848:	3b01      	subs	r3, #1
9002684a:	9317      	str	r3, [sp, #92]	; 0x5c
9002684c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002684e:	bf08      	it	eq
90026850:	4613      	moveq	r3, r2
90026852:	9307      	str	r3, [sp, #28]
90026854:	e5fb      	b.n	9002644e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026856:	2900      	cmp	r1, #0
90026858:	f43f ae6b 	beq.w	90026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002685c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026860:	9308      	str	r3, [sp, #32]
90026862:	0e1b      	lsrs	r3, r3, #24
90026864:	9311      	str	r3, [sp, #68]	; 0x44
90026866:	e664      	b.n	90026532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026868:	f112 0801 	adds.w	r8, r2, #1
9002686c:	f53f af7b 	bmi.w	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026870:	4543      	cmp	r3, r8
90026872:	f6ff af78 	blt.w	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026876:	f11c 0801 	adds.w	r8, ip, #1
9002687a:	f53f af74 	bmi.w	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002687e:	45c6      	cmp	lr, r8
90026880:	f6ff af71 	blt.w	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026884:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90026886:	b21b      	sxth	r3, r3
90026888:	9201      	str	r2, [sp, #4]
9002688a:	fa0f f28e 	sxth.w	r2, lr
9002688e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90026892:	e9cd c002 	strd	ip, r0, [sp, #8]
90026896:	9200      	str	r2, [sp, #0]
90026898:	4639      	mov	r1, r7
9002689a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002689c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002689e:	f7ff fc79 	bl	90026194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900268a2:	e760      	b.n	90026766 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900268a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900268a6:	1427      	asrs	r7, r4, #16
900268a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
900268aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
900268ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900268b2:	1433      	asrs	r3, r6, #16
900268b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900268b8:	fb01 7303 	mla	r3, r1, r3, r7
900268bc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900268c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900268c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900268c8:	2a00      	cmp	r2, #0
900268ca:	f000 8133 	beq.w	90026b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
900268ce:	687d      	ldr	r5, [r7, #4]
900268d0:	950e      	str	r5, [sp, #56]	; 0x38
900268d2:	0e2d      	lsrs	r5, r5, #24
900268d4:	9515      	str	r5, [sp, #84]	; 0x54
900268d6:	b178      	cbz	r0, 900268f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900268d8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900268dc:	3901      	subs	r1, #1
900268de:	0089      	lsls	r1, r1, #2
900268e0:	3104      	adds	r1, #4
900268e2:	eb07 0e01 	add.w	lr, r7, r1
900268e6:	5879      	ldr	r1, [r7, r1]
900268e8:	9109      	str	r1, [sp, #36]	; 0x24
900268ea:	0e09      	lsrs	r1, r1, #24
900268ec:	9112      	str	r1, [sp, #72]	; 0x48
900268ee:	f8de 1004 	ldr.w	r1, [lr, #4]
900268f2:	910f      	str	r1, [sp, #60]	; 0x3c
900268f4:	0e09      	lsrs	r1, r1, #24
900268f6:	9116      	str	r1, [sp, #88]	; 0x58
900268f8:	b292      	uxth	r2, r2
900268fa:	9915      	ldr	r1, [sp, #84]	; 0x54
900268fc:	b280      	uxth	r0, r0
900268fe:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026900:	fb02 f800 	mul.w	r8, r2, r0
90026904:	0112      	lsls	r2, r2, #4
90026906:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002690a:	eba2 0e08 	sub.w	lr, r2, r8
9002690e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90026912:	b280      	uxth	r0, r0
90026914:	fa1f fe8e 	uxth.w	lr, lr
90026918:	1a12      	subs	r2, r2, r0
9002691a:	fb0e f101 	mul.w	r1, lr, r1
9002691e:	b292      	uxth	r2, r2
90026920:	fb02 110c 	mla	r1, r2, ip, r1
90026924:	fb00 1105 	mla	r1, r0, r5, r1
90026928:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002692a:	fb08 1105 	mla	r1, r8, r5, r1
9002692e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026932:	2900      	cmp	r1, #0
90026934:	f000 80f5 	beq.w	90026b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026938:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002693c:	d019      	beq.n	90026972 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002693e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90026942:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026946:	fb0c fa0a 	mul.w	sl, ip, sl
9002694a:	fb0c fc03 	mul.w	ip, ip, r3
9002694e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026952:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026956:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002695a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002695e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026962:	4453      	add	r3, sl
90026964:	0a3f      	lsrs	r7, r7, #8
90026966:	0a1b      	lsrs	r3, r3, #8
90026968:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002696c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90026970:	433b      	orrs	r3, r7
90026972:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026974:	2dff      	cmp	r5, #255	; 0xff
90026976:	d020      	beq.n	900269ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026978:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002697a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002697e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026980:	436f      	muls	r7, r5
90026982:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026984:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026988:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002698c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002698e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026992:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026996:	fb05 fa0a 	mul.w	sl, r5, sl
9002699a:	44bc      	add	ip, r7
9002699c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900269a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900269a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900269a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900269ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900269b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900269b4:	ea4c 050a 	orr.w	r5, ip, sl
900269b8:	950e      	str	r5, [sp, #56]	; 0x38
900269ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
900269bc:	2dff      	cmp	r5, #255	; 0xff
900269be:	d020      	beq.n	90026a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
900269c0:	9d09      	ldr	r5, [sp, #36]	; 0x24
900269c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900269c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
900269c8:	436f      	muls	r7, r5
900269ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
900269cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900269d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900269d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900269d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900269da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900269de:	fb05 fa0a 	mul.w	sl, r5, sl
900269e2:	44bc      	add	ip, r7
900269e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900269e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900269ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900269f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900269f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900269f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900269fc:	ea4c 050a 	orr.w	r5, ip, sl
90026a00:	9509      	str	r5, [sp, #36]	; 0x24
90026a02:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026a04:	2dff      	cmp	r5, #255	; 0xff
90026a06:	d020      	beq.n	90026a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026a08:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026a0a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026a0e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026a10:	436f      	muls	r7, r5
90026a12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026a14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026a18:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026a1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026a1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026a22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026a26:	fb05 fa0a 	mul.w	sl, r5, sl
90026a2a:	44bc      	add	ip, r7
90026a2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026a30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026a34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026a38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026a3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026a44:	ea4c 050a 	orr.w	r5, ip, sl
90026a48:	950f      	str	r5, [sp, #60]	; 0x3c
90026a4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026a4c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90026a50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026a54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026a58:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026a5a:	fb0e f707 	mul.w	r7, lr, r7
90026a5e:	fb02 770c 	mla	r7, r2, ip, r7
90026a62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026a66:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026a68:	fb00 770c 	mla	r7, r0, ip, r7
90026a6c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026a70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026a72:	fb08 770c 	mla	r7, r8, ip, r7
90026a76:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90026a7a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026a7c:	fb0e fe0c 	mul.w	lr, lr, ip
90026a80:	0a3f      	lsrs	r7, r7, #8
90026a82:	fb02 e303 	mla	r3, r2, r3, lr
90026a86:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026a88:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90026a8c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90026a90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026a92:	fb00 330a 	mla	r3, r0, sl, r3
90026a96:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90026a9a:	f8b9 0000 	ldrh.w	r0, [r9]
90026a9e:	fb08 3c0c 	mla	ip, r8, ip, r3
90026aa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90026aa4:	1202      	asrs	r2, r0, #8
90026aa6:	4359      	muls	r1, r3
90026aa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026aac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90026ab0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026ab4:	1c4b      	adds	r3, r1, #1
90026ab6:	ea47 070c 	orr.w	r7, r7, ip
90026aba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026abe:	0c3b      	lsrs	r3, r7, #16
90026ac0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026ac4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026ac8:	b2ff      	uxtb	r7, r7
90026aca:	fb13 f305 	smulbb	r3, r3, r5
90026ace:	b2c9      	uxtb	r1, r1
90026ad0:	fb17 f705 	smulbb	r7, r7, r5
90026ad4:	fb02 3201 	mla	r2, r2, r1, r3
90026ad8:	10c3      	asrs	r3, r0, #3
90026ada:	fb1c fc05 	smulbb	ip, ip, r5
90026ade:	00c0      	lsls	r0, r0, #3
90026ae0:	b292      	uxth	r2, r2
90026ae2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90026ae6:	b2c0      	uxtb	r0, r0
90026ae8:	fb03 c301 	mla	r3, r3, r1, ip
90026aec:	fb00 7001 	mla	r0, r0, r1, r7
90026af0:	1c51      	adds	r1, r2, #1
90026af2:	b29b      	uxth	r3, r3
90026af4:	b280      	uxth	r0, r0
90026af6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026afa:	f100 0c01 	add.w	ip, r0, #1
90026afe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90026b02:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026b06:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026b0a:	ea4c 0202 	orr.w	r2, ip, r2
90026b0e:	f103 0c01 	add.w	ip, r3, #1
90026b12:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026b16:	095b      	lsrs	r3, r3, #5
90026b18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026b1c:	431a      	orrs	r2, r3
90026b1e:	f8a9 2000 	strh.w	r2, [r9]
90026b22:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026b24:	f109 0902 	add.w	r9, r9, #2
90026b28:	f10b 3bff 	add.w	fp, fp, #4294967295
90026b2c:	441c      	add	r4, r3
90026b2e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90026b30:	441e      	add	r6, r3
90026b32:	e647      	b.n	900267c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026b34:	2800      	cmp	r0, #0
90026b36:	f43f aedf 	beq.w	900268f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026b3a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026b3e:	9109      	str	r1, [sp, #36]	; 0x24
90026b40:	0e09      	lsrs	r1, r1, #24
90026b42:	9112      	str	r1, [sp, #72]	; 0x48
90026b44:	e6d8      	b.n	900268f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026b46:	b01d      	add	sp, #116	; 0x74
90026b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026b4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026b50:	b085      	sub	sp, #20
90026b52:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90026b56:	9102      	str	r1, [sp, #8]
90026b58:	2c00      	cmp	r4, #0
90026b5a:	fb04 7103 	mla	r1, r4, r3, r7
90026b5e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90026b62:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90026b66:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026b6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90026b6e:	f2c0 810c 	blt.w	90026d8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026b72:	45a6      	cmp	lr, r4
90026b74:	f340 8109 	ble.w	90026d8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026b78:	2f00      	cmp	r7, #0
90026b7a:	f2c0 8104 	blt.w	90026d86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026b7e:	42bb      	cmp	r3, r7
90026b80:	f340 8101 	ble.w	90026d86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026b84:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026b88:	1c7a      	adds	r2, r7, #1
90026b8a:	f100 8101 	bmi.w	90026d90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026b8e:	4293      	cmp	r3, r2
90026b90:	f340 80fe 	ble.w	90026d90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026b94:	2e00      	cmp	r6, #0
90026b96:	f000 80fd 	beq.w	90026d94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026b9a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026b9e:	3401      	adds	r4, #1
90026ba0:	f100 80fc 	bmi.w	90026d9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026ba4:	45a6      	cmp	lr, r4
90026ba6:	f340 80f9 	ble.w	90026d9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026baa:	2800      	cmp	r0, #0
90026bac:	f000 80f9 	beq.w	90026da2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026bb0:	2f00      	cmp	r7, #0
90026bb2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90026bb6:	f2c0 80ef 	blt.w	90026d98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026bba:	42bb      	cmp	r3, r7
90026bbc:	f340 80ec 	ble.w	90026d98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026bc0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026bc4:	3701      	adds	r7, #1
90026bc6:	f100 80ef 	bmi.w	90026da8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026bca:	42bb      	cmp	r3, r7
90026bcc:	f340 80ec 	ble.w	90026da8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026bd0:	2e00      	cmp	r6, #0
90026bd2:	f000 80eb 	beq.w	90026dac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90026bd6:	6852      	ldr	r2, [r2, #4]
90026bd8:	b2b6      	uxth	r6, r6
90026bda:	b280      	uxth	r0, r0
90026bdc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026be0:	fb00 fe06 	mul.w	lr, r0, r6
90026be4:	0136      	lsls	r6, r6, #4
90026be6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026bea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026bee:	eba6 070e 	sub.w	r7, r6, lr
90026bf2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90026bf6:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026bfa:	b280      	uxth	r0, r0
90026bfc:	b2bf      	uxth	r7, r7
90026bfe:	1a1b      	subs	r3, r3, r0
90026c00:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026c04:	fb07 f60a 	mul.w	r6, r7, sl
90026c08:	b29b      	uxth	r3, r3
90026c0a:	fb0b 6603 	mla	r6, fp, r3, r6
90026c0e:	fb00 6609 	mla	r6, r0, r9, r6
90026c12:	fb0e 6608 	mla	r6, lr, r8, r6
90026c16:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026c1a:	9600      	str	r6, [sp, #0]
90026c1c:	2e00      	cmp	r6, #0
90026c1e:	f000 80af 	beq.w	90026d80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90026c22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026c26:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026c2a:	9e02      	ldr	r6, [sp, #8]
90026c2c:	fb0b fc0c 	mul.w	ip, fp, ip
90026c30:	fb0b f505 	mul.w	r5, fp, r5
90026c34:	8836      	ldrh	r6, [r6, #0]
90026c36:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026c3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026c3e:	9501      	str	r5, [sp, #4]
90026c40:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90026c44:	44dc      	add	ip, fp
90026c46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026c4a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026c4e:	9503      	str	r5, [sp, #12]
90026c50:	9d01      	ldr	r5, [sp, #4]
90026c52:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90026c56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026c5a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90026c5e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026c62:	fb0a fc0c 	mul.w	ip, sl, ip
90026c66:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026c6a:	fb0a fa01 	mul.w	sl, sl, r1
90026c6e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026c72:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026c76:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90026c7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026c7e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026c82:	4465      	add	r5, ip
90026c84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90026c88:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90026c8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026c90:	fb09 fc0c 	mul.w	ip, r9, ip
90026c94:	0a2d      	lsrs	r5, r5, #8
90026c96:	fb09 f904 	mul.w	r9, r9, r4
90026c9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026c9e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026ca2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026ca6:	f509 7480 	add.w	r4, r9, #256	; 0x100
90026caa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026cae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026cb2:	437d      	muls	r5, r7
90026cb4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026cb8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026cbc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026cc0:	4461      	add	r1, ip
90026cc2:	fb08 f404 	mul.w	r4, r8, r4
90026cc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026cca:	fb08 f802 	mul.w	r8, r8, r2
90026cce:	0a09      	lsrs	r1, r1, #8
90026cd0:	0a22      	lsrs	r2, r4, #8
90026cd2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90026cd6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026cda:	fb07 f70a 	mul.w	r7, r7, sl
90026cde:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026ce2:	4414      	add	r4, r2
90026ce4:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026ce8:	0a24      	lsrs	r4, r4, #8
90026cea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026cee:	9a03      	ldr	r2, [sp, #12]
90026cf0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90026cf4:	fb02 5503 	mla	r5, r2, r3, r5
90026cf8:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026cfc:	fb04 540e 	mla	r4, r4, lr, r5
90026d00:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90026d04:	fb01 4100 	mla	r1, r1, r0, r4
90026d08:	0a09      	lsrs	r1, r1, #8
90026d0a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90026d0e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026d12:	fb03 7101 	mla	r1, r3, r1, r7
90026d16:	9b00      	ldr	r3, [sp, #0]
90026d18:	fb0e 1e08 	mla	lr, lr, r8, r1
90026d1c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90026d20:	43da      	mvns	r2, r3
90026d22:	1233      	asrs	r3, r6, #8
90026d24:	fb00 e101 	mla	r1, r0, r1, lr
90026d28:	10f0      	asrs	r0, r6, #3
90026d2a:	b2d2      	uxtb	r2, r2
90026d2c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90026d30:	0a09      	lsrs	r1, r1, #8
90026d32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026d36:	00f6      	lsls	r6, r6, #3
90026d38:	4353      	muls	r3, r2
90026d3a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026d3e:	4350      	muls	r0, r2
90026d40:	b2f6      	uxtb	r6, r6
90026d42:	4321      	orrs	r1, r4
90026d44:	4356      	muls	r6, r2
90026d46:	1c5a      	adds	r2, r3, #1
90026d48:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026d4c:	0c0b      	lsrs	r3, r1, #16
90026d4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026d52:	1c42      	adds	r2, r0, #1
90026d54:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026d58:	0a0a      	lsrs	r2, r1, #8
90026d5a:	021b      	lsls	r3, r3, #8
90026d5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026d60:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90026d64:	00d2      	lsls	r2, r2, #3
90026d66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026d6a:	4313      	orrs	r3, r2
90026d6c:	1c72      	adds	r2, r6, #1
90026d6e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90026d72:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90026d76:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026d7a:	4319      	orrs	r1, r3
90026d7c:	9b02      	ldr	r3, [sp, #8]
90026d7e:	8019      	strh	r1, [r3, #0]
90026d80:	b005      	add	sp, #20
90026d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026d86:	2500      	movs	r5, #0
90026d88:	e6fe      	b.n	90026b88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026d8a:	2100      	movs	r1, #0
90026d8c:	460d      	mov	r5, r1
90026d8e:	e706      	b.n	90026b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026d90:	2100      	movs	r1, #0
90026d92:	e704      	b.n	90026b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026d94:	4631      	mov	r1, r6
90026d96:	e702      	b.n	90026b9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026d98:	2400      	movs	r4, #0
90026d9a:	e713      	b.n	90026bc4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026d9c:	2200      	movs	r2, #0
90026d9e:	4614      	mov	r4, r2
90026da0:	e71a      	b.n	90026bd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026da2:	4602      	mov	r2, r0
90026da4:	4604      	mov	r4, r0
90026da6:	e717      	b.n	90026bd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026da8:	2200      	movs	r2, #0
90026daa:	e715      	b.n	90026bd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026dac:	4632      	mov	r2, r6
90026dae:	e713      	b.n	90026bd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026db0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026db4:	b09b      	sub	sp, #108	; 0x6c
90026db6:	9218      	str	r2, [sp, #96]	; 0x60
90026db8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90026dba:	9019      	str	r0, [sp, #100]	; 0x64
90026dbc:	9116      	str	r1, [sp, #88]	; 0x58
90026dbe:	6850      	ldr	r0, [r2, #4]
90026dc0:	9307      	str	r3, [sp, #28]
90026dc2:	6812      	ldr	r2, [r2, #0]
90026dc4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90026dc8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90026dcc:	fb00 1303 	mla	r3, r0, r3, r1
90026dd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026dd4:	930a      	str	r3, [sp, #40]	; 0x28
90026dd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026dd8:	681b      	ldr	r3, [r3, #0]
90026dda:	930f      	str	r3, [sp, #60]	; 0x3c
90026ddc:	9b16      	ldr	r3, [sp, #88]	; 0x58
90026dde:	2b00      	cmp	r3, #0
90026de0:	dc03      	bgt.n	90026dea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026de2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026de4:	2b00      	cmp	r3, #0
90026de6:	f340 8387 	ble.w	900274f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026dea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026dec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026df0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026df4:	1e48      	subs	r0, r1, #1
90026df6:	1e57      	subs	r7, r2, #1
90026df8:	9b07      	ldr	r3, [sp, #28]
90026dfa:	2b00      	cmp	r3, #0
90026dfc:	f340 8166 	ble.w	900270cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026e00:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026e04:	ea4f 4326 	mov.w	r3, r6, asr #16
90026e08:	d406      	bmi.n	90026e18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026e0a:	4584      	cmp	ip, r0
90026e0c:	da04      	bge.n	90026e18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026e0e:	2b00      	cmp	r3, #0
90026e10:	db02      	blt.n	90026e18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026e12:	42bb      	cmp	r3, r7
90026e14:	f2c0 815b 	blt.w	900270ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026e18:	f11c 0c01 	adds.w	ip, ip, #1
90026e1c:	f100 814b 	bmi.w	900270b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026e20:	4561      	cmp	r1, ip
90026e22:	f2c0 8148 	blt.w	900270b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026e26:	3301      	adds	r3, #1
90026e28:	f100 8145 	bmi.w	900270b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026e2c:	429a      	cmp	r2, r3
90026e2e:	f2c0 8142 	blt.w	900270b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026e32:	9b07      	ldr	r3, [sp, #28]
90026e34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90026e36:	9317      	str	r3, [sp, #92]	; 0x5c
90026e38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026e3a:	2b00      	cmp	r3, #0
90026e3c:	f340 8165 	ble.w	9002710a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90026e40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90026e42:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026e46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026e48:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026e4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026e50:	1422      	asrs	r2, r4, #16
90026e52:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026e56:	689b      	ldr	r3, [r3, #8]
90026e58:	f100 81d5 	bmi.w	90027206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026e5c:	f103 38ff 	add.w	r8, r3, #4294967295
90026e60:	4542      	cmp	r2, r8
90026e62:	f280 81d0 	bge.w	90027206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026e66:	f1bc 0f00 	cmp.w	ip, #0
90026e6a:	f2c0 81cc 	blt.w	90027206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026e6e:	f10e 38ff 	add.w	r8, lr, #4294967295
90026e72:	45c4      	cmp	ip, r8
90026e74:	f280 81c7 	bge.w	90027206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026e78:	b21b      	sxth	r3, r3
90026e7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026e7c:	fb0c 2203 	mla	r2, ip, r3, r2
90026e80:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026e84:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026e88:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026e8c:	2900      	cmp	r1, #0
90026e8e:	f000 8182 	beq.w	90027196 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026e92:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026e96:	950b      	str	r5, [sp, #44]	; 0x2c
90026e98:	0e2d      	lsrs	r5, r5, #24
90026e9a:	9512      	str	r5, [sp, #72]	; 0x48
90026e9c:	b180      	cbz	r0, 90026ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026e9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026ea2:	3b01      	subs	r3, #1
90026ea4:	009b      	lsls	r3, r3, #2
90026ea6:	3304      	adds	r3, #4
90026ea8:	eb08 0c03 	add.w	ip, r8, r3
90026eac:	f858 3003 	ldr.w	r3, [r8, r3]
90026eb0:	9308      	str	r3, [sp, #32]
90026eb2:	0e1b      	lsrs	r3, r3, #24
90026eb4:	9310      	str	r3, [sp, #64]	; 0x40
90026eb6:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026eba:	930c      	str	r3, [sp, #48]	; 0x30
90026ebc:	0e1b      	lsrs	r3, r3, #24
90026ebe:	9313      	str	r3, [sp, #76]	; 0x4c
90026ec0:	b289      	uxth	r1, r1
90026ec2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90026ec4:	b280      	uxth	r0, r0
90026ec6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026ec8:	fb01 f900 	mul.w	r9, r1, r0
90026ecc:	0109      	lsls	r1, r1, #4
90026ece:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026ed2:	eba1 0809 	sub.w	r8, r1, r9
90026ed6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90026eda:	b280      	uxth	r0, r0
90026edc:	fa1f f888 	uxth.w	r8, r8
90026ee0:	1a09      	subs	r1, r1, r0
90026ee2:	fb08 f303 	mul.w	r3, r8, r3
90026ee6:	b289      	uxth	r1, r1
90026ee8:	fb01 330e 	mla	r3, r1, lr, r3
90026eec:	fb00 3305 	mla	r3, r0, r5, r3
90026ef0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026ef2:	fb09 3305 	mla	r3, r9, r5, r3
90026ef6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026efa:	2b00      	cmp	r3, #0
90026efc:	f000 80d2 	beq.w	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026f00:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90026f04:	d01b      	beq.n	90026f3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90026f06:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90026f0a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026f0e:	fb0e fa0a 	mul.w	sl, lr, sl
90026f12:	fb0e fe02 	mul.w	lr, lr, r2
90026f16:	ea4f 221a 	mov.w	r2, sl, lsr #8
90026f1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026f1e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90026f22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026f26:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90026f2a:	4452      	add	r2, sl
90026f2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026f30:	0a12      	lsrs	r2, r2, #8
90026f32:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026f36:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026f3a:	ea42 020c 	orr.w	r2, r2, ip
90026f3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026f40:	2dff      	cmp	r5, #255	; 0xff
90026f42:	d021      	beq.n	90026f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90026f44:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026f46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026f4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026f4c:	fb05 fb0b 	mul.w	fp, r5, fp
90026f50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026f52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026f56:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026f58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026f5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026f60:	fb05 fa0a 	mul.w	sl, r5, sl
90026f64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026f68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026f6c:	44de      	add	lr, fp
90026f6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026f72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026f76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026f7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026f7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026f82:	ea4e 050a 	orr.w	r5, lr, sl
90026f86:	950b      	str	r5, [sp, #44]	; 0x2c
90026f88:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026f8a:	2dff      	cmp	r5, #255	; 0xff
90026f8c:	d021      	beq.n	90026fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90026f8e:	9d08      	ldr	r5, [sp, #32]
90026f90:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026f94:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026f96:	fb05 fb0b 	mul.w	fp, r5, fp
90026f9a:	9d08      	ldr	r5, [sp, #32]
90026f9c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90026fa0:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026fa2:	fb05 fa0e 	mul.w	sl, r5, lr
90026fa6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026faa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026fae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026fb2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026fb6:	44de      	add	lr, fp
90026fb8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026fbc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026fc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026fc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026fc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026fcc:	ea4e 050a 	orr.w	r5, lr, sl
90026fd0:	9508      	str	r5, [sp, #32]
90026fd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026fd4:	2dff      	cmp	r5, #255	; 0xff
90026fd6:	d021      	beq.n	9002701c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90026fd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026fda:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026fde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026fe0:	fb05 fb0b 	mul.w	fp, r5, fp
90026fe4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026fe6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026fea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026fec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026ff0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026ff4:	fb05 fa0a 	mul.w	sl, r5, sl
90026ff8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026ffc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027000:	44de      	add	lr, fp
90027002:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027006:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002700a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002700e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027012:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027016:	ea4e 050a 	orr.w	r5, lr, sl
9002701a:	950c      	str	r5, [sp, #48]	; 0x30
9002701c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002701e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90027022:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90027026:	2bff      	cmp	r3, #255	; 0xff
90027028:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002702c:	9d08      	ldr	r5, [sp, #32]
9002702e:	fb08 fc0c 	mul.w	ip, r8, ip
90027032:	fb01 cc0e 	mla	ip, r1, lr, ip
90027036:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002703a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002703c:	fb00 cc0e 	mla	ip, r0, lr, ip
90027040:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90027044:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027046:	fb09 cc0e 	mla	ip, r9, lr, ip
9002704a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002704e:	fb08 f80e 	mul.w	r8, r8, lr
90027052:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027056:	fb01 8202 	mla	r2, r1, r2, r8
9002705a:	9908      	ldr	r1, [sp, #32]
9002705c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027060:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90027064:	990c      	ldr	r1, [sp, #48]	; 0x30
90027066:	fb00 220a 	mla	r2, r0, sl, r2
9002706a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9002706e:	fb09 2900 	mla	r9, r9, r0, r2
90027072:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027076:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002707a:	ea4c 0c09 	orr.w	ip, ip, r9
9002707e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90027082:	f040 8091 	bne.w	900271a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90027086:	ea4f 135c 	mov.w	r3, ip, lsr #5
9002708a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002708e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027092:	f022 0207 	bic.w	r2, r2, #7
90027096:	431a      	orrs	r2, r3
90027098:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002709c:	ea4c 0c02 	orr.w	ip, ip, r2
900270a0:	f8a7 c000 	strh.w	ip, [r7]
900270a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900270a6:	3702      	adds	r7, #2
900270a8:	441c      	add	r4, r3
900270aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900270ac:	441e      	add	r6, r3
900270ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900270b0:	3b01      	subs	r3, #1
900270b2:	9317      	str	r3, [sp, #92]	; 0x5c
900270b4:	e6c0      	b.n	90026e38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
900270b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900270b8:	441c      	add	r4, r3
900270ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900270bc:	441e      	add	r6, r3
900270be:	9b07      	ldr	r3, [sp, #28]
900270c0:	3b01      	subs	r3, #1
900270c2:	9307      	str	r3, [sp, #28]
900270c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900270c6:	3302      	adds	r3, #2
900270c8:	930a      	str	r3, [sp, #40]	; 0x28
900270ca:	e695      	b.n	90026df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900270cc:	d024      	beq.n	90027118 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
900270ce:	9b07      	ldr	r3, [sp, #28]
900270d0:	9827      	ldr	r0, [sp, #156]	; 0x9c
900270d2:	3b01      	subs	r3, #1
900270d4:	fb00 4003 	mla	r0, r0, r3, r4
900270d8:	1400      	asrs	r0, r0, #16
900270da:	f53f aeaa 	bmi.w	90026e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900270de:	3901      	subs	r1, #1
900270e0:	4288      	cmp	r0, r1
900270e2:	f6bf aea6 	bge.w	90026e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900270e6:	9928      	ldr	r1, [sp, #160]	; 0xa0
900270e8:	fb01 6303 	mla	r3, r1, r3, r6
900270ec:	141b      	asrs	r3, r3, #16
900270ee:	f53f aea0 	bmi.w	90026e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900270f2:	3a01      	subs	r2, #1
900270f4:	4293      	cmp	r3, r2
900270f6:	f6bf ae9c 	bge.w	90026e32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900270fa:	f8dd b01c 	ldr.w	fp, [sp, #28]
900270fe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90027102:	f1bb 0f00 	cmp.w	fp, #0
90027106:	f300 809a 	bgt.w	9002723e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002710a:	9b07      	ldr	r3, [sp, #28]
9002710c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027110:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027112:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027116:	930a      	str	r3, [sp, #40]	; 0x28
90027118:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002711a:	2b00      	cmp	r3, #0
9002711c:	f340 81ec 	ble.w	900274f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027124:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027126:	ee30 0a04 	vadd.f32	s0, s0, s8
9002712a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002712e:	eef0 6a62 	vmov.f32	s13, s5
90027132:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027136:	ee31 1a05 	vadd.f32	s2, s2, s10
9002713a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002713e:	ee16 4a90 	vmov	r4, s13
90027142:	eef0 6a43 	vmov.f32	s13, s6
90027146:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002714a:	ee16 6a90 	vmov	r6, s13
9002714e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027152:	ee61 7a27 	vmul.f32	s15, s2, s15
90027156:	ee77 2a62 	vsub.f32	s5, s14, s5
9002715a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002715e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027162:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027166:	ee12 2a90 	vmov	r2, s5
9002716a:	eef0 2a47 	vmov.f32	s5, s14
9002716e:	fb92 f3f3 	sdiv	r3, r2, r3
90027172:	ee13 2a10 	vmov	r2, s6
90027176:	9327      	str	r3, [sp, #156]	; 0x9c
90027178:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002717a:	eeb0 3a67 	vmov.f32	s6, s15
9002717e:	fb92 f3f3 	sdiv	r3, r2, r3
90027182:	9328      	str	r3, [sp, #160]	; 0xa0
90027184:	9b16      	ldr	r3, [sp, #88]	; 0x58
90027186:	9a18      	ldr	r2, [sp, #96]	; 0x60
90027188:	3b01      	subs	r3, #1
9002718a:	9316      	str	r3, [sp, #88]	; 0x58
9002718c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002718e:	bf08      	it	eq
90027190:	4613      	moveq	r3, r2
90027192:	9307      	str	r3, [sp, #28]
90027194:	e622      	b.n	90026ddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90027196:	2800      	cmp	r0, #0
90027198:	f43f ae92 	beq.w	90026ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002719c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900271a0:	9308      	str	r3, [sp, #32]
900271a2:	0e1b      	lsrs	r3, r3, #24
900271a4:	9310      	str	r3, [sp, #64]	; 0x40
900271a6:	e68b      	b.n	90026ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900271a8:	8839      	ldrh	r1, [r7, #0]
900271aa:	43db      	mvns	r3, r3
900271ac:	4dd4      	ldr	r5, [pc, #848]	; (90027500 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900271ae:	ea4f 2e21 	mov.w	lr, r1, asr #8
900271b2:	fa5f f883 	uxtb.w	r8, r3
900271b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
900271ba:	10c8      	asrs	r0, r1, #3
900271bc:	00cb      	lsls	r3, r1, #3
900271be:	fb0e fe08 	mul.w	lr, lr, r8
900271c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900271c6:	b2db      	uxtb	r3, r3
900271c8:	f10e 0101 	add.w	r1, lr, #1
900271cc:	fb00 f008 	mul.w	r0, r0, r8
900271d0:	fb03 f308 	mul.w	r3, r3, r8
900271d4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900271d8:	ea4f 411c 	mov.w	r1, ip, lsr #16
900271dc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900271e0:	f100 0e01 	add.w	lr, r0, #1
900271e4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900271e8:	b2c9      	uxtb	r1, r1
900271ea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900271ee:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900271f2:	00d2      	lsls	r2, r2, #3
900271f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900271f8:	430a      	orrs	r2, r1
900271fa:	1c59      	adds	r1, r3, #1
900271fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027200:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027204:	e748      	b.n	90027098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027206:	f112 0801 	adds.w	r8, r2, #1
9002720a:	f53f af4b 	bmi.w	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002720e:	4543      	cmp	r3, r8
90027210:	f6ff af48 	blt.w	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027214:	f11c 0801 	adds.w	r8, ip, #1
90027218:	f53f af44 	bmi.w	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002721c:	45c6      	cmp	lr, r8
9002721e:	f6ff af41 	blt.w	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027222:	b21b      	sxth	r3, r3
90027224:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027228:	fa0f f28e 	sxth.w	r2, lr
9002722c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90027230:	9200      	str	r2, [sp, #0]
90027232:	4639      	mov	r1, r7
90027234:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027236:	9819      	ldr	r0, [sp, #100]	; 0x64
90027238:	f7ff fc88 	bl	90026b4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
9002723c:	e732      	b.n	900270a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002723e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027240:	1421      	asrs	r1, r4, #16
90027242:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027244:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027248:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
9002724c:	1433      	asrs	r3, r6, #16
9002724e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027252:	fb07 1303 	mla	r3, r7, r3, r1
90027256:	990f      	ldr	r1, [sp, #60]	; 0x3c
90027258:	eb01 0183 	add.w	r1, r1, r3, lsl #2
9002725c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027260:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027264:	2a00      	cmp	r2, #0
90027266:	f000 8108 	beq.w	9002747a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
9002726a:	684d      	ldr	r5, [r1, #4]
9002726c:	950d      	str	r5, [sp, #52]	; 0x34
9002726e:	0e2d      	lsrs	r5, r5, #24
90027270:	9514      	str	r5, [sp, #80]	; 0x50
90027272:	b178      	cbz	r0, 90027294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027274:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90027278:	3f01      	subs	r7, #1
9002727a:	00bf      	lsls	r7, r7, #2
9002727c:	3704      	adds	r7, #4
9002727e:	eb01 0e07 	add.w	lr, r1, r7
90027282:	59c9      	ldr	r1, [r1, r7]
90027284:	9109      	str	r1, [sp, #36]	; 0x24
90027286:	0e09      	lsrs	r1, r1, #24
90027288:	9111      	str	r1, [sp, #68]	; 0x44
9002728a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002728e:	910e      	str	r1, [sp, #56]	; 0x38
90027290:	0e09      	lsrs	r1, r1, #24
90027292:	9115      	str	r1, [sp, #84]	; 0x54
90027294:	b292      	uxth	r2, r2
90027296:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027298:	b280      	uxth	r0, r0
9002729a:	fb02 f900 	mul.w	r9, r2, r0
9002729e:	0112      	lsls	r2, r2, #4
900272a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900272a4:	eba2 0e09 	sub.w	lr, r2, r9
900272a8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
900272ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
900272ae:	b280      	uxth	r0, r0
900272b0:	fa1f fe8e 	uxth.w	lr, lr
900272b4:	1a09      	subs	r1, r1, r0
900272b6:	fb0e f202 	mul.w	r2, lr, r2
900272ba:	b289      	uxth	r1, r1
900272bc:	fb01 220c 	mla	r2, r1, ip, r2
900272c0:	fb00 2205 	mla	r2, r0, r5, r2
900272c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
900272c6:	fb09 2205 	mla	r2, r9, r5, r2
900272ca:	f3c2 2207 	ubfx	r2, r2, #8, #8
900272ce:	2a00      	cmp	r2, #0
900272d0:	f000 80ca 	beq.w	90027468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900272d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900272d8:	d019      	beq.n	9002730e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900272da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900272de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900272e2:	fb0c fa0a 	mul.w	sl, ip, sl
900272e6:	fb0c fc03 	mul.w	ip, ip, r3
900272ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
900272ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900272f2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900272f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900272fa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900272fe:	4453      	add	r3, sl
90027300:	0a3f      	lsrs	r7, r7, #8
90027302:	0a1b      	lsrs	r3, r3, #8
90027304:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027308:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002730c:	433b      	orrs	r3, r7
9002730e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027310:	2dff      	cmp	r5, #255	; 0xff
90027312:	d020      	beq.n	90027356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027314:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027316:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002731a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002731c:	436f      	muls	r7, r5
9002731e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027320:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027324:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027328:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002732a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002732e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027332:	fb05 fa0a 	mul.w	sl, r5, sl
90027336:	44bc      	add	ip, r7
90027338:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002733c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027340:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027344:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002734c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027350:	ea4c 050a 	orr.w	r5, ip, sl
90027354:	950d      	str	r5, [sp, #52]	; 0x34
90027356:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027358:	2dff      	cmp	r5, #255	; 0xff
9002735a:	d020      	beq.n	9002739e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
9002735c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002735e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027362:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027364:	436f      	muls	r7, r5
90027366:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027368:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002736c:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002736e:	fb05 fa0c 	mul.w	sl, r5, ip
90027372:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027376:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002737a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002737e:	44bc      	add	ip, r7
90027380:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027384:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027388:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002738c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027390:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027394:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027398:	ea4c 050a 	orr.w	r5, ip, sl
9002739c:	9509      	str	r5, [sp, #36]	; 0x24
9002739e:	9d15      	ldr	r5, [sp, #84]	; 0x54
900273a0:	2dff      	cmp	r5, #255	; 0xff
900273a2:	d020      	beq.n	900273e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900273a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900273a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900273aa:	9d15      	ldr	r5, [sp, #84]	; 0x54
900273ac:	436f      	muls	r7, r5
900273ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900273b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900273b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900273b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
900273ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900273be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900273c2:	fb05 fa0a 	mul.w	sl, r5, sl
900273c6:	44bc      	add	ip, r7
900273c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900273cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900273d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900273d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900273d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900273dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900273e0:	ea4c 050a 	orr.w	r5, ip, sl
900273e4:	950e      	str	r5, [sp, #56]	; 0x38
900273e6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900273e8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900273ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900273f0:	2aff      	cmp	r2, #255	; 0xff
900273f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900273f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
900273f8:	fb0e f707 	mul.w	r7, lr, r7
900273fc:	fb01 770c 	mla	r7, r1, ip, r7
90027400:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027404:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027406:	fb00 770c 	mla	r7, r0, ip, r7
9002740a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002740e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027410:	fb09 770c 	mla	r7, r9, ip, r7
90027414:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027418:	fb0e fe0c 	mul.w	lr, lr, ip
9002741c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027420:	fb01 e303 	mla	r3, r1, r3, lr
90027424:	9909      	ldr	r1, [sp, #36]	; 0x24
90027426:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002742a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002742e:	990e      	ldr	r1, [sp, #56]	; 0x38
90027430:	fb00 330a 	mla	r3, r0, sl, r3
90027434:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90027438:	fb09 3c0c 	mla	ip, r9, ip, r3
9002743c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027440:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027444:	ea47 070c 	orr.w	r7, r7, ip
90027448:	ea4f 2317 	mov.w	r3, r7, lsr #8
9002744c:	d11e      	bne.n	9002748c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002744e:	097a      	lsrs	r2, r7, #5
90027450:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90027454:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027458:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002745c:	f023 0307 	bic.w	r3, r3, #7
90027460:	4313      	orrs	r3, r2
90027462:	431f      	orrs	r7, r3
90027464:	f8a8 7000 	strh.w	r7, [r8]
90027468:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002746a:	f108 0802 	add.w	r8, r8, #2
9002746e:	f10b 3bff 	add.w	fp, fp, #4294967295
90027472:	441c      	add	r4, r3
90027474:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027476:	441e      	add	r6, r3
90027478:	e643      	b.n	90027102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002747a:	2800      	cmp	r0, #0
9002747c:	f43f af0a 	beq.w	90027294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027480:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027484:	9109      	str	r1, [sp, #36]	; 0x24
90027486:	0e09      	lsrs	r1, r1, #24
90027488:	9111      	str	r1, [sp, #68]	; 0x44
9002748a:	e703      	b.n	90027294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002748c:	f8b8 1000 	ldrh.w	r1, [r8]
90027490:	43d2      	mvns	r2, r2
90027492:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027496:	fa5f fe82 	uxtb.w	lr, r2
9002749a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002749e:	10c8      	asrs	r0, r1, #3
900274a0:	00ca      	lsls	r2, r1, #3
900274a2:	fb0c fc0e 	mul.w	ip, ip, lr
900274a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900274aa:	b2d2      	uxtb	r2, r2
900274ac:	f10c 0101 	add.w	r1, ip, #1
900274b0:	fb00 f00e 	mul.w	r0, r0, lr
900274b4:	fb02 f20e 	mul.w	r2, r2, lr
900274b8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900274bc:	0c39      	lsrs	r1, r7, #16
900274be:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900274c2:	490f      	ldr	r1, [pc, #60]	; (90027500 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900274c4:	fa5f fc8c 	uxtb.w	ip, ip
900274c8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900274cc:	1c41      	adds	r1, r0, #1
900274ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900274d2:	1c51      	adds	r1, r2, #1
900274d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900274d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900274dc:	00c0      	lsls	r0, r0, #3
900274de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900274e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900274e6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900274ea:	ea4c 0c00 	orr.w	ip, ip, r0
900274ee:	ea47 0c0c 	orr.w	ip, r7, ip
900274f2:	f8a8 c000 	strh.w	ip, [r8]
900274f6:	e7b7      	b.n	90027468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900274f8:	b01b      	add	sp, #108	; 0x6c
900274fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900274fe:	bf00      	nop
90027500:	fffff800 	.word	0xfffff800

90027504 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027504:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027508:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002750c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027510:	2d00      	cmp	r5, #0
90027512:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027516:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002751a:	fb05 0e03 	mla	lr, r5, r3, r0
9002751e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027522:	f2c0 808c 	blt.w	9002763e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027526:	45a9      	cmp	r9, r5
90027528:	f340 8089 	ble.w	9002763e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002752c:	2800      	cmp	r0, #0
9002752e:	f2c0 8084 	blt.w	9002763a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027532:	4580      	cmp	r8, r0
90027534:	f340 8081 	ble.w	9002763a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027538:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002753c:	f01e 0f01 	tst.w	lr, #1
90027540:	5d16      	ldrb	r6, [r2, r4]
90027542:	bf0c      	ite	eq
90027544:	f006 060f 	andeq.w	r6, r6, #15
90027548:	1136      	asrne	r6, r6, #4
9002754a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002754e:	b2f6      	uxtb	r6, r6
90027550:	1c44      	adds	r4, r0, #1
90027552:	d477      	bmi.n	90027644 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027554:	45a0      	cmp	r8, r4
90027556:	dd75      	ble.n	90027644 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027558:	2f00      	cmp	r7, #0
9002755a:	d075      	beq.n	90027648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
9002755c:	f10e 0a01 	add.w	sl, lr, #1
90027560:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027564:	f01a 0f01 	tst.w	sl, #1
90027568:	5d14      	ldrb	r4, [r2, r4]
9002756a:	bf0c      	ite	eq
9002756c:	f004 040f 	andeq.w	r4, r4, #15
90027570:	1124      	asrne	r4, r4, #4
90027572:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027576:	b2e4      	uxtb	r4, r4
90027578:	3501      	adds	r5, #1
9002757a:	d469      	bmi.n	90027650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002757c:	45a9      	cmp	r9, r5
9002757e:	dd67      	ble.n	90027650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027580:	f1bc 0f00 	cmp.w	ip, #0
90027584:	d067      	beq.n	90027656 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027586:	2800      	cmp	r0, #0
90027588:	db60      	blt.n	9002764c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002758a:	4580      	cmp	r8, r0
9002758c:	dd5e      	ble.n	9002764c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002758e:	eb03 090e 	add.w	r9, r3, lr
90027592:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027596:	f019 0f01 	tst.w	r9, #1
9002759a:	5d55      	ldrb	r5, [r2, r5]
9002759c:	bf0c      	ite	eq
9002759e:	f005 050f 	andeq.w	r5, r5, #15
900275a2:	112d      	asrne	r5, r5, #4
900275a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900275a8:	b2ed      	uxtb	r5, r5
900275aa:	3001      	adds	r0, #1
900275ac:	d456      	bmi.n	9002765c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900275ae:	4580      	cmp	r8, r0
900275b0:	dd54      	ble.n	9002765c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900275b2:	2f00      	cmp	r7, #0
900275b4:	d054      	beq.n	90027660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900275b6:	3301      	adds	r3, #1
900275b8:	449e      	add	lr, r3
900275ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
900275be:	f01e 0f01 	tst.w	lr, #1
900275c2:	5cd0      	ldrb	r0, [r2, r3]
900275c4:	bf0c      	ite	eq
900275c6:	f000 000f 	andeq.w	r0, r0, #15
900275ca:	1100      	asrne	r0, r0, #4
900275cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900275d0:	b2c3      	uxtb	r3, r0
900275d2:	b2ba      	uxth	r2, r7
900275d4:	fa1f fc8c 	uxth.w	ip, ip
900275d8:	fb02 f00c 	mul.w	r0, r2, ip
900275dc:	0112      	lsls	r2, r2, #4
900275de:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900275e2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900275e6:	1a12      	subs	r2, r2, r0
900275e8:	fa1f fc8c 	uxth.w	ip, ip
900275ec:	b292      	uxth	r2, r2
900275ee:	eba7 070c 	sub.w	r7, r7, ip
900275f2:	4362      	muls	r2, r4
900275f4:	b2bf      	uxth	r7, r7
900275f6:	fb06 2207 	mla	r2, r6, r7, r2
900275fa:	fb0c 2505 	mla	r5, ip, r5, r2
900275fe:	fb00 5303 	mla	r3, r0, r3, r5
90027602:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027606:	b1b3      	cbz	r3, 90027636 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027608:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
9002760c:	435a      	muls	r2, r3
9002760e:	1c53      	adds	r3, r2, #1
90027610:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027614:	4a2d      	ldr	r2, [pc, #180]	; (900276cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027616:	121b      	asrs	r3, r3, #8
90027618:	6812      	ldr	r2, [r2, #0]
9002761a:	2bff      	cmp	r3, #255	; 0xff
9002761c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027620:	d120      	bne.n	90027664 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027622:	0950      	lsrs	r0, r2, #5
90027624:	4b2a      	ldr	r3, [pc, #168]	; (900276d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027626:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002762a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002762e:	4033      	ands	r3, r6
90027630:	4318      	orrs	r0, r3
90027632:	4302      	orrs	r2, r0
90027634:	800a      	strh	r2, [r1, #0]
90027636:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002763a:	2600      	movs	r6, #0
9002763c:	e788      	b.n	90027550 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002763e:	2400      	movs	r4, #0
90027640:	4626      	mov	r6, r4
90027642:	e799      	b.n	90027578 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027644:	2400      	movs	r4, #0
90027646:	e797      	b.n	90027578 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027648:	463c      	mov	r4, r7
9002764a:	e795      	b.n	90027578 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002764c:	2500      	movs	r5, #0
9002764e:	e7ac      	b.n	900275aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027650:	2300      	movs	r3, #0
90027652:	461d      	mov	r5, r3
90027654:	e7bd      	b.n	900275d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027656:	4663      	mov	r3, ip
90027658:	4665      	mov	r5, ip
9002765a:	e7ba      	b.n	900275d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002765c:	2300      	movs	r3, #0
9002765e:	e7b8      	b.n	900275d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027660:	463b      	mov	r3, r7
90027662:	e7b6      	b.n	900275d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027664:	880d      	ldrh	r5, [r1, #0]
90027666:	b29f      	uxth	r7, r3
90027668:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002766c:	43db      	mvns	r3, r3
9002766e:	122c      	asrs	r4, r5, #8
90027670:	fb10 f007 	smulbb	r0, r0, r7
90027674:	b2db      	uxtb	r3, r3
90027676:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002767a:	b2f6      	uxtb	r6, r6
9002767c:	b2d2      	uxtb	r2, r2
9002767e:	fb04 0403 	mla	r4, r4, r3, r0
90027682:	10e8      	asrs	r0, r5, #3
90027684:	fb12 f207 	smulbb	r2, r2, r7
90027688:	00ed      	lsls	r5, r5, #3
9002768a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002768e:	b2a4      	uxth	r4, r4
90027690:	fb16 f607 	smulbb	r6, r6, r7
90027694:	b2ed      	uxtb	r5, r5
90027696:	fb00 6603 	mla	r6, r0, r3, r6
9002769a:	fb05 2303 	mla	r3, r5, r3, r2
9002769e:	b2b0      	uxth	r0, r6
900276a0:	b29a      	uxth	r2, r3
900276a2:	1c63      	adds	r3, r4, #1
900276a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900276a8:	1c53      	adds	r3, r2, #1
900276aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900276ae:	1c42      	adds	r2, r0, #1
900276b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900276b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900276b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900276bc:	0940      	lsrs	r0, r0, #5
900276be:	4323      	orrs	r3, r4
900276c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900276c4:	4303      	orrs	r3, r0
900276c6:	800b      	strh	r3, [r1, #0]
900276c8:	e7b5      	b.n	90027636 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900276ca:	bf00      	nop
900276cc:	24039adc 	.word	0x24039adc
900276d0:	00fff800 	.word	0x00fff800

900276d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900276d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900276d8:	b097      	sub	sp, #92	; 0x5c
900276da:	9214      	str	r2, [sp, #80]	; 0x50
900276dc:	9309      	str	r3, [sp, #36]	; 0x24
900276de:	9a25      	ldr	r2, [sp, #148]	; 0x94
900276e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900276e4:	9015      	str	r0, [sp, #84]	; 0x54
900276e6:	910d      	str	r1, [sp, #52]	; 0x34
900276e8:	6850      	ldr	r0, [r2, #4]
900276ea:	930f      	str	r3, [sp, #60]	; 0x3c
900276ec:	6812      	ldr	r2, [r2, #0]
900276ee:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900276f2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
900276f6:	fb00 1303 	mla	r3, r0, r3, r1
900276fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900276fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027700:	689b      	ldr	r3, [r3, #8]
90027702:	3301      	adds	r3, #1
90027704:	f023 0301 	bic.w	r3, r3, #1
90027708:	930a      	str	r3, [sp, #40]	; 0x28
9002770a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002770c:	681f      	ldr	r7, [r3, #0]
9002770e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027710:	2b00      	cmp	r3, #0
90027712:	dc03      	bgt.n	9002771c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027714:	9b14      	ldr	r3, [sp, #80]	; 0x50
90027716:	2b00      	cmp	r3, #0
90027718:	f340 8289 	ble.w	90027c2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002771c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002771e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027722:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027726:	1e48      	subs	r0, r1, #1
90027728:	f102 3cff 	add.w	ip, r2, #4294967295
9002772c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002772e:	2b00      	cmp	r3, #0
90027730:	f340 80c5 	ble.w	900278be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027734:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027738:	ea4f 4326 	mov.w	r3, r6, asr #16
9002773c:	d406      	bmi.n	9002774c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002773e:	4586      	cmp	lr, r0
90027740:	da04      	bge.n	9002774c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027742:	2b00      	cmp	r3, #0
90027744:	db02      	blt.n	9002774c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027746:	4563      	cmp	r3, ip
90027748:	f2c0 80ba 	blt.w	900278c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002774c:	f11e 0e01 	adds.w	lr, lr, #1
90027750:	f100 80ab 	bmi.w	900278aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027754:	4571      	cmp	r1, lr
90027756:	f2c0 80a8 	blt.w	900278aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002775a:	3301      	adds	r3, #1
9002775c:	f100 80a5 	bmi.w	900278aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027760:	429a      	cmp	r2, r3
90027762:	f2c0 80a2 	blt.w	900278aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027766:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027768:	46c8      	mov	r8, r9
9002776a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002776e:	930e      	str	r3, [sp, #56]	; 0x38
90027770:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90027772:	2b00      	cmp	r3, #0
90027774:	f340 80c4 	ble.w	90027900 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027778:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002777a:	1430      	asrs	r0, r6, #16
9002777c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027780:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027784:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027788:	1423      	asrs	r3, r4, #16
9002778a:	f100 814f 	bmi.w	90027a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002778e:	f10c 3bff 	add.w	fp, ip, #4294967295
90027792:	455b      	cmp	r3, fp
90027794:	f280 814a 	bge.w	90027a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027798:	2800      	cmp	r0, #0
9002779a:	f2c0 8147 	blt.w	90027a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002779e:	f10e 3bff 	add.w	fp, lr, #4294967295
900277a2:	4558      	cmp	r0, fp
900277a4:	f280 8142 	bge.w	90027a2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900277a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
900277aa:	fb00 3305 	mla	r3, r0, r5, r3
900277ae:	0858      	lsrs	r0, r3, #1
900277b0:	07dd      	lsls	r5, r3, #31
900277b2:	f817 c000 	ldrb.w	ip, [r7, r0]
900277b6:	bf54      	ite	pl
900277b8:	f00c 0c0f 	andpl.w	ip, ip, #15
900277bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900277c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900277c4:	fa5f fc8c 	uxtb.w	ip, ip
900277c8:	2a00      	cmp	r2, #0
900277ca:	f000 80dd 	beq.w	90027988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
900277ce:	1c58      	adds	r0, r3, #1
900277d0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900277d4:	07c0      	lsls	r0, r0, #31
900277d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
900277da:	bf54      	ite	pl
900277dc:	f00e 0e0f 	andpl.w	lr, lr, #15
900277e0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900277e4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900277e8:	fa5f f08e 	uxtb.w	r0, lr
900277ec:	9010      	str	r0, [sp, #64]	; 0x40
900277ee:	b1d9      	cbz	r1, 90027828 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900277f0:	4453      	add	r3, sl
900277f2:	0858      	lsrs	r0, r3, #1
900277f4:	07dd      	lsls	r5, r3, #31
900277f6:	f103 0301 	add.w	r3, r3, #1
900277fa:	5c38      	ldrb	r0, [r7, r0]
900277fc:	bf54      	ite	pl
900277fe:	f000 000f 	andpl.w	r0, r0, #15
90027802:	1100      	asrmi	r0, r0, #4
90027804:	07dd      	lsls	r5, r3, #31
90027806:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002780a:	b2c0      	uxtb	r0, r0
9002780c:	900b      	str	r0, [sp, #44]	; 0x2c
9002780e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027812:	f817 e000 	ldrb.w	lr, [r7, r0]
90027816:	bf54      	ite	pl
90027818:	f00e 030f 	andpl.w	r3, lr, #15
9002781c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027820:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027824:	b2db      	uxtb	r3, r3
90027826:	9311      	str	r3, [sp, #68]	; 0x44
90027828:	b292      	uxth	r2, r2
9002782a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002782c:	b289      	uxth	r1, r1
9002782e:	fb02 f301 	mul.w	r3, r2, r1
90027832:	0112      	lsls	r2, r2, #4
90027834:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027838:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002783c:	1ad2      	subs	r2, r2, r3
9002783e:	b289      	uxth	r1, r1
90027840:	b292      	uxth	r2, r2
90027842:	1a40      	subs	r0, r0, r1
90027844:	436a      	muls	r2, r5
90027846:	b280      	uxth	r0, r0
90027848:	fb0c 2c00 	mla	ip, ip, r0, r2
9002784c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002784e:	fb01 c102 	mla	r1, r1, r2, ip
90027852:	9a11      	ldr	r2, [sp, #68]	; 0x44
90027854:	fb03 1302 	mla	r3, r3, r2, r1
90027858:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002785c:	b1db      	cbz	r3, 90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002785e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027860:	4353      	muls	r3, r2
90027862:	1c5a      	adds	r2, r3, #1
90027864:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027868:	4ac6      	ldr	r2, [pc, #792]	; (90027b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002786a:	121b      	asrs	r3, r3, #8
9002786c:	6812      	ldr	r2, [r2, #0]
9002786e:	2bff      	cmp	r3, #255	; 0xff
90027870:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027874:	f040 8099 	bne.w	900279aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027878:	0953      	lsrs	r3, r2, #5
9002787a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002787e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027882:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027886:	f02c 0c07 	bic.w	ip, ip, #7
9002788a:	ea43 0c0c 	orr.w	ip, r3, ip
9002788e:	ea4c 0202 	orr.w	r2, ip, r2
90027892:	f8a8 2000 	strh.w	r2, [r8]
90027896:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027898:	f108 0802 	add.w	r8, r8, #2
9002789c:	441c      	add	r4, r3
9002789e:	9b24      	ldr	r3, [sp, #144]	; 0x90
900278a0:	441e      	add	r6, r3
900278a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900278a4:	3b01      	subs	r3, #1
900278a6:	930e      	str	r3, [sp, #56]	; 0x38
900278a8:	e762      	b.n	90027770 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900278aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900278ac:	f109 0902 	add.w	r9, r9, #2
900278b0:	441c      	add	r4, r3
900278b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900278b4:	441e      	add	r6, r3
900278b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900278b8:	3b01      	subs	r3, #1
900278ba:	9309      	str	r3, [sp, #36]	; 0x24
900278bc:	e736      	b.n	9002772c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900278be:	d024      	beq.n	9002790a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900278c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900278c2:	9823      	ldr	r0, [sp, #140]	; 0x8c
900278c4:	3b01      	subs	r3, #1
900278c6:	fb00 4003 	mla	r0, r0, r3, r4
900278ca:	1400      	asrs	r0, r0, #16
900278cc:	f53f af4b 	bmi.w	90027766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900278d0:	3901      	subs	r1, #1
900278d2:	4288      	cmp	r0, r1
900278d4:	f6bf af47 	bge.w	90027766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900278d8:	9924      	ldr	r1, [sp, #144]	; 0x90
900278da:	fb01 6303 	mla	r3, r1, r3, r6
900278de:	141b      	asrs	r3, r3, #16
900278e0:	f53f af41 	bmi.w	90027766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900278e4:	3a01      	subs	r2, #1
900278e6:	4293      	cmp	r3, r2
900278e8:	f6bf af3d 	bge.w	90027766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900278ec:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900278f0:	46c8      	mov	r8, r9
900278f2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900278f6:	930e      	str	r3, [sp, #56]	; 0x38
900278f8:	f1bb 0f00 	cmp.w	fp, #0
900278fc:	f300 80b7 	bgt.w	90027a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027900:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027902:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027906:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002790a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002790c:	2b00      	cmp	r3, #0
9002790e:	f340 818e 	ble.w	90027c2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027912:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027916:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027918:	ee30 0a04 	vadd.f32	s0, s0, s8
9002791c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027920:	eef0 6a62 	vmov.f32	s13, s5
90027924:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027928:	ee31 1a05 	vadd.f32	s2, s2, s10
9002792c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027930:	ee16 4a90 	vmov	r4, s13
90027934:	eef0 6a43 	vmov.f32	s13, s6
90027938:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002793c:	ee16 6a90 	vmov	r6, s13
90027940:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027944:	ee61 7a27 	vmul.f32	s15, s2, s15
90027948:	ee77 2a62 	vsub.f32	s5, s14, s5
9002794c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027950:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027954:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027958:	ee12 2a90 	vmov	r2, s5
9002795c:	eef0 2a47 	vmov.f32	s5, s14
90027960:	fb92 f3f3 	sdiv	r3, r2, r3
90027964:	ee13 2a10 	vmov	r2, s6
90027968:	9323      	str	r3, [sp, #140]	; 0x8c
9002796a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002796c:	eeb0 3a67 	vmov.f32	s6, s15
90027970:	fb92 f3f3 	sdiv	r3, r2, r3
90027974:	9324      	str	r3, [sp, #144]	; 0x90
90027976:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027978:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002797a:	3b01      	subs	r3, #1
9002797c:	930d      	str	r3, [sp, #52]	; 0x34
9002797e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027980:	bf08      	it	eq
90027982:	4613      	moveq	r3, r2
90027984:	9309      	str	r3, [sp, #36]	; 0x24
90027986:	e6c2      	b.n	9002770e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027988:	2900      	cmp	r1, #0
9002798a:	f43f af4d 	beq.w	90027828 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002798e:	eb0a 0003 	add.w	r0, sl, r3
90027992:	0843      	lsrs	r3, r0, #1
90027994:	07c0      	lsls	r0, r0, #31
90027996:	5cfb      	ldrb	r3, [r7, r3]
90027998:	bf54      	ite	pl
9002799a:	f003 030f 	andpl.w	r3, r3, #15
9002799e:	111b      	asrmi	r3, r3, #4
900279a0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900279a4:	b2db      	uxtb	r3, r3
900279a6:	930b      	str	r3, [sp, #44]	; 0x2c
900279a8:	e73e      	b.n	90027828 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900279aa:	f8b8 e000 	ldrh.w	lr, [r8]
900279ae:	fa1f fb83 	uxth.w	fp, r3
900279b2:	f3c2 4107 	ubfx	r1, r2, #16, #8
900279b6:	43db      	mvns	r3, r3
900279b8:	ea4f 202e 	mov.w	r0, lr, asr #8
900279bc:	fb11 f10b 	smulbb	r1, r1, fp
900279c0:	b2db      	uxtb	r3, r3
900279c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900279c6:	fa5f fc8c 	uxtb.w	ip, ip
900279ca:	b2d2      	uxtb	r2, r2
900279cc:	fb00 1003 	mla	r0, r0, r3, r1
900279d0:	ea4f 01ee 	mov.w	r1, lr, asr #3
900279d4:	fb1c fc0b 	smulbb	ip, ip, fp
900279d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900279dc:	b280      	uxth	r0, r0
900279de:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900279e2:	fb12 fb0b 	smulbb	fp, r2, fp
900279e6:	fa5f fe8e 	uxtb.w	lr, lr
900279ea:	fb01 cc03 	mla	ip, r1, r3, ip
900279ee:	fb0e bb03 	mla	fp, lr, r3, fp
900279f2:	1c43      	adds	r3, r0, #1
900279f4:	fa1f fc8c 	uxth.w	ip, ip
900279f8:	fa1f fb8b 	uxth.w	fp, fp
900279fc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027a00:	f10c 0101 	add.w	r1, ip, #1
90027a04:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90027a08:	f10b 0001 	add.w	r0, fp, #1
90027a0c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027a10:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027a14:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027a18:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027a1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027a20:	4318      	orrs	r0, r3
90027a22:	ea40 000c 	orr.w	r0, r0, ip
90027a26:	f8a8 0000 	strh.w	r0, [r8]
90027a2a:	e734      	b.n	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a2c:	f113 0b01 	adds.w	fp, r3, #1
90027a30:	f53f af31 	bmi.w	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a34:	45dc      	cmp	ip, fp
90027a36:	f6ff af2e 	blt.w	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a3a:	f110 0b01 	adds.w	fp, r0, #1
90027a3e:	f53f af2a 	bmi.w	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a42:	45de      	cmp	lr, fp
90027a44:	f6ff af27 	blt.w	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a48:	9302      	str	r3, [sp, #8]
90027a4a:	fa0f f38e 	sxth.w	r3, lr
90027a4e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027a50:	9301      	str	r3, [sp, #4]
90027a52:	fa0f f38c 	sxth.w	r3, ip
90027a56:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027a5a:	e9cd 1505 	strd	r1, r5, [sp, #20]
90027a5e:	9300      	str	r3, [sp, #0]
90027a60:	463a      	mov	r2, r7
90027a62:	4653      	mov	r3, sl
90027a64:	4641      	mov	r1, r8
90027a66:	9815      	ldr	r0, [sp, #84]	; 0x54
90027a68:	f7ff fd4c 	bl	90027504 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027a6c:	e713      	b.n	90027896 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027a6e:	1422      	asrs	r2, r4, #16
90027a70:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90027a72:	1433      	asrs	r3, r6, #16
90027a74:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027a78:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027a7c:	fb05 2303 	mla	r3, r5, r3, r2
90027a80:	085a      	lsrs	r2, r3, #1
90027a82:	07dd      	lsls	r5, r3, #31
90027a84:	5cba      	ldrb	r2, [r7, r2]
90027a86:	bf54      	ite	pl
90027a88:	f002 020f 	andpl.w	r2, r2, #15
90027a8c:	1112      	asrmi	r2, r2, #4
90027a8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027a92:	b2d2      	uxtb	r2, r2
90027a94:	2900      	cmp	r1, #0
90027a96:	d077      	beq.n	90027b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027a98:	f103 0e01 	add.w	lr, r3, #1
90027a9c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027aa0:	f01e 0f01 	tst.w	lr, #1
90027aa4:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027aa8:	bf0c      	ite	eq
90027aaa:	f00c 0c0f 	andeq.w	ip, ip, #15
90027aae:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90027ab2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ab6:	fa5f f58c 	uxtb.w	r5, ip
90027aba:	9512      	str	r5, [sp, #72]	; 0x48
90027abc:	b308      	cbz	r0, 90027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027abe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027ac0:	442b      	add	r3, r5
90027ac2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027ac6:	07dd      	lsls	r5, r3, #31
90027ac8:	f103 0301 	add.w	r3, r3, #1
90027acc:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ad0:	bf54      	ite	pl
90027ad2:	f00c 0c0f 	andpl.w	ip, ip, #15
90027ad6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ada:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ade:	fa5f f58c 	uxtb.w	r5, ip
90027ae2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027ae6:	950c      	str	r5, [sp, #48]	; 0x30
90027ae8:	07dd      	lsls	r5, r3, #31
90027aea:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027aee:	bf54      	ite	pl
90027af0:	f00c 0c0f 	andpl.w	ip, ip, #15
90027af4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027af8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027afc:	fa5f f38c 	uxtb.w	r3, ip
90027b00:	9313      	str	r3, [sp, #76]	; 0x4c
90027b02:	b289      	uxth	r1, r1
90027b04:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027b06:	b280      	uxth	r0, r0
90027b08:	fb01 f300 	mul.w	r3, r1, r0
90027b0c:	0109      	lsls	r1, r1, #4
90027b0e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027b12:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90027b16:	1ac9      	subs	r1, r1, r3
90027b18:	b280      	uxth	r0, r0
90027b1a:	b289      	uxth	r1, r1
90027b1c:	ebac 0c00 	sub.w	ip, ip, r0
90027b20:	4369      	muls	r1, r5
90027b22:	fa1f fc8c 	uxth.w	ip, ip
90027b26:	fb02 120c 	mla	r2, r2, ip, r1
90027b2a:	990c      	ldr	r1, [sp, #48]	; 0x30
90027b2c:	fb00 2001 	mla	r0, r0, r1, r2
90027b30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90027b32:	fb03 0302 	mla	r3, r3, r2, r0
90027b36:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027b3a:	b1d3      	cbz	r3, 90027b72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027b3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027b3e:	4353      	muls	r3, r2
90027b40:	1c5a      	adds	r2, r3, #1
90027b42:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027b46:	4a0f      	ldr	r2, [pc, #60]	; (90027b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027b48:	121b      	asrs	r3, r3, #8
90027b4a:	6812      	ldr	r2, [r2, #0]
90027b4c:	2bff      	cmp	r3, #255	; 0xff
90027b4e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027b52:	d12d      	bne.n	90027bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027b54:	0953      	lsrs	r3, r2, #5
90027b56:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90027b5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027b5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027b62:	f02c 0c07 	bic.w	ip, ip, #7
90027b66:	ea43 0c0c 	orr.w	ip, r3, ip
90027b6a:	ea4c 0202 	orr.w	r2, ip, r2
90027b6e:	f8a8 2000 	strh.w	r2, [r8]
90027b72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027b74:	f108 0802 	add.w	r8, r8, #2
90027b78:	f10b 3bff 	add.w	fp, fp, #4294967295
90027b7c:	441c      	add	r4, r3
90027b7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027b80:	441e      	add	r6, r3
90027b82:	e6b9      	b.n	900278f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90027b84:	24039adc 	.word	0x24039adc
90027b88:	2800      	cmp	r0, #0
90027b8a:	d0ba      	beq.n	90027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027b8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027b8e:	442b      	add	r3, r5
90027b90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027b94:	07db      	lsls	r3, r3, #31
90027b96:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027b9a:	bf54      	ite	pl
90027b9c:	f00c 0c0f 	andpl.w	ip, ip, #15
90027ba0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ba4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ba8:	fa5f f38c 	uxtb.w	r3, ip
90027bac:	930c      	str	r3, [sp, #48]	; 0x30
90027bae:	e7a8      	b.n	90027b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027bb0:	f8b8 e000 	ldrh.w	lr, [r8]
90027bb4:	fa1f fa83 	uxth.w	sl, r3
90027bb8:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027bbc:	43db      	mvns	r3, r3
90027bbe:	ea4f 202e 	mov.w	r0, lr, asr #8
90027bc2:	fb11 f10a 	smulbb	r1, r1, sl
90027bc6:	b2db      	uxtb	r3, r3
90027bc8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90027bcc:	b2d2      	uxtb	r2, r2
90027bce:	fa5f fc8c 	uxtb.w	ip, ip
90027bd2:	fb00 1003 	mla	r0, r0, r3, r1
90027bd6:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027bda:	fb12 f20a 	smulbb	r2, r2, sl
90027bde:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027be2:	b280      	uxth	r0, r0
90027be4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90027be8:	fb1c fc0a 	smulbb	ip, ip, sl
90027bec:	fa5f fe8e 	uxtb.w	lr, lr
90027bf0:	fb0e 2203 	mla	r2, lr, r3, r2
90027bf4:	fb01 cc03 	mla	ip, r1, r3, ip
90027bf8:	1c43      	adds	r3, r0, #1
90027bfa:	b292      	uxth	r2, r2
90027bfc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027c00:	1c51      	adds	r1, r2, #1
90027c02:	fa1f fc8c 	uxth.w	ip, ip
90027c06:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90027c0a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027c0e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90027c12:	4308      	orrs	r0, r1
90027c14:	f10c 0101 	add.w	r1, ip, #1
90027c18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027c1c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027c20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027c24:	ea40 000c 	orr.w	r0, r0, ip
90027c28:	f8a8 0000 	strh.w	r0, [r8]
90027c2c:	e7a1      	b.n	90027b72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027c2e:	b017      	add	sp, #92	; 0x5c
90027c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027c34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90027c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027c38:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90027c3c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027c40:	2d00      	cmp	r5, #0
90027c42:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027c46:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90027c4a:	fb05 0e03 	mla	lr, r5, r3, r0
90027c4e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027c52:	f2c0 80b0 	blt.w	90027db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027c56:	45a9      	cmp	r9, r5
90027c58:	f340 80ad 	ble.w	90027db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027c5c:	2800      	cmp	r0, #0
90027c5e:	f2c0 80a8 	blt.w	90027db2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027c62:	4580      	cmp	r8, r0
90027c64:	f340 80a5 	ble.w	90027db2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027c68:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027c6c:	f01e 0f01 	tst.w	lr, #1
90027c70:	5d16      	ldrb	r6, [r2, r4]
90027c72:	bf0c      	ite	eq
90027c74:	f006 060f 	andeq.w	r6, r6, #15
90027c78:	1136      	asrne	r6, r6, #4
90027c7a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027c7e:	b2f6      	uxtb	r6, r6
90027c80:	1c44      	adds	r4, r0, #1
90027c82:	f100 809b 	bmi.w	90027dbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027c86:	45a0      	cmp	r8, r4
90027c88:	f340 8098 	ble.w	90027dbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027c8c:	2f00      	cmp	r7, #0
90027c8e:	f000 8097 	beq.w	90027dc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90027c92:	f10e 0a01 	add.w	sl, lr, #1
90027c96:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027c9a:	f01a 0f01 	tst.w	sl, #1
90027c9e:	5d14      	ldrb	r4, [r2, r4]
90027ca0:	bf0c      	ite	eq
90027ca2:	f004 040f 	andeq.w	r4, r4, #15
90027ca6:	1124      	asrne	r4, r4, #4
90027ca8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027cac:	b2e4      	uxtb	r4, r4
90027cae:	3501      	adds	r5, #1
90027cb0:	f100 808a 	bmi.w	90027dc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027cb4:	45a9      	cmp	r9, r5
90027cb6:	f340 8087 	ble.w	90027dc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027cba:	f1bc 0f00 	cmp.w	ip, #0
90027cbe:	f000 8086 	beq.w	90027dce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90027cc2:	2800      	cmp	r0, #0
90027cc4:	db7e      	blt.n	90027dc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027cc6:	4580      	cmp	r8, r0
90027cc8:	dd7c      	ble.n	90027dc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027cca:	eb03 090e 	add.w	r9, r3, lr
90027cce:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027cd2:	f019 0f01 	tst.w	r9, #1
90027cd6:	5d55      	ldrb	r5, [r2, r5]
90027cd8:	bf0c      	ite	eq
90027cda:	f005 050f 	andeq.w	r5, r5, #15
90027cde:	112d      	asrne	r5, r5, #4
90027ce0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027ce4:	b2ed      	uxtb	r5, r5
90027ce6:	3001      	adds	r0, #1
90027ce8:	d474      	bmi.n	90027dd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027cea:	4580      	cmp	r8, r0
90027cec:	dd72      	ble.n	90027dd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027cee:	2f00      	cmp	r7, #0
90027cf0:	d072      	beq.n	90027dd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90027cf2:	3301      	adds	r3, #1
90027cf4:	449e      	add	lr, r3
90027cf6:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027cfa:	f01e 0f01 	tst.w	lr, #1
90027cfe:	5cd0      	ldrb	r0, [r2, r3]
90027d00:	bf0c      	ite	eq
90027d02:	f000 000f 	andeq.w	r0, r0, #15
90027d06:	1100      	asrne	r0, r0, #4
90027d08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027d0c:	b2c3      	uxtb	r3, r0
90027d0e:	b2ba      	uxth	r2, r7
90027d10:	fa1f fc8c 	uxth.w	ip, ip
90027d14:	fb02 f00c 	mul.w	r0, r2, ip
90027d18:	0112      	lsls	r2, r2, #4
90027d1a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027d1e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90027d22:	1a12      	subs	r2, r2, r0
90027d24:	fa1f fc8c 	uxth.w	ip, ip
90027d28:	b292      	uxth	r2, r2
90027d2a:	eba7 070c 	sub.w	r7, r7, ip
90027d2e:	4362      	muls	r2, r4
90027d30:	b2bf      	uxth	r7, r7
90027d32:	fb06 2207 	mla	r2, r6, r7, r2
90027d36:	fb0c 2505 	mla	r5, ip, r5, r2
90027d3a:	fb00 5303 	mla	r3, r0, r3, r5
90027d3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027d42:	b3a3      	cbz	r3, 90027dae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90027d44:	4a25      	ldr	r2, [pc, #148]	; (90027ddc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90027d46:	880e      	ldrh	r6, [r1, #0]
90027d48:	6815      	ldr	r5, [r2, #0]
90027d4a:	b29a      	uxth	r2, r3
90027d4c:	1234      	asrs	r4, r6, #8
90027d4e:	43db      	mvns	r3, r3
90027d50:	f3c5 4007 	ubfx	r0, r5, #16, #8
90027d54:	f3c5 2707 	ubfx	r7, r5, #8, #8
90027d58:	b2db      	uxtb	r3, r3
90027d5a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027d5e:	fb10 f002 	smulbb	r0, r0, r2
90027d62:	b2ed      	uxtb	r5, r5
90027d64:	fb17 f702 	smulbb	r7, r7, r2
90027d68:	fb04 0403 	mla	r4, r4, r3, r0
90027d6c:	10f0      	asrs	r0, r6, #3
90027d6e:	fb15 f202 	smulbb	r2, r5, r2
90027d72:	00f6      	lsls	r6, r6, #3
90027d74:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027d78:	b2a4      	uxth	r4, r4
90027d7a:	b2f6      	uxtb	r6, r6
90027d7c:	fb00 7003 	mla	r0, r0, r3, r7
90027d80:	fb06 2303 	mla	r3, r6, r3, r2
90027d84:	b280      	uxth	r0, r0
90027d86:	b29a      	uxth	r2, r3
90027d88:	1c63      	adds	r3, r4, #1
90027d8a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027d8e:	1c53      	adds	r3, r2, #1
90027d90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027d94:	1c42      	adds	r2, r0, #1
90027d96:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90027d9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027d9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027da2:	0940      	lsrs	r0, r0, #5
90027da4:	4323      	orrs	r3, r4
90027da6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027daa:	4303      	orrs	r3, r0
90027dac:	800b      	strh	r3, [r1, #0]
90027dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027db2:	2600      	movs	r6, #0
90027db4:	e764      	b.n	90027c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90027db6:	2400      	movs	r4, #0
90027db8:	4626      	mov	r6, r4
90027dba:	e778      	b.n	90027cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027dbc:	2400      	movs	r4, #0
90027dbe:	e776      	b.n	90027cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027dc0:	463c      	mov	r4, r7
90027dc2:	e774      	b.n	90027cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027dc4:	2500      	movs	r5, #0
90027dc6:	e78e      	b.n	90027ce6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027dc8:	2300      	movs	r3, #0
90027dca:	461d      	mov	r5, r3
90027dcc:	e79f      	b.n	90027d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027dce:	4663      	mov	r3, ip
90027dd0:	4665      	mov	r5, ip
90027dd2:	e79c      	b.n	90027d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027dd4:	2300      	movs	r3, #0
90027dd6:	e79a      	b.n	90027d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027dd8:	463b      	mov	r3, r7
90027dda:	e798      	b.n	90027d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027ddc:	24039adc 	.word	0x24039adc

90027de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027de4:	b093      	sub	sp, #76	; 0x4c
90027de6:	461d      	mov	r5, r3
90027de8:	920c      	str	r2, [sp, #48]	; 0x30
90027dea:	9a21      	ldr	r2, [sp, #132]	; 0x84
90027dec:	9011      	str	r0, [sp, #68]	; 0x44
90027dee:	9107      	str	r1, [sp, #28]
90027df0:	6850      	ldr	r0, [r2, #4]
90027df2:	6812      	ldr	r2, [r2, #0]
90027df4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90027df8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90027dfc:	fb00 1303 	mla	r3, r0, r3, r1
90027e00:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027e04:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027e06:	689b      	ldr	r3, [r3, #8]
90027e08:	3301      	adds	r3, #1
90027e0a:	f023 0301 	bic.w	r3, r3, #1
90027e0e:	9306      	str	r3, [sp, #24]
90027e10:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027e12:	681f      	ldr	r7, [r3, #0]
90027e14:	9b07      	ldr	r3, [sp, #28]
90027e16:	2b00      	cmp	r3, #0
90027e18:	dc03      	bgt.n	90027e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90027e1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90027e1c:	2b00      	cmp	r3, #0
90027e1e:	f340 8267 	ble.w	900282f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027e22:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027e24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027e28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027e2c:	1e48      	subs	r0, r1, #1
90027e2e:	f102 3cff 	add.w	ip, r2, #4294967295
90027e32:	2d00      	cmp	r5, #0
90027e34:	f340 80b7 	ble.w	90027fa6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90027e38:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027e3c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027e40:	d406      	bmi.n	90027e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027e42:	4586      	cmp	lr, r0
90027e44:	da04      	bge.n	90027e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027e46:	2b00      	cmp	r3, #0
90027e48:	db02      	blt.n	90027e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027e4a:	4563      	cmp	r3, ip
90027e4c:	f2c0 80ac 	blt.w	90027fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90027e50:	f11e 0e01 	adds.w	lr, lr, #1
90027e54:	f100 809f 	bmi.w	90027f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027e58:	4571      	cmp	r1, lr
90027e5a:	f2c0 809c 	blt.w	90027f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027e5e:	3301      	adds	r3, #1
90027e60:	f100 8099 	bmi.w	90027f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027e64:	429a      	cmp	r2, r3
90027e66:	f2c0 8096 	blt.w	90027f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027e6a:	46c8      	mov	r8, r9
90027e6c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90027e70:	9509      	str	r5, [sp, #36]	; 0x24
90027e72:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027e74:	2b00      	cmp	r3, #0
90027e76:	f340 80b5 	ble.w	90027fe4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90027e7a:	f3c4 3303 	ubfx	r3, r4, #12, #4
90027e7e:	1430      	asrs	r0, r6, #16
90027e80:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027e84:	9308      	str	r3, [sp, #32]
90027e86:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027e88:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027e8c:	1423      	asrs	r3, r4, #16
90027e8e:	f100 813f 	bmi.w	90028110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027e92:	f10c 3bff 	add.w	fp, ip, #4294967295
90027e96:	455b      	cmp	r3, fp
90027e98:	f280 813a 	bge.w	90028110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027e9c:	2800      	cmp	r0, #0
90027e9e:	f2c0 8137 	blt.w	90028110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027ea2:	f10e 3bff 	add.w	fp, lr, #4294967295
90027ea6:	4558      	cmp	r0, fp
90027ea8:	f280 8132 	bge.w	90028110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027eac:	9a06      	ldr	r2, [sp, #24]
90027eae:	fb00 3302 	mla	r3, r0, r2, r3
90027eb2:	0858      	lsrs	r0, r3, #1
90027eb4:	07da      	lsls	r2, r3, #31
90027eb6:	9a08      	ldr	r2, [sp, #32]
90027eb8:	f817 c000 	ldrb.w	ip, [r7, r0]
90027ebc:	bf54      	ite	pl
90027ebe:	f00c 0c0f 	andpl.w	ip, ip, #15
90027ec2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ec6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027eca:	fa5f fc8c 	uxtb.w	ip, ip
90027ece:	2a00      	cmp	r2, #0
90027ed0:	f000 80cc 	beq.w	9002806c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90027ed4:	1c58      	adds	r0, r3, #1
90027ed6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027eda:	07c0      	lsls	r0, r0, #31
90027edc:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027ee0:	bf54      	ite	pl
90027ee2:	f00e 0e0f 	andpl.w	lr, lr, #15
90027ee6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027eea:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027eee:	fa5f fe8e 	uxtb.w	lr, lr
90027ef2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90027ef6:	b1b9      	cbz	r1, 90027f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027ef8:	4453      	add	r3, sl
90027efa:	0858      	lsrs	r0, r3, #1
90027efc:	07da      	lsls	r2, r3, #31
90027efe:	5c38      	ldrb	r0, [r7, r0]
90027f00:	bf54      	ite	pl
90027f02:	f000 000f 	andpl.w	r0, r0, #15
90027f06:	1100      	asrmi	r0, r0, #4
90027f08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027f0c:	b2c0      	uxtb	r0, r0
90027f0e:	900a      	str	r0, [sp, #40]	; 0x28
90027f10:	1c58      	adds	r0, r3, #1
90027f12:	0843      	lsrs	r3, r0, #1
90027f14:	07c2      	lsls	r2, r0, #31
90027f16:	5cfb      	ldrb	r3, [r7, r3]
90027f18:	bf54      	ite	pl
90027f1a:	f003 030f 	andpl.w	r3, r3, #15
90027f1e:	111b      	asrmi	r3, r3, #4
90027f20:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027f24:	b2db      	uxtb	r3, r3
90027f26:	930e      	str	r3, [sp, #56]	; 0x38
90027f28:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90027f2c:	b289      	uxth	r1, r1
90027f2e:	fb02 f301 	mul.w	r3, r2, r1
90027f32:	0112      	lsls	r2, r2, #4
90027f34:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027f38:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90027f3c:	1ad2      	subs	r2, r2, r3
90027f3e:	b289      	uxth	r1, r1
90027f40:	b292      	uxth	r2, r2
90027f42:	1a40      	subs	r0, r0, r1
90027f44:	fa1f fe80 	uxth.w	lr, r0
90027f48:	980d      	ldr	r0, [sp, #52]	; 0x34
90027f4a:	4342      	muls	r2, r0
90027f4c:	fb0c 2c0e 	mla	ip, ip, lr, r2
90027f50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90027f52:	fb01 c102 	mla	r1, r1, r2, ip
90027f56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90027f58:	fb03 1302 	mla	r3, r3, r2, r1
90027f5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027f60:	2bff      	cmp	r3, #255	; 0xff
90027f62:	f040 8094 	bne.w	9002808e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90027f66:	4bbf      	ldr	r3, [pc, #764]	; (90028264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027f68:	681a      	ldr	r2, [r3, #0]
90027f6a:	4bbf      	ldr	r3, [pc, #764]	; (90028268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027f6c:	0951      	lsrs	r1, r2, #5
90027f6e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90027f72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027f76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90027f7a:	430b      	orrs	r3, r1
90027f7c:	4313      	orrs	r3, r2
90027f7e:	f8a8 3000 	strh.w	r3, [r8]
90027f82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90027f84:	f108 0802 	add.w	r8, r8, #2
90027f88:	441c      	add	r4, r3
90027f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027f8c:	441e      	add	r6, r3
90027f8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027f90:	3b01      	subs	r3, #1
90027f92:	9309      	str	r3, [sp, #36]	; 0x24
90027f94:	e76d      	b.n	90027e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90027f96:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90027f98:	3d01      	subs	r5, #1
90027f9a:	f109 0902 	add.w	r9, r9, #2
90027f9e:	441c      	add	r4, r3
90027fa0:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027fa2:	441e      	add	r6, r3
90027fa4:	e745      	b.n	90027e32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90027fa6:	d021      	beq.n	90027fec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90027fa8:	1e6b      	subs	r3, r5, #1
90027faa:	981f      	ldr	r0, [sp, #124]	; 0x7c
90027fac:	fb00 4003 	mla	r0, r0, r3, r4
90027fb0:	1400      	asrs	r0, r0, #16
90027fb2:	f53f af5a 	bmi.w	90027e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027fb6:	3901      	subs	r1, #1
90027fb8:	4288      	cmp	r0, r1
90027fba:	f6bf af56 	bge.w	90027e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027fbe:	9920      	ldr	r1, [sp, #128]	; 0x80
90027fc0:	fb01 6303 	mla	r3, r1, r3, r6
90027fc4:	141b      	asrs	r3, r3, #16
90027fc6:	f53f af50 	bmi.w	90027e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027fca:	3a01      	subs	r2, #1
90027fcc:	4293      	cmp	r3, r2
90027fce:	f6bf af4c 	bge.w	90027e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027fd2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90027fd6:	46a8      	mov	r8, r5
90027fd8:	46ce      	mov	lr, r9
90027fda:	9308      	str	r3, [sp, #32]
90027fdc:	f1b8 0f00 	cmp.w	r8, #0
90027fe0:	f300 80b6 	bgt.w	90028150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90027fe4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027fe8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027fec:	9b07      	ldr	r3, [sp, #28]
90027fee:	2b00      	cmp	r3, #0
90027ff0:	f340 817e 	ble.w	900282f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027ff4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027ff8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90027ffa:	ee30 0a04 	vadd.f32	s0, s0, s8
90027ffe:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028002:	eef0 6a62 	vmov.f32	s13, s5
90028006:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002800a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002800e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028012:	ee16 4a90 	vmov	r4, s13
90028016:	eef0 6a43 	vmov.f32	s13, s6
9002801a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002801e:	ee16 6a90 	vmov	r6, s13
90028022:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028026:	ee61 7a27 	vmul.f32	s15, s2, s15
9002802a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002802e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028036:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002803a:	ee12 2a90 	vmov	r2, s5
9002803e:	eef0 2a47 	vmov.f32	s5, s14
90028042:	fb92 f3f3 	sdiv	r3, r2, r3
90028046:	ee13 2a10 	vmov	r2, s6
9002804a:	931f      	str	r3, [sp, #124]	; 0x7c
9002804c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002804e:	eeb0 3a67 	vmov.f32	s6, s15
90028052:	fb92 f3f3 	sdiv	r3, r2, r3
90028056:	9320      	str	r3, [sp, #128]	; 0x80
90028058:	9b07      	ldr	r3, [sp, #28]
9002805a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002805c:	3b01      	subs	r3, #1
9002805e:	9307      	str	r3, [sp, #28]
90028060:	bf08      	it	eq
90028062:	4615      	moveq	r5, r2
90028064:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90028066:	bf18      	it	ne
90028068:	461d      	movne	r5, r3
9002806a:	e6d3      	b.n	90027e14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002806c:	2900      	cmp	r1, #0
9002806e:	f43f af5b 	beq.w	90027f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028072:	eb0a 0003 	add.w	r0, sl, r3
90028076:	0843      	lsrs	r3, r0, #1
90028078:	07c0      	lsls	r0, r0, #31
9002807a:	5cfb      	ldrb	r3, [r7, r3]
9002807c:	bf54      	ite	pl
9002807e:	f003 030f 	andpl.w	r3, r3, #15
90028082:	111b      	asrmi	r3, r3, #4
90028084:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028088:	b2db      	uxtb	r3, r3
9002808a:	930a      	str	r3, [sp, #40]	; 0x28
9002808c:	e74c      	b.n	90027f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002808e:	2b00      	cmp	r3, #0
90028090:	f43f af77 	beq.w	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028094:	4a73      	ldr	r2, [pc, #460]	; (90028264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028096:	fa1f fe83 	uxth.w	lr, r3
9002809a:	f8b8 c000 	ldrh.w	ip, [r8]
9002809e:	43db      	mvns	r3, r3
900280a0:	6810      	ldr	r0, [r2, #0]
900280a2:	ea4f 212c 	mov.w	r1, ip, asr #8
900280a6:	f3c0 4207 	ubfx	r2, r0, #16, #8
900280aa:	b2db      	uxtb	r3, r3
900280ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900280b0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900280b4:	fb12 f20e 	smulbb	r2, r2, lr
900280b8:	b2c0      	uxtb	r0, r0
900280ba:	fb1b fb0e 	smulbb	fp, fp, lr
900280be:	fb01 2103 	mla	r1, r1, r3, r2
900280c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900280c6:	fb10 fe0e 	smulbb	lr, r0, lr
900280ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900280ce:	b289      	uxth	r1, r1
900280d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900280d4:	fa5f fc8c 	uxtb.w	ip, ip
900280d8:	fb02 b203 	mla	r2, r2, r3, fp
900280dc:	1c48      	adds	r0, r1, #1
900280de:	fb0c e303 	mla	r3, ip, r3, lr
900280e2:	b292      	uxth	r2, r2
900280e4:	b29b      	uxth	r3, r3
900280e6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900280ea:	f102 0b01 	add.w	fp, r2, #1
900280ee:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
900280f2:	1c59      	adds	r1, r3, #1
900280f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900280f8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900280fc:	0952      	lsrs	r2, r2, #5
900280fe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028102:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028106:	4301      	orrs	r1, r0
90028108:	4311      	orrs	r1, r2
9002810a:	f8a8 1000 	strh.w	r1, [r8]
9002810e:	e738      	b.n	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028110:	f113 0b01 	adds.w	fp, r3, #1
90028114:	f53f af35 	bmi.w	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028118:	45dc      	cmp	ip, fp
9002811a:	f6ff af32 	blt.w	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002811e:	f110 0b01 	adds.w	fp, r0, #1
90028122:	f53f af2e 	bmi.w	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028126:	45de      	cmp	lr, fp
90028128:	f6ff af2b 	blt.w	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002812c:	9302      	str	r3, [sp, #8]
9002812e:	fa0f f38e 	sxth.w	r3, lr
90028132:	9a08      	ldr	r2, [sp, #32]
90028134:	9301      	str	r3, [sp, #4]
90028136:	fa0f f38c 	sxth.w	r3, ip
9002813a:	9105      	str	r1, [sp, #20]
9002813c:	4641      	mov	r1, r8
9002813e:	9300      	str	r3, [sp, #0]
90028140:	4653      	mov	r3, sl
90028142:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028146:	463a      	mov	r2, r7
90028148:	9811      	ldr	r0, [sp, #68]	; 0x44
9002814a:	f7ff fd73 	bl	90027c34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002814e:	e718      	b.n	90027f82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028150:	1422      	asrs	r2, r4, #16
90028152:	9906      	ldr	r1, [sp, #24]
90028154:	1433      	asrs	r3, r6, #16
90028156:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002815a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002815e:	fb01 2303 	mla	r3, r1, r3, r2
90028162:	085a      	lsrs	r2, r3, #1
90028164:	07d9      	lsls	r1, r3, #31
90028166:	5cba      	ldrb	r2, [r7, r2]
90028168:	bf54      	ite	pl
9002816a:	f002 020f 	andpl.w	r2, r2, #15
9002816e:	1112      	asrmi	r2, r2, #4
90028170:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90028174:	b2d2      	uxtb	r2, r2
90028176:	2800      	cmp	r0, #0
90028178:	d063      	beq.n	90028242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002817a:	f103 0a01 	add.w	sl, r3, #1
9002817e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90028182:	f01a 0f01 	tst.w	sl, #1
90028186:	5c79      	ldrb	r1, [r7, r1]
90028188:	bf0c      	ite	eq
9002818a:	f001 010f 	andeq.w	r1, r1, #15
9002818e:	1109      	asrne	r1, r1, #4
90028190:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028194:	b2c9      	uxtb	r1, r1
90028196:	910f      	str	r1, [sp, #60]	; 0x3c
90028198:	f1bc 0f00 	cmp.w	ip, #0
9002819c:	d01a      	beq.n	900281d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002819e:	9908      	ldr	r1, [sp, #32]
900281a0:	440b      	add	r3, r1
900281a2:	0859      	lsrs	r1, r3, #1
900281a4:	f013 0f01 	tst.w	r3, #1
900281a8:	f103 0301 	add.w	r3, r3, #1
900281ac:	5c79      	ldrb	r1, [r7, r1]
900281ae:	bf0c      	ite	eq
900281b0:	f001 010f 	andeq.w	r1, r1, #15
900281b4:	1109      	asrne	r1, r1, #4
900281b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900281ba:	b2c9      	uxtb	r1, r1
900281bc:	910b      	str	r1, [sp, #44]	; 0x2c
900281be:	0859      	lsrs	r1, r3, #1
900281c0:	07db      	lsls	r3, r3, #31
900281c2:	5c79      	ldrb	r1, [r7, r1]
900281c4:	bf54      	ite	pl
900281c6:	f001 010f 	andpl.w	r1, r1, #15
900281ca:	1109      	asrmi	r1, r1, #4
900281cc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900281d0:	b2c9      	uxtb	r1, r1
900281d2:	9110      	str	r1, [sp, #64]	; 0x40
900281d4:	b280      	uxth	r0, r0
900281d6:	fa1f fc8c 	uxth.w	ip, ip
900281da:	fb00 f30c 	mul.w	r3, r0, ip
900281de:	0100      	lsls	r0, r0, #4
900281e0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900281e4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
900281e8:	1ac0      	subs	r0, r0, r3
900281ea:	fa1f fc8c 	uxth.w	ip, ip
900281ee:	b280      	uxth	r0, r0
900281f0:	eba1 010c 	sub.w	r1, r1, ip
900281f4:	fa1f fa81 	uxth.w	sl, r1
900281f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
900281fa:	4348      	muls	r0, r1
900281fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
900281fe:	fb02 020a 	mla	r2, r2, sl, r0
90028202:	fb0c 2c01 	mla	ip, ip, r1, r2
90028206:	9a10      	ldr	r2, [sp, #64]	; 0x40
90028208:	fb03 c302 	mla	r3, r3, r2, ip
9002820c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028210:	2bff      	cmp	r3, #255	; 0xff
90028212:	d12b      	bne.n	9002826c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028214:	4b13      	ldr	r3, [pc, #76]	; (90028264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028216:	681a      	ldr	r2, [r3, #0]
90028218:	4b13      	ldr	r3, [pc, #76]	; (90028268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002821a:	0951      	lsrs	r1, r2, #5
9002821c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028220:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028224:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90028228:	430b      	orrs	r3, r1
9002822a:	4313      	orrs	r3, r2
9002822c:	f8ae 3000 	strh.w	r3, [lr]
90028230:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028232:	f10e 0e02 	add.w	lr, lr, #2
90028236:	f108 38ff 	add.w	r8, r8, #4294967295
9002823a:	441c      	add	r4, r3
9002823c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002823e:	441e      	add	r6, r3
90028240:	e6cc      	b.n	90027fdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90028242:	f1bc 0f00 	cmp.w	ip, #0
90028246:	d0c5      	beq.n	900281d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028248:	9908      	ldr	r1, [sp, #32]
9002824a:	440b      	add	r3, r1
9002824c:	0859      	lsrs	r1, r3, #1
9002824e:	07db      	lsls	r3, r3, #31
90028250:	5c79      	ldrb	r1, [r7, r1]
90028252:	bf54      	ite	pl
90028254:	f001 010f 	andpl.w	r1, r1, #15
90028258:	1109      	asrmi	r1, r1, #4
9002825a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002825e:	b2c9      	uxtb	r1, r1
90028260:	910b      	str	r1, [sp, #44]	; 0x2c
90028262:	e7b7      	b.n	900281d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028264:	24039adc 	.word	0x24039adc
90028268:	fffff800 	.word	0xfffff800
9002826c:	2b00      	cmp	r3, #0
9002826e:	d0df      	beq.n	90028230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028270:	4a21      	ldr	r2, [pc, #132]	; (900282f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90028272:	fa1f fa83 	uxth.w	sl, r3
90028276:	f8be c000 	ldrh.w	ip, [lr]
9002827a:	43db      	mvns	r3, r3
9002827c:	6810      	ldr	r0, [r2, #0]
9002827e:	ea4f 212c 	mov.w	r1, ip, asr #8
90028282:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028286:	b2db      	uxtb	r3, r3
90028288:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002828c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028290:	fb12 f20a 	smulbb	r2, r2, sl
90028294:	b2c0      	uxtb	r0, r0
90028296:	fb1b fb0a 	smulbb	fp, fp, sl
9002829a:	fb01 2103 	mla	r1, r1, r3, r2
9002829e:	ea4f 02ec 	mov.w	r2, ip, asr #3
900282a2:	fb10 f00a 	smulbb	r0, r0, sl
900282a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900282aa:	b289      	uxth	r1, r1
900282ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900282b0:	fa5f fc8c 	uxtb.w	ip, ip
900282b4:	fb02 b203 	mla	r2, r2, r3, fp
900282b8:	fb0c 0003 	mla	r0, ip, r3, r0
900282bc:	1c4b      	adds	r3, r1, #1
900282be:	b292      	uxth	r2, r2
900282c0:	b280      	uxth	r0, r0
900282c2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900282c6:	f100 0b01 	add.w	fp, r0, #1
900282ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900282ce:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
900282d2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900282d6:	ea4b 0101 	orr.w	r1, fp, r1
900282da:	f102 0b01 	add.w	fp, r2, #1
900282de:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900282e2:	0952      	lsrs	r2, r2, #5
900282e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900282e8:	4311      	orrs	r1, r2
900282ea:	f8ae 1000 	strh.w	r1, [lr]
900282ee:	e79f      	b.n	90028230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900282f0:	b013      	add	sp, #76	; 0x4c
900282f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900282f6:	bf00      	nop
900282f8:	24039adc 	.word	0x24039adc

900282fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900282fc:	b570      	push	{r4, r5, r6, lr}
900282fe:	1208      	asrs	r0, r1, #8
90028300:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028304:	b29e      	uxth	r6, r3
90028306:	1213      	asrs	r3, r2, #8
90028308:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002830c:	10cc      	asrs	r4, r1, #3
9002830e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90028312:	00c9      	lsls	r1, r1, #3
90028314:	fb10 f006 	smulbb	r0, r0, r6
90028318:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002831c:	fb13 f305 	smulbb	r3, r3, r5
90028320:	fb14 f406 	smulbb	r4, r4, r6
90028324:	4418      	add	r0, r3
90028326:	10d3      	asrs	r3, r2, #3
90028328:	00d2      	lsls	r2, r2, #3
9002832a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002832e:	b280      	uxth	r0, r0
90028330:	b2d2      	uxtb	r2, r2
90028332:	fb13 f305 	smulbb	r3, r3, r5
90028336:	fb12 f205 	smulbb	r2, r2, r5
9002833a:	441c      	add	r4, r3
9002833c:	b2cb      	uxtb	r3, r1
9002833e:	fb13 f306 	smulbb	r3, r3, r6
90028342:	b2a4      	uxth	r4, r4
90028344:	4413      	add	r3, r2
90028346:	1c42      	adds	r2, r0, #1
90028348:	b29b      	uxth	r3, r3
9002834a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002834e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90028352:	1c58      	adds	r0, r3, #1
90028354:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028358:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002835c:	4310      	orrs	r0, r2
9002835e:	1c62      	adds	r2, r4, #1
90028360:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028364:	0964      	lsrs	r4, r4, #5
90028366:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002836a:	4320      	orrs	r0, r4
9002836c:	bd70      	pop	{r4, r5, r6, pc}
	...

90028370 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028374:	b08f      	sub	sp, #60	; 0x3c
90028376:	461c      	mov	r4, r3
90028378:	460d      	mov	r5, r1
9002837a:	4616      	mov	r6, r2
9002837c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028380:	9004      	str	r0, [sp, #16]
90028382:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028384:	2f00      	cmp	r7, #0
90028386:	f000 80f6 	beq.w	90028576 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002838a:	6820      	ldr	r0, [r4, #0]
9002838c:	aa0a      	add	r2, sp, #40	; 0x28
9002838e:	6861      	ldr	r1, [r4, #4]
90028390:	f04f 0802 	mov.w	r8, #2
90028394:	3604      	adds	r6, #4
90028396:	c203      	stmia	r2!, {r0, r1}
90028398:	6818      	ldr	r0, [r3, #0]
9002839a:	aa0c      	add	r2, sp, #48	; 0x30
9002839c:	6859      	ldr	r1, [r3, #4]
9002839e:	c203      	stmia	r2!, {r0, r1}
900283a0:	a80a      	add	r0, sp, #40	; 0x28
900283a2:	f7ef fceb 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900283a6:	4621      	mov	r1, r4
900283a8:	a80c      	add	r0, sp, #48	; 0x30
900283aa:	f7ef fd2b 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900283ae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900283b2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
900283b6:	f002 0301 	and.w	r3, r2, #1
900283ba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900283be:	9306      	str	r3, [sp, #24]
900283c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900283c4:	f003 0101 	and.w	r1, r3, #1
900283c8:	9105      	str	r1, [sp, #20]
900283ca:	9805      	ldr	r0, [sp, #20]
900283cc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
900283d0:	4403      	add	r3, r0
900283d2:	fb01 2303 	mla	r3, r1, r3, r2
900283d6:	fb93 f3f8 	sdiv	r3, r3, r8
900283da:	441d      	add	r5, r3
900283dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900283e0:	441a      	add	r2, r3
900283e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900283e6:	4419      	add	r1, r3
900283e8:	4b64      	ldr	r3, [pc, #400]	; (9002857c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900283ea:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900283ee:	6818      	ldr	r0, [r3, #0]
900283f0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900283f4:	6803      	ldr	r3, [r0, #0]
900283f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900283f8:	4798      	blx	r3
900283fa:	4a61      	ldr	r2, [pc, #388]	; (90028580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900283fc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90028400:	2fff      	cmp	r7, #255	; 0xff
90028402:	8813      	ldrh	r3, [r2, #0]
90028404:	4611      	mov	r1, r2
90028406:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
9002840a:	fb03 fb0b 	mul.w	fp, r3, fp
9002840e:	fb03 a404 	mla	r4, r3, r4, sl
90028412:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028416:	d06b      	beq.n	900284f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028418:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002841c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90028420:	9303      	str	r3, [sp, #12]
90028422:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028426:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002842a:	9b07      	ldr	r3, [sp, #28]
9002842c:	42a3      	cmp	r3, r4
9002842e:	f240 809d 	bls.w	9002856c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028432:	9b06      	ldr	r3, [sp, #24]
90028434:	2b00      	cmp	r3, #0
90028436:	d039      	beq.n	900284ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028438:	782b      	ldrb	r3, [r5, #0]
9002843a:	f105 0801 	add.w	r8, r5, #1
9002843e:	f109 3bff 	add.w	fp, r9, #4294967295
90028442:	8822      	ldrh	r2, [r4, #0]
90028444:	f003 030f 	and.w	r3, r3, #15
90028448:	9804      	ldr	r0, [sp, #16]
9002844a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002844e:	9b03      	ldr	r3, [sp, #12]
90028450:	9300      	str	r3, [sp, #0]
90028452:	463b      	mov	r3, r7
90028454:	f7ff ff52 	bl	900282fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028458:	f824 0b02 	strh.w	r0, [r4], #2
9002845c:	f1bb 0f01 	cmp.w	fp, #1
90028460:	46a2      	mov	sl, r4
90028462:	f104 0404 	add.w	r4, r4, #4
90028466:	dd24      	ble.n	900284b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028468:	f898 3000 	ldrb.w	r3, [r8]
9002846c:	f1ab 0b02 	sub.w	fp, fp, #2
90028470:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028474:	091b      	lsrs	r3, r3, #4
90028476:	9804      	ldr	r0, [sp, #16]
90028478:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002847c:	9b03      	ldr	r3, [sp, #12]
9002847e:	9300      	str	r3, [sp, #0]
90028480:	463b      	mov	r3, r7
90028482:	f7ff ff3b 	bl	900282fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028486:	f824 0c04 	strh.w	r0, [r4, #-4]
9002848a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002848e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028492:	f003 030f 	and.w	r3, r3, #15
90028496:	9804      	ldr	r0, [sp, #16]
90028498:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002849c:	9b03      	ldr	r3, [sp, #12]
9002849e:	9300      	str	r3, [sp, #0]
900284a0:	463b      	mov	r3, r7
900284a2:	f7ff ff2b 	bl	900282fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900284a6:	f824 0c02 	strh.w	r0, [r4, #-2]
900284aa:	e7d7      	b.n	9002845c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900284ac:	46a8      	mov	r8, r5
900284ae:	46cb      	mov	fp, r9
900284b0:	e7d4      	b.n	9002845c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900284b2:	d10e      	bne.n	900284d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900284b4:	f898 3000 	ldrb.w	r3, [r8]
900284b8:	f8ba 2000 	ldrh.w	r2, [sl]
900284bc:	091b      	lsrs	r3, r3, #4
900284be:	9804      	ldr	r0, [sp, #16]
900284c0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900284c4:	9b03      	ldr	r3, [sp, #12]
900284c6:	9300      	str	r3, [sp, #0]
900284c8:	463b      	mov	r3, r7
900284ca:	f7ff ff17 	bl	900282fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900284ce:	f82a 0b02 	strh.w	r0, [sl], #2
900284d2:	9b08      	ldr	r3, [sp, #32]
900284d4:	9a05      	ldr	r2, [sp, #20]
900284d6:	881c      	ldrh	r4, [r3, #0]
900284d8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900284dc:	eba4 0409 	sub.w	r4, r4, r9
900284e0:	4413      	add	r3, r2
900284e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900284e4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900284e8:	fb93 f3f2 	sdiv	r3, r3, r2
900284ec:	441d      	add	r5, r3
900284ee:	e79c      	b.n	9002842a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900284f0:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900284f4:	45a3      	cmp	fp, r4
900284f6:	d939      	bls.n	9002856c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900284f8:	9b06      	ldr	r3, [sp, #24]
900284fa:	b1fb      	cbz	r3, 9002853c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900284fc:	782b      	ldrb	r3, [r5, #0]
900284fe:	1c6a      	adds	r2, r5, #1
90028500:	f109 30ff 	add.w	r0, r9, #4294967295
90028504:	3402      	adds	r4, #2
90028506:	f003 030f 	and.w	r3, r3, #15
9002850a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002850e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028512:	2801      	cmp	r0, #1
90028514:	4623      	mov	r3, r4
90028516:	f104 0404 	add.w	r4, r4, #4
9002851a:	dd12      	ble.n	90028542 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002851c:	7813      	ldrb	r3, [r2, #0]
9002851e:	3802      	subs	r0, #2
90028520:	091b      	lsrs	r3, r3, #4
90028522:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028526:	f824 3c04 	strh.w	r3, [r4, #-4]
9002852a:	f812 3b01 	ldrb.w	r3, [r2], #1
9002852e:	f003 030f 	and.w	r3, r3, #15
90028532:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028536:	f824 3c02 	strh.w	r3, [r4, #-2]
9002853a:	e7ea      	b.n	90028512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002853c:	462a      	mov	r2, r5
9002853e:	4648      	mov	r0, r9
90028540:	e7e7      	b.n	90028512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028542:	d106      	bne.n	90028552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028544:	7812      	ldrb	r2, [r2, #0]
90028546:	3302      	adds	r3, #2
90028548:	0912      	lsrs	r2, r2, #4
9002854a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002854e:	f823 2c02 	strh.w	r2, [r3, #-2]
90028552:	880c      	ldrh	r4, [r1, #0]
90028554:	9a05      	ldr	r2, [sp, #20]
90028556:	eba4 0409 	sub.w	r4, r4, r9
9002855a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002855e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028562:	4413      	add	r3, r2
90028564:	fb93 f3f8 	sdiv	r3, r3, r8
90028568:	441d      	add	r5, r3
9002856a:	e7c3      	b.n	900284f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002856c:	4b03      	ldr	r3, [pc, #12]	; (9002857c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002856e:	6818      	ldr	r0, [r3, #0]
90028570:	6803      	ldr	r3, [r0, #0]
90028572:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028574:	4798      	blx	r3
90028576:	b00f      	add	sp, #60	; 0x3c
90028578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002857c:	24039acc 	.word	0x24039acc
90028580:	24039ac6 	.word	0x24039ac6

90028584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028584:	b5f0      	push	{r4, r5, r6, r7, lr}
90028586:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002858a:	0a0f      	lsrs	r7, r1, #8
9002858c:	2dff      	cmp	r5, #255	; 0xff
9002858e:	d10c      	bne.n	900285aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028590:	2bff      	cmp	r3, #255	; 0xff
90028592:	d10a      	bne.n	900285aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028594:	0948      	lsrs	r0, r1, #5
90028596:	4b25      	ldr	r3, [pc, #148]	; (9002862c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028598:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002859c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900285a0:	403b      	ands	r3, r7
900285a2:	4318      	orrs	r0, r3
900285a4:	4308      	orrs	r0, r1
900285a6:	b280      	uxth	r0, r0
900285a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900285aa:	fb15 f503 	smulbb	r5, r5, r3
900285ae:	1214      	asrs	r4, r2, #8
900285b0:	10d6      	asrs	r6, r2, #3
900285b2:	b2ab      	uxth	r3, r5
900285b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900285b8:	00d0      	lsls	r0, r2, #3
900285ba:	f3c1 4207 	ubfx	r2, r1, #16, #8
900285be:	1c5d      	adds	r5, r3, #1
900285c0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900285c4:	b2c0      	uxtb	r0, r0
900285c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900285ca:	eb05 2513 	add.w	r5, r5, r3, lsr #8
900285ce:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900285d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900285d6:	fa1f fc85 	uxth.w	ip, r5
900285da:	43ed      	mvns	r5, r5
900285dc:	fb12 f20c 	smulbb	r2, r2, ip
900285e0:	b2eb      	uxtb	r3, r5
900285e2:	b2fd      	uxtb	r5, r7
900285e4:	fb04 2403 	mla	r4, r4, r3, r2
900285e8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900285ec:	fb15 f50c 	smulbb	r5, r5, ip
900285f0:	b2c8      	uxtb	r0, r1
900285f2:	b2a4      	uxth	r4, r4
900285f4:	fb10 f00c 	smulbb	r0, r0, ip
900285f8:	fb06 5503 	mla	r5, r6, r3, r5
900285fc:	fb02 0003 	mla	r0, r2, r3, r0
90028600:	b2ad      	uxth	r5, r5
90028602:	b283      	uxth	r3, r0
90028604:	1c60      	adds	r0, r4, #1
90028606:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002860a:	1c58      	adds	r0, r3, #1
9002860c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028610:	1c6b      	adds	r3, r5, #1
90028612:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028616:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002861a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002861e:	096d      	lsrs	r5, r5, #5
90028620:	4320      	orrs	r0, r4
90028622:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90028626:	4328      	orrs	r0, r5
90028628:	e7be      	b.n	900285a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002862a:	bf00      	nop
9002862c:	00fff800 	.word	0x00fff800

90028630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028634:	461c      	mov	r4, r3
90028636:	b08d      	sub	sp, #52	; 0x34
90028638:	460d      	mov	r5, r1
9002863a:	4616      	mov	r6, r2
9002863c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002863e:	4680      	mov	r8, r0
90028640:	6861      	ldr	r1, [r4, #4]
90028642:	aa08      	add	r2, sp, #32
90028644:	6820      	ldr	r0, [r4, #0]
90028646:	f04f 0a02 	mov.w	sl, #2
9002864a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002864e:	3604      	adds	r6, #4
90028650:	c203      	stmia	r2!, {r0, r1}
90028652:	6818      	ldr	r0, [r3, #0]
90028654:	aa0a      	add	r2, sp, #40	; 0x28
90028656:	6859      	ldr	r1, [r3, #4]
90028658:	c203      	stmia	r2!, {r0, r1}
9002865a:	a808      	add	r0, sp, #32
9002865c:	f7ef fb8e 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028660:	4621      	mov	r1, r4
90028662:	a80a      	add	r0, sp, #40	; 0x28
90028664:	f7ef fbce 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028668:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002866c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90028670:	f002 0301 	and.w	r3, r2, #1
90028674:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90028678:	9303      	str	r3, [sp, #12]
9002867a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002867e:	f003 0101 	and.w	r1, r3, #1
90028682:	9102      	str	r1, [sp, #8]
90028684:	9802      	ldr	r0, [sp, #8]
90028686:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002868a:	4403      	add	r3, r0
9002868c:	fb01 2303 	mla	r3, r1, r3, r2
90028690:	fb93 f3fa 	sdiv	r3, r3, sl
90028694:	441d      	add	r5, r3
90028696:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002869a:	441a      	add	r2, r3
9002869c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
900286a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900286a4:	4419      	add	r1, r3
900286a6:	4a3e      	ldr	r2, [pc, #248]	; (900287a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900286a8:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
900286ac:	6810      	ldr	r0, [r2, #0]
900286ae:	9205      	str	r2, [sp, #20]
900286b0:	6803      	ldr	r3, [r0, #0]
900286b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900286b4:	4798      	blx	r3
900286b6:	4b3b      	ldr	r3, [pc, #236]	; (900287a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
900286b8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
900286bc:	8819      	ldrh	r1, [r3, #0]
900286be:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
900286c2:	434f      	muls	r7, r1
900286c4:	fb01 c404 	mla	r4, r1, r4, ip
900286c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900286cc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
900286d0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
900286d4:	9204      	str	r2, [sp, #16]
900286d6:	9b04      	ldr	r3, [sp, #16]
900286d8:	429c      	cmp	r4, r3
900286da:	d258      	bcs.n	9002878e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
900286dc:	9b03      	ldr	r3, [sp, #12]
900286de:	2b00      	cmp	r3, #0
900286e0:	d034      	beq.n	9002874c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
900286e2:	782b      	ldrb	r3, [r5, #0]
900286e4:	1c6f      	adds	r7, r5, #1
900286e6:	f003 030f 	and.w	r3, r3, #15
900286ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900286ee:	0e0b      	lsrs	r3, r1, #24
900286f0:	d006      	beq.n	90028700 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
900286f2:	8822      	ldrh	r2, [r4, #0]
900286f4:	4640      	mov	r0, r8
900286f6:	9300      	str	r3, [sp, #0]
900286f8:	464b      	mov	r3, r9
900286fa:	f7ff ff43 	bl	90028584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900286fe:	8020      	strh	r0, [r4, #0]
90028700:	3402      	adds	r4, #2
90028702:	f10b 3aff 	add.w	sl, fp, #4294967295
90028706:	f1ba 0f01 	cmp.w	sl, #1
9002870a:	dd22      	ble.n	90028752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002870c:	783b      	ldrb	r3, [r7, #0]
9002870e:	091b      	lsrs	r3, r3, #4
90028710:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028714:	0e0b      	lsrs	r3, r1, #24
90028716:	d006      	beq.n	90028726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028718:	8822      	ldrh	r2, [r4, #0]
9002871a:	4640      	mov	r0, r8
9002871c:	9300      	str	r3, [sp, #0]
9002871e:	464b      	mov	r3, r9
90028720:	f7ff ff30 	bl	90028584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028724:	8020      	strh	r0, [r4, #0]
90028726:	f817 3b01 	ldrb.w	r3, [r7], #1
9002872a:	f003 030f 	and.w	r3, r3, #15
9002872e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028732:	0e0b      	lsrs	r3, r1, #24
90028734:	d006      	beq.n	90028744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028736:	8862      	ldrh	r2, [r4, #2]
90028738:	4640      	mov	r0, r8
9002873a:	9300      	str	r3, [sp, #0]
9002873c:	464b      	mov	r3, r9
9002873e:	f7ff ff21 	bl	90028584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028742:	8060      	strh	r0, [r4, #2]
90028744:	3404      	adds	r4, #4
90028746:	f1aa 0a02 	sub.w	sl, sl, #2
9002874a:	e7dc      	b.n	90028706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002874c:	462f      	mov	r7, r5
9002874e:	46da      	mov	sl, fp
90028750:	e7d9      	b.n	90028706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028752:	d10d      	bne.n	90028770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028754:	783b      	ldrb	r3, [r7, #0]
90028756:	091b      	lsrs	r3, r3, #4
90028758:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002875c:	0e0b      	lsrs	r3, r1, #24
9002875e:	d006      	beq.n	9002876e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028760:	8822      	ldrh	r2, [r4, #0]
90028762:	4640      	mov	r0, r8
90028764:	9300      	str	r3, [sp, #0]
90028766:	464b      	mov	r3, r9
90028768:	f7ff ff0c 	bl	90028584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002876c:	8020      	strh	r0, [r4, #0]
9002876e:	3402      	adds	r4, #2
90028770:	9b06      	ldr	r3, [sp, #24]
90028772:	9a02      	ldr	r2, [sp, #8]
90028774:	881b      	ldrh	r3, [r3, #0]
90028776:	eba3 030b 	sub.w	r3, r3, fp
9002877a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002877e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90028782:	4413      	add	r3, r2
90028784:	9a07      	ldr	r2, [sp, #28]
90028786:	fb93 f3f2 	sdiv	r3, r3, r2
9002878a:	441d      	add	r5, r3
9002878c:	e7a3      	b.n	900286d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002878e:	9b05      	ldr	r3, [sp, #20]
90028790:	6818      	ldr	r0, [r3, #0]
90028792:	6803      	ldr	r3, [r0, #0]
90028794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028796:	4798      	blx	r3
90028798:	b00d      	add	sp, #52	; 0x34
9002879a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002879e:	bf00      	nop
900287a0:	24039acc 	.word	0x24039acc
900287a4:	24039ac6 	.word	0x24039ac6

900287a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
900287a8:	b570      	push	{r4, r5, r6, lr}
900287aa:	1214      	asrs	r4, r2, #8
900287ac:	788d      	ldrb	r5, [r1, #2]
900287ae:	f89d 6010 	ldrb.w	r6, [sp, #16]
900287b2:	10d0      	asrs	r0, r2, #3
900287b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900287b8:	00d2      	lsls	r2, r2, #3
900287ba:	fb15 f503 	smulbb	r5, r5, r3
900287be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900287c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900287c6:	b2d2      	uxtb	r2, r2
900287c8:	fb04 5506 	mla	r5, r4, r6, r5
900287cc:	784c      	ldrb	r4, [r1, #1]
900287ce:	7809      	ldrb	r1, [r1, #0]
900287d0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
900287d4:	fb14 f403 	smulbb	r4, r4, r3
900287d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900287dc:	fb11 f303 	smulbb	r3, r1, r3
900287e0:	b2ad      	uxth	r5, r5
900287e2:	fb00 4406 	mla	r4, r0, r6, r4
900287e6:	fb02 3306 	mla	r3, r2, r6, r3
900287ea:	1c68      	adds	r0, r5, #1
900287ec:	b2a4      	uxth	r4, r4
900287ee:	b29b      	uxth	r3, r3
900287f0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
900287f4:	1c62      	adds	r2, r4, #1
900287f6:	1c58      	adds	r0, r3, #1
900287f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900287fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90028800:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028804:	0964      	lsrs	r4, r4, #5
90028806:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002880a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002880e:	4328      	orrs	r0, r5
90028810:	4320      	orrs	r0, r4
90028812:	bd70      	pop	{r4, r5, r6, pc}

90028814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028818:	b08f      	sub	sp, #60	; 0x3c
9002881a:	461c      	mov	r4, r3
9002881c:	4682      	mov	sl, r0
9002881e:	460e      	mov	r6, r1
90028820:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028824:	4615      	mov	r5, r2
90028826:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028828:	2f00      	cmp	r7, #0
9002882a:	f000 8141 	beq.w	90028ab0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002882e:	6820      	ldr	r0, [r4, #0]
90028830:	aa0a      	add	r2, sp, #40	; 0x28
90028832:	6861      	ldr	r1, [r4, #4]
90028834:	f04f 0802 	mov.w	r8, #2
90028838:	3504      	adds	r5, #4
9002883a:	c203      	stmia	r2!, {r0, r1}
9002883c:	6818      	ldr	r0, [r3, #0]
9002883e:	aa0c      	add	r2, sp, #48	; 0x30
90028840:	6859      	ldr	r1, [r3, #4]
90028842:	c203      	stmia	r2!, {r0, r1}
90028844:	a80a      	add	r0, sp, #40	; 0x28
90028846:	f7ef fa99 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002884a:	4621      	mov	r1, r4
9002884c:	a80c      	add	r0, sp, #48	; 0x30
9002884e:	f7ef fad9 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028852:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90028856:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
9002885a:	f002 0301 	and.w	r3, r2, #1
9002885e:	9306      	str	r3, [sp, #24]
90028860:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028864:	f003 0101 	and.w	r1, r3, #1
90028868:	9105      	str	r1, [sp, #20]
9002886a:	9805      	ldr	r0, [sp, #20]
9002886c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90028870:	4403      	add	r3, r0
90028872:	fb01 2303 	mla	r3, r1, r3, r2
90028876:	fb93 f3f8 	sdiv	r3, r3, r8
9002887a:	441e      	add	r6, r3
9002887c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90028880:	441a      	add	r2, r3
90028882:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90028886:	4419      	add	r1, r3
90028888:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002888c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90028890:	9303      	str	r3, [sp, #12]
90028892:	4b89      	ldr	r3, [pc, #548]	; (90028ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028894:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90028898:	6818      	ldr	r0, [r3, #0]
9002889a:	6803      	ldr	r3, [r0, #0]
9002889c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002889e:	4798      	blx	r3
900288a0:	4a86      	ldr	r2, [pc, #536]	; (90028abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900288a2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
900288a6:	2fff      	cmp	r7, #255	; 0xff
900288a8:	8813      	ldrh	r3, [r2, #0]
900288aa:	4694      	mov	ip, r2
900288ac:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
900288b0:	fb03 9404 	mla	r4, r3, r4, r9
900288b4:	fb03 f30b 	mul.w	r3, r3, fp
900288b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900288bc:	d071      	beq.n	900289a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
900288be:	43f9      	mvns	r1, r7
900288c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900288c4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900288c8:	b2c9      	uxtb	r1, r1
900288ca:	e9cd 3207 	strd	r3, r2, [sp, #28]
900288ce:	9104      	str	r1, [sp, #16]
900288d0:	9b07      	ldr	r3, [sp, #28]
900288d2:	42a3      	cmp	r3, r4
900288d4:	f240 80e7 	bls.w	90028aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900288d8:	9b06      	ldr	r3, [sp, #24]
900288da:	2b00      	cmp	r3, #0
900288dc:	d03d      	beq.n	9002895a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900288de:	7831      	ldrb	r1, [r6, #0]
900288e0:	4650      	mov	r0, sl
900288e2:	9b04      	ldr	r3, [sp, #16]
900288e4:	f106 0801 	add.w	r8, r6, #1
900288e8:	f001 010f 	and.w	r1, r1, #15
900288ec:	8822      	ldrh	r2, [r4, #0]
900288ee:	9300      	str	r3, [sp, #0]
900288f0:	463b      	mov	r3, r7
900288f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900288f6:	4429      	add	r1, r5
900288f8:	f7ff ff56 	bl	900287a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900288fc:	9b03      	ldr	r3, [sp, #12]
900288fe:	f824 0b02 	strh.w	r0, [r4], #2
90028902:	f103 3bff 	add.w	fp, r3, #4294967295
90028906:	f1bb 0f01 	cmp.w	fp, #1
9002890a:	46a1      	mov	r9, r4
9002890c:	f104 0404 	add.w	r4, r4, #4
90028910:	dd27      	ble.n	90028962 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90028912:	f898 1000 	ldrb.w	r1, [r8]
90028916:	4650      	mov	r0, sl
90028918:	9b04      	ldr	r3, [sp, #16]
9002891a:	f1ab 0b02 	sub.w	fp, fp, #2
9002891e:	0909      	lsrs	r1, r1, #4
90028920:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028924:	9300      	str	r3, [sp, #0]
90028926:	463b      	mov	r3, r7
90028928:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002892c:	4429      	add	r1, r5
9002892e:	f7ff ff3b 	bl	900287a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028932:	f824 0c04 	strh.w	r0, [r4, #-4]
90028936:	f818 1b01 	ldrb.w	r1, [r8], #1
9002893a:	4650      	mov	r0, sl
9002893c:	9b04      	ldr	r3, [sp, #16]
9002893e:	f001 010f 	and.w	r1, r1, #15
90028942:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028946:	9300      	str	r3, [sp, #0]
90028948:	463b      	mov	r3, r7
9002894a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002894e:	4429      	add	r1, r5
90028950:	f7ff ff2a 	bl	900287a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028954:	f824 0c02 	strh.w	r0, [r4, #-2]
90028958:	e7d5      	b.n	90028906 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002895a:	46b0      	mov	r8, r6
9002895c:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028960:	e7d1      	b.n	90028906 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028962:	d10f      	bne.n	90028984 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90028964:	f898 1000 	ldrb.w	r1, [r8]
90028968:	4650      	mov	r0, sl
9002896a:	9b04      	ldr	r3, [sp, #16]
9002896c:	0909      	lsrs	r1, r1, #4
9002896e:	f8b9 2000 	ldrh.w	r2, [r9]
90028972:	9300      	str	r3, [sp, #0]
90028974:	463b      	mov	r3, r7
90028976:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002897a:	4429      	add	r1, r5
9002897c:	f7ff ff14 	bl	900287a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028980:	f829 0b02 	strh.w	r0, [r9], #2
90028984:	9b08      	ldr	r3, [sp, #32]
90028986:	9a05      	ldr	r2, [sp, #20]
90028988:	881c      	ldrh	r4, [r3, #0]
9002898a:	9b03      	ldr	r3, [sp, #12]
9002898c:	1ae4      	subs	r4, r4, r3
9002898e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028992:	4413      	add	r3, r2
90028994:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028996:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002899a:	fb93 f3f2 	sdiv	r3, r3, r2
9002899e:	441e      	add	r6, r3
900289a0:	e796      	b.n	900288d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
900289a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900289a6:	4f46      	ldr	r7, [pc, #280]	; (90028ac0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
900289a8:	42a3      	cmp	r3, r4
900289aa:	d97c      	bls.n	90028aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900289ac:	9a06      	ldr	r2, [sp, #24]
900289ae:	2a00      	cmp	r2, #0
900289b0:	d054      	beq.n	90028a5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900289b2:	7830      	ldrb	r0, [r6, #0]
900289b4:	1c71      	adds	r1, r6, #1
900289b6:	f000 000f 	and.w	r0, r0, #15
900289ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900289be:	eb05 0e00 	add.w	lr, r5, r0
900289c2:	5c28      	ldrb	r0, [r5, r0]
900289c4:	f89e 2002 	ldrb.w	r2, [lr, #2]
900289c8:	f89e e001 	ldrb.w	lr, [lr, #1]
900289cc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900289d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900289d4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900289d8:	ea42 020e 	orr.w	r2, r2, lr
900289dc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
900289e0:	f824 2b02 	strh.w	r2, [r4], #2
900289e4:	9a03      	ldr	r2, [sp, #12]
900289e6:	f102 3eff 	add.w	lr, r2, #4294967295
900289ea:	f1be 0f01 	cmp.w	lr, #1
900289ee:	4620      	mov	r0, r4
900289f0:	f104 0404 	add.w	r4, r4, #4
900289f4:	dd36      	ble.n	90028a64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
900289f6:	7808      	ldrb	r0, [r1, #0]
900289f8:	f1ae 0e02 	sub.w	lr, lr, #2
900289fc:	0900      	lsrs	r0, r0, #4
900289fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028a02:	eb05 0a00 	add.w	sl, r5, r0
90028a06:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028a0a:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028a0e:	00d2      	lsls	r2, r2, #3
90028a10:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028a14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028a18:	ea49 0202 	orr.w	r2, r9, r2
90028a1c:	f815 9000 	ldrb.w	r9, [r5, r0]
90028a20:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028a24:	f824 2c04 	strh.w	r2, [r4, #-4]
90028a28:	f811 0b01 	ldrb.w	r0, [r1], #1
90028a2c:	f000 000f 	and.w	r0, r0, #15
90028a30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028a34:	eb05 0a00 	add.w	sl, r5, r0
90028a38:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028a3c:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028a40:	00d2      	lsls	r2, r2, #3
90028a42:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028a46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028a4a:	ea49 0202 	orr.w	r2, r9, r2
90028a4e:	f815 9000 	ldrb.w	r9, [r5, r0]
90028a52:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028a56:	f824 2c02 	strh.w	r2, [r4, #-2]
90028a5a:	e7c6      	b.n	900289ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028a5c:	4631      	mov	r1, r6
90028a5e:	f8dd e00c 	ldr.w	lr, [sp, #12]
90028a62:	e7c2      	b.n	900289ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028a64:	d111      	bne.n	90028a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90028a66:	7809      	ldrb	r1, [r1, #0]
90028a68:	0909      	lsrs	r1, r1, #4
90028a6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028a6e:	186c      	adds	r4, r5, r1
90028a70:	5c69      	ldrb	r1, [r5, r1]
90028a72:	78a2      	ldrb	r2, [r4, #2]
90028a74:	7864      	ldrb	r4, [r4, #1]
90028a76:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028a7a:	00e4      	lsls	r4, r4, #3
90028a7c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028a80:	4322      	orrs	r2, r4
90028a82:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90028a86:	f820 2b02 	strh.w	r2, [r0], #2
90028a8a:	9a03      	ldr	r2, [sp, #12]
90028a8c:	f8bc 4000 	ldrh.w	r4, [ip]
90028a90:	9905      	ldr	r1, [sp, #20]
90028a92:	1aa4      	subs	r4, r4, r2
90028a94:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90028a98:	440a      	add	r2, r1
90028a9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028a9e:	fb92 f2f8 	sdiv	r2, r2, r8
90028aa2:	4416      	add	r6, r2
90028aa4:	e780      	b.n	900289a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90028aa6:	4b04      	ldr	r3, [pc, #16]	; (90028ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028aa8:	6818      	ldr	r0, [r3, #0]
90028aaa:	6803      	ldr	r3, [r0, #0]
90028aac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028aae:	4798      	blx	r3
90028ab0:	b00f      	add	sp, #60	; 0x3c
90028ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028ab6:	bf00      	nop
90028ab8:	24039acc 	.word	0x24039acc
90028abc:	24039ac6 	.word	0x24039ac6
90028ac0:	fffff800 	.word	0xfffff800

90028ac4 <CRC_Lock>:
90028ac4:	4a20      	ldr	r2, [pc, #128]	; (90028b48 <CRC_Lock+0x84>)
90028ac6:	b530      	push	{r4, r5, lr}
90028ac8:	6813      	ldr	r3, [r2, #0]
90028aca:	f64f 74f0 	movw	r4, #65520	; 0xfff0
90028ace:	f24c 2540 	movw	r5, #49728	; 0xc240
90028ad2:	f023 0301 	bic.w	r3, r3, #1
90028ad6:	6013      	str	r3, [r2, #0]
90028ad8:	4b1c      	ldr	r3, [pc, #112]	; (90028b4c <CRC_Lock+0x88>)
90028ada:	681a      	ldr	r2, [r3, #0]
90028adc:	4022      	ands	r2, r4
90028ade:	42aa      	cmp	r2, r5
90028ae0:	d005      	beq.n	90028aee <CRC_Lock+0x2a>
90028ae2:	681b      	ldr	r3, [r3, #0]
90028ae4:	f24c 2270 	movw	r2, #49776	; 0xc270
90028ae8:	4023      	ands	r3, r4
90028aea:	4293      	cmp	r3, r2
90028aec:	d124      	bne.n	90028b38 <CRC_Lock+0x74>
90028aee:	4b18      	ldr	r3, [pc, #96]	; (90028b50 <CRC_Lock+0x8c>)
90028af0:	681b      	ldr	r3, [r3, #0]
90028af2:	bb0b      	cbnz	r3, 90028b38 <CRC_Lock+0x74>
90028af4:	4b17      	ldr	r3, [pc, #92]	; (90028b54 <CRC_Lock+0x90>)
90028af6:	681a      	ldr	r2, [r3, #0]
90028af8:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028afc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90028b00:	d00d      	beq.n	90028b1e <CRC_Lock+0x5a>
90028b02:	681a      	ldr	r2, [r3, #0]
90028b04:	f240 4483 	movw	r4, #1155	; 0x483
90028b08:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028b0c:	42a2      	cmp	r2, r4
90028b0e:	d006      	beq.n	90028b1e <CRC_Lock+0x5a>
90028b10:	681b      	ldr	r3, [r3, #0]
90028b12:	f240 4285 	movw	r2, #1157	; 0x485
90028b16:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028b1a:	4293      	cmp	r3, r2
90028b1c:	d10c      	bne.n	90028b38 <CRC_Lock+0x74>
90028b1e:	4b0e      	ldr	r3, [pc, #56]	; (90028b58 <CRC_Lock+0x94>)
90028b20:	2201      	movs	r2, #1
90028b22:	601a      	str	r2, [r3, #0]
90028b24:	681a      	ldr	r2, [r3, #0]
90028b26:	2a00      	cmp	r2, #0
90028b28:	d1fc      	bne.n	90028b24 <CRC_Lock+0x60>
90028b2a:	4b0c      	ldr	r3, [pc, #48]	; (90028b5c <CRC_Lock+0x98>)
90028b2c:	6018      	str	r0, [r3, #0]
90028b2e:	6818      	ldr	r0, [r3, #0]
90028b30:	1a43      	subs	r3, r0, r1
90028b32:	4258      	negs	r0, r3
90028b34:	4158      	adcs	r0, r3
90028b36:	bd30      	pop	{r4, r5, pc}
90028b38:	4b09      	ldr	r3, [pc, #36]	; (90028b60 <CRC_Lock+0x9c>)
90028b3a:	2201      	movs	r2, #1
90028b3c:	601a      	str	r2, [r3, #0]
90028b3e:	681a      	ldr	r2, [r3, #0]
90028b40:	2a00      	cmp	r2, #0
90028b42:	d1fc      	bne.n	90028b3e <CRC_Lock+0x7a>
90028b44:	4b07      	ldr	r3, [pc, #28]	; (90028b64 <CRC_Lock+0xa0>)
90028b46:	e7f1      	b.n	90028b2c <CRC_Lock+0x68>
90028b48:	e0002000 	.word	0xe0002000
90028b4c:	e000ed00 	.word	0xe000ed00
90028b50:	e0042000 	.word	0xe0042000
90028b54:	5c001000 	.word	0x5c001000
90028b58:	58024c08 	.word	0x58024c08
90028b5c:	58024c00 	.word	0x58024c00
90028b60:	40023008 	.word	0x40023008
90028b64:	40023000 	.word	0x40023000

90028b68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028b68:	6101      	str	r1, [r0, #16]
90028b6a:	4770      	bx	lr

90028b6c <_ZN8touchgfx8Gestures4tickEv>:
90028b6c:	7b83      	ldrb	r3, [r0, #14]
90028b6e:	b14b      	cbz	r3, 90028b84 <_ZN8touchgfx8Gestures4tickEv+0x18>
90028b70:	8903      	ldrh	r3, [r0, #8]
90028b72:	3301      	adds	r3, #1
90028b74:	b29b      	uxth	r3, r3
90028b76:	2b07      	cmp	r3, #7
90028b78:	8103      	strh	r3, [r0, #8]
90028b7a:	bf81      	itttt	hi
90028b7c:	2300      	movhi	r3, #0
90028b7e:	8143      	strhhi	r3, [r0, #10]
90028b80:	8183      	strhhi	r3, [r0, #12]
90028b82:	7383      	strbhi	r3, [r0, #14]
90028b84:	4770      	bx	lr
	...

90028b88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028b88:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028b8c:	4698      	mov	r8, r3
90028b8e:	8883      	ldrh	r3, [r0, #4]
90028b90:	4604      	mov	r4, r0
90028b92:	4617      	mov	r7, r2
90028b94:	f8ad 3006 	strh.w	r3, [sp, #6]
90028b98:	eba8 0303 	sub.w	r3, r8, r3
90028b9c:	4a19      	ldr	r2, [pc, #100]	; (90028c04 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028b9e:	460e      	mov	r6, r1
90028ba0:	b21b      	sxth	r3, r3
90028ba2:	88c1      	ldrh	r1, [r0, #6]
90028ba4:	9200      	str	r2, [sp, #0]
90028ba6:	2000      	movs	r0, #0
90028ba8:	2b00      	cmp	r3, #0
90028baa:	8aa2      	ldrh	r2, [r4, #20]
90028bac:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90028bb0:	bfb8      	it	lt
90028bb2:	425b      	neglt	r3, r3
90028bb4:	f88d 0004 	strb.w	r0, [sp, #4]
90028bb8:	f8ad 1008 	strh.w	r1, [sp, #8]
90028bbc:	b21b      	sxth	r3, r3
90028bbe:	f8ad 800a 	strh.w	r8, [sp, #10]
90028bc2:	f8ad 500c 	strh.w	r5, [sp, #12]
90028bc6:	4293      	cmp	r3, r2
90028bc8:	dc07      	bgt.n	90028bda <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028bca:	1a69      	subs	r1, r5, r1
90028bcc:	b209      	sxth	r1, r1
90028bce:	2900      	cmp	r1, #0
90028bd0:	bfb8      	it	lt
90028bd2:	4249      	neglt	r1, r1
90028bd4:	b209      	sxth	r1, r1
90028bd6:	428a      	cmp	r2, r1
90028bd8:	da10      	bge.n	90028bfc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90028bda:	6920      	ldr	r0, [r4, #16]
90028bdc:	4669      	mov	r1, sp
90028bde:	eba8 0606 	sub.w	r6, r8, r6
90028be2:	1bef      	subs	r7, r5, r7
90028be4:	6803      	ldr	r3, [r0, #0]
90028be6:	685b      	ldr	r3, [r3, #4]
90028be8:	4798      	blx	r3
90028bea:	2300      	movs	r3, #0
90028bec:	2001      	movs	r0, #1
90028bee:	8166      	strh	r6, [r4, #10]
90028bf0:	8123      	strh	r3, [r4, #8]
90028bf2:	81a7      	strh	r7, [r4, #12]
90028bf4:	f8a4 8004 	strh.w	r8, [r4, #4]
90028bf8:	80e5      	strh	r5, [r4, #6]
90028bfa:	73a0      	strb	r0, [r4, #14]
90028bfc:	b004      	add	sp, #16
90028bfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028c02:	bf00      	nop
90028c04:	9002db8c 	.word	0x9002db8c

90028c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90028c08:	b5f0      	push	{r4, r5, r6, r7, lr}
90028c0a:	461e      	mov	r6, r3
90028c0c:	1e4b      	subs	r3, r1, #1
90028c0e:	b085      	sub	sp, #20
90028c10:	4604      	mov	r4, r0
90028c12:	2b01      	cmp	r3, #1
90028c14:	460d      	mov	r5, r1
90028c16:	4617      	mov	r7, r2
90028c18:	d84b      	bhi.n	90028cb2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90028c1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90028c1e:	1cd3      	adds	r3, r2, #3
90028c20:	b29b      	uxth	r3, r3
90028c22:	2b06      	cmp	r3, #6
90028c24:	d916      	bls.n	90028c54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90028c26:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90028cc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028c2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028c2e:	f8cd c004 	str.w	ip, [sp, #4]
90028c32:	f04f 0c00 	mov.w	ip, #0
90028c36:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028c3a:	6900      	ldr	r0, [r0, #16]
90028c3c:	f8ad 100c 	strh.w	r1, [sp, #12]
90028c40:	a901      	add	r1, sp, #4
90028c42:	f88d c008 	strb.w	ip, [sp, #8]
90028c46:	f8ad 200a 	strh.w	r2, [sp, #10]
90028c4a:	f8ad 300e 	strh.w	r3, [sp, #14]
90028c4e:	6803      	ldr	r3, [r0, #0]
90028c50:	689b      	ldr	r3, [r3, #8]
90028c52:	4798      	blx	r3
90028c54:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028c58:	1cd3      	adds	r3, r2, #3
90028c5a:	b29b      	uxth	r3, r3
90028c5c:	2b06      	cmp	r3, #6
90028c5e:	d916      	bls.n	90028c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028c60:	f8df c064 	ldr.w	ip, [pc, #100]	; 90028cc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028c64:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028c68:	f8cd c004 	str.w	ip, [sp, #4]
90028c6c:	f04f 0c01 	mov.w	ip, #1
90028c70:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028c74:	6920      	ldr	r0, [r4, #16]
90028c76:	f8ad 100c 	strh.w	r1, [sp, #12]
90028c7a:	a901      	add	r1, sp, #4
90028c7c:	f88d c008 	strb.w	ip, [sp, #8]
90028c80:	f8ad 200a 	strh.w	r2, [sp, #10]
90028c84:	f8ad 300e 	strh.w	r3, [sp, #14]
90028c88:	6803      	ldr	r3, [r0, #0]
90028c8a:	689b      	ldr	r3, [r3, #8]
90028c8c:	4798      	blx	r3
90028c8e:	4b0d      	ldr	r3, [pc, #52]	; (90028cc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028c90:	a901      	add	r1, sp, #4
90028c92:	6920      	ldr	r0, [r4, #16]
90028c94:	9301      	str	r3, [sp, #4]
90028c96:	2300      	movs	r3, #0
90028c98:	f88d 5008 	strb.w	r5, [sp, #8]
90028c9c:	f8ad 700a 	strh.w	r7, [sp, #10]
90028ca0:	f8ad 600c 	strh.w	r6, [sp, #12]
90028ca4:	f8ad 300e 	strh.w	r3, [sp, #14]
90028ca8:	6803      	ldr	r3, [r0, #0]
90028caa:	681b      	ldr	r3, [r3, #0]
90028cac:	4798      	blx	r3
90028cae:	b005      	add	sp, #20
90028cb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028cb2:	2900      	cmp	r1, #0
90028cb4:	d1eb      	bne.n	90028c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028cb6:	80a2      	strh	r2, [r4, #4]
90028cb8:	80c6      	strh	r6, [r0, #6]
90028cba:	60a1      	str	r1, [r4, #8]
90028cbc:	81a1      	strh	r1, [r4, #12]
90028cbe:	73a1      	strb	r1, [r4, #14]
90028cc0:	e7e5      	b.n	90028c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028cc2:	bf00      	nop
90028cc4:	9002db78 	.word	0x9002db78
90028cc8:	9002dba0 	.word	0x9002dba0

90028ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90028ccc:	10c9      	asrs	r1, r1, #3
90028cce:	2900      	cmp	r1, #0
90028cd0:	bfb8      	it	lt
90028cd2:	4249      	neglt	r1, r1
90028cd4:	2801      	cmp	r0, #1
90028cd6:	d108      	bne.n	90028cea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028cd8:	f3c1 0008 	ubfx	r0, r1, #0, #9
90028cdc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90028ce0:	4601      	mov	r1, r0
90028ce2:	dd02      	ble.n	90028cea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028ce4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90028ce8:	4770      	bx	lr
90028cea:	29ff      	cmp	r1, #255	; 0xff
90028cec:	bfa8      	it	ge
90028cee:	21ff      	movge	r1, #255	; 0xff
90028cf0:	4608      	mov	r0, r1
90028cf2:	4770      	bx	lr

90028cf4 <_ZN8touchgfx10Rasterizer6lineToEii>:
90028cf4:	b410      	push	{r4}
90028cf6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90028cfa:	429c      	cmp	r4, r3
90028cfc:	d803      	bhi.n	90028d06 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90028cfe:	f85d 4b04 	ldr.w	r4, [sp], #4
90028d02:	f7ed bb45 	b.w	90016390 <_ZN8touchgfx7Outline6lineToEii>
90028d06:	f85d 4b04 	ldr.w	r4, [sp], #4
90028d0a:	4770      	bx	lr

90028d0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90028d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028d10:	b08b      	sub	sp, #44	; 0x2c
90028d12:	4606      	mov	r6, r0
90028d14:	468a      	mov	sl, r1
90028d16:	e9cd 2306 	strd	r2, r3, [sp, #24]
90028d1a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90028d1e:	9308      	str	r3, [sp, #32]
90028d20:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90028d24:	9309      	str	r3, [sp, #36]	; 0x24
90028d26:	f7ed fc9e 	bl	90016666 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90028d2a:	68b5      	ldr	r5, [r6, #8]
90028d2c:	4604      	mov	r4, r0
90028d2e:	2d00      	cmp	r5, #0
90028d30:	d044      	beq.n	90028dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028d32:	6873      	ldr	r3, [r6, #4]
90028d34:	42ab      	cmp	r3, r5
90028d36:	d33d      	bcc.n	90028db4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028d38:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028d3c:	f04f 0800 	mov.w	r8, #0
90028d40:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90028d44:	eb02 0b03 	add.w	fp, r2, r3
90028d48:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028d4c:	fb02 1203 	mla	r2, r2, r3, r1
90028d50:	9205      	str	r2, [sp, #20]
90028d52:	1e6a      	subs	r2, r5, #1
90028d54:	9204      	str	r2, [sp, #16]
90028d56:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028d5a:	f9b4 7000 	ldrsh.w	r7, [r4]
90028d5e:	454b      	cmp	r3, r9
90028d60:	463a      	mov	r2, r7
90028d62:	d008      	beq.n	90028d76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90028d64:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90028d68:	eb03 0b09 	add.w	fp, r3, r9
90028d6c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028d70:	fb03 1309 	mla	r3, r3, r9, r1
90028d74:	9305      	str	r3, [sp, #20]
90028d76:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028d7a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028d7e:	4498      	add	r8, r3
90028d80:	9b04      	ldr	r3, [sp, #16]
90028d82:	3b01      	subs	r3, #1
90028d84:	9304      	str	r3, [sp, #16]
90028d86:	9b04      	ldr	r3, [sp, #16]
90028d88:	3301      	adds	r3, #1
90028d8a:	d015      	beq.n	90028db8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028d8c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028d90:	42bb      	cmp	r3, r7
90028d92:	d117      	bne.n	90028dc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90028d94:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028d98:	9b04      	ldr	r3, [sp, #16]
90028d9a:	4548      	cmp	r0, r9
90028d9c:	f103 33ff 	add.w	r3, r3, #4294967295
90028da0:	d17d      	bne.n	90028e9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90028da2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90028da6:	4401      	add	r1, r0
90028da8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028dac:	4480      	add	r8, r0
90028dae:	e7e9      	b.n	90028d84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028db0:	461f      	mov	r7, r3
90028db2:	e042      	b.n	90028e3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90028db4:	2000      	movs	r0, #0
90028db6:	e002      	b.n	90028dbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028db8:	2900      	cmp	r1, #0
90028dba:	d16d      	bne.n	90028e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028dbc:	2001      	movs	r0, #1
90028dbe:	b00b      	add	sp, #44	; 0x2c
90028dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028dc4:	b379      	cbz	r1, 90028e26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90028dc6:	2f00      	cmp	r7, #0
90028dc8:	db29      	blt.n	90028e1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028dca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90028dce:	42bb      	cmp	r3, r7
90028dd0:	dd25      	ble.n	90028e1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028dd2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90028dd6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90028dda:	f7ff ff77 	bl	90028ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90028dde:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028de0:	fb10 f003 	smulbb	r0, r0, r3
90028de4:	b280      	uxth	r0, r0
90028de6:	1c41      	adds	r1, r0, #1
90028de8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028dec:	1209      	asrs	r1, r1, #8
90028dee:	f011 0fff 	tst.w	r1, #255	; 0xff
90028df2:	d014      	beq.n	90028e1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028df4:	b2c9      	uxtb	r1, r1
90028df6:	9808      	ldr	r0, [sp, #32]
90028df8:	b2ba      	uxth	r2, r7
90028dfa:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90028dfc:	9102      	str	r1, [sp, #8]
90028dfe:	2101      	movs	r1, #1
90028e00:	4413      	add	r3, r2
90028e02:	4402      	add	r2, r0
90028e04:	9101      	str	r1, [sp, #4]
90028e06:	fa0f f18b 	sxth.w	r1, fp
90028e0a:	f8da 0000 	ldr.w	r0, [sl]
90028e0e:	b21b      	sxth	r3, r3
90028e10:	9100      	str	r1, [sp, #0]
90028e12:	b212      	sxth	r2, r2
90028e14:	6941      	ldr	r1, [r0, #20]
90028e16:	4650      	mov	r0, sl
90028e18:	460d      	mov	r5, r1
90028e1a:	9905      	ldr	r1, [sp, #20]
90028e1c:	47a8      	blx	r5
90028e1e:	9b04      	ldr	r3, [sp, #16]
90028e20:	1c7a      	adds	r2, r7, #1
90028e22:	3301      	adds	r3, #1
90028e24:	d0ca      	beq.n	90028dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028e26:	f9b4 7000 	ldrsh.w	r7, [r4]
90028e2a:	1abb      	subs	r3, r7, r2
90028e2c:	2b00      	cmp	r3, #0
90028e2e:	dd31      	ble.n	90028e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028e30:	2a00      	cmp	r2, #0
90028e32:	dabd      	bge.n	90028db0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90028e34:	2f00      	cmp	r7, #0
90028e36:	dd2d      	ble.n	90028e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028e38:	2200      	movs	r2, #0
90028e3a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90028e3e:	19d1      	adds	r1, r2, r7
90028e40:	4299      	cmp	r1, r3
90028e42:	db02      	blt.n	90028e4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90028e44:	1a9f      	subs	r7, r3, r2
90028e46:	2f00      	cmp	r7, #0
90028e48:	dd24      	ble.n	90028e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028e4a:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028e4e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90028e52:	f7ff ff3b 	bl	90028ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90028e56:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028e58:	fb10 f003 	smulbb	r0, r0, r3
90028e5c:	b280      	uxth	r0, r0
90028e5e:	1c41      	adds	r1, r0, #1
90028e60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028e64:	1209      	asrs	r1, r1, #8
90028e66:	f011 0fff 	tst.w	r1, #255	; 0xff
90028e6a:	d013      	beq.n	90028e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028e6c:	b292      	uxth	r2, r2
90028e6e:	9808      	ldr	r0, [sp, #32]
90028e70:	b2c9      	uxtb	r1, r1
90028e72:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90028e74:	b23f      	sxth	r7, r7
90028e76:	4413      	add	r3, r2
90028e78:	9102      	str	r1, [sp, #8]
90028e7a:	4402      	add	r2, r0
90028e7c:	fa0f f18b 	sxth.w	r1, fp
90028e80:	f8da 0000 	ldr.w	r0, [sl]
90028e84:	b21b      	sxth	r3, r3
90028e86:	9100      	str	r1, [sp, #0]
90028e88:	b212      	sxth	r2, r2
90028e8a:	9701      	str	r7, [sp, #4]
90028e8c:	9905      	ldr	r1, [sp, #20]
90028e8e:	6947      	ldr	r7, [r0, #20]
90028e90:	4650      	mov	r0, sl
90028e92:	47b8      	blx	r7
90028e94:	464b      	mov	r3, r9
90028e96:	e75e      	b.n	90028d56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028e98:	2f00      	cmp	r7, #0
90028e9a:	da96      	bge.n	90028dca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028e9c:	e78e      	b.n	90028dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028e9e:	2900      	cmp	r1, #0
90028ea0:	d0f8      	beq.n	90028e94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028ea2:	e790      	b.n	90028dc6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90028ea4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90028ea4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90028ea8:	4b4a      	ldr	r3, [pc, #296]	; (90028fd4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90028eaa:	2500      	movs	r5, #0
90028eac:	f100 0620 	add.w	r6, r0, #32
90028eb0:	4604      	mov	r4, r0
90028eb2:	4690      	mov	r8, r2
90028eb4:	f100 0718 	add.w	r7, r0, #24
90028eb8:	e9c0 3100 	strd	r3, r1, [r0]
90028ebc:	e9c0 5502 	strd	r5, r5, [r0, #8]
90028ec0:	e9c0 5504 	strd	r5, r5, [r0, #16]
90028ec4:	e9c0 5506 	strd	r5, r5, [r0, #24]
90028ec8:	4630      	mov	r0, r6
90028eca:	f7ec fda7 	bl	90015a1c <_ZN8touchgfx7OutlineC1Ev>
90028ece:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
90028ed2:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90028ed6:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90028eda:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
90028ede:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
90028ee2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
90028ee6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
90028eea:	f8d4 c004 	ldr.w	ip, [r4, #4]
90028eee:	9500      	str	r5, [sp, #0]
90028ef0:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90028ef4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
90028ef8:	f9b8 2000 	ldrsh.w	r2, [r8]
90028efc:	f8b8 0004 	ldrh.w	r0, [r8, #4]
90028f00:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
90028f04:	4410      	add	r0, r2
90028f06:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
90028f0a:	b280      	uxth	r0, r0
90028f0c:	fa0f fa80 	sxth.w	sl, r0
90028f10:	45aa      	cmp	sl, r5
90028f12:	dd5c      	ble.n	90028fce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90028f14:	4591      	cmp	r9, r2
90028f16:	dd5a      	ble.n	90028fce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90028f18:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
90028f1c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90028f20:	440b      	add	r3, r1
90028f22:	b29b      	uxth	r3, r3
90028f24:	b21d      	sxth	r5, r3
90028f26:	2d00      	cmp	r5, #0
90028f28:	dd51      	ble.n	90028fce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90028f2a:	458e      	cmp	lr, r1
90028f2c:	dd4f      	ble.n	90028fce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90028f2e:	45d1      	cmp	r9, sl
90028f30:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90028f34:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90028f38:	bfb8      	it	lt
90028f3a:	fa1f f089 	uxthlt.w	r0, r9
90028f3e:	45ae      	cmp	lr, r5
90028f40:	f8ad 2000 	strh.w	r2, [sp]
90028f44:	bfb8      	it	lt
90028f46:	fa1f f38e 	uxthlt.w	r3, lr
90028f4a:	1a80      	subs	r0, r0, r2
90028f4c:	f8ad 1002 	strh.w	r1, [sp, #2]
90028f50:	1a5b      	subs	r3, r3, r1
90028f52:	f8ad 0004 	strh.w	r0, [sp, #4]
90028f56:	f8ad 3006 	strh.w	r3, [sp, #6]
90028f5a:	466d      	mov	r5, sp
90028f5c:	e895 0003 	ldmia.w	r5, {r0, r1}
90028f60:	e887 0003 	stmia.w	r7, {r0, r1}
90028f64:	f8dc 3000 	ldr.w	r3, [ip]
90028f68:	4660      	mov	r0, ip
90028f6a:	4639      	mov	r1, r7
90028f6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028f6e:	4798      	blx	r3
90028f70:	6861      	ldr	r1, [r4, #4]
90028f72:	4628      	mov	r0, r5
90028f74:	3104      	adds	r1, #4
90028f76:	f7ee ff45 	bl	90017e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028f7a:	4638      	mov	r0, r7
90028f7c:	f7ee fefe 	bl	90017d7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028f80:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028f84:	f8bd 2000 	ldrh.w	r2, [sp]
90028f88:	4630      	mov	r0, r6
90028f8a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
90028f8e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
90028f92:	f7ec fd27 	bl	900159e4 <_ZN8touchgfx7Outline5resetEv>
90028f96:	f9bd 3000 	ldrsh.w	r3, [sp]
90028f9a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
90028f9e:	4620      	mov	r0, r4
90028fa0:	015b      	lsls	r3, r3, #5
90028fa2:	60a3      	str	r3, [r4, #8]
90028fa4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028fa8:	015b      	lsls	r3, r3, #5
90028faa:	60e3      	str	r3, [r4, #12]
90028fac:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90028fb0:	015b      	lsls	r3, r3, #5
90028fb2:	6123      	str	r3, [r4, #16]
90028fb4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90028fb8:	015b      	lsls	r3, r3, #5
90028fba:	6163      	str	r3, [r4, #20]
90028fbc:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
90028fc0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90028fc4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90028fc8:	b002      	add	sp, #8
90028fca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90028fce:	2300      	movs	r3, #0
90028fd0:	9301      	str	r3, [sp, #4]
90028fd2:	e7c2      	b.n	90028f5a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90028fd4:	9002dec4 	.word	0x9002dec4

90028fd8 <_ZN8touchgfx6Canvas5closeEv>:
90028fd8:	b538      	push	{r3, r4, r5, lr}
90028fda:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90028fde:	4604      	mov	r4, r0
90028fe0:	b193      	cbz	r3, 90029008 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028fe2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
90028fe6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
90028fea:	4213      	tst	r3, r2
90028fec:	d10c      	bne.n	90029008 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028fee:	f100 0520 	add.w	r5, r0, #32
90028ff2:	b123      	cbz	r3, 90028ffe <_ZN8touchgfx6Canvas5closeEv+0x26>
90028ff4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
90028ff8:	4628      	mov	r0, r5
90028ffa:	f7ff fe7b 	bl	90028cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
90028ffe:	4628      	mov	r0, r5
90029000:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
90029004:	f7ff fe76 	bl	90028cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
90029008:	2300      	movs	r3, #0
9002900a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
9002900e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
90029012:	4298      	cmp	r0, r3
90029014:	bf34      	ite	cc
90029016:	2000      	movcc	r0, #0
90029018:	2001      	movcs	r0, #1
9002901a:	bd38      	pop	{r3, r4, r5, pc}

9002901c <_ZN8touchgfx6Canvas6renderEh>:
9002901c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029020:	4604      	mov	r4, r0
90029022:	6840      	ldr	r0, [r0, #4]
90029024:	460d      	mov	r5, r1
90029026:	6803      	ldr	r3, [r0, #0]
90029028:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9002902a:	4798      	blx	r3
9002902c:	fb10 f105 	smulbb	r1, r0, r5
90029030:	b289      	uxth	r1, r1
90029032:	1c4d      	adds	r5, r1, #1
90029034:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90029038:	122d      	asrs	r5, r5, #8
9002903a:	f000 809c 	beq.w	90029176 <_ZN8touchgfx6Canvas6renderEh+0x15a>
9002903e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
90029042:	2b00      	cmp	r3, #0
90029044:	f000 8097 	beq.w	90029176 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90029048:	4620      	mov	r0, r4
9002904a:	f7ff ffc5 	bl	90028fd8 <_ZN8touchgfx6Canvas5closeEv>
9002904e:	4607      	mov	r7, r0
90029050:	2800      	cmp	r0, #0
90029052:	d048      	beq.n	900290e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
90029054:	6863      	ldr	r3, [r4, #4]
90029056:	4e49      	ldr	r6, [pc, #292]	; (9002917c <_ZN8touchgfx6Canvas6renderEh+0x160>)
90029058:	6a98      	ldr	r0, [r3, #40]	; 0x28
9002905a:	6837      	ldr	r7, [r6, #0]
9002905c:	6803      	ldr	r3, [r0, #0]
9002905e:	689b      	ldr	r3, [r3, #8]
90029060:	4798      	blx	r3
90029062:	4601      	mov	r1, r0
90029064:	4638      	mov	r0, r7
90029066:	f7ea fc8b 	bl	90013980 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002906a:	4607      	mov	r7, r0
9002906c:	f7ea f84c 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
90029070:	6803      	ldr	r3, [r0, #0]
90029072:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90029074:	4798      	blx	r3
90029076:	4680      	mov	r8, r0
90029078:	f7ea f846 	bl	90013108 <_ZN8touchgfx3HAL3lcdEv>
9002907c:	6803      	ldr	r3, [r0, #0]
9002907e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029080:	4798      	blx	r3
90029082:	280b      	cmp	r0, #11
90029084:	d85c      	bhi.n	90029140 <_ZN8touchgfx6Canvas6renderEh+0x124>
90029086:	e8df f000 	tbb	[pc, r0]
9002908a:	5d52      	.short	0x5d52
9002908c:	325b066d 	.word	0x325b066d
90029090:	66666642 	.word	0x66666642
90029094:	6666      	.short	0x6666
90029096:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002909a:	2208      	movs	r2, #8
9002909c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900290a0:	fb91 f2f2 	sdiv	r2, r1, r2
900290a4:	fb08 2303 	mla	r3, r8, r3, r2
900290a8:	441f      	add	r7, r3
900290aa:	424b      	negs	r3, r1
900290ac:	f001 0107 	and.w	r1, r1, #7
900290b0:	f003 0307 	and.w	r3, r3, #7
900290b4:	bf58      	it	pl
900290b6:	4259      	negpl	r1, r3
900290b8:	b2c9      	uxtb	r1, r1
900290ba:	6860      	ldr	r0, [r4, #4]
900290bc:	b2ed      	uxtb	r5, r5
900290be:	463a      	mov	r2, r7
900290c0:	fa0f f388 	sxth.w	r3, r8
900290c4:	e9cd 1500 	strd	r1, r5, [sp]
900290c8:	6a81      	ldr	r1, [r0, #40]	; 0x28
900290ca:	f104 0020 	add.w	r0, r4, #32
900290ce:	f7ff fe1d 	bl	90028d0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
900290d2:	6863      	ldr	r3, [r4, #4]
900290d4:	4607      	mov	r7, r0
900290d6:	6a98      	ldr	r0, [r3, #40]	; 0x28
900290d8:	6803      	ldr	r3, [r0, #0]
900290da:	691b      	ldr	r3, [r3, #16]
900290dc:	4798      	blx	r3
900290de:	6830      	ldr	r0, [r6, #0]
900290e0:	6803      	ldr	r3, [r0, #0]
900290e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900290e4:	4798      	blx	r3
900290e6:	4638      	mov	r0, r7
900290e8:	b002      	add	sp, #8
900290ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900290ee:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900290f2:	2204      	movs	r2, #4
900290f4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900290f8:	fb91 f2f2 	sdiv	r2, r1, r2
900290fc:	fb08 2303 	mla	r3, r8, r3, r2
90029100:	441f      	add	r7, r3
90029102:	424b      	negs	r3, r1
90029104:	f001 0103 	and.w	r1, r1, #3
90029108:	f003 0303 	and.w	r3, r3, #3
9002910c:	e7d2      	b.n	900290b4 <_ZN8touchgfx6Canvas6renderEh+0x98>
9002910e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029112:	2202      	movs	r2, #2
90029114:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029118:	2900      	cmp	r1, #0
9002911a:	fb91 f2f2 	sdiv	r2, r1, r2
9002911e:	f001 0101 	and.w	r1, r1, #1
90029122:	fb08 2303 	mla	r3, r8, r3, r2
90029126:	bfb8      	it	lt
90029128:	4249      	neglt	r1, r1
9002912a:	441f      	add	r7, r3
9002912c:	e7c4      	b.n	900290b8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
9002912e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029132:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90029136:	fb08 f303 	mul.w	r3, r8, r3
9002913a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002913e:	441f      	add	r7, r3
90029140:	2100      	movs	r1, #0
90029142:	e7ba      	b.n	900290ba <_ZN8touchgfx6Canvas6renderEh+0x9e>
90029144:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029148:	2103      	movs	r1, #3
9002914a:	fb08 f203 	mul.w	r2, r8, r3
9002914e:	8b23      	ldrh	r3, [r4, #24]
90029150:	fb13 2301 	smlabb	r3, r3, r1, r2
90029154:	e7f3      	b.n	9002913e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029156:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002915a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002915e:	fb08 2303 	mla	r3, r8, r3, r2
90029162:	e7ec      	b.n	9002913e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029164:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029168:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002916c:	fb08 f303 	mul.w	r3, r8, r3
90029170:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029174:	e7e3      	b.n	9002913e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029176:	2701      	movs	r7, #1
90029178:	e7b5      	b.n	900290e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
9002917a:	bf00      	nop
9002917c:	24039acc 	.word	0x24039acc

90029180 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029180:	4b07      	ldr	r3, [pc, #28]	; (900291a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
90029182:	b510      	push	{r4, lr}
90029184:	781b      	ldrb	r3, [r3, #0]
90029186:	2b01      	cmp	r3, #1
90029188:	d108      	bne.n	9002919c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
9002918a:	6843      	ldr	r3, [r0, #4]
9002918c:	6814      	ldr	r4, [r2, #0]
9002918e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90029192:	680b      	ldr	r3, [r1, #0]
90029194:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90029198:	6013      	str	r3, [r2, #0]
9002919a:	600c      	str	r4, [r1, #0]
9002919c:	bd10      	pop	{r4, pc}
9002919e:	bf00      	nop
900291a0:	24039ac4 	.word	0x24039ac4

900291a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900291a4:	b513      	push	{r0, r1, r4, lr}
900291a6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
900291aa:	4604      	mov	r4, r0
900291ac:	e9cd 2100 	strd	r2, r1, [sp]
900291b0:	b9a3      	cbnz	r3, 900291dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900291b2:	466a      	mov	r2, sp
900291b4:	a901      	add	r1, sp, #4
900291b6:	4620      	mov	r0, r4
900291b8:	f7ff ffe2 	bl	90029180 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900291bc:	68a3      	ldr	r3, [r4, #8]
900291be:	9901      	ldr	r1, [sp, #4]
900291c0:	9a00      	ldr	r2, [sp, #0]
900291c2:	1ac9      	subs	r1, r1, r3
900291c4:	68e3      	ldr	r3, [r4, #12]
900291c6:	1ad2      	subs	r2, r2, r3
900291c8:	9101      	str	r1, [sp, #4]
900291ca:	2a00      	cmp	r2, #0
900291cc:	9200      	str	r2, [sp, #0]
900291ce:	da0b      	bge.n	900291e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900291d0:	2301      	movs	r3, #1
900291d2:	2900      	cmp	r1, #0
900291d4:	da0e      	bge.n	900291f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900291d6:	f043 0304 	orr.w	r3, r3, #4
900291da:	e013      	b.n	90029204 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
900291dc:	f7ff fefc 	bl	90028fd8 <_ZN8touchgfx6Canvas5closeEv>
900291e0:	2800      	cmp	r0, #0
900291e2:	d1e6      	bne.n	900291b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900291e4:	b002      	add	sp, #8
900291e6:	bd10      	pop	{r4, pc}
900291e8:	6963      	ldr	r3, [r4, #20]
900291ea:	429a      	cmp	r2, r3
900291ec:	bfac      	ite	ge
900291ee:	2302      	movge	r3, #2
900291f0:	2300      	movlt	r3, #0
900291f2:	e7ee      	b.n	900291d2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900291f4:	6920      	ldr	r0, [r4, #16]
900291f6:	4281      	cmp	r1, r0
900291f8:	bfac      	ite	ge
900291fa:	2008      	movge	r0, #8
900291fc:	2000      	movlt	r0, #0
900291fe:	4318      	orrs	r0, r3
90029200:	b2c3      	uxtb	r3, r0
90029202:	b158      	cbz	r0, 9002921c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029204:	2200      	movs	r2, #0
90029206:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
9002920a:	9901      	ldr	r1, [sp, #4]
9002920c:	9a00      	ldr	r2, [sp, #0]
9002920e:	66a1      	str	r1, [r4, #104]	; 0x68
90029210:	66e2      	str	r2, [r4, #108]	; 0x6c
90029212:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90029216:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
9002921a:	e7e3      	b.n	900291e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002921c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90029220:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90029224:	4298      	cmp	r0, r3
90029226:	d803      	bhi.n	90029230 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029228:	f104 0020 	add.w	r0, r4, #32
9002922c:	f7ed f8ca 	bl	900163c4 <_ZN8touchgfx7Outline6moveToEii>
90029230:	2301      	movs	r3, #1
90029232:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90029236:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9002923a:	2300      	movs	r3, #0
9002923c:	e7e5      	b.n	9002920a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002923e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002923e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029240:	ab02      	add	r3, sp, #8
90029242:	4604      	mov	r4, r0
90029244:	9101      	str	r1, [sp, #4]
90029246:	a901      	add	r1, sp, #4
90029248:	f843 2d08 	str.w	r2, [r3, #-8]!
9002924c:	461a      	mov	r2, r3
9002924e:	f7ff ff97 	bl	90029180 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029252:	68a3      	ldr	r3, [r4, #8]
90029254:	9901      	ldr	r1, [sp, #4]
90029256:	9a00      	ldr	r2, [sp, #0]
90029258:	1ac9      	subs	r1, r1, r3
9002925a:	68e3      	ldr	r3, [r4, #12]
9002925c:	1ad2      	subs	r2, r2, r3
9002925e:	9101      	str	r1, [sp, #4]
90029260:	2a00      	cmp	r2, #0
90029262:	9200      	str	r2, [sp, #0]
90029264:	db1c      	blt.n	900292a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029266:	6963      	ldr	r3, [r4, #20]
90029268:	429a      	cmp	r2, r3
9002926a:	bfac      	ite	ge
9002926c:	2002      	movge	r0, #2
9002926e:	2000      	movlt	r0, #0
90029270:	2900      	cmp	r1, #0
90029272:	db17      	blt.n	900292a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029274:	6923      	ldr	r3, [r4, #16]
90029276:	4299      	cmp	r1, r3
90029278:	bfac      	ite	ge
9002927a:	2308      	movge	r3, #8
9002927c:	2300      	movlt	r3, #0
9002927e:	4303      	orrs	r3, r0
90029280:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90029284:	b2dd      	uxtb	r5, r3
90029286:	b978      	cbnz	r0, 900292a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029288:	f104 0020 	add.w	r0, r4, #32
9002928c:	f7ff fd32 	bl	90028cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
90029290:	9b01      	ldr	r3, [sp, #4]
90029292:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90029296:	65e3      	str	r3, [r4, #92]	; 0x5c
90029298:	9b00      	ldr	r3, [sp, #0]
9002929a:	6623      	str	r3, [r4, #96]	; 0x60
9002929c:	b002      	add	sp, #8
9002929e:	bd70      	pop	{r4, r5, r6, pc}
900292a0:	2001      	movs	r0, #1
900292a2:	e7e5      	b.n	90029270 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900292a4:	2304      	movs	r3, #4
900292a6:	e7ea      	b.n	9002927e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900292a8:	b113      	cbz	r3, 900292b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900292aa:	ea10 0305 	ands.w	r3, r0, r5
900292ae:	d11c      	bne.n	900292ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
900292b0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
900292b4:	f104 0620 	add.w	r6, r4, #32
900292b8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
900292bc:	b98b      	cbnz	r3, 900292e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
900292be:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
900292c2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
900292c6:	4298      	cmp	r0, r3
900292c8:	d802      	bhi.n	900292d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
900292ca:	4630      	mov	r0, r6
900292cc:	f7ed f87a 	bl	900163c4 <_ZN8touchgfx7Outline6moveToEii>
900292d0:	2301      	movs	r3, #1
900292d2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900292d6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900292da:	4630      	mov	r0, r6
900292dc:	e9dd 2100 	ldrd	r2, r1, [sp]
900292e0:	e7d4      	b.n	9002928c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
900292e2:	4630      	mov	r0, r6
900292e4:	f7ff fd06 	bl	90028cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
900292e8:	e7f7      	b.n	900292da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
900292ea:	461d      	mov	r5, r3
900292ec:	e7d0      	b.n	90029290 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

900292f0 <_ZN8touchgfx6CanvasD1Ev>:
900292f0:	4b04      	ldr	r3, [pc, #16]	; (90029304 <_ZN8touchgfx6CanvasD1Ev+0x14>)
900292f2:	b510      	push	{r4, lr}
900292f4:	4604      	mov	r4, r0
900292f6:	f840 3b20 	str.w	r3, [r0], #32
900292fa:	f7ec fb6b 	bl	900159d4 <_ZN8touchgfx7OutlineD1Ev>
900292fe:	4620      	mov	r0, r4
90029300:	bd10      	pop	{r4, pc}
90029302:	bf00      	nop
90029304:	9002dec4 	.word	0x9002dec4

90029308 <_ZN8touchgfx6CanvasD0Ev>:
90029308:	b510      	push	{r4, lr}
9002930a:	4604      	mov	r4, r0
9002930c:	f7ff fff0 	bl	900292f0 <_ZN8touchgfx6CanvasD1Ev>
90029310:	2170      	movs	r1, #112	; 0x70
90029312:	4620      	mov	r0, r4
90029314:	f000 f826 	bl	90029364 <_ZdlPvj>
90029318:	4620      	mov	r0, r4
9002931a:	bd10      	pop	{r4, pc}

9002931c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002931c:	790b      	ldrb	r3, [r1, #4]
9002931e:	2b00      	cmp	r3, #0
90029320:	bf0c      	ite	eq
90029322:	2301      	moveq	r3, #1
90029324:	2300      	movne	r3, #0
90029326:	b570      	push	{r4, r5, r6, lr}
90029328:	4604      	mov	r4, r0
9002932a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
9002932e:	460e      	mov	r6, r1
90029330:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90029334:	d109      	bne.n	9002934a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029336:	b14d      	cbz	r5, 9002934c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029338:	7933      	ldrb	r3, [r6, #4]
9002933a:	2b01      	cmp	r3, #1
9002933c:	d10c      	bne.n	90029358 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002933e:	6823      	ldr	r3, [r4, #0]
90029340:	4620      	mov	r0, r4
90029342:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90029344:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029348:	4718      	bx	r3
9002934a:	b12d      	cbz	r5, 90029358 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002934c:	6823      	ldr	r3, [r4, #0]
9002934e:	4620      	mov	r0, r4
90029350:	695b      	ldr	r3, [r3, #20]
90029352:	4798      	blx	r3
90029354:	2d00      	cmp	r5, #0
90029356:	d1ef      	bne.n	90029338 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029358:	bd70      	pop	{r4, r5, r6, pc}

9002935a <__aeabi_atexit>:
9002935a:	460b      	mov	r3, r1
9002935c:	4601      	mov	r1, r0
9002935e:	4618      	mov	r0, r3
90029360:	f000 b90e 	b.w	90029580 <__cxa_atexit>

90029364 <_ZdlPvj>:
90029364:	f000 b812 	b.w	9002938c <_ZdlPv>

90029368 <__cxa_guard_acquire>:
90029368:	6803      	ldr	r3, [r0, #0]
9002936a:	07db      	lsls	r3, r3, #31
9002936c:	d406      	bmi.n	9002937c <__cxa_guard_acquire+0x14>
9002936e:	7843      	ldrb	r3, [r0, #1]
90029370:	b103      	cbz	r3, 90029374 <__cxa_guard_acquire+0xc>
90029372:	deff      	udf	#255	; 0xff
90029374:	2301      	movs	r3, #1
90029376:	7043      	strb	r3, [r0, #1]
90029378:	4618      	mov	r0, r3
9002937a:	4770      	bx	lr
9002937c:	2000      	movs	r0, #0
9002937e:	4770      	bx	lr

90029380 <__cxa_guard_release>:
90029380:	2301      	movs	r3, #1
90029382:	6003      	str	r3, [r0, #0]
90029384:	4770      	bx	lr

90029386 <__cxa_pure_virtual>:
90029386:	b508      	push	{r3, lr}
90029388:	f000 f80e 	bl	900293a8 <_ZSt9terminatev>

9002938c <_ZdlPv>:
9002938c:	f000 b844 	b.w	90029418 <free>

90029390 <_ZN10__cxxabiv111__terminateEPFvvE>:
90029390:	b508      	push	{r3, lr}
90029392:	4780      	blx	r0
90029394:	f000 f80d 	bl	900293b2 <abort>

90029398 <_ZSt13get_terminatev>:
90029398:	4b02      	ldr	r3, [pc, #8]	; (900293a4 <_ZSt13get_terminatev+0xc>)
9002939a:	6818      	ldr	r0, [r3, #0]
9002939c:	f3bf 8f5b 	dmb	ish
900293a0:	4770      	bx	lr
900293a2:	bf00      	nop
900293a4:	24000100 	.word	0x24000100

900293a8 <_ZSt9terminatev>:
900293a8:	b508      	push	{r3, lr}
900293aa:	f7ff fff5 	bl	90029398 <_ZSt13get_terminatev>
900293ae:	f7ff ffef 	bl	90029390 <_ZN10__cxxabiv111__terminateEPFvvE>

900293b2 <abort>:
900293b2:	b508      	push	{r3, lr}
900293b4:	2006      	movs	r0, #6
900293b6:	f000 facd 	bl	90029954 <raise>
900293ba:	2001      	movs	r0, #1
900293bc:	f7da f896 	bl	900034ec <_exit>

900293c0 <__assert_func>:
900293c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900293c2:	4614      	mov	r4, r2
900293c4:	461a      	mov	r2, r3
900293c6:	4b09      	ldr	r3, [pc, #36]	; (900293ec <__assert_func+0x2c>)
900293c8:	681b      	ldr	r3, [r3, #0]
900293ca:	4605      	mov	r5, r0
900293cc:	68d8      	ldr	r0, [r3, #12]
900293ce:	b14c      	cbz	r4, 900293e4 <__assert_func+0x24>
900293d0:	4b07      	ldr	r3, [pc, #28]	; (900293f0 <__assert_func+0x30>)
900293d2:	9100      	str	r1, [sp, #0]
900293d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900293d8:	4906      	ldr	r1, [pc, #24]	; (900293f4 <__assert_func+0x34>)
900293da:	462b      	mov	r3, r5
900293dc:	f000 f970 	bl	900296c0 <fiprintf>
900293e0:	f7ff ffe7 	bl	900293b2 <abort>
900293e4:	4b04      	ldr	r3, [pc, #16]	; (900293f8 <__assert_func+0x38>)
900293e6:	461c      	mov	r4, r3
900293e8:	e7f3      	b.n	900293d2 <__assert_func+0x12>
900293ea:	bf00      	nop
900293ec:	2400015c 	.word	0x2400015c
900293f0:	9002ded0 	.word	0x9002ded0
900293f4:	9002dedd 	.word	0x9002dedd
900293f8:	9002df0b 	.word	0x9002df0b

900293fc <atexit>:
900293fc:	2300      	movs	r3, #0
900293fe:	4601      	mov	r1, r0
90029400:	461a      	mov	r2, r3
90029402:	4618      	mov	r0, r3
90029404:	f000 bb52 	b.w	90029aac <__register_exitproc>

90029408 <malloc>:
90029408:	4b02      	ldr	r3, [pc, #8]	; (90029414 <malloc+0xc>)
9002940a:	4601      	mov	r1, r0
9002940c:	6818      	ldr	r0, [r3, #0]
9002940e:	f000 b82b 	b.w	90029468 <_malloc_r>
90029412:	bf00      	nop
90029414:	2400015c 	.word	0x2400015c

90029418 <free>:
90029418:	4b02      	ldr	r3, [pc, #8]	; (90029424 <free+0xc>)
9002941a:	4601      	mov	r1, r0
9002941c:	6818      	ldr	r0, [r3, #0]
9002941e:	f000 bba3 	b.w	90029b68 <_free_r>
90029422:	bf00      	nop
90029424:	2400015c 	.word	0x2400015c

90029428 <sbrk_aligned>:
90029428:	b570      	push	{r4, r5, r6, lr}
9002942a:	4e0e      	ldr	r6, [pc, #56]	; (90029464 <sbrk_aligned+0x3c>)
9002942c:	460c      	mov	r4, r1
9002942e:	6831      	ldr	r1, [r6, #0]
90029430:	4605      	mov	r5, r0
90029432:	b911      	cbnz	r1, 9002943a <sbrk_aligned+0x12>
90029434:	f000 fade 	bl	900299f4 <_sbrk_r>
90029438:	6030      	str	r0, [r6, #0]
9002943a:	4621      	mov	r1, r4
9002943c:	4628      	mov	r0, r5
9002943e:	f000 fad9 	bl	900299f4 <_sbrk_r>
90029442:	1c43      	adds	r3, r0, #1
90029444:	d00a      	beq.n	9002945c <sbrk_aligned+0x34>
90029446:	1cc4      	adds	r4, r0, #3
90029448:	f024 0403 	bic.w	r4, r4, #3
9002944c:	42a0      	cmp	r0, r4
9002944e:	d007      	beq.n	90029460 <sbrk_aligned+0x38>
90029450:	1a21      	subs	r1, r4, r0
90029452:	4628      	mov	r0, r5
90029454:	f000 face 	bl	900299f4 <_sbrk_r>
90029458:	3001      	adds	r0, #1
9002945a:	d101      	bne.n	90029460 <sbrk_aligned+0x38>
9002945c:	f04f 34ff 	mov.w	r4, #4294967295
90029460:	4620      	mov	r0, r4
90029462:	bd70      	pop	{r4, r5, r6, pc}
90029464:	2403a424 	.word	0x2403a424

90029468 <_malloc_r>:
90029468:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002946c:	1ccd      	adds	r5, r1, #3
9002946e:	f025 0503 	bic.w	r5, r5, #3
90029472:	3508      	adds	r5, #8
90029474:	2d0c      	cmp	r5, #12
90029476:	bf38      	it	cc
90029478:	250c      	movcc	r5, #12
9002947a:	2d00      	cmp	r5, #0
9002947c:	4607      	mov	r7, r0
9002947e:	db01      	blt.n	90029484 <_malloc_r+0x1c>
90029480:	42a9      	cmp	r1, r5
90029482:	d905      	bls.n	90029490 <_malloc_r+0x28>
90029484:	230c      	movs	r3, #12
90029486:	603b      	str	r3, [r7, #0]
90029488:	2600      	movs	r6, #0
9002948a:	4630      	mov	r0, r6
9002948c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029490:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90029564 <_malloc_r+0xfc>
90029494:	f000 f868 	bl	90029568 <__malloc_lock>
90029498:	f8d8 3000 	ldr.w	r3, [r8]
9002949c:	461c      	mov	r4, r3
9002949e:	bb5c      	cbnz	r4, 900294f8 <_malloc_r+0x90>
900294a0:	4629      	mov	r1, r5
900294a2:	4638      	mov	r0, r7
900294a4:	f7ff ffc0 	bl	90029428 <sbrk_aligned>
900294a8:	1c43      	adds	r3, r0, #1
900294aa:	4604      	mov	r4, r0
900294ac:	d155      	bne.n	9002955a <_malloc_r+0xf2>
900294ae:	f8d8 4000 	ldr.w	r4, [r8]
900294b2:	4626      	mov	r6, r4
900294b4:	2e00      	cmp	r6, #0
900294b6:	d145      	bne.n	90029544 <_malloc_r+0xdc>
900294b8:	2c00      	cmp	r4, #0
900294ba:	d048      	beq.n	9002954e <_malloc_r+0xe6>
900294bc:	6823      	ldr	r3, [r4, #0]
900294be:	4631      	mov	r1, r6
900294c0:	4638      	mov	r0, r7
900294c2:	eb04 0903 	add.w	r9, r4, r3
900294c6:	f000 fa95 	bl	900299f4 <_sbrk_r>
900294ca:	4581      	cmp	r9, r0
900294cc:	d13f      	bne.n	9002954e <_malloc_r+0xe6>
900294ce:	6821      	ldr	r1, [r4, #0]
900294d0:	1a6d      	subs	r5, r5, r1
900294d2:	4629      	mov	r1, r5
900294d4:	4638      	mov	r0, r7
900294d6:	f7ff ffa7 	bl	90029428 <sbrk_aligned>
900294da:	3001      	adds	r0, #1
900294dc:	d037      	beq.n	9002954e <_malloc_r+0xe6>
900294de:	6823      	ldr	r3, [r4, #0]
900294e0:	442b      	add	r3, r5
900294e2:	6023      	str	r3, [r4, #0]
900294e4:	f8d8 3000 	ldr.w	r3, [r8]
900294e8:	2b00      	cmp	r3, #0
900294ea:	d038      	beq.n	9002955e <_malloc_r+0xf6>
900294ec:	685a      	ldr	r2, [r3, #4]
900294ee:	42a2      	cmp	r2, r4
900294f0:	d12b      	bne.n	9002954a <_malloc_r+0xe2>
900294f2:	2200      	movs	r2, #0
900294f4:	605a      	str	r2, [r3, #4]
900294f6:	e00f      	b.n	90029518 <_malloc_r+0xb0>
900294f8:	6822      	ldr	r2, [r4, #0]
900294fa:	1b52      	subs	r2, r2, r5
900294fc:	d41f      	bmi.n	9002953e <_malloc_r+0xd6>
900294fe:	2a0b      	cmp	r2, #11
90029500:	d917      	bls.n	90029532 <_malloc_r+0xca>
90029502:	1961      	adds	r1, r4, r5
90029504:	42a3      	cmp	r3, r4
90029506:	6025      	str	r5, [r4, #0]
90029508:	bf18      	it	ne
9002950a:	6059      	strne	r1, [r3, #4]
9002950c:	6863      	ldr	r3, [r4, #4]
9002950e:	bf08      	it	eq
90029510:	f8c8 1000 	streq.w	r1, [r8]
90029514:	5162      	str	r2, [r4, r5]
90029516:	604b      	str	r3, [r1, #4]
90029518:	4638      	mov	r0, r7
9002951a:	f104 060b 	add.w	r6, r4, #11
9002951e:	f000 f829 	bl	90029574 <__malloc_unlock>
90029522:	f026 0607 	bic.w	r6, r6, #7
90029526:	1d23      	adds	r3, r4, #4
90029528:	1af2      	subs	r2, r6, r3
9002952a:	d0ae      	beq.n	9002948a <_malloc_r+0x22>
9002952c:	1b9b      	subs	r3, r3, r6
9002952e:	50a3      	str	r3, [r4, r2]
90029530:	e7ab      	b.n	9002948a <_malloc_r+0x22>
90029532:	42a3      	cmp	r3, r4
90029534:	6862      	ldr	r2, [r4, #4]
90029536:	d1dd      	bne.n	900294f4 <_malloc_r+0x8c>
90029538:	f8c8 2000 	str.w	r2, [r8]
9002953c:	e7ec      	b.n	90029518 <_malloc_r+0xb0>
9002953e:	4623      	mov	r3, r4
90029540:	6864      	ldr	r4, [r4, #4]
90029542:	e7ac      	b.n	9002949e <_malloc_r+0x36>
90029544:	4634      	mov	r4, r6
90029546:	6876      	ldr	r6, [r6, #4]
90029548:	e7b4      	b.n	900294b4 <_malloc_r+0x4c>
9002954a:	4613      	mov	r3, r2
9002954c:	e7cc      	b.n	900294e8 <_malloc_r+0x80>
9002954e:	230c      	movs	r3, #12
90029550:	603b      	str	r3, [r7, #0]
90029552:	4638      	mov	r0, r7
90029554:	f000 f80e 	bl	90029574 <__malloc_unlock>
90029558:	e797      	b.n	9002948a <_malloc_r+0x22>
9002955a:	6025      	str	r5, [r4, #0]
9002955c:	e7dc      	b.n	90029518 <_malloc_r+0xb0>
9002955e:	605b      	str	r3, [r3, #4]
90029560:	deff      	udf	#255	; 0xff
90029562:	bf00      	nop
90029564:	2403a420 	.word	0x2403a420

90029568 <__malloc_lock>:
90029568:	4801      	ldr	r0, [pc, #4]	; (90029570 <__malloc_lock+0x8>)
9002956a:	f000 ba8f 	b.w	90029a8c <__retarget_lock_acquire_recursive>
9002956e:	bf00      	nop
90029570:	2403a569 	.word	0x2403a569

90029574 <__malloc_unlock>:
90029574:	4801      	ldr	r0, [pc, #4]	; (9002957c <__malloc_unlock+0x8>)
90029576:	f000 ba8a 	b.w	90029a8e <__retarget_lock_release_recursive>
9002957a:	bf00      	nop
9002957c:	2403a569 	.word	0x2403a569

90029580 <__cxa_atexit>:
90029580:	b510      	push	{r4, lr}
90029582:	4c05      	ldr	r4, [pc, #20]	; (90029598 <__cxa_atexit+0x18>)
90029584:	4613      	mov	r3, r2
90029586:	b12c      	cbz	r4, 90029594 <__cxa_atexit+0x14>
90029588:	460a      	mov	r2, r1
9002958a:	4601      	mov	r1, r0
9002958c:	2002      	movs	r0, #2
9002958e:	f000 fa8d 	bl	90029aac <__register_exitproc>
90029592:	bd10      	pop	{r4, pc}
90029594:	4620      	mov	r0, r4
90029596:	e7fc      	b.n	90029592 <__cxa_atexit+0x12>
90029598:	90029aad 	.word	0x90029aad

9002959c <std>:
9002959c:	2300      	movs	r3, #0
9002959e:	b510      	push	{r4, lr}
900295a0:	4604      	mov	r4, r0
900295a2:	e9c0 3300 	strd	r3, r3, [r0]
900295a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
900295aa:	6083      	str	r3, [r0, #8]
900295ac:	8181      	strh	r1, [r0, #12]
900295ae:	6643      	str	r3, [r0, #100]	; 0x64
900295b0:	81c2      	strh	r2, [r0, #14]
900295b2:	6183      	str	r3, [r0, #24]
900295b4:	4619      	mov	r1, r3
900295b6:	2208      	movs	r2, #8
900295b8:	305c      	adds	r0, #92	; 0x5c
900295ba:	f000 f989 	bl	900298d0 <memset>
900295be:	4b05      	ldr	r3, [pc, #20]	; (900295d4 <std+0x38>)
900295c0:	6263      	str	r3, [r4, #36]	; 0x24
900295c2:	4b05      	ldr	r3, [pc, #20]	; (900295d8 <std+0x3c>)
900295c4:	62a3      	str	r3, [r4, #40]	; 0x28
900295c6:	4b05      	ldr	r3, [pc, #20]	; (900295dc <std+0x40>)
900295c8:	62e3      	str	r3, [r4, #44]	; 0x2c
900295ca:	4b05      	ldr	r3, [pc, #20]	; (900295e0 <std+0x44>)
900295cc:	6224      	str	r4, [r4, #32]
900295ce:	6323      	str	r3, [r4, #48]	; 0x30
900295d0:	bd10      	pop	{r4, pc}
900295d2:	bf00      	nop
900295d4:	90029721 	.word	0x90029721
900295d8:	90029743 	.word	0x90029743
900295dc:	9002977b 	.word	0x9002977b
900295e0:	9002979f 	.word	0x9002979f

900295e4 <stdio_exit_handler>:
900295e4:	4a02      	ldr	r2, [pc, #8]	; (900295f0 <stdio_exit_handler+0xc>)
900295e6:	4903      	ldr	r1, [pc, #12]	; (900295f4 <stdio_exit_handler+0x10>)
900295e8:	4803      	ldr	r0, [pc, #12]	; (900295f8 <stdio_exit_handler+0x14>)
900295ea:	f000 b87b 	b.w	900296e4 <_fwalk_sglue>
900295ee:	bf00      	nop
900295f0:	24000104 	.word	0x24000104
900295f4:	9002a2b5 	.word	0x9002a2b5
900295f8:	24000110 	.word	0x24000110

900295fc <cleanup_stdio>:
900295fc:	6841      	ldr	r1, [r0, #4]
900295fe:	4b0c      	ldr	r3, [pc, #48]	; (90029630 <cleanup_stdio+0x34>)
90029600:	4299      	cmp	r1, r3
90029602:	b510      	push	{r4, lr}
90029604:	4604      	mov	r4, r0
90029606:	d001      	beq.n	9002960c <cleanup_stdio+0x10>
90029608:	f000 fe54 	bl	9002a2b4 <_fflush_r>
9002960c:	68a1      	ldr	r1, [r4, #8]
9002960e:	4b09      	ldr	r3, [pc, #36]	; (90029634 <cleanup_stdio+0x38>)
90029610:	4299      	cmp	r1, r3
90029612:	d002      	beq.n	9002961a <cleanup_stdio+0x1e>
90029614:	4620      	mov	r0, r4
90029616:	f000 fe4d 	bl	9002a2b4 <_fflush_r>
9002961a:	68e1      	ldr	r1, [r4, #12]
9002961c:	4b06      	ldr	r3, [pc, #24]	; (90029638 <cleanup_stdio+0x3c>)
9002961e:	4299      	cmp	r1, r3
90029620:	d004      	beq.n	9002962c <cleanup_stdio+0x30>
90029622:	4620      	mov	r0, r4
90029624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029628:	f000 be44 	b.w	9002a2b4 <_fflush_r>
9002962c:	bd10      	pop	{r4, pc}
9002962e:	bf00      	nop
90029630:	2403a428 	.word	0x2403a428
90029634:	2403a490 	.word	0x2403a490
90029638:	2403a4f8 	.word	0x2403a4f8

9002963c <global_stdio_init.part.0>:
9002963c:	b510      	push	{r4, lr}
9002963e:	4b0b      	ldr	r3, [pc, #44]	; (9002966c <global_stdio_init.part.0+0x30>)
90029640:	4c0b      	ldr	r4, [pc, #44]	; (90029670 <global_stdio_init.part.0+0x34>)
90029642:	4a0c      	ldr	r2, [pc, #48]	; (90029674 <global_stdio_init.part.0+0x38>)
90029644:	601a      	str	r2, [r3, #0]
90029646:	4620      	mov	r0, r4
90029648:	2200      	movs	r2, #0
9002964a:	2104      	movs	r1, #4
9002964c:	f7ff ffa6 	bl	9002959c <std>
90029650:	f104 0068 	add.w	r0, r4, #104	; 0x68
90029654:	2201      	movs	r2, #1
90029656:	2109      	movs	r1, #9
90029658:	f7ff ffa0 	bl	9002959c <std>
9002965c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90029660:	2202      	movs	r2, #2
90029662:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029666:	2112      	movs	r1, #18
90029668:	f7ff bf98 	b.w	9002959c <std>
9002966c:	2403a560 	.word	0x2403a560
90029670:	2403a428 	.word	0x2403a428
90029674:	900295e5 	.word	0x900295e5

90029678 <__sfp_lock_acquire>:
90029678:	4801      	ldr	r0, [pc, #4]	; (90029680 <__sfp_lock_acquire+0x8>)
9002967a:	f000 ba07 	b.w	90029a8c <__retarget_lock_acquire_recursive>
9002967e:	bf00      	nop
90029680:	2403a56a 	.word	0x2403a56a

90029684 <__sfp_lock_release>:
90029684:	4801      	ldr	r0, [pc, #4]	; (9002968c <__sfp_lock_release+0x8>)
90029686:	f000 ba02 	b.w	90029a8e <__retarget_lock_release_recursive>
9002968a:	bf00      	nop
9002968c:	2403a56a 	.word	0x2403a56a

90029690 <__sinit>:
90029690:	b510      	push	{r4, lr}
90029692:	4604      	mov	r4, r0
90029694:	f7ff fff0 	bl	90029678 <__sfp_lock_acquire>
90029698:	6a23      	ldr	r3, [r4, #32]
9002969a:	b11b      	cbz	r3, 900296a4 <__sinit+0x14>
9002969c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900296a0:	f7ff bff0 	b.w	90029684 <__sfp_lock_release>
900296a4:	4b04      	ldr	r3, [pc, #16]	; (900296b8 <__sinit+0x28>)
900296a6:	6223      	str	r3, [r4, #32]
900296a8:	4b04      	ldr	r3, [pc, #16]	; (900296bc <__sinit+0x2c>)
900296aa:	681b      	ldr	r3, [r3, #0]
900296ac:	2b00      	cmp	r3, #0
900296ae:	d1f5      	bne.n	9002969c <__sinit+0xc>
900296b0:	f7ff ffc4 	bl	9002963c <global_stdio_init.part.0>
900296b4:	e7f2      	b.n	9002969c <__sinit+0xc>
900296b6:	bf00      	nop
900296b8:	900295fd 	.word	0x900295fd
900296bc:	2403a560 	.word	0x2403a560

900296c0 <fiprintf>:
900296c0:	b40e      	push	{r1, r2, r3}
900296c2:	b503      	push	{r0, r1, lr}
900296c4:	4601      	mov	r1, r0
900296c6:	ab03      	add	r3, sp, #12
900296c8:	4805      	ldr	r0, [pc, #20]	; (900296e0 <fiprintf+0x20>)
900296ca:	f853 2b04 	ldr.w	r2, [r3], #4
900296ce:	6800      	ldr	r0, [r0, #0]
900296d0:	9301      	str	r3, [sp, #4]
900296d2:	f000 fabf 	bl	90029c54 <_vfiprintf_r>
900296d6:	b002      	add	sp, #8
900296d8:	f85d eb04 	ldr.w	lr, [sp], #4
900296dc:	b003      	add	sp, #12
900296de:	4770      	bx	lr
900296e0:	2400015c 	.word	0x2400015c

900296e4 <_fwalk_sglue>:
900296e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900296e8:	4607      	mov	r7, r0
900296ea:	4688      	mov	r8, r1
900296ec:	4614      	mov	r4, r2
900296ee:	2600      	movs	r6, #0
900296f0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900296f4:	f1b9 0901 	subs.w	r9, r9, #1
900296f8:	d505      	bpl.n	90029706 <_fwalk_sglue+0x22>
900296fa:	6824      	ldr	r4, [r4, #0]
900296fc:	2c00      	cmp	r4, #0
900296fe:	d1f7      	bne.n	900296f0 <_fwalk_sglue+0xc>
90029700:	4630      	mov	r0, r6
90029702:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029706:	89ab      	ldrh	r3, [r5, #12]
90029708:	2b01      	cmp	r3, #1
9002970a:	d907      	bls.n	9002971c <_fwalk_sglue+0x38>
9002970c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90029710:	3301      	adds	r3, #1
90029712:	d003      	beq.n	9002971c <_fwalk_sglue+0x38>
90029714:	4629      	mov	r1, r5
90029716:	4638      	mov	r0, r7
90029718:	47c0      	blx	r8
9002971a:	4306      	orrs	r6, r0
9002971c:	3568      	adds	r5, #104	; 0x68
9002971e:	e7e9      	b.n	900296f4 <_fwalk_sglue+0x10>

90029720 <__sread>:
90029720:	b510      	push	{r4, lr}
90029722:	460c      	mov	r4, r1
90029724:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029728:	f000 f93e 	bl	900299a8 <_read_r>
9002972c:	2800      	cmp	r0, #0
9002972e:	bfab      	itete	ge
90029730:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90029732:	89a3      	ldrhlt	r3, [r4, #12]
90029734:	181b      	addge	r3, r3, r0
90029736:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002973a:	bfac      	ite	ge
9002973c:	6563      	strge	r3, [r4, #84]	; 0x54
9002973e:	81a3      	strhlt	r3, [r4, #12]
90029740:	bd10      	pop	{r4, pc}

90029742 <__swrite>:
90029742:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029746:	461f      	mov	r7, r3
90029748:	898b      	ldrh	r3, [r1, #12]
9002974a:	05db      	lsls	r3, r3, #23
9002974c:	4605      	mov	r5, r0
9002974e:	460c      	mov	r4, r1
90029750:	4616      	mov	r6, r2
90029752:	d505      	bpl.n	90029760 <__swrite+0x1e>
90029754:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029758:	2302      	movs	r3, #2
9002975a:	2200      	movs	r2, #0
9002975c:	f000 f912 	bl	90029984 <_lseek_r>
90029760:	89a3      	ldrh	r3, [r4, #12]
90029762:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029766:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002976a:	81a3      	strh	r3, [r4, #12]
9002976c:	4632      	mov	r2, r6
9002976e:	463b      	mov	r3, r7
90029770:	4628      	mov	r0, r5
90029772:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90029776:	f000 b94d 	b.w	90029a14 <_write_r>

9002977a <__sseek>:
9002977a:	b510      	push	{r4, lr}
9002977c:	460c      	mov	r4, r1
9002977e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029782:	f000 f8ff 	bl	90029984 <_lseek_r>
90029786:	1c43      	adds	r3, r0, #1
90029788:	89a3      	ldrh	r3, [r4, #12]
9002978a:	bf15      	itete	ne
9002978c:	6560      	strne	r0, [r4, #84]	; 0x54
9002978e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90029792:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90029796:	81a3      	strheq	r3, [r4, #12]
90029798:	bf18      	it	ne
9002979a:	81a3      	strhne	r3, [r4, #12]
9002979c:	bd10      	pop	{r4, pc}

9002979e <__sclose>:
9002979e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900297a2:	f000 b8df 	b.w	90029964 <_close_r>

900297a6 <__swbuf_r>:
900297a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900297a8:	460e      	mov	r6, r1
900297aa:	4614      	mov	r4, r2
900297ac:	4605      	mov	r5, r0
900297ae:	b118      	cbz	r0, 900297b8 <__swbuf_r+0x12>
900297b0:	6a03      	ldr	r3, [r0, #32]
900297b2:	b90b      	cbnz	r3, 900297b8 <__swbuf_r+0x12>
900297b4:	f7ff ff6c 	bl	90029690 <__sinit>
900297b8:	69a3      	ldr	r3, [r4, #24]
900297ba:	60a3      	str	r3, [r4, #8]
900297bc:	89a3      	ldrh	r3, [r4, #12]
900297be:	071a      	lsls	r2, r3, #28
900297c0:	d525      	bpl.n	9002980e <__swbuf_r+0x68>
900297c2:	6923      	ldr	r3, [r4, #16]
900297c4:	b31b      	cbz	r3, 9002980e <__swbuf_r+0x68>
900297c6:	6823      	ldr	r3, [r4, #0]
900297c8:	6922      	ldr	r2, [r4, #16]
900297ca:	1a98      	subs	r0, r3, r2
900297cc:	6963      	ldr	r3, [r4, #20]
900297ce:	b2f6      	uxtb	r6, r6
900297d0:	4283      	cmp	r3, r0
900297d2:	4637      	mov	r7, r6
900297d4:	dc04      	bgt.n	900297e0 <__swbuf_r+0x3a>
900297d6:	4621      	mov	r1, r4
900297d8:	4628      	mov	r0, r5
900297da:	f000 fd6b 	bl	9002a2b4 <_fflush_r>
900297de:	b9e0      	cbnz	r0, 9002981a <__swbuf_r+0x74>
900297e0:	68a3      	ldr	r3, [r4, #8]
900297e2:	3b01      	subs	r3, #1
900297e4:	60a3      	str	r3, [r4, #8]
900297e6:	6823      	ldr	r3, [r4, #0]
900297e8:	1c5a      	adds	r2, r3, #1
900297ea:	6022      	str	r2, [r4, #0]
900297ec:	701e      	strb	r6, [r3, #0]
900297ee:	6962      	ldr	r2, [r4, #20]
900297f0:	1c43      	adds	r3, r0, #1
900297f2:	429a      	cmp	r2, r3
900297f4:	d004      	beq.n	90029800 <__swbuf_r+0x5a>
900297f6:	89a3      	ldrh	r3, [r4, #12]
900297f8:	07db      	lsls	r3, r3, #31
900297fa:	d506      	bpl.n	9002980a <__swbuf_r+0x64>
900297fc:	2e0a      	cmp	r6, #10
900297fe:	d104      	bne.n	9002980a <__swbuf_r+0x64>
90029800:	4621      	mov	r1, r4
90029802:	4628      	mov	r0, r5
90029804:	f000 fd56 	bl	9002a2b4 <_fflush_r>
90029808:	b938      	cbnz	r0, 9002981a <__swbuf_r+0x74>
9002980a:	4638      	mov	r0, r7
9002980c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002980e:	4621      	mov	r1, r4
90029810:	4628      	mov	r0, r5
90029812:	f000 f805 	bl	90029820 <__swsetup_r>
90029816:	2800      	cmp	r0, #0
90029818:	d0d5      	beq.n	900297c6 <__swbuf_r+0x20>
9002981a:	f04f 37ff 	mov.w	r7, #4294967295
9002981e:	e7f4      	b.n	9002980a <__swbuf_r+0x64>

90029820 <__swsetup_r>:
90029820:	b538      	push	{r3, r4, r5, lr}
90029822:	4b2a      	ldr	r3, [pc, #168]	; (900298cc <__swsetup_r+0xac>)
90029824:	4605      	mov	r5, r0
90029826:	6818      	ldr	r0, [r3, #0]
90029828:	460c      	mov	r4, r1
9002982a:	b118      	cbz	r0, 90029834 <__swsetup_r+0x14>
9002982c:	6a03      	ldr	r3, [r0, #32]
9002982e:	b90b      	cbnz	r3, 90029834 <__swsetup_r+0x14>
90029830:	f7ff ff2e 	bl	90029690 <__sinit>
90029834:	89a3      	ldrh	r3, [r4, #12]
90029836:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002983a:	0718      	lsls	r0, r3, #28
9002983c:	d422      	bmi.n	90029884 <__swsetup_r+0x64>
9002983e:	06d9      	lsls	r1, r3, #27
90029840:	d407      	bmi.n	90029852 <__swsetup_r+0x32>
90029842:	2309      	movs	r3, #9
90029844:	602b      	str	r3, [r5, #0]
90029846:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002984a:	81a3      	strh	r3, [r4, #12]
9002984c:	f04f 30ff 	mov.w	r0, #4294967295
90029850:	e034      	b.n	900298bc <__swsetup_r+0x9c>
90029852:	0758      	lsls	r0, r3, #29
90029854:	d512      	bpl.n	9002987c <__swsetup_r+0x5c>
90029856:	6b61      	ldr	r1, [r4, #52]	; 0x34
90029858:	b141      	cbz	r1, 9002986c <__swsetup_r+0x4c>
9002985a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002985e:	4299      	cmp	r1, r3
90029860:	d002      	beq.n	90029868 <__swsetup_r+0x48>
90029862:	4628      	mov	r0, r5
90029864:	f000 f980 	bl	90029b68 <_free_r>
90029868:	2300      	movs	r3, #0
9002986a:	6363      	str	r3, [r4, #52]	; 0x34
9002986c:	89a3      	ldrh	r3, [r4, #12]
9002986e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90029872:	81a3      	strh	r3, [r4, #12]
90029874:	2300      	movs	r3, #0
90029876:	6063      	str	r3, [r4, #4]
90029878:	6923      	ldr	r3, [r4, #16]
9002987a:	6023      	str	r3, [r4, #0]
9002987c:	89a3      	ldrh	r3, [r4, #12]
9002987e:	f043 0308 	orr.w	r3, r3, #8
90029882:	81a3      	strh	r3, [r4, #12]
90029884:	6923      	ldr	r3, [r4, #16]
90029886:	b94b      	cbnz	r3, 9002989c <__swsetup_r+0x7c>
90029888:	89a3      	ldrh	r3, [r4, #12]
9002988a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002988e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90029892:	d003      	beq.n	9002989c <__swsetup_r+0x7c>
90029894:	4621      	mov	r1, r4
90029896:	4628      	mov	r0, r5
90029898:	f000 fd5a 	bl	9002a350 <__smakebuf_r>
9002989c:	89a0      	ldrh	r0, [r4, #12]
9002989e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900298a2:	f010 0301 	ands.w	r3, r0, #1
900298a6:	d00a      	beq.n	900298be <__swsetup_r+0x9e>
900298a8:	2300      	movs	r3, #0
900298aa:	60a3      	str	r3, [r4, #8]
900298ac:	6963      	ldr	r3, [r4, #20]
900298ae:	425b      	negs	r3, r3
900298b0:	61a3      	str	r3, [r4, #24]
900298b2:	6923      	ldr	r3, [r4, #16]
900298b4:	b943      	cbnz	r3, 900298c8 <__swsetup_r+0xa8>
900298b6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
900298ba:	d1c4      	bne.n	90029846 <__swsetup_r+0x26>
900298bc:	bd38      	pop	{r3, r4, r5, pc}
900298be:	0781      	lsls	r1, r0, #30
900298c0:	bf58      	it	pl
900298c2:	6963      	ldrpl	r3, [r4, #20]
900298c4:	60a3      	str	r3, [r4, #8]
900298c6:	e7f4      	b.n	900298b2 <__swsetup_r+0x92>
900298c8:	2000      	movs	r0, #0
900298ca:	e7f7      	b.n	900298bc <__swsetup_r+0x9c>
900298cc:	2400015c 	.word	0x2400015c

900298d0 <memset>:
900298d0:	4402      	add	r2, r0
900298d2:	4603      	mov	r3, r0
900298d4:	4293      	cmp	r3, r2
900298d6:	d100      	bne.n	900298da <memset+0xa>
900298d8:	4770      	bx	lr
900298da:	f803 1b01 	strb.w	r1, [r3], #1
900298de:	e7f9      	b.n	900298d4 <memset+0x4>

900298e0 <strncmp>:
900298e0:	b510      	push	{r4, lr}
900298e2:	b16a      	cbz	r2, 90029900 <strncmp+0x20>
900298e4:	3901      	subs	r1, #1
900298e6:	1884      	adds	r4, r0, r2
900298e8:	f810 2b01 	ldrb.w	r2, [r0], #1
900298ec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900298f0:	429a      	cmp	r2, r3
900298f2:	d103      	bne.n	900298fc <strncmp+0x1c>
900298f4:	42a0      	cmp	r0, r4
900298f6:	d001      	beq.n	900298fc <strncmp+0x1c>
900298f8:	2a00      	cmp	r2, #0
900298fa:	d1f5      	bne.n	900298e8 <strncmp+0x8>
900298fc:	1ad0      	subs	r0, r2, r3
900298fe:	bd10      	pop	{r4, pc}
90029900:	4610      	mov	r0, r2
90029902:	e7fc      	b.n	900298fe <strncmp+0x1e>

90029904 <_raise_r>:
90029904:	291f      	cmp	r1, #31
90029906:	b538      	push	{r3, r4, r5, lr}
90029908:	4604      	mov	r4, r0
9002990a:	460d      	mov	r5, r1
9002990c:	d904      	bls.n	90029918 <_raise_r+0x14>
9002990e:	2316      	movs	r3, #22
90029910:	6003      	str	r3, [r0, #0]
90029912:	f04f 30ff 	mov.w	r0, #4294967295
90029916:	bd38      	pop	{r3, r4, r5, pc}
90029918:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
9002991a:	b112      	cbz	r2, 90029922 <_raise_r+0x1e>
9002991c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90029920:	b94b      	cbnz	r3, 90029936 <_raise_r+0x32>
90029922:	4620      	mov	r0, r4
90029924:	f000 f864 	bl	900299f0 <_getpid_r>
90029928:	462a      	mov	r2, r5
9002992a:	4601      	mov	r1, r0
9002992c:	4620      	mov	r0, r4
9002992e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029932:	f000 b84b 	b.w	900299cc <_kill_r>
90029936:	2b01      	cmp	r3, #1
90029938:	d00a      	beq.n	90029950 <_raise_r+0x4c>
9002993a:	1c59      	adds	r1, r3, #1
9002993c:	d103      	bne.n	90029946 <_raise_r+0x42>
9002993e:	2316      	movs	r3, #22
90029940:	6003      	str	r3, [r0, #0]
90029942:	2001      	movs	r0, #1
90029944:	e7e7      	b.n	90029916 <_raise_r+0x12>
90029946:	2400      	movs	r4, #0
90029948:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002994c:	4628      	mov	r0, r5
9002994e:	4798      	blx	r3
90029950:	2000      	movs	r0, #0
90029952:	e7e0      	b.n	90029916 <_raise_r+0x12>

90029954 <raise>:
90029954:	4b02      	ldr	r3, [pc, #8]	; (90029960 <raise+0xc>)
90029956:	4601      	mov	r1, r0
90029958:	6818      	ldr	r0, [r3, #0]
9002995a:	f7ff bfd3 	b.w	90029904 <_raise_r>
9002995e:	bf00      	nop
90029960:	2400015c 	.word	0x2400015c

90029964 <_close_r>:
90029964:	b538      	push	{r3, r4, r5, lr}
90029966:	4d06      	ldr	r5, [pc, #24]	; (90029980 <_close_r+0x1c>)
90029968:	2300      	movs	r3, #0
9002996a:	4604      	mov	r4, r0
9002996c:	4608      	mov	r0, r1
9002996e:	602b      	str	r3, [r5, #0]
90029970:	f7d9 fdde 	bl	90003530 <_close>
90029974:	1c43      	adds	r3, r0, #1
90029976:	d102      	bne.n	9002997e <_close_r+0x1a>
90029978:	682b      	ldr	r3, [r5, #0]
9002997a:	b103      	cbz	r3, 9002997e <_close_r+0x1a>
9002997c:	6023      	str	r3, [r4, #0]
9002997e:	bd38      	pop	{r3, r4, r5, pc}
90029980:	2403a564 	.word	0x2403a564

90029984 <_lseek_r>:
90029984:	b538      	push	{r3, r4, r5, lr}
90029986:	4d07      	ldr	r5, [pc, #28]	; (900299a4 <_lseek_r+0x20>)
90029988:	4604      	mov	r4, r0
9002998a:	4608      	mov	r0, r1
9002998c:	4611      	mov	r1, r2
9002998e:	2200      	movs	r2, #0
90029990:	602a      	str	r2, [r5, #0]
90029992:	461a      	mov	r2, r3
90029994:	f7d9 fdd8 	bl	90003548 <_lseek>
90029998:	1c43      	adds	r3, r0, #1
9002999a:	d102      	bne.n	900299a2 <_lseek_r+0x1e>
9002999c:	682b      	ldr	r3, [r5, #0]
9002999e:	b103      	cbz	r3, 900299a2 <_lseek_r+0x1e>
900299a0:	6023      	str	r3, [r4, #0]
900299a2:	bd38      	pop	{r3, r4, r5, pc}
900299a4:	2403a564 	.word	0x2403a564

900299a8 <_read_r>:
900299a8:	b538      	push	{r3, r4, r5, lr}
900299aa:	4d07      	ldr	r5, [pc, #28]	; (900299c8 <_read_r+0x20>)
900299ac:	4604      	mov	r4, r0
900299ae:	4608      	mov	r0, r1
900299b0:	4611      	mov	r1, r2
900299b2:	2200      	movs	r2, #0
900299b4:	602a      	str	r2, [r5, #0]
900299b6:	461a      	mov	r2, r3
900299b8:	f7d9 fd9e 	bl	900034f8 <_read>
900299bc:	1c43      	adds	r3, r0, #1
900299be:	d102      	bne.n	900299c6 <_read_r+0x1e>
900299c0:	682b      	ldr	r3, [r5, #0]
900299c2:	b103      	cbz	r3, 900299c6 <_read_r+0x1e>
900299c4:	6023      	str	r3, [r4, #0]
900299c6:	bd38      	pop	{r3, r4, r5, pc}
900299c8:	2403a564 	.word	0x2403a564

900299cc <_kill_r>:
900299cc:	b538      	push	{r3, r4, r5, lr}
900299ce:	4d07      	ldr	r5, [pc, #28]	; (900299ec <_kill_r+0x20>)
900299d0:	2300      	movs	r3, #0
900299d2:	4604      	mov	r4, r0
900299d4:	4608      	mov	r0, r1
900299d6:	4611      	mov	r1, r2
900299d8:	602b      	str	r3, [r5, #0]
900299da:	f7d9 fd7d 	bl	900034d8 <_kill>
900299de:	1c43      	adds	r3, r0, #1
900299e0:	d102      	bne.n	900299e8 <_kill_r+0x1c>
900299e2:	682b      	ldr	r3, [r5, #0]
900299e4:	b103      	cbz	r3, 900299e8 <_kill_r+0x1c>
900299e6:	6023      	str	r3, [r4, #0]
900299e8:	bd38      	pop	{r3, r4, r5, pc}
900299ea:	bf00      	nop
900299ec:	2403a564 	.word	0x2403a564

900299f0 <_getpid_r>:
900299f0:	f7d9 bd70 	b.w	900034d4 <_getpid>

900299f4 <_sbrk_r>:
900299f4:	b538      	push	{r3, r4, r5, lr}
900299f6:	4d06      	ldr	r5, [pc, #24]	; (90029a10 <_sbrk_r+0x1c>)
900299f8:	2300      	movs	r3, #0
900299fa:	4604      	mov	r4, r0
900299fc:	4608      	mov	r0, r1
900299fe:	602b      	str	r3, [r5, #0]
90029a00:	f000 fd04 	bl	9002a40c <_sbrk>
90029a04:	1c43      	adds	r3, r0, #1
90029a06:	d102      	bne.n	90029a0e <_sbrk_r+0x1a>
90029a08:	682b      	ldr	r3, [r5, #0]
90029a0a:	b103      	cbz	r3, 90029a0e <_sbrk_r+0x1a>
90029a0c:	6023      	str	r3, [r4, #0]
90029a0e:	bd38      	pop	{r3, r4, r5, pc}
90029a10:	2403a564 	.word	0x2403a564

90029a14 <_write_r>:
90029a14:	b538      	push	{r3, r4, r5, lr}
90029a16:	4d07      	ldr	r5, [pc, #28]	; (90029a34 <_write_r+0x20>)
90029a18:	4604      	mov	r4, r0
90029a1a:	4608      	mov	r0, r1
90029a1c:	4611      	mov	r1, r2
90029a1e:	2200      	movs	r2, #0
90029a20:	602a      	str	r2, [r5, #0]
90029a22:	461a      	mov	r2, r3
90029a24:	f7d9 fd76 	bl	90003514 <_write>
90029a28:	1c43      	adds	r3, r0, #1
90029a2a:	d102      	bne.n	90029a32 <_write_r+0x1e>
90029a2c:	682b      	ldr	r3, [r5, #0]
90029a2e:	b103      	cbz	r3, 90029a32 <_write_r+0x1e>
90029a30:	6023      	str	r3, [r4, #0]
90029a32:	bd38      	pop	{r3, r4, r5, pc}
90029a34:	2403a564 	.word	0x2403a564

90029a38 <__errno>:
90029a38:	4b01      	ldr	r3, [pc, #4]	; (90029a40 <__errno+0x8>)
90029a3a:	6818      	ldr	r0, [r3, #0]
90029a3c:	4770      	bx	lr
90029a3e:	bf00      	nop
90029a40:	2400015c 	.word	0x2400015c

90029a44 <__libc_init_array>:
90029a44:	b570      	push	{r4, r5, r6, lr}
90029a46:	4d0d      	ldr	r5, [pc, #52]	; (90029a7c <__libc_init_array+0x38>)
90029a48:	4c0d      	ldr	r4, [pc, #52]	; (90029a80 <__libc_init_array+0x3c>)
90029a4a:	1b64      	subs	r4, r4, r5
90029a4c:	10a4      	asrs	r4, r4, #2
90029a4e:	2600      	movs	r6, #0
90029a50:	42a6      	cmp	r6, r4
90029a52:	d109      	bne.n	90029a68 <__libc_init_array+0x24>
90029a54:	4d0b      	ldr	r5, [pc, #44]	; (90029a84 <__libc_init_array+0x40>)
90029a56:	4c0c      	ldr	r4, [pc, #48]	; (90029a88 <__libc_init_array+0x44>)
90029a58:	f000 fce6 	bl	9002a428 <_init>
90029a5c:	1b64      	subs	r4, r4, r5
90029a5e:	10a4      	asrs	r4, r4, #2
90029a60:	2600      	movs	r6, #0
90029a62:	42a6      	cmp	r6, r4
90029a64:	d105      	bne.n	90029a72 <__libc_init_array+0x2e>
90029a66:	bd70      	pop	{r4, r5, r6, pc}
90029a68:	f855 3b04 	ldr.w	r3, [r5], #4
90029a6c:	4798      	blx	r3
90029a6e:	3601      	adds	r6, #1
90029a70:	e7ee      	b.n	90029a50 <__libc_init_array+0xc>
90029a72:	f855 3b04 	ldr.w	r3, [r5], #4
90029a76:	4798      	blx	r3
90029a78:	3601      	adds	r6, #1
90029a7a:	e7f2      	b.n	90029a62 <__libc_init_array+0x1e>
90029a7c:	9002e04c 	.word	0x9002e04c
90029a80:	9002e04c 	.word	0x9002e04c
90029a84:	9002e04c 	.word	0x9002e04c
90029a88:	9002e06c 	.word	0x9002e06c

90029a8c <__retarget_lock_acquire_recursive>:
90029a8c:	4770      	bx	lr

90029a8e <__retarget_lock_release_recursive>:
90029a8e:	4770      	bx	lr

90029a90 <memcpy>:
90029a90:	440a      	add	r2, r1
90029a92:	4291      	cmp	r1, r2
90029a94:	f100 33ff 	add.w	r3, r0, #4294967295
90029a98:	d100      	bne.n	90029a9c <memcpy+0xc>
90029a9a:	4770      	bx	lr
90029a9c:	b510      	push	{r4, lr}
90029a9e:	f811 4b01 	ldrb.w	r4, [r1], #1
90029aa2:	f803 4f01 	strb.w	r4, [r3, #1]!
90029aa6:	4291      	cmp	r1, r2
90029aa8:	d1f9      	bne.n	90029a9e <memcpy+0xe>
90029aaa:	bd10      	pop	{r4, pc}

90029aac <__register_exitproc>:
90029aac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029ab0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90029b64 <__register_exitproc+0xb8>
90029ab4:	4606      	mov	r6, r0
90029ab6:	f8d8 0000 	ldr.w	r0, [r8]
90029aba:	461f      	mov	r7, r3
90029abc:	460d      	mov	r5, r1
90029abe:	4691      	mov	r9, r2
90029ac0:	f7ff ffe4 	bl	90029a8c <__retarget_lock_acquire_recursive>
90029ac4:	4b23      	ldr	r3, [pc, #140]	; (90029b54 <__register_exitproc+0xa8>)
90029ac6:	681c      	ldr	r4, [r3, #0]
90029ac8:	b934      	cbnz	r4, 90029ad8 <__register_exitproc+0x2c>
90029aca:	4c23      	ldr	r4, [pc, #140]	; (90029b58 <__register_exitproc+0xac>)
90029acc:	601c      	str	r4, [r3, #0]
90029ace:	4b23      	ldr	r3, [pc, #140]	; (90029b5c <__register_exitproc+0xb0>)
90029ad0:	b113      	cbz	r3, 90029ad8 <__register_exitproc+0x2c>
90029ad2:	681b      	ldr	r3, [r3, #0]
90029ad4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90029ad8:	6863      	ldr	r3, [r4, #4]
90029ada:	2b1f      	cmp	r3, #31
90029adc:	dd07      	ble.n	90029aee <__register_exitproc+0x42>
90029ade:	f8d8 0000 	ldr.w	r0, [r8]
90029ae2:	f7ff ffd4 	bl	90029a8e <__retarget_lock_release_recursive>
90029ae6:	f04f 30ff 	mov.w	r0, #4294967295
90029aea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029aee:	b32e      	cbz	r6, 90029b3c <__register_exitproc+0x90>
90029af0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90029af4:	b968      	cbnz	r0, 90029b12 <__register_exitproc+0x66>
90029af6:	4b1a      	ldr	r3, [pc, #104]	; (90029b60 <__register_exitproc+0xb4>)
90029af8:	2b00      	cmp	r3, #0
90029afa:	d0f0      	beq.n	90029ade <__register_exitproc+0x32>
90029afc:	f44f 7084 	mov.w	r0, #264	; 0x108
90029b00:	f7ff fc82 	bl	90029408 <malloc>
90029b04:	2800      	cmp	r0, #0
90029b06:	d0ea      	beq.n	90029ade <__register_exitproc+0x32>
90029b08:	2300      	movs	r3, #0
90029b0a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90029b0e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90029b12:	6863      	ldr	r3, [r4, #4]
90029b14:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90029b18:	2201      	movs	r2, #1
90029b1a:	409a      	lsls	r2, r3
90029b1c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90029b20:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90029b24:	4313      	orrs	r3, r2
90029b26:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90029b2a:	2e02      	cmp	r6, #2
90029b2c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90029b30:	bf02      	ittt	eq
90029b32:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90029b36:	4313      	orreq	r3, r2
90029b38:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90029b3c:	6863      	ldr	r3, [r4, #4]
90029b3e:	f8d8 0000 	ldr.w	r0, [r8]
90029b42:	1c5a      	adds	r2, r3, #1
90029b44:	3302      	adds	r3, #2
90029b46:	6062      	str	r2, [r4, #4]
90029b48:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90029b4c:	f7ff ff9f 	bl	90029a8e <__retarget_lock_release_recursive>
90029b50:	2000      	movs	r0, #0
90029b52:	e7ca      	b.n	90029aea <__register_exitproc+0x3e>
90029b54:	2403a5f8 	.word	0x2403a5f8
90029b58:	2403a56c 	.word	0x2403a56c
90029b5c:	9002df0c 	.word	0x9002df0c
90029b60:	90029409 	.word	0x90029409
90029b64:	24000160 	.word	0x24000160

90029b68 <_free_r>:
90029b68:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029b6a:	2900      	cmp	r1, #0
90029b6c:	d044      	beq.n	90029bf8 <_free_r+0x90>
90029b6e:	f851 3c04 	ldr.w	r3, [r1, #-4]
90029b72:	9001      	str	r0, [sp, #4]
90029b74:	2b00      	cmp	r3, #0
90029b76:	f1a1 0404 	sub.w	r4, r1, #4
90029b7a:	bfb8      	it	lt
90029b7c:	18e4      	addlt	r4, r4, r3
90029b7e:	f7ff fcf3 	bl	90029568 <__malloc_lock>
90029b82:	4a1e      	ldr	r2, [pc, #120]	; (90029bfc <_free_r+0x94>)
90029b84:	9801      	ldr	r0, [sp, #4]
90029b86:	6813      	ldr	r3, [r2, #0]
90029b88:	b933      	cbnz	r3, 90029b98 <_free_r+0x30>
90029b8a:	6063      	str	r3, [r4, #4]
90029b8c:	6014      	str	r4, [r2, #0]
90029b8e:	b003      	add	sp, #12
90029b90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029b94:	f7ff bcee 	b.w	90029574 <__malloc_unlock>
90029b98:	42a3      	cmp	r3, r4
90029b9a:	d908      	bls.n	90029bae <_free_r+0x46>
90029b9c:	6825      	ldr	r5, [r4, #0]
90029b9e:	1961      	adds	r1, r4, r5
90029ba0:	428b      	cmp	r3, r1
90029ba2:	bf01      	itttt	eq
90029ba4:	6819      	ldreq	r1, [r3, #0]
90029ba6:	685b      	ldreq	r3, [r3, #4]
90029ba8:	1949      	addeq	r1, r1, r5
90029baa:	6021      	streq	r1, [r4, #0]
90029bac:	e7ed      	b.n	90029b8a <_free_r+0x22>
90029bae:	461a      	mov	r2, r3
90029bb0:	685b      	ldr	r3, [r3, #4]
90029bb2:	b10b      	cbz	r3, 90029bb8 <_free_r+0x50>
90029bb4:	42a3      	cmp	r3, r4
90029bb6:	d9fa      	bls.n	90029bae <_free_r+0x46>
90029bb8:	6811      	ldr	r1, [r2, #0]
90029bba:	1855      	adds	r5, r2, r1
90029bbc:	42a5      	cmp	r5, r4
90029bbe:	d10b      	bne.n	90029bd8 <_free_r+0x70>
90029bc0:	6824      	ldr	r4, [r4, #0]
90029bc2:	4421      	add	r1, r4
90029bc4:	1854      	adds	r4, r2, r1
90029bc6:	42a3      	cmp	r3, r4
90029bc8:	6011      	str	r1, [r2, #0]
90029bca:	d1e0      	bne.n	90029b8e <_free_r+0x26>
90029bcc:	681c      	ldr	r4, [r3, #0]
90029bce:	685b      	ldr	r3, [r3, #4]
90029bd0:	6053      	str	r3, [r2, #4]
90029bd2:	440c      	add	r4, r1
90029bd4:	6014      	str	r4, [r2, #0]
90029bd6:	e7da      	b.n	90029b8e <_free_r+0x26>
90029bd8:	d902      	bls.n	90029be0 <_free_r+0x78>
90029bda:	230c      	movs	r3, #12
90029bdc:	6003      	str	r3, [r0, #0]
90029bde:	e7d6      	b.n	90029b8e <_free_r+0x26>
90029be0:	6825      	ldr	r5, [r4, #0]
90029be2:	1961      	adds	r1, r4, r5
90029be4:	428b      	cmp	r3, r1
90029be6:	bf04      	itt	eq
90029be8:	6819      	ldreq	r1, [r3, #0]
90029bea:	685b      	ldreq	r3, [r3, #4]
90029bec:	6063      	str	r3, [r4, #4]
90029bee:	bf04      	itt	eq
90029bf0:	1949      	addeq	r1, r1, r5
90029bf2:	6021      	streq	r1, [r4, #0]
90029bf4:	6054      	str	r4, [r2, #4]
90029bf6:	e7ca      	b.n	90029b8e <_free_r+0x26>
90029bf8:	b003      	add	sp, #12
90029bfa:	bd30      	pop	{r4, r5, pc}
90029bfc:	2403a420 	.word	0x2403a420

90029c00 <__sfputc_r>:
90029c00:	6893      	ldr	r3, [r2, #8]
90029c02:	3b01      	subs	r3, #1
90029c04:	2b00      	cmp	r3, #0
90029c06:	b410      	push	{r4}
90029c08:	6093      	str	r3, [r2, #8]
90029c0a:	da08      	bge.n	90029c1e <__sfputc_r+0x1e>
90029c0c:	6994      	ldr	r4, [r2, #24]
90029c0e:	42a3      	cmp	r3, r4
90029c10:	db01      	blt.n	90029c16 <__sfputc_r+0x16>
90029c12:	290a      	cmp	r1, #10
90029c14:	d103      	bne.n	90029c1e <__sfputc_r+0x1e>
90029c16:	f85d 4b04 	ldr.w	r4, [sp], #4
90029c1a:	f7ff bdc4 	b.w	900297a6 <__swbuf_r>
90029c1e:	6813      	ldr	r3, [r2, #0]
90029c20:	1c58      	adds	r0, r3, #1
90029c22:	6010      	str	r0, [r2, #0]
90029c24:	7019      	strb	r1, [r3, #0]
90029c26:	4608      	mov	r0, r1
90029c28:	f85d 4b04 	ldr.w	r4, [sp], #4
90029c2c:	4770      	bx	lr

90029c2e <__sfputs_r>:
90029c2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029c30:	4606      	mov	r6, r0
90029c32:	460f      	mov	r7, r1
90029c34:	4614      	mov	r4, r2
90029c36:	18d5      	adds	r5, r2, r3
90029c38:	42ac      	cmp	r4, r5
90029c3a:	d101      	bne.n	90029c40 <__sfputs_r+0x12>
90029c3c:	2000      	movs	r0, #0
90029c3e:	e007      	b.n	90029c50 <__sfputs_r+0x22>
90029c40:	f814 1b01 	ldrb.w	r1, [r4], #1
90029c44:	463a      	mov	r2, r7
90029c46:	4630      	mov	r0, r6
90029c48:	f7ff ffda 	bl	90029c00 <__sfputc_r>
90029c4c:	1c43      	adds	r3, r0, #1
90029c4e:	d1f3      	bne.n	90029c38 <__sfputs_r+0xa>
90029c50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90029c54 <_vfiprintf_r>:
90029c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029c58:	460d      	mov	r5, r1
90029c5a:	b09d      	sub	sp, #116	; 0x74
90029c5c:	4614      	mov	r4, r2
90029c5e:	4698      	mov	r8, r3
90029c60:	4606      	mov	r6, r0
90029c62:	b118      	cbz	r0, 90029c6c <_vfiprintf_r+0x18>
90029c64:	6a03      	ldr	r3, [r0, #32]
90029c66:	b90b      	cbnz	r3, 90029c6c <_vfiprintf_r+0x18>
90029c68:	f7ff fd12 	bl	90029690 <__sinit>
90029c6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029c6e:	07d9      	lsls	r1, r3, #31
90029c70:	d405      	bmi.n	90029c7e <_vfiprintf_r+0x2a>
90029c72:	89ab      	ldrh	r3, [r5, #12]
90029c74:	059a      	lsls	r2, r3, #22
90029c76:	d402      	bmi.n	90029c7e <_vfiprintf_r+0x2a>
90029c78:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029c7a:	f7ff ff07 	bl	90029a8c <__retarget_lock_acquire_recursive>
90029c7e:	89ab      	ldrh	r3, [r5, #12]
90029c80:	071b      	lsls	r3, r3, #28
90029c82:	d501      	bpl.n	90029c88 <_vfiprintf_r+0x34>
90029c84:	692b      	ldr	r3, [r5, #16]
90029c86:	b99b      	cbnz	r3, 90029cb0 <_vfiprintf_r+0x5c>
90029c88:	4629      	mov	r1, r5
90029c8a:	4630      	mov	r0, r6
90029c8c:	f7ff fdc8 	bl	90029820 <__swsetup_r>
90029c90:	b170      	cbz	r0, 90029cb0 <_vfiprintf_r+0x5c>
90029c92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029c94:	07dc      	lsls	r4, r3, #31
90029c96:	d504      	bpl.n	90029ca2 <_vfiprintf_r+0x4e>
90029c98:	f04f 30ff 	mov.w	r0, #4294967295
90029c9c:	b01d      	add	sp, #116	; 0x74
90029c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029ca2:	89ab      	ldrh	r3, [r5, #12]
90029ca4:	0598      	lsls	r0, r3, #22
90029ca6:	d4f7      	bmi.n	90029c98 <_vfiprintf_r+0x44>
90029ca8:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029caa:	f7ff fef0 	bl	90029a8e <__retarget_lock_release_recursive>
90029cae:	e7f3      	b.n	90029c98 <_vfiprintf_r+0x44>
90029cb0:	2300      	movs	r3, #0
90029cb2:	9309      	str	r3, [sp, #36]	; 0x24
90029cb4:	2320      	movs	r3, #32
90029cb6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90029cba:	f8cd 800c 	str.w	r8, [sp, #12]
90029cbe:	2330      	movs	r3, #48	; 0x30
90029cc0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90029e74 <_vfiprintf_r+0x220>
90029cc4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90029cc8:	f04f 0901 	mov.w	r9, #1
90029ccc:	4623      	mov	r3, r4
90029cce:	469a      	mov	sl, r3
90029cd0:	f813 2b01 	ldrb.w	r2, [r3], #1
90029cd4:	b10a      	cbz	r2, 90029cda <_vfiprintf_r+0x86>
90029cd6:	2a25      	cmp	r2, #37	; 0x25
90029cd8:	d1f9      	bne.n	90029cce <_vfiprintf_r+0x7a>
90029cda:	ebba 0b04 	subs.w	fp, sl, r4
90029cde:	d00b      	beq.n	90029cf8 <_vfiprintf_r+0xa4>
90029ce0:	465b      	mov	r3, fp
90029ce2:	4622      	mov	r2, r4
90029ce4:	4629      	mov	r1, r5
90029ce6:	4630      	mov	r0, r6
90029ce8:	f7ff ffa1 	bl	90029c2e <__sfputs_r>
90029cec:	3001      	adds	r0, #1
90029cee:	f000 80a9 	beq.w	90029e44 <_vfiprintf_r+0x1f0>
90029cf2:	9a09      	ldr	r2, [sp, #36]	; 0x24
90029cf4:	445a      	add	r2, fp
90029cf6:	9209      	str	r2, [sp, #36]	; 0x24
90029cf8:	f89a 3000 	ldrb.w	r3, [sl]
90029cfc:	2b00      	cmp	r3, #0
90029cfe:	f000 80a1 	beq.w	90029e44 <_vfiprintf_r+0x1f0>
90029d02:	2300      	movs	r3, #0
90029d04:	f04f 32ff 	mov.w	r2, #4294967295
90029d08:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029d0c:	f10a 0a01 	add.w	sl, sl, #1
90029d10:	9304      	str	r3, [sp, #16]
90029d12:	9307      	str	r3, [sp, #28]
90029d14:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90029d18:	931a      	str	r3, [sp, #104]	; 0x68
90029d1a:	4654      	mov	r4, sl
90029d1c:	2205      	movs	r2, #5
90029d1e:	f814 1b01 	ldrb.w	r1, [r4], #1
90029d22:	4854      	ldr	r0, [pc, #336]	; (90029e74 <_vfiprintf_r+0x220>)
90029d24:	f7d6 fadc 	bl	900002e0 <memchr>
90029d28:	9a04      	ldr	r2, [sp, #16]
90029d2a:	b9d8      	cbnz	r0, 90029d64 <_vfiprintf_r+0x110>
90029d2c:	06d1      	lsls	r1, r2, #27
90029d2e:	bf44      	itt	mi
90029d30:	2320      	movmi	r3, #32
90029d32:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029d36:	0713      	lsls	r3, r2, #28
90029d38:	bf44      	itt	mi
90029d3a:	232b      	movmi	r3, #43	; 0x2b
90029d3c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029d40:	f89a 3000 	ldrb.w	r3, [sl]
90029d44:	2b2a      	cmp	r3, #42	; 0x2a
90029d46:	d015      	beq.n	90029d74 <_vfiprintf_r+0x120>
90029d48:	9a07      	ldr	r2, [sp, #28]
90029d4a:	4654      	mov	r4, sl
90029d4c:	2000      	movs	r0, #0
90029d4e:	f04f 0c0a 	mov.w	ip, #10
90029d52:	4621      	mov	r1, r4
90029d54:	f811 3b01 	ldrb.w	r3, [r1], #1
90029d58:	3b30      	subs	r3, #48	; 0x30
90029d5a:	2b09      	cmp	r3, #9
90029d5c:	d94d      	bls.n	90029dfa <_vfiprintf_r+0x1a6>
90029d5e:	b1b0      	cbz	r0, 90029d8e <_vfiprintf_r+0x13a>
90029d60:	9207      	str	r2, [sp, #28]
90029d62:	e014      	b.n	90029d8e <_vfiprintf_r+0x13a>
90029d64:	eba0 0308 	sub.w	r3, r0, r8
90029d68:	fa09 f303 	lsl.w	r3, r9, r3
90029d6c:	4313      	orrs	r3, r2
90029d6e:	9304      	str	r3, [sp, #16]
90029d70:	46a2      	mov	sl, r4
90029d72:	e7d2      	b.n	90029d1a <_vfiprintf_r+0xc6>
90029d74:	9b03      	ldr	r3, [sp, #12]
90029d76:	1d19      	adds	r1, r3, #4
90029d78:	681b      	ldr	r3, [r3, #0]
90029d7a:	9103      	str	r1, [sp, #12]
90029d7c:	2b00      	cmp	r3, #0
90029d7e:	bfbb      	ittet	lt
90029d80:	425b      	neglt	r3, r3
90029d82:	f042 0202 	orrlt.w	r2, r2, #2
90029d86:	9307      	strge	r3, [sp, #28]
90029d88:	9307      	strlt	r3, [sp, #28]
90029d8a:	bfb8      	it	lt
90029d8c:	9204      	strlt	r2, [sp, #16]
90029d8e:	7823      	ldrb	r3, [r4, #0]
90029d90:	2b2e      	cmp	r3, #46	; 0x2e
90029d92:	d10c      	bne.n	90029dae <_vfiprintf_r+0x15a>
90029d94:	7863      	ldrb	r3, [r4, #1]
90029d96:	2b2a      	cmp	r3, #42	; 0x2a
90029d98:	d134      	bne.n	90029e04 <_vfiprintf_r+0x1b0>
90029d9a:	9b03      	ldr	r3, [sp, #12]
90029d9c:	1d1a      	adds	r2, r3, #4
90029d9e:	681b      	ldr	r3, [r3, #0]
90029da0:	9203      	str	r2, [sp, #12]
90029da2:	2b00      	cmp	r3, #0
90029da4:	bfb8      	it	lt
90029da6:	f04f 33ff 	movlt.w	r3, #4294967295
90029daa:	3402      	adds	r4, #2
90029dac:	9305      	str	r3, [sp, #20]
90029dae:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90029e84 <_vfiprintf_r+0x230>
90029db2:	7821      	ldrb	r1, [r4, #0]
90029db4:	2203      	movs	r2, #3
90029db6:	4650      	mov	r0, sl
90029db8:	f7d6 fa92 	bl	900002e0 <memchr>
90029dbc:	b138      	cbz	r0, 90029dce <_vfiprintf_r+0x17a>
90029dbe:	9b04      	ldr	r3, [sp, #16]
90029dc0:	eba0 000a 	sub.w	r0, r0, sl
90029dc4:	2240      	movs	r2, #64	; 0x40
90029dc6:	4082      	lsls	r2, r0
90029dc8:	4313      	orrs	r3, r2
90029dca:	3401      	adds	r4, #1
90029dcc:	9304      	str	r3, [sp, #16]
90029dce:	f814 1b01 	ldrb.w	r1, [r4], #1
90029dd2:	4829      	ldr	r0, [pc, #164]	; (90029e78 <_vfiprintf_r+0x224>)
90029dd4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90029dd8:	2206      	movs	r2, #6
90029dda:	f7d6 fa81 	bl	900002e0 <memchr>
90029dde:	2800      	cmp	r0, #0
90029de0:	d03f      	beq.n	90029e62 <_vfiprintf_r+0x20e>
90029de2:	4b26      	ldr	r3, [pc, #152]	; (90029e7c <_vfiprintf_r+0x228>)
90029de4:	bb1b      	cbnz	r3, 90029e2e <_vfiprintf_r+0x1da>
90029de6:	9b03      	ldr	r3, [sp, #12]
90029de8:	3307      	adds	r3, #7
90029dea:	f023 0307 	bic.w	r3, r3, #7
90029dee:	3308      	adds	r3, #8
90029df0:	9303      	str	r3, [sp, #12]
90029df2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029df4:	443b      	add	r3, r7
90029df6:	9309      	str	r3, [sp, #36]	; 0x24
90029df8:	e768      	b.n	90029ccc <_vfiprintf_r+0x78>
90029dfa:	fb0c 3202 	mla	r2, ip, r2, r3
90029dfe:	460c      	mov	r4, r1
90029e00:	2001      	movs	r0, #1
90029e02:	e7a6      	b.n	90029d52 <_vfiprintf_r+0xfe>
90029e04:	2300      	movs	r3, #0
90029e06:	3401      	adds	r4, #1
90029e08:	9305      	str	r3, [sp, #20]
90029e0a:	4619      	mov	r1, r3
90029e0c:	f04f 0c0a 	mov.w	ip, #10
90029e10:	4620      	mov	r0, r4
90029e12:	f810 2b01 	ldrb.w	r2, [r0], #1
90029e16:	3a30      	subs	r2, #48	; 0x30
90029e18:	2a09      	cmp	r2, #9
90029e1a:	d903      	bls.n	90029e24 <_vfiprintf_r+0x1d0>
90029e1c:	2b00      	cmp	r3, #0
90029e1e:	d0c6      	beq.n	90029dae <_vfiprintf_r+0x15a>
90029e20:	9105      	str	r1, [sp, #20]
90029e22:	e7c4      	b.n	90029dae <_vfiprintf_r+0x15a>
90029e24:	fb0c 2101 	mla	r1, ip, r1, r2
90029e28:	4604      	mov	r4, r0
90029e2a:	2301      	movs	r3, #1
90029e2c:	e7f0      	b.n	90029e10 <_vfiprintf_r+0x1bc>
90029e2e:	ab03      	add	r3, sp, #12
90029e30:	9300      	str	r3, [sp, #0]
90029e32:	462a      	mov	r2, r5
90029e34:	4b12      	ldr	r3, [pc, #72]	; (90029e80 <_vfiprintf_r+0x22c>)
90029e36:	a904      	add	r1, sp, #16
90029e38:	4630      	mov	r0, r6
90029e3a:	f3af 8000 	nop.w
90029e3e:	4607      	mov	r7, r0
90029e40:	1c78      	adds	r0, r7, #1
90029e42:	d1d6      	bne.n	90029df2 <_vfiprintf_r+0x19e>
90029e44:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029e46:	07d9      	lsls	r1, r3, #31
90029e48:	d405      	bmi.n	90029e56 <_vfiprintf_r+0x202>
90029e4a:	89ab      	ldrh	r3, [r5, #12]
90029e4c:	059a      	lsls	r2, r3, #22
90029e4e:	d402      	bmi.n	90029e56 <_vfiprintf_r+0x202>
90029e50:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029e52:	f7ff fe1c 	bl	90029a8e <__retarget_lock_release_recursive>
90029e56:	89ab      	ldrh	r3, [r5, #12]
90029e58:	065b      	lsls	r3, r3, #25
90029e5a:	f53f af1d 	bmi.w	90029c98 <_vfiprintf_r+0x44>
90029e5e:	9809      	ldr	r0, [sp, #36]	; 0x24
90029e60:	e71c      	b.n	90029c9c <_vfiprintf_r+0x48>
90029e62:	ab03      	add	r3, sp, #12
90029e64:	9300      	str	r3, [sp, #0]
90029e66:	462a      	mov	r2, r5
90029e68:	4b05      	ldr	r3, [pc, #20]	; (90029e80 <_vfiprintf_r+0x22c>)
90029e6a:	a904      	add	r1, sp, #16
90029e6c:	4630      	mov	r0, r6
90029e6e:	f000 f879 	bl	90029f64 <_printf_i>
90029e72:	e7e4      	b.n	90029e3e <_vfiprintf_r+0x1ea>
90029e74:	9002df10 	.word	0x9002df10
90029e78:	9002df1a 	.word	0x9002df1a
90029e7c:	00000000 	.word	0x00000000
90029e80:	90029c2f 	.word	0x90029c2f
90029e84:	9002df16 	.word	0x9002df16

90029e88 <_printf_common>:
90029e88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029e8c:	4616      	mov	r6, r2
90029e8e:	4699      	mov	r9, r3
90029e90:	688a      	ldr	r2, [r1, #8]
90029e92:	690b      	ldr	r3, [r1, #16]
90029e94:	f8dd 8020 	ldr.w	r8, [sp, #32]
90029e98:	4293      	cmp	r3, r2
90029e9a:	bfb8      	it	lt
90029e9c:	4613      	movlt	r3, r2
90029e9e:	6033      	str	r3, [r6, #0]
90029ea0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90029ea4:	4607      	mov	r7, r0
90029ea6:	460c      	mov	r4, r1
90029ea8:	b10a      	cbz	r2, 90029eae <_printf_common+0x26>
90029eaa:	3301      	adds	r3, #1
90029eac:	6033      	str	r3, [r6, #0]
90029eae:	6823      	ldr	r3, [r4, #0]
90029eb0:	0699      	lsls	r1, r3, #26
90029eb2:	bf42      	ittt	mi
90029eb4:	6833      	ldrmi	r3, [r6, #0]
90029eb6:	3302      	addmi	r3, #2
90029eb8:	6033      	strmi	r3, [r6, #0]
90029eba:	6825      	ldr	r5, [r4, #0]
90029ebc:	f015 0506 	ands.w	r5, r5, #6
90029ec0:	d106      	bne.n	90029ed0 <_printf_common+0x48>
90029ec2:	f104 0a19 	add.w	sl, r4, #25
90029ec6:	68e3      	ldr	r3, [r4, #12]
90029ec8:	6832      	ldr	r2, [r6, #0]
90029eca:	1a9b      	subs	r3, r3, r2
90029ecc:	42ab      	cmp	r3, r5
90029ece:	dc26      	bgt.n	90029f1e <_printf_common+0x96>
90029ed0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90029ed4:	1e13      	subs	r3, r2, #0
90029ed6:	6822      	ldr	r2, [r4, #0]
90029ed8:	bf18      	it	ne
90029eda:	2301      	movne	r3, #1
90029edc:	0692      	lsls	r2, r2, #26
90029ede:	d42b      	bmi.n	90029f38 <_printf_common+0xb0>
90029ee0:	f104 0243 	add.w	r2, r4, #67	; 0x43
90029ee4:	4649      	mov	r1, r9
90029ee6:	4638      	mov	r0, r7
90029ee8:	47c0      	blx	r8
90029eea:	3001      	adds	r0, #1
90029eec:	d01e      	beq.n	90029f2c <_printf_common+0xa4>
90029eee:	6823      	ldr	r3, [r4, #0]
90029ef0:	6922      	ldr	r2, [r4, #16]
90029ef2:	f003 0306 	and.w	r3, r3, #6
90029ef6:	2b04      	cmp	r3, #4
90029ef8:	bf02      	ittt	eq
90029efa:	68e5      	ldreq	r5, [r4, #12]
90029efc:	6833      	ldreq	r3, [r6, #0]
90029efe:	1aed      	subeq	r5, r5, r3
90029f00:	68a3      	ldr	r3, [r4, #8]
90029f02:	bf0c      	ite	eq
90029f04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90029f08:	2500      	movne	r5, #0
90029f0a:	4293      	cmp	r3, r2
90029f0c:	bfc4      	itt	gt
90029f0e:	1a9b      	subgt	r3, r3, r2
90029f10:	18ed      	addgt	r5, r5, r3
90029f12:	2600      	movs	r6, #0
90029f14:	341a      	adds	r4, #26
90029f16:	42b5      	cmp	r5, r6
90029f18:	d11a      	bne.n	90029f50 <_printf_common+0xc8>
90029f1a:	2000      	movs	r0, #0
90029f1c:	e008      	b.n	90029f30 <_printf_common+0xa8>
90029f1e:	2301      	movs	r3, #1
90029f20:	4652      	mov	r2, sl
90029f22:	4649      	mov	r1, r9
90029f24:	4638      	mov	r0, r7
90029f26:	47c0      	blx	r8
90029f28:	3001      	adds	r0, #1
90029f2a:	d103      	bne.n	90029f34 <_printf_common+0xac>
90029f2c:	f04f 30ff 	mov.w	r0, #4294967295
90029f30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029f34:	3501      	adds	r5, #1
90029f36:	e7c6      	b.n	90029ec6 <_printf_common+0x3e>
90029f38:	18e1      	adds	r1, r4, r3
90029f3a:	1c5a      	adds	r2, r3, #1
90029f3c:	2030      	movs	r0, #48	; 0x30
90029f3e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90029f42:	4422      	add	r2, r4
90029f44:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90029f48:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90029f4c:	3302      	adds	r3, #2
90029f4e:	e7c7      	b.n	90029ee0 <_printf_common+0x58>
90029f50:	2301      	movs	r3, #1
90029f52:	4622      	mov	r2, r4
90029f54:	4649      	mov	r1, r9
90029f56:	4638      	mov	r0, r7
90029f58:	47c0      	blx	r8
90029f5a:	3001      	adds	r0, #1
90029f5c:	d0e6      	beq.n	90029f2c <_printf_common+0xa4>
90029f5e:	3601      	adds	r6, #1
90029f60:	e7d9      	b.n	90029f16 <_printf_common+0x8e>
	...

90029f64 <_printf_i>:
90029f64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90029f68:	7e0f      	ldrb	r7, [r1, #24]
90029f6a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90029f6c:	2f78      	cmp	r7, #120	; 0x78
90029f6e:	4691      	mov	r9, r2
90029f70:	4680      	mov	r8, r0
90029f72:	460c      	mov	r4, r1
90029f74:	469a      	mov	sl, r3
90029f76:	f101 0243 	add.w	r2, r1, #67	; 0x43
90029f7a:	d807      	bhi.n	90029f8c <_printf_i+0x28>
90029f7c:	2f62      	cmp	r7, #98	; 0x62
90029f7e:	d80a      	bhi.n	90029f96 <_printf_i+0x32>
90029f80:	2f00      	cmp	r7, #0
90029f82:	f000 80d4 	beq.w	9002a12e <_printf_i+0x1ca>
90029f86:	2f58      	cmp	r7, #88	; 0x58
90029f88:	f000 80c0 	beq.w	9002a10c <_printf_i+0x1a8>
90029f8c:	f104 0542 	add.w	r5, r4, #66	; 0x42
90029f90:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90029f94:	e03a      	b.n	9002a00c <_printf_i+0xa8>
90029f96:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90029f9a:	2b15      	cmp	r3, #21
90029f9c:	d8f6      	bhi.n	90029f8c <_printf_i+0x28>
90029f9e:	a101      	add	r1, pc, #4	; (adr r1, 90029fa4 <_printf_i+0x40>)
90029fa0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90029fa4:	90029ffd 	.word	0x90029ffd
90029fa8:	9002a011 	.word	0x9002a011
90029fac:	90029f8d 	.word	0x90029f8d
90029fb0:	90029f8d 	.word	0x90029f8d
90029fb4:	90029f8d 	.word	0x90029f8d
90029fb8:	90029f8d 	.word	0x90029f8d
90029fbc:	9002a011 	.word	0x9002a011
90029fc0:	90029f8d 	.word	0x90029f8d
90029fc4:	90029f8d 	.word	0x90029f8d
90029fc8:	90029f8d 	.word	0x90029f8d
90029fcc:	90029f8d 	.word	0x90029f8d
90029fd0:	9002a115 	.word	0x9002a115
90029fd4:	9002a03d 	.word	0x9002a03d
90029fd8:	9002a0cf 	.word	0x9002a0cf
90029fdc:	90029f8d 	.word	0x90029f8d
90029fe0:	90029f8d 	.word	0x90029f8d
90029fe4:	9002a137 	.word	0x9002a137
90029fe8:	90029f8d 	.word	0x90029f8d
90029fec:	9002a03d 	.word	0x9002a03d
90029ff0:	90029f8d 	.word	0x90029f8d
90029ff4:	90029f8d 	.word	0x90029f8d
90029ff8:	9002a0d7 	.word	0x9002a0d7
90029ffc:	682b      	ldr	r3, [r5, #0]
90029ffe:	1d1a      	adds	r2, r3, #4
9002a000:	681b      	ldr	r3, [r3, #0]
9002a002:	602a      	str	r2, [r5, #0]
9002a004:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002a008:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002a00c:	2301      	movs	r3, #1
9002a00e:	e09f      	b.n	9002a150 <_printf_i+0x1ec>
9002a010:	6820      	ldr	r0, [r4, #0]
9002a012:	682b      	ldr	r3, [r5, #0]
9002a014:	0607      	lsls	r7, r0, #24
9002a016:	f103 0104 	add.w	r1, r3, #4
9002a01a:	6029      	str	r1, [r5, #0]
9002a01c:	d501      	bpl.n	9002a022 <_printf_i+0xbe>
9002a01e:	681e      	ldr	r6, [r3, #0]
9002a020:	e003      	b.n	9002a02a <_printf_i+0xc6>
9002a022:	0646      	lsls	r6, r0, #25
9002a024:	d5fb      	bpl.n	9002a01e <_printf_i+0xba>
9002a026:	f9b3 6000 	ldrsh.w	r6, [r3]
9002a02a:	2e00      	cmp	r6, #0
9002a02c:	da03      	bge.n	9002a036 <_printf_i+0xd2>
9002a02e:	232d      	movs	r3, #45	; 0x2d
9002a030:	4276      	negs	r6, r6
9002a032:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a036:	485a      	ldr	r0, [pc, #360]	; (9002a1a0 <_printf_i+0x23c>)
9002a038:	230a      	movs	r3, #10
9002a03a:	e012      	b.n	9002a062 <_printf_i+0xfe>
9002a03c:	682b      	ldr	r3, [r5, #0]
9002a03e:	6820      	ldr	r0, [r4, #0]
9002a040:	1d19      	adds	r1, r3, #4
9002a042:	6029      	str	r1, [r5, #0]
9002a044:	0605      	lsls	r5, r0, #24
9002a046:	d501      	bpl.n	9002a04c <_printf_i+0xe8>
9002a048:	681e      	ldr	r6, [r3, #0]
9002a04a:	e002      	b.n	9002a052 <_printf_i+0xee>
9002a04c:	0641      	lsls	r1, r0, #25
9002a04e:	d5fb      	bpl.n	9002a048 <_printf_i+0xe4>
9002a050:	881e      	ldrh	r6, [r3, #0]
9002a052:	4853      	ldr	r0, [pc, #332]	; (9002a1a0 <_printf_i+0x23c>)
9002a054:	2f6f      	cmp	r7, #111	; 0x6f
9002a056:	bf0c      	ite	eq
9002a058:	2308      	moveq	r3, #8
9002a05a:	230a      	movne	r3, #10
9002a05c:	2100      	movs	r1, #0
9002a05e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002a062:	6865      	ldr	r5, [r4, #4]
9002a064:	60a5      	str	r5, [r4, #8]
9002a066:	2d00      	cmp	r5, #0
9002a068:	bfa2      	ittt	ge
9002a06a:	6821      	ldrge	r1, [r4, #0]
9002a06c:	f021 0104 	bicge.w	r1, r1, #4
9002a070:	6021      	strge	r1, [r4, #0]
9002a072:	b90e      	cbnz	r6, 9002a078 <_printf_i+0x114>
9002a074:	2d00      	cmp	r5, #0
9002a076:	d04b      	beq.n	9002a110 <_printf_i+0x1ac>
9002a078:	4615      	mov	r5, r2
9002a07a:	fbb6 f1f3 	udiv	r1, r6, r3
9002a07e:	fb03 6711 	mls	r7, r3, r1, r6
9002a082:	5dc7      	ldrb	r7, [r0, r7]
9002a084:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002a088:	4637      	mov	r7, r6
9002a08a:	42bb      	cmp	r3, r7
9002a08c:	460e      	mov	r6, r1
9002a08e:	d9f4      	bls.n	9002a07a <_printf_i+0x116>
9002a090:	2b08      	cmp	r3, #8
9002a092:	d10b      	bne.n	9002a0ac <_printf_i+0x148>
9002a094:	6823      	ldr	r3, [r4, #0]
9002a096:	07de      	lsls	r6, r3, #31
9002a098:	d508      	bpl.n	9002a0ac <_printf_i+0x148>
9002a09a:	6923      	ldr	r3, [r4, #16]
9002a09c:	6861      	ldr	r1, [r4, #4]
9002a09e:	4299      	cmp	r1, r3
9002a0a0:	bfde      	ittt	le
9002a0a2:	2330      	movle	r3, #48	; 0x30
9002a0a4:	f805 3c01 	strble.w	r3, [r5, #-1]
9002a0a8:	f105 35ff 	addle.w	r5, r5, #4294967295
9002a0ac:	1b52      	subs	r2, r2, r5
9002a0ae:	6122      	str	r2, [r4, #16]
9002a0b0:	f8cd a000 	str.w	sl, [sp]
9002a0b4:	464b      	mov	r3, r9
9002a0b6:	aa03      	add	r2, sp, #12
9002a0b8:	4621      	mov	r1, r4
9002a0ba:	4640      	mov	r0, r8
9002a0bc:	f7ff fee4 	bl	90029e88 <_printf_common>
9002a0c0:	3001      	adds	r0, #1
9002a0c2:	d14a      	bne.n	9002a15a <_printf_i+0x1f6>
9002a0c4:	f04f 30ff 	mov.w	r0, #4294967295
9002a0c8:	b004      	add	sp, #16
9002a0ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a0ce:	6823      	ldr	r3, [r4, #0]
9002a0d0:	f043 0320 	orr.w	r3, r3, #32
9002a0d4:	6023      	str	r3, [r4, #0]
9002a0d6:	4833      	ldr	r0, [pc, #204]	; (9002a1a4 <_printf_i+0x240>)
9002a0d8:	2778      	movs	r7, #120	; 0x78
9002a0da:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002a0de:	6823      	ldr	r3, [r4, #0]
9002a0e0:	6829      	ldr	r1, [r5, #0]
9002a0e2:	061f      	lsls	r7, r3, #24
9002a0e4:	f851 6b04 	ldr.w	r6, [r1], #4
9002a0e8:	d402      	bmi.n	9002a0f0 <_printf_i+0x18c>
9002a0ea:	065f      	lsls	r7, r3, #25
9002a0ec:	bf48      	it	mi
9002a0ee:	b2b6      	uxthmi	r6, r6
9002a0f0:	07df      	lsls	r7, r3, #31
9002a0f2:	bf48      	it	mi
9002a0f4:	f043 0320 	orrmi.w	r3, r3, #32
9002a0f8:	6029      	str	r1, [r5, #0]
9002a0fa:	bf48      	it	mi
9002a0fc:	6023      	strmi	r3, [r4, #0]
9002a0fe:	b91e      	cbnz	r6, 9002a108 <_printf_i+0x1a4>
9002a100:	6823      	ldr	r3, [r4, #0]
9002a102:	f023 0320 	bic.w	r3, r3, #32
9002a106:	6023      	str	r3, [r4, #0]
9002a108:	2310      	movs	r3, #16
9002a10a:	e7a7      	b.n	9002a05c <_printf_i+0xf8>
9002a10c:	4824      	ldr	r0, [pc, #144]	; (9002a1a0 <_printf_i+0x23c>)
9002a10e:	e7e4      	b.n	9002a0da <_printf_i+0x176>
9002a110:	4615      	mov	r5, r2
9002a112:	e7bd      	b.n	9002a090 <_printf_i+0x12c>
9002a114:	682b      	ldr	r3, [r5, #0]
9002a116:	6826      	ldr	r6, [r4, #0]
9002a118:	6961      	ldr	r1, [r4, #20]
9002a11a:	1d18      	adds	r0, r3, #4
9002a11c:	6028      	str	r0, [r5, #0]
9002a11e:	0635      	lsls	r5, r6, #24
9002a120:	681b      	ldr	r3, [r3, #0]
9002a122:	d501      	bpl.n	9002a128 <_printf_i+0x1c4>
9002a124:	6019      	str	r1, [r3, #0]
9002a126:	e002      	b.n	9002a12e <_printf_i+0x1ca>
9002a128:	0670      	lsls	r0, r6, #25
9002a12a:	d5fb      	bpl.n	9002a124 <_printf_i+0x1c0>
9002a12c:	8019      	strh	r1, [r3, #0]
9002a12e:	2300      	movs	r3, #0
9002a130:	6123      	str	r3, [r4, #16]
9002a132:	4615      	mov	r5, r2
9002a134:	e7bc      	b.n	9002a0b0 <_printf_i+0x14c>
9002a136:	682b      	ldr	r3, [r5, #0]
9002a138:	1d1a      	adds	r2, r3, #4
9002a13a:	602a      	str	r2, [r5, #0]
9002a13c:	681d      	ldr	r5, [r3, #0]
9002a13e:	6862      	ldr	r2, [r4, #4]
9002a140:	2100      	movs	r1, #0
9002a142:	4628      	mov	r0, r5
9002a144:	f7d6 f8cc 	bl	900002e0 <memchr>
9002a148:	b108      	cbz	r0, 9002a14e <_printf_i+0x1ea>
9002a14a:	1b40      	subs	r0, r0, r5
9002a14c:	6060      	str	r0, [r4, #4]
9002a14e:	6863      	ldr	r3, [r4, #4]
9002a150:	6123      	str	r3, [r4, #16]
9002a152:	2300      	movs	r3, #0
9002a154:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a158:	e7aa      	b.n	9002a0b0 <_printf_i+0x14c>
9002a15a:	6923      	ldr	r3, [r4, #16]
9002a15c:	462a      	mov	r2, r5
9002a15e:	4649      	mov	r1, r9
9002a160:	4640      	mov	r0, r8
9002a162:	47d0      	blx	sl
9002a164:	3001      	adds	r0, #1
9002a166:	d0ad      	beq.n	9002a0c4 <_printf_i+0x160>
9002a168:	6823      	ldr	r3, [r4, #0]
9002a16a:	079b      	lsls	r3, r3, #30
9002a16c:	d413      	bmi.n	9002a196 <_printf_i+0x232>
9002a16e:	68e0      	ldr	r0, [r4, #12]
9002a170:	9b03      	ldr	r3, [sp, #12]
9002a172:	4298      	cmp	r0, r3
9002a174:	bfb8      	it	lt
9002a176:	4618      	movlt	r0, r3
9002a178:	e7a6      	b.n	9002a0c8 <_printf_i+0x164>
9002a17a:	2301      	movs	r3, #1
9002a17c:	4632      	mov	r2, r6
9002a17e:	4649      	mov	r1, r9
9002a180:	4640      	mov	r0, r8
9002a182:	47d0      	blx	sl
9002a184:	3001      	adds	r0, #1
9002a186:	d09d      	beq.n	9002a0c4 <_printf_i+0x160>
9002a188:	3501      	adds	r5, #1
9002a18a:	68e3      	ldr	r3, [r4, #12]
9002a18c:	9903      	ldr	r1, [sp, #12]
9002a18e:	1a5b      	subs	r3, r3, r1
9002a190:	42ab      	cmp	r3, r5
9002a192:	dcf2      	bgt.n	9002a17a <_printf_i+0x216>
9002a194:	e7eb      	b.n	9002a16e <_printf_i+0x20a>
9002a196:	2500      	movs	r5, #0
9002a198:	f104 0619 	add.w	r6, r4, #25
9002a19c:	e7f5      	b.n	9002a18a <_printf_i+0x226>
9002a19e:	bf00      	nop
9002a1a0:	9002df21 	.word	0x9002df21
9002a1a4:	9002df32 	.word	0x9002df32

9002a1a8 <__sflush_r>:
9002a1a8:	898a      	ldrh	r2, [r1, #12]
9002a1aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a1ae:	4605      	mov	r5, r0
9002a1b0:	0710      	lsls	r0, r2, #28
9002a1b2:	460c      	mov	r4, r1
9002a1b4:	d458      	bmi.n	9002a268 <__sflush_r+0xc0>
9002a1b6:	684b      	ldr	r3, [r1, #4]
9002a1b8:	2b00      	cmp	r3, #0
9002a1ba:	dc05      	bgt.n	9002a1c8 <__sflush_r+0x20>
9002a1bc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002a1be:	2b00      	cmp	r3, #0
9002a1c0:	dc02      	bgt.n	9002a1c8 <__sflush_r+0x20>
9002a1c2:	2000      	movs	r0, #0
9002a1c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a1c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a1ca:	2e00      	cmp	r6, #0
9002a1cc:	d0f9      	beq.n	9002a1c2 <__sflush_r+0x1a>
9002a1ce:	2300      	movs	r3, #0
9002a1d0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002a1d4:	682f      	ldr	r7, [r5, #0]
9002a1d6:	6a21      	ldr	r1, [r4, #32]
9002a1d8:	602b      	str	r3, [r5, #0]
9002a1da:	d032      	beq.n	9002a242 <__sflush_r+0x9a>
9002a1dc:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002a1de:	89a3      	ldrh	r3, [r4, #12]
9002a1e0:	075a      	lsls	r2, r3, #29
9002a1e2:	d505      	bpl.n	9002a1f0 <__sflush_r+0x48>
9002a1e4:	6863      	ldr	r3, [r4, #4]
9002a1e6:	1ac0      	subs	r0, r0, r3
9002a1e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002a1ea:	b10b      	cbz	r3, 9002a1f0 <__sflush_r+0x48>
9002a1ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002a1ee:	1ac0      	subs	r0, r0, r3
9002a1f0:	2300      	movs	r3, #0
9002a1f2:	4602      	mov	r2, r0
9002a1f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a1f6:	6a21      	ldr	r1, [r4, #32]
9002a1f8:	4628      	mov	r0, r5
9002a1fa:	47b0      	blx	r6
9002a1fc:	1c43      	adds	r3, r0, #1
9002a1fe:	89a3      	ldrh	r3, [r4, #12]
9002a200:	d106      	bne.n	9002a210 <__sflush_r+0x68>
9002a202:	6829      	ldr	r1, [r5, #0]
9002a204:	291d      	cmp	r1, #29
9002a206:	d82b      	bhi.n	9002a260 <__sflush_r+0xb8>
9002a208:	4a29      	ldr	r2, [pc, #164]	; (9002a2b0 <__sflush_r+0x108>)
9002a20a:	410a      	asrs	r2, r1
9002a20c:	07d6      	lsls	r6, r2, #31
9002a20e:	d427      	bmi.n	9002a260 <__sflush_r+0xb8>
9002a210:	2200      	movs	r2, #0
9002a212:	6062      	str	r2, [r4, #4]
9002a214:	04d9      	lsls	r1, r3, #19
9002a216:	6922      	ldr	r2, [r4, #16]
9002a218:	6022      	str	r2, [r4, #0]
9002a21a:	d504      	bpl.n	9002a226 <__sflush_r+0x7e>
9002a21c:	1c42      	adds	r2, r0, #1
9002a21e:	d101      	bne.n	9002a224 <__sflush_r+0x7c>
9002a220:	682b      	ldr	r3, [r5, #0]
9002a222:	b903      	cbnz	r3, 9002a226 <__sflush_r+0x7e>
9002a224:	6560      	str	r0, [r4, #84]	; 0x54
9002a226:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002a228:	602f      	str	r7, [r5, #0]
9002a22a:	2900      	cmp	r1, #0
9002a22c:	d0c9      	beq.n	9002a1c2 <__sflush_r+0x1a>
9002a22e:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002a232:	4299      	cmp	r1, r3
9002a234:	d002      	beq.n	9002a23c <__sflush_r+0x94>
9002a236:	4628      	mov	r0, r5
9002a238:	f7ff fc96 	bl	90029b68 <_free_r>
9002a23c:	2000      	movs	r0, #0
9002a23e:	6360      	str	r0, [r4, #52]	; 0x34
9002a240:	e7c0      	b.n	9002a1c4 <__sflush_r+0x1c>
9002a242:	2301      	movs	r3, #1
9002a244:	4628      	mov	r0, r5
9002a246:	47b0      	blx	r6
9002a248:	1c41      	adds	r1, r0, #1
9002a24a:	d1c8      	bne.n	9002a1de <__sflush_r+0x36>
9002a24c:	682b      	ldr	r3, [r5, #0]
9002a24e:	2b00      	cmp	r3, #0
9002a250:	d0c5      	beq.n	9002a1de <__sflush_r+0x36>
9002a252:	2b1d      	cmp	r3, #29
9002a254:	d001      	beq.n	9002a25a <__sflush_r+0xb2>
9002a256:	2b16      	cmp	r3, #22
9002a258:	d101      	bne.n	9002a25e <__sflush_r+0xb6>
9002a25a:	602f      	str	r7, [r5, #0]
9002a25c:	e7b1      	b.n	9002a1c2 <__sflush_r+0x1a>
9002a25e:	89a3      	ldrh	r3, [r4, #12]
9002a260:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a264:	81a3      	strh	r3, [r4, #12]
9002a266:	e7ad      	b.n	9002a1c4 <__sflush_r+0x1c>
9002a268:	690f      	ldr	r7, [r1, #16]
9002a26a:	2f00      	cmp	r7, #0
9002a26c:	d0a9      	beq.n	9002a1c2 <__sflush_r+0x1a>
9002a26e:	0793      	lsls	r3, r2, #30
9002a270:	680e      	ldr	r6, [r1, #0]
9002a272:	bf08      	it	eq
9002a274:	694b      	ldreq	r3, [r1, #20]
9002a276:	600f      	str	r7, [r1, #0]
9002a278:	bf18      	it	ne
9002a27a:	2300      	movne	r3, #0
9002a27c:	eba6 0807 	sub.w	r8, r6, r7
9002a280:	608b      	str	r3, [r1, #8]
9002a282:	f1b8 0f00 	cmp.w	r8, #0
9002a286:	dd9c      	ble.n	9002a1c2 <__sflush_r+0x1a>
9002a288:	6a21      	ldr	r1, [r4, #32]
9002a28a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002a28c:	4643      	mov	r3, r8
9002a28e:	463a      	mov	r2, r7
9002a290:	4628      	mov	r0, r5
9002a292:	47b0      	blx	r6
9002a294:	2800      	cmp	r0, #0
9002a296:	dc06      	bgt.n	9002a2a6 <__sflush_r+0xfe>
9002a298:	89a3      	ldrh	r3, [r4, #12]
9002a29a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a29e:	81a3      	strh	r3, [r4, #12]
9002a2a0:	f04f 30ff 	mov.w	r0, #4294967295
9002a2a4:	e78e      	b.n	9002a1c4 <__sflush_r+0x1c>
9002a2a6:	4407      	add	r7, r0
9002a2a8:	eba8 0800 	sub.w	r8, r8, r0
9002a2ac:	e7e9      	b.n	9002a282 <__sflush_r+0xda>
9002a2ae:	bf00      	nop
9002a2b0:	dfbffffe 	.word	0xdfbffffe

9002a2b4 <_fflush_r>:
9002a2b4:	b538      	push	{r3, r4, r5, lr}
9002a2b6:	690b      	ldr	r3, [r1, #16]
9002a2b8:	4605      	mov	r5, r0
9002a2ba:	460c      	mov	r4, r1
9002a2bc:	b913      	cbnz	r3, 9002a2c4 <_fflush_r+0x10>
9002a2be:	2500      	movs	r5, #0
9002a2c0:	4628      	mov	r0, r5
9002a2c2:	bd38      	pop	{r3, r4, r5, pc}
9002a2c4:	b118      	cbz	r0, 9002a2ce <_fflush_r+0x1a>
9002a2c6:	6a03      	ldr	r3, [r0, #32]
9002a2c8:	b90b      	cbnz	r3, 9002a2ce <_fflush_r+0x1a>
9002a2ca:	f7ff f9e1 	bl	90029690 <__sinit>
9002a2ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a2d2:	2b00      	cmp	r3, #0
9002a2d4:	d0f3      	beq.n	9002a2be <_fflush_r+0xa>
9002a2d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002a2d8:	07d0      	lsls	r0, r2, #31
9002a2da:	d404      	bmi.n	9002a2e6 <_fflush_r+0x32>
9002a2dc:	0599      	lsls	r1, r3, #22
9002a2de:	d402      	bmi.n	9002a2e6 <_fflush_r+0x32>
9002a2e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a2e2:	f7ff fbd3 	bl	90029a8c <__retarget_lock_acquire_recursive>
9002a2e6:	4628      	mov	r0, r5
9002a2e8:	4621      	mov	r1, r4
9002a2ea:	f7ff ff5d 	bl	9002a1a8 <__sflush_r>
9002a2ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002a2f0:	07da      	lsls	r2, r3, #31
9002a2f2:	4605      	mov	r5, r0
9002a2f4:	d4e4      	bmi.n	9002a2c0 <_fflush_r+0xc>
9002a2f6:	89a3      	ldrh	r3, [r4, #12]
9002a2f8:	059b      	lsls	r3, r3, #22
9002a2fa:	d4e1      	bmi.n	9002a2c0 <_fflush_r+0xc>
9002a2fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a2fe:	f7ff fbc6 	bl	90029a8e <__retarget_lock_release_recursive>
9002a302:	e7dd      	b.n	9002a2c0 <_fflush_r+0xc>

9002a304 <__swhatbuf_r>:
9002a304:	b570      	push	{r4, r5, r6, lr}
9002a306:	460c      	mov	r4, r1
9002a308:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a30c:	2900      	cmp	r1, #0
9002a30e:	b096      	sub	sp, #88	; 0x58
9002a310:	4615      	mov	r5, r2
9002a312:	461e      	mov	r6, r3
9002a314:	da0d      	bge.n	9002a332 <__swhatbuf_r+0x2e>
9002a316:	89a3      	ldrh	r3, [r4, #12]
9002a318:	f013 0f80 	tst.w	r3, #128	; 0x80
9002a31c:	f04f 0100 	mov.w	r1, #0
9002a320:	bf0c      	ite	eq
9002a322:	f44f 6380 	moveq.w	r3, #1024	; 0x400
9002a326:	2340      	movne	r3, #64	; 0x40
9002a328:	2000      	movs	r0, #0
9002a32a:	6031      	str	r1, [r6, #0]
9002a32c:	602b      	str	r3, [r5, #0]
9002a32e:	b016      	add	sp, #88	; 0x58
9002a330:	bd70      	pop	{r4, r5, r6, pc}
9002a332:	466a      	mov	r2, sp
9002a334:	f000 f848 	bl	9002a3c8 <_fstat_r>
9002a338:	2800      	cmp	r0, #0
9002a33a:	dbec      	blt.n	9002a316 <__swhatbuf_r+0x12>
9002a33c:	9901      	ldr	r1, [sp, #4]
9002a33e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
9002a342:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9002a346:	4259      	negs	r1, r3
9002a348:	4159      	adcs	r1, r3
9002a34a:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002a34e:	e7eb      	b.n	9002a328 <__swhatbuf_r+0x24>

9002a350 <__smakebuf_r>:
9002a350:	898b      	ldrh	r3, [r1, #12]
9002a352:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002a354:	079d      	lsls	r5, r3, #30
9002a356:	4606      	mov	r6, r0
9002a358:	460c      	mov	r4, r1
9002a35a:	d507      	bpl.n	9002a36c <__smakebuf_r+0x1c>
9002a35c:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002a360:	6023      	str	r3, [r4, #0]
9002a362:	6123      	str	r3, [r4, #16]
9002a364:	2301      	movs	r3, #1
9002a366:	6163      	str	r3, [r4, #20]
9002a368:	b002      	add	sp, #8
9002a36a:	bd70      	pop	{r4, r5, r6, pc}
9002a36c:	ab01      	add	r3, sp, #4
9002a36e:	466a      	mov	r2, sp
9002a370:	f7ff ffc8 	bl	9002a304 <__swhatbuf_r>
9002a374:	9900      	ldr	r1, [sp, #0]
9002a376:	4605      	mov	r5, r0
9002a378:	4630      	mov	r0, r6
9002a37a:	f7ff f875 	bl	90029468 <_malloc_r>
9002a37e:	b948      	cbnz	r0, 9002a394 <__smakebuf_r+0x44>
9002a380:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a384:	059a      	lsls	r2, r3, #22
9002a386:	d4ef      	bmi.n	9002a368 <__smakebuf_r+0x18>
9002a388:	f023 0303 	bic.w	r3, r3, #3
9002a38c:	f043 0302 	orr.w	r3, r3, #2
9002a390:	81a3      	strh	r3, [r4, #12]
9002a392:	e7e3      	b.n	9002a35c <__smakebuf_r+0xc>
9002a394:	89a3      	ldrh	r3, [r4, #12]
9002a396:	6020      	str	r0, [r4, #0]
9002a398:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002a39c:	81a3      	strh	r3, [r4, #12]
9002a39e:	9b00      	ldr	r3, [sp, #0]
9002a3a0:	6163      	str	r3, [r4, #20]
9002a3a2:	9b01      	ldr	r3, [sp, #4]
9002a3a4:	6120      	str	r0, [r4, #16]
9002a3a6:	b15b      	cbz	r3, 9002a3c0 <__smakebuf_r+0x70>
9002a3a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a3ac:	4630      	mov	r0, r6
9002a3ae:	f000 f81d 	bl	9002a3ec <_isatty_r>
9002a3b2:	b128      	cbz	r0, 9002a3c0 <__smakebuf_r+0x70>
9002a3b4:	89a3      	ldrh	r3, [r4, #12]
9002a3b6:	f023 0303 	bic.w	r3, r3, #3
9002a3ba:	f043 0301 	orr.w	r3, r3, #1
9002a3be:	81a3      	strh	r3, [r4, #12]
9002a3c0:	89a3      	ldrh	r3, [r4, #12]
9002a3c2:	431d      	orrs	r5, r3
9002a3c4:	81a5      	strh	r5, [r4, #12]
9002a3c6:	e7cf      	b.n	9002a368 <__smakebuf_r+0x18>

9002a3c8 <_fstat_r>:
9002a3c8:	b538      	push	{r3, r4, r5, lr}
9002a3ca:	4d07      	ldr	r5, [pc, #28]	; (9002a3e8 <_fstat_r+0x20>)
9002a3cc:	2300      	movs	r3, #0
9002a3ce:	4604      	mov	r4, r0
9002a3d0:	4608      	mov	r0, r1
9002a3d2:	4611      	mov	r1, r2
9002a3d4:	602b      	str	r3, [r5, #0]
9002a3d6:	f7d9 f8af 	bl	90003538 <_fstat>
9002a3da:	1c43      	adds	r3, r0, #1
9002a3dc:	d102      	bne.n	9002a3e4 <_fstat_r+0x1c>
9002a3de:	682b      	ldr	r3, [r5, #0]
9002a3e0:	b103      	cbz	r3, 9002a3e4 <_fstat_r+0x1c>
9002a3e2:	6023      	str	r3, [r4, #0]
9002a3e4:	bd38      	pop	{r3, r4, r5, pc}
9002a3e6:	bf00      	nop
9002a3e8:	2403a564 	.word	0x2403a564

9002a3ec <_isatty_r>:
9002a3ec:	b538      	push	{r3, r4, r5, lr}
9002a3ee:	4d06      	ldr	r5, [pc, #24]	; (9002a408 <_isatty_r+0x1c>)
9002a3f0:	2300      	movs	r3, #0
9002a3f2:	4604      	mov	r4, r0
9002a3f4:	4608      	mov	r0, r1
9002a3f6:	602b      	str	r3, [r5, #0]
9002a3f8:	f7d9 f8a4 	bl	90003544 <_isatty>
9002a3fc:	1c43      	adds	r3, r0, #1
9002a3fe:	d102      	bne.n	9002a406 <_isatty_r+0x1a>
9002a400:	682b      	ldr	r3, [r5, #0]
9002a402:	b103      	cbz	r3, 9002a406 <_isatty_r+0x1a>
9002a404:	6023      	str	r3, [r4, #0]
9002a406:	bd38      	pop	{r3, r4, r5, pc}
9002a408:	2403a564 	.word	0x2403a564

9002a40c <_sbrk>:
9002a40c:	4a04      	ldr	r2, [pc, #16]	; (9002a420 <_sbrk+0x14>)
9002a40e:	6811      	ldr	r1, [r2, #0]
9002a410:	4603      	mov	r3, r0
9002a412:	b909      	cbnz	r1, 9002a418 <_sbrk+0xc>
9002a414:	4903      	ldr	r1, [pc, #12]	; (9002a424 <_sbrk+0x18>)
9002a416:	6011      	str	r1, [r2, #0]
9002a418:	6810      	ldr	r0, [r2, #0]
9002a41a:	4403      	add	r3, r0
9002a41c:	6013      	str	r3, [r2, #0]
9002a41e:	4770      	bx	lr
9002a420:	2403a704 	.word	0x2403a704
9002a424:	2403a708 	.word	0x2403a708

9002a428 <_init>:
9002a428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a42a:	bf00      	nop
9002a42c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a42e:	bc08      	pop	{r3}
9002a430:	469e      	mov	lr, r3
9002a432:	4770      	bx	lr

9002a434 <_fini>:
9002a434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a436:	bf00      	nop
9002a438:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a43a:	bc08      	pop	{r3}
9002a43c:	469e      	mov	lr, r3
9002a43e:	4770      	bx	lr
