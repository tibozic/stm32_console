
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a2a0  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003b18  9002a540  9002a540  0004a540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002e058  9002e058  0004e058  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002e160  9002e160  00554260  2**0
                  CONTENTS
  6 .ARM          00000000  9002e160  9002e160  00554260  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002e160  9002e160  00554260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000020  9002e160  9002e160  0004e160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000010  9002e180  9002e180  0004e180  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000164  24000000  9002e190  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000164  9002e2f4  00050164  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00034ba0  24005b68  90033cf4  00055b68  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a708  90033cf4  0005a708  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00554260  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 00002210  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 00000130  90202210  90202210  00062210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 004f1f20  90202340  90202340  00062340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00560000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00560000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  0055428e  2**0
                  CONTENTS, READONLY
 21 .debug_line   00083572  00000000  00000000  00554350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  005d78c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   00141e20  00000000  00000000  005d791e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001ccc4  00000000  00000000  0071973e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 00003878  00000000  00000000  00736408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a33d5  00000000  00000000  00739c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 0000a00d  00000000  00000000  008dd055  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  0004a3d1  00000000  00000000  008e7062  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000b20c  00000000  00000000  00931434  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003efb0  00000000  00000000  0093c640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b68 	.word	0x24005b68
900002bc:	00000000 	.word	0x00000000
900002c0:	9002a528 	.word	0x9002a528

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b6c 	.word	0x24005b6c
900002dc:	9002a528 	.word	0x9002a528

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f00a f98b 	bl	9000a6c4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f029 fbc9 	bl	90029b44 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb55 	bl	90002a60 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002e190 	.word	0x9002e190
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000164 	.word	0x24000164
  ldr  r2, =_sbss
900003c8:	24005b68 	.word	0x24005b68
  ldr  r3, = _ebss
900003cc:	2403a708 	.word	0x2403a708

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed3 	bl	90002188 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be53 	b.w	90002090 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bece 	b.w	9000218c <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f029 f80b 	bl	90029464 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f00a f816 	bl	9000a4e0 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f00a f88f 	bl	9000a5fc <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f028 ffb5 	bl	90029464 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f00a fddf 	bl	9000b0c8 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f00a fdd7 	bl	9000b0c8 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f00a fdcf 	bl	9000b0c8 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f00a fdc7 	bl	9000b0c8 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b84 	.word	0x24005b84
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f00a bdb1 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f00a bda8 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f00a bd9f 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f00a bd96 	b.w	9000b0d4 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b84 	.word	0x24005b84
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f00a bd7d 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f00a bd74 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f00a bd6b 	b.w	9000b0d4 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f00a bd62 	b.w	9000b0d4 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b84 	.word	0x24005b84
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f00a bd52 	b.w	9000b0dc <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f00a bd4e 	b.w	9000b0dc <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f00a bd4a 	b.w	9000b0dc <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f00a bd46 	b.w	9000b0dc <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039acb 	.word	0x24039acb

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f028 fefa 	bl	900294c0 <__assert_func>
900006cc:	24039ac0 	.word	0x24039ac0
900006d0:	24039ac2 	.word	0x24039ac2
900006d4:	24039ac6 	.word	0x24039ac6
900006d8:	24039ac8 	.word	0x24039ac8
900006dc:	9002a5c0 	.word	0x9002a5c0
900006e0:	9002a624 	.word	0x9002a624
900006e4:	9002a668 	.word	0x9002a668

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f013 f966 	bl	900139bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be3c 	b.w	9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be40 	b.w	90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff25 	bl	90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdea 	b.w	90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bff8 	b.w	90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe2 	b.w	9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdee 	b.w	90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f012 fca0 	bl	900130b4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f012 bb6e 	b.w	90012e60 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f028 fe6b 	bl	90029464 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24039ac4 	.word	0x24039ac4
900007e4:	24039ac2 	.word	0x24039ac2
900007e8:	24039ac0 	.word	0x24039ac0

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f028 fe3f 	bl	900294c0 <__assert_func>
90000842:	bf00      	nop
90000844:	24039aca 	.word	0x24039aca
90000848:	90000675 	.word	0x90000675
9000084c:	24039acb 	.word	0x24039acb
90000850:	9002a6b0 	.word	0x9002a6b0
90000854:	9002a6e8 	.word	0x9002a6e8
90000858:	9002a668 	.word	0x9002a668

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f00a fc26 	bl	9000b0d4 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f00a fc21 	bl	9000b0d4 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f00a fc1c 	bl	9000b0d4 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f013 f887 	bl	900139bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff48 	bl	90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f028 fdc4 	bl	900294c0 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039aca 	.word	0x24039aca
90000944:	d0000000 	.word	0xd0000000
90000948:	24039acb 	.word	0x24039acb
9000094c:	9002a6b0 	.word	0x9002a6b0
90000950:	9002a6e8 	.word	0x9002a6e8
90000954:	9002a668 	.word	0x9002a668

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f013 f845 	bl	900139f0 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f013 f83f 	bl	900139f0 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039acc 	.word	0x24039acc

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f028 fd7e 	bl	900294c0 <__assert_func>
900009c4:	9002a814 	.word	0x9002a814
900009c8:	9002a810 	.word	0x9002a810
900009cc:	9002a870 	.word	0x9002a870

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f028 fd45 	bl	90029464 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f00b fc5d 	bl	9000c334 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00f f891 	bl	9000fc00 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f00b fd60 	bl	9000c5c4 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005ba0 	.word	0x24005ba0
90000b14:	24005bcc 	.word	0x24005bcc
90000b18:	24005b98 	.word	0x24005b98
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b9c 	.word	0x24005b9c
90000b24:	24005bbc 	.word	0x24005bbc
90000b28:	24005bc8 	.word	0x24005bc8
90000b2c:	24005bc4 	.word	0x24005bc4
90000b30:	24005bd0 	.word	0x24005bd0
90000b34:	24005bd4 	.word	0x24005bd4
90000b38:	24005bc0 	.word	0x24005bc0
90000b3c:	24009568 	.word	0x24009568
90000b40:	24005bdc 	.word	0x24005bdc
90000b44:	24005bd8 	.word	0x24005bd8
90000b48:	24005bb8 	.word	0x24005bb8
90000b4c:	24005b94 	.word	0x24005b94

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f028 fc60 	bl	900294c0 <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	9002a8c0 	.word	0x9002a8c0
90000c08:	9002a8d4 	.word	0x9002a8d4
90000c0c:	9002a870 	.word	0x9002a870

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f00b fb17 	bl	9000c334 <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f00b fc25 	bl	9000c5c4 <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f028 fb91 	bl	900294c0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bbc 	.word	0x24005bbc
90000db4:	24005bcc 	.word	0x24005bcc
90000db8:	24005ba0 	.word	0x24005ba0
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc8 	.word	0x24005bc8
90000dc4:	24005b9c 	.word	0x24005b9c
90000dc8:	24005bd0 	.word	0x24005bd0
90000dcc:	24009568 	.word	0x24009568
90000dd0:	24005bd4 	.word	0x24005bd4
90000dd4:	24005bc4 	.word	0x24005bc4
90000dd8:	24005bc0 	.word	0x24005bc0
90000ddc:	9002a8c0 	.word	0x9002a8c0
90000de0:	9002a8d4 	.word	0x9002a8d4
90000de4:	9002a870 	.word	0x9002a870
90000de8:	24005bd8 	.word	0x24005bd8
90000dec:	24005b98 	.word	0x24005b98
90000df0:	24005bb8 	.word	0x24005bb8
90000df4:	24005b94 	.word	0x24005b94

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f028 fac8 	bl	900294c0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f028 fac0 	bl	900294c0 <__assert_func>
90000f40:	9002a8c0 	.word	0x9002a8c0
90000f44:	9002a8d4 	.word	0x9002a8d4
90000f48:	9002a870 	.word	0x9002a870
90000f4c:	9002a918 	.word	0x9002a918
90000f50:	9002a964 	.word	0x9002a964

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f028 fa0f 	bl	900294c0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f028 fa06 	bl	900294c0 <__assert_func>
900010b4:	9002a918 	.word	0x9002a918
900010b8:	9002a998 	.word	0x9002a998
900010bc:	9002a870 	.word	0x9002a870
900010c0:	9002a8c0 	.word	0x9002a8c0
900010c4:	9002a8d4 	.word	0x9002a8d4

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00e fd32 	bl	9000fb60 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	9002aabc 	.word	0x9002aabc
9000110c:	24005bdc 	.word	0x24005bdc

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f028 fc3a 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f028 fc2f 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f028 fc22 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f028 fc07 	bl	900299e0 <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f028 fbf8 	bl	900299e0 <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f028 fbc7 	bl	900299e0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f028 fb88 	bl	900299e0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f028 facd 	bl	900299e0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	9002a9f4 	.word	0x9002a9f4
90001460:	9002aaac 	.word	0x9002aaac
90001464:	9002aaa4 	.word	0x9002aaa4
90001468:	9002aa9c 	.word	0x9002aa9c
9000146c:	9002aa84 	.word	0x9002aa84
90001470:	9002aa8c 	.word	0x9002aa8c
90001474:	9002aa94 	.word	0x9002aa94
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f028 faa8 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f028 fa9e 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f028 fa92 	bl	900299e0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f028 fa85 	bl	900299e0 <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f027 ffbd 	bl	900294c0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f027 ffb3 	bl	900294c0 <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f027 ffac 	bl	900294c0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f027 ffa2 	bl	900294c0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f027 ff98 	bl	900294c0 <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	9002a9f4 	.word	0x9002a9f4
9000159c:	9002aaac 	.word	0x9002aaac
900015a0:	9002aaa4 	.word	0x9002aaa4
900015a4:	9002aa9c 	.word	0x9002aa9c
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	9002a8c0 	.word	0x9002a8c0
900015b0:	9002a8d4 	.word	0x9002a8d4
900015b4:	9002a870 	.word	0x9002a870
900015b8:	9002a9fc 	.word	0x9002a9fc
900015bc:	9002aa18 	.word	0x9002aa18
900015c0:	9002aa78 	.word	0x9002aa78
900015c4:	9002aa60 	.word	0x9002aa60
900015c8:	9002aa48 	.word	0x9002aa48

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bb4 	.word	0x24005bb4

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f00a bec4 	b.w	9000c428 <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc8 	.word	0x24005bc8
900016a4:	24005bd4 	.word	0x24005bd4
900016a8:	24005bd0 	.word	0x24005bd0

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f00a fe93 	bl	9000c430 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f00a fe4c 	bl	9000c3b8 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00e ba99 	b.w	9000fc68 <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd8 	.word	0x24005bd8
9000173c:	24000008 	.word	0x24000008
90001740:	24005b9c 	.word	0x24005b9c
90001744:	24005ba0 	.word	0x24005ba0
90001748:	24005bb8 	.word	0x24005bb8
9000174c:	24005bcc 	.word	0x24005bcc
90001750:	24005bdc 	.word	0x24005bdc

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bc4 	.word	0x24005bc4

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005ba0 	.word	0x24005ba0
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bb4 	.word	0x24005bb4
900017e0:	24005bbc 	.word	0x24005bbc
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00e ba24 	b.w	9000fc68 <osSemaphoreRelease>
90001820:	24005b98 	.word	0x24005b98
90001824:	24005bb4 	.word	0x24005bb4
90001828:	24005ba0 	.word	0x24005ba0
9000182c:	24005b94 	.word	0x24005b94
90001830:	24005bdc 	.word	0x24005bdc

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00e f990 	bl	9000fb60 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00e fa38 	bl	9000fcc0 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f027 fe2e 	bl	900294c0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f027 fe28 	bl	900294c0 <__assert_func>
90001870:	24005be4 	.word	0x24005be4
90001874:	24005be0 	.word	0x24005be0
90001878:	9002aaf8 	.word	0x9002aaf8
9000187c:	9002ab44 	.word	0x9002ab44
90001880:	9002ab74 	.word	0x9002ab74
90001884:	9002abb8 	.word	0x9002abb8

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00e b9b6 	b.w	9000fc00 <osSemaphoreAcquire>
90001894:	24005be4 	.word	0x24005be4

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00e b9e4 	b.w	9000fc68 <osSemaphoreRelease>
900018a0:	24005be4 	.word	0x24005be4

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00e b9a9 	b.w	9000fc00 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005be4 	.word	0x24005be4

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00e b9d6 	b.w	9000fc68 <osSemaphoreRelease>
900018bc:	24005be4 	.word	0x24005be4

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00e ba37 	b.w	9000fd3c <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005be0 	.word	0x24005be0
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00e fa6b 	bl	9000fdc0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00e fa64 	bl	9000fdc0 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005be0 	.word	0x24005be0

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	9002ad58 	.word	0x9002ad58
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	24009500 	.word	0x24009500
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f027 fd5f 	bl	90029464 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	9002ad58 	.word	0x9002ad58
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00e f888 	bl	9000fad4 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00e b898 	b.w	9000fb1c <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00e b889 	b.w	9000fb1c <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b98 	.word	0x24005b98
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b98 	.word	0x24005b98
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b94 	.word	0x24005b94

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f027 fcb7 	bl	900294c0 <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	9002abfc 	.word	0x9002abfc
90001b68:	9002ac18 	.word	0x9002ac18
90001b6c:	9002ac64 	.word	0x9002ac64

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f027 fbda 	bl	900294c0 <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f027 fbd4 	bl	900294c0 <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f027 fbcd 	bl	900294c0 <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	9002abfc 	.word	0x9002abfc
90001d44:	9002aca8 	.word	0x9002aca8
90001d48:	9002ac64 	.word	0x9002ac64
90001d4c:	9002ac18 	.word	0x9002ac18
90001d50:	9002acf4 	.word	0x9002acf4
90001d54:	9002ad10 	.word	0x9002ad10

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039acc 	.word	0x24039acc
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b98 	.word	0x24005b98
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b94 	.word	0x24005b94

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f011 ff2b 	bl	90013c78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00d fe0b 	bl	9000fa54 <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	9002ad58 	.word	0x9002ad58

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2040      	movs	r0, #64	; 0x40
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ec4:	3008      	adds	r0, #8
90001ec6:	4770      	bx	lr

90001ec8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ec8:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90001ecc:	3008      	adds	r0, #8
90001ece:	4770      	bx	lr

90001ed0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed0:	2001      	movs	r0, #1
90001ed2:	4770      	bx	lr

90001ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ed4:	f242 70bc 	movw	r0, #10172	; 0x27bc
90001ed8:	4770      	bx	lr
90001eda:	bf00      	nop

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001edc:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001ee0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ee4:	3008      	adds	r0, #8
90001ee6:	4770      	bx	lr

90001ee8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee8:	f242 73bc 	movw	r3, #10172	; 0x27bc
90001eec:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef0:	3008      	adds	r0, #8
90001ef2:	4770      	bx	lr

90001ef4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ef4:	2001      	movs	r0, #1
90001ef6:	4770      	bx	lr

90001ef8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001ef8:	2010      	movs	r0, #16
90001efa:	4770      	bx	lr

90001efc <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001efc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f00:	3008      	adds	r0, #8
90001f02:	4770      	bx	lr

90001f04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f0c:	4608      	mov	r0, r1
90001f0e:	f002 b973 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f12:	bf00      	nop

90001f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f14:	4b03      	ldr	r3, [pc, #12]	; (90001f24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f16:	b510      	push	{r4, lr}
90001f18:	4604      	mov	r4, r0
90001f1a:	6003      	str	r3, [r0, #0]
90001f1c:	f010 fcf9 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f20:	4620      	mov	r0, r4
90001f22:	bd10      	pop	{r4, pc}
90001f24:	9002ae10 	.word	0x9002ae10

90001f28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f28:	4b05      	ldr	r3, [pc, #20]	; (90001f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f2a:	b510      	push	{r4, lr}
90001f2c:	4604      	mov	r4, r0
90001f2e:	6003      	str	r3, [r0, #0]
90001f30:	f010 fcef 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f34:	2148      	movs	r1, #72	; 0x48
90001f36:	4620      	mov	r0, r4
90001f38:	f027 fa94 	bl	90029464 <_ZdlPvj>
90001f3c:	4620      	mov	r0, r4
90001f3e:	bd10      	pop	{r4, pc}
90001f40:	9002ae10 	.word	0x9002ae10

90001f44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f44:	4b03      	ldr	r3, [pc, #12]	; (90001f54 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f46:	b510      	push	{r4, lr}
90001f48:	4604      	mov	r4, r0
90001f4a:	6003      	str	r3, [r0, #0]
90001f4c:	f010 fce1 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f50:	4620      	mov	r0, r4
90001f52:	bd10      	pop	{r4, pc}
90001f54:	9002addc 	.word	0x9002addc

90001f58 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f58:	4b06      	ldr	r3, [pc, #24]	; (90001f74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f5a:	b510      	push	{r4, lr}
90001f5c:	4604      	mov	r4, r0
90001f5e:	6003      	str	r3, [r0, #0]
90001f60:	f010 fcd7 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f64:	f242 71c4 	movw	r1, #10180	; 0x27c4
90001f68:	4620      	mov	r0, r4
90001f6a:	f027 fa7b 	bl	90029464 <_ZdlPvj>
90001f6e:	4620      	mov	r0, r4
90001f70:	bd10      	pop	{r4, pc}
90001f72:	bf00      	nop
90001f74:	9002addc 	.word	0x9002addc

90001f78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f78:	4b03      	ldr	r3, [pc, #12]	; (90001f88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f7a:	b510      	push	{r4, lr}
90001f7c:	4604      	mov	r4, r0
90001f7e:	6003      	str	r3, [r0, #0]
90001f80:	f010 fcc7 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f84:	4620      	mov	r0, r4
90001f86:	bd10      	pop	{r4, pc}
90001f88:	9002ada8 	.word	0x9002ada8

90001f8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f8c:	4b05      	ldr	r3, [pc, #20]	; (90001fa4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_space_invadersPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f8e:	b510      	push	{r4, lr}
90001f90:	4604      	mov	r4, r0
90001f92:	6003      	str	r3, [r0, #0]
90001f94:	f010 fcbd 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f98:	2118      	movs	r1, #24
90001f9a:	4620      	mov	r0, r4
90001f9c:	f027 fa62 	bl	90029464 <_ZdlPvj>
90001fa0:	4620      	mov	r0, r4
90001fa2:	bd10      	pop	{r4, pc}
90001fa4:	9002ada8 	.word	0x9002ada8

90001fa8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fa8:	b510      	push	{r4, lr}
90001faa:	4604      	mov	r4, r0
90001fac:	490c      	ldr	r1, [pc, #48]	; (90001fe0 <_ZN12FrontendHeapD1Ev+0x38>)
90001fae:	4a0d      	ldr	r2, [pc, #52]	; (90001fe4 <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb0:	f242 70f0 	movw	r0, #10224	; 0x27f0
90001fb4:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fb8:	6021      	str	r1, [r4, #0]
90001fba:	4420      	add	r0, r4
90001fbc:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90001fc0:	f010 fca7 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fc4:	4620      	mov	r0, r4
90001fc6:	4b08      	ldr	r3, [pc, #32]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x40>)
90001fc8:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fcc:	f010 fca1 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd0:	4620      	mov	r0, r4
90001fd2:	4b06      	ldr	r3, [pc, #24]	; (90001fec <_ZN12FrontendHeapD1Ev+0x44>)
90001fd4:	f840 3f14 	str.w	r3, [r0, #20]!
90001fd8:	f010 fc9b 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fdc:	4620      	mov	r0, r4
90001fde:	bd10      	pop	{r4, pc}
90001fe0:	9002ae44 	.word	0x9002ae44
90001fe4:	9002ae10 	.word	0x9002ae10
90001fe8:	9002addc 	.word	0x9002addc
90001fec:	9002ada8 	.word	0x9002ada8

90001ff0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ff2:	4c0c      	ldr	r4, [pc, #48]	; (90002024 <__tcf_0+0x34>)
90001ff4:	4a0c      	ldr	r2, [pc, #48]	; (90002028 <__tcf_0+0x38>)
90001ff6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001ffa:	490c      	ldr	r1, [pc, #48]	; (9000202c <__tcf_0+0x3c>)
90001ffc:	480c      	ldr	r0, [pc, #48]	; (90002030 <__tcf_0+0x40>)
90001ffe:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002002:	6021      	str	r1, [r4, #0]
90002004:	f010 fc85 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002008:	4620      	mov	r0, r4
9000200a:	4b0a      	ldr	r3, [pc, #40]	; (90002034 <__tcf_0+0x44>)
9000200c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002010:	f010 fc7f 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002014:	4620      	mov	r0, r4
90002016:	4b08      	ldr	r3, [pc, #32]	; (90002038 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000201c:	f840 3f14 	str.w	r3, [r0, #20]!
90002020:	f010 bc77 	b.w	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002024:	24005bec 	.word	0x24005bec
90002028:	9002ae10 	.word	0x9002ae10
9000202c:	9002ae44 	.word	0x9002ae44
90002030:	240083dc 	.word	0x240083dc
90002034:	9002addc 	.word	0x9002addc
90002038:	9002ada8 	.word	0x9002ada8

9000203c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
9000203c:	b510      	push	{r4, lr}
9000203e:	4604      	mov	r4, r0
90002040:	4a0f      	ldr	r2, [pc, #60]	; (90002080 <_ZN12FrontendHeapD0Ev+0x44>)
90002042:	4910      	ldr	r1, [pc, #64]	; (90002084 <_ZN12FrontendHeapD0Ev+0x48>)
90002044:	f242 70f0 	movw	r0, #10224	; 0x27f0
90002048:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000204c:	6021      	str	r1, [r4, #0]
9000204e:	4420      	add	r0, r4
90002050:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002054:	f010 fc5d 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002058:	4620      	mov	r0, r4
9000205a:	4b0b      	ldr	r3, [pc, #44]	; (90002088 <_ZN12FrontendHeapD0Ev+0x4c>)
9000205c:	f840 3f2c 	str.w	r3, [r0, #44]!
90002060:	f010 fc57 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002064:	4b09      	ldr	r3, [pc, #36]	; (9000208c <_ZN12FrontendHeapD0Ev+0x50>)
90002066:	4620      	mov	r0, r4
90002068:	f840 3f14 	str.w	r3, [r0, #20]!
9000206c:	f010 fc51 	bl	90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002070:	4620      	mov	r0, r4
90002072:	f642 1198 	movw	r1, #10648	; 0x2998
90002076:	f027 f9f5 	bl	90029464 <_ZdlPvj>
9000207a:	4620      	mov	r0, r4
9000207c:	bd10      	pop	{r4, pc}
9000207e:	bf00      	nop
90002080:	9002ae10 	.word	0x9002ae10
90002084:	9002ae44 	.word	0x9002ae44
90002088:	9002addc 	.word	0x9002addc
9000208c:	9002ada8 	.word	0x9002ada8

90002090 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002094:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002096:	2400      	movs	r4, #0
90002098:	f001 fa76 	bl	90003588 <_ZN14BitmapDatabase11getInstanceEv>
9000209c:	4605      	mov	r5, r0
9000209e:	f001 fa77 	bl	90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020a2:	4623      	mov	r3, r4
900020a4:	4601      	mov	r1, r0
900020a6:	4622      	mov	r2, r4
900020a8:	4628      	mov	r0, r5
900020aa:	9400      	str	r4, [sp, #0]
900020ac:	f019 fa32 	bl	9001b514 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b0:	4b29      	ldr	r3, [pc, #164]	; (90002158 <touchgfx_init+0xc8>)
900020b2:	4a2a      	ldr	r2, [pc, #168]	; (9000215c <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020b4:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020b6:	4c2a      	ldr	r4, [pc, #168]	; (90002160 <touchgfx_init+0xd0>)
900020b8:	601a      	str	r2, [r3, #0]
900020ba:	f002 fa87 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020be:	4829      	ldr	r0, [pc, #164]	; (90002164 <touchgfx_init+0xd4>)
900020c0:	f019 f990 	bl	9001b3e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020c4:	6823      	ldr	r3, [r4, #0]
900020c6:	f3bf 8f5b 	dmb	ish
900020ca:	07db      	lsls	r3, r3, #31
900020cc:	d505      	bpl.n	900020da <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020ce:	4826      	ldr	r0, [pc, #152]	; (90002168 <touchgfx_init+0xd8>)
}
900020d0:	b002      	add	sp, #8
900020d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020d6:	f7fe bbfb 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020da:	4620      	mov	r0, r4
900020dc:	f027 f9c4 	bl	90029468 <__cxa_guard_acquire>
900020e0:	2800      	cmp	r0, #0
900020e2:	d0f4      	beq.n	900020ce <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020e4:	4d21      	ldr	r5, [pc, #132]	; (9000216c <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020e6:	4f22      	ldr	r7, [pc, #136]	; (90002170 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020e8:	4b22      	ldr	r3, [pc, #136]	; (90002174 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020ea:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020ee:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
900020f2:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020f6:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
900020f8:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
900020fa:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
900020fc:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
900020fe:	f8c5 8008 	str.w	r8, [r5, #8]
90002102:	f010 fc07 	bl	90012914 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002106:	4b1c      	ldr	r3, [pc, #112]	; (90002178 <touchgfx_init+0xe8>)
90002108:	4640      	mov	r0, r8
9000210a:	616b      	str	r3, [r5, #20]
9000210c:	f010 fc02 	bl	90012914 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002110:	4b1a      	ldr	r3, [pc, #104]	; (9000217c <touchgfx_init+0xec>)
90002112:	4638      	mov	r0, r7
90002114:	62eb      	str	r3, [r5, #44]	; 0x2c
90002116:	f010 fbfd 	bl	90012914 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000211a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000211e:	4a18      	ldr	r2, [pc, #96]	; (90002180 <touchgfx_init+0xf0>)
90002120:	f603 0038 	addw	r0, r3, #2104	; 0x838
90002124:	f8c3 27f0 	str.w	r2, [r3, #2032]	; 0x7f0
90002128:	f005 fbb0 	bl	9000788c <_ZN5ModelC1Ev>
9000212c:	462a      	mov	r2, r5
9000212e:	f107 0148 	add.w	r1, r7, #72	; 0x48
90002132:	4630      	mov	r0, r6
90002134:	f005 fba0 	bl	90007878 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002138:	4630      	mov	r0, r6
9000213a:	f002 f85d 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
9000213e:	4811      	ldr	r0, [pc, #68]	; (90002184 <touchgfx_init+0xf4>)
90002140:	f027 f9dc 	bl	900294fc <atexit>
90002144:	4620      	mov	r0, r4
90002146:	f027 f99b 	bl	90029480 <__cxa_guard_release>
9000214a:	4807      	ldr	r0, [pc, #28]	; (90002168 <touchgfx_init+0xd8>)
}
9000214c:	b002      	add	sp, #8
9000214e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002152:	f7fe bbbd 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
90002156:	bf00      	nop
90002158:	24039b30 	.word	0x24039b30
9000215c:	240093b8 	.word	0x240093b8
90002160:	24005be8 	.word	0x24005be8
90002164:	2400002c 	.word	0x2400002c
90002168:	24009330 	.word	0x24009330
9000216c:	24005bec 	.word	0x24005bec
90002170:	240083dc 	.word	0x240083dc
90002174:	9002ae44 	.word	0x9002ae44
90002178:	9002ada8 	.word	0x9002ada8
9000217c:	9002addc 	.word	0x9002addc
90002180:	9002ae10 	.word	0x9002ae10
90002184:	90001ff1 	.word	0x90001ff1

90002188 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002188:	4770      	bx	lr
9000218a:	bf00      	nop

9000218c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
9000218c:	4801      	ldr	r0, [pc, #4]	; (90002194 <touchgfx_taskEntry+0x8>)
9000218e:	f7fe bb65 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002192:	bf00      	nop
90002194:	24009330 	.word	0x24009330

90002198 <_GLOBAL__sub_I_touchgfx_init>:
}
90002198:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000219a:	4b25      	ldr	r3, [pc, #148]	; (90002230 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000219c:	4c25      	ldr	r4, [pc, #148]	; (90002234 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000219e:	4e26      	ldr	r6, [pc, #152]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a0:	4d26      	ldr	r5, [pc, #152]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021a2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021a4:	4630      	mov	r0, r6
900021a6:	f7ff fe2d 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021aa:	4628      	mov	r0, r5
900021ac:	f01d fc8a 	bl	9001fac4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b0:	4b23      	ldr	r3, [pc, #140]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021b2:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021b4:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021b8:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021bc:	62da      	str	r2, [r3, #44]	; 0x2c
900021be:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c0:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021c2:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021c6:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021c8:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021ca:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021ce:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021d2:	4c1c      	ldr	r4, [pc, #112]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021d4:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021d6:	4c1c      	ldr	r4, [pc, #112]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021d8:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021dc:	8020      	strh	r0, [r4, #0]
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e0:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021e4:	481c      	ldr	r0, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021e6:	8021      	strh	r1, [r4, #0]
900021e8:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021ec:	491c      	ldr	r1, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021ee:	481d      	ldr	r0, [pc, #116]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f0:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021f4:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
900021f8:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
900021fe:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002202:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002206:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000220a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000220e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002212:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002216:	7022      	strb	r2, [r4, #0]
90002218:	6019      	str	r1, [r3, #0]
9000221a:	4913      	ldr	r1, [pc, #76]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000221c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002220:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002224:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002228:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000222a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000222e:	bd70      	pop	{r4, r5, r6, pc}
90002230:	9002a5b0 	.word	0x9002a5b0
90002234:	24008584 	.word	0x24008584
90002238:	24008588 	.word	0x24008588
9000223c:	240093bc 	.word	0x240093bc
90002240:	24009330 	.word	0x24009330
90002244:	01000001 	.word	0x01000001
90002248:	24039acc 	.word	0x24039acc
9000224c:	24039ac0 	.word	0x24039ac0
90002250:	24039ac6 	.word	0x24039ac6
90002254:	24039ac2 	.word	0x24039ac2
90002258:	24039ac8 	.word	0x24039ac8
9000225c:	24039ac4 	.word	0x24039ac4
90002260:	9002a740 	.word	0x9002a740
90002264:	01010000 	.word	0x01010000
90002268:	9002a588 	.word	0x9002a588

9000226c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
9000226c:	4801      	ldr	r0, [pc, #4]	; (90002274 <_GLOBAL__sub_D_touchgfx_init+0x8>)
9000226e:	f7ff bb4d 	b.w	9000190c <_ZN8STM32DMAD1Ev>
90002272:	bf00      	nop
90002274:	24008588 	.word	0x24008588

90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002278:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9000227c:	b112      	cbz	r2, 90002284 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
9000227e:	6803      	ldr	r3, [r0, #0]
90002280:	695b      	ldr	r3, [r3, #20]
90002282:	4718      	bx	r3
        }
    }
90002284:	4770      	bx	lr
90002286:	bf00      	nop

90002288 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002288:	2000      	movs	r0, #0
9000228a:	4770      	bx	lr

9000228c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
9000228c:	8081      	strh	r1, [r0, #4]
    }
9000228e:	4770      	bx	lr

90002290 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002290:	80c1      	strh	r1, [r0, #6]
    }
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002294:	8101      	strh	r1, [r0, #8]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002298:	8141      	strh	r1, [r0, #10]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000229c:	4770      	bx	lr
9000229e:	bf00      	nop

900022a0 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a0:	4770      	bx	lr
900022a2:	bf00      	nop

900022a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b0:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022b4:	6803      	ldr	r3, [r0, #0]
900022b6:	eba2 020c 	sub.w	r2, r2, ip
900022ba:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c0:	eba1 010c 	sub.w	r1, r1, ip
900022c4:	b212      	sxth	r2, r2
900022c6:	b209      	sxth	r1, r1
900022c8:	4718      	bx	r3
900022ca:	bf00      	nop

900022cc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022cc:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022ce:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022d2:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022da:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022de:	6010      	str	r0, [r2, #0]
    }
900022e0:	4770      	bx	lr
900022e2:	bf00      	nop

900022e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022e4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022e8:	b11a      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022ea:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022ee:	b102      	cbz	r2, 900022f2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f0:	6018      	str	r0, [r3, #0]
        }
    }
900022f2:	4770      	bx	lr

900022f4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022f4:	2000      	movs	r0, #0
900022f6:	4770      	bx	lr

900022f8 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
900022f8:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
900022fa:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
900022fc:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
900022fe:	809a      	strh	r2, [r3, #4]
    }
90002300:	4770      	bx	lr
90002302:	bf00      	nop

90002304 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002304:	4770      	bx	lr
90002306:	bf00      	nop

90002308 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002308:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002310:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002318:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000231c:	688a      	ldr	r2, [r1, #8]
9000231e:	f8c0 c000 	str.w	ip, [r0]
90002322:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002324:	4770      	bx	lr
90002326:	bf00      	nop

90002328 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002328:	2200      	movs	r2, #0
9000232a:	6002      	str	r2, [r0, #0]
9000232c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000232e:	4770      	bx	lr

90002330 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002330:	2000      	movs	r0, #0
90002332:	4770      	bx	lr

90002334 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002334:	4b03      	ldr	r3, [pc, #12]	; (90002344 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002336:	2290      	movs	r2, #144	; 0x90
90002338:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
9000233c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002340:	4770      	bx	lr
90002342:	bf00      	nop
90002344:	e000e100 	.word	0xe000e100

90002348 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002348:	4a09      	ldr	r2, [pc, #36]	; (90002370 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
9000234a:	490a      	ldr	r1, [pc, #40]	; (90002374 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
9000234c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000234e:	480a      	ldr	r0, [pc, #40]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002354:	3b01      	subs	r3, #1
90002356:	b29b      	uxth	r3, r3
90002358:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
9000235a:	6911      	ldr	r1, [r2, #16]
9000235c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002360:	3901      	subs	r1, #1
90002362:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002364:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002366:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002368:	f043 0301 	orr.w	r3, r3, #1
9000236c:	6353      	str	r3, [r2, #52]	; 0x34
}
9000236e:	4770      	bx	lr
90002370:	50001000 	.word	0x50001000
90002374:	24009442 	.word	0x24009442
90002378:	24009440 	.word	0x24009440

9000237c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
9000237c:	4b01      	ldr	r3, [pc, #4]	; (90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
9000237e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
90002382:	4770      	bx	lr
90002384:	50001000 	.word	0x50001000

90002388 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002388:	4b02      	ldr	r3, [pc, #8]	; (90002394 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
9000238a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
9000238c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002390:	625a      	str	r2, [r3, #36]	; 0x24
}
90002392:	4770      	bx	lr
90002394:	50001000 	.word	0x50001000

90002398 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002398:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000239c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000239e:	4770      	bx	lr

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a0:	4770      	bx	lr
900023a2:	bf00      	nop

900023a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023a4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023a8:	4611      	mov	r1, r2
900023aa:	6840      	ldr	r0, [r0, #4]
900023ac:	6803      	ldr	r3, [r0, #0]
900023ae:	68db      	ldr	r3, [r3, #12]
900023b0:	4718      	bx	r3
900023b2:	bf00      	nop

900023b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023b4:	b510      	push	{r4, lr}
900023b6:	4604      	mov	r4, r0
900023b8:	2148      	movs	r1, #72	; 0x48
900023ba:	f027 f853 	bl	90029464 <_ZdlPvj>
900023be:	4620      	mov	r0, r4
900023c0:	bd10      	pop	{r4, pc}
900023c2:	bf00      	nop

900023c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023c4:	b911      	cbnz	r1, 900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023c6:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023ca:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023cc:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023ce:	4a03      	ldr	r2, [pc, #12]	; (900023dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d0:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023d4:	4b02      	ldr	r3, [pc, #8]	; (900023e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023d6:	4803      	ldr	r0, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023d8:	f027 f872 	bl	900294c0 <__assert_func>
900023dc:	9002ae64 	.word	0x9002ae64
900023e0:	9002ae50 	.word	0x9002ae50
900023e4:	9002aff0 	.word	0x9002aff0

900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023e8:	b921      	cbnz	r1, 900023f4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023ea:	6840      	ldr	r0, [r0, #4]
900023ec:	4611      	mov	r1, r2
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023f2:	4718      	bx	r3
        assert(handle < no_streams);
900023f4:	4b03      	ldr	r3, [pc, #12]	; (90002404 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023f6:	f44f 71b5 	mov.w	r1, #362	; 0x16a
900023fa:	4a03      	ldr	r2, [pc, #12]	; (90002408 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
900023fc:	4803      	ldr	r0, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
900023fe:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002400:	f027 f85e 	bl	900294c0 <__assert_func>
90002404:	9002ae50 	.word	0x9002ae50
90002408:	9002b034 	.word	0x9002b034
9000240c:	9002aff0 	.word	0x9002aff0

90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002410:	b909      	cbnz	r1, 90002416 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90002412:	68c0      	ldr	r0, [r0, #12]
90002414:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90002416:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002418:	4a02      	ldr	r2, [pc, #8]	; (90002424 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
9000241a:	2179      	movs	r1, #121	; 0x79
9000241c:	4b02      	ldr	r3, [pc, #8]	; (90002428 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000241e:	4803      	ldr	r0, [pc, #12]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002420:	f027 f84e 	bl	900294c0 <__assert_func>
90002424:	9002b1e4 	.word	0x9002b1e4
90002428:	9002ae50 	.word	0x9002ae50
9000242c:	9002aff0 	.word	0x9002aff0

90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002430:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002432:	460c      	mov	r4, r1
90002434:	b949      	cbnz	r1, 9000244a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
90002436:	4611      	mov	r1, r2
90002438:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243a:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
9000243c:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
9000243e:	681c      	ldr	r4, [r3, #0]
90002440:	4618      	mov	r0, r3
90002442:	68a3      	ldr	r3, [r4, #8]
    }
90002444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002448:	4718      	bx	r3
        assert(handle < no_streams);
9000244a:	4b03      	ldr	r3, [pc, #12]	; (90002458 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
9000244c:	2190      	movs	r1, #144	; 0x90
9000244e:	4a03      	ldr	r2, [pc, #12]	; (9000245c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002450:	4803      	ldr	r0, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
90002452:	f027 f835 	bl	900294c0 <__assert_func>
90002456:	bf00      	nop
90002458:	9002ae50 	.word	0x9002ae50
9000245c:	9002b398 	.word	0x9002b398
90002460:	9002aff0 	.word	0x9002aff0

90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90002464:	b921      	cbnz	r1, 90002470 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
90002466:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000246a:	e9c0 3206 	strd	r3, r2, [r0, #24]
9000246e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002470:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002472:	4a03      	ldr	r2, [pc, #12]	; (90002480 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90002474:	2182      	movs	r1, #130	; 0x82
90002476:	4b03      	ldr	r3, [pc, #12]	; (90002484 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002478:	4803      	ldr	r0, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000247a:	f027 f821 	bl	900294c0 <__assert_func>
9000247e:	bf00      	nop
90002480:	9002b574 	.word	0x9002b574
90002484:	9002ae50 	.word	0x9002ae50
90002488:	9002aff0 	.word	0x9002aff0

9000248c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
9000248c:	f010 bd24 	b.w	90012ed8 <_ZN8touchgfx3HAL10beginFrameEv>

90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002490:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90002494:	b903      	cbnz	r3, 90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
90002496:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002498:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
9000249a:	f04f 31ff 	mov.w	r1, #4294967295
9000249e:	4604      	mov	r4, r0
900024a0:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024a2:	f00d fb17 	bl	9000fad4 <osMutexAcquire>
            firstDrawThisFrame = false;
900024a6:	f44f 7380 	mov.w	r3, #256	; 0x100
900024aa:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024ae:	bd10      	pop	{r4, pc}

900024b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b0:	b538      	push	{r3, r4, r5, lr}
900024b2:	460c      	mov	r4, r1
900024b4:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024b6:	f04f 31ff 	mov.w	r1, #4294967295
900024ba:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024bc:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c0:	f00d fb08 	bl	9000fad4 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024c4:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024c6:	f00d fb29 	bl	9000fb1c <osMutexRelease>
        streams[handle].isActive = false;
900024ca:	2300      	movs	r3, #0
900024cc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024d4:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024d8:	b90b      	cbnz	r3, 900024de <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024da:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024dc:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024de:	bd38      	pop	{r3, r4, r5, pc}

900024e0 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e0:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024e2:	4c1c      	ldr	r4, [pc, #112]	; (90002554 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024e4:	4605      	mov	r5, r0
    HAL::endFrame();
900024e6:	f010 fd03 	bl	90012ef0 <_ZN8touchgfx3HAL8endFrameEv>
900024ea:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024ee:	b98b      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f0:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024f4:	b973      	cbnz	r3, 90002514 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024f6:	2301      	movs	r3, #1
        SEM_POST(semDecode);
900024f8:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
900024fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
900024fe:	f00d fbb3 	bl	9000fc68 <osSemaphoreRelease>
        if (uiHasMutex)
90002502:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
90002506:	b9f3      	cbnz	r3, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002508:	6868      	ldr	r0, [r5, #4]
9000250a:	6803      	ldr	r3, [r0, #0]
}
9000250c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002510:	691b      	ldr	r3, [r3, #16]
90002512:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
90002514:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002518:	69e1      	ldr	r1, [r4, #28]
9000251a:	6922      	ldr	r2, [r4, #16]
9000251c:	fb00 f303 	mul.w	r3, r0, r3
90002520:	fb01 f202 	mul.w	r2, r1, r2
90002524:	4293      	cmp	r3, r2
90002526:	d3e6      	bcc.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002528:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
9000252c:	b138      	cbz	r0, 9000253e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000252e:	1a9b      	subs	r3, r3, r2
90002530:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90002534:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
90002536:	bf98      	it	ls
90002538:	f102 32ff 	addls.w	r2, r2, #4294967295
9000253c:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
9000253e:	2301      	movs	r3, #1
90002540:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
90002544:	e7d7      	b.n	900024f6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
90002546:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002548:	f00d fae8 	bl	9000fb1c <osMutexRelease>
            uiHasMutex = false;
9000254c:	2300      	movs	r3, #0
9000254e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90002552:	e7d9      	b.n	90002508 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
90002554:	2400948c 	.word	0x2400948c

90002558 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002558:	f010 bc88 	b.w	90012e6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

9000255c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
9000255c:	f010 bde9 	b.w	90013132 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002560 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002560:	4814      	ldr	r0, [pc, #80]	; (900025b4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
90002562:	6943      	ldr	r3, [r0, #20]
90002564:	03d9      	lsls	r1, r3, #15
90002566:	d523      	bpl.n	900025b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002568:	2300      	movs	r3, #0
{
9000256a:	b510      	push	{r4, lr}
9000256c:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002570:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002574:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002578:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000257c:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002580:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90002584:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002588:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000258c:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000258e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002592:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002594:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002598:	1c5a      	adds	r2, r3, #1
9000259a:	d1f8      	bne.n	9000258e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
9000259c:	f1ac 0c20 	sub.w	ip, ip, #32
900025a0:	f11c 0f20 	cmn.w	ip, #32
900025a4:	d1f0      	bne.n	90002588 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025a6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025aa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025ae:	bd10      	pop	{r4, pc}
900025b0:	4770      	bx	lr
900025b2:	bf00      	nop
900025b4:	e000ed00 	.word	0xe000ed00

900025b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025ba:	2900      	cmp	r1, #0
900025bc:	d133      	bne.n	90002626 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025be:	4604      	mov	r4, r0
        switch (cmd)
900025c0:	2a05      	cmp	r2, #5
900025c2:	d809      	bhi.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025c4:	e8df f002 	tbb	[pc, r2]
900025c8:	27221e0f 	.word	0x27221e0f
900025cc:	0903      	.short	0x0903
            stream.isPlaying = false;
900025ce:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d0:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025d2:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025d6:	6203      	str	r3, [r0, #32]
    }
900025d8:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025da:	3b00      	subs	r3, #0
900025dc:	bf18      	it	ne
900025de:	2301      	movne	r3, #1
900025e0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025e4:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025e6:	6840      	ldr	r0, [r0, #4]
900025e8:	6803      	ldr	r3, [r0, #0]
900025ea:	691b      	ldr	r3, [r3, #16]
900025ec:	4798      	blx	r3
900025ee:	2800      	cmp	r0, #0
900025f0:	d0f2      	beq.n	900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025f2:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025f4:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025f6:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
900025fa:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
900025fe:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
90002602:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
90002604:	2300      	movs	r3, #0
90002606:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000260c:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000260e:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002610:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002614:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002616:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002618:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
9000261a:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
9000261c:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002620:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
90002624:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002626:	4b03      	ldr	r3, [pc, #12]	; (90002634 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002628:	21a2      	movs	r1, #162	; 0xa2
9000262a:	4a03      	ldr	r2, [pc, #12]	; (90002638 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
9000262c:	4803      	ldr	r0, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
9000262e:	f026 ff47 	bl	900294c0 <__assert_func>
90002632:	bf00      	nop
90002634:	9002ae50 	.word	0x9002ae50
90002638:	9002b730 	.word	0x9002b730
9000263c:	9002aff0 	.word	0x9002aff0

90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002640:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002642:	bb39      	cbnz	r1, 90002694 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
90002644:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002648:	4604      	mov	r4, r0
9000264a:	b923      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
9000264c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002650:	b963      	cbnz	r3, 9000266c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
90002652:	2001      	movs	r0, #1
    }
90002654:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
90002656:	4912      	ldr	r1, [pc, #72]	; (900026a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002658:	6943      	ldr	r3, [r0, #20]
9000265a:	6809      	ldr	r1, [r1, #0]
9000265c:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002660:	440b      	add	r3, r1
90002662:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
90002664:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002668:	2b00      	cmp	r3, #0
9000266a:	d0f2      	beq.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
9000266c:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
9000266e:	4610      	mov	r0, r2
90002670:	6813      	ldr	r3, [r2, #0]
90002672:	695b      	ldr	r3, [r3, #20]
90002674:	6311      	str	r1, [r2, #48]	; 0x30
90002676:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002678:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
9000267a:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
9000267e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	2800      	cmp	r0, #0
90002684:	d1e5      	bne.n	90002652 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
90002686:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
9000268a:	2b00      	cmp	r3, #0
9000268c:	d1e2      	bne.n	90002654 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
9000268e:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
90002692:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
90002694:	4b03      	ldr	r3, [pc, #12]	; (900026a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
90002696:	21d0      	movs	r1, #208	; 0xd0
90002698:	4a03      	ldr	r2, [pc, #12]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
9000269a:	4804      	ldr	r0, [pc, #16]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
9000269c:	f026 ff10 	bl	900294c0 <__assert_func>
900026a0:	24039acc 	.word	0x24039acc
900026a4:	9002ae50 	.word	0x9002ae50
900026a8:	9002b904 	.word	0x9002b904
900026ac:	9002aff0 	.word	0x9002aff0

900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026b4:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026b6:	b9fb      	cbnz	r3, 900026f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026b8:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ba:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026bc:	60c3      	str	r3, [r0, #12]
900026be:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026c6:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026ca:	6103      	str	r3, [r0, #16]
900026cc:	6143      	str	r3, [r0, #20]
900026ce:	6183      	str	r3, [r0, #24]
900026d0:	61c3      	str	r3, [r0, #28]
900026d2:	6203      	str	r3, [r0, #32]
900026d4:	6243      	str	r3, [r0, #36]	; 0x24
900026d6:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026da:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026de:	4432      	add	r2, r6
900026e0:	4294      	cmp	r4, r2
900026e2:	d810      	bhi.n	90002706 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026e4:	4a0b      	ldr	r2, [pc, #44]	; (90002714 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026e6:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026e8:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026ea:	4618      	mov	r0, r3
        format = bufferFormat;
900026ec:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f0:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026f4:	630b      	str	r3, [r1, #48]	; 0x30
900026f6:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900026f8:	4b07      	ldr	r3, [pc, #28]	; (90002718 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
900026fa:	f240 11c5 	movw	r1, #453	; 0x1c5
900026fe:	4a07      	ldr	r2, [pc, #28]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002700:	4807      	ldr	r0, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002702:	f026 fedd 	bl	900294c0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
90002706:	4b07      	ldr	r3, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002708:	2152      	movs	r1, #82	; 0x52
9000270a:	4a07      	ldr	r2, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
9000270c:	4804      	ldr	r0, [pc, #16]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270e:	f026 fed7 	bl	900294c0 <__assert_func>
90002712:	bf00      	nop
90002714:	012001e0 	.word	0x012001e0
90002718:	9002baa4 	.word	0x9002baa4
9000271c:	9002bad4 	.word	0x9002bad4
90002720:	9002aff0 	.word	0x9002aff0
90002724:	9002bc5c 	.word	0x9002bc5c
90002728:	9002bc98 	.word	0x9002bc98

9000272c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000272c:	4b08      	ldr	r3, [pc, #32]	; (90002750 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
9000272e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002732:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002736:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000273a:	f3bf 8f6f 	isb	sy
9000273e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002742:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002746:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000274a:	f3bf 8f6f 	isb	sy
}
9000274e:	4770      	bx	lr
90002750:	e000e100 	.word	0xe000e100

90002754 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002754:	4b03      	ldr	r3, [pc, #12]	; (90002764 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
90002756:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000275a:	609a      	str	r2, [r3, #8]
9000275c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002760:	609a      	str	r2, [r3, #8]
}
90002762:	4770      	bx	lr
90002764:	e000e100 	.word	0xe000e100

90002768 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002768:	b538      	push	{r3, r4, r5, lr}
9000276a:	4604      	mov	r4, r0
    HAL::initialize();
9000276c:	f010 fbcd 	bl	90012f0a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002770:	6823      	ldr	r3, [r4, #0]
90002772:	6e5d      	ldr	r5, [r3, #100]	; 0x64
90002774:	f015 fd38 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90002778:	4601      	mov	r1, r0
9000277a:	4620      	mov	r0, r4
9000277c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000277e:	6823      	ldr	r3, [r4, #0]
90002780:	4a16      	ldr	r2, [pc, #88]	; (900027dc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
90002782:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
90002786:	4295      	cmp	r5, r2
90002788:	d11c      	bne.n	900027c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000278a:	4a15      	ldr	r2, [pc, #84]	; (900027e0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000278c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000278e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90002792:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002796:	4813      	ldr	r0, [pc, #76]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002798:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
9000279c:	4a12      	ldr	r2, [pc, #72]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	7005      	strb	r5, [r0, #0]
900027a0:	4293      	cmp	r3, r2
900027a2:	d116      	bne.n	900027d2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a4:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027a6:	4a11      	ldr	r2, [pc, #68]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027a8:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027aa:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027ac:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027ae:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027b2:	4b0f      	ldr	r3, [pc, #60]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027b4:	490f      	ldr	r1, [pc, #60]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027b6:	4a10      	ldr	r2, [pc, #64]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027b8:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027ba:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027bc:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027be:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027c2:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027c4:	4a0d      	ldr	r2, [pc, #52]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027c6:	2300      	movs	r3, #0
900027c8:	4620      	mov	r0, r4
900027ca:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027ce:	47a8      	blx	r5
900027d0:	e7ec      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027d2:	2100      	movs	r1, #0
900027d4:	4620      	mov	r0, r4
900027d6:	4798      	blx	r3
900027d8:	e7e8      	b.n	900027ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027da:	bf00      	nop
900027dc:	90000805 	.word	0x90000805
900027e0:	d003fc00 	.word	0xd003fc00
900027e4:	24039aca 	.word	0x24039aca
900027e8:	90000675 	.word	0x90000675
900027ec:	24039acb 	.word	0x24039acb
900027f0:	2400948c 	.word	0x2400948c
900027f4:	24009444 	.word	0x24009444
900027f8:	d00bf400 	.word	0xd00bf400
900027fc:	d007f800 	.word	0xd007f800

90002800 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002800:	b510      	push	{r4, lr}
        return instance;
90002802:	4c14      	ldr	r4, [pc, #80]	; (90002854 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90002804:	6823      	ldr	r3, [r4, #0]
90002806:	b323      	cbz	r3, 90002852 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002808:	4b13      	ldr	r3, [pc, #76]	; (90002858 <HAL_LTDC_LineEventCallback+0x58>)
9000280a:	4a14      	ldr	r2, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x5c>)
9000280c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000280e:	8811      	ldrh	r1, [r2, #0]
90002810:	428b      	cmp	r3, r1
90002812:	d00a      	beq.n	9000282a <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90002814:	f00a fe2a 	bl	9000d46c <HAL_LTDC_ProgramLineEvent>
90002818:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
9000281a:	6803      	ldr	r3, [r0, #0]
9000281c:	6a1b      	ldr	r3, [r3, #32]
9000281e:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002820:	2000      	movs	r0, #0
        }
    }
90002822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
90002826:	f7fd bec9 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
9000282a:	4b0d      	ldr	r3, [pc, #52]	; (90002860 <HAL_LTDC_LineEventCallback+0x60>)
9000282c:	8819      	ldrh	r1, [r3, #0]
9000282e:	f00a fe1d 	bl	9000d46c <HAL_LTDC_ProgramLineEvent>
        return instance;
90002832:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
90002834:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002838:	3301      	adds	r3, #1
9000283a:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
9000283e:	f7ff f83f 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90002842:	6820      	ldr	r0, [r4, #0]
90002844:	f011 f8ba 	bl	900139bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002848:	2000      	movs	r0, #0
    }
9000284a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
9000284e:	f7fd be81 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90002852:	bd10      	pop	{r4, pc}
90002854:	24039acc 	.word	0x24039acc
90002858:	50001000 	.word	0x50001000
9000285c:	24009442 	.word	0x24009442
90002860:	24009440 	.word	0x24009440

90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
90002864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002868:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002924 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
9000286c:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
9000286e:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002870:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
90002874:	4604      	mov	r4, r0
90002876:	e024      	b.n	900028c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002878:	682b      	ldr	r3, [r5, #0]
9000287a:	4628      	mov	r0, r5
9000287c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000287e:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002880:	2300      	movs	r3, #0
90002882:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002884:	6829      	ldr	r1, [r5, #0]
90002886:	f44f 7390 	mov.w	r3, #288	; 0x120
9000288a:	9700      	str	r7, [sp, #0]
9000288c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002890:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002894:	4628      	mov	r0, r5
90002896:	68a1      	ldr	r1, [r4, #8]
90002898:	47c8      	blx	r9
                    stream.frameCount++;
9000289a:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000289c:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a0:	3301      	adds	r3, #1
900028a2:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028a4:	2800      	cmp	r0, #0
900028a6:	d033      	beq.n	90002910 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028a8:	682b      	ldr	r3, [r5, #0]
900028aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028ac:	4543      	cmp	r3, r8
900028ae:	d131      	bne.n	90002914 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b0:	6968      	ldr	r0, [r5, #20]
900028b2:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028b4:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b6:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028b8:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028bc:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028be:	f00d f92d 	bl	9000fb1c <osMutexRelease>
            SEM_WAIT(semDecode);
900028c2:	f04f 31ff 	mov.w	r1, #4294967295
900028c6:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028c8:	f00d f99a 	bl	9000fc00 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028cc:	f04f 31ff 	mov.w	r1, #4294967295
900028d0:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028d2:	f00d f8ff 	bl	9000fad4 <osMutexAcquire>
                if (stream.doDecode)
900028d6:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028da:	2b00      	cmp	r3, #0
900028dc:	d0ee      	beq.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028de:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e0:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028e2:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028e6:	2900      	cmp	r1, #0
900028e8:	d1c6      	bne.n	90002878 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028ec:	2b00      	cmp	r3, #0
900028ee:	d0c9      	beq.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f0:	682a      	ldr	r2, [r5, #0]
900028f2:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028f6:	4541      	cmp	r1, r8
900028f8:	d10f      	bne.n	9000291a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
900028fa:	6968      	ldr	r0, [r5, #20]
900028fc:	18c1      	adds	r1, r0, r3
900028fe:	4628      	mov	r0, r5
90002900:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002902:	6923      	ldr	r3, [r4, #16]
90002904:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002906:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002908:	440b      	add	r3, r1
                            stream.skip_frames = 0;
9000290a:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
9000290c:	6123      	str	r3, [r4, #16]
9000290e:	e7b9      	b.n	90002884 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002910:	2001      	movs	r0, #1
90002912:	e7cf      	b.n	900028b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002914:	4628      	mov	r0, r5
90002916:	4798      	blx	r3
90002918:	e7cb      	b.n	900028b2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
9000291a:	4628      	mov	r0, r5
9000291c:	4788      	blx	r1
9000291e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002920:	e7ec      	b.n	900028fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002922:	bf00      	nop
90002924:	9000097d 	.word	0x9000097d

90002928 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002928:	4801      	ldr	r0, [pc, #4]	; (90002930 <videoTaskFunc+0x8>)
{
9000292a:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
9000292c:	f7ff ff9a 	bl	90002864 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002930:	2400948c 	.word	0x2400948c

90002934 <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002934:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002936:	4815      	ldr	r0, [pc, #84]	; (9000298c <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002938:	2500      	movs	r5, #0
9000293a:	f7fe fbc5 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000293e:	4c14      	ldr	r4, [pc, #80]	; (90002990 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002940:	4914      	ldr	r1, [pc, #80]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002942:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002946:	462a      	mov	r2, r5
90002948:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000294a:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
9000294c:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294e:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002950:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002952:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002954:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000295a:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
9000295c:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002960:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002964:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002968:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
9000296c:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002970:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002974:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002978:	f00d f8f2 	bl	9000fb60 <osSemaphoreNew>
9000297c:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
9000297e:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002982:	f00d f867 	bl	9000fa54 <osMutexNew>
90002986:	6460      	str	r0, [r4, #68]	; 0x44
}
90002988:	bd38      	pop	{r3, r4, r5, pc}
9000298a:	bf00      	nop
9000298c:	24009444 	.word	0x24009444
90002990:	2400948c 	.word	0x2400948c
90002994:	9002be64 	.word	0x9002be64

90002998 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002998:	4901      	ldr	r1, [pc, #4]	; (900029a0 <vApplicationIdleHook+0x8>)
9000299a:	2000      	movs	r0, #0
9000299c:	f00f bafc 	b.w	90011f98 <vTaskSetApplicationTaskTag>
900029a0:	90000959 	.word	0x90000959

900029a4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029a6:	2064      	movs	r0, #100	; 0x64
900029a8:	f00d f846 	bl	9000fa38 <osDelay>
  for(;;)
900029ac:	e7fb      	b.n	900029a6 <StartDefaultTask+0x2>
900029ae:	bf00      	nop

900029b0 <SystemClock_Config>:
{
900029b0:	b570      	push	{r4, r5, r6, lr}
900029b2:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029b4:	224c      	movs	r2, #76	; 0x4c
900029b6:	2100      	movs	r1, #0
900029b8:	a80a      	add	r0, sp, #40	; 0x28
900029ba:	f027 f809 	bl	900299d0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029be:	2220      	movs	r2, #32
900029c0:	2100      	movs	r1, #0
900029c2:	a802      	add	r0, sp, #8
900029c4:	f027 f804 	bl	900299d0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029c8:	2002      	movs	r0, #2
900029ca:	f00a ff8d 	bl	9000d8e8 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029ce:	4b22      	ldr	r3, [pc, #136]	; (90002a58 <SystemClock_Config+0xa8>)
900029d0:	2100      	movs	r1, #0
900029d2:	4a22      	ldr	r2, [pc, #136]	; (90002a5c <SystemClock_Config+0xac>)
900029d4:	9101      	str	r1, [sp, #4]
900029d6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029d8:	f021 0101 	bic.w	r1, r1, #1
900029dc:	62d9      	str	r1, [r3, #44]	; 0x2c
900029de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e0:	f003 0301 	and.w	r3, r3, #1
900029e4:	9301      	str	r3, [sp, #4]
900029e6:	6993      	ldr	r3, [r2, #24]
900029e8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029ec:	6193      	str	r3, [r2, #24]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029f4:	9301      	str	r3, [sp, #4]
900029f6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900029f8:	6993      	ldr	r3, [r2, #24]
900029fa:	0499      	lsls	r1, r3, #18
900029fc:	d5fc      	bpl.n	900029f8 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900029fe:	2201      	movs	r2, #1
90002a00:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a04:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a06:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a08:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a0a:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a0c:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a0e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a12:	2205      	movs	r2, #5
90002a14:	23a0      	movs	r3, #160	; 0xa0
90002a16:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a1a:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a1c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a20:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a22:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a26:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a2a:	f00b f805 	bl	9000da38 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a2e:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a30:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a32:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a34:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a36:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a3a:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a3c:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a3e:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a40:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a42:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a44:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a4c:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a4e:	f00b fb87 	bl	9000e160 <HAL_RCC_ClockConfig>
}
90002a52:	b01e      	add	sp, #120	; 0x78
90002a54:	bd70      	pop	{r4, r5, r6, pc}
90002a56:	bf00      	nop
90002a58:	58000400 	.word	0x58000400
90002a5c:	58024800 	.word	0x58024800

90002a60 <main>:
{
90002a60:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a62:	2400      	movs	r4, #0
{
90002a64:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a66:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a68:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a6a:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a70:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a74:	f007 ff20 	bl	9000a8b8 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a78:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a7c:	49d3      	ldr	r1, [pc, #844]	; (90002dcc <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a7e:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a82:	4bd3      	ldr	r3, [pc, #844]	; (90002dd0 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a84:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a88:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a8c:	f007 ff32 	bl	9000a8f4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a90:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a96:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a9a:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002a9c:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa0:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aa4:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aa8:	f007 ff24 	bl	9000a8f4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002aac:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aae:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab0:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ab8:	231a      	movs	r3, #26
90002aba:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002abe:	f240 1301 	movw	r3, #257	; 0x101
90002ac2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ac6:	f007 ff15 	bl	9000a8f4 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002aca:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad0:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ad4:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad6:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ada:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ade:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002ae4:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ae8:	f007 ff04 	bl	9000a8f4 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002aec:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002aee:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002af8:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002afc:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b00:	f007 fef8 	bl	9000a8f4 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b04:	4620      	mov	r0, r4
90002b06:	f007 fee5 	bl	9000a8d4 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b0a:	4ab2      	ldr	r2, [pc, #712]	; (90002dd4 <main+0x374>)
90002b0c:	6953      	ldr	r3, [r2, #20]
90002b0e:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b12:	d111      	bne.n	90002b38 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b18:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b1c:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b20:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b24:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b28:	6953      	ldr	r3, [r2, #20]
90002b2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b2e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b34:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b38:	48a6      	ldr	r0, [pc, #664]	; (90002dd4 <main+0x374>)
90002b3a:	6943      	ldr	r3, [r0, #20]
90002b3c:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b40:	d124      	bne.n	90002b8c <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b42:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b46:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b4a:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b4e:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b52:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b56:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b5a:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b5c:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b60:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b62:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b66:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b68:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b6c:	1c5a      	adds	r2, r3, #1
90002b6e:	d1f8      	bne.n	90002b62 <main+0x102>
    } while(sets-- != 0U);
90002b70:	3c20      	subs	r4, #32
90002b72:	f114 0f20 	cmn.w	r4, #32
90002b76:	d1f1      	bne.n	90002b5c <main+0xfc>
90002b78:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b7c:	6943      	ldr	r3, [r0, #20]
90002b7e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b82:	6143      	str	r3, [r0, #20]
90002b84:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b88:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b8c:	f007 fddc 	bl	9000a748 <HAL_Init>
  SystemClock_Config();
90002b90:	f7ff ff0e 	bl	900029b0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b94:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b96:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002b98:	4d8f      	ldr	r5, [pc, #572]	; (90002dd8 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002b9a:	21c0      	movs	r1, #192	; 0xc0
90002b9c:	488f      	ldr	r0, [pc, #572]	; (90002ddc <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba0:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ba2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ba4:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ba8:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002baa:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bae:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bb2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bb6:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bbe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bc2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bce:	9301      	str	r3, [sp, #4]
90002bd0:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002bda:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002be2:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002be6:	9302      	str	r3, [sp, #8]
90002be8:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bf2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bf6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002bfe:	9303      	str	r3, [sp, #12]
90002c00:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c06:	f043 0310 	orr.w	r3, r3, #16
90002c0a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c12:	f003 0310 	and.w	r3, r3, #16
90002c16:	9304      	str	r3, [sp, #16]
90002c18:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1e:	f043 0302 	orr.w	r3, r3, #2
90002c22:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c2a:	f003 0302 	and.w	r3, r3, #2
90002c2e:	9305      	str	r3, [sp, #20]
90002c30:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c3a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c42:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c46:	9306      	str	r3, [sp, #24]
90002c48:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4e:	f043 0308 	orr.w	r3, r3, #8
90002c52:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c5a:	f003 0308 	and.w	r3, r3, #8
90002c5e:	9307      	str	r3, [sp, #28]
90002c60:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c66:	f043 0320 	orr.w	r3, r3, #32
90002c6a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c72:	f003 0320 	and.w	r3, r3, #32
90002c76:	9308      	str	r3, [sp, #32]
90002c78:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c82:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c86:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c8e:	9309      	str	r3, [sp, #36]	; 0x24
90002c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c92:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c96:	f043 0301 	orr.w	r3, r3, #1
90002c9a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c9e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002ca2:	f003 0301 	and.w	r3, r3, #1
90002ca6:	930a      	str	r3, [sp, #40]	; 0x28
90002ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002caa:	f008 fa13 	bl	9000b0d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cae:	4622      	mov	r2, r4
90002cb0:	2180      	movs	r1, #128	; 0x80
90002cb2:	484b      	ldr	r0, [pc, #300]	; (90002de0 <main+0x380>)
90002cb4:	f008 fa0e 	bl	9000b0d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cb8:	4622      	mov	r2, r4
90002cba:	2108      	movs	r1, #8
90002cbc:	4849      	ldr	r0, [pc, #292]	; (90002de4 <main+0x384>)
90002cbe:	f008 fa09 	bl	9000b0d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cc2:	2201      	movs	r2, #1
90002cc4:	4848      	ldr	r0, [pc, #288]	; (90002de8 <main+0x388>)
90002cc6:	4611      	mov	r1, r2
90002cc8:	f008 fa04 	bl	9000b0d4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002ccc:	4622      	mov	r2, r4
90002cce:	2144      	movs	r1, #68	; 0x44
90002cd0:	4846      	ldr	r0, [pc, #280]	; (90002dec <main+0x38c>)
90002cd2:	f008 f9ff 	bl	9000b0d4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cd6:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cd8:	a90b      	add	r1, sp, #44	; 0x2c
90002cda:	4840      	ldr	r0, [pc, #256]	; (90002ddc <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002cdc:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce0:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce4:	f007 fff6 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ce8:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cea:	a90b      	add	r1, sp, #44	; 0x2c
90002cec:	483c      	ldr	r0, [pc, #240]	; (90002de0 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cee:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf0:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cf2:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf6:	f007 ffed 	bl	9000acd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002cfa:	a90b      	add	r1, sp, #44	; 0x2c
90002cfc:	4839      	ldr	r0, [pc, #228]	; (90002de4 <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002cfe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d02:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d04:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d08:	f007 ffe4 	bl	9000acd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d0c:	a90b      	add	r1, sp, #44	; 0x2c
90002d0e:	4836      	ldr	r0, [pc, #216]	; (90002de8 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d10:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d14:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d18:	f007 ffdc 	bl	9000acd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d1c:	a90b      	add	r1, sp, #44	; 0x2c
90002d1e:	4833      	ldr	r0, [pc, #204]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d20:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d28:	f007 ffd4 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d2c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d30:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d34:	a90b      	add	r1, sp, #44	; 0x2c
90002d36:	482d      	ldr	r0, [pc, #180]	; (90002dec <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d3c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d40:	f007 ffc8 	bl	9000acd4 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d44:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d48:	4622      	mov	r2, r4
90002d4a:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d4e:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d50:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d54:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d58:	4d25      	ldr	r5, [pc, #148]	; (90002df0 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d5a:	4033      	ands	r3, r6
90002d5c:	9300      	str	r3, [sp, #0]
90002d5e:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d60:	f007 fd4c 	bl	9000a7fc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d64:	207a      	movs	r0, #122	; 0x7a
90002d66:	f007 fd87 	bl	9000a878 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d6a:	2234      	movs	r2, #52	; 0x34
90002d6c:	4621      	mov	r1, r4
90002d6e:	a80b      	add	r0, sp, #44	; 0x2c
90002d70:	f026 fe2e 	bl	900299d0 <memset>
  hltdc.Instance = LTDC;
90002d74:	4b1f      	ldr	r3, [pc, #124]	; (90002df4 <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d76:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d78:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d7a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d7c:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d7e:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d82:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d86:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d88:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d8a:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d8c:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d94:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002d98:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002d9a:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002d9e:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002da2:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002da4:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002da8:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002dac:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db0:	f00a f9b6 	bl	9000d120 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002db4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002db8:	4622      	mov	r2, r4
90002dba:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dbc:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dbe:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dc2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dc6:	4d0c      	ldr	r5, [pc, #48]	; (90002df8 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dc8:	930e      	str	r3, [sp, #56]	; 0x38
90002dca:	e017      	b.n	90002dfc <main+0x39c>
90002dcc:	03000012 	.word	0x03000012
90002dd0:	01010001 	.word	0x01010001
90002dd4:	e000ed00 	.word	0xe000ed00
90002dd8:	58024400 	.word	0x58024400
90002ddc:	58020400 	.word	0x58020400
90002de0:	58020c00 	.word	0x58020c00
90002de4:	58021800 	.word	0x58021800
90002de8:	58022800 	.word	0x58022800
90002dec:	58020000 	.word	0x58020000
90002df0:	240095c0 	.word	0x240095c0
90002df4:	50001000 	.word	0x50001000
90002df8:	24009500 	.word	0x24009500
  pLayerCfg.ImageHeight = 272;
90002dfc:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002dfe:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e00:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e02:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e04:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e08:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0a:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e0e:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e10:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e14:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e18:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e1a:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e1e:	f00a fa53 	bl	9000d2c8 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e22:	4b35      	ldr	r3, [pc, #212]	; (90002ef8 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e24:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e26:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e28:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e2a:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e2c:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e30:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e34:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e38:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e3c:	f007 fe02 	bl	9000aa44 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e40:	4631      	mov	r1, r6
90002e42:	4628      	mov	r0, r5
90002e44:	f007 fed6 	bl	9000abf4 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e48:	482c      	ldr	r0, [pc, #176]	; (90002efc <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e4a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e4e:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e50:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e54:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e56:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e5a:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e5e:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e62:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e64:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e68:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e6c:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e72:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e74:	2307      	movs	r3, #7
90002e76:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e78:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e7a:	4b21      	ldr	r3, [pc, #132]	; (90002f00 <main+0x4a0>)
90002e7c:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e7e:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e80:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e84:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e86:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e8a:	f00c fa41 	bl	9000f310 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e8e:	4620      	mov	r0, r4
90002e90:	f007 f9ec 	bl	9000a26c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e94:	4620      	mov	r0, r4
90002e96:	f007 fa33 	bl	9000a300 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002e9a:	f7fd fa9b 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002e9e:	4b19      	ldr	r3, [pc, #100]	; (90002f04 <main+0x4a4>)
90002ea0:	4819      	ldr	r0, [pc, #100]	; (90002f08 <main+0x4a8>)
90002ea2:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002ea4:	f009 f910 	bl	9000c0c8 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002ea8:	4818      	ldr	r0, [pc, #96]	; (90002f0c <main+0x4ac>)
90002eaa:	4b19      	ldr	r3, [pc, #100]	; (90002f10 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eac:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eae:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb0:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eb2:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002eb6:	f007 fd4f 	bl	9000a958 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002eba:	f7fd fa8f 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ebe:	f7fd fa8b 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002ec2:	f00c fd43 	bl	9000f94c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ec6:	4a13      	ldr	r2, [pc, #76]	; (90002f14 <main+0x4b4>)
90002ec8:	4621      	mov	r1, r4
90002eca:	4813      	ldr	r0, [pc, #76]	; (90002f18 <main+0x4b8>)
90002ecc:	f00c fd6a 	bl	9000f9a4 <osThreadNew>
90002ed0:	4b12      	ldr	r3, [pc, #72]	; (90002f1c <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed2:	4a13      	ldr	r2, [pc, #76]	; (90002f20 <main+0x4c0>)
90002ed4:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ed6:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ed8:	4812      	ldr	r0, [pc, #72]	; (90002f24 <main+0x4c4>)
90002eda:	f00c fd63 	bl	9000f9a4 <osThreadNew>
90002ede:	4b12      	ldr	r3, [pc, #72]	; (90002f28 <main+0x4c8>)
90002ee0:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ee2:	4a12      	ldr	r2, [pc, #72]	; (90002f2c <main+0x4cc>)
90002ee4:	4621      	mov	r1, r4
90002ee6:	4812      	ldr	r0, [pc, #72]	; (90002f30 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee8:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	f00c fd5b 	bl	9000f9a4 <osThreadNew>
90002eee:	4b11      	ldr	r3, [pc, #68]	; (90002f34 <main+0x4d4>)
90002ef0:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002ef2:	f00c fd3d 	bl	9000f970 <osKernelStart>
  while (1)
90002ef6:	e7fe      	b.n	90002ef6 <main+0x496>
90002ef8:	52001000 	.word	0x52001000
90002efc:	24009740 	.word	0x24009740
90002f00:	52004140 	.word	0x52004140
90002f04:	52003000 	.word	0x52003000
90002f08:	24009568 	.word	0x24009568
90002f0c:	240094dc 	.word	0x240094dc
90002f10:	58024c00 	.word	0x58024c00
90002f14:	9002bee0 	.word	0x9002bee0
90002f18:	900029a5 	.word	0x900029a5
90002f1c:	240094d8 	.word	0x240094d8
90002f20:	9002bebc 	.word	0x9002bebc
90002f24:	900003ed 	.word	0x900003ed
90002f28:	240094d4 	.word	0x240094d4
90002f2c:	9002bf04 	.word	0x9002bf04
90002f30:	90002929 	.word	0x90002929
90002f34:	24009774 	.word	0x24009774

90002f38 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f38:	4b03      	ldr	r3, [pc, #12]	; (90002f48 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f3a:	6802      	ldr	r2, [r0, #0]
90002f3c:	429a      	cmp	r2, r3
90002f3e:	d000      	beq.n	90002f42 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f40:	4770      	bx	lr
    HAL_IncTick();
90002f42:	f007 bc31 	b.w	9000a7a8 <HAL_IncTick>
90002f46:	bf00      	nop
90002f48:	40001000 	.word	0x40001000

90002f4c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f50:	4b0b      	ldr	r3, [pc, #44]	; (90002f80 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f52:	2200      	movs	r2, #0
90002f54:	210f      	movs	r1, #15
90002f56:	f06f 0001 	mvn.w	r0, #1
{
90002f5a:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f5c:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f60:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f62:	f044 0402 	orr.w	r4, r4, #2
90002f66:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f6a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f6e:	f003 0302 	and.w	r3, r3, #2
90002f72:	9301      	str	r3, [sp, #4]
90002f74:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f76:	b003      	add	sp, #12
90002f78:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f7c:	f007 bc3e 	b.w	9000a7fc <HAL_NVIC_SetPriority>
90002f80:	58024400 	.word	0x58024400

90002f84 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f84:	4b0a      	ldr	r3, [pc, #40]	; (90002fb0 <HAL_CRC_MspInit+0x2c>)
90002f86:	6802      	ldr	r2, [r0, #0]
90002f88:	429a      	cmp	r2, r3
90002f8a:	d000      	beq.n	90002f8e <HAL_CRC_MspInit+0xa>
90002f8c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f8e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f92:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002f98:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002f9c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fa4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fa8:	9301      	str	r3, [sp, #4]
90002faa:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fac:	b002      	add	sp, #8
90002fae:	4770      	bx	lr
90002fb0:	58024c00 	.word	0x58024c00

90002fb4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fb4:	4b0f      	ldr	r3, [pc, #60]	; (90002ff4 <HAL_DMA2D_MspInit+0x40>)
90002fb6:	6802      	ldr	r2, [r0, #0]
90002fb8:	429a      	cmp	r2, r3
90002fba:	d000      	beq.n	90002fbe <HAL_DMA2D_MspInit+0xa>
90002fbc:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fbe:	4b0e      	ldr	r3, [pc, #56]	; (90002ff8 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc0:	205a      	movs	r0, #90	; 0x5a
90002fc2:	2200      	movs	r2, #0
90002fc4:	2105      	movs	r1, #5
{
90002fc6:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc8:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fcc:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fce:	f044 0410 	orr.w	r4, r4, #16
90002fd2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fd6:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fda:	f003 0310 	and.w	r3, r3, #16
90002fde:	9301      	str	r3, [sp, #4]
90002fe0:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fe2:	f007 fc0b 	bl	9000a7fc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fe6:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002fe8:	b002      	add	sp, #8
90002fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	f007 bc43 	b.w	9000a878 <HAL_NVIC_EnableIRQ>
90002ff2:	bf00      	nop
90002ff4:	52001000 	.word	0x52001000
90002ff8:	58024400 	.word	0x58024400

90002ffc <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90002ffc:	4b3f      	ldr	r3, [pc, #252]	; (900030fc <HAL_JPEG_MspInit+0x100>)
90002ffe:	6802      	ldr	r2, [r0, #0]
90003000:	429a      	cmp	r2, r3
90003002:	d000      	beq.n	90003006 <HAL_JPEG_MspInit+0xa>
90003004:	4770      	bx	lr
{
90003006:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003008:	4b3d      	ldr	r3, [pc, #244]	; (90003100 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000300a:	2211      	movs	r2, #17
9000300c:	4e3d      	ldr	r6, [pc, #244]	; (90003104 <HAL_JPEG_MspInit+0x108>)
{
9000300e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003010:	4d3d      	ldr	r5, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
90003012:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003014:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003016:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003018:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000301c:	493b      	ldr	r1, [pc, #236]	; (9000310c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000301e:	f042 0220 	orr.w	r2, r2, #32
90003022:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003026:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003028:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000302c:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000302e:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003032:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003034:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003036:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003038:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
9000303a:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000303c:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003040:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90003044:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003046:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003048:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
9000304c:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003050:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003052:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90003056:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
9000305a:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000305e:	2313      	movs	r3, #19
90003060:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003062:	2302      	movs	r3, #2
90003064:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003066:	f00a fa23 	bl	9000d4b0 <HAL_MDMA_Init>
9000306a:	2800      	cmp	r0, #0
9000306c:	d13a      	bne.n	900030e4 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000306e:	2200      	movs	r2, #0
90003070:	4824      	ldr	r0, [pc, #144]	; (90003104 <HAL_JPEG_MspInit+0x108>)
90003072:	4611      	mov	r1, r2
90003074:	f00a faba 	bl	9000d5ec <HAL_MDMA_ConfigPostRequestMask>
90003078:	2800      	cmp	r0, #0
9000307a:	d13c      	bne.n	900030f6 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000307c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000307e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003080:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003082:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003086:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003088:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000308c:	4920      	ldr	r1, [pc, #128]	; (90003110 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000308e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003090:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90003092:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003094:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003096:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000309a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000309e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a0:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030a2:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030a8:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030ac:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b0:	4815      	ldr	r0, [pc, #84]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b2:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030b4:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b6:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	f00a f9fa 	bl	9000d4b0 <HAL_MDMA_Init>
900030bc:	b9c0      	cbnz	r0, 900030f0 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030be:	2200      	movs	r2, #0
900030c0:	4811      	ldr	r0, [pc, #68]	; (90003108 <HAL_JPEG_MspInit+0x10c>)
900030c2:	4611      	mov	r1, r2
900030c4:	f00a fa92 	bl	9000d5ec <HAL_MDMA_ConfigPostRequestMask>
900030c8:	b978      	cbnz	r0, 900030ea <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030ca:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030cc:	2079      	movs	r0, #121	; 0x79
900030ce:	2200      	movs	r2, #0
900030d0:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	f007 fb92 	bl	9000a7fc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030d8:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030da:	b002      	add	sp, #8
900030dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	f007 bbca 	b.w	9000a878 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030e4:	f7ff ff32 	bl	90002f4c <Error_Handler>
900030e8:	e7c1      	b.n	9000306e <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030ea:	f7ff ff2f 	bl	90002f4c <Error_Handler>
900030ee:	e7ec      	b.n	900030ca <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f0:	f7ff ff2c 	bl	90002f4c <Error_Handler>
900030f4:	e7e3      	b.n	900030be <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030f6:	f7ff ff29 	bl	90002f4c <Error_Handler>
900030fa:	e7bf      	b.n	9000307c <HAL_JPEG_MspInit+0x80>
900030fc:	52003000 	.word	0x52003000
90003100:	58024400 	.word	0x58024400
90003104:	24009668 	.word	0x24009668
90003108:	240096d4 	.word	0x240096d4
9000310c:	52000200 	.word	0x52000200
90003110:	520001c0 	.word	0x520001c0

90003114 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003114:	b570      	push	{r4, r5, r6, lr}
90003116:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003118:	2100      	movs	r1, #0
{
9000311a:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000311c:	22c0      	movs	r2, #192	; 0xc0
9000311e:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	9109      	str	r1, [sp, #36]	; 0x24
90003122:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003126:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000312a:	f026 fc51 	bl	900299d0 <memset>
  if(hltdc->Instance==LTDC)
9000312e:	4b4a      	ldr	r3, [pc, #296]	; (90003258 <HAL_LTDC_MspInit+0x144>)
90003130:	6822      	ldr	r2, [r4, #0]
90003132:	429a      	cmp	r2, r3
90003134:	d001      	beq.n	9000313a <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003136:	b03a      	add	sp, #232	; 0xe8
90003138:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000313a:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
9000313c:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000313e:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
90003142:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003144:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003146:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003148:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314a:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
9000314c:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000314e:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003152:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003154:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003156:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000315a:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315e:	f00b fad7 	bl	9000e710 <HAL_RCCEx_PeriphCLKConfig>
90003162:	2800      	cmp	r0, #0
90003164:	d174      	bne.n	90003250 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003166:	4b3d      	ldr	r3, [pc, #244]	; (9000325c <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003168:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000316a:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000316c:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003172:	a905      	add	r1, sp, #20
90003174:	483a      	ldr	r0, [pc, #232]	; (90003260 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f042 0208 	orr.w	r2, r2, #8
9000317a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000317e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003182:	f002 0208 	and.w	r2, r2, #8
90003186:	9200      	str	r2, [sp, #0]
90003188:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000318a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000318e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003192:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003196:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000319a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000319e:	9201      	str	r2, [sp, #4]
900031a0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031aa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031b6:	9202      	str	r2, [sp, #8]
900031b8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031be:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031c2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031c6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ca:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031ce:	9203      	str	r2, [sp, #12]
900031d0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031d2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031da:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031de:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031e2:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031e8:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ea:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031ec:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ee:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f0:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031f2:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031f6:	f007 fd6d 	bl	9000acd4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900031fa:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900031fe:	a905      	add	r1, sp, #20
90003200:	4818      	ldr	r0, [pc, #96]	; (90003264 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003204:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003208:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000320c:	f007 fd62 	bl	9000acd4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003210:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003214:	a905      	add	r1, sp, #20
90003216:	4814      	ldr	r0, [pc, #80]	; (90003268 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000321a:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000321e:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003222:	f007 fd57 	bl	9000acd4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003226:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000322a:	a905      	add	r1, sp, #20
9000322c:	480f      	ldr	r0, [pc, #60]	; (9000326c <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000322e:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003230:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003234:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003238:	f007 fd4c 	bl	9000acd4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
9000323c:	462a      	mov	r2, r5
9000323e:	2105      	movs	r1, #5
90003240:	2058      	movs	r0, #88	; 0x58
90003242:	f007 fadb 	bl	9000a7fc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003246:	2058      	movs	r0, #88	; 0x58
90003248:	f007 fb16 	bl	9000a878 <HAL_NVIC_EnableIRQ>
}
9000324c:	b03a      	add	sp, #232	; 0xe8
9000324e:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003250:	f7ff fe7c 	bl	90002f4c <Error_Handler>
90003254:	e787      	b.n	90003166 <HAL_LTDC_MspInit+0x52>
90003256:	bf00      	nop
90003258:	50001000 	.word	0x50001000
9000325c:	58024400 	.word	0x58024400
90003260:	58022800 	.word	0x58022800
90003264:	58022000 	.word	0x58022000
90003268:	58022400 	.word	0x58022400
9000326c:	58021c00 	.word	0x58021c00

90003270 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003270:	4836      	ldr	r0, [pc, #216]	; (9000334c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003272:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003274:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003276:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003278:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000327e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003282:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003284:	b109      	cbz	r1, 9000328a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003286:	b038      	add	sp, #224	; 0xe0
90003288:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000328a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000328c:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000328e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003290:	a80a      	add	r0, sp, #40	; 0x28
90003292:	f026 fb9d 	bl	900299d0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003296:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000329a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000329c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a2:	f00b fa35 	bl	9000e710 <HAL_RCCEx_PeriphCLKConfig>
900032a6:	2800      	cmp	r0, #0
900032a8:	d14c      	bne.n	90003344 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032aa:	4b29      	ldr	r3, [pc, #164]	; (90003350 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ac:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b0:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032b2:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032b4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b8:	2600      	movs	r6, #0
900032ba:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032c4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032c8:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032d4:	a902      	add	r1, sp, #8
900032d6:	481f      	ldr	r0, [pc, #124]	; (90003354 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032d8:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032da:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032de:	f007 fcf9 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032e2:	f248 1233 	movw	r2, #33075	; 0x8133
900032e6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032e8:	a902      	add	r1, sp, #8
900032ea:	481b      	ldr	r0, [pc, #108]	; (90003358 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ec:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f6:	f007 fced 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900032fa:	f24c 7203 	movw	r2, #50947	; 0xc703
900032fe:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003300:	a902      	add	r1, sp, #8
90003302:	4816      	ldr	r0, [pc, #88]	; (9000335c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003304:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003306:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000330a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000330e:	f007 fce1 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003312:	f64f 023f 	movw	r2, #63551	; 0xf83f
90003316:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003318:	a902      	add	r1, sp, #8
9000331a:	4811      	ldr	r0, [pc, #68]	; (90003360 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000331c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003322:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003326:	f007 fcd5 	bl	9000acd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000332a:	22e0      	movs	r2, #224	; 0xe0
9000332c:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000332e:	a902      	add	r1, sp, #8
90003330:	480c      	ldr	r0, [pc, #48]	; (90003364 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003332:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003334:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003338:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000333c:	f007 fcca 	bl	9000acd4 <HAL_GPIO_Init>
}
90003340:	b038      	add	sp, #224	; 0xe0
90003342:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003344:	f7ff fe02 	bl	90002f4c <Error_Handler>
90003348:	e7af      	b.n	900032aa <HAL_SDRAM_MspInit+0x3a>
9000334a:	bf00      	nop
9000334c:	2400977c 	.word	0x2400977c
90003350:	58024400 	.word	0x58024400
90003354:	58021000 	.word	0x58021000
90003358:	58021800 	.word	0x58021800
9000335c:	58020c00 	.word	0x58020c00
90003360:	58021400 	.word	0x58021400
90003364:	58021c00 	.word	0x58021c00

90003368 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003368:	4b13      	ldr	r3, [pc, #76]	; (900033b8 <HAL_SDRAM_MspDeInit+0x50>)
9000336a:	681a      	ldr	r2, [r3, #0]
9000336c:	b102      	cbz	r2, 90003370 <HAL_SDRAM_MspDeInit+0x8>
9000336e:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003370:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003372:	4a12      	ldr	r2, [pc, #72]	; (900033bc <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003374:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003376:	f64f 7183 	movw	r1, #65411	; 0xff83
9000337a:	4811      	ldr	r0, [pc, #68]	; (900033c0 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000337c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000337e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90003382:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90003386:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000338a:	f007 fdd5 	bl	9000af38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000338e:	f248 1133 	movw	r1, #33075	; 0x8133
90003392:	480c      	ldr	r0, [pc, #48]	; (900033c4 <HAL_SDRAM_MspDeInit+0x5c>)
90003394:	f007 fdd0 	bl	9000af38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003398:	f24c 7103 	movw	r1, #50947	; 0xc703
9000339c:	480a      	ldr	r0, [pc, #40]	; (900033c8 <HAL_SDRAM_MspDeInit+0x60>)
9000339e:	f007 fdcb 	bl	9000af38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033a2:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033a6:	4809      	ldr	r0, [pc, #36]	; (900033cc <HAL_SDRAM_MspDeInit+0x64>)
900033a8:	f007 fdc6 	bl	9000af38 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033ac:	21e0      	movs	r1, #224	; 0xe0
900033ae:	4808      	ldr	r0, [pc, #32]	; (900033d0 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	f007 bdc0 	b.w	9000af38 <HAL_GPIO_DeInit>
900033b8:	24009778 	.word	0x24009778
900033bc:	58024400 	.word	0x58024400
900033c0:	58021000 	.word	0x58021000
900033c4:	58021800 	.word	0x58021800
900033c8:	58020c00 	.word	0x58020c00
900033cc:	58021400 	.word	0x58021400
900033d0:	58021c00 	.word	0x58021c00

900033d4 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033d4:	280f      	cmp	r0, #15
900033d6:	d901      	bls.n	900033dc <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033d8:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033da:	4770      	bx	lr
{
900033dc:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033de:	4601      	mov	r1, r0
{
900033e0:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e2:	2200      	movs	r2, #0
900033e4:	4604      	mov	r4, r0
900033e6:	2036      	movs	r0, #54	; 0x36
900033e8:	f007 fa08 	bl	9000a7fc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033ec:	2036      	movs	r0, #54	; 0x36
900033ee:	f007 fa43 	bl	9000a878 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033f2:	4b1a      	ldr	r3, [pc, #104]	; (9000345c <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033f4:	4a1a      	ldr	r2, [pc, #104]	; (90003460 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033f6:	4669      	mov	r1, sp
900033f8:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
900033fa:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fc:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003400:	f042 0210 	orr.w	r2, r2, #16
90003404:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003408:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000340c:	f003 0310 	and.w	r3, r3, #16
90003410:	9301      	str	r3, [sp, #4]
90003412:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003414:	f00b f85c 	bl	9000e4d0 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003418:	9b07      	ldr	r3, [sp, #28]
9000341a:	b9bb      	cbnz	r3, 9000344c <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
9000341c:	f00a ffc8 	bl	9000e3b0 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003420:	4b10      	ldr	r3, [pc, #64]	; (90003464 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
90003422:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90003424:	4c10      	ldr	r4, [pc, #64]	; (90003468 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003426:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
9000342a:	4d10      	ldr	r5, [pc, #64]	; (9000346c <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000342c:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003430:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003432:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90003434:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90003436:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003438:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
9000343a:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000343e:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003440:	f00b ffd8 	bl	9000f3f4 <HAL_TIM_Base_Init>
90003444:	b130      	cbz	r0, 90003454 <HAL_InitTick+0x80>
    return HAL_ERROR;
90003446:	2001      	movs	r0, #1
}
90003448:	b00b      	add	sp, #44	; 0x2c
9000344a:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
9000344c:	f00a ffb0 	bl	9000e3b0 <HAL_RCC_GetPCLK1Freq>
90003450:	0040      	lsls	r0, r0, #1
90003452:	e7e5      	b.n	90003420 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90003454:	4620      	mov	r0, r4
90003456:	f00c f883 	bl	9000f560 <HAL_TIM_Base_Start_IT>
9000345a:	e7f5      	b.n	90003448 <HAL_InitTick+0x74>
9000345c:	58024400 	.word	0x58024400
90003460:	2400007c 	.word	0x2400007c
90003464:	431bde83 	.word	0x431bde83
90003468:	24009780 	.word	0x24009780
9000346c:	40001000 	.word	0x40001000

90003470 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003470:	4770      	bx	lr
90003472:	bf00      	nop

90003474 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003474:	e7fe      	b.n	90003474 <HardFault_Handler>
90003476:	bf00      	nop

90003478 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003478:	e7fe      	b.n	90003478 <MemManage_Handler>
9000347a:	bf00      	nop

9000347c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <BusFault_Handler>
9000347e:	bf00      	nop

90003480 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <UsageFault_Handler>
90003482:	bf00      	nop

90003484 <DebugMon_Handler>:
90003484:	4770      	bx	lr
90003486:	bf00      	nop

90003488 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003488:	4801      	ldr	r0, [pc, #4]	; (90003490 <TIM6_DAC_IRQHandler+0x8>)
9000348a:	f00c b8cd 	b.w	9000f628 <HAL_TIM_IRQHandler>
9000348e:	bf00      	nop
90003490:	24009780 	.word	0x24009780

90003494 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90003494:	4801      	ldr	r0, [pc, #4]	; (9000349c <LTDC_IRQHandler+0x8>)
90003496:	f009 beb5 	b.w	9000d204 <HAL_LTDC_IRQHandler>
9000349a:	bf00      	nop
9000349c:	240095c0 	.word	0x240095c0

900034a0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a0:	4801      	ldr	r0, [pc, #4]	; (900034a8 <DMA2D_IRQHandler+0x8>)
900034a2:	f007 bb13 	b.w	9000aacc <HAL_DMA2D_IRQHandler>
900034a6:	bf00      	nop
900034a8:	24009500 	.word	0x24009500

900034ac <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034ac:	4801      	ldr	r0, [pc, #4]	; (900034b4 <JPEG_IRQHandler+0x8>)
900034ae:	f009 bd95 	b.w	9000cfdc <HAL_JPEG_IRQHandler>
900034b2:	bf00      	nop
900034b4:	24009568 	.word	0x24009568

900034b8 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034b8:	4804      	ldr	r0, [pc, #16]	; (900034cc <MDMA_IRQHandler+0x14>)
{
900034ba:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034bc:	f00a f956 	bl	9000d76c <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c0:	4803      	ldr	r0, [pc, #12]	; (900034d0 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c6:	f00a b951 	b.w	9000d76c <HAL_MDMA_IRQHandler>
900034ca:	bf00      	nop
900034cc:	240096d4 	.word	0x240096d4
900034d0:	24009668 	.word	0x24009668

900034d4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034d4:	2001      	movs	r0, #1
900034d6:	4770      	bx	lr

900034d8 <_kill>:

int _kill(int pid, int sig)
{
900034d8:	b508      	push	{r3, lr}
	errno = EINVAL;
900034da:	f026 fb2d 	bl	90029b38 <__errno>
900034de:	2216      	movs	r2, #22
900034e0:	4603      	mov	r3, r0
	return -1;
}
900034e2:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034e6:	601a      	str	r2, [r3, #0]
}
900034e8:	bd08      	pop	{r3, pc}
900034ea:	bf00      	nop

900034ec <_exit>:

void _exit (int status)
{
900034ec:	b508      	push	{r3, lr}
	errno = EINVAL;
900034ee:	f026 fb23 	bl	90029b38 <__errno>
900034f2:	2316      	movs	r3, #22
900034f4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034f6:	e7fe      	b.n	900034f6 <_exit+0xa>

900034f8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
900034f8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900034fa:	1e16      	subs	r6, r2, #0
900034fc:	dd07      	ble.n	9000350e <_read+0x16>
900034fe:	460c      	mov	r4, r1
90003500:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90003502:	f3af 8000 	nop.w
90003506:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000350a:	42a5      	cmp	r5, r4
9000350c:	d1f9      	bne.n	90003502 <_read+0xa>
	}

return len;
}
9000350e:	4630      	mov	r0, r6
90003510:	bd70      	pop	{r4, r5, r6, pc}
90003512:	bf00      	nop

90003514 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003514:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003516:	1e16      	subs	r6, r2, #0
90003518:	dd07      	ble.n	9000352a <_write+0x16>
9000351a:	460c      	mov	r4, r1
9000351c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000351e:	f814 0b01 	ldrb.w	r0, [r4], #1
90003522:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003526:	42ac      	cmp	r4, r5
90003528:	d1f9      	bne.n	9000351e <_write+0xa>
	}
	return len;
}
9000352a:	4630      	mov	r0, r6
9000352c:	bd70      	pop	{r4, r5, r6, pc}
9000352e:	bf00      	nop

90003530 <_close>:

int _close(int file)
{
	return -1;
}
90003530:	f04f 30ff 	mov.w	r0, #4294967295
90003534:	4770      	bx	lr
90003536:	bf00      	nop

90003538 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003538:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
9000353c:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000353e:	604b      	str	r3, [r1, #4]
}
90003540:	4770      	bx	lr
90003542:	bf00      	nop

90003544 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90003544:	2001      	movs	r0, #1
90003546:	4770      	bx	lr

90003548 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003548:	2000      	movs	r0, #0
9000354a:	4770      	bx	lr

9000354c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
9000354c:	4770      	bx	lr
9000354e:	bf00      	nop

90003550 <_ZN23ApplicationFontProviderD0Ev>:
90003550:	b510      	push	{r4, lr}
90003552:	4604      	mov	r4, r0
90003554:	2104      	movs	r1, #4
90003556:	f025 ff85 	bl	90029464 <_ZdlPvj>
9000355a:	4620      	mov	r0, r4
9000355c:	bd10      	pop	{r4, pc}
9000355e:	bf00      	nop

90003560 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003560:	2901      	cmp	r1, #1
{
90003562:	b508      	push	{r3, lr}
    switch (typography)
90003564:	d004      	beq.n	90003570 <_ZN23ApplicationFontProvider7getFontEt+0x10>
90003566:	2902      	cmp	r1, #2
90003568:	d00a      	beq.n	90003580 <_ZN23ApplicationFontProvider7getFontEt+0x20>
9000356a:	b129      	cbz	r1, 90003578 <_ZN23ApplicationFontProvider7getFontEt+0x18>
9000356c:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000356e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003570:	f001 f87a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003574:	6840      	ldr	r0, [r0, #4]
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003578:	f001 f876 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6800      	ldr	r0, [r0, #0]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003580:	f001 f872 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6880      	ldr	r0, [r0, #8]
}
90003586:	bd08      	pop	{r3, pc}

90003588 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003588:	4800      	ldr	r0, [pc, #0]	; (9000358c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000358a:	4770      	bx	lr
9000358c:	9002bf3c 	.word	0x9002bf3c

90003590 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003590:	2013      	movs	r0, #19
90003592:	4770      	bx	lr

90003594 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90003594:	b169      	cbz	r1, 900035b2 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003596:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003598:	b530      	push	{r4, r5, lr}
9000359a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000359c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6895      	ldr	r5, [r2, #8]
900035a0:	f10d 0303 	add.w	r3, sp, #3
900035a4:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035a6:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035a8:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035ac:	47a8      	blx	r5
        return glyph;
    }
900035ae:	b003      	add	sp, #12
900035b0:	bd30      	pop	{r4, r5, pc}
            return 0;
900035b2:	4608      	mov	r0, r1
    }
900035b4:	4770      	bx	lr
900035b6:	bf00      	nop

900035b8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035b8:	89c0      	ldrh	r0, [r0, #14]
900035ba:	4770      	bx	lr

900035bc <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035bc:	8a00      	ldrh	r0, [r0, #16]
900035be:	4770      	bx	lr

900035c0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c0:	88c0      	ldrh	r0, [r0, #6]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035c4:	8880      	ldrh	r0, [r0, #4]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035c8:	7a80      	ldrb	r0, [r0, #10]
    }
900035ca:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	09c0      	lsrs	r0, r0, #7
900035d4:	4770      	bx	lr
900035d6:	bf00      	nop

900035d8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035d8:	4770      	bx	lr
900035da:	bf00      	nop

900035dc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035dc:	b510      	push	{r4, lr}
900035de:	4604      	mov	r4, r0
    }
900035e0:	2108      	movs	r1, #8
900035e2:	f025 ff3f 	bl	90029464 <_ZdlPvj>
900035e6:	4620      	mov	r0, r4
900035e8:	bd10      	pop	{r4, pc}
900035ea:	bf00      	nop

900035ec <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035ec:	4770      	bx	lr
900035ee:	bf00      	nop

900035f0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f0:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035f4:	6808      	ldr	r0, [r1, #0]
900035f6:	6849      	ldr	r1, [r1, #4]
900035f8:	c303      	stmia	r3!, {r0, r1}
    }
900035fa:	4770      	bx	lr

900035fc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900035fc:	6a80      	ldr	r0, [r0, #40]	; 0x28
900035fe:	4770      	bx	lr

90003600 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003600:	4770      	bx	lr
90003602:	bf00      	nop

90003604 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003608:	6041      	str	r1, [r0, #4]
    }
9000360a:	4770      	bx	lr

9000360c <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000360c:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003610:	688a      	ldr	r2, [r1, #8]
90003612:	f8c0 c000 	str.w	ip, [r0]
90003616:	6042      	str	r2, [r0, #4]
        }
90003618:	4770      	bx	lr
9000361a:	bf00      	nop

9000361c <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003624:	4905      	ldr	r1, [pc, #20]	; (9000363c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90003626:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90003628:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000362c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003630:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003634:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
90003638:	4770      	bx	lr
9000363a:	bf00      	nop
9000363c:	90003b3d 	.word	0x90003b3d

90003640 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003640:	2301      	movs	r3, #1
90003642:	7203      	strb	r3, [r0, #8]
    }
90003644:	4770      	bx	lr
90003646:	bf00      	nop

90003648 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f025 fed5 	bl	90029464 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f025 fecd 	bl	90029464 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f025 fec4 	bl	90029464 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f025 febd 	bl	90029464 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f025 feb5 	bl	90029464 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
90003700:	b510      	push	{r4, lr}
90003702:	4604      	mov	r4, r0
90003704:	2140      	movs	r1, #64	; 0x40
90003706:	f025 fead 	bl	90029464 <_ZdlPvj>
9000370a:	4620      	mov	r0, r4
9000370c:	bd10      	pop	{r4, pc}
9000370e:	bf00      	nop

90003710 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003710:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003712:	f014 fd69 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003716:	6803      	ldr	r3, [r0, #0]
    }
90003718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000371c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000371e:	4718      	bx	r3

90003720 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003720:	4b05      	ldr	r3, [pc, #20]	; (90003738 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
90003722:	781b      	ldrb	r3, [r3, #0]
90003724:	b13b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90003726:	6843      	ldr	r3, [r0, #4]
90003728:	b12b      	cbz	r3, 90003736 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
9000372a:	681a      	ldr	r2, [r3, #0]
9000372c:	f100 010c 	add.w	r1, r0, #12
90003730:	4618      	mov	r0, r3
90003732:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003734:	4718      	bx	r3
        }
    }
90003736:	4770      	bx	lr
90003738:	24039acb 	.word	0x24039acb

9000373c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
9000373c:	b510      	push	{r4, lr}
9000373e:	4604      	mov	r4, r0
        animationCounter++;
90003740:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003742:	b082      	sub	sp, #8
        animationCounter++;
90003744:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003746:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
90003748:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000374a:	4298      	cmp	r0, r3
        animationCounter++;
9000374c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
9000374e:	d905      	bls.n	9000375c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003750:	2201      	movs	r2, #1
            animationCounter = 0;
90003752:	2300      	movs	r3, #0
            done = true;
90003754:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
90003756:	72a3      	strb	r3, [r4, #10]
    }
90003758:	b002      	add	sp, #8
9000375a:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000375c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003760:	2100      	movs	r1, #0
90003762:	f016 fb2b 	bl	90019dbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003766:	f010 0201 	ands.w	r2, r0, #1
9000376a:	b283      	uxth	r3, r0
9000376c:	d127      	bne.n	900037be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
9000376e:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003770:	4a17      	ldr	r2, [pc, #92]	; (900037d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003772:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003774:	8810      	ldrh	r0, [r2, #0]
90003776:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003778:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000377a:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
9000377c:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000377e:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003780:	4669      	mov	r1, sp
        rect.width = width;
90003782:	8322      	strh	r2, [r4, #24]
90003784:	f8ad 2000 	strh.w	r2, [sp]
90003788:	2200      	movs	r2, #0
9000378a:	f8ad 3004 	strh.w	r3, [sp, #4]
9000378e:	6803      	ldr	r3, [r0, #0]
90003790:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003794:	4a0f      	ldr	r2, [pc, #60]	; (900037d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
90003796:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003798:	f9b2 2000 	ldrsh.w	r2, [r2]
9000379c:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
900037a0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
900037a2:	7aa3      	ldrb	r3, [r4, #10]
900037a4:	2b01      	cmp	r3, #1
900037a6:	d1d7      	bne.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
900037a8:	4b0b      	ldr	r3, [pc, #44]	; (900037d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
900037aa:	781b      	ldrb	r3, [r3, #0]
900037ac:	2b00      	cmp	r3, #0
900037ae:	d0d3      	beq.n	90003758 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037b0:	f014 fd1a 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
    }
900037b4:	b002      	add	sp, #8
900037b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
900037ba:	f014 bd1b 	b.w	900181f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900037be:	f64f 71ff 	movw	r1, #65535	; 0xffff
900037c2:	2800      	cmp	r0, #0
900037c4:	bfd8      	it	le
900037c6:	460a      	movle	r2, r1
900037c8:	4413      	add	r3, r2
900037ca:	b29b      	uxth	r3, r3
900037cc:	81e3      	strh	r3, [r4, #14]
900037ce:	e7cf      	b.n	90003770 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037d0:	24039ac0 	.word	0x24039ac0
900037d4:	24039ac2 	.word	0x24039ac2
900037d8:	24039aca 	.word	0x24039aca

900037dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900037dc:	b570      	push	{r4, r5, r6, lr}
900037de:	4605      	mov	r5, r0
        animationCounter++;
900037e0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900037e4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900037e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900037ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900037ec:	4298      	cmp	r0, r3
        animationCounter++;
900037ee:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900037f2:	d905      	bls.n	90003800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900037f4:	2201      	movs	r2, #1
            animationCounter = 0;
900037f6:	2300      	movs	r3, #0
            done = true;
900037f8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900037fa:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900037fe:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003800:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003804:	2100      	movs	r1, #0
90003806:	f016 fad9 	bl	90019dbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000380a:	f010 0201 	ands.w	r2, r0, #1
9000380e:	b283      	uxth	r3, r0
90003810:	d006      	beq.n	90003820 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003812:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003816:	2800      	cmp	r0, #0
90003818:	bfd8      	it	le
9000381a:	460a      	movle	r2, r1
9000381c:	4413      	add	r3, r2
9000381e:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003820:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003822:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003824:	6802      	ldr	r2, [r0, #0]
90003826:	4912      	ldr	r1, [pc, #72]	; (90003870 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003828:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
9000382a:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
9000382c:	87ab      	strh	r3, [r5, #60]	; 0x3c
9000382e:	428a      	cmp	r2, r1
90003830:	d11b      	bne.n	9000386a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003832:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003834:	b164      	cbz	r4, 90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003836:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003838:	4e0e      	ldr	r6, [pc, #56]	; (90003874 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
9000383a:	6823      	ldr	r3, [r4, #0]
9000383c:	88a1      	ldrh	r1, [r4, #4]
9000383e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003840:	4411      	add	r1, r2
90003842:	42b3      	cmp	r3, r6
90003844:	b209      	sxth	r1, r1
        rect.x = x;
90003846:	d109      	bne.n	9000385c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003848:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000384a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000384c:	2c00      	cmp	r4, #0
9000384e:	d1f4      	bne.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003850:	6868      	ldr	r0, [r5, #4]
90003852:	6803      	ldr	r3, [r0, #0]
    }
90003854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003858:	695b      	ldr	r3, [r3, #20]
9000385a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
9000385c:	4620      	mov	r0, r4
9000385e:	4798      	blx	r3
90003860:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003862:	2c00      	cmp	r4, #0
90003864:	d0f4      	beq.n	90003850 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003866:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003868:	e7e7      	b.n	9000383a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
9000386a:	4790      	blx	r2
9000386c:	4604      	mov	r4, r0
9000386e:	e7e1      	b.n	90003834 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003870:	900035fd 	.word	0x900035fd
90003874:	9000228d 	.word	0x9000228d

90003878 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003878:	7a03      	ldrb	r3, [r0, #8]
9000387a:	bb2b      	cbnz	r3, 900038c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
9000387c:	4a14      	ldr	r2, [pc, #80]	; (900038d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
9000387e:	b570      	push	{r4, r5, r6, lr}
90003880:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003882:	6840      	ldr	r0, [r0, #4]
90003884:	6803      	ldr	r3, [r0, #0]
90003886:	69db      	ldr	r3, [r3, #28]
90003888:	4293      	cmp	r3, r2
9000388a:	d11e      	bne.n	900038ca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
9000388c:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
9000388e:	b164      	cbz	r4, 900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003890:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003892:	4e10      	ldr	r6, [pc, #64]	; (900038d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003894:	6823      	ldr	r3, [r4, #0]
90003896:	88a1      	ldrh	r1, [r4, #4]
90003898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000389a:	1a89      	subs	r1, r1, r2
9000389c:	42b3      	cmp	r3, r6
9000389e:	b209      	sxth	r1, r1
        rect.x = x;
900038a0:	d10b      	bne.n	900038ba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
900038a2:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900038a4:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038a6:	2c00      	cmp	r4, #0
900038a8:	d1f4      	bne.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	f105 010c 	add.w	r1, r5, #12
900038b0:	6803      	ldr	r3, [r0, #0]
    }
900038b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
900038b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900038b8:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
900038ba:	4620      	mov	r0, r4
900038bc:	4798      	blx	r3
900038be:	69a4      	ldr	r4, [r4, #24]
        while (d)
900038c0:	2c00      	cmp	r4, #0
900038c2:	d0f2      	beq.n	900038aa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
900038c4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900038c6:	e7e5      	b.n	90003894 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
900038c8:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
900038ca:	4798      	blx	r3
900038cc:	4604      	mov	r4, r0
900038ce:	e7de      	b.n	9000388e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
900038d0:	900035fd 	.word	0x900035fd
900038d4:	9000228d 	.word	0x9000228d

900038d8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900038d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038dc:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900038e0:	b083      	sub	sp, #12
900038e2:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900038e4:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900038e6:	9301      	str	r3, [sp, #4]
900038e8:	6803      	ldr	r3, [r0, #0]
900038ea:	6a1b      	ldr	r3, [r3, #32]
900038ec:	4798      	blx	r3
900038ee:	f5b0 6f91 	cmp.w	r0, #1160	; 0x488
900038f2:	f0c0 80ba 	bcc.w	90003a6a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900038f6:	6868      	ldr	r0, [r5, #4]
900038f8:	6803      	ldr	r3, [r0, #0]
900038fa:	6a1b      	ldr	r3, [r3, #32]
900038fc:	4798      	blx	r3
900038fe:	280f      	cmp	r0, #15
90003900:	f240 80bf 	bls.w	90003a82 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003904:	68e8      	ldr	r0, [r5, #12]
90003906:	6803      	ldr	r3, [r0, #0]
90003908:	6a1b      	ldr	r3, [r3, #32]
9000390a:	4798      	blx	r3
9000390c:	2837      	cmp	r0, #55	; 0x37
9000390e:	f240 80b2 	bls.w	90003a76 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
90003912:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003abc <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
90003916:	f014 fc67 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
9000391a:	3004      	adds	r0, #4
9000391c:	f014 fcb1 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003920:	f8d9 0000 	ldr.w	r0, [r9]
90003924:	b140      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003926:	6803      	ldr	r3, [r0, #0]
90003928:	68db      	ldr	r3, [r3, #12]
9000392a:	4798      	blx	r3
    if (*currentTrans)
9000392c:	f8d9 0000 	ldr.w	r0, [r9]
90003930:	b110      	cbz	r0, 90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003932:	6803      	ldr	r3, [r0, #0]
90003934:	681b      	ldr	r3, [r3, #0]
90003936:	4798      	blx	r3
    if (*currentScreen)
90003938:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003ac0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
9000393c:	f8d8 0000 	ldr.w	r0, [r8]
90003940:	2800      	cmp	r0, #0
90003942:	d07f      	beq.n	90003a44 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
90003944:	6803      	ldr	r3, [r0, #0]
90003946:	695b      	ldr	r3, [r3, #20]
90003948:	4798      	blx	r3
    if (*currentPresenter)
9000394a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
9000394e:	2800      	cmp	r0, #0
90003950:	d073      	beq.n	90003a3a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
90003952:	6803      	ldr	r3, [r0, #0]
90003954:	685b      	ldr	r3, [r3, #4]
90003956:	4798      	blx	r3
    if (*currentScreen)
90003958:	f8d8 0000 	ldr.w	r0, [r8]
9000395c:	b110      	cbz	r0, 90003964 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
9000395e:	6803      	ldr	r3, [r0, #0]
90003960:	681b      	ldr	r3, [r3, #0]
90003962:	4798      	blx	r3
    if (*currentPresenter)
90003964:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003968:	b110      	cbz	r0, 90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
9000396a:	6803      	ldr	r3, [r0, #0]
9000396c:	689b      	ldr	r3, [r3, #8]
9000396e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003970:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003972:	2100      	movs	r1, #0
90003974:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
90003976:	468a      	mov	sl, r1
90003978:	6a52      	ldr	r2, [r2, #36]	; 0x24
9000397a:	4790      	blx	r2
          solid()
9000397c:	4a44      	ldr	r2, [pc, #272]	; (90003a90 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
9000397e:	f100 0b10 	add.w	fp, r0, #16
90003982:	4604      	mov	r4, r0
90003984:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
90003986:	2214      	movs	r2, #20
          solid()
90003988:	4651      	mov	r1, sl
9000398a:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
9000398e:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
90003992:	2228      	movs	r2, #40	; 0x28
90003994:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003998:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
9000399c:	4658      	mov	r0, fp
9000399e:	f026 f817 	bl	900299d0 <memset>
            targetValue = HAL::DISPLAY_WIDTH;
900039a2:	4a3c      	ldr	r2, [pc, #240]	; (90003a94 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900039a4:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
900039a6:	f44f 7180 	mov.w	r1, #256	; 0x100
900039aa:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
900039ae:	f8c4 a014 	str.w	sl, [r4, #20]
900039b2:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
900039b4:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900039b6:	4a38      	ldr	r2, [pc, #224]	; (90003a98 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
900039b8:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
900039bc:	8362      	strh	r2, [r4, #26]
900039be:	6802      	ldr	r2, [r0, #0]
900039c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
900039c2:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
900039c4:	4935      	ldr	r1, [pc, #212]	; (90003a9c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
900039c6:	6121      	str	r1, [r4, #16]
900039c8:	4651      	mov	r1, sl
900039ca:	4790      	blx	r2
900039cc:	4606      	mov	r6, r0
900039ce:	f004 f845 	bl	90007a5c <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900039d2:	6868      	ldr	r0, [r5, #4]
900039d4:	4651      	mov	r1, sl
900039d6:	6803      	ldr	r3, [r0, #0]
900039d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900039da:	4798      	blx	r3
900039dc:	4605      	mov	r5, r0
900039de:	4631      	mov	r1, r6
900039e0:	f003 ffc6 	bl	90007970 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900039e4:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900039e8:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900039ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900039f0:	2d00      	cmp	r5, #0
900039f2:	d02c      	beq.n	90003a4e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900039f4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900039f6:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900039f8:	4630      	mov	r0, r6
900039fa:	6013      	str	r3, [r2, #0]
900039fc:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900039fe:	60aa      	str	r2, [r5, #8]
90003a00:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003a02:	63f5      	str	r5, [r6, #60]	; 0x3c
90003a04:	4798      	blx	r3
    newPresenter->activate();
90003a06:	682b      	ldr	r3, [r5, #0]
90003a08:	4628      	mov	r0, r5
90003a0a:	681b      	ldr	r3, [r3, #0]
90003a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a0e:	4621      	mov	r1, r4
90003a10:	4630      	mov	r0, r6
90003a12:	f016 f9cd 	bl	90019db0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003a16:	6823      	ldr	r3, [r4, #0]
90003a18:	4a21      	ldr	r2, [pc, #132]	; (90003aa0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
90003a1a:	691b      	ldr	r3, [r3, #16]
90003a1c:	4293      	cmp	r3, r2
90003a1e:	d118      	bne.n	90003a52 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
90003a20:	6860      	ldr	r0, [r4, #4]
90003a22:	4659      	mov	r1, fp
90003a24:	6803      	ldr	r3, [r0, #0]
90003a26:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003a28:	4798      	blx	r3
    newTransition->invalidate();
90003a2a:	6823      	ldr	r3, [r4, #0]
90003a2c:	4a1d      	ldr	r2, [pc, #116]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a2e:	695b      	ldr	r3, [r3, #20]
90003a30:	4293      	cmp	r3, r2
90003a32:	d115      	bne.n	90003a60 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
90003a34:	b003      	add	sp, #12
90003a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003a3a:	f8d8 0000 	ldr.w	r0, [r8]
90003a3e:	2800      	cmp	r0, #0
90003a40:	d18d      	bne.n	9000395e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
90003a42:	e795      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
90003a44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a48:	2800      	cmp	r0, #0
90003a4a:	d182      	bne.n	90003952 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003a4c:	e790      	b.n	90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003a4e:	462b      	mov	r3, r5
90003a50:	e7d1      	b.n	900039f6 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
90003a52:	4620      	mov	r0, r4
90003a54:	4798      	blx	r3
    newTransition->invalidate();
90003a56:	6823      	ldr	r3, [r4, #0]
90003a58:	4a12      	ldr	r2, [pc, #72]	; (90003aa4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003a5a:	695b      	ldr	r3, [r3, #20]
90003a5c:	4293      	cmp	r3, r2
90003a5e:	d0e9      	beq.n	90003a34 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003a60:	4620      	mov	r0, r4
90003a62:	b003      	add	sp, #12
90003a64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003a68:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003a6a:	4b0f      	ldr	r3, [pc, #60]	; (90003aa8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003a6c:	21a3      	movs	r1, #163	; 0xa3
90003a6e:	4a0f      	ldr	r2, [pc, #60]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a70:	480f      	ldr	r0, [pc, #60]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a72:	f025 fd25 	bl	900294c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003a76:	4b0f      	ldr	r3, [pc, #60]	; (90003ab4 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003a78:	21a5      	movs	r1, #165	; 0xa5
90003a7a:	4a0c      	ldr	r2, [pc, #48]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a7c:	480c      	ldr	r0, [pc, #48]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a7e:	f025 fd1f 	bl	900294c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003a82:	4b0d      	ldr	r3, [pc, #52]	; (90003ab8 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
90003a84:	21a4      	movs	r1, #164	; 0xa4
90003a86:	4a09      	ldr	r2, [pc, #36]	; (90003aac <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003a88:	4809      	ldr	r0, [pc, #36]	; (90003ab0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003a8a:	f025 fd19 	bl	900294c0 <__assert_func>
90003a8e:	bf00      	nop
90003a90:	9002c894 	.word	0x9002c894
90003a94:	24039ac0 	.word	0x24039ac0
90003a98:	24039ac2 	.word	0x24039ac2
90003a9c:	9002c79c 	.word	0x9002c79c
90003aa0:	90003669 	.word	0x90003669
90003aa4:	90003675 	.word	0x90003675
90003aa8:	9002c0c8 	.word	0x9002c0c8
90003aac:	9002c158 	.word	0x9002c158
90003ab0:	9002c284 	.word	0x9002c284
90003ab4:	9002c370 	.word	0x9002c370
90003ab8:	9002c2cc 	.word	0x9002c2cc
90003abc:	24039b14 	.word	0x24039b14
90003ac0:	24039b10 	.word	0x24039b10

90003ac4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ac4:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003ac8:	b1d3      	cbz	r3, 90003b00 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003aca:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003acc:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ace:	68d1      	ldr	r1, [r2, #12]
90003ad0:	4604      	mov	r4, r0
90003ad2:	4818      	ldr	r0, [pc, #96]	; (90003b34 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003ad4:	4281      	cmp	r1, r0
90003ad6:	d118      	bne.n	90003b0a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003ad8:	6858      	ldr	r0, [r3, #4]
90003ada:	b180      	cbz	r0, 90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003adc:	6899      	ldr	r1, [r3, #8]
90003ade:	b1e1      	cbz	r1, 90003b1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003ae0:	6892      	ldr	r2, [r2, #8]
90003ae2:	4915      	ldr	r1, [pc, #84]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003ae4:	428a      	cmp	r2, r1
90003ae6:	d122      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003ae8:	68da      	ldr	r2, [r3, #12]
90003aea:	6858      	ldr	r0, [r3, #4]
90003aec:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003af0:	07d2      	lsls	r2, r2, #31
90003af2:	d406      	bmi.n	90003b02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003af4:	689b      	ldr	r3, [r3, #8]
90003af6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003af8:	2300      	movs	r3, #0
90003afa:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003afe:	bd70      	pop	{r4, r5, r6, pc}
90003b00:	4770      	bx	lr
90003b02:	6899      	ldr	r1, [r3, #8]
90003b04:	6803      	ldr	r3, [r0, #0]
90003b06:	585b      	ldr	r3, [r3, r1]
90003b08:	e7f5      	b.n	90003af6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b0a:	4618      	mov	r0, r3
90003b0c:	4788      	blx	r1
90003b0e:	2800      	cmp	r0, #0
90003b10:	d0f5      	beq.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003b12:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003b16:	681a      	ldr	r2, [r3, #0]
90003b18:	e7e2      	b.n	90003ae0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003b1a:	68dd      	ldr	r5, [r3, #12]
90003b1c:	07ee      	lsls	r6, r5, #31
90003b1e:	d5ee      	bpl.n	90003afe <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003b20:	6892      	ldr	r2, [r2, #8]
90003b22:	4e05      	ldr	r6, [pc, #20]	; (90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003b24:	42b2      	cmp	r2, r6
90003b26:	d102      	bne.n	90003b2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003b28:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003b2c:	e7ea      	b.n	90003b04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003b2e:	4618      	mov	r0, r3
90003b30:	4790      	blx	r2
90003b32:	e7e1      	b.n	90003af8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003b34:	90003699 	.word	0x90003699
90003b38:	90003679 	.word	0x90003679

90003b3c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b40:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b44:	4607      	mov	r7, r0
90003b46:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b48:	68a0      	ldr	r0, [r4, #8]
90003b4a:	6803      	ldr	r3, [r0, #0]
90003b4c:	6a1b      	ldr	r3, [r3, #32]
90003b4e:	4798      	blx	r3
90003b50:	f5b0 7f1a 	cmp.w	r0, #616	; 0x268
90003b54:	f0c0 809e 	bcc.w	90003c94 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b58:	6860      	ldr	r0, [r4, #4]
90003b5a:	6803      	ldr	r3, [r0, #0]
90003b5c:	6a1b      	ldr	r3, [r3, #32]
90003b5e:	4798      	blx	r3
90003b60:	280f      	cmp	r0, #15
90003b62:	f240 80a3 	bls.w	90003cac <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b66:	68e0      	ldr	r0, [r4, #12]
90003b68:	6803      	ldr	r3, [r0, #0]
90003b6a:	6a1b      	ldr	r3, [r3, #32]
90003b6c:	4798      	blx	r3
90003b6e:	280b      	cmp	r0, #11
90003b70:	f240 8096 	bls.w	90003ca0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b74:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b78:	f014 fb36 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003b7c:	3004      	adds	r0, #4
90003b7e:	f014 fb80 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b82:	f8d9 0000 	ldr.w	r0, [r9]
90003b86:	b140      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b88:	6803      	ldr	r3, [r0, #0]
90003b8a:	68db      	ldr	r3, [r3, #12]
90003b8c:	4798      	blx	r3
    if (*currentTrans)
90003b8e:	f8d9 0000 	ldr.w	r0, [r9]
90003b92:	b110      	cbz	r0, 90003b9a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b94:	6803      	ldr	r3, [r0, #0]
90003b96:	681b      	ldr	r3, [r3, #0]
90003b98:	4798      	blx	r3
    if (*currentScreen)
90003b9a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003b9e:	f8d8 0000 	ldr.w	r0, [r8]
90003ba2:	2800      	cmp	r0, #0
90003ba4:	d063      	beq.n	90003c6e <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003ba6:	6803      	ldr	r3, [r0, #0]
90003ba8:	695b      	ldr	r3, [r3, #20]
90003baa:	4798      	blx	r3
    if (*currentPresenter)
90003bac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb0:	2800      	cmp	r0, #0
90003bb2:	d057      	beq.n	90003c64 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bb4:	6803      	ldr	r3, [r0, #0]
90003bb6:	685b      	ldr	r3, [r3, #4]
90003bb8:	4798      	blx	r3
    if (*currentScreen)
90003bba:	f8d8 0000 	ldr.w	r0, [r8]
90003bbe:	b110      	cbz	r0, 90003bc6 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc0:	6803      	ldr	r3, [r0, #0]
90003bc2:	681b      	ldr	r3, [r3, #0]
90003bc4:	4798      	blx	r3
    if (*currentPresenter)
90003bc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bca:	b110      	cbz	r0, 90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bcc:	6803      	ldr	r3, [r0, #0]
90003bce:	689b      	ldr	r3, [r3, #8]
90003bd0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bd2:	68e0      	ldr	r0, [r4, #12]
90003bd4:	2100      	movs	r1, #0
90003bd6:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003bd8:	468b      	mov	fp, r1
90003bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bdc:	4798      	blx	r3
90003bde:	4b36      	ldr	r3, [pc, #216]	; (90003cb8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be0:	4605      	mov	r5, r0
90003be2:	f8c0 b004 	str.w	fp, [r0, #4]
90003be6:	f880 b008 	strb.w	fp, [r0, #8]
90003bea:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bec:	68a0      	ldr	r0, [r4, #8]
90003bee:	602b      	str	r3, [r5, #0]
90003bf0:	6803      	ldr	r3, [r0, #0]
90003bf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bf4:	4798      	blx	r3
90003bf6:	4606      	mov	r6, r0
90003bf8:	f003 fe94 	bl	90007924 <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003bfc:	6860      	ldr	r0, [r4, #4]
90003bfe:	4659      	mov	r1, fp
90003c00:	6803      	ldr	r3, [r0, #0]
90003c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c04:	4798      	blx	r3
90003c06:	4604      	mov	r4, r0
90003c08:	4631      	mov	r1, r6
90003c0a:	f003 fe5f 	bl	900078cc <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c0e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c12:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c16:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c1a:	2c00      	cmp	r4, #0
90003c1c:	d02c      	beq.n	90003c78 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c1e:	1d23      	adds	r3, r4, #4
90003c20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c24:	4630      	mov	r0, r6
90003c26:	6833      	ldr	r3, [r6, #0]
90003c28:	f8c4 a008 	str.w	sl, [r4, #8]
90003c2c:	68db      	ldr	r3, [r3, #12]
90003c2e:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c30:	4798      	blx	r3
    newPresenter->activate();
90003c32:	6823      	ldr	r3, [r4, #0]
90003c34:	4620      	mov	r0, r4
90003c36:	681b      	ldr	r3, [r3, #0]
90003c38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c3a:	4629      	mov	r1, r5
90003c3c:	4630      	mov	r0, r6
90003c3e:	f016 f8b7 	bl	90019db0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c42:	682b      	ldr	r3, [r5, #0]
90003c44:	491d      	ldr	r1, [pc, #116]	; (90003cbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c46:	691a      	ldr	r2, [r3, #16]
90003c48:	428a      	cmp	r2, r1
90003c4a:	d117      	bne.n	90003c7c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c4c:	695b      	ldr	r3, [r3, #20]
90003c4e:	4a1c      	ldr	r2, [pc, #112]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c50:	4293      	cmp	r3, r2
90003c52:	d11a      	bne.n	90003c8a <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c54:	f014 fac8 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003c58:	6803      	ldr	r3, [r0, #0]
90003c5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c5c:	b001      	add	sp, #4
90003c5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c62:	4718      	bx	r3
    if (*currentScreen)
90003c64:	f8d8 0000 	ldr.w	r0, [r8]
90003c68:	2800      	cmp	r0, #0
90003c6a:	d1a9      	bne.n	90003bc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c6c:	e7b1      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c72:	2800      	cmp	r0, #0
90003c74:	d19e      	bne.n	90003bb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c76:	e7ac      	b.n	90003bd2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c78:	4623      	mov	r3, r4
90003c7a:	e7d1      	b.n	90003c20 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c7c:	4628      	mov	r0, r5
90003c7e:	4790      	blx	r2
    newTransition->invalidate();
90003c80:	682b      	ldr	r3, [r5, #0]
90003c82:	4a0f      	ldr	r2, [pc, #60]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c84:	695b      	ldr	r3, [r3, #20]
90003c86:	4293      	cmp	r3, r2
90003c88:	d0e4      	beq.n	90003c54 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c8a:	4628      	mov	r0, r5
90003c8c:	b001      	add	sp, #4
90003c8e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c92:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c94:	4b0b      	ldr	r3, [pc, #44]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c96:	21a3      	movs	r1, #163	; 0xa3
90003c98:	4a0b      	ldr	r2, [pc, #44]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003c9a:	480c      	ldr	r0, [pc, #48]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003c9c:	f025 fc10 	bl	900294c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca0:	4b0b      	ldr	r3, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003ca2:	21a5      	movs	r1, #165	; 0xa5
90003ca4:	4a08      	ldr	r2, [pc, #32]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca6:	4809      	ldr	r0, [pc, #36]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca8:	f025 fc0a 	bl	900294c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cac:	4b09      	ldr	r3, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cae:	21a4      	movs	r1, #164	; 0xa4
90003cb0:	4a05      	ldr	r2, [pc, #20]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cb2:	4806      	ldr	r0, [pc, #24]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb4:	f025 fc04 	bl	900294c0 <__assert_func>
90003cb8:	9002c870 	.word	0x9002c870
90003cbc:	90003605 	.word	0x90003605
90003cc0:	90003711 	.word	0x90003711
90003cc4:	9002c0c8 	.word	0x9002c0c8
90003cc8:	9002c414 	.word	0x9002c414
90003ccc:	9002c284 	.word	0x9002c284
90003cd0:	9002c370 	.word	0x9002c370
90003cd4:	9002c2cc 	.word	0x9002c2cc
90003cd8:	24039b14 	.word	0x24039b14
90003cdc:	24039b10 	.word	0x24039b10

90003ce0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_tictactoe_gameScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_tictactoe_gameScreenSlideTransitionEastImpl()
{
90003ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003ce4:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003ce8:	4680      	mov	r8, r0
90003cea:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003cec:	68a0      	ldr	r0, [r4, #8]
90003cee:	6803      	ldr	r3, [r0, #0]
90003cf0:	6a1b      	ldr	r3, [r3, #32]
90003cf2:	4798      	blx	r3
90003cf4:	f242 73bb 	movw	r3, #10171	; 0x27bb
90003cf8:	4298      	cmp	r0, r3
90003cfa:	f240 80e1 	bls.w	90003ec0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cfe:	6860      	ldr	r0, [r4, #4]
90003d00:	6803      	ldr	r3, [r0, #0]
90003d02:	6a1b      	ldr	r3, [r3, #32]
90003d04:	4798      	blx	r3
90003d06:	280f      	cmp	r0, #15
90003d08:	f240 80e6 	bls.w	90003ed8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d0c:	68e0      	ldr	r0, [r4, #12]
90003d0e:	6803      	ldr	r3, [r0, #0]
90003d10:	6a1b      	ldr	r3, [r3, #32]
90003d12:	4798      	blx	r3
90003d14:	283f      	cmp	r0, #63	; 0x3f
90003d16:	f240 80d9 	bls.w	90003ecc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003d1a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90003f18 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003d1e:	f014 fa63 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003d22:	3004      	adds	r0, #4
90003d24:	f014 faad 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003d28:	f8da 0000 	ldr.w	r0, [sl]
90003d2c:	b140      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003d2e:	6803      	ldr	r3, [r0, #0]
90003d30:	68db      	ldr	r3, [r3, #12]
90003d32:	4798      	blx	r3
    if (*currentTrans)
90003d34:	f8da 0000 	ldr.w	r0, [sl]
90003d38:	b110      	cbz	r0, 90003d40 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003d3a:	6803      	ldr	r3, [r0, #0]
90003d3c:	681b      	ldr	r3, [r3, #0]
90003d3e:	4798      	blx	r3
    if (*currentScreen)
90003d40:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003f1c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x23c>
90003d44:	f8d9 0000 	ldr.w	r0, [r9]
90003d48:	2800      	cmp	r0, #0
90003d4a:	f000 80a5 	beq.w	90003e98 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003d4e:	6803      	ldr	r3, [r0, #0]
90003d50:	695b      	ldr	r3, [r3, #20]
90003d52:	4798      	blx	r3
    if (*currentPresenter)
90003d54:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d58:	2800      	cmp	r0, #0
90003d5a:	f000 8081 	beq.w	90003e60 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003d5e:	6803      	ldr	r3, [r0, #0]
90003d60:	685b      	ldr	r3, [r3, #4]
90003d62:	4798      	blx	r3
    if (*currentScreen)
90003d64:	f8d9 0000 	ldr.w	r0, [r9]
90003d68:	b110      	cbz	r0, 90003d70 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003d6a:	6803      	ldr	r3, [r0, #0]
90003d6c:	681b      	ldr	r3, [r3, #0]
90003d6e:	4798      	blx	r3
    if (*currentPresenter)
90003d70:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003d74:	b110      	cbz	r0, 90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003d76:	6803      	ldr	r3, [r0, #0]
90003d78:	689b      	ldr	r3, [r3, #8]
90003d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003d7c:	68e0      	ldr	r0, [r4, #12]
90003d7e:	2100      	movs	r1, #0
90003d80:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003d82:	460f      	mov	r7, r1
90003d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003d86:	4798      	blx	r3
          relativeValue(0)
90003d88:	4b56      	ldr	r3, [pc, #344]	; (90003ee4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x204>)
90003d8a:	4606      	mov	r6, r0
90003d8c:	4605      	mov	r5, r0
90003d8e:	6047      	str	r7, [r0, #4]
90003d90:	7207      	strb	r7, [r0, #8]
90003d92:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003d96:	4630      	mov	r0, r6
90003d98:	f010 fc92 	bl	900146c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003d9c:	4b52      	ldr	r3, [pc, #328]	; (90003ee8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003d9e:	2214      	movs	r2, #20
          relativeValue(0)
90003da0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003da2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003da4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003da6:	2b00      	cmp	r3, #0
90003da8:	d166      	bne.n	90003e78 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003daa:	2301      	movs	r3, #1
90003dac:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003dae:	68a0      	ldr	r0, [r4, #8]
90003db0:	2100      	movs	r1, #0
90003db2:	6803      	ldr	r3, [r0, #0]
90003db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003db6:	4798      	blx	r3
90003db8:	4607      	mov	r7, r0
90003dba:	f004 ff17 	bl	90008bec <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003dbe:	6860      	ldr	r0, [r4, #4]
90003dc0:	2100      	movs	r1, #0
90003dc2:	6803      	ldr	r3, [r0, #0]
90003dc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003dc6:	4798      	blx	r3
90003dc8:	4604      	mov	r4, r0
90003dca:	4639      	mov	r1, r7
90003dcc:	f004 fe96 	bl	90008afc <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003dd0:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003dd4:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003dd8:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003ddc:	2c00      	cmp	r4, #0
90003dde:	d061      	beq.n	90003ea4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c4>
90003de0:	1d23      	adds	r3, r4, #4
90003de2:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003de6:	4638      	mov	r0, r7
90003de8:	683b      	ldr	r3, [r7, #0]
90003dea:	f8c4 b008 	str.w	fp, [r4, #8]
90003dee:	68db      	ldr	r3, [r3, #12]
90003df0:	63fc      	str	r4, [r7, #60]	; 0x3c
90003df2:	4798      	blx	r3
    newPresenter->activate();
90003df4:	6823      	ldr	r3, [r4, #0]
90003df6:	4620      	mov	r0, r4
90003df8:	681b      	ldr	r3, [r3, #0]
90003dfa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003dfc:	4629      	mov	r1, r5
90003dfe:	4638      	mov	r0, r7
90003e00:	f015 ffd6 	bl	90019db0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003e04:	682b      	ldr	r3, [r5, #0]
90003e06:	4939      	ldr	r1, [pc, #228]	; (90003eec <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x20c>)
90003e08:	691a      	ldr	r2, [r3, #16]
90003e0a:	428a      	cmp	r2, r1
90003e0c:	d154      	bne.n	90003eb8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90003e0e:	7a2a      	ldrb	r2, [r5, #8]
90003e10:	b9d2      	cbnz	r2, 90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90003e12:	6868      	ldr	r0, [r5, #4]
90003e14:	4a36      	ldr	r2, [pc, #216]	; (90003ef0 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x210>)
90003e16:	6803      	ldr	r3, [r0, #0]
90003e18:	69db      	ldr	r3, [r3, #28]
90003e1a:	4293      	cmp	r3, r2
90003e1c:	d144      	bne.n	90003ea8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1c8>
90003e1e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003e20:	b164      	cbz	r4, 90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e22:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e24:	4f33      	ldr	r7, [pc, #204]	; (90003ef4 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90003e26:	6823      	ldr	r3, [r4, #0]
90003e28:	88a1      	ldrh	r1, [r4, #4]
90003e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003e2c:	1a89      	subs	r1, r1, r2
90003e2e:	42bb      	cmp	r3, r7
90003e30:	b209      	sxth	r1, r1
90003e32:	d11a      	bne.n	90003e6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90003e34:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003e36:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e38:	2c00      	cmp	r4, #0
90003e3a:	d1f4      	bne.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90003e3c:	6868      	ldr	r0, [r5, #4]
90003e3e:	4631      	mov	r1, r6
90003e40:	6803      	ldr	r3, [r0, #0]
90003e42:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003e44:	4798      	blx	r3
    newTransition->invalidate();
90003e46:	682b      	ldr	r3, [r5, #0]
90003e48:	695b      	ldr	r3, [r3, #20]
90003e4a:	4a2b      	ldr	r2, [pc, #172]	; (90003ef8 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x218>)
90003e4c:	4293      	cmp	r3, r2
90003e4e:	d12e      	bne.n	90003eae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90003e50:	f014 f9ca 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003e54:	6803      	ldr	r3, [r0, #0]
90003e56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003e58:	b001      	add	sp, #4
90003e5a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003e5e:	4718      	bx	r3
    if (*currentScreen)
90003e60:	f8d9 0000 	ldr.w	r0, [r9]
90003e64:	2800      	cmp	r0, #0
90003e66:	d180      	bne.n	90003d6a <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x8a>
90003e68:	e788      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
90003e6a:	4620      	mov	r0, r4
90003e6c:	4798      	blx	r3
90003e6e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003e70:	2c00      	cmp	r4, #0
90003e72:	d0e3      	beq.n	90003e3c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x15c>
90003e74:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e76:	e7d6      	b.n	90003e26 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e78:	4b20      	ldr	r3, [pc, #128]	; (90003efc <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
90003e7a:	4630      	mov	r0, r6
        rect.x = x;
90003e7c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003e7e:	f9b3 3000 	ldrsh.w	r3, [r3]
90003e82:	4f1f      	ldr	r7, [pc, #124]	; (90003f00 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90003e84:	82eb      	strh	r3, [r5, #22]
90003e86:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003e8a:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003e8c:	f010 fb93 	bl	900145b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90003e90:	883b      	ldrh	r3, [r7, #0]
90003e92:	425b      	negs	r3, r3
90003e94:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003e96:	e78a      	b.n	90003dae <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
90003e98:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e9c:	2800      	cmp	r0, #0
90003e9e:	f47f af5e 	bne.w	90003d5e <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x7e>
90003ea2:	e76b      	b.n	90003d7c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
90003ea4:	4623      	mov	r3, r4
90003ea6:	e79c      	b.n	90003de2 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
90003ea8:	4798      	blx	r3
90003eaa:	4604      	mov	r4, r0
90003eac:	e7b8      	b.n	90003e20 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
90003eae:	4628      	mov	r0, r5
90003eb0:	b001      	add	sp, #4
90003eb2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003eb6:	4718      	bx	r3
    newTransition->init();
90003eb8:	4628      	mov	r0, r5
90003eba:	4790      	blx	r2
    newTransition->invalidate();
90003ebc:	682b      	ldr	r3, [r5, #0]
90003ebe:	e7c3      	b.n	90003e48 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003ec0:	4b10      	ldr	r3, [pc, #64]	; (90003f04 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x224>)
90003ec2:	21a3      	movs	r1, #163	; 0xa3
90003ec4:	4a10      	ldr	r2, [pc, #64]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ec6:	4811      	ldr	r0, [pc, #68]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ec8:	f025 fafa 	bl	900294c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ecc:	4b10      	ldr	r3, [pc, #64]	; (90003f10 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x230>)
90003ece:	21a5      	movs	r1, #165	; 0xa5
90003ed0:	4a0d      	ldr	r2, [pc, #52]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ed2:	480e      	ldr	r0, [pc, #56]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ed4:	f025 faf4 	bl	900294c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003ed8:	4b0e      	ldr	r3, [pc, #56]	; (90003f14 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x234>)
90003eda:	21a4      	movs	r1, #164	; 0xa4
90003edc:	4a0a      	ldr	r2, [pc, #40]	; (90003f08 <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x228>)
90003ede:	480b      	ldr	r0, [pc, #44]	; (90003f0c <_ZN23FrontendApplicationBase54gotoscreen_tictactoe_gameScreenSlideTransitionEastImplEv+0x22c>)
90003ee0:	f025 faee 	bl	900294c0 <__assert_func>
90003ee4:	9002c8b8 	.word	0x9002c8b8
90003ee8:	24039acb 	.word	0x24039acb
90003eec:	90003879 	.word	0x90003879
90003ef0:	900035fd 	.word	0x900035fd
90003ef4:	9000228d 	.word	0x9000228d
90003ef8:	90003711 	.word	0x90003711
90003efc:	24039ac2 	.word	0x24039ac2
90003f00:	24039ac0 	.word	0x24039ac0
90003f04:	9002c0c8 	.word	0x9002c0c8
90003f08:	9002c52c 	.word	0x9002c52c
90003f0c:	9002c284 	.word	0x9002c284
90003f10:	9002c370 	.word	0x9002c370
90003f14:	9002c2cc 	.word	0x9002c2cc
90003f18:	24039b14 	.word	0x24039b14
90003f1c:	24039b10 	.word	0x24039b10

90003f20 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_space_invadersScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_space_invadersScreenSlideTransitionEastImpl()
{
90003f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_space_invadersView, screen_space_invadersPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003f24:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003f28:	4680      	mov	r8, r0
90003f2a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f2c:	68a0      	ldr	r0, [r4, #8]
90003f2e:	6803      	ldr	r3, [r0, #0]
90003f30:	6a1b      	ldr	r3, [r3, #32]
90003f32:	4798      	blx	r3
90003f34:	f641 736b 	movw	r3, #8043	; 0x1f6b
90003f38:	4298      	cmp	r0, r3
90003f3a:	f240 80e1 	bls.w	90004100 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003f3e:	6860      	ldr	r0, [r4, #4]
90003f40:	6803      	ldr	r3, [r0, #0]
90003f42:	6a1b      	ldr	r3, [r3, #32]
90003f44:	4798      	blx	r3
90003f46:	280f      	cmp	r0, #15
90003f48:	f240 80e6 	bls.w	90004118 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003f4c:	68e0      	ldr	r0, [r4, #12]
90003f4e:	6803      	ldr	r3, [r0, #0]
90003f50:	6a1b      	ldr	r3, [r3, #32]
90003f52:	4798      	blx	r3
90003f54:	283f      	cmp	r0, #63	; 0x3f
90003f56:	f240 80d9 	bls.w	9000410c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003f5a:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 90004158 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003f5e:	f014 f943 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90003f62:	3004      	adds	r0, #4
90003f64:	f014 f98d 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003f68:	f8da 0000 	ldr.w	r0, [sl]
90003f6c:	b140      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003f6e:	6803      	ldr	r3, [r0, #0]
90003f70:	68db      	ldr	r3, [r3, #12]
90003f72:	4798      	blx	r3
    if (*currentTrans)
90003f74:	f8da 0000 	ldr.w	r0, [sl]
90003f78:	b110      	cbz	r0, 90003f80 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003f7a:	6803      	ldr	r3, [r0, #0]
90003f7c:	681b      	ldr	r3, [r3, #0]
90003f7e:	4798      	blx	r3
    if (*currentScreen)
90003f80:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 9000415c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x23c>
90003f84:	f8d9 0000 	ldr.w	r0, [r9]
90003f88:	2800      	cmp	r0, #0
90003f8a:	f000 80a5 	beq.w	900040d8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003f8e:	6803      	ldr	r3, [r0, #0]
90003f90:	695b      	ldr	r3, [r3, #20]
90003f92:	4798      	blx	r3
    if (*currentPresenter)
90003f94:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f98:	2800      	cmp	r0, #0
90003f9a:	f000 8081 	beq.w	900040a0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90003f9e:	6803      	ldr	r3, [r0, #0]
90003fa0:	685b      	ldr	r3, [r3, #4]
90003fa2:	4798      	blx	r3
    if (*currentScreen)
90003fa4:	f8d9 0000 	ldr.w	r0, [r9]
90003fa8:	b110      	cbz	r0, 90003fb0 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
90003faa:	6803      	ldr	r3, [r0, #0]
90003fac:	681b      	ldr	r3, [r3, #0]
90003fae:	4798      	blx	r3
    if (*currentPresenter)
90003fb0:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003fb4:	b110      	cbz	r0, 90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90003fb6:	6803      	ldr	r3, [r0, #0]
90003fb8:	689b      	ldr	r3, [r3, #8]
90003fba:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003fbc:	68e0      	ldr	r0, [r4, #12]
90003fbe:	2100      	movs	r1, #0
90003fc0:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003fc2:	460f      	mov	r7, r1
90003fc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003fc6:	4798      	blx	r3
          relativeValue(0)
90003fc8:	4b56      	ldr	r3, [pc, #344]	; (90004124 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x204>)
90003fca:	4606      	mov	r6, r0
90003fcc:	4605      	mov	r5, r0
90003fce:	6047      	str	r7, [r0, #4]
90003fd0:	7207      	strb	r7, [r0, #8]
90003fd2:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003fd6:	4630      	mov	r0, r6
90003fd8:	f010 fb72 	bl	900146c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003fdc:	4b52      	ldr	r3, [pc, #328]	; (90004128 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
90003fde:	2214      	movs	r2, #20
          relativeValue(0)
90003fe0:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe2:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003fe4:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003fe6:	2b00      	cmp	r3, #0
90003fe8:	d166      	bne.n	900040b8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x198>
            done = true;
90003fea:	2301      	movs	r3, #1
90003fec:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003fee:	68a0      	ldr	r0, [r4, #8]
90003ff0:	2100      	movs	r1, #0
90003ff2:	6803      	ldr	r3, [r0, #0]
90003ff4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003ff6:	4798      	blx	r3
90003ff8:	4607      	mov	r7, r0
90003ffa:	f004 fcb3 	bl	90008964 <_ZN25screen_space_invadersViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ffe:	6860      	ldr	r0, [r4, #4]
90004000:	2100      	movs	r1, #0
90004002:	6803      	ldr	r3, [r0, #0]
90004004:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004006:	4798      	blx	r3
90004008:	4604      	mov	r4, r0
9000400a:	4639      	mov	r1, r7
9000400c:	f004 f9d4 	bl	900083b8 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>
    *currentTrans = newTransition;
90004010:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90004014:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90004018:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
9000401c:	2c00      	cmp	r4, #0
9000401e:	d061      	beq.n	900040e4 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c4>
90004020:	1d23      	adds	r3, r4, #4
90004022:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90004026:	4638      	mov	r0, r7
90004028:	683b      	ldr	r3, [r7, #0]
9000402a:	f8c4 b008 	str.w	fp, [r4, #8]
9000402e:	68db      	ldr	r3, [r3, #12]
90004030:	63fc      	str	r4, [r7, #60]	; 0x3c
90004032:	4798      	blx	r3
    newPresenter->activate();
90004034:	6823      	ldr	r3, [r4, #0]
90004036:	4620      	mov	r0, r4
90004038:	681b      	ldr	r3, [r3, #0]
9000403a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
9000403c:	4629      	mov	r1, r5
9000403e:	4638      	mov	r0, r7
90004040:	f015 feb6 	bl	90019db0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004044:	682b      	ldr	r3, [r5, #0]
90004046:	4939      	ldr	r1, [pc, #228]	; (9000412c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x20c>)
90004048:	691a      	ldr	r2, [r3, #16]
9000404a:	428a      	cmp	r2, r1
9000404c:	d154      	bne.n	900040f8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
9000404e:	7a2a      	ldrb	r2, [r5, #8]
90004050:	b9d2      	cbnz	r2, 90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90004052:	6868      	ldr	r0, [r5, #4]
90004054:	4a36      	ldr	r2, [pc, #216]	; (90004130 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x210>)
90004056:	6803      	ldr	r3, [r0, #0]
90004058:	69db      	ldr	r3, [r3, #28]
9000405a:	4293      	cmp	r3, r2
9000405c:	d144      	bne.n	900040e8 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1c8>
9000405e:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90004060:	b164      	cbz	r4, 9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
90004062:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004064:	4f33      	ldr	r7, [pc, #204]	; (90004134 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
90004066:	6823      	ldr	r3, [r4, #0]
90004068:	88a1      	ldrh	r1, [r4, #4]
9000406a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000406c:	1a89      	subs	r1, r1, r2
9000406e:	42bb      	cmp	r3, r7
90004070:	b209      	sxth	r1, r1
90004072:	d11a      	bne.n	900040aa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004074:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90004076:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004078:	2c00      	cmp	r4, #0
9000407a:	d1f4      	bne.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
9000407c:	6868      	ldr	r0, [r5, #4]
9000407e:	4631      	mov	r1, r6
90004080:	6803      	ldr	r3, [r0, #0]
90004082:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004084:	4798      	blx	r3
    newTransition->invalidate();
90004086:	682b      	ldr	r3, [r5, #0]
90004088:	695b      	ldr	r3, [r3, #20]
9000408a:	4a2b      	ldr	r2, [pc, #172]	; (90004138 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x218>)
9000408c:	4293      	cmp	r3, r2
9000408e:	d12e      	bne.n	900040ee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90004090:	f014 f8aa 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90004094:	6803      	ldr	r3, [r0, #0]
90004096:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004098:	b001      	add	sp, #4
9000409a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000409e:	4718      	bx	r3
    if (*currentScreen)
900040a0:	f8d9 0000 	ldr.w	r0, [r9]
900040a4:	2800      	cmp	r0, #0
900040a6:	d180      	bne.n	90003faa <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x8a>
900040a8:	e788      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
900040aa:	4620      	mov	r0, r4
900040ac:	4798      	blx	r3
900040ae:	69a4      	ldr	r4, [r4, #24]
        while (d)
900040b0:	2c00      	cmp	r4, #0
900040b2:	d0e3      	beq.n	9000407c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x15c>
900040b4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900040b6:	e7d6      	b.n	90004066 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040b8:	4b20      	ldr	r3, [pc, #128]	; (9000413c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
900040ba:	4630      	mov	r0, r6
        rect.x = x;
900040bc:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900040be:	f9b3 3000 	ldrsh.w	r3, [r3]
900040c2:	4f1f      	ldr	r7, [pc, #124]	; (90004140 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
900040c4:	82eb      	strh	r3, [r5, #22]
900040c6:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900040ca:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900040cc:	f010 fa73 	bl	900145b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900040d0:	883b      	ldrh	r3, [r7, #0]
900040d2:	425b      	negs	r3, r3
900040d4:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900040d6:	e78a      	b.n	90003fee <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900040d8:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900040dc:	2800      	cmp	r0, #0
900040de:	f47f af5e 	bne.w	90003f9e <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x7e>
900040e2:	e76b      	b.n	90003fbc <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900040e4:	4623      	mov	r3, r4
900040e6:	e79c      	b.n	90004022 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900040e8:	4798      	blx	r3
900040ea:	4604      	mov	r4, r0
900040ec:	e7b8      	b.n	90004060 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900040ee:	4628      	mov	r0, r5
900040f0:	b001      	add	sp, #4
900040f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900040f6:	4718      	bx	r3
    newTransition->init();
900040f8:	4628      	mov	r0, r5
900040fa:	4790      	blx	r2
    newTransition->invalidate();
900040fc:	682b      	ldr	r3, [r5, #0]
900040fe:	e7c3      	b.n	90004088 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004100:	4b10      	ldr	r3, [pc, #64]	; (90004144 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x224>)
90004102:	21a3      	movs	r1, #163	; 0xa3
90004104:	4a10      	ldr	r2, [pc, #64]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004106:	4811      	ldr	r0, [pc, #68]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004108:	f025 f9da 	bl	900294c0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000410c:	4b10      	ldr	r3, [pc, #64]	; (90004150 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x230>)
9000410e:	21a5      	movs	r1, #165	; 0xa5
90004110:	4a0d      	ldr	r2, [pc, #52]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
90004112:	480e      	ldr	r0, [pc, #56]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004114:	f025 f9d4 	bl	900294c0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004118:	4b0e      	ldr	r3, [pc, #56]	; (90004154 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x234>)
9000411a:	21a4      	movs	r1, #164	; 0xa4
9000411c:	4a0a      	ldr	r2, [pc, #40]	; (90004148 <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x228>)
9000411e:	480b      	ldr	r0, [pc, #44]	; (9000414c <_ZN23FrontendApplicationBase54gotoscreen_space_invadersScreenSlideTransitionEastImplEv+0x22c>)
90004120:	f025 f9ce 	bl	900294c0 <__assert_func>
90004124:	9002c8b8 	.word	0x9002c8b8
90004128:	24039acb 	.word	0x24039acb
9000412c:	90003879 	.word	0x90003879
90004130:	900035fd 	.word	0x900035fd
90004134:	9000228d 	.word	0x9000228d
90004138:	90003711 	.word	0x90003711
9000413c:	24039ac2 	.word	0x24039ac2
90004140:	24039ac0 	.word	0x24039ac0
90004144:	9002c0c8 	.word	0x9002c0c8
90004148:	9002c660 	.word	0x9002c660
9000414c:	9002c284 	.word	0x9002c284
90004150:	9002c370 	.word	0x9002c370
90004154:	9002c2cc 	.word	0x9002c2cc
90004158:	24039b14 	.word	0x24039b14
9000415c:	24039b10 	.word	0x24039b10

90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004160:	b570      	push	{r4, r5, r6, lr}
90004162:	4604      	mov	r4, r0
90004164:	4615      	mov	r5, r2
90004166:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90004168:	f014 f92c 	bl	900183c4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
9000416c:	4a1d      	ldr	r2, [pc, #116]	; (900041e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
9000416e:	2300      	movs	r3, #0
      frontendHeap(heap),
90004170:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004174:	6014      	str	r4, [r2, #0]
        return instance;
90004176:	4d1c      	ldr	r5, [pc, #112]	; (900041e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90004178:	4a1c      	ldr	r2, [pc, #112]	; (900041ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
9000417a:	6828      	ldr	r0, [r5, #0]
9000417c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
9000417e:	4a1c      	ldr	r2, [pc, #112]	; (900041f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90004180:	491c      	ldr	r1, [pc, #112]	; (900041f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90004182:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90004186:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
9000418a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
9000418e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004192:	6802      	ldr	r2, [r0, #0]
90004194:	6892      	ldr	r2, [r2, #8]
90004196:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004198:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
9000419c:	d11f      	bne.n	900041de <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000419e:	f44f 7380 	mov.w	r3, #256	; 0x100
900041a2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
900041a6:	2000      	movs	r0, #0
900041a8:	f000 fa10 	bl	900045cc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900041ac:	682b      	ldr	r3, [r5, #0]
900041ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041b2:	b192      	cbz	r2, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
900041b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041b6:	b180      	cbz	r0, 900041da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900041b8:	f01d fab3 	bl	90021722 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900041bc:	682b      	ldr	r3, [r5, #0]
900041be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900041c2:	b12a      	cbz	r2, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900041c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900041c6:	b118      	cbz	r0, 900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041c8:	f01d fb26 	bl	90021818 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041cc:	4620      	mov	r0, r4
900041ce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900041d0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900041d2:	f01d fb21 	bl	90021818 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900041d6:	4620      	mov	r0, r4
900041d8:	bd70      	pop	{r4, r5, r6, pc}
900041da:	6898      	ldr	r0, [r3, #8]
900041dc:	e7ec      	b.n	900041b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900041de:	4619      	mov	r1, r3
900041e0:	4790      	blx	r2
900041e2:	e7e0      	b.n	900041a6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900041e4:	24039b20 	.word	0x24039b20
900041e8:	24039acc 	.word	0x24039acc
900041ec:	9002c81c 	.word	0x9002c81c
900041f0:	9002c804 	.word	0x9002c804
900041f4:	90000665 	.word	0x90000665

900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900041f8:	4905      	ldr	r1, [pc, #20]	; (90004210 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
900041fa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900041fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004200:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004204:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004208:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000420c:	4770      	bx	lr
9000420e:	bf00      	nop
90004210:	90003b3d 	.word	0x90003b3d

90004214 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
90004214:	4905      	ldr	r1, [pc, #20]	; (9000422c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
90004216:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004218:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000421c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004220:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004224:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004228:	4770      	bx	lr
9000422a:	bf00      	nop
9000422c:	900038d9 	.word	0x900038d9

90004230 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>:
90004230:	4905      	ldr	r1, [pc, #20]	; (90004248 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv+0x18>)
90004232:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004234:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004238:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
9000423c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004240:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004244:	4770      	bx	lr
90004246:	bf00      	nop
90004248:	90003ce1 	.word	0x90003ce1

9000424c <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>:
9000424c:	4905      	ldr	r1, [pc, #20]	; (90004264 <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv+0x18>)
9000424e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004250:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004254:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004258:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000425c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004260:	4770      	bx	lr
90004262:	bf00      	nop
90004264:	90003f21 	.word	0x90003f21

90004268 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004268:	6a40      	ldr	r0, [r0, #36]	; 0x24
9000426a:	4770      	bx	lr

9000426c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000426c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000426e:	4770      	bx	lr

90004270 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90004274:	888b      	ldrh	r3, [r1, #4]
90004276:	69c0      	ldr	r0, [r0, #28]
90004278:	0adb      	lsrs	r3, r3, #11
9000427a:	680a      	ldr	r2, [r1, #0]
9000427c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004280:	4410      	add	r0, r2
90004282:	4770      	bx	lr

90004284 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90004284:	b1da      	cbz	r2, 900042be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90004286:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004288:	7b14      	ldrb	r4, [r2, #12]
9000428a:	b1b4      	cbz	r4, 900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000428c:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004290:	f892 e00b 	ldrb.w	lr, [r2, #11]
90004294:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004298:	6a03      	ldr	r3, [r0, #32]
9000429a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000429e:	ea4e 0202 	orr.w	r2, lr, r2
900042a2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042a6:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
900042aa:	881a      	ldrh	r2, [r3, #0]
900042ac:	428a      	cmp	r2, r1
900042ae:	d008      	beq.n	900042c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b0:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900042b4:	d801      	bhi.n	900042ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042b6:	4283      	cmp	r3, r0
900042b8:	d1f7      	bne.n	900042aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
900042ba:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
900042bc:	bd10      	pop	{r4, pc}
        return 0;
900042be:	4610      	mov	r0, r2
}
900042c0:	4770      	bx	lr
            return kerndata->distance;
900042c2:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
900042c6:	bd10      	pop	{r4, pc}

900042c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
900042c8:	b510      	push	{r4, lr}
900042ca:	4604      	mov	r4, r0
900042cc:	212c      	movs	r1, #44	; 0x2c
900042ce:	f025 f8c9 	bl	90029464 <_ZdlPvj>
900042d2:	4620      	mov	r0, r4
900042d4:	bd10      	pop	{r4, pc}
900042d6:	bf00      	nop

900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042d8:	b530      	push	{r4, r5, lr}
900042da:	b08b      	sub	sp, #44	; 0x2c
900042dc:	4604      	mov	r4, r0
900042de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
900042e2:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042e4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900042e8:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900042ee:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900042f4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042f6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900042fa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900042fc:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90004300:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004302:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90004306:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004308:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
9000430c:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000430e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90004312:	9508      	str	r5, [sp, #32]
90004314:	f015 f8b6 	bl	90019484 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90004318:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
9000431a:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
9000431c:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
9000431e:	9b16      	ldr	r3, [sp, #88]	; 0x58
90004320:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004322:	9b19      	ldr	r3, [sp, #100]	; 0x64
90004324:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90004326:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004328:	62a3      	str	r3, [r4, #40]	; 0x28
9000432a:	4b02      	ldr	r3, [pc, #8]	; (90004334 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
9000432c:	6023      	str	r3, [r4, #0]
}
9000432e:	b00b      	add	sp, #44	; 0x2c
90004330:	bd30      	pop	{r4, r5, pc}
90004332:	bf00      	nop
90004334:	9002c8dc 	.word	0x9002c8dc

90004338 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004338:	4770      	bx	lr
9000433a:	bf00      	nop

9000433c <_Z23getFont_verdana_10_4bppv>:
{
9000433c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000433e:	4d18      	ldr	r5, [pc, #96]	; (900043a0 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90004340:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004342:	682c      	ldr	r4, [r5, #0]
90004344:	f3bf 8f5b 	dmb	ish
90004348:	f014 0401 	ands.w	r4, r4, #1
9000434c:	d002      	beq.n	90004354 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000434e:	4815      	ldr	r0, [pc, #84]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
90004350:	b00f      	add	sp, #60	; 0x3c
90004352:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004354:	4628      	mov	r0, r5
90004356:	f025 f887 	bl	90029468 <__cxa_guard_acquire>
9000435a:	2800      	cmp	r0, #0
9000435c:	d0f7      	beq.n	9000434e <_Z23getFont_verdana_10_4bppv+0x12>
9000435e:	213f      	movs	r1, #63	; 0x3f
90004360:	2201      	movs	r2, #1
90004362:	230a      	movs	r3, #10
90004364:	2004      	movs	r0, #4
90004366:	9204      	str	r2, [sp, #16]
90004368:	9300      	str	r3, [sp, #0]
9000436a:	9003      	str	r0, [sp, #12]
9000436c:	480d      	ldr	r0, [pc, #52]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000436e:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90004372:	490d      	ldr	r1, [pc, #52]	; (900043a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004374:	9108      	str	r1, [sp, #32]
90004376:	490d      	ldr	r1, [pc, #52]	; (900043ac <_Z23getFont_verdana_10_4bppv+0x70>)
90004378:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000437c:	9107      	str	r1, [sp, #28]
9000437e:	490c      	ldr	r1, [pc, #48]	; (900043b0 <_Z23getFont_verdana_10_4bppv+0x74>)
90004380:	e9cd 4405 	strd	r4, r4, [sp, #20]
90004384:	e9cd 4401 	strd	r4, r4, [sp, #4]
90004388:	f7ff ffa6 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000438c:	4809      	ldr	r0, [pc, #36]	; (900043b4 <_Z23getFont_verdana_10_4bppv+0x78>)
9000438e:	f025 f8b5 	bl	900294fc <atexit>
90004392:	4628      	mov	r0, r5
90004394:	f025 f874 	bl	90029480 <__cxa_guard_release>
}
90004398:	4802      	ldr	r0, [pc, #8]	; (900043a4 <_Z23getFont_verdana_10_4bppv+0x68>)
9000439a:	b00f      	add	sp, #60	; 0x3c
9000439c:	bd30      	pop	{r4, r5, pc}
9000439e:	bf00      	nop
900043a0:	240097cc 	.word	0x240097cc
900043a4:	240097d0 	.word	0x240097d0
900043a8:	9002e058 	.word	0x9002e058
900043ac:	9002e154 	.word	0x9002e154
900043b0:	90201dd8 	.word	0x90201dd8
900043b4:	90004339 	.word	0x90004339

900043b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043b8:	4770      	bx	lr
900043ba:	bf00      	nop

900043bc <_Z23getFont_verdana_20_4bppv>:
{
900043bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043be:	4d19      	ldr	r5, [pc, #100]	; (90004424 <_Z23getFont_verdana_20_4bppv+0x68>)
{
900043c0:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043c2:	682c      	ldr	r4, [r5, #0]
900043c4:	f3bf 8f5b 	dmb	ish
900043c8:	f014 0401 	ands.w	r4, r4, #1
900043cc:	d002      	beq.n	900043d4 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900043ce:	4816      	ldr	r0, [pc, #88]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043d0:	b00f      	add	sp, #60	; 0x3c
900043d2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 66, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900043d4:	4628      	mov	r0, r5
900043d6:	f025 f847 	bl	90029468 <__cxa_guard_acquire>
900043da:	2800      	cmp	r0, #0
900043dc:	d0f7      	beq.n	900043ce <_Z23getFont_verdana_20_4bppv+0x12>
900043de:	213f      	movs	r1, #63	; 0x3f
900043e0:	4a12      	ldr	r2, [pc, #72]	; (9000442c <_Z23getFont_verdana_20_4bppv+0x70>)
900043e2:	2301      	movs	r3, #1
900043e4:	2014      	movs	r0, #20
900043e6:	9208      	str	r2, [sp, #32]
900043e8:	2204      	movs	r2, #4
900043ea:	9304      	str	r3, [sp, #16]
900043ec:	9000      	str	r0, [sp, #0]
900043ee:	9401      	str	r4, [sp, #4]
900043f0:	480d      	ldr	r0, [pc, #52]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
900043f2:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900043f6:	490e      	ldr	r1, [pc, #56]	; (90004430 <_Z23getFont_verdana_20_4bppv+0x74>)
900043f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
900043fc:	9107      	str	r1, [sp, #28]
900043fe:	2318      	movs	r3, #24
90004400:	490c      	ldr	r1, [pc, #48]	; (90004434 <_Z23getFont_verdana_20_4bppv+0x78>)
90004402:	e9cd 4202 	strd	r4, r2, [sp, #8]
90004406:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000440a:	2242      	movs	r2, #66	; 0x42
9000440c:	f7ff ff64 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004410:	4809      	ldr	r0, [pc, #36]	; (90004438 <_Z23getFont_verdana_20_4bppv+0x7c>)
90004412:	f025 f873 	bl	900294fc <atexit>
90004416:	4628      	mov	r0, r5
90004418:	f025 f832 	bl	90029480 <__cxa_guard_release>
}
9000441c:	4802      	ldr	r0, [pc, #8]	; (90004428 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000441e:	b00f      	add	sp, #60	; 0x3c
90004420:	bd30      	pop	{r4, r5, pc}
90004422:	bf00      	nop
90004424:	240097fc 	.word	0x240097fc
90004428:	24009800 	.word	0x24009800
9000442c:	9002e05c 	.word	0x9002e05c
90004430:	9002e158 	.word	0x9002e158
90004434:	90201de8 	.word	0x90201de8
90004438:	900043b9 	.word	0x900043b9

9000443c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000443c:	4770      	bx	lr
9000443e:	bf00      	nop

90004440 <_Z23getFont_verdana_40_4bppv>:
{
90004440:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004442:	4d19      	ldr	r5, [pc, #100]	; (900044a8 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004444:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004446:	682c      	ldr	r4, [r5, #0]
90004448:	f3bf 8f5b 	dmb	ish
9000444c:	f014 0401 	ands.w	r4, r4, #1
90004450:	d002      	beq.n	90004458 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004452:	4816      	ldr	r0, [pc, #88]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004454:	b00f      	add	sp, #60	; 0x3c
90004456:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004458:	4628      	mov	r0, r5
9000445a:	f025 f805 	bl	90029468 <__cxa_guard_acquire>
9000445e:	2800      	cmp	r0, #0
90004460:	d0f7      	beq.n	90004452 <_Z23getFont_verdana_40_4bppv+0x12>
90004462:	213f      	movs	r1, #63	; 0x3f
90004464:	4a12      	ldr	r2, [pc, #72]	; (900044b0 <_Z23getFont_verdana_40_4bppv+0x70>)
90004466:	2301      	movs	r3, #1
90004468:	2028      	movs	r0, #40	; 0x28
9000446a:	9208      	str	r2, [sp, #32]
9000446c:	2204      	movs	r2, #4
9000446e:	9304      	str	r3, [sp, #16]
90004470:	9000      	str	r0, [sp, #0]
90004472:	9401      	str	r4, [sp, #4]
90004474:	480d      	ldr	r0, [pc, #52]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
90004476:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000447a:	490e      	ldr	r1, [pc, #56]	; (900044b4 <_Z23getFont_verdana_40_4bppv+0x74>)
9000447c:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004480:	9107      	str	r1, [sp, #28]
90004482:	2329      	movs	r3, #41	; 0x29
90004484:	490c      	ldr	r1, [pc, #48]	; (900044b8 <_Z23getFont_verdana_40_4bppv+0x78>)
90004486:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000448a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000448e:	220a      	movs	r2, #10
90004490:	f7ff ff22 	bl	900042d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004494:	4809      	ldr	r0, [pc, #36]	; (900044bc <_Z23getFont_verdana_40_4bppv+0x7c>)
90004496:	f025 f831 	bl	900294fc <atexit>
9000449a:	4628      	mov	r0, r5
9000449c:	f024 fff0 	bl	90029480 <__cxa_guard_release>
}
900044a0:	4802      	ldr	r0, [pc, #8]	; (900044ac <_Z23getFont_verdana_40_4bppv+0x6c>)
900044a2:	b00f      	add	sp, #60	; 0x3c
900044a4:	bd30      	pop	{r4, r5, pc}
900044a6:	bf00      	nop
900044a8:	2400982c 	.word	0x2400982c
900044ac:	24009830 	.word	0x24009830
900044b0:	9002e14c 	.word	0x9002e14c
900044b4:	9002e15c 	.word	0x9002e15c
900044b8:	90202184 	.word	0x90202184
900044bc:	9000443d 	.word	0x9000443d

900044c0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900044c0:	2000      	movs	r0, #0
900044c2:	4770      	bx	lr

900044c4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900044c4:	2000      	movs	r0, #0
900044c6:	4770      	bx	lr

900044c8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044c8:	b40e      	push	{r1, r2, r3}
900044ca:	b500      	push	{lr}
900044cc:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044ce:	2100      	movs	r1, #0
{
900044d0:	ab03      	add	r3, sp, #12
900044d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900044d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900044d8:	f014 fdfc 	bl	900190d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044dc:	b002      	add	sp, #8
900044de:	f85d eb04 	ldr.w	lr, [sp], #4
900044e2:	b003      	add	sp, #12
900044e4:	4770      	bx	lr
900044e6:	bf00      	nop

900044e8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900044e8:	b40c      	push	{r2, r3}
900044ea:	b500      	push	{lr}
900044ec:	b083      	sub	sp, #12
900044ee:	ab04      	add	r3, sp, #16
900044f0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900044f4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900044f6:	f014 fded 	bl	900190d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900044fa:	b003      	add	sp, #12
900044fc:	f85d eb04 	ldr.w	lr, [sp], #4
90004500:	b002      	add	sp, #8
90004502:	4770      	bx	lr

90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90004504:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
90004506:	b510      	push	{r4, lr}
90004508:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000450a:	b133      	cbz	r3, 9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000450c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
9000450e:	b39b      	cbz	r3, 90004578 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90004510:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90004512:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90004516:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
90004518:	b923      	cbnz	r3, 90004524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000451a:	4620      	mov	r0, r4
}
9000451c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004520:	f016 b8ac 	b.w	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004524:	f016 f9a8 	bl	9001a878 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90004528:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000452a:	2b01      	cmp	r3, #1
9000452c:	d92a      	bls.n	90004584 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000452e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004530:	1c53      	adds	r3, r2, #1
90004532:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004534:	2b09      	cmp	r3, #9
90004536:	d812      	bhi.n	9000455e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004538:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000453c:	f640 103f 	movw	r0, #2367	; 0x93f
90004540:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004542:	4281      	cmp	r1, r0
90004544:	d1e9      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004546:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000454a:	0052      	lsls	r2, r2, #1
9000454c:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000454e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004552:	4422      	add	r2, r4
90004554:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90004558:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000455a:	8450      	strh	r0, [r2, #34]	; 0x22
        }
9000455c:	e7dd      	b.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000455e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004562:	f640 113f 	movw	r1, #2367	; 0x93f
90004566:	89db      	ldrh	r3, [r3, #14]
90004568:	428b      	cmp	r3, r1
9000456a:	d1d6      	bne.n	9000451a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000456c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004570:	2300      	movs	r3, #0
90004572:	0052      	lsls	r2, r2, #1
90004574:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004576:	e7ea      	b.n	9000454e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004578:	4b05      	ldr	r3, [pc, #20]	; (90004590 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000457a:	21c5      	movs	r1, #197	; 0xc5
9000457c:	4a05      	ldr	r2, [pc, #20]	; (90004594 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000457e:	4806      	ldr	r0, [pc, #24]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004580:	f024 ff9e 	bl	900294c0 <__assert_func>
            assert(offset < used);
90004584:	4b05      	ldr	r3, [pc, #20]	; (9000459c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004586:	21cb      	movs	r1, #203	; 0xcb
90004588:	4a05      	ldr	r2, [pc, #20]	; (900045a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000458a:	4803      	ldr	r0, [pc, #12]	; (90004598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000458c:	f024 ff98 	bl	900294c0 <__assert_func>
90004590:	9002c934 	.word	0x9002c934
90004594:	9002c940 	.word	0x9002c940
90004598:	9002c9ec 	.word	0x9002c9ec
9000459c:	9002ca38 	.word	0x9002ca38
900045a0:	9002ca48 	.word	0x9002ca48

900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900045a4:	f016 b833 	b.w	9001a60e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900045a8:	b510      	push	{r4, lr}
900045aa:	b086      	sub	sp, #24
900045ac:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900045b0:	ac0a      	add	r4, sp, #40	; 0x28
{
900045b2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045b6:	461a      	mov	r2, r3
900045b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900045ba:	4661      	mov	r1, ip
900045bc:	9401      	str	r4, [sp, #4]
900045be:	9300      	str	r3, [sp, #0]
900045c0:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900045c2:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900045c4:	f013 f990 	bl	900178e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900045c8:	b006      	add	sp, #24
900045ca:	bd10      	pop	{r4, pc}

900045cc <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900045cc:	b9e0      	cbnz	r0, 90004608 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900045ce:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900045d0:	4b13      	ldr	r3, [pc, #76]	; (90004620 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900045d2:	681b      	ldr	r3, [r3, #0]
900045d4:	b1cb      	cbz	r3, 9000460a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045d6:	4c13      	ldr	r4, [pc, #76]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045d8:	4813      	ldr	r0, [pc, #76]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900045da:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045de:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e0:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900045e2:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e4:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900045e6:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900045e8:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900045ea:	4b10      	ldr	r3, [pc, #64]	; (9000462c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900045ec:	2200      	movs	r2, #0
900045ee:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900045f0:	f000 f83a 	bl	90004668 <_ZN17TypedTextDatabase8getFontsEv>
900045f4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900045f6:	f000 f835 	bl	90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900045fa:	4b0d      	ldr	r3, [pc, #52]	; (90004630 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900045fc:	4a0d      	ldr	r2, [pc, #52]	; (90004634 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900045fe:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90004600:	4b0d      	ldr	r3, [pc, #52]	; (90004638 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90004602:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90004604:	8018      	strh	r0, [r3, #0]
    }
}
90004606:	bd38      	pop	{r3, r4, r5, pc}
90004608:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460a:	4c0c      	ldr	r4, [pc, #48]	; (9000463c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000460c:	4905      	ldr	r1, [pc, #20]	; (90004624 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000460e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90004610:	480b      	ldr	r0, [pc, #44]	; (90004640 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90004612:	4b05      	ldr	r3, [pc, #20]	; (90004628 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004614:	4a0b      	ldr	r2, [pc, #44]	; (90004644 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90004616:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90004618:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000461a:	2c00      	cmp	r4, #0
9000461c:	d1e5      	bne.n	900045ea <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000461e:	bd38      	pop	{r3, r4, r5, pc}
90004620:	2400985c 	.word	0x2400985c
90004624:	24009860 	.word	0x24009860
90004628:	24009864 	.word	0x24009864
9000462c:	24009868 	.word	0x24009868
90004630:	24039b24 	.word	0x24039b24
90004634:	24039b2c 	.word	0x24039b2c
90004638:	24039b28 	.word	0x24039b28
9000463c:	9020233c 	.word	0x9020233c
90004640:	9020224c 	.word	0x9020224c
90004644:	90202210 	.word	0x90202210

90004648 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90004648:	4a04      	ldr	r2, [pc, #16]	; (9000465c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000464a:	4b05      	ldr	r3, [pc, #20]	; (90004660 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
9000464c:	6812      	ldr	r2, [r2, #0]
9000464e:	681b      	ldr	r3, [r3, #0]
90004650:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004654:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004658:	4770      	bx	lr
9000465a:	bf00      	nop
9000465c:	24009864 	.word	0x24009864
90004660:	24009860 	.word	0x24009860

90004664 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004664:	200f      	movs	r0, #15
90004666:	4770      	bx	lr

90004668 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004668:	4800      	ldr	r0, [pc, #0]	; (9000466c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000466a:	4770      	bx	lr
9000466c:	2400986c 	.word	0x2400986c

90004670 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004670:	b510      	push	{r4, lr}
};
90004672:	4c05      	ldr	r4, [pc, #20]	; (90004688 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004674:	f7ff fea2 	bl	900043bc <_Z23getFont_verdana_20_4bppv>
};
90004678:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000467a:	f7ff fee1 	bl	90004440 <_Z23getFont_verdana_40_4bppv>
};
9000467e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004680:	f7ff fe5c 	bl	9000433c <_Z23getFont_verdana_10_4bppv>
};
90004684:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90004686:	bd10      	pop	{r4, pc}
90004688:	2400986c 	.word	0x2400986c

9000468c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
9000468c:	4770      	bx	lr
9000468e:	bf00      	nop

90004690 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004690:	4770      	bx	lr
90004692:	bf00      	nop

90004694 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004694:	4770      	bx	lr
90004696:	bf00      	nop

90004698 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004698:	4770      	bx	lr
9000469a:	bf00      	nop

9000469c <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
9000469c:	4770      	bx	lr
9000469e:	bf00      	nop

900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
900046a0:	4770      	bx	lr
900046a2:	bf00      	nop

900046a4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
900046a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900046a8:	b133      	cbz	r3, 900046b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
900046aa:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ac:	f100 0374 	add.w	r3, r0, #116	; 0x74
900046b0:	65c2      	str	r2, [r0, #92]	; 0x5c
900046b2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
900046b4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
900046b6:	4770      	bx	lr
900046b8:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900046ba:	f100 0370 	add.w	r3, r0, #112	; 0x70
900046be:	65c2      	str	r2, [r0, #92]	; 0x5c
900046c0:	681b      	ldr	r3, [r3, #0]
900046c2:	6603      	str	r3, [r0, #96]	; 0x60
    }
900046c4:	4770      	bx	lr
900046c6:	bf00      	nop

900046c8 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900046c8:	4770      	bx	lr
900046ca:	bf00      	nop

900046cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
900046cc:	4770      	bx	lr
900046ce:	bf00      	nop

900046d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900046d0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900046d2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900046d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900046d6:	6844      	ldr	r4, [r0, #4]
900046d8:	f012 0f01 	tst.w	r2, #1
900046dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
900046e0:	d103      	bne.n	900046ea <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
900046e2:	689b      	ldr	r3, [r3, #8]
    }
900046e4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046e8:	4718      	bx	r3
900046ea:	ea4f 0c62 	mov.w	ip, r2, asr #1
900046ee:	689b      	ldr	r3, [r3, #8]
900046f0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900046f4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900046f8:	58d3      	ldr	r3, [r2, r3]
900046fa:	4718      	bx	r3

900046fc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900046fc:	6843      	ldr	r3, [r0, #4]
900046fe:	b13b      	cbz	r3, 90004710 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004700:	6883      	ldr	r3, [r0, #8]
90004702:	b10b      	cbz	r3, 90004708 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004704:	2001      	movs	r0, #1
    }
90004706:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004708:	68c0      	ldr	r0, [r0, #12]
9000470a:	f000 0001 	and.w	r0, r0, #1
9000470e:	4770      	bx	lr
90004710:	4618      	mov	r0, r3
90004712:	4770      	bx	lr

90004714 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004714:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004718:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
9000471c:	4770      	bx	lr
9000471e:	bf00      	nop

90004720 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004720:	b510      	push	{r4, lr}
90004722:	4604      	mov	r4, r0
90004724:	2178      	movs	r1, #120	; 0x78
90004726:	f024 fe9d 	bl	90029464 <_ZdlPvj>
9000472a:	4620      	mov	r0, r4
9000472c:	bd10      	pop	{r4, pc}
9000472e:	bf00      	nop

90004730 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004730:	b510      	push	{r4, lr}
90004732:	4604      	mov	r4, r0
90004734:	2110      	movs	r1, #16
90004736:	f024 fe95 	bl	90029464 <_ZdlPvj>
9000473a:	4620      	mov	r0, r4
9000473c:	bd10      	pop	{r4, pc}
9000473e:	bf00      	nop

90004740 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
90004740:	b510      	push	{r4, lr}
90004742:	4604      	mov	r4, r0
}
90004744:	f44f 711a 	mov.w	r1, #616	; 0x268
90004748:	f024 fe8c 	bl	90029464 <_ZdlPvj>
9000474c:	4620      	mov	r0, r4
9000474e:	bd10      	pop	{r4, pc}

90004750 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_main_menuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
90004750:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_snake)
90004752:	f500 739e 	add.w	r3, r0, #316	; 0x13c
{
90004756:	4604      	mov	r4, r0
90004758:	460d      	mov	r5, r1
    if (&src == &btn_snake)
9000475a:	4299      	cmp	r1, r3
9000475c:	d008      	beq.n	90004770 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
        //intr_snake_game
        //When btn_snake clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
9000475e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004762:	429d      	cmp	r5, r3
90004764:	d00c      	beq.n	90004780 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with screen transition towards East
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
    }
    if (&src == &btn_space_invaders)
90004766:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
9000476a:	42a5      	cmp	r5, r4
9000476c:	d010      	beq.n	90004790 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
        //intr_space_invaders_game
        //When btn_space_invaders clicked change screen to screen_space_invaders
        //Go to screen_space_invaders with screen transition towards East
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
    }
}
9000476e:	bd38      	pop	{r3, r4, r5, pc}
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004770:	f013 fd3a 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
90004774:	f7ff fd4e 	bl	90004214 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004778:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
9000477c:	429d      	cmp	r5, r3
9000477e:	d1f2      	bne.n	90004766 <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    if (&src == &btn_space_invaders)
90004780:	f504 74da 	add.w	r4, r4, #436	; 0x1b4
90004784:	f013 fd30 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_tictactoe_gameScreenSlideTransitionEast();
90004788:	f7ff fd52 	bl	90004230 <_ZN23FrontendApplicationBase50gotoscreen_tictactoe_gameScreenSlideTransitionEastEv>
    if (&src == &btn_space_invaders)
9000478c:	42a5      	cmp	r5, r4
9000478e:	d1ee      	bne.n	9000476e <_ZN24screen_main_menuViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90004790:	f013 fd2a 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
}
90004794:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_space_invadersScreenSlideTransitionEast();
90004798:	f7ff bd58 	b.w	9000424c <_ZN23FrontendApplicationBase50gotoscreen_space_invadersScreenSlideTransitionEastEv>

9000479c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
9000479c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000479e:	b30b      	cbz	r3, 900047e4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
900047a0:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
900047a2:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
900047a4:	68d1      	ldr	r1, [r2, #12]
900047a6:	4604      	mov	r4, r0
900047a8:	481a      	ldr	r0, [pc, #104]	; (90004814 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
900047aa:	4281      	cmp	r1, r0
900047ac:	d11b      	bne.n	900047e6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
900047ae:	6858      	ldr	r0, [r3, #4]
900047b0:	b180      	cbz	r0, 900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047b2:	6899      	ldr	r1, [r3, #8]
900047b4:	b1f1      	cbz	r1, 900047f4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
900047b6:	6892      	ldr	r2, [r2, #8]
900047b8:	4917      	ldr	r1, [pc, #92]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047ba:	428a      	cmp	r2, r1
900047bc:	d124      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900047be:	68da      	ldr	r2, [r3, #12]
900047c0:	6858      	ldr	r0, [r3, #4]
900047c2:	eb00 0062 	add.w	r0, r0, r2, asr #1
900047c6:	07d2      	lsls	r2, r2, #31
900047c8:	d405      	bmi.n	900047d6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900047ca:	4621      	mov	r1, r4
900047cc:	689b      	ldr	r3, [r3, #8]
        }
    }
900047ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047d2:	4718      	bx	r3
900047d4:	bd70      	pop	{r4, r5, r6, pc}
900047d6:	6899      	ldr	r1, [r3, #8]
900047d8:	6803      	ldr	r3, [r0, #0]
900047da:	585b      	ldr	r3, [r3, r1]
900047dc:	4621      	mov	r1, r4
900047de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900047e2:	4718      	bx	r3
900047e4:	4770      	bx	lr
        if (action && action->isValid())
900047e6:	4618      	mov	r0, r3
900047e8:	4788      	blx	r1
900047ea:	2800      	cmp	r0, #0
900047ec:	d0f2      	beq.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
900047ee:	6b23      	ldr	r3, [r4, #48]	; 0x30
900047f0:	681a      	ldr	r2, [r3, #0]
900047f2:	e7e0      	b.n	900047b6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900047f4:	68dd      	ldr	r5, [r3, #12]
900047f6:	07ee      	lsls	r6, r5, #31
900047f8:	d5ec      	bpl.n	900047d4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900047fa:	6892      	ldr	r2, [r2, #8]
900047fc:	4e06      	ldr	r6, [pc, #24]	; (90004818 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900047fe:	42b2      	cmp	r2, r6
90004800:	d102      	bne.n	90004808 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90004802:	eb00 0065 	add.w	r0, r0, r5, asr #1
90004806:	e7e7      	b.n	900047d8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
90004808:	4621      	mov	r1, r4
9000480a:	4618      	mov	r0, r3
    }
9000480c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90004810:	4710      	bx	r2
90004812:	bf00      	nop
90004814:	900046fd 	.word	0x900046fd
90004818:	900046d1 	.word	0x900046d1

9000481c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
9000481c:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000481e:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90004820:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90004822:	bf18      	it	ne
90004824:	2201      	movne	r2, #1
        return pressed;
90004826:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000482a:	460d      	mov	r5, r1
9000482c:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000482e:	42b2      	cmp	r2, r6
90004830:	d004      	beq.n	9000483c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
90004832:	b116      	cbz	r6, 9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90004834:	792b      	ldrb	r3, [r5, #4]
90004836:	2b01      	cmp	r3, #1
90004838:	d00e      	beq.n	90004858 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
9000483a:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
9000483c:	fab3 f383 	clz	r3, r3
90004840:	095b      	lsrs	r3, r3, #5
90004842:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
90004846:	6803      	ldr	r3, [r0, #0]
90004848:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
9000484c:	4798      	blx	r3
            invalidate();
9000484e:	6823      	ldr	r3, [r4, #0]
90004850:	4620      	mov	r0, r4
90004852:	695b      	ldr	r3, [r3, #20]
90004854:	4798      	blx	r3
90004856:	e7ec      	b.n	90004832 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90004858:	6823      	ldr	r3, [r4, #0]
9000485a:	4a20      	ldr	r2, [pc, #128]	; (900048dc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000485c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90004860:	4293      	cmp	r3, r2
90004862:	d127      	bne.n	900048b4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90004864:	6b23      	ldr	r3, [r4, #48]	; 0x30
90004866:	2b00      	cmp	r3, #0
90004868:	d0e7      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000486a:	6819      	ldr	r1, [r3, #0]
9000486c:	481c      	ldr	r0, [pc, #112]	; (900048e0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000486e:	68ca      	ldr	r2, [r1, #12]
90004870:	4282      	cmp	r2, r0
90004872:	d123      	bne.n	900048bc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90004874:	685a      	ldr	r2, [r3, #4]
90004876:	2a00      	cmp	r2, #0
90004878:	d0df      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000487a:	689d      	ldr	r5, [r3, #8]
9000487c:	b175      	cbz	r5, 9000489c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
9000487e:	688e      	ldr	r6, [r1, #8]
90004880:	4a18      	ldr	r2, [pc, #96]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90004882:	4296      	cmp	r6, r2
90004884:	d123      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90004886:	68d9      	ldr	r1, [r3, #12]
90004888:	685a      	ldr	r2, [r3, #4]
9000488a:	eb02 0061 	add.w	r0, r2, r1, asr #1
9000488e:	07ca      	lsls	r2, r1, #31
90004890:	d41b      	bmi.n	900048ca <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90004892:	689b      	ldr	r3, [r3, #8]
90004894:	4621      	mov	r1, r4
    }
90004896:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000489a:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
9000489c:	68d8      	ldr	r0, [r3, #12]
9000489e:	07c6      	lsls	r6, r0, #31
900048a0:	d5cb      	bpl.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900048a2:	688e      	ldr	r6, [r1, #8]
900048a4:	490f      	ldr	r1, [pc, #60]	; (900048e4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900048a6:	428e      	cmp	r6, r1
900048a8:	d111      	bne.n	900048ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900048aa:	eb02 0060 	add.w	r0, r2, r0, asr #1
900048ae:	6803      	ldr	r3, [r0, #0]
900048b0:	595b      	ldr	r3, [r3, r5]
900048b2:	e7ef      	b.n	90004894 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
900048b4:	4620      	mov	r0, r4
    }
900048b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900048ba:	4718      	bx	r3
        if (action && action->isValid())
900048bc:	4618      	mov	r0, r3
900048be:	4790      	blx	r2
900048c0:	2800      	cmp	r0, #0
900048c2:	d0ba      	beq.n	9000483a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900048c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
900048c6:	6819      	ldr	r1, [r3, #0]
900048c8:	e7d9      	b.n	9000487e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900048ca:	689d      	ldr	r5, [r3, #8]
900048cc:	e7ef      	b.n	900048ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900048ce:	4621      	mov	r1, r4
900048d0:	4618      	mov	r0, r3
900048d2:	4633      	mov	r3, r6
    }
900048d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900048d8:	4718      	bx	r3
900048da:	bf00      	nop
900048dc:	9000479d 	.word	0x9000479d
900048e0:	900046fd 	.word	0x900046fd
900048e4:	900046d1 	.word	0x900046d1

900048e8 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
900048e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900048ec:	b085      	sub	sp, #20
900048ee:	4604      	mov	r4, r0
        : presenter(0)
900048f0:	f015 f8b2 	bl	90019a58 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &screen_main_menuViewBase::flexButtonCallbackHandler)
900048f4:	4adf      	ldr	r2, [pc, #892]	; (90004c74 <_ZN24screen_main_menuViewBaseC1Ev+0x38c>)
900048f6:	2500      	movs	r5, #0
          touchable(false),
900048f8:	f44f 7680 	mov.w	r6, #256	; 0x100
900048fc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
        : Widget(), alpha(255), color(0)
90004900:	4bdd      	ldr	r3, [pc, #884]	; (90004c78 <_ZN24screen_main_menuViewBaseC1Ev+0x390>)
90004902:	6022      	str	r2, [r4, #0]
90004904:	22ff      	movs	r2, #255	; 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004906:	f64f 79ff 	movw	r9, #65535	; 0xffff
9000490a:	f104 0798 	add.w	r7, r4, #152	; 0x98
9000490e:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
90004912:	a903      	add	r1, sp, #12
90004914:	63e5      	str	r5, [r4, #60]	; 0x3c
90004916:	4640      	mov	r0, r8
        : x(0), y(0), width(0), height(0)
90004918:	6465      	str	r5, [r4, #68]	; 0x44
        : pressed(false), alpha(255), action(0)
9000491a:	f64f 7a00 	movw	sl, #65280	; 0xff00
          cachedAbsX(0),
9000491e:	6625      	str	r5, [r4, #96]	; 0x60
90004920:	f504 7b9e 	add.w	fp, r4, #316	; 0x13c
          touchable(false),
90004924:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90004928:	6423      	str	r3, [r4, #64]	; 0x40
        : color(col)
9000492a:	66a5      	str	r5, [r4, #104]	; 0x68
9000492c:	f8ad 900c 	strh.w	r9, [sp, #12]
        : x(0), y(0), width(0), height(0)
90004930:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
90004934:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90004938:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
9000493c:	f00f ff2a 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004940:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004944:	a903      	add	r1, sp, #12
90004946:	4638      	mov	r0, r7
90004948:	f8ad 900c 	strh.w	r9, [sp, #12]
9000494c:	9301      	str	r3, [sp, #4]
9000494e:	f00f ff21 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        touchable = touch;
90004952:	f240 1301 	movw	r3, #257	; 0x101
        : Box(), borderColor(0), borderSize(0)
90004956:	4ac9      	ldr	r2, [pc, #804]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
        T::add(borderBox);
90004958:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
          firstChild(0)
9000495c:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
90004960:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90004964:	4bc6      	ldr	r3, [pc, #792]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004966:	f8a4 a0f0 	strh.w	sl, [r4, #240]	; 0xf0
9000496a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        T::add(borderBox);
9000496e:	9b01      	ldr	r3, [sp, #4]
90004970:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90004974:	4618      	mov	r0, r3
          touchable(false),
90004976:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
9000497a:	f884 911e 	strb.w	r9, [r4, #286]	; 0x11e
        : color(col)
9000497e:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
90004982:	f8c4 20f8 	str.w	r2, [r4, #248]	; 0xf8
90004986:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
9000498a:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        : x(0), y(0), width(0), height(0)
9000498e:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
90004992:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90004996:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
9000499a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
9000499e:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
900049a2:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(0)
900049a6:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900049aa:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900049ae:	e9c4 553f 	strd	r5, r5, [r4, #252]	; 0xfc
900049b2:	e9c4 5541 	strd	r5, r5, [r4, #260]	; 0x104
900049b6:	f00d ffbf 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900049ba:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
900049bc:	4bb0      	ldr	r3, [pc, #704]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
        touchable = touch;
900049be:	f240 1001 	movw	r0, #257	; 0x101
900049c2:	f884 2196 	strb.w	r2, [r4, #406]	; 0x196
        T::add(borderBox);
900049c6:	f504 71b8 	add.w	r1, r4, #368	; 0x170
900049ca:	4aac      	ldr	r2, [pc, #688]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
900049cc:	f8c4 5164 	str.w	r5, [r4, #356]	; 0x164
900049d0:	f8a4 a168 	strh.w	sl, [r4, #360]	; 0x168
900049d4:	f504 7ada 	add.w	sl, r4, #436	; 0x1b4
900049d8:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900049dc:	f8a4 0160 	strh.w	r0, [r4, #352]	; 0x160
900049e0:	4658      	mov	r0, fp
        : T(), up(), down()
900049e2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
          touchable(false),
900049e6:	f8a4 6194 	strh.w	r6, [r4, #404]	; 0x194
        : color(col)
900049ea:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
900049ee:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
900049f2:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
900049f6:	f8a4 51a0 	strh.w	r5, [r4, #416]	; 0x1a0
        : x(0), y(0), width(0), height(0)
900049fa:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
900049fe:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90004a02:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
90004a06:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
          nextSibling(0),
90004a0a:	e9c4 5561 	strd	r5, r5, [r4, #388]	; 0x184
          cachedAbsX(0),
90004a0e:	e9c4 5563 	strd	r5, r5, [r4, #396]	; 0x18c
        : color(0)
90004a12:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004a16:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
        rect.x = x;
90004a1a:	e9c4 555d 	strd	r5, r5, [r4, #372]	; 0x174
90004a1e:	e9c4 555f 	strd	r5, r5, [r4, #380]	; 0x17c
        T::add(borderBox);
90004a22:	f00d ff89 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a26:	22ff      	movs	r2, #255	; 0xff
        : T(), up(), down()
90004a28:	4b95      	ldr	r3, [pc, #596]	; (90004c80 <_ZN24screen_main_menuViewBaseC1Ev+0x398>)
90004a2a:	f64f 7100 	movw	r1, #65280	; 0xff00
        touchable = touch;
90004a2e:	f240 1001 	movw	r0, #257	; 0x101
90004a32:	f884 220e 	strb.w	r2, [r4, #526]	; 0x20e
90004a36:	4a91      	ldr	r2, [pc, #580]	; (90004c7c <_ZN24screen_main_menuViewBaseC1Ev+0x394>)
          touchable(false),
90004a38:	f8a4 620c 	strh.w	r6, [r4, #524]	; 0x20c
90004a3c:	f504 760b 	add.w	r6, r4, #556	; 0x22c
90004a40:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004a44:	f8c4 21e8 	str.w	r2, [r4, #488]	; 0x1e8
90004a48:	f8a4 11e0 	strh.w	r1, [r4, #480]	; 0x1e0
        T::add(borderBox);
90004a4c:	f504 71f4 	add.w	r1, r4, #488	; 0x1e8
        touchable = touch;
90004a50:	f8a4 01d8 	strh.w	r0, [r4, #472]	; 0x1d8
90004a54:	4650      	mov	r0, sl
90004a56:	f8c4 51dc 	str.w	r5, [r4, #476]	; 0x1dc
90004a5a:	f8c4 51e4 	str.w	r5, [r4, #484]	; 0x1e4
90004a5e:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
        : x(0), y(0), width(0), height(0)
90004a62:	e9c4 556e 	strd	r5, r5, [r4, #440]	; 0x1b8
90004a66:	e9c4 5570 	strd	r5, r5, [r4, #448]	; 0x1c0
          nextSibling(0),
90004a6a:	e9c4 5572 	strd	r5, r5, [r4, #456]	; 0x1c8
          cachedAbsX(0),
90004a6e:	e9c4 5574 	strd	r5, r5, [r4, #464]	; 0x1d0
          nextSibling(0),
90004a72:	e9c4 557f 	strd	r5, r5, [r4, #508]	; 0x1fc
          cachedAbsX(0),
90004a76:	e9c4 5581 	strd	r5, r5, [r4, #516]	; 0x204
        : color(col)
90004a7a:	e9c4 5584 	strd	r5, r5, [r4, #528]	; 0x210
        : color(0)
90004a7e:	e9c4 5587 	strd	r5, r5, [r4, #540]	; 0x21c
90004a82:	e9c4 5589 	strd	r5, r5, [r4, #548]	; 0x224
        rect.x = x;
90004a86:	e9c4 557b 	strd	r5, r5, [r4, #492]	; 0x1ec
90004a8a:	e9c4 557d 	strd	r5, r5, [r4, #500]	; 0x1f4
90004a8e:	f00d ff53 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a92:	a903      	add	r1, sp, #12
90004a94:	4630      	mov	r0, r6
90004a96:	f8ad 900c 	strh.w	r9, [sp, #12]
90004a9a:	f00f fe7b 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
90004a9e:	4a79      	ldr	r2, [pc, #484]	; (90004c84 <_ZN24screen_main_menuViewBaseC1Ev+0x39c>)
    __background.setPosition(0, 0, 480, 272);
90004aa0:	f104 0940 	add.w	r9, r4, #64	; 0x40
        setWidth(width);
90004aa4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90004aa8:	f8c4 2258 	str.w	r2, [r4, #600]	; 0x258
90004aac:	4a76      	ldr	r2, [pc, #472]	; (90004c88 <_ZN24screen_main_menuViewBaseC1Ev+0x3a0>)
90004aae:	4648      	mov	r0, r9
90004ab0:	f8c4 5264 	str.w	r5, [r4, #612]	; 0x264
90004ab4:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
        rect.x = x;
90004ab8:	6465      	str	r5, [r4, #68]	; 0x44
90004aba:	f8c4 425c 	str.w	r4, [r4, #604]	; 0x25c
        setWidth(width);
90004abe:	f7fd fbe9 	bl	90002294 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
90004ac2:	4648      	mov	r0, r9
90004ac4:	f44f 7188 	mov.w	r1, #272	; 0x110
90004ac8:	f7fd fbe6 	bl	90002298 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004acc:	4649      	mov	r1, r9
        color = newColor;
90004ace:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90004ad2:	f104 0904 	add.w	r9, r4, #4
90004ad6:	66a2      	str	r2, [r4, #104]	; 0x68
90004ad8:	4648      	mov	r0, r9
90004ada:	f00d ff2d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ade:	220e      	movs	r2, #14
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_SNAKE_LOGO_ID));
90004ae0:	a903      	add	r1, sp, #12
90004ae2:	4640      	mov	r0, r8
90004ae4:	f8ad 200c 	strh.w	r2, [sp, #12]
90004ae8:	f010 fe8f 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90004aec:	4a67      	ldr	r2, [pc, #412]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004aee:	4629      	mov	r1, r5
90004af0:	4640      	mov	r0, r8
90004af2:	6722      	str	r2, [r4, #112]	; 0x70
90004af4:	f102 7287 	add.w	r2, r2, #17694720	; 0x10e0000
90004af8:	6762      	str	r2, [r4, #116]	; 0x74
90004afa:	f00f fe06 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004afe:	4641      	mov	r1, r8
90004b00:	4648      	mov	r0, r9
90004b02:	f00d ff19 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b06:	2212      	movs	r2, #18
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_TICTACTOE_LOGO_ID));
90004b08:	a903      	add	r1, sp, #12
90004b0a:	4638      	mov	r0, r7
90004b0c:	f8ad 200c 	strh.w	r2, [sp, #12]
90004b10:	f010 fe7b 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004b14:	4a5e      	ldr	r2, [pc, #376]	; (90004c90 <_ZN24screen_main_menuViewBaseC1Ev+0x3a8>)
90004b16:	f44f 7ea0 	mov.w	lr, #320	; 0x140
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004b1a:	4629      	mov	r1, r5
90004b1c:	4638      	mov	r0, r7
90004b1e:	e9c4 e227 	strd	lr, r2, [r4, #156]	; 0x9c
90004b22:	f00f fdf2 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004b26:	4639      	mov	r1, r7
90004b28:	4648      	mov	r0, r9
90004b2a:	f00d ff05 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b2e:	4a59      	ldr	r2, [pc, #356]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
        borderUp = borderColorReleased;
90004b30:	4859      	ldr	r0, [pc, #356]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004b32:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90004b36:	2205      	movs	r2, #5
90004b38:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90004b3c:	f100 1033 	add.w	r0, r0, #3342387	; 0x330033
        down = colorPressed;
90004b40:	4956      	ldr	r1, [pc, #344]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderDown = borderColorPressed;
90004b42:	f500 504c 	add.w	r0, r0, #13056	; 0x3300
90004b46:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90004b4a:	f8a4 2128 	strh.w	r2, [r4, #296]	; 0x128
        borderBox.setColor(T::getPressed() ? down : up);
90004b4e:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
        down = colorPressed;
90004b52:	4a53      	ldr	r2, [pc, #332]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004b54:	f8c4 0138 	str.w	r0, [r4, #312]	; 0x138
        borderBox.setColor(T::getPressed() ? down : up);
90004b58:	9b01      	ldr	r3, [sp, #4]
        handlePressedUpdated();
90004b5a:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
        down = colorPressed;
90004b5e:	e9c4 214b 	strd	r2, r1, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90004b62:	2d00      	cmp	r5, #0
90004b64:	f000 80c7 	beq.w	90004cf6 <_ZN24screen_main_menuViewBaseC1Ev+0x40e>
90004b68:	460a      	mov	r2, r1
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004b6a:	f504 719c 	add.w	r1, r4, #312	; 0x138
90004b6e:	f8c4 2120 	str.w	r2, [r4, #288]	; 0x120
90004b72:	680a      	ldr	r2, [r1, #0]
        borderColor = colorBorder;
90004b74:	4d4b      	ldr	r5, [pc, #300]	; (90004ca4 <_ZN24screen_main_menuViewBaseC1Ev+0x3bc>)
90004b76:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
        alpha = newAlpha;
90004b7a:	2201      	movs	r2, #1
90004b7c:	f884 20f1 	strb.w	r2, [r4, #241]	; 0xf1
        handleAlphaUpdated();
90004b80:	f8d0 1090 	ldr.w	r1, [r0, #144]	; 0x90
90004b84:	42a9      	cmp	r1, r5
90004b86:	f040 80bf 	bne.w	90004d08 <_ZN24screen_main_menuViewBaseC1Ev+0x420>
        alpha = newAlpha;
90004b8a:	f884 211e 	strb.w	r2, [r4, #286]	; 0x11e
90004b8e:	4619      	mov	r1, r3
90004b90:	4845      	ldr	r0, [pc, #276]	; (90004ca8 <_ZN24screen_main_menuViewBaseC1Ev+0x3c0>)
90004b92:	4b40      	ldr	r3, [pc, #256]	; (90004c94 <_ZN24screen_main_menuViewBaseC1Ev+0x3ac>)
    btn_tictactoe.setAction(flexButtonCallback);
90004b94:	f504 7716 	add.w	r7, r4, #600	; 0x258
90004b98:	e9c4 0332 	strd	r0, r3, [r4, #200]	; 0xc8
        action = &callback;
90004b9c:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
90004ba0:	4648      	mov	r0, r9
90004ba2:	f00d fec9 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba6:	4b41      	ldr	r3, [pc, #260]	; (90004cac <_ZN24screen_main_menuViewBaseC1Ev+0x3c4>)
        borderUp = borderColorReleased;
90004ba8:	493b      	ldr	r1, [pc, #236]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
90004baa:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90004bae:	4a3b      	ldr	r2, [pc, #236]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
        borderUp = borderColorReleased;
90004bb0:	f8c4 11ac 	str.w	r1, [r4, #428]	; 0x1ac
        borderDown = borderColorPressed;
90004bb4:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90004bb8:	f894 0168 	ldrb.w	r0, [r4, #360]	; 0x168
        borderDown = borderColorPressed;
90004bbc:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90004bc0:	e9c4 c35d 	strd	ip, r3, [r4, #372]	; 0x174
        borderSize = size;
90004bc4:	2305      	movs	r3, #5
90004bc6:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
        handlePressedUpdated();
90004bca:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
90004bce:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
        down = colorPressed;
90004bd2:	4b33      	ldr	r3, [pc, #204]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
90004bd4:	e9c4 3269 	strd	r3, r2, [r4, #420]	; 0x1a4
        borderBox.setColor(T::getPressed() ? down : up);
90004bd8:	2800      	cmp	r0, #0
90004bda:	f000 8092 	beq.w	90004d02 <_ZN24screen_main_menuViewBaseC1Ev+0x41a>
        color = newColor;
90004bde:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004be0:	f504 72d8 	add.w	r2, r4, #432	; 0x1b0
90004be4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90004be8:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004bea:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        alpha = newAlpha;
90004bee:	2300      	movs	r3, #0
90004bf0:	f884 3169 	strb.w	r3, [r4, #361]	; 0x169
        handleAlphaUpdated();
90004bf4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004bf8:	42aa      	cmp	r2, r5
90004bfa:	f040 808d 	bne.w	90004d18 <_ZN24screen_main_menuViewBaseC1Ev+0x430>
        alpha = newAlpha;
90004bfe:	f884 3196 	strb.w	r3, [r4, #406]	; 0x196
90004c02:	4b22      	ldr	r3, [pc, #136]	; (90004c8c <_ZN24screen_main_menuViewBaseC1Ev+0x3a4>)
90004c04:	4659      	mov	r1, fp
90004c06:	4648      	mov	r0, r9
        action = &callback;
90004c08:	f8c4 716c 	str.w	r7, [r4, #364]	; 0x16c
90004c0c:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004c10:	f103 7387 	add.w	r3, r3, #17694720	; 0x10e0000
90004c14:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90004c18:	f00d fe8e 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c1c:	2200      	movs	r2, #0
90004c1e:	4b24      	ldr	r3, [pc, #144]	; (90004cb0 <_ZN24screen_main_menuViewBaseC1Ev+0x3c8>)
        borderUp = borderColorReleased;
90004c20:	491d      	ldr	r1, [pc, #116]	; (90004c98 <_ZN24screen_main_menuViewBaseC1Ev+0x3b0>)
        borderBox.setColor(T::getPressed() ? down : up);
90004c22:	f894 01e0 	ldrb.w	r0, [r4, #480]	; 0x1e0
        borderUp = borderColorReleased;
90004c26:	f8c4 1224 	str.w	r1, [r4, #548]	; 0x224
        borderDown = borderColorPressed;
90004c2a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90004c2e:	e9c4 237b 	strd	r2, r3, [r4, #492]	; 0x1ec
        borderSize = size;
90004c32:	2305      	movs	r3, #5
90004c34:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90004c38:	4a18      	ldr	r2, [pc, #96]	; (90004c9c <_ZN24screen_main_menuViewBaseC1Ev+0x3b4>)
90004c3a:	f8a4 3218 	strh.w	r3, [r4, #536]	; 0x218
90004c3e:	4b18      	ldr	r3, [pc, #96]	; (90004ca0 <_ZN24screen_main_menuViewBaseC1Ev+0x3b8>)
        borderDown = borderColorPressed;
90004c40:	f8c4 1228 	str.w	r1, [r4, #552]	; 0x228
        handlePressedUpdated();
90004c44:	f8d4 11b4 	ldr.w	r1, [r4, #436]	; 0x1b4
        down = colorPressed;
90004c48:	e9c4 3287 	strd	r3, r2, [r4, #540]	; 0x21c
        borderBox.setColor(T::getPressed() ? down : up);
90004c4c:	2800      	cmp	r0, #0
90004c4e:	d055      	beq.n	90004cfc <_ZN24screen_main_menuViewBaseC1Ev+0x414>
        color = newColor;
90004c50:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004c52:	f504 720a 	add.w	r2, r4, #552	; 0x228
90004c56:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
90004c5a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90004c5c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        alpha = newAlpha;
90004c60:	2300      	movs	r3, #0
90004c62:	f884 31e1 	strb.w	r3, [r4, #481]	; 0x1e1
        handleAlphaUpdated();
90004c66:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90004c6a:	42aa      	cmp	r2, r5
90004c6c:	d151      	bne.n	90004d12 <_ZN24screen_main_menuViewBaseC1Ev+0x42a>
        alpha = newAlpha;
90004c6e:	f884 320e 	strb.w	r3, [r4, #526]	; 0x20e
90004c72:	e01f      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004c74:	9002cbd8 	.word	0x9002cbd8
90004c78:	9002d9a0 	.word	0x9002d9a0
90004c7c:	9002da08 	.word	0x9002da08
90004c80:	9002cb24 	.word	0x9002cb24
90004c84:	9002cbc0 	.word	0x9002cbc0
90004c88:	90004751 	.word	0x90004751
90004c8c:	000100a0 	.word	0x000100a0
90004c90:	0110009a 	.word	0x0110009a
90004c94:	010f009a 	.word	0x010f009a
90004c98:	ff003366 	.word	0xff003366
90004c9c:	ff0099cc 	.word	0xff0099cc
90004ca0:	ff006699 	.word	0xff006699
90004ca4:	90004715 	.word	0x90004715
90004ca8:	00010140 	.word	0x00010140
90004cac:	010f00a0 	.word	0x010f00a0
90004cb0:	011000a0 	.word	0x011000a0
90004cb4:	2500      	movs	r5, #0
        action = &callback;
90004cb6:	f8c4 71e4 	str.w	r7, [r4, #484]	; 0x1e4
90004cba:	4f19      	ldr	r7, [pc, #100]	; (90004d20 <_ZN24screen_main_menuViewBaseC1Ev+0x438>)
90004cbc:	4651      	mov	r1, sl
90004cbe:	4648      	mov	r0, r9
90004cc0:	e9c4 576e 	strd	r5, r7, [r4, #440]	; 0x1b8
90004cc4:	f00d fe38 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004cc8:	230f      	movs	r3, #15
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ID));
90004cca:	a903      	add	r1, sp, #12
90004ccc:	4630      	mov	r0, r6
90004cce:	f8ad 300c 	strh.w	r3, [sp, #12]
90004cd2:	f010 fd9a 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004cd6:	4629      	mov	r1, r5
90004cd8:	4630      	mov	r0, r6
90004cda:	f8c4 5230 	str.w	r5, [r4, #560]	; 0x230
90004cde:	f8c4 7234 	str.w	r7, [r4, #564]	; 0x234
90004ce2:	f00f fd12 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004ce6:	4648      	mov	r0, r9
90004ce8:	4631      	mov	r1, r6
90004cea:	f00d fe25 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004cee:	4620      	mov	r0, r4
90004cf0:	b005      	add	sp, #20
90004cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004cf6:	f504 719a 	add.w	r1, r4, #308	; 0x134
90004cfa:	e738      	b.n	90004b6e <_ZN24screen_main_menuViewBaseC1Ev+0x286>
90004cfc:	f504 7209 	add.w	r2, r4, #548	; 0x224
90004d00:	e7a9      	b.n	90004c56 <_ZN24screen_main_menuViewBaseC1Ev+0x36e>
90004d02:	f504 72d6 	add.w	r2, r4, #428	; 0x1ac
90004d06:	e76d      	b.n	90004be4 <_ZN24screen_main_menuViewBaseC1Ev+0x2fc>
        handleAlphaUpdated();
90004d08:	4618      	mov	r0, r3
90004d0a:	9301      	str	r3, [sp, #4]
90004d0c:	4788      	blx	r1
90004d0e:	9b01      	ldr	r3, [sp, #4]
90004d10:	e73d      	b.n	90004b8e <_ZN24screen_main_menuViewBaseC1Ev+0x2a6>
90004d12:	4650      	mov	r0, sl
90004d14:	4790      	blx	r2
90004d16:	e7cd      	b.n	90004cb4 <_ZN24screen_main_menuViewBaseC1Ev+0x3cc>
90004d18:	4658      	mov	r0, fp
90004d1a:	4790      	blx	r2
90004d1c:	e771      	b.n	90004c02 <_ZN24screen_main_menuViewBaseC1Ev+0x31a>
90004d1e:	bf00      	nop
90004d20:	011000a0 	.word	0x011000a0

90004d24 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004d24:	b530      	push	{r4, r5, lr}
90004d26:	b085      	sub	sp, #20
90004d28:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004d2a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004d2c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d2e:	466d      	mov	r5, sp
90004d30:	4601      	mov	r1, r0
        rect.width = width;
90004d32:	8102      	strh	r2, [r0, #8]
90004d34:	343c      	adds	r4, #60	; 0x3c
90004d36:	4628      	mov	r0, r5
90004d38:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d3c:	4798      	blx	r3
90004d3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d42:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d46:	b005      	add	sp, #20
90004d48:	bd30      	pop	{r4, r5, pc}
90004d4a:	bf00      	nop

90004d4c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004d4c:	b530      	push	{r4, r5, lr}
90004d4e:	b085      	sub	sp, #20
90004d50:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004d52:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004d54:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004d56:	466d      	mov	r5, sp
90004d58:	4601      	mov	r1, r0
        rect.height = height;
90004d5a:	8142      	strh	r2, [r0, #10]
90004d5c:	343c      	adds	r4, #60	; 0x3c
90004d5e:	4628      	mov	r0, r5
90004d60:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d64:	4798      	blx	r3
90004d66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d6a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004d6e:	b005      	add	sp, #20
90004d70:	bd30      	pop	{r4, r5, pc}
90004d72:	bf00      	nop

90004d74 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90004d74:	2200      	movs	r2, #0
90004d76:	6002      	str	r2, [r0, #0]
90004d78:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004d7a:	4770      	bx	lr

90004d7c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004d7c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004d80:	4770      	bx	lr
90004d82:	bf00      	nop

90004d84 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004d84:	2000      	movs	r0, #0
90004d86:	4770      	bx	lr

90004d88 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004d88:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004d8c:	b112      	cbz	r2, 90004d94 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004d8e:	6803      	ldr	r3, [r0, #0]
90004d90:	695b      	ldr	r3, [r3, #20]
90004d92:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004d94:	4770      	bx	lr
90004d96:	bf00      	nop

90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d98:	2200      	movs	r2, #0
90004d9a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
90004d9e:	6082      	str	r2, [r0, #8]
90004da0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004da4:	4770      	bx	lr
90004da6:	bf00      	nop

90004da8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004da8:	6c80      	ldr	r0, [r0, #72]	; 0x48
90004daa:	4770      	bx	lr

90004dac <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
     * Virtual Action Handlers
     */
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
90004dac:	4770      	bx	lr
90004dae:	bf00      	nop

90004db0 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
90004db0:	4770      	bx	lr
90004db2:	bf00      	nop

90004db4 <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
90004db4:	4770      	bx	lr
90004db6:	bf00      	nop

90004db8 <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
90004db8:	4770      	bx	lr
90004dba:	bf00      	nop

90004dbc <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
90004dbc:	4770      	bx	lr
90004dbe:	bf00      	nop

90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
90004dc0:	4770      	bx	lr
90004dc2:	bf00      	nop

90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
90004dc4:	4770      	bx	lr
90004dc6:	bf00      	nop

90004dc8 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004dc8:	4770      	bx	lr
90004dca:	bf00      	nop

90004dcc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004dcc:	4770      	bx	lr
90004dce:	bf00      	nop

90004dd0 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004dd0:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004dd2:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004dd4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004dd6:	6844      	ldr	r4, [r0, #4]
90004dd8:	f012 0f01 	tst.w	r2, #1
90004ddc:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004de0:	d103      	bne.n	90004dea <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004de2:	689b      	ldr	r3, [r3, #8]
    }
90004de4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004de8:	4718      	bx	r3
90004dea:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004dee:	689b      	ldr	r3, [r3, #8]
90004df0:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004df4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004df8:	58d3      	ldr	r3, [r2, r3]
90004dfa:	4718      	bx	r3

90004dfc <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004dfc:	6843      	ldr	r3, [r0, #4]
90004dfe:	b13b      	cbz	r3, 90004e10 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004e00:	6883      	ldr	r3, [r0, #8]
90004e02:	b10b      	cbz	r3, 90004e08 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004e04:	2001      	movs	r0, #1
    }
90004e06:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004e08:	68c0      	ldr	r0, [r0, #12]
90004e0a:	f000 0001 	and.w	r0, r0, #1
90004e0e:	4770      	bx	lr
90004e10:	4618      	mov	r0, r3
90004e12:	4770      	bx	lr

90004e14 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004e14:	b510      	push	{r4, lr}
90004e16:	4604      	mov	r4, r0
90004e18:	214c      	movs	r1, #76	; 0x4c
90004e1a:	f024 fb23 	bl	90029464 <_ZdlPvj>
90004e1e:	4620      	mov	r0, r4
90004e20:	bd10      	pop	{r4, pc}
90004e22:	bf00      	nop

90004e24 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004e24:	b510      	push	{r4, lr}
90004e26:	4604      	mov	r4, r0
90004e28:	2110      	movs	r1, #16
90004e2a:	f024 fb1b 	bl	90029464 <_ZdlPvj>
90004e2e:	4620      	mov	r0, r4
90004e30:	bd10      	pop	{r4, pc}
90004e32:	bf00      	nop

90004e34 <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
90004e34:	b510      	push	{r4, lr}
90004e36:	4604      	mov	r4, r0
}
90004e38:	f44f 6191 	mov.w	r1, #1160	; 0x488
90004e3c:	f024 fb12 	bl	90029464 <_ZdlPvj>
90004e40:	4620      	mov	r0, r4
90004e42:	bd10      	pop	{r4, pc}

90004e44 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e44:	4b1b      	ldr	r3, [pc, #108]	; (90004eb4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e46:	6802      	ldr	r2, [r0, #0]
90004e48:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004e4a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e4c:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004e4e:	b323      	cbz	r3, 90004e9a <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004e50:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004e52:	4919      	ldr	r1, [pc, #100]	; (90004eb8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004e54:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90004e56:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e58:	8809      	ldrh	r1, [r1, #0]
90004e5a:	4291      	cmp	r1, r2
90004e5c:	d923      	bls.n	90004ea6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004e5e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004e62:	4b16      	ldr	r3, [pc, #88]	; (90004ebc <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004e64:	681b      	ldr	r3, [r3, #0]
90004e66:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004e6a:	4a15      	ldr	r2, [pc, #84]	; (90004ec0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004e6c:	6803      	ldr	r3, [r0, #0]
90004e6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004e70:	4293      	cmp	r3, r2
90004e72:	d107      	bne.n	90004e84 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004e74:	88c0      	ldrh	r0, [r0, #6]
90004e76:	4b13      	ldr	r3, [pc, #76]	; (90004ec4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004e78:	1a31      	subs	r1, r6, r0
90004e7a:	429d      	cmp	r5, r3
90004e7c:	b209      	sxth	r1, r1
90004e7e:	d107      	bne.n	90004e90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004e80:	80e1      	strh	r1, [r4, #6]
    }
90004e82:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e84:	4798      	blx	r3
90004e86:	4b0f      	ldr	r3, [pc, #60]	; (90004ec4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004e88:	1a31      	subs	r1, r6, r0
90004e8a:	429d      	cmp	r5, r3
90004e8c:	b209      	sxth	r1, r1
90004e8e:	d0f7      	beq.n	90004e80 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004e90:	4620      	mov	r0, r4
90004e92:	462b      	mov	r3, r5
    }
90004e94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004e98:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e9a:	4b0b      	ldr	r3, [pc, #44]	; (90004ec8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004e9c:	216c      	movs	r1, #108	; 0x6c
90004e9e:	4a0b      	ldr	r2, [pc, #44]	; (90004ecc <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004ea0:	480b      	ldr	r0, [pc, #44]	; (90004ed0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004ea2:	f024 fb0d 	bl	900294c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ea6:	4b0b      	ldr	r3, [pc, #44]	; (90004ed4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004ea8:	216d      	movs	r1, #109	; 0x6d
90004eaa:	4a08      	ldr	r2, [pc, #32]	; (90004ecc <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004eac:	4808      	ldr	r0, [pc, #32]	; (90004ed0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004eae:	f024 fb07 	bl	900294c0 <__assert_func>
90004eb2:	bf00      	nop
90004eb4:	24039b24 	.word	0x24039b24
90004eb8:	24039b28 	.word	0x24039b28
90004ebc:	24039b2c 	.word	0x24039b2c
90004ec0:	900035c1 	.word	0x900035c1
90004ec4:	90002291 	.word	0x90002291
90004ec8:	9002cc04 	.word	0x9002cc04
90004ecc:	9002cc48 	.word	0x9002cc48
90004ed0:	9002cc84 	.word	0x9002cc84
90004ed4:	9002cccc 	.word	0x9002cccc

90004ed8 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_up)
90004ed8:	f500 739c 	add.w	r3, r0, #312	; 0x138
90004edc:	4299      	cmp	r1, r3
{
90004ede:	b570      	push	{r4, r5, r6, lr}
90004ee0:	4604      	mov	r4, r0
90004ee2:	460d      	mov	r5, r1
    if (&src == &btn_up)
90004ee4:	d041      	beq.n	90004f6a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x92>
        //intr_change_direction_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
90004ee6:	f504 73f6 	add.w	r3, r4, #492	; 0x1ec
90004eea:	429d      	cmp	r5, r3
90004eec:	d035      	beq.n	90004f5a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x82>
        //intr_change_direction_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_right)
90004eee:	f504 73ba 	add.w	r3, r4, #372	; 0x174
90004ef2:	429d      	cmp	r5, r3
90004ef4:	d029      	beq.n	90004f4a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        //intr_change_direction_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
    if (&src == &btn_down)
90004ef6:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90004efa:	429d      	cmp	r5, r3
90004efc:	d01d      	beq.n	90004f3a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x62>
        //intr_change_direction_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_snake_start)
90004efe:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
90004f02:	429d      	cmp	r5, r3
90004f04:	d011      	beq.n	90004f2a <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x52>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
90004f06:	f504 730a 	add.w	r3, r4, #552	; 0x228
90004f0a:	429d      	cmp	r5, r3
90004f0c:	d034      	beq.n	90004f78 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>
        //btn_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
    if (&src == &btn_restart)
90004f0e:	f504 7319 	add.w	r3, r4, #612	; 0x264
90004f12:	429d      	cmp	r5, r3
90004f14:	d000      	beq.n	90004f18 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x40>
        //intr_restart
        //When btn_restart clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
}
90004f16:	bd70      	pop	{r4, r5, r6, pc}
        game_snake_start();
90004f18:	6823      	ldr	r3, [r4, #0]
90004f1a:	4a1a      	ldr	r2, [pc, #104]	; (90004f84 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xac>)
90004f1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004f1e:	4293      	cmp	r3, r2
90004f20:	d0f9      	beq.n	90004f16 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>
90004f22:	4620      	mov	r0, r4
}
90004f24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        game_snake_start();
90004f28:	4718      	bx	r3
        game_snake_start();
90004f2a:	6823      	ldr	r3, [r4, #0]
90004f2c:	4a15      	ldr	r2, [pc, #84]	; (90004f84 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xac>)
90004f2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004f30:	4293      	cmp	r3, r2
90004f32:	d0e8      	beq.n	90004f06 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004f34:	4620      	mov	r0, r4
90004f36:	4798      	blx	r3
90004f38:	e7e5      	b.n	90004f06 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_down();
90004f3a:	6823      	ldr	r3, [r4, #0]
90004f3c:	4a12      	ldr	r2, [pc, #72]	; (90004f88 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb0>)
90004f3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90004f40:	4293      	cmp	r3, r2
90004f42:	d0dc      	beq.n	90004efe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004f44:	4620      	mov	r0, r4
90004f46:	4798      	blx	r3
90004f48:	e7d9      	b.n	90004efe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_right();
90004f4a:	6823      	ldr	r3, [r4, #0]
90004f4c:	4a0f      	ldr	r2, [pc, #60]	; (90004f8c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb4>)
90004f4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004f50:	4293      	cmp	r3, r2
90004f52:	d0d0      	beq.n	90004ef6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004f54:	4620      	mov	r0, r4
90004f56:	4798      	blx	r3
90004f58:	e7cd      	b.n	90004ef6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        change_direction_left();
90004f5a:	6823      	ldr	r3, [r4, #0]
90004f5c:	4a0c      	ldr	r2, [pc, #48]	; (90004f90 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb8>)
90004f5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004f60:	4293      	cmp	r3, r2
90004f62:	d0c4      	beq.n	90004eee <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004f64:	4620      	mov	r0, r4
90004f66:	4798      	blx	r3
90004f68:	e7c1      	b.n	90004eee <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        change_direction_up();
90004f6a:	6803      	ldr	r3, [r0, #0]
90004f6c:	4a09      	ldr	r2, [pc, #36]	; (90004f94 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xbc>)
90004f6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004f70:	4293      	cmp	r3, r2
90004f72:	d0b8      	beq.n	90004ee6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004f74:	4798      	blx	r3
90004f76:	e7b6      	b.n	90004ee6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004f78:	f013 f936 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_main_menuScreenNoTransition();
90004f7c:	f7ff f93c 	bl	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90004f80:	e7c5      	b.n	90004f0e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
90004f82:	bf00      	nop
90004f84:	90004dbd 	.word	0x90004dbd
90004f88:	90004db9 	.word	0x90004db9
90004f8c:	90004db5 	.word	0x90004db5
90004f90:	90004db1 	.word	0x90004db1
90004f94:	90004dad 	.word	0x90004dad

90004f98 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004f98:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004f9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004f9e:	4f25      	ldr	r7, [pc, #148]	; (90005034 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004fa0:	4605      	mov	r5, r0
        setX(x);
90004fa2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004fa4:	4690      	mov	r8, r2
90004fa6:	42be      	cmp	r6, r7
90004fa8:	d125      	bne.n	90004ff6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004faa:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004fac:	80a9      	strh	r1, [r5, #4]
90004fae:	4922      	ldr	r1, [pc, #136]	; (90005038 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004fb0:	428c      	cmp	r4, r1
90004fb2:	d126      	bne.n	90005002 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004fb4:	4921      	ldr	r1, [pc, #132]	; (9000503c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004fb6:	fa1f f888 	uxth.w	r8, r8
90004fba:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004fbc:	680b      	ldr	r3, [r1, #0]
90004fbe:	2b00      	cmp	r3, #0
90004fc0:	d032      	beq.n	90005028 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004fc2:	491f      	ldr	r1, [pc, #124]	; (90005040 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004fc4:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004fc6:	8809      	ldrh	r1, [r1, #0]
90004fc8:	4291      	cmp	r1, r2
90004fca:	d927      	bls.n	9000501c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004fcc:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004fd0:	4b1c      	ldr	r3, [pc, #112]	; (90005044 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004fd2:	681b      	ldr	r3, [r3, #0]
90004fd4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004fd8:	4a1b      	ldr	r2, [pc, #108]	; (90005048 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004fda:	6803      	ldr	r3, [r0, #0]
90004fdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004fde:	4293      	cmp	r3, r2
90004fe0:	d11a      	bne.n	90005018 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004fe2:	88c0      	ldrh	r0, [r0, #6]
90004fe4:	4b19      	ldr	r3, [pc, #100]	; (9000504c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004fe6:	eba8 0200 	sub.w	r2, r8, r0
90004fea:	429e      	cmp	r6, r3
90004fec:	b211      	sxth	r1, r2
90004fee:	d10e      	bne.n	9000500e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004ff0:	80e9      	strh	r1, [r5, #6]
    }
90004ff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004ff6:	47b0      	blx	r6
        setBaselineY(baselineY);
90004ff8:	682b      	ldr	r3, [r5, #0]
90004ffa:	490f      	ldr	r1, [pc, #60]	; (90005038 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004ffc:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004ffe:	428c      	cmp	r4, r1
90005000:	d0d8      	beq.n	90004fb4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90005002:	4641      	mov	r1, r8
90005004:	4628      	mov	r0, r5
90005006:	4623      	mov	r3, r4
    }
90005008:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
9000500c:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000500e:	4628      	mov	r0, r5
90005010:	4633      	mov	r3, r6
    }
90005012:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90005016:	4718      	bx	r3
90005018:	4798      	blx	r3
9000501a:	e7e3      	b.n	90004fe4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000501c:	4b0c      	ldr	r3, [pc, #48]	; (90005050 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000501e:	216d      	movs	r1, #109	; 0x6d
90005020:	4a0c      	ldr	r2, [pc, #48]	; (90005054 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90005022:	480d      	ldr	r0, [pc, #52]	; (90005058 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90005024:	f024 fa4c 	bl	900294c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005028:	4b0c      	ldr	r3, [pc, #48]	; (9000505c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
9000502a:	216c      	movs	r1, #108	; 0x6c
9000502c:	4a09      	ldr	r2, [pc, #36]	; (90005054 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000502e:	480a      	ldr	r0, [pc, #40]	; (90005058 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90005030:	f024 fa46 	bl	900294c0 <__assert_func>
90005034:	9000228d 	.word	0x9000228d
90005038:	90004e45 	.word	0x90004e45
9000503c:	24039b24 	.word	0x24039b24
90005040:	24039b28 	.word	0x24039b28
90005044:	24039b2c 	.word	0x24039b2c
90005048:	900035c1 	.word	0x900035c1
9000504c:	90002291 	.word	0x90002291
90005050:	9002cccc 	.word	0x9002cccc
90005054:	9002cc48 	.word	0x9002cc48
90005058:	9002cc84 	.word	0x9002cc84
9000505c:	9002cc04 	.word	0x9002cc04

90005060 <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90005060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005064:	4604      	mov	r4, r0
90005066:	2500      	movs	r5, #0
        : Widget(), alpha(255), color(0)
90005068:	f04f 08ff 	mov.w	r8, #255	; 0xff
          touchable(false),
9000506c:	f44f 7980 	mov.w	r9, #256	; 0x100
90005070:	4ede      	ldr	r6, [pc, #888]	; (900053ec <_ZN25screen_snake_gameViewBaseC1Ev+0x38c>)
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005072:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
90005076:	f64f 7aff 	movw	sl, #65535	; 0xffff
9000507a:	f104 07c4 	add.w	r7, r4, #196	; 0xc4
screen_snake_gameViewBase::screen_snake_gameViewBase() :
9000507e:	ed2d 8b04 	vpush	{d8-d9}
90005082:	b095      	sub	sp, #84	; 0x54
90005084:	f014 fce8 	bl	90019a58 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90005088:	4bd9      	ldr	r3, [pc, #868]	; (900053f0 <_ZN25screen_snake_gameViewBaseC1Ev+0x390>)
9000508a:	a912      	add	r1, sp, #72	; 0x48
9000508c:	6426      	str	r6, [r4, #64]	; 0x40
9000508e:	6023      	str	r3, [r4, #0]
90005090:	4658      	mov	r0, fp
90005092:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
90005096:	63e5      	str	r5, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90005098:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
9000509a:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
9000509c:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
        : color(col)
900050a0:	66a5      	str	r5, [r4, #104]	; 0x68
900050a2:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
        : x(0), y(0), width(0), height(0)
900050a6:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
900050aa:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900050ae:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900050b2:	f00f fb6f 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900050b6:	f504 739c 	add.w	r3, r4, #312	; 0x138
900050ba:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
900050be:	4638      	mov	r0, r7
900050c0:	f884 80be 	strb.w	r8, [r4, #190]	; 0xbe
          touchable(false),
900050c4:	f8a4 90bc 	strh.w	r9, [r4, #188]	; 0xbc
        : color(col)
900050c8:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900050cc:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
900050ce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
900050d2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
900050d6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
900050da:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
900050de:	f010 fccb 	bl	90015a78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900050e2:	f884 8132 	strb.w	r8, [r4, #306]	; 0x132
900050e6:	9804      	ldr	r0, [sp, #16]
900050e8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
          touchable(false),
900050ec:	f8a4 9130 	strh.w	r9, [r4, #304]	; 0x130
        : color(col)
900050f0:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        : x(0), y(0), width(0), height(0)
900050f4:	e9c4 6543 	strd	r6, r5, [r4, #268]	; 0x10c
900050f8:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
900050fc:	f504 76ba 	add.w	r6, r4, #372	; 0x174
          parent(0),
90005100:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
          nextDrawChainElement(0),
90005104:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
90005108:	f010 fb58 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
9000510c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90005110:	4630      	mov	r0, r6
90005112:	ee08 6a90 	vmov	s17, r6
90005116:	9305      	str	r3, [sp, #20]
90005118:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
9000511c:	f010 fb4e 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005120:	9805      	ldr	r0, [sp, #20]
90005122:	f010 fb4b 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005126:	f504 730a 	add.w	r3, r4, #552	; 0x228
9000512a:	4630      	mov	r0, r6
9000512c:	ee09 6a10 	vmov	s18, r6
90005130:	9306      	str	r3, [sp, #24]
90005132:	f010 fb43 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005136:	f504 7219 	add.w	r2, r4, #612	; 0x264
9000513a:	9806      	ldr	r0, [sp, #24]
9000513c:	1d26      	adds	r6, r4, #4
9000513e:	9207      	str	r2, [sp, #28]
90005140:	f010 fb3c 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005144:	9807      	ldr	r0, [sp, #28]
90005146:	f010 fb39 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000514a:	4aaa      	ldr	r2, [pc, #680]	; (900053f4 <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000514c:	f04f 33ff 	mov.w	r3, #4294967295
        : typedTextId(id)
90005150:	48a9      	ldr	r0, [pc, #676]	; (900053f8 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
        : TextAreaWithWildcardBase(), wc1(0)
90005152:	49aa      	ldr	r1, [pc, #680]	; (900053fc <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
90005154:	f8c4 22a0 	str.w	r2, [r4, #672]	; 0x2a0
90005158:	f8c4 82d6 	str.w	r8, [r4, #726]	; 0x2d6
9000515c:	f8c4 831e 	str.w	r8, [r4, #798]	; 0x31e
90005160:	f8c4 32e0 	str.w	r3, [r4, #736]	; 0x2e0
90005164:	f8a4 3314 	strh.w	r3, [r4, #788]	; 0x314
90005168:	f8c4 02c8 	str.w	r0, [r4, #712]	; 0x2c8
9000516c:	f8c4 0310 	str.w	r0, [r4, #784]	; 0x310
          touchable(false),
90005170:	f8a4 92c4 	strh.w	r9, [r4, #708]	; 0x2c4
90005174:	f8a4 a2cc 	strh.w	sl, [r4, #716]	; 0x2cc
        : color(col)
90005178:	f8c4 52d0 	str.w	r5, [r4, #720]	; 0x2d0
9000517c:	f8a4 52d4 	strh.w	r5, [r4, #724]	; 0x2d4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005180:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
              text(0)
90005184:	f8c4 52e4 	str.w	r5, [r4, #740]	; 0x2e4
90005188:	f8a4 930c 	strh.w	r9, [r4, #780]	; 0x30c
        : color(col)
9000518c:	f8c4 5318 	str.w	r5, [r4, #792]	; 0x318
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005190:	f8a4 531c 	strh.w	r5, [r4, #796]	; 0x31c
        : x(0), y(0), width(0), height(0)
90005194:	e9c4 55a9 	strd	r5, r5, [r4, #676]	; 0x2a4
90005198:	e9c4 55ab 	strd	r5, r5, [r4, #684]	; 0x2ac
          nextSibling(0),
9000519c:	e9c4 55ad 	strd	r5, r5, [r4, #692]	; 0x2b4
          cachedAbsX(0),
900051a0:	e9c4 55af 	strd	r5, r5, [r4, #700]	; 0x2bc
900051a4:	e9c4 55bb 	strd	r5, r5, [r4, #748]	; 0x2ec
900051a8:	e9c4 55bd 	strd	r5, r5, [r4, #756]	; 0x2f4
          nextSibling(0),
900051ac:	e9c4 55bf 	strd	r5, r5, [r4, #764]	; 0x2fc
          cachedAbsX(0),
900051b0:	e9c4 55c1 	strd	r5, r5, [r4, #772]	; 0x304
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900051b4:	e9c4 53c9 	strd	r5, r3, [r4, #804]	; 0x324
900051b8:	f8c4 2334 	str.w	r2, [r4, #820]	; 0x334
900051bc:	f8c4 3374 	str.w	r3, [r4, #884]	; 0x374
900051c0:	f8c4 035c 	str.w	r0, [r4, #860]	; 0x35c
900051c4:	f8c4 836a 	str.w	r8, [r4, #874]	; 0x36a
900051c8:	f8c4 03a4 	str.w	r0, [r4, #932]	; 0x3a4
900051cc:	f8c4 12e8 	str.w	r1, [r4, #744]	; 0x2e8
          touchable(false),
900051d0:	f8a4 9358 	strh.w	r9, [r4, #856]	; 0x358
900051d4:	f8a4 a360 	strh.w	sl, [r4, #864]	; 0x360
        : color(col)
900051d8:	f8c4 5364 	str.w	r5, [r4, #868]	; 0x364
900051dc:	f8a4 5368 	strh.w	r5, [r4, #872]	; 0x368
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900051e0:	f8c4 5370 	str.w	r5, [r4, #880]	; 0x370
              text(0)
900051e4:	f8c4 5378 	str.w	r5, [r4, #888]	; 0x378
900051e8:	f8a4 93a0 	strh.w	r9, [r4, #928]	; 0x3a0
900051ec:	e9c4 55cb 	strd	r5, r5, [r4, #812]	; 0x32c
        : x(0), y(0), width(0), height(0)
900051f0:	e9c4 55ce 	strd	r5, r5, [r4, #824]	; 0x338
900051f4:	e9c4 55d0 	strd	r5, r5, [r4, #832]	; 0x340
          nextSibling(0),
900051f8:	e9c4 55d2 	strd	r5, r5, [r4, #840]	; 0x348
          cachedAbsX(0),
900051fc:	e9c4 55d4 	strd	r5, r5, [r4, #848]	; 0x350
90005200:	e9c4 55e0 	strd	r5, r5, [r4, #896]	; 0x380
90005204:	e9c4 55e2 	strd	r5, r5, [r4, #904]	; 0x388
          nextSibling(0),
90005208:	e9c4 55e4 	strd	r5, r5, [r4, #912]	; 0x390
          cachedAbsX(0),
9000520c:	e9c4 55e6 	strd	r5, r5, [r4, #920]	; 0x398
90005210:	f8a4 a3a8 	strh.w	sl, [r4, #936]	; 0x3a8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005214:	f8c4 33bc 	str.w	r3, [r4, #956]	; 0x3bc
90005218:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
        : pobject(pObject), pmemfun(pmemfun_1)
9000521c:	4b78      	ldr	r3, [pc, #480]	; (90005400 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000521e:	f8c4 83b2 	str.w	r8, [r4, #946]	; 0x3b2
90005222:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
90005226:	4b77      	ldr	r3, [pc, #476]	; (90005404 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
90005228:	f8c4 83fe 	str.w	r8, [r4, #1022]	; 0x3fe
9000522c:	f8c4 3480 	str.w	r3, [r4, #1152]	; 0x480
        color = newColor;
90005230:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        rect.x = x;
90005234:	f8df 81f8 	ldr.w	r8, [pc, #504]	; 90005430 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
90005238:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
9000523c:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005240:	f8c4 03f0 	str.w	r0, [r4, #1008]	; 0x3f0
90005244:	4630      	mov	r0, r6
90005246:	f8c4 23c8 	str.w	r2, [r4, #968]	; 0x3c8
9000524a:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
          touchable(false),
9000524e:	f8a4 93ec 	strh.w	r9, [r4, #1004]	; 0x3ec
90005252:	f8a4 a3f4 	strh.w	sl, [r4, #1012]	; 0x3f4
        : color(col)
90005256:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
9000525a:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000525e:	f8c4 53b8 	str.w	r5, [r4, #952]	; 0x3b8
        : color(col)
90005262:	f8c4 53f8 	str.w	r5, [r4, #1016]	; 0x3f8
90005266:	f8a4 53fc 	strh.w	r5, [r4, #1020]	; 0x3fc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000526a:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
              text(0)
9000526e:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
90005272:	f8c4 447c 	str.w	r4, [r4, #1148]	; 0x47c
90005276:	f8c4 5484 	str.w	r5, [r4, #1156]	; 0x484
        rect.x = x;
9000527a:	6465      	str	r5, [r4, #68]	; 0x44
9000527c:	e9c4 55f0 	strd	r5, r5, [r4, #960]	; 0x3c0
        : x(0), y(0), width(0), height(0)
90005280:	e9c4 55f3 	strd	r5, r5, [r4, #972]	; 0x3cc
90005284:	e9c4 55f5 	strd	r5, r5, [r4, #980]	; 0x3d4
          nextSibling(0),
90005288:	e9c4 55f7 	strd	r5, r5, [r4, #988]	; 0x3dc
          cachedAbsX(0),
9000528c:	e9c4 55f9 	strd	r5, r5, [r4, #996]	; 0x3e4
90005290:	66a3      	str	r3, [r4, #104]	; 0x68
90005292:	f00d fb51 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005296:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005298:	a912      	add	r1, sp, #72	; 0x48
9000529a:	4658      	mov	r0, fp
9000529c:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
900052a0:	f010 fab3 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900052a4:	4629      	mov	r1, r5
900052a6:	4658      	mov	r0, fp
        rect.x = x;
900052a8:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
900052ac:	f00f fa2d 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900052b0:	4659      	mov	r1, fp
900052b2:	4630      	mov	r0, r6
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
900052b4:	f504 7828 	add.w	r8, r4, #672	; 0x2a0
900052b8:	f00d fb3e 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052bc:	f04f 1c96 	mov.w	ip, #9830550	; 0x960096
900052c0:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
900052c4:	f104 0198 	add.w	r1, r4, #152	; 0x98
900052c8:	4630      	mov	r0, r6
900052ca:	e9c4 c327 	strd	ip, r3, [r4, #156]	; 0x9c
900052ce:	4b4e      	ldr	r3, [pc, #312]	; (90005408 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
900052d0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
900052d4:	f00d fb30 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052d8:	4b4c      	ldr	r3, [pc, #304]	; (9000540c <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
900052da:	aa12      	add	r2, sp, #72	; 0x48
900052dc:	a911      	add	r1, sp, #68	; 0x44
900052de:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
900052e2:	2302      	movs	r3, #2
900052e4:	4638      	mov	r0, r7
900052e6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900052ea:	2303      	movs	r3, #3
900052ec:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
900052f0:	f00f ffff 	bl	900152f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
900052f4:	4b46      	ldr	r3, [pc, #280]	; (90005410 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
class TypedText
900052f6:	210e      	movs	r1, #14
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
900052f8:	f504 724d 	add.w	r2, r4, #820	; 0x334
900052fc:	881b      	ldrh	r3, [r3, #0]
900052fe:	9203      	str	r2, [sp, #12]
90005300:	f504 7272 	add.w	r2, r4, #968	; 0x3c8
90005304:	428b      	cmp	r3, r1
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005306:	4b43      	ldr	r3, [pc, #268]	; (90005414 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
90005308:	ee09 2a90 	vmov	s19, r2
class TypedText
9000530c:	f8a4 10fc 	strh.w	r1, [r4, #252]	; 0xfc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005310:	9308      	str	r3, [sp, #32]
90005312:	d925      	bls.n	90005360 <_ZN25screen_snake_gameViewBaseC1Ev+0x300>
90005314:	681b      	ldr	r3, [r3, #0]
90005316:	2b00      	cmp	r3, #0
90005318:	f000 82bb 	beq.w	90005892 <_ZN25screen_snake_gameViewBaseC1Ev+0x832>
        return fonts[typedTexts[typedTextId].fontIdx];
9000531c:	7f1a      	ldrb	r2, [r3, #28]
9000531e:	4b3e      	ldr	r3, [pc, #248]	; (90005418 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90005320:	681b      	ldr	r3, [r3, #0]
90005322:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90005326:	4b3d      	ldr	r3, [pc, #244]	; (9000541c <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90005328:	6818      	ldr	r0, [r3, #0]
9000532a:	f7ff f98d 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000532e:	f8d9 2000 	ldr.w	r2, [r9]
90005332:	4601      	mov	r1, r0
90005334:	483a      	ldr	r0, [pc, #232]	; (90005420 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
90005336:	6b93      	ldr	r3, [r2, #56]	; 0x38
90005338:	4283      	cmp	r3, r0
9000533a:	f040 82a2 	bne.w	90005882 <_ZN25screen_snake_gameViewBaseC1Ev+0x822>
        return fontHeight;
9000533e:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90005342:	6c93      	ldr	r3, [r2, #72]	; 0x48
90005344:	4648      	mov	r0, r9
90005346:	9109      	str	r1, [sp, #36]	; 0x24
90005348:	4798      	blx	r3
9000534a:	fb15 f500 	smulbb	r5, r5, r0
9000534e:	f8d9 3000 	ldr.w	r3, [r9]
90005352:	4648      	mov	r0, r9
90005354:	b2ad      	uxth	r5, r5
90005356:	9909      	ldr	r1, [sp, #36]	; 0x24
90005358:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000535a:	4798      	blx	r3
9000535c:	4405      	add	r5, r0
9000535e:	b22d      	sxth	r5, r5
90005360:	4639      	mov	r1, r7
        color = col;
90005362:	f04f 33ff 	mov.w	r3, #4294967295
    btn_snake_start.setAction(buttonCallback);
90005366:	f504 678f 	add.w	r7, r4, #1144	; 0x478
9000536a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000536c:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
90005370:	f04f 0a01 	mov.w	sl, #1
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005374:	f8c4 70ec 	str.w	r7, [r4, #236]	; 0xec
90005378:	2500      	movs	r5, #0
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
9000537a:	f06f 1906 	mvn.w	r9, #393222	; 0x60006
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
9000537e:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
        colorPressed = col;
90005382:	e9c4 3340 	strd	r3, r3, [r4, #256]	; 0x100
90005386:	f00d fad7 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000538a:	4826      	ldr	r0, [pc, #152]	; (90005424 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
9000538c:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90005390:	f504 7186 	add.w	r1, r4, #268	; 0x10c
90005394:	e9c4 0344 	strd	r0, r3, [r4, #272]	; 0x110
90005398:	4b23      	ldr	r3, [pc, #140]	; (90005428 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>)
9000539a:	4630      	mov	r0, r6
9000539c:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
900053a0:	f00d faca 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
900053a4:	ab12      	add	r3, sp, #72	; 0x48
900053a6:	ed9d 8a04 	vldr	s16, [sp, #16]
900053aa:	aa10      	add	r2, sp, #64	; 0x40
900053ac:	9300      	str	r3, [sp, #0]
900053ae:	a90f      	add	r1, sp, #60	; 0x3c
900053b0:	4b1e      	ldr	r3, [pc, #120]	; (9000542c <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>)
900053b2:	ee18 0a10 	vmov	r0, s16
900053b6:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
900053ba:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
900053be:	230b      	movs	r3, #11
900053c0:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
900053c4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900053c8:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
900053cc:	ab11      	add	r3, sp, #68	; 0x44
900053ce:	f010 f95f 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900053d2:	ee18 1a10 	vmov	r1, s16
900053d6:	4630      	mov	r0, r6
900053d8:	f8c4 7160 	str.w	r7, [r4, #352]	; 0x160
900053dc:	f8c4 9170 	str.w	r9, [r4, #368]	; 0x170
900053e0:	f884 b16a 	strb.w	fp, [r4, #362]	; 0x16a
900053e4:	f00d faa8 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900053e8:	e024      	b.n	90005434 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d4>
900053ea:	bf00      	nop
900053ec:	9002d9a0 	.word	0x9002d9a0
900053f0:	9002cdf8 	.word	0x9002cdf8
900053f4:	9002d910 	.word	0x9002d910
900053f8:	9002c0c0 	.word	0x9002c0c0
900053fc:	9002cd50 	.word	0x9002cd50
90005400:	9002cde0 	.word	0x9002cde0
90005404:	90004ed9 	.word	0x90004ed9
90005408:	ff1eff00 	.word	0xff1eff00
9000540c:	006f0078 	.word	0x006f0078
90005410:	24039b28 	.word	0x24039b28
90005414:	24039b24 	.word	0x24039b24
90005418:	24039b2c 	.word	0x24039b2c
9000541c:	24039b30 	.word	0x24039b30
90005420:	900035c5 	.word	0x900035c5
90005424:	001e0014 	.word	0x001e0014
90005428:	ffff0000 	.word	0xffff0000
9000542c:	0095018e 	.word	0x0095018e
90005430:	011001e0 	.word	0x011001e0
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005434:	ab12      	add	r3, sp, #72	; 0x48
90005436:	aa10      	add	r2, sp, #64	; 0x40
90005438:	a90f      	add	r1, sp, #60	; 0x3c
9000543a:	9300      	str	r3, [sp, #0]
9000543c:	ee18 0a90 	vmov	r0, s17
90005440:	4bdb      	ldr	r3, [pc, #876]	; (900057b0 <_ZN25screen_snake_gameViewBaseC1Ev+0x750>)
90005442:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
90005446:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
9000544a:	230a      	movs	r3, #10
9000544c:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
90005450:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90005454:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
90005458:	ab11      	add	r3, sp, #68	; 0x44
9000545a:	f010 f919 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000545e:	ee18 1a90 	vmov	r1, s17
90005462:	4630      	mov	r0, r6
90005464:	f8c4 719c 	str.w	r7, [r4, #412]	; 0x19c
90005468:	f8c4 91ac 	str.w	r9, [r4, #428]	; 0x1ac
9000546c:	f884 b1a6 	strb.w	fp, [r4, #422]	; 0x1a6
90005470:	f00d fa62 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90005474:	ab12      	add	r3, sp, #72	; 0x48
90005476:	ed9d 8a05 	vldr	s16, [sp, #20]
9000547a:	aa10      	add	r2, sp, #64	; 0x40
9000547c:	9300      	str	r3, [sp, #0]
9000547e:	a90f      	add	r1, sp, #60	; 0x3c
90005480:	4bcc      	ldr	r3, [pc, #816]	; (900057b4 <_ZN25screen_snake_gameViewBaseC1Ev+0x754>)
90005482:	ee18 0a10 	vmov	r0, s16
90005486:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
9000548a:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
9000548e:	2308      	movs	r3, #8
90005490:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
90005494:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90005498:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
9000549c:	ab11      	add	r3, sp, #68	; 0x44
9000549e:	f010 f8f7 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900054a2:	ee18 1a10 	vmov	r1, s16
900054a6:	4630      	mov	r0, r6
900054a8:	f8c4 71d8 	str.w	r7, [r4, #472]	; 0x1d8
900054ac:	f8c4 91e8 	str.w	r9, [r4, #488]	; 0x1e8
900054b0:	f884 b1e2 	strb.w	fp, [r4, #482]	; 0x1e2
900054b4:	f00d fa40 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
900054b8:	ab12      	add	r3, sp, #72	; 0x48
900054ba:	aa10      	add	r2, sp, #64	; 0x40
900054bc:	a90f      	add	r1, sp, #60	; 0x3c
900054be:	9300      	str	r3, [sp, #0]
900054c0:	ee19 0a10 	vmov	r0, s18
900054c4:	4bbc      	ldr	r3, [pc, #752]	; (900057b8 <_ZN25screen_snake_gameViewBaseC1Ev+0x758>)
900054c6:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
900054ca:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
900054ce:	2309      	movs	r3, #9
900054d0:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
900054d4:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900054d8:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
900054dc:	ab11      	add	r3, sp, #68	; 0x44
900054de:	f010 f8d7 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900054e2:	ee19 1a10 	vmov	r1, s18
900054e6:	4630      	mov	r0, r6
900054e8:	f8c4 7214 	str.w	r7, [r4, #532]	; 0x214
900054ec:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
900054f0:	f884 b21e 	strb.w	fp, [r4, #542]	; 0x21e
900054f4:	f00d fa20 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
900054f8:	ab12      	add	r3, sp, #72	; 0x48
900054fa:	ed9d 8a06 	vldr	s16, [sp, #24]
900054fe:	aa10      	add	r2, sp, #64	; 0x40
90005500:	9300      	str	r3, [sp, #0]
90005502:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
90005506:	a90f      	add	r1, sp, #60	; 0x3c
90005508:	ee18 0a10 	vmov	r0, s16
9000550c:	f8c4 322c 	str.w	r3, [r4, #556]	; 0x22c
90005510:	230c      	movs	r3, #12
90005512:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
90005516:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9000551a:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
9000551e:	ab11      	add	r3, sp, #68	; 0x44
90005520:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
90005524:	f010 f8b4 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005528:	ee18 1a10 	vmov	r1, s16
9000552c:	4630      	mov	r0, r6
9000552e:	f8c4 7250 	str.w	r7, [r4, #592]	; 0x250
90005532:	f8c4 9260 	str.w	r9, [r4, #608]	; 0x260
90005536:	f00d f9ff 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_restart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_FIBER_NEW_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_FIBER_NEW_50_50_E8F6FB_SVG_ID));
9000553a:	a812      	add	r0, sp, #72	; 0x48
9000553c:	f8ad a040 	strh.w	sl, [sp, #64]	; 0x40
90005540:	aa10      	add	r2, sp, #64	; 0x40
90005542:	9000      	str	r0, [sp, #0]
90005544:	ab11      	add	r3, sp, #68	; 0x44
90005546:	489d      	ldr	r0, [pc, #628]	; (900057bc <_ZN25screen_snake_gameViewBaseC1Ev+0x75c>)
90005548:	a90f      	add	r1, sp, #60	; 0x3c
9000554a:	f8dd a01c 	ldr.w	sl, [sp, #28]
9000554e:	f8c4 0268 	str.w	r0, [r4, #616]	; 0x268
90005552:	2007      	movs	r0, #7
90005554:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
90005558:	f8ad 0044 	strh.w	r0, [sp, #68]	; 0x44
9000555c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90005560:	4650      	mov	r0, sl
90005562:	f010 f895 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005566:	4651      	mov	r1, sl
90005568:	4630      	mov	r0, r6
9000556a:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
9000556e:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
    lbl_score_val.setPosition(434, 0, 46, 24);
90005572:	f504 773a 	add.w	r7, r4, #744	; 0x2e8
90005576:	f00d f9df 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
9000557a:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
9000557e:	f8a4 52d4 	strh.w	r5, [r4, #724]	; 0x2d4
        boundingArea = calculateBoundingArea();
90005582:	ad0a      	add	r5, sp, #40	; 0x28
        color = newColor;
90005584:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
90005588:	f44f 73b4 	mov.w	r3, #360	; 0x168
        boundingArea = calculateBoundingArea();
9000558c:	4641      	mov	r1, r8
9000558e:	4628      	mov	r0, r5
90005590:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
90005594:	f00f fba8 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
90005598:	4b89      	ldr	r3, [pc, #548]	; (900057c0 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
9000559a:	220d      	movs	r2, #13
9000559c:	f8df a244 	ldr.w	sl, [pc, #580]	; 900057e4 <_ZN25screen_snake_gameViewBaseC1Ev+0x784>
900055a0:	9312      	str	r3, [sp, #72]	; 0x48
900055a2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
900055a6:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
900055aa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900055ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8W6));
900055b2:	a912      	add	r1, sp, #72	; 0x48
900055b4:	4640      	mov	r0, r8
900055b6:	f00f fe3f 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900055ba:	4641      	mov	r1, r8
900055bc:	4630      	mov	r0, r6
        alpha = newAlpha;
900055be:	f884 b2d6 	strb.w	fp, [r4, #726]	; 0x2d6
900055c2:	f00d f9b9 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900055c6:	f44f 72d9 	mov.w	r2, #434	; 0x1b2
        setX(x);
900055ca:	f8d4 32e8 	ldr.w	r3, [r4, #744]	; 0x2e8
        rect.x = x;
900055ce:	f8c4 22ec 	str.w	r2, [r4, #748]	; 0x2ec
        setWidth(width);
900055d2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900055d4:	4552      	cmp	r2, sl
900055d6:	f040 8139 	bne.w	9000584c <_ZN25screen_snake_gameViewBaseC1Ev+0x7ec>
        rect.width = width;
900055da:	222e      	movs	r2, #46	; 0x2e
        boundingArea = calculateBoundingArea();
900055dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900055e0:	4639      	mov	r1, r7
900055e2:	4628      	mov	r0, r5
900055e4:	f8a4 22f0 	strh.w	r2, [r4, #752]	; 0x2f0
900055e8:	4798      	blx	r3
900055ea:	f504 7349 	add.w	r3, r4, #804	; 0x324
900055ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900055f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
900055f6:	f8d4 32e8 	ldr.w	r3, [r4, #744]	; 0x2e8
900055fa:	f8df 91ec 	ldr.w	r9, [pc, #492]	; 900057e8 <_ZN25screen_snake_gameViewBaseC1Ev+0x788>
900055fe:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90005600:	454a      	cmp	r2, r9
90005602:	f040 8115 	bne.w	90005830 <_ZN25screen_snake_gameViewBaseC1Ev+0x7d0>
        rect.height = height;
90005606:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90005608:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000560c:	4639      	mov	r1, r7
9000560e:	4628      	mov	r0, r5
90005610:	f8a4 22f2 	strh.w	r2, [r4, #754]	; 0x2f2
90005614:	4798      	blx	r3
90005616:	f107 033c 	add.w	r3, r7, #60	; 0x3c
9000561a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000561e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90005622:	f8d4 32e8 	ldr.w	r3, [r4, #744]	; 0x2e8
        color = newColor;
90005626:	f04f 31ff 	mov.w	r1, #4294967295
9000562a:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 900057ec <_ZN25screen_snake_gameViewBaseC1Ev+0x78c>
        boundingArea = calculateBoundingArea();
9000562e:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90005632:	2300      	movs	r3, #0
        color = newColor;
90005634:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        linespace = space;
90005638:	4542      	cmp	r2, r8
9000563a:	f8a4 331c 	strh.w	r3, [r4, #796]	; 0x31c
        boundingArea = calculateBoundingArea();
9000563e:	f040 80fb 	bne.w	90005838 <_ZN25screen_snake_gameViewBaseC1Ev+0x7d8>
90005642:	f8c4 332c 	str.w	r3, [r4, #812]	; 0x32c
90005646:	e9c4 31c9 	strd	r3, r1, [r4, #804]	; 0x324
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000564a:	9b08      	ldr	r3, [sp, #32]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8AZ9).getText());
9000564c:	f504 6b82 	add.w	fp, r4, #1040	; 0x410
90005650:	681b      	ldr	r3, [r3, #0]
90005652:	2b00      	cmp	r3, #0
90005654:	f000 8129 	beq.w	900058aa <_ZN25screen_snake_gameViewBaseC1Ev+0x84a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005658:	4b5a      	ldr	r3, [pc, #360]	; (900057c4 <_ZN25screen_snake_gameViewBaseC1Ev+0x764>)
9000565a:	881b      	ldrh	r3, [r3, #0]
9000565c:	2b0b      	cmp	r3, #11
9000565e:	f240 811e 	bls.w	9000589e <_ZN25screen_snake_gameViewBaseC1Ev+0x83e>
        return texts->getText(typedTextId);
90005662:	4b59      	ldr	r3, [pc, #356]	; (900057c8 <_ZN25screen_snake_gameViewBaseC1Ev+0x768>)
90005664:	210b      	movs	r1, #11
90005666:	6818      	ldr	r0, [r3, #0]
90005668:	f7fe ffee 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
9000566c:	4a57      	ldr	r2, [pc, #348]	; (900057cc <_ZN25screen_snake_gameViewBaseC1Ev+0x76c>)
9000566e:	4603      	mov	r3, r0
90005670:	2120      	movs	r1, #32
90005672:	4658      	mov	r0, fp
90005674:	f015 fea8 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90005678:	4b51      	ldr	r3, [pc, #324]	; (900057c0 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G1O3));
9000567a:	4638      	mov	r0, r7
9000567c:	a912      	add	r1, sp, #72	; 0x48
9000567e:	9312      	str	r3, [sp, #72]	; 0x48
90005680:	230c      	movs	r3, #12
        wc1 = value;
90005682:	f8c4 b330 	str.w	fp, [r4, #816]	; 0x330
        linespace = space;
90005686:	f04f 0b00 	mov.w	fp, #0
9000568a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000568e:	f00f fdd3 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90005692:	235a      	movs	r3, #90	; 0x5a
90005694:	4639      	mov	r1, r7
90005696:	4630      	mov	r0, r6
90005698:	f884 331e 	strb.w	r3, [r4, #798]	; 0x31e
9000569c:	f00d f94c 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900056a0:	4b4b      	ldr	r3, [pc, #300]	; (900057d0 <_ZN25screen_snake_gameViewBaseC1Ev+0x770>)
        boundingArea = calculateBoundingArea();
900056a2:	9f03      	ldr	r7, [sp, #12]
900056a4:	4628      	mov	r0, r5
900056a6:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
        color = newColor;
900056aa:	4b4a      	ldr	r3, [pc, #296]	; (900057d4 <_ZN25screen_snake_gameViewBaseC1Ev+0x774>)
        boundingArea = calculateBoundingArea();
900056ac:	4639      	mov	r1, r7
        linespace = space;
900056ae:	f8a4 b368 	strh.w	fp, [r4, #872]	; 0x368
        color = newColor;
900056b2:	f8c4 3364 	str.w	r3, [r4, #868]	; 0x364
        boundingArea = calculateBoundingArea();
900056b6:	f00f fb17 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900056ba:	4b41      	ldr	r3, [pc, #260]	; (900057c0 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
900056bc:	220a      	movs	r2, #10
900056be:	9703      	str	r7, [sp, #12]
900056c0:	9312      	str	r3, [sp, #72]	; 0x48
900056c2:	463b      	mov	r3, r7
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
900056c4:	ed9d 8a03 	vldr	s16, [sp, #12]
    lbl_high_score.setPosition(178, 155, 125, 24);
900056c8:	f504 775f 	add.w	r7, r4, #892	; 0x37c
900056cc:	333c      	adds	r3, #60	; 0x3c
900056ce:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
900056d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900056d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
900056da:	a912      	add	r1, sp, #72	; 0x48
900056dc:	ee18 0a10 	vmov	r0, s16
900056e0:	f00f fdaa 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900056e4:	ee18 1a10 	vmov	r1, s16
900056e8:	4630      	mov	r0, r6
        visible = vis;
900056ea:	f884 b359 	strb.w	fp, [r4, #857]	; 0x359
900056ee:	f00d f923 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900056f2:	4b39      	ldr	r3, [pc, #228]	; (900057d8 <_ZN25screen_snake_gameViewBaseC1Ev+0x778>)
        setX(x);
900056f4:	f8d4 237c 	ldr.w	r2, [r4, #892]	; 0x37c
        rect.x = x;
900056f8:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        setWidth(width);
900056fc:	6b93      	ldr	r3, [r2, #56]	; 0x38
900056fe:	4553      	cmp	r3, sl
90005700:	f040 80b2 	bne.w	90005868 <_ZN25screen_snake_gameViewBaseC1Ev+0x808>
        boundingArea = calculateBoundingArea();
90005704:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
        rect.width = width;
90005708:	227d      	movs	r2, #125	; 0x7d
9000570a:	4639      	mov	r1, r7
9000570c:	4628      	mov	r0, r5
9000570e:	f8a4 2384 	strh.w	r2, [r4, #900]	; 0x384
90005712:	4798      	blx	r3
90005714:	f504 736e 	add.w	r3, r4, #952	; 0x3b8
90005718:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000571c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90005720:	f8d4 237c 	ldr.w	r2, [r4, #892]	; 0x37c
90005724:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
90005726:	454b      	cmp	r3, r9
90005728:	f040 80a7 	bne.w	9000587a <_ZN25screen_snake_gameViewBaseC1Ev+0x81a>
        boundingArea = calculateBoundingArea();
9000572c:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
        rect.height = height;
90005730:	2218      	movs	r2, #24
90005732:	4639      	mov	r1, r7
90005734:	4628      	mov	r0, r5
90005736:	f8a4 2386 	strh.w	r2, [r4, #902]	; 0x386
9000573a:	4798      	blx	r3
9000573c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005740:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005744:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90005748:	f8d4 337c 	ldr.w	r3, [r4, #892]	; 0x37c
        color = newColor;
9000574c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
90005750:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90005754:	2300      	movs	r3, #0
        color = newColor;
90005756:	f8c4 13ac 	str.w	r1, [r4, #940]	; 0x3ac
        linespace = space;
9000575a:	4542      	cmp	r2, r8
9000575c:	f8a4 33b0 	strh.w	r3, [r4, #944]	; 0x3b0
        boundingArea = calculateBoundingArea();
90005760:	d178      	bne.n	90005854 <_ZN25screen_snake_gameViewBaseC1Ev+0x7f4>
90005762:	f8c4 33c0 	str.w	r3, [r4, #960]	; 0x3c0
90005766:	e9c4 31ee 	strd	r3, r1, [r4, #952]	; 0x3b8
9000576a:	4b15      	ldr	r3, [pc, #84]	; (900057c0 <_ZN25screen_snake_gameViewBaseC1Ev+0x760>)
    lbl_high_scoreBuffer[0] = 0;
9000576c:	f04f 0800 	mov.w	r8, #0
    lbl_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IFF2));
90005770:	a912      	add	r1, sp, #72	; 0x48
90005772:	4638      	mov	r0, r7
90005774:	9312      	str	r3, [sp, #72]	; 0x48
    lbl_high_score.setWildcard(lbl_high_scoreBuffer);
90005776:	f504 638a 	add.w	r3, r4, #1104	; 0x450
    lbl_high_scoreBuffer[0] = 0;
9000577a:	f8a4 8450 	strh.w	r8, [r4, #1104]	; 0x450
9000577e:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
90005782:	2301      	movs	r3, #1
90005784:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
    lbl_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IFF2));
90005788:	f00f fd56 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000578c:	4639      	mov	r1, r7
9000578e:	4630      	mov	r0, r6
        visible = vis;
90005790:	f884 83a1 	strb.w	r8, [r4, #929]	; 0x3a1
90005794:	ee19 7a90 	vmov	r7, s19
90005798:	f00d f8ce 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000579c:	4b0f      	ldr	r3, [pc, #60]	; (900057dc <_ZN25screen_snake_gameViewBaseC1Ev+0x77c>)
9000579e:	ee19 1a90 	vmov	r1, s19
900057a2:	4628      	mov	r0, r5
900057a4:	f8c4 33cc 	str.w	r3, [r4, #972]	; 0x3cc
        color = newColor;
900057a8:	4b0d      	ldr	r3, [pc, #52]	; (900057e0 <_ZN25screen_snake_gameViewBaseC1Ev+0x780>)
        linespace = space;
900057aa:	f8a4 83fc 	strh.w	r8, [r4, #1020]	; 0x3fc
900057ae:	e01f      	b.n	900057f0 <_ZN25screen_snake_gameViewBaseC1Ev+0x790>
900057b0:	00b901b2 	.word	0x00b901b2
900057b4:	00dd018e 	.word	0x00dd018e
900057b8:	00b9016a 	.word	0x00b9016a
900057bc:	000c0036 	.word	0x000c0036
900057c0:	9002c0c0 	.word	0x9002c0c0
900057c4:	24039b28 	.word	0x24039b28
900057c8:	24039b30 	.word	0x24039b30
900057cc:	9002cd44 	.word	0x9002cd44
900057d0:	00700076 	.word	0x00700076
900057d4:	ffff0000 	.word	0xffff0000
900057d8:	009b00b2 	.word	0x009b00b2
900057dc:	00b300a0 	.word	0x00b300a0
900057e0:	ff51ff00 	.word	0xff51ff00
900057e4:	90004d25 	.word	0x90004d25
900057e8:	90004d4d 	.word	0x90004d4d
900057ec:	90004d99 	.word	0x90004d99
        color = newColor;
900057f0:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        boundingArea = calculateBoundingArea();
900057f4:	f00f fa78 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900057f8:	4b2f      	ldr	r3, [pc, #188]	; (900058b8 <_ZN25screen_snake_gameViewBaseC1Ev+0x858>)
900057fa:	f8ad 804c 	strh.w	r8, [sp, #76]	; 0x4c
900057fe:	9312      	str	r3, [sp, #72]	; 0x48
90005800:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005804:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005808:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_new_high_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C5TM));
9000580c:	a912      	add	r1, sp, #72	; 0x48
9000580e:	ee19 0a90 	vmov	r0, s19
90005812:	f00f fd11 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005816:	4630      	mov	r0, r6
90005818:	ee19 1a90 	vmov	r1, s19
        visible = vis;
9000581c:	f884 83ed 	strb.w	r8, [r4, #1005]	; 0x3ed
90005820:	f00d f88a 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005824:	4620      	mov	r0, r4
90005826:	b015      	add	sp, #84	; 0x54
90005828:	ecbd 8b04 	vpop	{d8-d9}
9000582c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90005830:	2118      	movs	r1, #24
90005832:	4638      	mov	r0, r7
90005834:	4790      	blx	r2
90005836:	e6f4      	b.n	90005622 <_ZN25screen_snake_gameViewBaseC1Ev+0x5c2>
90005838:	4639      	mov	r1, r7
9000583a:	4628      	mov	r0, r5
9000583c:	4790      	blx	r2
9000583e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
90005842:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005846:	e883 0007 	stmia.w	r3, {r0, r1, r2}
9000584a:	e6fe      	b.n	9000564a <_ZN25screen_snake_gameViewBaseC1Ev+0x5ea>
        setWidth(width);
9000584c:	212e      	movs	r1, #46	; 0x2e
9000584e:	4638      	mov	r0, r7
90005850:	4790      	blx	r2
90005852:	e6d0      	b.n	900055f6 <_ZN25screen_snake_gameViewBaseC1Ev+0x596>
90005854:	4639      	mov	r1, r7
90005856:	4628      	mov	r0, r5
90005858:	4790      	blx	r2
9000585a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
9000585e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90005862:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005866:	e780      	b.n	9000576a <_ZN25screen_snake_gameViewBaseC1Ev+0x70a>
90005868:	217d      	movs	r1, #125	; 0x7d
9000586a:	4638      	mov	r0, r7
9000586c:	4798      	blx	r3
        setHeight(height);
9000586e:	f8d4 237c 	ldr.w	r2, [r4, #892]	; 0x37c
90005872:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
90005874:	454b      	cmp	r3, r9
90005876:	f43f af59 	beq.w	9000572c <_ZN25screen_snake_gameViewBaseC1Ev+0x6cc>
9000587a:	2118      	movs	r1, #24
9000587c:	4638      	mov	r0, r7
9000587e:	4798      	blx	r3
90005880:	e762      	b.n	90005748 <_ZN25screen_snake_gameViewBaseC1Ev+0x6e8>
90005882:	9109      	str	r1, [sp, #36]	; 0x24
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005884:	4648      	mov	r0, r9
90005886:	4798      	blx	r3
90005888:	f8d9 2000 	ldr.w	r2, [r9]
9000588c:	4605      	mov	r5, r0
9000588e:	9909      	ldr	r1, [sp, #36]	; 0x24
90005890:	e557      	b.n	90005342 <_ZN25screen_snake_gameViewBaseC1Ev+0x2e2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005892:	4b0a      	ldr	r3, [pc, #40]	; (900058bc <_ZN25screen_snake_gameViewBaseC1Ev+0x85c>)
90005894:	216c      	movs	r1, #108	; 0x6c
90005896:	4a0a      	ldr	r2, [pc, #40]	; (900058c0 <_ZN25screen_snake_gameViewBaseC1Ev+0x860>)
90005898:	480a      	ldr	r0, [pc, #40]	; (900058c4 <_ZN25screen_snake_gameViewBaseC1Ev+0x864>)
9000589a:	f023 fe11 	bl	900294c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000589e:	4b0a      	ldr	r3, [pc, #40]	; (900058c8 <_ZN25screen_snake_gameViewBaseC1Ev+0x868>)
900058a0:	2161      	movs	r1, #97	; 0x61
900058a2:	4a0a      	ldr	r2, [pc, #40]	; (900058cc <_ZN25screen_snake_gameViewBaseC1Ev+0x86c>)
900058a4:	4807      	ldr	r0, [pc, #28]	; (900058c4 <_ZN25screen_snake_gameViewBaseC1Ev+0x864>)
900058a6:	f023 fe0b 	bl	900294c0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900058aa:	4b04      	ldr	r3, [pc, #16]	; (900058bc <_ZN25screen_snake_gameViewBaseC1Ev+0x85c>)
900058ac:	2160      	movs	r1, #96	; 0x60
900058ae:	4a07      	ldr	r2, [pc, #28]	; (900058cc <_ZN25screen_snake_gameViewBaseC1Ev+0x86c>)
900058b0:	4804      	ldr	r0, [pc, #16]	; (900058c4 <_ZN25screen_snake_gameViewBaseC1Ev+0x864>)
900058b2:	f023 fe05 	bl	900294c0 <__assert_func>
900058b6:	bf00      	nop
900058b8:	9002c0c0 	.word	0x9002c0c0
900058bc:	9002cc04 	.word	0x9002cc04
900058c0:	9002cc48 	.word	0x9002cc48
900058c4:	9002cc84 	.word	0x9002cc84
900058c8:	9002cccc 	.word	0x9002cccc
900058cc:	9002cd0c 	.word	0x9002cd0c

900058d0 <_ZN29screen_space_invadersViewBase11fire_bulletEv>:
     * Virtual Action Handlers
     */
    virtual void fire_bullet()
    {
        // Override and implement this function in screen_space_invaders
    }
900058d0:	4770      	bx	lr
900058d2:	bf00      	nop

900058d4 <_ZN29screen_space_invadersViewBase11setupScreenEv>:
}

void screen_space_invadersViewBase::setupScreen()
{

}
900058d4:	4770      	bx	lr
900058d6:	bf00      	nop

900058d8 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900058d8:	4770      	bx	lr
900058da:	bf00      	nop

900058dc <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900058dc:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900058de:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900058e0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900058e2:	6844      	ldr	r4, [r0, #4]
900058e4:	f012 0f01 	tst.w	r2, #1
900058e8:	eb04 0062 	add.w	r0, r4, r2, asr #1
900058ec:	d103      	bne.n	900058f6 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900058ee:	689b      	ldr	r3, [r3, #8]
    }
900058f0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900058f4:	4718      	bx	r3
900058f6:	ea4f 0c62 	mov.w	ip, r2, asr #1
900058fa:	689b      	ldr	r3, [r3, #8]
900058fc:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005900:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005904:	58d3      	ldr	r3, [r2, r3]
90005906:	4718      	bx	r3

90005908 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005908:	6843      	ldr	r3, [r0, #4]
9000590a:	b13b      	cbz	r3, 9000591c <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000590c:	6883      	ldr	r3, [r0, #8]
9000590e:	b10b      	cbz	r3, 90005914 <_ZNK8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005910:	2001      	movs	r0, #1
    }
90005912:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005914:	68c0      	ldr	r0, [r0, #12]
90005916:	f000 0001 	and.w	r0, r0, #1
9000591a:	4770      	bx	lr
9000591c:	4618      	mov	r0, r3
9000591e:	4770      	bx	lr

90005920 <_ZN8touchgfx8CallbackI29screen_space_invadersViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005920:	b510      	push	{r4, lr}
90005922:	4604      	mov	r4, r0
90005924:	2110      	movs	r1, #16
90005926:	f023 fd9d 	bl	90029464 <_ZdlPvj>
9000592a:	4620      	mov	r0, r4
9000592c:	bd10      	pop	{r4, pc}
9000592e:	bf00      	nop

90005930 <_ZN29screen_space_invadersViewBaseD1Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005930:	4b03      	ldr	r3, [pc, #12]	; (90005940 <_ZN29screen_space_invadersViewBaseD1Ev+0x10>)
90005932:	b510      	push	{r4, lr}
90005934:	4604      	mov	r4, r0
90005936:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005938:	f010 ff54 	bl	900167e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
9000593c:	4620      	mov	r0, r4
9000593e:	bd10      	pop	{r4, pc}
90005940:	9002cf58 	.word	0x9002cf58

90005944 <_ZN29screen_space_invadersViewBaseD0Ev>:
screen_space_invadersViewBase::~screen_space_invadersViewBase()
90005944:	4b07      	ldr	r3, [pc, #28]	; (90005964 <_ZN29screen_space_invadersViewBaseD0Ev+0x20>)
90005946:	b500      	push	{lr}
90005948:	b083      	sub	sp, #12
9000594a:	6003      	str	r3, [r0, #0]
9000594c:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000594e:	f010 ff49 	bl	900167e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005952:	9801      	ldr	r0, [sp, #4]
90005954:	f641 716c 	movw	r1, #8044	; 0x1f6c
90005958:	f023 fd84 	bl	90029464 <_ZdlPvj>
9000595c:	9801      	ldr	r0, [sp, #4]
9000595e:	b003      	add	sp, #12
90005960:	f85d fb04 	ldr.w	pc, [sp], #4
90005964:	9002cf58 	.word	0x9002cf58

90005968 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_space_invadersViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_fire)
90005968:	f500 7388 	add.w	r3, r0, #272	; 0x110
9000596c:	4299      	cmp	r1, r3
{
9000596e:	b510      	push	{r4, lr}
90005970:	4604      	mov	r4, r0
90005972:	b082      	sub	sp, #8
    if (&src == &btn_fire)
90005974:	d005      	beq.n	90005982 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1a>
        //intr_fire_bullet
        //When btn_fire clicked call virtual function
        //Call fire_bullet
        fire_bullet();
    }
    if (&src == &btn_back)
90005976:	f504 740a 	add.w	r4, r4, #552	; 0x228
9000597a:	42a1      	cmp	r1, r4
9000597c:	d00a      	beq.n	90005994 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
9000597e:	b002      	add	sp, #8
90005980:	bd10      	pop	{r4, pc}
        fire_bullet();
90005982:	6803      	ldr	r3, [r0, #0]
90005984:	4a07      	ldr	r2, [pc, #28]	; (900059a4 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3c>)
90005986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005988:	4293      	cmp	r3, r2
9000598a:	d0f4      	beq.n	90005976 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
9000598c:	9101      	str	r1, [sp, #4]
9000598e:	4798      	blx	r3
90005990:	9901      	ldr	r1, [sp, #4]
90005992:	e7f0      	b.n	90005976 <_ZN29screen_space_invadersViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005994:	f012 fc28 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
}
90005998:	b002      	add	sp, #8
9000599a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoscreen_main_menuScreenNoTransition();
9000599e:	f7fe bc2b 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
900059a2:	bf00      	nop
900059a4:	900058d1 	.word	0x900058d1

900059a8 <_ZN29screen_space_invadersViewBaseC1Ev>:
screen_space_invadersViewBase::screen_space_invadersViewBase() :
900059a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900059ac:	ed2d 8b04 	vpush	{d8-d9}
900059b0:	b08f      	sub	sp, #60	; 0x3c
900059b2:	4604      	mov	r4, r0
900059b4:	f014 f850 	bl	90019a58 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
900059b8:	4b3b      	ldr	r3, [pc, #236]	; (90005aa8 <_ZN29screen_space_invadersViewBaseC1Ev+0x100>)
900059ba:	2600      	movs	r6, #0
900059bc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
900059c0:	6023      	str	r3, [r4, #0]
          touchable(false),
900059c2:	f44f 7380 	mov.w	r3, #256	; 0x100
900059c6:	f64f 75ff 	movw	r5, #65535	; 0xffff
900059ca:	f104 0798 	add.w	r7, r4, #152	; 0x98
900059ce:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
900059d2:	a90c      	add	r1, sp, #48	; 0x30
        : Widget(), alpha(255), color(0)
900059d4:	4b35      	ldr	r3, [pc, #212]	; (90005aac <_ZN29screen_space_invadersViewBaseC1Ev+0x104>)
900059d6:	4640      	mov	r0, r8
900059d8:	63e6      	str	r6, [r4, #60]	; 0x3c
900059da:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
900059de:	6423      	str	r3, [r4, #64]	; 0x40
900059e0:	23ff      	movs	r3, #255	; 0xff
900059e2:	6466      	str	r6, [r4, #68]	; 0x44
900059e4:	ee08 7a10 	vmov	s16, r7
900059e8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
900059ec:	f504 79a6 	add.w	r9, r4, #332	; 0x14c
          cachedAbsX(0),
900059f0:	6626      	str	r6, [r4, #96]	; 0x60
900059f2:	f504 7abc 	add.w	sl, r4, #376	; 0x178
        : color(col)
900059f6:	66a6      	str	r6, [r4, #104]	; 0x68
900059f8:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
        : x(0), y(0), width(0), height(0)
900059fc:	e9c4 6612 	strd	r6, r6, [r4, #72]	; 0x48
          parent(0),
90005a00:	e9c4 6614 	strd	r6, r6, [r4, #80]	; 0x50
          nextDrawChainElement(0),
90005a04:	e9c4 6616 	strd	r6, r6, [r4, #88]	; 0x58
90005a08:	f00e fec4 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a0c:	4638      	mov	r0, r7
90005a0e:	f00f fed5 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005a12:	f504 7388 	add.w	r3, r4, #272	; 0x110
90005a16:	4658      	mov	r0, fp
90005a18:	461f      	mov	r7, r3
90005a1a:	ee08 3a90 	vmov	s17, r3
90005a1e:	f00f fecd 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005a22:	4638      	mov	r0, r7
90005a24:	f504 77d2 	add.w	r7, r4, #420	; 0x1a4
90005a28:	f00f fec8 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005a2c:	a90c      	add	r1, sp, #48	; 0x30
90005a2e:	4648      	mov	r0, r9
90005a30:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
90005a34:	f00e feae 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a38:	a90c      	add	r1, sp, #48	; 0x30
90005a3a:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
90005a3e:	4650      	mov	r0, sl
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005a40:	4d1b      	ldr	r5, [pc, #108]	; (90005ab0 <_ZN29screen_space_invadersViewBaseC1Ev+0x108>)
90005a42:	f00e fea7 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a46:	4638      	mov	r0, r7
90005a48:	f00e fbce 	bl	900141e8 <_ZN8touchgfx4LineC1Ev>
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90005a4c:	4a19      	ldr	r2, [pc, #100]	; (90005ab4 <_ZN29screen_space_invadersViewBaseC1Ev+0x10c>)
90005a4e:	682b      	ldr	r3, [r5, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90005a50:	f504 7105 	add.w	r1, r4, #532	; 0x214
90005a54:	f8c4 2214 	str.w	r2, [r4, #532]	; 0x214
90005a58:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : widgetWidth(0)
90005a5c:	f8a4 6218 	strh.w	r6, [r4, #536]	; 0x218
90005a60:	9103      	str	r1, [sp, #12]
90005a62:	2a00      	cmp	r2, #0
90005a64:	d030      	beq.n	90005ac8 <_ZN29screen_space_invadersViewBaseC1Ev+0x120>
90005a66:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005a68:	2800      	cmp	r0, #0
90005a6a:	f000 824e 	beq.w	90005f0a <_ZN29screen_space_invadersViewBaseC1Ev+0x562>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90005a6e:	6803      	ldr	r3, [r0, #0]
90005a70:	4e11      	ldr	r6, [pc, #68]	; (90005ab8 <_ZN29screen_space_invadersViewBaseC1Ev+0x110>)
90005a72:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90005a74:	42b2      	cmp	r2, r6
90005a76:	d034      	beq.n	90005ae2 <_ZN29screen_space_invadersViewBaseC1Ev+0x13a>
90005a78:	4790      	blx	r2
        return auxiliaryLCD;
90005a7a:	682b      	ldr	r3, [r5, #0]
90005a7c:	fab0 f580 	clz	r5, r0
90005a80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005a82:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90005a84:	b140      	cbz	r0, 90005a98 <_ZN29screen_space_invadersViewBaseC1Ev+0xf0>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005a86:	6803      	ldr	r3, [r0, #0]
90005a88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005a8a:	42b3      	cmp	r3, r6
90005a8c:	d029      	beq.n	90005ae2 <_ZN29screen_space_invadersViewBaseC1Ev+0x13a>
90005a8e:	4798      	blx	r3
90005a90:	2800      	cmp	r0, #0
90005a92:	bf08      	it	eq
90005a94:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90005a98:	bb1d      	cbnz	r5, 90005ae2 <_ZN29screen_space_invadersViewBaseC1Ev+0x13a>
90005a9a:	4b08      	ldr	r3, [pc, #32]	; (90005abc <_ZN29screen_space_invadersViewBaseC1Ev+0x114>)
90005a9c:	212c      	movs	r1, #44	; 0x2c
90005a9e:	4a08      	ldr	r2, [pc, #32]	; (90005ac0 <_ZN29screen_space_invadersViewBaseC1Ev+0x118>)
90005aa0:	4808      	ldr	r0, [pc, #32]	; (90005ac4 <_ZN29screen_space_invadersViewBaseC1Ev+0x11c>)
90005aa2:	f023 fd0d 	bl	900294c0 <__assert_func>
90005aa6:	bf00      	nop
90005aa8:	9002cf58 	.word	0x9002cf58
90005aac:	9002d9a0 	.word	0x9002d9a0
90005ab0:	24039acc 	.word	0x24039acc
90005ab4:	9002be44 	.word	0x9002be44
90005ab8:	90002331 	.word	0x90002331
90005abc:	9002ce38 	.word	0x9002ce38
90005ac0:	9002ce98 	.word	0x9002ce98
90005ac4:	9002ced4 	.word	0x9002ced4
        return instance->lcdRef;
90005ac8:	6898      	ldr	r0, [r3, #8]
90005aca:	4ede      	ldr	r6, [pc, #888]	; (90005e44 <_ZN29screen_space_invadersViewBaseC1Ev+0x49c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90005acc:	6802      	ldr	r2, [r0, #0]
90005ace:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005ad0:	42b2      	cmp	r2, r6
90005ad2:	d1d1      	bne.n	90005a78 <_ZN29screen_space_invadersViewBaseC1Ev+0xd0>
        return auxiliaryLCD;
90005ad4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90005ad6:	b120      	cbz	r0, 90005ae2 <_ZN29screen_space_invadersViewBaseC1Ev+0x13a>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005ad8:	6803      	ldr	r3, [r0, #0]
90005ada:	2501      	movs	r5, #1
90005adc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005ade:	42b3      	cmp	r3, r6
90005ae0:	d1d5      	bne.n	90005a8e <_ZN29screen_space_invadersViewBaseC1Ev+0xe6>
90005ae2:	4bd9      	ldr	r3, [pc, #868]	; (90005e48 <_ZN29screen_space_invadersViewBaseC1Ev+0x4a0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90005ae4:	2500      	movs	r5, #0
        : typedTextId(id)
90005ae6:	4ed9      	ldr	r6, [pc, #868]	; (90005e4c <_ZN29screen_space_invadersViewBaseC1Ev+0x4a4>)
90005ae8:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
90005aec:	3324      	adds	r3, #36	; 0x24
90005aee:	f8c4 5220 	str.w	r5, [r4, #544]	; 0x220
90005af2:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90005af6:	f504 730a 	add.w	r3, r4, #552	; 0x228
90005afa:	4618      	mov	r0, r3
90005afc:	ee09 3a10 	vmov	s18, r3
90005b00:	f00f fe5c 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
90005b04:	f04f 3cff 	mov.w	ip, #4294967295
          touchable(false),
90005b08:	f44f 7080 	mov.w	r0, #256	; 0x100
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005b0c:	49d0      	ldr	r1, [pc, #832]	; (90005e50 <_ZN29screen_space_invadersViewBaseC1Ev+0x4a8>)
90005b0e:	22ff      	movs	r2, #255	; 0xff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b10:	f04f 33ff 	mov.w	r3, #4294967295
90005b14:	f8a4 c2d8 	strh.w	ip, [r4, #728]	; 0x2d8
90005b18:	f8a4 c290 	strh.w	ip, [r4, #656]	; 0x290
90005b1c:	f8c4 628c 	str.w	r6, [r4, #652]	; 0x28c
        : color(col)
90005b20:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
90005b24:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b28:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
90005b2c:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
        : color(col)
90005b30:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
90005b34:	f8a4 52e0 	strh.w	r5, [r4, #736]	; 0x2e0
90005b38:	f8a4 0288 	strh.w	r0, [r4, #648]	; 0x288
90005b3c:	f8a4 02d0 	strh.w	r0, [r4, #720]	; 0x2d0
90005b40:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
90005b44:	f8c4 12ac 	str.w	r1, [r4, #684]	; 0x2ac
90005b48:	f8c4 229a 	str.w	r2, [r4, #666]	; 0x29a
              text(0)
90005b4c:	e9c4 35a9 	strd	r3, r5, [r4, #676]	; 0x2a4
        : x(0), y(0), width(0), height(0)
90005b50:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
90005b54:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
          nextSibling(0),
90005b58:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
          cachedAbsX(0),
90005b5c:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
90005b60:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
90005b64:	e9c4 55ae 	strd	r5, r5, [r4, #696]	; 0x2b8
          nextSibling(0),
90005b68:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90005b6c:	e9c4 55b2 	strd	r5, r5, [r4, #712]	; 0x2c8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005b70:	f8c4 22e2 	str.w	r2, [r4, #738]	; 0x2e2
        : pobject(pObject), pmemfun(pmemfun_1)
90005b74:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
90005b78:	f8c4 232a 	str.w	r2, [r4, #810]	; 0x32a
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b7c:	f04f 32ff 	mov.w	r2, #4294967295
90005b80:	f8a4 c320 	strh.w	ip, [r4, #800]	; 0x320
          touchable(false),
90005b84:	f8a4 0318 	strh.w	r0, [r4, #792]	; 0x318
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005b88:	f504 704f 	add.w	r0, r4, #828	; 0x33c
90005b8c:	f8c4 12f4 	str.w	r1, [r4, #756]	; 0x2f4
90005b90:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005b94:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
90005b98:	f8c4 631c 	str.w	r6, [r4, #796]	; 0x31c
90005b9c:	1d26      	adds	r6, r4, #4
        : color(col)
90005b9e:	f8c4 5324 	str.w	r5, [r4, #804]	; 0x324
90005ba2:	f8a4 5328 	strh.w	r5, [r4, #808]	; 0x328
              text(0)
90005ba6:	f8c4 5338 	str.w	r5, [r4, #824]	; 0x338
90005baa:	e9c4 25bb 	strd	r2, r5, [r4, #748]	; 0x2ec
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005bae:	e9c4 52cc 	strd	r5, r2, [r4, #816]	; 0x330
90005bb2:	4aa8      	ldr	r2, [pc, #672]	; (90005e54 <_ZN29screen_space_invadersViewBaseC1Ev+0x4ac>)
        : x(0), y(0), width(0), height(0)
90005bb4:	e9c4 55be 	strd	r5, r5, [r4, #760]	; 0x2f8
90005bb8:	e9c4 55c0 	strd	r5, r5, [r4, #768]	; 0x300
          nextSibling(0),
90005bbc:	e9c4 55c2 	strd	r5, r5, [r4, #776]	; 0x308
          cachedAbsX(0),
90005bc0:	e9c4 55c4 	strd	r5, r5, [r4, #784]	; 0x310
90005bc4:	f8c3 2f5c 	str.w	r2, [r3, #3932]	; 0xf5c
90005bc8:	4aa3      	ldr	r2, [pc, #652]	; (90005e58 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b0>)
90005bca:	f8c3 5f68 	str.w	r5, [r3, #3944]	; 0xf68
90005bce:	f8c3 2f64 	str.w	r2, [r3, #3940]	; 0xf64
90005bd2:	f8c3 4f60 	str.w	r4, [r3, #3936]	; 0xf60
90005bd6:	f010 fdfb 	bl	900167d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005bda:	4ba0      	ldr	r3, [pc, #640]	; (90005e5c <_ZN29screen_space_invadersViewBaseC1Ev+0x4b4>)
        color = newColor;
90005bdc:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90005be0:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005be4:	64a3      	str	r3, [r4, #72]	; 0x48
90005be6:	4630      	mov	r0, r6
90005be8:	6465      	str	r5, [r4, #68]	; 0x44
90005bea:	66a2      	str	r2, [r4, #104]	; 0x68
90005bec:	f00c fea4 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005bf0:	2204      	movs	r2, #4
    background_black.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005bf2:	4640      	mov	r0, r8
90005bf4:	a90c      	add	r1, sp, #48	; 0x30
90005bf6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90005bfa:	f00f fe06 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005bfe:	4b97      	ldr	r3, [pc, #604]	; (90005e5c <_ZN29screen_space_invadersViewBaseC1Ev+0x4b4>)
    background_black.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005c00:	4629      	mov	r1, r5
90005c02:	4640      	mov	r0, r8
90005c04:	e9c4 531c 	strd	r5, r3, [r4, #112]	; 0x70
90005c08:	f00e fd7f 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005c0c:	4641      	mov	r1, r8
90005c0e:	4630      	mov	r0, r6
90005c10:	f04f 0801 	mov.w	r8, #1
90005c14:	f00c fe90 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005c18:	ab0c      	add	r3, sp, #48	; 0x30
90005c1a:	aa0a      	add	r2, sp, #40	; 0x28
90005c1c:	a909      	add	r1, sp, #36	; 0x24
90005c1e:	9300      	str	r3, [sp, #0]
90005c20:	ee18 0a10 	vmov	r0, s16
90005c24:	4b8e      	ldr	r3, [pc, #568]	; (90005e60 <_ZN29screen_space_invadersViewBaseC1Ev+0x4b8>)
90005c26:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
90005c2a:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
90005c2e:	2309      	movs	r3, #9
90005c30:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
90005c34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90005c38:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90005c3c:	ab0b      	add	r3, sp, #44	; 0x2c
90005c3e:	f00f fd27 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005c42:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005c46:	ee18 1a10 	vmov	r1, s16
90005c4a:	4630      	mov	r0, r6
90005c4c:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
90005c50:	f04f 035a 	mov.w	r3, #90	; 0x5a
90005c54:	f884 30ca 	strb.w	r3, [r4, #202]	; 0xca
90005c58:	f00c fe6e 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005c5c:	ab0c      	add	r3, sp, #48	; 0x30
90005c5e:	aa0a      	add	r2, sp, #40	; 0x28
90005c60:	4658      	mov	r0, fp
90005c62:	9300      	str	r3, [sp, #0]
90005c64:	a909      	add	r1, sp, #36	; 0x24
90005c66:	4b7f      	ldr	r3, [pc, #508]	; (90005e64 <_ZN29screen_space_invadersViewBaseC1Ev+0x4bc>)
90005c68:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
90005c6c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
90005c70:	230a      	movs	r3, #10
90005c72:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
90005c76:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90005c7a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90005c7e:	ab0b      	add	r3, sp, #44	; 0x2c
90005c80:	f00f fd06 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005c84:	4659      	mov	r1, fp
90005c86:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005c8a:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
90005c8e:	4630      	mov	r0, r6
90005c90:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
90005c94:	f884 b106 	strb.w	fp, [r4, #262]	; 0x106
90005c98:	f00c fe4e 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005c9c:	ab0c      	add	r3, sp, #48	; 0x30
90005c9e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    btn_fire.setAction(buttonCallback);
90005ca2:	f641 785c 	movw	r8, #8028	; 0x1f5c
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005ca6:	9300      	str	r3, [sp, #0]
90005ca8:	aa0a      	add	r2, sp, #40	; 0x28
90005caa:	4b6f      	ldr	r3, [pc, #444]	; (90005e68 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c0>)
90005cac:	a909      	add	r1, sp, #36	; 0x24
90005cae:	ee18 0a90 	vmov	r0, s17
90005cb2:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
90005cb6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
90005cba:	230d      	movs	r3, #13
    btn_fire.setAction(buttonCallback);
90005cbc:	44a0      	add	r8, r4
90005cbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
90005cc2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    btn_fire.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_50_50_E8F6FB_SVG_ID));
90005cc6:	ab0b      	add	r3, sp, #44	; 0x2c
90005cc8:	f00f fce2 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005ccc:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005cd0:	ee18 1a90 	vmov	r1, s17
90005cd4:	4630      	mov	r0, r6
90005cd6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90005cda:	f884 b142 	strb.w	fp, [r4, #322]	; 0x142
90005cde:	f8c4 8138 	str.w	r8, [r4, #312]	; 0x138
90005ce2:	f00c fe29 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ce6:	2310      	movs	r3, #16
    enemy1.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90005ce8:	4648      	mov	r0, r9
90005cea:	a90c      	add	r1, sp, #48	; 0x30
90005cec:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90005cf0:	f00f fd8b 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005cf4:	4b5d      	ldr	r3, [pc, #372]	; (90005e6c <_ZN29screen_space_invadersViewBaseC1Ev+0x4c4>)
    enemy1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005cf6:	4629      	mov	r1, r5
90005cf8:	4648      	mov	r0, r9
90005cfa:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
90005cfe:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
90005d02:	f00e fd02 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005d06:	4649      	mov	r1, r9
90005d08:	4630      	mov	r0, r6
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005d0a:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
90005d0e:	f00c fe13 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d12:	2311      	movs	r3, #17
    ship.setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_SHIP_ID));
90005d14:	4650      	mov	r0, sl
90005d16:	a90c      	add	r1, sp, #48	; 0x30
90005d18:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90005d1c:	f00f fd75 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005d20:	4b53      	ldr	r3, [pc, #332]	; (90005e70 <_ZN29screen_space_invadersViewBaseC1Ev+0x4c8>)
    ship.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005d22:	4629      	mov	r1, r5
90005d24:	4853      	ldr	r0, [pc, #332]	; (90005e74 <_ZN29screen_space_invadersViewBaseC1Ev+0x4cc>)
90005d26:	4d54      	ldr	r5, [pc, #336]	; (90005e78 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d0>)
90005d28:	e9c4 035f 	strd	r0, r3, [r4, #380]	; 0x17c
90005d2c:	4650      	mov	r0, sl
90005d2e:	f00e fcec 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005d32:	4651      	mov	r1, sl
90005d34:	4630      	mov	r0, r6
    buttonCallback(this, &screen_space_invadersViewBase::buttonCallbackHandler)
90005d36:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90005d3a:	f00c fdfd 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d3e:	f04f 33ff 	mov.w	r3, #4294967295
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005d42:	f04f 3cff 	mov.w	ip, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005d46:	22a0      	movs	r2, #160	; 0xa0
90005d48:	f8c4 3220 	str.w	r3, [r4, #544]	; 0x220
90005d4c:	4638      	mov	r0, r7
        canvasPainter = &painter;
90005d4e:	9b03      	ldr	r3, [sp, #12]
90005d50:	4611      	mov	r1, r2
90005d52:	f8a4 c224 	strh.w	ip, [r4, #548]	; 0x224
90005d56:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
90005d5a:	4b48      	ldr	r3, [pc, #288]	; (90005e7c <_ZN29screen_space_invadersViewBaseC1Ev+0x4d4>)
90005d5c:	e9c4 536a 	strd	r5, r3, [r4, #424]	; 0x1a8
90005d60:	f00e fb58 	bl	90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005d64:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90005d68:	21a0      	movs	r1, #160	; 0xa0
90005d6a:	4638      	mov	r0, r7
90005d6c:	f00e fb5d 	bl	9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005d70:	f8d4 31e0 	ldr.w	r3, [r4, #480]	; 0x1e0
90005d74:	f504 753d 	add.w	r5, r4, #756	; 0x2f4
90005d78:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005d7c:	d006      	beq.n	90005d8c <_ZN29screen_space_invadersViewBaseC1Ev+0x3e4>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005d7e:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
90005d82:	4638      	mov	r0, r7
        lineWidthQ5 = widthQ5;
90005d84:	f8c4 31e0 	str.w	r3, [r4, #480]	; 0x1e0
        updateCachedShape();
90005d88:	f00e fa4e 	bl	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
    bullet.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005d8c:	4638      	mov	r0, r7
90005d8e:	2101      	movs	r1, #1
90005d90:	f00e fb56 	bl	90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005d94:	4639      	mov	r1, r7
90005d96:	4630      	mov	r0, r6
90005d98:	2700      	movs	r7, #0
90005d9a:	f00c fdcd 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90005d9e:	a80c      	add	r0, sp, #48	; 0x30
90005da0:	aa0a      	add	r2, sp, #40	; 0x28
90005da2:	ab0b      	add	r3, sp, #44	; 0x2c
90005da4:	9000      	str	r0, [sp, #0]
90005da6:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
90005daa:	a909      	add	r1, sp, #36	; 0x24
90005dac:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
90005db0:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
90005db4:	200c      	movs	r0, #12
90005db6:	f8df b0d4 	ldr.w	fp, [pc, #212]	; 90005e8c <_ZN29screen_space_invadersViewBaseC1Ev+0x4e4>
90005dba:	f8ad 002c 	strh.w	r0, [sp, #44]	; 0x2c
90005dbe:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
90005dc2:	2001      	movs	r0, #1
90005dc4:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
90005dc8:	ee19 0a10 	vmov	r0, s18
90005dcc:	f00f fc60 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005dd0:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
90005dd4:	ee19 1a10 	vmov	r1, s18
90005dd8:	4630      	mov	r0, r6
90005dda:	f8c4 8250 	str.w	r8, [r4, #592]	; 0x250
        boundingArea = calculateBoundingArea();
90005dde:	f10d 0810 	add.w	r8, sp, #16
90005de2:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        visible = vis;
90005de6:	f884 724d 	strb.w	r7, [r4, #589]	; 0x24d
90005dea:	f00c fda5 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90005dee:	4b24      	ldr	r3, [pc, #144]	; (90005e80 <_ZN29screen_space_invadersViewBaseC1Ev+0x4d8>)
90005df0:	4651      	mov	r1, sl
90005df2:	4640      	mov	r0, r8
90005df4:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        color = newColor;
90005df8:	4b22      	ldr	r3, [pc, #136]	; (90005e84 <_ZN29screen_space_invadersViewBaseC1Ev+0x4dc>)
        linespace = space;
90005dfa:	f8a4 7298 	strh.w	r7, [r4, #664]	; 0x298
        color = newColor;
90005dfe:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        boundingArea = calculateBoundingArea();
90005e02:	f00e ff71 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e06:	4b11      	ldr	r3, [pc, #68]	; (90005e4c <_ZN29screen_space_invadersViewBaseC1Ev+0x4a4>)
90005e08:	2204      	movs	r2, #4
90005e0a:	930c      	str	r3, [sp, #48]	; 0x30
90005e0c:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90005e10:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90005e14:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005e18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BG0R));
90005e1c:	a90c      	add	r1, sp, #48	; 0x30
90005e1e:	4650      	mov	r0, sl
90005e20:	f00f fa0a 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005e24:	4651      	mov	r1, sl
90005e26:	4630      	mov	r0, r6
        visible = vis;
90005e28:	f884 7289 	strb.w	r7, [r4, #649]	; 0x289
90005e2c:	f00c fd84 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90005e30:	4b15      	ldr	r3, [pc, #84]	; (90005e88 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e0>)
        boundingArea = calculateBoundingArea();
90005e32:	4649      	mov	r1, r9
90005e34:	4640      	mov	r0, r8
        color = newColor;
90005e36:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
        rect.x = x;
90005e3a:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        linespace = space;
90005e3e:	f8a4 72e0 	strh.w	r7, [r4, #736]	; 0x2e0
90005e42:	e025      	b.n	90005e90 <_ZN29screen_space_invadersViewBaseC1Ev+0x4e8>
90005e44:	90002331 	.word	0x90002331
90005e48:	9002d5f0 	.word	0x9002d5f0
90005e4c:	9002c0c0 	.word	0x9002c0c0
90005e50:	9002d910 	.word	0x9002d910
90005e54:	9002cf40 	.word	0x9002cf40
90005e58:	90005969 	.word	0x90005969
90005e5c:	011001e0 	.word	0x011001e0
90005e60:	00c60154 	.word	0x00c60154
90005e64:	00c601a8 	.word	0x00c601a8
90005e68:	009c017e 	.word	0x009c017e
90005e6c:	00340032 	.word	0x00340032
90005e70:	003c0054 	.word	0x003c0054
90005e74:	00cc0008 	.word	0x00cc0008
90005e78:	00a8002d 	.word	0x00a8002d
90005e7c:	0024000a 	.word	0x0024000a
90005e80:	00550076 	.word	0x00550076
90005e84:	ffff0000 	.word	0xffff0000
90005e88:	ff05ff16 	.word	0xff05ff16
90005e8c:	008800c2 	.word	0x008800c2
        boundingArea = calculateBoundingArea();
90005e90:	f00e ff2a 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005e94:	4b21      	ldr	r3, [pc, #132]	; (90005f1c <_ZN29screen_space_invadersViewBaseC1Ev+0x574>)
90005e96:	2203      	movs	r2, #3
90005e98:	930c      	str	r3, [sp, #48]	; 0x30
90005e9a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90005e9e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90005ea2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005ea6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_win.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I2AS));
90005eaa:	a90c      	add	r1, sp, #48	; 0x30
90005eac:	4648      	mov	r0, r9
90005eae:	f00f f9c3 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005eb2:	4649      	mov	r1, r9
90005eb4:	4630      	mov	r0, r6
        visible = vis;
90005eb6:	f884 72d1 	strb.w	r7, [r4, #721]	; 0x2d1
90005eba:	f00c fd3d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90005ebe:	4b18      	ldr	r3, [pc, #96]	; (90005f20 <_ZN29screen_space_invadersViewBaseC1Ev+0x578>)
        boundingArea = calculateBoundingArea();
90005ec0:	4629      	mov	r1, r5
90005ec2:	4640      	mov	r0, r8
        color = newColor;
90005ec4:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
        rect.x = x;
90005ec8:	f8c4 b2f8 	str.w	fp, [r4, #760]	; 0x2f8
        linespace = space;
90005ecc:	f8a4 7328 	strh.w	r7, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90005ed0:	f00e ff0a 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90005ed4:	4b11      	ldr	r3, [pc, #68]	; (90005f1c <_ZN29screen_space_invadersViewBaseC1Ev+0x574>)
90005ed6:	2202      	movs	r2, #2
90005ed8:	930c      	str	r3, [sp, #48]	; 0x30
90005eda:	f105 033c 	add.w	r3, r5, #60	; 0x3c
90005ede:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90005ee2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005ee6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_lose.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2AHD));
90005eea:	a90c      	add	r1, sp, #48	; 0x30
90005eec:	4628      	mov	r0, r5
90005eee:	f00f f9a3 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90005ef2:	4630      	mov	r0, r6
90005ef4:	4629      	mov	r1, r5
        visible = vis;
90005ef6:	f884 7319 	strb.w	r7, [r4, #793]	; 0x319
90005efa:	f00c fd1d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005efe:	4620      	mov	r0, r4
90005f00:	b00f      	add	sp, #60	; 0x3c
90005f02:	ecbd 8b04 	vpop	{d8-d9}
90005f06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
90005f0a:	6898      	ldr	r0, [r3, #8]
90005f0c:	4e05      	ldr	r6, [pc, #20]	; (90005f24 <_ZN29screen_space_invadersViewBaseC1Ev+0x57c>)
90005f0e:	6803      	ldr	r3, [r0, #0]
90005f10:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90005f12:	42b2      	cmp	r2, r6
90005f14:	f43f ade5 	beq.w	90005ae2 <_ZN29screen_space_invadersViewBaseC1Ev+0x13a>
90005f18:	e5ae      	b.n	90005a78 <_ZN29screen_space_invadersViewBaseC1Ev+0xd0>
90005f1a:	bf00      	nop
90005f1c:	9002c0c0 	.word	0x9002c0c0
90005f20:	ffff0505 	.word	0xffff0505
90005f24:	90002331 	.word	0x90002331

90005f28 <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f28:	4770      	bx	lr
90005f2a:	bf00      	nop

90005f2c <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f2c:	4770      	bx	lr
90005f2e:	bf00      	nop

90005f30 <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f30:	4770      	bx	lr
90005f32:	bf00      	nop

90005f34 <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f34:	4770      	bx	lr
90005f36:	bf00      	nop

90005f38 <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f38:	4770      	bx	lr
90005f3a:	bf00      	nop

90005f3c <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f3c:	4770      	bx	lr
90005f3e:	bf00      	nop

90005f40 <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f40:	4770      	bx	lr
90005f42:	bf00      	nop

90005f44 <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f44:	4770      	bx	lr
90005f46:	bf00      	nop

90005f48 <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90005f48:	4770      	bx	lr
90005f4a:	bf00      	nop

90005f4c <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90005f4c:	4770      	bx	lr
90005f4e:	bf00      	nop

90005f50 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005f50:	4770      	bx	lr
90005f52:	bf00      	nop

90005f54 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90005f54:	4770      	bx	lr
90005f56:	bf00      	nop

90005f58 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005f58:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f5a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005f5c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005f5e:	6844      	ldr	r4, [r0, #4]
90005f60:	f012 0f01 	tst.w	r2, #1
90005f64:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005f68:	d103      	bne.n	90005f72 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90005f6a:	689b      	ldr	r3, [r3, #8]
    }
90005f6c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f70:	4718      	bx	r3
90005f72:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005f76:	689b      	ldr	r3, [r3, #8]
90005f78:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005f7c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f80:	58d3      	ldr	r3, [r2, r3]
90005f82:	4718      	bx	r3

90005f84 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005f84:	6843      	ldr	r3, [r0, #4]
90005f86:	b13b      	cbz	r3, 90005f98 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90005f88:	6883      	ldr	r3, [r0, #8]
90005f8a:	b10b      	cbz	r3, 90005f90 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005f8c:	2001      	movs	r0, #1
    }
90005f8e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005f90:	68c0      	ldr	r0, [r0, #12]
90005f92:	f000 0001 	and.w	r0, r0, #1
90005f96:	4770      	bx	lr
90005f98:	4618      	mov	r0, r3
90005f9a:	4770      	bx	lr

90005f9c <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005f9c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f9e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90005fa0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90005fa2:	6844      	ldr	r4, [r0, #4]
90005fa4:	f012 0f01 	tst.w	r2, #1
90005fa8:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005fac:	d103      	bne.n	90005fb6 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90005fae:	689b      	ldr	r3, [r3, #8]
    }
90005fb0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005fb4:	4718      	bx	r3
90005fb6:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005fba:	689b      	ldr	r3, [r3, #8]
90005fbc:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005fc0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005fc4:	58d3      	ldr	r3, [r2, r3]
90005fc6:	4718      	bx	r3

90005fc8 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005fc8:	6843      	ldr	r3, [r0, #4]
90005fca:	b13b      	cbz	r3, 90005fdc <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90005fcc:	6883      	ldr	r3, [r0, #8]
90005fce:	b10b      	cbz	r3, 90005fd4 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90005fd0:	2001      	movs	r0, #1
    }
90005fd2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005fd4:	68c0      	ldr	r0, [r0, #12]
90005fd6:	f000 0001 	and.w	r0, r0, #1
90005fda:	4770      	bx	lr
90005fdc:	4618      	mov	r0, r3
90005fde:	4770      	bx	lr

90005fe0 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005fe0:	b510      	push	{r4, lr}
90005fe2:	4604      	mov	r4, r0
90005fe4:	2110      	movs	r1, #16
90005fe6:	f023 fa3d 	bl	90029464 <_ZdlPvj>
90005fea:	4620      	mov	r0, r4
90005fec:	bd10      	pop	{r4, pc}
90005fee:	bf00      	nop

90005ff0 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90005ff0:	b510      	push	{r4, lr}
90005ff2:	4604      	mov	r4, r0
90005ff4:	2110      	movs	r1, #16
90005ff6:	f023 fa35 	bl	90029464 <_ZdlPvj>
90005ffa:	4620      	mov	r0, r4
90005ffc:	bd10      	pop	{r4, pc}
90005ffe:	bf00      	nop

90006000 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90006000:	4b03      	ldr	r3, [pc, #12]	; (90006010 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90006002:	b510      	push	{r4, lr}
90006004:	4604      	mov	r4, r0
90006006:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90006008:	f010 fbec 	bl	900167e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
9000600c:	4620      	mov	r0, r4
9000600e:	bd10      	pop	{r4, pc}
90006010:	9002cfc0 	.word	0x9002cfc0

90006014 <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90006014:	4b07      	ldr	r3, [pc, #28]	; (90006034 <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
90006016:	b500      	push	{lr}
90006018:	b083      	sub	sp, #12
9000601a:	6003      	str	r3, [r0, #0]
9000601c:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000601e:	f010 fbe1 	bl	900167e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006022:	9801      	ldr	r0, [sp, #4]
90006024:	f242 71bc 	movw	r1, #10172	; 0x27bc
90006028:	f023 fa1c 	bl	90029464 <_ZdlPvj>
9000602c:	9801      	ldr	r0, [sp, #4]
9000602e:	b003      	add	sp, #12
90006030:	f85d fb04 	ldr.w	pc, [sp], #4
90006034:	9002cfc0 	.word	0x9002cfc0

90006038 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void screen_tictactoe_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90006038:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
9000603c:	4288      	cmp	r0, r1
9000603e:	d000      	beq.n	90006042 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
90006040:	4770      	bx	lr
{
90006042:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90006044:	f012 f8d0 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90006048:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_main_menuScreenNoTransition();
9000604c:	f7fe b8d4 	b.w	900041f8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>

90006050 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &btn_pos1)
90006050:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
90006054:	4299      	cmp	r1, r3
{
90006056:	b570      	push	{r4, r5, r6, lr}
90006058:	4604      	mov	r4, r0
9000605a:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
9000605c:	d061      	beq.n	90006122 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &btn_pos2)
9000605e:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90006062:	429d      	cmp	r5, r3
90006064:	d055      	beq.n	90006112 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
    if (&src == &btn_pos3)
90006066:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
9000606a:	429d      	cmp	r5, r3
9000606c:	d049      	beq.n	90006102 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &btn_pos4)
9000606e:	f504 7348 	add.w	r3, r4, #800	; 0x320
90006072:	429d      	cmp	r5, r3
90006074:	d03d      	beq.n	900060f2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
    if (&src == &btn_pos5)
90006076:	f504 6382 	add.w	r3, r4, #1040	; 0x410
9000607a:	429d      	cmp	r5, r3
9000607c:	d031      	beq.n	900060e2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    if (&src == &btn_pos6)
9000607e:	f504 7366 	add.w	r3, r4, #920	; 0x398
90006082:	429d      	cmp	r5, r3
90006084:	d025      	beq.n	900060d2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    if (&src == &btn_pos7)
90006086:	f504 6391 	add.w	r3, r4, #1160	; 0x488
9000608a:	429d      	cmp	r5, r3
9000608c:	d019      	beq.n	900060c2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    if (&src == &btn_pos8)
9000608e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
90006092:	429d      	cmp	r5, r3
90006094:	d00d      	beq.n	900060b2 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    if (&src == &btn_pos9)
90006096:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
9000609a:	429d      	cmp	r5, r3
9000609c:	d000      	beq.n	900060a0 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
}
9000609e:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
900060a0:	6823      	ldr	r3, [r4, #0]
900060a2:	4a23      	ldr	r2, [pc, #140]	; (90006130 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
900060a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900060a6:	4293      	cmp	r3, r2
900060a8:	d0f9      	beq.n	9000609e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
900060aa:	4620      	mov	r0, r4
}
900060ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
900060b0:	4718      	bx	r3
        pos8_clicked();
900060b2:	6823      	ldr	r3, [r4, #0]
900060b4:	4a1f      	ldr	r2, [pc, #124]	; (90006134 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
900060b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900060b8:	4293      	cmp	r3, r2
900060ba:	d0ec      	beq.n	90006096 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
900060bc:	4620      	mov	r0, r4
900060be:	4798      	blx	r3
900060c0:	e7e9      	b.n	90006096 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
900060c2:	6823      	ldr	r3, [r4, #0]
900060c4:	4a1c      	ldr	r2, [pc, #112]	; (90006138 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
900060c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900060c8:	4293      	cmp	r3, r2
900060ca:	d0e0      	beq.n	9000608e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
900060cc:	4620      	mov	r0, r4
900060ce:	4798      	blx	r3
900060d0:	e7dd      	b.n	9000608e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
900060d2:	6823      	ldr	r3, [r4, #0]
900060d4:	4a19      	ldr	r2, [pc, #100]	; (9000613c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
900060d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900060d8:	4293      	cmp	r3, r2
900060da:	d0d4      	beq.n	90006086 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
900060dc:	4620      	mov	r0, r4
900060de:	4798      	blx	r3
900060e0:	e7d1      	b.n	90006086 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
900060e2:	6823      	ldr	r3, [r4, #0]
900060e4:	4a16      	ldr	r2, [pc, #88]	; (90006140 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
900060e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900060e8:	4293      	cmp	r3, r2
900060ea:	d0c8      	beq.n	9000607e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
900060ec:	4620      	mov	r0, r4
900060ee:	4798      	blx	r3
900060f0:	e7c5      	b.n	9000607e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
900060f2:	6823      	ldr	r3, [r4, #0]
900060f4:	4a13      	ldr	r2, [pc, #76]	; (90006144 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
900060f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900060f8:	4293      	cmp	r3, r2
900060fa:	d0bc      	beq.n	90006076 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
900060fc:	4620      	mov	r0, r4
900060fe:	4798      	blx	r3
90006100:	e7b9      	b.n	90006076 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
90006102:	6823      	ldr	r3, [r4, #0]
90006104:	4a10      	ldr	r2, [pc, #64]	; (90006148 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
90006106:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006108:	4293      	cmp	r3, r2
9000610a:	d0b0      	beq.n	9000606e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
9000610c:	4620      	mov	r0, r4
9000610e:	4798      	blx	r3
90006110:	e7ad      	b.n	9000606e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
90006112:	6823      	ldr	r3, [r4, #0]
90006114:	4a0d      	ldr	r2, [pc, #52]	; (9000614c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
90006116:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006118:	4293      	cmp	r3, r2
9000611a:	d0a4      	beq.n	90006066 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
9000611c:	4620      	mov	r0, r4
9000611e:	4798      	blx	r3
90006120:	e7a1      	b.n	90006066 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
90006122:	6803      	ldr	r3, [r0, #0]
90006124:	4a0a      	ldr	r2, [pc, #40]	; (90006150 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
90006126:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90006128:	4293      	cmp	r3, r2
9000612a:	d098      	beq.n	9000605e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
9000612c:	4798      	blx	r3
9000612e:	e796      	b.n	9000605e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90006130:	90005f49 	.word	0x90005f49
90006134:	90005f45 	.word	0x90005f45
90006138:	90005f41 	.word	0x90005f41
9000613c:	90005f3d 	.word	0x90005f3d
90006140:	90005f39 	.word	0x90005f39
90006144:	90005f35 	.word	0x90005f35
90006148:	90005f31 	.word	0x90005f31
9000614c:	90005f2d 	.word	0x90005f2d
90006150:	90005f29 	.word	0x90005f29

90006154 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
90006154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006158:	ed2d 8b08 	vpush	{d8-d11}
9000615c:	b0a9      	sub	sp, #164	; 0xa4
9000615e:	4604      	mov	r4, r0
90006160:	f013 fc7a 	bl	90019a58 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90006164:	f44f 7380 	mov.w	r3, #256	; 0x100
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90006168:	4a2a      	ldr	r2, [pc, #168]	; (90006214 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
9000616a:	2500      	movs	r5, #0
9000616c:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        : Widget(), alpha(255), color(0)
90006170:	23ff      	movs	r3, #255	; 0xff
90006172:	4929      	ldr	r1, [pc, #164]	; (90006218 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
90006174:	f104 0698 	add.w	r6, r4, #152	; 0x98
90006178:	6022      	str	r2, [r4, #0]
9000617a:	f104 026c 	add.w	r2, r4, #108	; 0x6c
9000617e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90006182:	f64f 73ff 	movw	r3, #65535	; 0xffff
90006186:	4610      	mov	r0, r2
90006188:	6421      	str	r1, [r4, #64]	; 0x40
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000618a:	4f24      	ldr	r7, [pc, #144]	; (9000621c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
9000618c:	a926      	add	r1, sp, #152	; 0x98
9000618e:	63e5      	str	r5, [r4, #60]	; 0x3c
90006190:	ee0a 2a90 	vmov	s21, r2
90006194:	6465      	str	r5, [r4, #68]	; 0x44
90006196:	ee08 6a10 	vmov	s16, r6
          cachedAbsX(0),
9000619a:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
9000619c:	66a5      	str	r5, [r4, #104]	; 0x68
9000619e:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
        : AbstractPainter()
900061a2:	f8df 808c 	ldr.w	r8, [pc, #140]	; 90006230 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>
        : x(0), y(0), width(0), height(0)
900061a6:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
900061aa:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900061ae:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900061b2:	f00e faef 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900061b6:	4630      	mov	r0, r6
900061b8:	f00e f816 	bl	900141e8 <_ZN8touchgfx4LineC1Ev>
900061bc:	683b      	ldr	r3, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900061be:	f504 7184 	add.w	r1, r4, #264	; 0x108
        : widgetWidth(0)
900061c2:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
900061c6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900061ca:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
900061ce:	911a      	str	r1, [sp, #104]	; 0x68
900061d0:	2a00      	cmp	r2, #0
900061d2:	d02f      	beq.n	90006234 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
900061d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900061d6:	2800      	cmp	r0, #0
900061d8:	f001 825c 	beq.w	90007694 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1540>
        bool compat = HAL::lcd().framebufferFormat() == format;
900061dc:	6803      	ldr	r3, [r0, #0]
900061de:	4d10      	ldr	r5, [pc, #64]	; (90006220 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
900061e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900061e2:	42aa      	cmp	r2, r5
900061e4:	d033      	beq.n	9000624e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900061e6:	4790      	blx	r2
        return auxiliaryLCD;
900061e8:	683b      	ldr	r3, [r7, #0]
900061ea:	fab0 f680 	clz	r6, r0
900061ee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900061f0:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900061f2:	b140      	cbz	r0, 90006206 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900061f4:	6803      	ldr	r3, [r0, #0]
900061f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900061f8:	42ab      	cmp	r3, r5
900061fa:	d028      	beq.n	9000624e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900061fc:	4798      	blx	r3
900061fe:	2800      	cmp	r0, #0
90006200:	bf08      	it	eq
90006202:	f046 0601 	orreq.w	r6, r6, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006206:	bb16      	cbnz	r6, 9000624e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90006208:	4b06      	ldr	r3, [pc, #24]	; (90006224 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
9000620a:	212c      	movs	r1, #44	; 0x2c
9000620c:	4a06      	ldr	r2, [pc, #24]	; (90006228 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
9000620e:	4807      	ldr	r0, [pc, #28]	; (9000622c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
90006210:	f023 f956 	bl	900294c0 <__assert_func>
90006214:	9002cfc0 	.word	0x9002cfc0
90006218:	9002d9a0 	.word	0x9002d9a0
9000621c:	24039acc 	.word	0x24039acc
90006220:	90002331 	.word	0x90002331
90006224:	9002ce38 	.word	0x9002ce38
90006228:	9002ce98 	.word	0x9002ce98
9000622c:	9002ced4 	.word	0x9002ced4
90006230:	9002be44 	.word	0x9002be44
        return instance->lcdRef;
90006234:	6898      	ldr	r0, [r3, #8]
90006236:	4de1      	ldr	r5, [pc, #900]	; (900065bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90006238:	6802      	ldr	r2, [r0, #0]
9000623a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000623c:	42aa      	cmp	r2, r5
9000623e:	d1d2      	bne.n	900061e6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
90006240:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006242:	b120      	cbz	r0, 9000624e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006244:	6803      	ldr	r3, [r0, #0]
90006246:	2601      	movs	r6, #1
90006248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000624a:	42ab      	cmp	r3, r5
9000624c:	d1d6      	bne.n	900061fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
9000624e:	4edc      	ldr	r6, [pc, #880]	; (900065c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
90006250:	f04f 0b00 	mov.w	fp, #0
90006254:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
90006258:	f504 708e 	add.w	r0, r4, #284	; 0x11c
9000625c:	f106 0924 	add.w	r9, r6, #36	; 0x24
90006260:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
90006264:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
90006268:	ee08 0a90 	vmov	s17, r0
9000626c:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
90006270:	931c      	str	r3, [sp, #112]	; 0x70
90006272:	f00d ffb9 	bl	900141e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006276:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90006278:	f8a4 b190 	strh.w	fp, [r4, #400]	; 0x190
9000627c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : AbstractPainter()
90006280:	f8c4 818c 	str.w	r8, [r4, #396]	; 0x18c
90006284:	2a00      	cmp	r2, #0
90006286:	f001 820e 	beq.w	900076a6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1552>
9000628a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000628c:	b900      	cbnz	r0, 90006290 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
9000628e:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006290:	6803      	ldr	r3, [r0, #0]
90006292:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006294:	42aa      	cmp	r2, r5
90006296:	f041 8276 	bne.w	90007786 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1632>
9000629a:	f04f 0b00 	mov.w	fp, #0
9000629e:	f504 7304 	add.w	r3, r4, #528	; 0x210
900062a2:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
900062a6:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
900062aa:	f8c4 9194 	str.w	r9, [r4, #404]	; 0x194
900062ae:	f8c4 b198 	str.w	fp, [r4, #408]	; 0x198
900062b2:	ee09 0a10 	vmov	s18, r0
900062b6:	931b      	str	r3, [sp, #108]	; 0x6c
900062b8:	f00d ff96 	bl	900141e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900062bc:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
900062be:	f8a4 b214 	strh.w	fp, [r4, #532]	; 0x214
900062c2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900062c6:	f8c4 8210 	str.w	r8, [r4, #528]	; 0x210
900062ca:	2a00      	cmp	r2, #0
900062cc:	f001 8206 	beq.w	900076dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1588>
900062d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900062d2:	b900      	cbnz	r0, 900062d6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
900062d4:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900062d6:	6803      	ldr	r3, [r0, #0]
900062d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900062da:	42aa      	cmp	r2, r5
900062dc:	f041 826a 	bne.w	900077b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
900062e0:	f04f 0b00 	mov.w	fp, #0
900062e4:	f504 7325 	add.w	r3, r4, #660	; 0x294
900062e8:	f504 7009 	add.w	r0, r4, #548	; 0x224
900062ec:	f8c4 6210 	str.w	r6, [r4, #528]	; 0x210
900062f0:	f8c4 9218 	str.w	r9, [r4, #536]	; 0x218
900062f4:	f8c4 b21c 	str.w	fp, [r4, #540]	; 0x21c
900062f8:	ee09 0a90 	vmov	s19, r0
900062fc:	931d      	str	r3, [sp, #116]	; 0x74
900062fe:	f00d ff73 	bl	900141e8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006302:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90006304:	f8a4 b298 	strh.w	fp, [r4, #664]	; 0x298
90006308:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000630c:	f8c4 8294 	str.w	r8, [r4, #660]	; 0x294
90006310:	2a00      	cmp	r2, #0
90006312:	f001 81fe 	beq.w	90007712 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15be>
90006316:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006318:	b900      	cbnz	r0, 9000631c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
9000631a:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000631c:	6803      	ldr	r3, [r0, #0]
9000631e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90006320:	42aa      	cmp	r2, r5
90006322:	f041 823c 	bne.w	9000779e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164a>
          touchable(false),
90006326:	f44f 7580 	mov.w	r5, #256	; 0x100
9000632a:	f04f 3aff 	mov.w	sl, #4294967295
        : pressed(false), alpha(255), action(0)
9000632e:	f44f 4b7f 	mov.w	fp, #65280	; 0xff00
        : T(), up(), down()
90006332:	f8df 8294 	ldr.w	r8, [pc, #660]	; 900065c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>
        : Box(), borderColor(0), borderSize(0)
90006336:	4fa3      	ldr	r7, [pc, #652]	; (900065c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
90006338:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
9000633c:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
90006340:	2600      	movs	r6, #0
90006342:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
        touchable = touch;
90006346:	f240 1901 	movw	r9, #257	; 0x101
9000634a:	f504 7248 	add.w	r2, r4, #800	; 0x320
        T::add(borderBox);
9000634e:	4618      	mov	r0, r3
90006350:	f504 7137 	add.w	r1, r4, #732	; 0x2dc
90006354:	f8c4 62a0 	str.w	r6, [r4, #672]	; 0x2a0
90006358:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
9000635c:	ee0a 3a10 	vmov	s20, r3
90006360:	f8c4 62d8 	str.w	r6, [r4, #728]	; 0x2d8
90006364:	f8a4 630c 	strh.w	r6, [r4, #780]	; 0x30c
          touchable(false),
90006368:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
9000636c:	f884 a302 	strb.w	sl, [r4, #770]	; 0x302
90006370:	f8a4 b2d4 	strh.w	fp, [r4, #724]	; 0x2d4
        touchable = touch;
90006374:	f8a4 92cc 	strh.w	r9, [r4, #716]	; 0x2cc
        : T(), up(), down()
90006378:	f8c4 82a8 	str.w	r8, [r4, #680]	; 0x2a8
9000637c:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
90006380:	e9c4 66ab 	strd	r6, r6, [r4, #684]	; 0x2ac
90006384:	e9c4 66ad 	strd	r6, r6, [r4, #692]	; 0x2b4
          nextSibling(0),
90006388:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
          cachedAbsX(0),
9000638c:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
90006390:	e9c4 66bc 	strd	r6, r6, [r4, #752]	; 0x2f0
          cachedAbsX(0),
90006394:	e9c4 66be 	strd	r6, r6, [r4, #760]	; 0x2f8
        : color(col)
90006398:	e9c4 66c1 	strd	r6, r6, [r4, #772]	; 0x304
        : color(0)
9000639c:	e9c4 66c4 	strd	r6, r6, [r4, #784]	; 0x310
900063a0:	e9c4 66c6 	strd	r6, r6, [r4, #792]	; 0x318
        rect.x = x;
900063a4:	e9c4 66b8 	strd	r6, r6, [r4, #736]	; 0x2e0
900063a8:	e9c4 66ba 	strd	r6, r6, [r4, #744]	; 0x2e8
900063ac:	9202      	str	r2, [sp, #8]
        T::add(borderBox);
900063ae:	f00c fac3 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900063b2:	f504 7366 	add.w	r3, r4, #920	; 0x398
900063b6:	f504 7155 	add.w	r1, r4, #852	; 0x354
900063ba:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
900063be:	9303      	str	r3, [sp, #12]
900063c0:	f8a4 b34c 	strh.w	fp, [r4, #844]	; 0x34c
900063c4:	f8c4 6350 	str.w	r6, [r4, #848]	; 0x350
        touchable = touch;
900063c8:	f8a4 9344 	strh.w	r9, [r4, #836]	; 0x344
        : T(), up(), down()
900063cc:	f8c4 8320 	str.w	r8, [r4, #800]	; 0x320
          touchable(false),
900063d0:	f8a4 5378 	strh.w	r5, [r4, #888]	; 0x378
900063d4:	f884 a37a 	strb.w	sl, [r4, #890]	; 0x37a
        : color(col)
900063d8:	f8c4 637c 	str.w	r6, [r4, #892]	; 0x37c
900063dc:	f8c4 7354 	str.w	r7, [r4, #852]	; 0x354
900063e0:	f8c4 6380 	str.w	r6, [r4, #896]	; 0x380
900063e4:	f8a4 6384 	strh.w	r6, [r4, #900]	; 0x384
        : x(0), y(0), width(0), height(0)
900063e8:	e9c4 66c9 	strd	r6, r6, [r4, #804]	; 0x324
900063ec:	e9c4 66cb 	strd	r6, r6, [r4, #812]	; 0x32c
          nextSibling(0),
900063f0:	e9c4 66cd 	strd	r6, r6, [r4, #820]	; 0x334
          cachedAbsX(0),
900063f4:	e9c4 66cf 	strd	r6, r6, [r4, #828]	; 0x33c
          nextSibling(0),
900063f8:	e9c4 66da 	strd	r6, r6, [r4, #872]	; 0x368
          cachedAbsX(0),
900063fc:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
        : color(0)
90006400:	e9c4 66e2 	strd	r6, r6, [r4, #904]	; 0x388
90006404:	e9c4 66e4 	strd	r6, r6, [r4, #912]	; 0x390
        rect.x = x;
90006408:	e9c4 66d6 	strd	r6, r6, [r4, #856]	; 0x358
9000640c:	e9c4 66d8 	strd	r6, r6, [r4, #864]	; 0x360
        T::add(borderBox);
90006410:	9802      	ldr	r0, [sp, #8]
90006412:	f00c fa91 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006416:	f504 6282 	add.w	r2, r4, #1040	; 0x410
9000641a:	f504 7173 	add.w	r1, r4, #972	; 0x3cc
9000641e:	f8c4 63c0 	str.w	r6, [r4, #960]	; 0x3c0
90006422:	9204      	str	r2, [sp, #16]
90006424:	f8a4 b3c4 	strh.w	fp, [r4, #964]	; 0x3c4
90006428:	f8c4 63c8 	str.w	r6, [r4, #968]	; 0x3c8
        touchable = touch;
9000642c:	f8a4 93bc 	strh.w	r9, [r4, #956]	; 0x3bc
        : T(), up(), down()
90006430:	f8c4 8398 	str.w	r8, [r4, #920]	; 0x398
          touchable(false),
90006434:	f8a4 53f0 	strh.w	r5, [r4, #1008]	; 0x3f0
90006438:	f884 a3f2 	strb.w	sl, [r4, #1010]	; 0x3f2
        : color(col)
9000643c:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
90006440:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc
90006444:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
90006448:	f8a4 63fc 	strh.w	r6, [r4, #1020]	; 0x3fc
        : color(0)
9000644c:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
90006450:	f8c4 6404 	str.w	r6, [r4, #1028]	; 0x404
90006454:	f8c4 6408 	str.w	r6, [r4, #1032]	; 0x408
90006458:	f8c4 640c 	str.w	r6, [r4, #1036]	; 0x40c
        : x(0), y(0), width(0), height(0)
9000645c:	e9c4 66e7 	strd	r6, r6, [r4, #924]	; 0x39c
90006460:	e9c4 66e9 	strd	r6, r6, [r4, #932]	; 0x3a4
          nextSibling(0),
90006464:	e9c4 66eb 	strd	r6, r6, [r4, #940]	; 0x3ac
          cachedAbsX(0),
90006468:	e9c4 66ed 	strd	r6, r6, [r4, #948]	; 0x3b4
          nextSibling(0),
9000646c:	e9c4 66f8 	strd	r6, r6, [r4, #992]	; 0x3e0
          cachedAbsX(0),
90006470:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	; 0x3e8
        rect.x = x;
90006474:	e9c4 66f4 	strd	r6, r6, [r4, #976]	; 0x3d0
90006478:	e9c4 66f6 	strd	r6, r6, [r4, #984]	; 0x3d8
        T::add(borderBox);
9000647c:	9803      	ldr	r0, [sp, #12]
9000647e:	f00c fa5b 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006482:	f504 6391 	add.w	r3, r4, #1160	; 0x488
90006486:	f204 4144 	addw	r1, r4, #1092	; 0x444
9000648a:	f8c4 6414 	str.w	r6, [r4, #1044]	; 0x414
9000648e:	9305      	str	r3, [sp, #20]
90006490:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
90006494:	f8c4 641c 	str.w	r6, [r4, #1052]	; 0x41c
90006498:	f8c4 6420 	str.w	r6, [r4, #1056]	; 0x420
          parent(0),
9000649c:	f8c4 6424 	str.w	r6, [r4, #1060]	; 0x424
          nextSibling(0),
900064a0:	f8c4 6428 	str.w	r6, [r4, #1064]	; 0x428
          nextDrawChainElement(0),
900064a4:	f8c4 642c 	str.w	r6, [r4, #1068]	; 0x42c
          cachedAbsX(0),
900064a8:	f8c4 6430 	str.w	r6, [r4, #1072]	; 0x430
900064ac:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
900064b0:	f8a4 b43c 	strh.w	fp, [r4, #1084]	; 0x43c
900064b4:	f8c4 6440 	str.w	r6, [r4, #1088]	; 0x440
        touchable = touch;
900064b8:	f8a4 9434 	strh.w	r9, [r4, #1076]	; 0x434
        : T(), up(), down()
900064bc:	f8c4 8410 	str.w	r8, [r4, #1040]	; 0x410
          parent(0),
900064c0:	f8c4 6458 	str.w	r6, [r4, #1112]	; 0x458
          nextSibling(0),
900064c4:	f8c4 645c 	str.w	r6, [r4, #1116]	; 0x45c
          nextDrawChainElement(0),
900064c8:	f8c4 6460 	str.w	r6, [r4, #1120]	; 0x460
          cachedAbsX(0),
900064cc:	f8c4 6464 	str.w	r6, [r4, #1124]	; 0x464
          touchable(false),
900064d0:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
900064d4:	f884 a46a 	strb.w	sl, [r4, #1130]	; 0x46a
        : color(col)
900064d8:	f8c4 646c 	str.w	r6, [r4, #1132]	; 0x46c
900064dc:	f8c4 7444 	str.w	r7, [r4, #1092]	; 0x444
900064e0:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
900064e4:	f8a4 6474 	strh.w	r6, [r4, #1140]	; 0x474
        : color(0)
900064e8:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
900064ec:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
900064f0:	f8c4 6480 	str.w	r6, [r4, #1152]	; 0x480
900064f4:	f8c4 6484 	str.w	r6, [r4, #1156]	; 0x484
        rect.x = x;
900064f8:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
900064fc:	f8c4 644c 	str.w	r6, [r4, #1100]	; 0x44c
90006500:	f8c4 6450 	str.w	r6, [r4, #1104]	; 0x450
90006504:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
        T::add(borderBox);
90006508:	9804      	ldr	r0, [sp, #16]
9000650a:	f00c fa15 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000650e:	f504 62a0 	add.w	r2, r4, #1280	; 0x500
90006512:	f204 41bc 	addw	r1, r4, #1212	; 0x4bc
        : x(0), y(0), width(0), height(0)
90006516:	f8c4 648c 	str.w	r6, [r4, #1164]	; 0x48c
9000651a:	9206      	str	r2, [sp, #24]
9000651c:	f8c4 6490 	str.w	r6, [r4, #1168]	; 0x490
90006520:	f8c4 6494 	str.w	r6, [r4, #1172]	; 0x494
90006524:	f8c4 6498 	str.w	r6, [r4, #1176]	; 0x498
          parent(0),
90006528:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
          nextSibling(0),
9000652c:	f8c4 64a0 	str.w	r6, [r4, #1184]	; 0x4a0
          nextDrawChainElement(0),
90006530:	f8c4 64a4 	str.w	r6, [r4, #1188]	; 0x4a4
          cachedAbsX(0),
90006534:	f8c4 64a8 	str.w	r6, [r4, #1192]	; 0x4a8
90006538:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
9000653c:	f8a4 b4b4 	strh.w	fp, [r4, #1204]	; 0x4b4
90006540:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
        touchable = touch;
90006544:	f8a4 94ac 	strh.w	r9, [r4, #1196]	; 0x4ac
        : T(), up(), down()
90006548:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
          parent(0),
9000654c:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          nextSibling(0),
90006550:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextDrawChainElement(0),
90006554:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          cachedAbsX(0),
90006558:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
          touchable(false),
9000655c:	f8a4 54e0 	strh.w	r5, [r4, #1248]	; 0x4e0
90006560:	f884 a4e2 	strb.w	sl, [r4, #1250]	; 0x4e2
        : color(col)
90006564:	f8c4 64e4 	str.w	r6, [r4, #1252]	; 0x4e4
90006568:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
9000656c:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
90006570:	f8a4 64ec 	strh.w	r6, [r4, #1260]	; 0x4ec
        : color(0)
90006574:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
90006578:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
9000657c:	f8c4 64f8 	str.w	r6, [r4, #1272]	; 0x4f8
90006580:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
        rect.x = x;
90006584:	f8c4 64c0 	str.w	r6, [r4, #1216]	; 0x4c0
90006588:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
9000658c:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
90006590:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
        T::add(borderBox);
90006594:	9805      	ldr	r0, [sp, #20]
90006596:	f00c f9cf 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000659a:	f504 63af 	add.w	r3, r4, #1400	; 0x578
9000659e:	f204 5134 	addw	r1, r4, #1332	; 0x534
        : x(0), y(0), width(0), height(0)
900065a2:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
900065a6:	9307      	str	r3, [sp, #28]
900065a8:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
900065ac:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
900065b0:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
          parent(0),
900065b4:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
900065b8:	e008      	b.n	900065cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
900065ba:	bf00      	nop
900065bc:	90002331 	.word	0x90002331
900065c0:	9002d5f0 	.word	0x9002d5f0
900065c4:	9002da08 	.word	0x9002da08
900065c8:	9002cb24 	.word	0x9002cb24
          nextSibling(0),
900065cc:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
          nextDrawChainElement(0),
900065d0:	f8c4 651c 	str.w	r6, [r4, #1308]	; 0x51c
          cachedAbsX(0),
900065d4:	f8c4 6520 	str.w	r6, [r4, #1312]	; 0x520
900065d8:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
900065dc:	f8a4 b52c 	strh.w	fp, [r4, #1324]	; 0x52c
900065e0:	f8c4 6530 	str.w	r6, [r4, #1328]	; 0x530
        touchable = touch;
900065e4:	f8a4 9524 	strh.w	r9, [r4, #1316]	; 0x524
        : T(), up(), down()
900065e8:	f8c4 8500 	str.w	r8, [r4, #1280]	; 0x500
          parent(0),
900065ec:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
          nextSibling(0),
900065f0:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
          nextDrawChainElement(0),
900065f4:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
          cachedAbsX(0),
900065f8:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
          touchable(false),
900065fc:	f8a4 5558 	strh.w	r5, [r4, #1368]	; 0x558
90006600:	f884 a55a 	strb.w	sl, [r4, #1370]	; 0x55a
        : color(col)
90006604:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
90006608:	f8c4 7534 	str.w	r7, [r4, #1332]	; 0x534
9000660c:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
90006610:	f8a4 6564 	strh.w	r6, [r4, #1380]	; 0x564
        : color(0)
90006614:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
90006618:	f8c4 656c 	str.w	r6, [r4, #1388]	; 0x56c
9000661c:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
90006620:	f8c4 6574 	str.w	r6, [r4, #1396]	; 0x574
        rect.x = x;
90006624:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
90006628:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
9000662c:	f8c4 6540 	str.w	r6, [r4, #1344]	; 0x540
90006630:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
        T::add(borderBox);
90006634:	9806      	ldr	r0, [sp, #24]
90006636:	f00c f97f 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000663a:	f504 62be 	add.w	r2, r4, #1520	; 0x5f0
9000663e:	f204 51ac 	addw	r1, r4, #1452	; 0x5ac
        : x(0), y(0), width(0), height(0)
90006642:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
90006646:	9208      	str	r2, [sp, #32]
90006648:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
9000664c:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
90006650:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
          parent(0),
90006654:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
          nextSibling(0),
90006658:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
          nextDrawChainElement(0),
9000665c:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
          cachedAbsX(0),
90006660:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
90006664:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
90006668:	f8a4 b5a4 	strh.w	fp, [r4, #1444]	; 0x5a4
9000666c:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
        touchable = touch;
90006670:	f8a4 959c 	strh.w	r9, [r4, #1436]	; 0x59c
        : T(), up(), down()
90006674:	f8c4 8578 	str.w	r8, [r4, #1400]	; 0x578
          parent(0),
90006678:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
          nextSibling(0),
9000667c:	f8c4 65c4 	str.w	r6, [r4, #1476]	; 0x5c4
          nextDrawChainElement(0),
90006680:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
          cachedAbsX(0),
90006684:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
          touchable(false),
90006688:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
9000668c:	f884 a5d2 	strb.w	sl, [r4, #1490]	; 0x5d2
        : color(col)
90006690:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
90006694:	f8c4 75ac 	str.w	r7, [r4, #1452]	; 0x5ac
90006698:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
9000669c:	f8a4 65dc 	strh.w	r6, [r4, #1500]	; 0x5dc
        : color(0)
900066a0:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
900066a4:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
900066a8:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
900066ac:	f8c4 65ec 	str.w	r6, [r4, #1516]	; 0x5ec
        rect.x = x;
900066b0:	f8c4 65b0 	str.w	r6, [r4, #1456]	; 0x5b0
900066b4:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
900066b8:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
900066bc:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
        T::add(borderBox);
900066c0:	9807      	ldr	r0, [sp, #28]
900066c2:	f00c f939 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900066c6:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
900066ca:	f204 6124 	addw	r1, r4, #1572	; 0x624
        : x(0), y(0), width(0), height(0)
900066ce:	f8c4 65f4 	str.w	r6, [r4, #1524]	; 0x5f4
900066d2:	9309      	str	r3, [sp, #36]	; 0x24
900066d4:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
900066d8:	f8c4 65fc 	str.w	r6, [r4, #1532]	; 0x5fc
900066dc:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
          parent(0),
900066e0:	f8c4 6604 	str.w	r6, [r4, #1540]	; 0x604
          nextSibling(0),
900066e4:	f8c4 6608 	str.w	r6, [r4, #1544]	; 0x608
          nextDrawChainElement(0),
900066e8:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
          cachedAbsX(0),
900066ec:	f8c4 6610 	str.w	r6, [r4, #1552]	; 0x610
900066f0:	f8c4 6618 	str.w	r6, [r4, #1560]	; 0x618
900066f4:	f8a4 b61c 	strh.w	fp, [r4, #1564]	; 0x61c
900066f8:	f8c4 6620 	str.w	r6, [r4, #1568]	; 0x620
        touchable = touch;
900066fc:	f8a4 9614 	strh.w	r9, [r4, #1556]	; 0x614
        : T(), up(), down()
90006700:	f8c4 85f0 	str.w	r8, [r4, #1520]	; 0x5f0
          parent(0),
90006704:	f8c4 6638 	str.w	r6, [r4, #1592]	; 0x638
          nextSibling(0),
90006708:	f8c4 663c 	str.w	r6, [r4, #1596]	; 0x63c
          nextDrawChainElement(0),
9000670c:	f8c4 6640 	str.w	r6, [r4, #1600]	; 0x640
          cachedAbsX(0),
90006710:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
          touchable(false),
90006714:	f8a4 5648 	strh.w	r5, [r4, #1608]	; 0x648
90006718:	f884 a64a 	strb.w	sl, [r4, #1610]	; 0x64a
        : color(col)
9000671c:	f8c4 664c 	str.w	r6, [r4, #1612]	; 0x64c
90006720:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
90006724:	f8c4 6650 	str.w	r6, [r4, #1616]	; 0x650
90006728:	f8a4 6654 	strh.w	r6, [r4, #1620]	; 0x654
        : color(0)
9000672c:	f8c4 6658 	str.w	r6, [r4, #1624]	; 0x658
90006730:	f8c4 665c 	str.w	r6, [r4, #1628]	; 0x65c
90006734:	f8c4 6660 	str.w	r6, [r4, #1632]	; 0x660
90006738:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
        rect.x = x;
9000673c:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
90006740:	f8c4 662c 	str.w	r6, [r4, #1580]	; 0x62c
90006744:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
90006748:	f8c4 6634 	str.w	r6, [r4, #1588]	; 0x634
        T::add(borderBox);
9000674c:	9808      	ldr	r0, [sp, #32]
9000674e:	f00c f8f3 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006752:	f204 619c 	addw	r1, r4, #1692	; 0x69c
90006756:	9809      	ldr	r0, [sp, #36]	; 0x24
90006758:	f8a4 b694 	strh.w	fp, [r4, #1684]	; 0x694
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000675c:	f04f 3bff 	mov.w	fp, #4294967295
        touchable = touch;
90006760:	f8a4 968c 	strh.w	r9, [r4, #1676]	; 0x68c
90006764:	f504 69dc 	add.w	r9, r4, #1760	; 0x6e0
        : T(), up(), down()
90006768:	f8c4 8668 	str.w	r8, [r4, #1640]	; 0x668
9000676c:	f604 18cc 	addw	r8, r4, #2508	; 0x9cc
90006770:	f8c4 769c 	str.w	r7, [r4, #1692]	; 0x69c
90006774:	f64f 77ff 	movw	r7, #65535	; 0xffff
        : x(0), y(0), width(0), height(0)
90006778:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
9000677c:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
90006780:	f8c4 6674 	str.w	r6, [r4, #1652]	; 0x674
90006784:	f8c4 6678 	str.w	r6, [r4, #1656]	; 0x678
          parent(0),
90006788:	f8c4 667c 	str.w	r6, [r4, #1660]	; 0x67c
          nextSibling(0),
9000678c:	f8c4 6680 	str.w	r6, [r4, #1664]	; 0x680
          nextDrawChainElement(0),
90006790:	f8c4 6684 	str.w	r6, [r4, #1668]	; 0x684
          cachedAbsX(0),
90006794:	f8c4 6688 	str.w	r6, [r4, #1672]	; 0x688
90006798:	f8c4 6690 	str.w	r6, [r4, #1680]	; 0x690
9000679c:	f8c4 6698 	str.w	r6, [r4, #1688]	; 0x698
          parent(0),
900067a0:	f8c4 66b0 	str.w	r6, [r4, #1712]	; 0x6b0
          nextSibling(0),
900067a4:	f8c4 66b4 	str.w	r6, [r4, #1716]	; 0x6b4
          nextDrawChainElement(0),
900067a8:	f8c4 66b8 	str.w	r6, [r4, #1720]	; 0x6b8
          cachedAbsX(0),
900067ac:	f8c4 66bc 	str.w	r6, [r4, #1724]	; 0x6bc
          touchable(false),
900067b0:	f8a4 56c0 	strh.w	r5, [r4, #1728]	; 0x6c0
900067b4:	f884 a6c2 	strb.w	sl, [r4, #1730]	; 0x6c2
900067b8:	f104 0a04 	add.w	sl, r4, #4
        : color(col)
900067bc:	f8c4 66c4 	str.w	r6, [r4, #1732]	; 0x6c4
900067c0:	f8c4 66c8 	str.w	r6, [r4, #1736]	; 0x6c8
900067c4:	f8a4 66cc 	strh.w	r6, [r4, #1740]	; 0x6cc
        : color(0)
900067c8:	f8c4 66d0 	str.w	r6, [r4, #1744]	; 0x6d0
900067cc:	f8c4 66d4 	str.w	r6, [r4, #1748]	; 0x6d4
900067d0:	f8c4 66d8 	str.w	r6, [r4, #1752]	; 0x6d8
900067d4:	f8c4 66dc 	str.w	r6, [r4, #1756]	; 0x6dc
        rect.x = x;
900067d8:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
900067dc:	f8c4 66a4 	str.w	r6, [r4, #1700]	; 0x6a4
900067e0:	f8c4 66a8 	str.w	r6, [r4, #1704]	; 0x6a8
900067e4:	f8c4 66ac 	str.w	r6, [r4, #1708]	; 0x6ac
        T::add(borderBox);
900067e8:	f00c f8a6 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900067ec:	f204 730c 	addw	r3, r4, #1804	; 0x70c
900067f0:	a926      	add	r1, sp, #152	; 0x98
900067f2:	4648      	mov	r0, r9
900067f4:	930a      	str	r3, [sp, #40]	; 0x28
900067f6:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900067fa:	f00d ffcb 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900067fe:	f504 62e7 	add.w	r2, r4, #1848	; 0x738
90006802:	a926      	add	r1, sp, #152	; 0x98
90006804:	980a      	ldr	r0, [sp, #40]	; 0x28
90006806:	920b      	str	r2, [sp, #44]	; 0x2c
90006808:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000680c:	f00d ffc2 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006810:	f204 7364 	addw	r3, r4, #1892	; 0x764
90006814:	a926      	add	r1, sp, #152	; 0x98
90006816:	980b      	ldr	r0, [sp, #44]	; 0x2c
90006818:	930c      	str	r3, [sp, #48]	; 0x30
9000681a:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000681e:	f00d ffb9 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006822:	f504 62f2 	add.w	r2, r4, #1936	; 0x790
90006826:	a926      	add	r1, sp, #152	; 0x98
90006828:	980c      	ldr	r0, [sp, #48]	; 0x30
9000682a:	920d      	str	r2, [sp, #52]	; 0x34
9000682c:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006830:	f00d ffb0 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006834:	f204 73bc 	addw	r3, r4, #1980	; 0x7bc
90006838:	a926      	add	r1, sp, #152	; 0x98
9000683a:	980d      	ldr	r0, [sp, #52]	; 0x34
9000683c:	930e      	str	r3, [sp, #56]	; 0x38
9000683e:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006842:	f00d ffa7 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006846:	f504 62fd 	add.w	r2, r4, #2024	; 0x7e8
9000684a:	a926      	add	r1, sp, #152	; 0x98
9000684c:	980e      	ldr	r0, [sp, #56]	; 0x38
9000684e:	920f      	str	r2, [sp, #60]	; 0x3c
90006850:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006854:	f00d ff9e 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006858:	f604 0314 	addw	r3, r4, #2068	; 0x814
9000685c:	a926      	add	r1, sp, #152	; 0x98
9000685e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90006860:	9310      	str	r3, [sp, #64]	; 0x40
90006862:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006866:	f00d ff95 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000686a:	f504 6204 	add.w	r2, r4, #2112	; 0x840
9000686e:	a926      	add	r1, sp, #152	; 0x98
90006870:	9810      	ldr	r0, [sp, #64]	; 0x40
90006872:	9211      	str	r2, [sp, #68]	; 0x44
90006874:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006878:	f00d ff8c 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000687c:	f604 036c 	addw	r3, r4, #2156	; 0x86c
90006880:	a926      	add	r1, sp, #152	; 0x98
90006882:	9811      	ldr	r0, [sp, #68]	; 0x44
90006884:	9312      	str	r3, [sp, #72]	; 0x48
90006886:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000688a:	f00d ff83 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000688e:	f604 0298 	addw	r2, r4, #2200	; 0x898
90006892:	a926      	add	r1, sp, #152	; 0x98
90006894:	9812      	ldr	r0, [sp, #72]	; 0x48
90006896:	9213      	str	r2, [sp, #76]	; 0x4c
90006898:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
9000689c:	f00d ff7a 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068a0:	f604 03c4 	addw	r3, r4, #2244	; 0x8c4
900068a4:	a926      	add	r1, sp, #152	; 0x98
900068a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
900068a8:	9314      	str	r3, [sp, #80]	; 0x50
900068aa:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900068ae:	f00d ff71 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068b2:	f504 620f 	add.w	r2, r4, #2288	; 0x8f0
900068b6:	a926      	add	r1, sp, #152	; 0x98
900068b8:	9814      	ldr	r0, [sp, #80]	; 0x50
900068ba:	9215      	str	r2, [sp, #84]	; 0x54
900068bc:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900068c0:	f00d ff68 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068c4:	f604 131c 	addw	r3, r4, #2332	; 0x91c
900068c8:	a926      	add	r1, sp, #152	; 0x98
900068ca:	9815      	ldr	r0, [sp, #84]	; 0x54
900068cc:	9316      	str	r3, [sp, #88]	; 0x58
900068ce:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900068d2:	f00d ff5f 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068d6:	f604 1248 	addw	r2, r4, #2376	; 0x948
900068da:	a926      	add	r1, sp, #152	; 0x98
900068dc:	9816      	ldr	r0, [sp, #88]	; 0x58
900068de:	9217      	str	r2, [sp, #92]	; 0x5c
900068e0:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900068e4:	f00d ff56 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068e8:	f604 1374 	addw	r3, r4, #2420	; 0x974
900068ec:	a926      	add	r1, sp, #152	; 0x98
900068ee:	9817      	ldr	r0, [sp, #92]	; 0x5c
900068f0:	9318      	str	r3, [sp, #96]	; 0x60
900068f2:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
900068f6:	f00d ff4d 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900068fa:	f504 621a 	add.w	r2, r4, #2464	; 0x9a0
900068fe:	a926      	add	r1, sp, #152	; 0x98
90006900:	9818      	ldr	r0, [sp, #96]	; 0x60
90006902:	9219      	str	r2, [sp, #100]	; 0x64
90006904:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006908:	f00d ff44 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000690c:	a926      	add	r1, sp, #152	; 0x98
9000690e:	9819      	ldr	r0, [sp, #100]	; 0x64
90006910:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006914:	f00d ff3e 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006918:	a926      	add	r1, sp, #152	; 0x98
9000691a:	4640      	mov	r0, r8
9000691c:	f8ad 7098 	strh.w	r7, [sp, #152]	; 0x98
90006920:	f00d ff38 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90006924:	4be8      	ldr	r3, [pc, #928]	; (90006cc8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb74>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006926:	20ff      	movs	r0, #255	; 0xff
90006928:	4ae8      	ldr	r2, [pc, #928]	; (90006ccc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
9000692a:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
9000692e:	f8c4 2a24 	str.w	r2, [r4, #2596]	; 0xa24
90006932:	f604 226c 	addw	r2, r4, #2668	; 0xa6c
90006936:	4be6      	ldr	r3, [pc, #920]	; (90006cd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
        : x(0), y(0), width(0), height(0)
90006938:	f8c4 69fc 	str.w	r6, [r4, #2556]	; 0x9fc
9000693c:	ee0b 2a10 	vmov	s22, r2
90006940:	f8c4 6a00 	str.w	r6, [r4, #2560]	; 0xa00
90006944:	f8c4 6a04 	str.w	r6, [r4, #2564]	; 0xa04
90006948:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
          parent(0),
9000694c:	f8c4 6a0c 	str.w	r6, [r4, #2572]	; 0xa0c
          nextSibling(0),
90006950:	f8c4 6a10 	str.w	r6, [r4, #2576]	; 0xa10
          nextDrawChainElement(0),
90006954:	f8c4 6a14 	str.w	r6, [r4, #2580]	; 0xa14
          cachedAbsX(0),
90006958:	f8c4 6a18 	str.w	r6, [r4, #2584]	; 0xa18
          touchable(false),
9000695c:	f8a4 5a1c 	strh.w	r5, [r4, #2588]	; 0xa1c
        : color(col)
90006960:	f8c4 6a20 	str.w	r6, [r4, #2592]	; 0xa20
        : x(0), y(0), width(0), height(0)
90006964:	f8c4 6a28 	str.w	r6, [r4, #2600]	; 0xa28
90006968:	f8c4 6a2c 	str.w	r6, [r4, #2604]	; 0xa2c
9000696c:	f8c4 6a30 	str.w	r6, [r4, #2608]	; 0xa30
90006970:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
          parent(0),
90006974:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
          nextSibling(0),
90006978:	f8c4 6a3c 	str.w	r6, [r4, #2620]	; 0xa3c
          nextDrawChainElement(0),
9000697c:	f8c4 6a40 	str.w	r6, [r4, #2624]	; 0xa40
          cachedAbsX(0),
90006980:	f8c4 6a44 	str.w	r6, [r4, #2628]	; 0xa44
          touchable(false),
90006984:	f8a4 5a48 	strh.w	r5, [r4, #2632]	; 0xa48
        : color(col)
90006988:	f8c4 6a54 	str.w	r6, [r4, #2644]	; 0xa54
9000698c:	f8a4 6a58 	strh.w	r6, [r4, #2648]	; 0xa58
90006990:	f8c4 0a5a 	str.w	r0, [r4, #2650]	; 0xa5a
90006994:	4610      	mov	r0, r2
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006996:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
              text(0)
9000699a:	f8c4 6a68 	str.w	r6, [r4, #2664]	; 0xa68
9000699e:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
900069a2:	f884 7a1e 	strb.w	r7, [r4, #2590]	; 0xa1e
900069a6:	f8a4 7a50 	strh.w	r7, [r4, #2640]	; 0xa50
900069aa:	f8c4 ba64 	str.w	fp, [r4, #2660]	; 0xa64
900069ae:	f00e ff05 	bl	900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>
900069b2:	4bc7      	ldr	r3, [pc, #796]	; (90006cd0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900069b4:	20ff      	movs	r0, #255	; 0xff
        : TextAreaWithWildcardBase(), wc1(0)
900069b6:	49c7      	ldr	r1, [pc, #796]	; (90006cd4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
        : pobject(pObject), pmemfun(pmemfun_1)
900069b8:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
900069bc:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
900069c0:	f8c4 3b1c 	str.w	r3, [r4, #2844]	; 0xb1c
        : x(0), y(0), width(0), height(0)
900069c4:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
900069c8:	f8c4 6ab0 	str.w	r6, [r4, #2736]	; 0xab0
900069cc:	f8c4 6ab4 	str.w	r6, [r4, #2740]	; 0xab4
900069d0:	f8c4 6ab8 	str.w	r6, [r4, #2744]	; 0xab8
          parent(0),
900069d4:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
          nextSibling(0),
900069d8:	f8c4 6ac0 	str.w	r6, [r4, #2752]	; 0xac0
          nextDrawChainElement(0),
900069dc:	f8c4 6ac4 	str.w	r6, [r4, #2756]	; 0xac4
          cachedAbsX(0),
900069e0:	f8c4 6ac8 	str.w	r6, [r4, #2760]	; 0xac8
          touchable(false),
900069e4:	f8a4 5acc 	strh.w	r5, [r4, #2764]	; 0xacc
900069e8:	f8a4 5b18 	strh.w	r5, [r4, #2840]	; 0xb18
        : color(col)
900069ec:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
900069f0:	f8a4 6adc 	strh.w	r6, [r4, #2780]	; 0xadc
900069f4:	f8c4 0ade 	str.w	r0, [r4, #2782]	; 0xade
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900069f8:	f8c4 6ae4 	str.w	r6, [r4, #2788]	; 0xae4
              text(0)
900069fc:	f8c4 6aec 	str.w	r6, [r4, #2796]	; 0xaec
90006a00:	f8c4 6af0 	str.w	r6, [r4, #2800]	; 0xaf0
        : x(0), y(0), width(0), height(0)
90006a04:	f8c4 6af8 	str.w	r6, [r4, #2808]	; 0xaf8
90006a08:	f8c4 6afc 	str.w	r6, [r4, #2812]	; 0xafc
90006a0c:	f8c4 6b00 	str.w	r6, [r4, #2816]	; 0xb00
90006a10:	f8c4 6b04 	str.w	r6, [r4, #2820]	; 0xb04
          parent(0),
90006a14:	f8c4 6b08 	str.w	r6, [r4, #2824]	; 0xb08
          nextSibling(0),
90006a18:	f8c4 6b0c 	str.w	r6, [r4, #2828]	; 0xb0c
          nextDrawChainElement(0),
90006a1c:	f8c4 6b10 	str.w	r6, [r4, #2832]	; 0xb10
          cachedAbsX(0),
90006a20:	f8c4 6b14 	str.w	r6, [r4, #2836]	; 0xb14
        : color(col)
90006a24:	f8c4 6b24 	str.w	r6, [r4, #2852]	; 0xb24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90006a28:	f8a4 6b28 	strh.w	r6, [r4, #2856]	; 0xb28
90006a2c:	f8c4 1aa8 	str.w	r1, [r4, #2728]	; 0xaa8
90006a30:	f8a4 7b20 	strh.w	r7, [r4, #2848]	; 0xb20
90006a34:	f8a4 bad4 	strh.w	fp, [r4, #2772]	; 0xad4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90006a38:	f8c4 bae8 	str.w	fp, [r4, #2792]	; 0xae8
90006a3c:	f8c4 0b2a 	str.w	r0, [r4, #2858]	; 0xb2a
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90006a40:	f604 307c 	addw	r0, r4, #2940	; 0xb7c
90006a44:	f8c4 1af4 	str.w	r1, [r4, #2804]	; 0xaf4
90006a48:	49a3      	ldr	r1, [pc, #652]	; (90006cd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
90006a4a:	f8c4 6b30 	str.w	r6, [r4, #2864]	; 0xb30
              text(0)
90006a4e:	f8c4 6b38 	str.w	r6, [r4, #2872]	; 0xb38
90006a52:	f8c4 6b3c 	str.w	r6, [r4, #2876]	; 0xb3c
90006a56:	f8c4 bb34 	str.w	fp, [r4, #2868]	; 0xb34
90006a5a:	f8c2 179c 	str.w	r1, [r2, #1948]	; 0x79c
90006a5e:	499f      	ldr	r1, [pc, #636]	; (90006cdc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
90006a60:	f8c2 67a8 	str.w	r6, [r2, #1960]	; 0x7a8
90006a64:	f8c2 17a4 	str.w	r1, [r2, #1956]	; 0x7a4
90006a68:	499d      	ldr	r1, [pc, #628]	; (90006ce0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90006a6a:	f8c2 67b8 	str.w	r6, [r2, #1976]	; 0x7b8
90006a6e:	f8c2 17ac 	str.w	r1, [r2, #1964]	; 0x7ac
90006a72:	499c      	ldr	r1, [pc, #624]	; (90006ce4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
90006a74:	f8c2 47a0 	str.w	r4, [r2, #1952]	; 0x7a0
90006a78:	f8c2 17b4 	str.w	r1, [r2, #1972]	; 0x7b4
90006a7c:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90006a80:	f8c2 47b0 	str.w	r4, [r2, #1968]	; 0x7b0
90006a84:	f00f fea4 	bl	900167d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90006a88:	4d97      	ldr	r5, [pc, #604]	; (90006ce8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
        color = newColor;
90006a8a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
90006a8e:	f104 0140 	add.w	r1, r4, #64	; 0x40
90006a92:	4650      	mov	r0, sl
90006a94:	6466      	str	r6, [r4, #68]	; 0x44
90006a96:	66a2      	str	r2, [r4, #104]	; 0x68
90006a98:	64a5      	str	r5, [r4, #72]	; 0x48
90006a9a:	f00b ff4d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006a9e:	2204      	movs	r2, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90006aa0:	ee1a 0a90 	vmov	r0, s21
90006aa4:	a926      	add	r1, sp, #152	; 0x98
90006aa6:	f8ad 2098 	strh.w	r2, [sp, #152]	; 0x98
90006aaa:	f00e feae 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006aae:	4631      	mov	r1, r6
90006ab0:	ee1a 0a90 	vmov	r0, s21
90006ab4:	e9c4 651c 	strd	r6, r5, [r4, #112]	; 0x70
90006ab8:	f00d fe27 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006abc:	ee1a 1a90 	vmov	r1, s21
90006ac0:	4650      	mov	r0, sl
90006ac2:	4e8a      	ldr	r6, [pc, #552]	; (90006cec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90006ac4:	f00b ff38 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006ac8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006aca:	22a0      	movs	r2, #160	; 0xa0
90006acc:	ee18 0a10 	vmov	r0, s16
90006ad0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90006ad4:	4b86      	ldr	r3, [pc, #536]	; (90006cf0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90006ad6:	4611      	mov	r1, r2
90006ad8:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
90006adc:	f8a4 b118 	strh.w	fp, [r4, #280]	; 0x118
90006ae0:	e9c4 6327 	strd	r6, r3, [r4, #156]	; 0x9c
90006ae4:	f00d fc96 	bl	90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006ae8:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006aec:	21a0      	movs	r1, #160	; 0xa0
90006aee:	ee18 0a10 	vmov	r0, s16
90006af2:	f00d fc9a 	bl	9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006af6:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90006afa:	f604 2224 	addw	r2, r4, #2596	; 0xa24
90006afe:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006b02:	ee0a 2a90 	vmov	s21, r2
90006b06:	d007      	beq.n	90006b18 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9c4>
        lineWidthQ5 = widthQ5;
90006b08:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006b0c:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90006b10:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
90006b14:	f00d fb88 	bl	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006b18:	2101      	movs	r1, #1
90006b1a:	ee18 0a10 	vmov	r0, s16
90006b1e:	f00d fc8f 	bl	90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006b22:	ee18 1a10 	vmov	r1, s16
90006b26:	4650      	mov	r0, sl
90006b28:	4d72      	ldr	r5, [pc, #456]	; (90006cf4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90006b2a:	f00b ff05 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006b2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b30:	22a0      	movs	r2, #160	; 0xa0
90006b32:	ee18 0a90 	vmov	r0, s17
90006b36:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90006b3a:	f04f 33ff 	mov.w	r3, #4294967295
90006b3e:	4611      	mov	r1, r2
90006b40:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90006b44:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
90006b48:	4b69      	ldr	r3, [pc, #420]	; (90006cf0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90006b4a:	e9c4 5348 	strd	r5, r3, [r4, #288]	; 0x120
90006b4e:	f00d fc61 	bl	90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b52:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90006b56:	21a0      	movs	r1, #160	; 0xa0
90006b58:	ee18 0a90 	vmov	r0, s17
90006b5c:	f00d fc65 	bl	9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006b60:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
90006b64:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006b68:	d007      	beq.n	90006b7a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa26>
        lineWidthQ5 = widthQ5;
90006b6a:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006b6e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90006b72:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        updateCachedShape();
90006b76:	f00d fb57 	bl	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006b7a:	2101      	movs	r1, #1
90006b7c:	ee18 0a90 	vmov	r0, s17
90006b80:	f00d fc5e 	bl	90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006b84:	ee18 1a90 	vmov	r1, s17
90006b88:	4650      	mov	r0, sl
90006b8a:	f00b fed5 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006b8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006b90:	22a0      	movs	r2, #160	; 0xa0
90006b92:	4859      	ldr	r0, [pc, #356]	; (90006cf8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90006b94:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
90006b98:	f04f 33ff 	mov.w	r3, #4294967295
90006b9c:	4611      	mov	r1, r2
90006b9e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90006ba2:	f8a4 3220 	strh.w	r3, [r4, #544]	; 0x220
90006ba6:	4b55      	ldr	r3, [pc, #340]	; (90006cfc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90006ba8:	e9c4 0369 	strd	r0, r3, [r4, #420]	; 0x1a4
90006bac:	ee19 0a10 	vmov	r0, s18
90006bb0:	f00d fc30 	bl	90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006bb4:	22a0      	movs	r2, #160	; 0xa0
90006bb6:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006bba:	ee19 0a10 	vmov	r0, s18
90006bbe:	f00d fc34 	bl	9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006bc2:	f8d4 31dc 	ldr.w	r3, [r4, #476]	; 0x1dc
90006bc6:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006bca:	d007      	beq.n	90006bdc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa88>
        lineWidthQ5 = widthQ5;
90006bcc:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006bd0:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90006bd4:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        updateCachedShape();
90006bd8:	f00d fb26 	bl	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006bdc:	2101      	movs	r1, #1
90006bde:	ee19 0a10 	vmov	r0, s18
90006be2:	f00d fc2d 	bl	90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006be6:	ee19 1a10 	vmov	r1, s18
90006bea:	4650      	mov	r0, sl
90006bec:	f00b fea4 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006bf0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006bf2:	22a0      	movs	r2, #160	; 0xa0
90006bf4:	4942      	ldr	r1, [pc, #264]	; (90006d00 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90006bf6:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
90006bfa:	f04f 33ff 	mov.w	r3, #4294967295
90006bfe:	ee19 0a90 	vmov	r0, s19
90006c02:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
90006c06:	f8a4 32a4 	strh.w	r3, [r4, #676]	; 0x2a4
90006c0a:	4b3e      	ldr	r3, [pc, #248]	; (90006d04 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90006c0c:	e9c4 138a 	strd	r1, r3, [r4, #552]	; 0x228
90006c10:	4611      	mov	r1, r2
90006c12:	f00d fbff 	bl	90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90006c16:	22a0      	movs	r2, #160	; 0xa0
90006c18:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90006c1c:	ee19 0a90 	vmov	r0, s19
90006c20:	f00d fc03 	bl	9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90006c24:	f8d4 3260 	ldr.w	r3, [r4, #608]	; 0x260
90006c28:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90006c2c:	d007      	beq.n	90006c3e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xaea>
        lineWidthQ5 = widthQ5;
90006c2e:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90006c32:	ee19 0a90 	vmov	r0, s19
        lineWidthQ5 = widthQ5;
90006c36:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        updateCachedShape();
90006c3a:	f00d faf5 	bl	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90006c3e:	2101      	movs	r1, #1
90006c40:	ee19 0a90 	vmov	r0, s19
90006c44:	f00d fbfc 	bl	90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90006c48:	ee19 1a90 	vmov	r1, s19
90006c4c:	4650      	mov	r0, sl
90006c4e:	f04f 0b00 	mov.w	fp, #0
90006c52:	f00b fe71 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006c56:	4b2c      	ldr	r3, [pc, #176]	; (90006d08 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        borderUp = borderColorReleased;
90006c58:	492c      	ldr	r1, [pc, #176]	; (90006d0c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        down = colorPressed;
90006c5a:	4a2d      	ldr	r2, [pc, #180]	; (90006d10 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>)
        borderUp = borderColorReleased;
90006c5c:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        borderDown = borderColorPressed;
90006c60:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006c64:	f894 02d4 	ldrb.w	r0, [r4, #724]	; 0x2d4
        borderDown = borderColorPressed;
90006c68:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006c6c:	e9c4 b3b8 	strd	fp, r3, [r4, #736]	; 0x2e0
        borderSize = size;
90006c70:	2305      	movs	r3, #5
90006c72:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
        handlePressedUpdated();
90006c76:	f8d4 12a8 	ldr.w	r1, [r4, #680]	; 0x2a8
90006c7a:	f8a4 330c 	strh.w	r3, [r4, #780]	; 0x30c
        down = colorPressed;
90006c7e:	4b25      	ldr	r3, [pc, #148]	; (90006d14 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>)
90006c80:	e9c4 32c4 	strd	r3, r2, [r4, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90006c84:	2800      	cmp	r0, #0
90006c86:	f000 857a 	beq.w	9000777e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x162a>
90006c8a:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006c8c:	f504 7247 	add.w	r2, r4, #796	; 0x31c
90006c90:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
90006c94:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006c96:	4e20      	ldr	r6, [pc, #128]	; (90006d18 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>)
90006c98:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
        alpha = newAlpha;
90006c9c:	2300      	movs	r3, #0
90006c9e:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
        handleAlphaUpdated();
90006ca2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006ca6:	42b2      	cmp	r2, r6
90006ca8:	f040 85b6 	bne.w	90007818 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16c4>
        alpha = newAlpha;
90006cac:	f884 3302 	strb.w	r3, [r4, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90006cb0:	f242 759c 	movw	r5, #10140	; 0x279c
90006cb4:	4b14      	ldr	r3, [pc, #80]	; (90006d08 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
90006cb6:	f8df c064 	ldr.w	ip, [pc, #100]	; 90006d1c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90006cba:	ee1a 1a10 	vmov	r1, s20
90006cbe:	4425      	add	r5, r4
90006cc0:	4650      	mov	r0, sl
90006cc2:	e9c4 c3ab 	strd	ip, r3, [r4, #684]	; 0x2ac
90006cc6:	e02b      	b.n	90006d20 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
90006cc8:	9002d9a0 	.word	0x9002d9a0
90006ccc:	9002d910 	.word	0x9002d910
90006cd0:	9002c0c0 	.word	0x9002c0c0
90006cd4:	9002cd50 	.word	0x9002cd50
90006cd8:	9002cf90 	.word	0x9002cf90
90006cdc:	90006051 	.word	0x90006051
90006ce0:	9002cfa8 	.word	0x9002cfa8
90006ce4:	90006039 	.word	0x90006039
90006ce8:	011001e0 	.word	0x011001e0
90006cec:	0007009c 	.word	0x0007009c
90006cf0:	0102000f 	.word	0x0102000f
90006cf4:	00070123 	.word	0x00070123
90006cf8:	004e0038 	.word	0x004e0038
90006cfc:	000f0167 	.word	0x000f0167
90006d00:	00b90038 	.word	0x00b90038
90006d04:	000f0166 	.word	0x000f0166
90006d08:	00470064 	.word	0x00470064
90006d0c:	ff003366 	.word	0xff003366
90006d10:	ff0099cc 	.word	0xff0099cc
90006d14:	ff006699 	.word	0xff006699
90006d18:	90004715 	.word	0x90004715
90006d1c:	00070038 	.word	0x00070038
        action = &callback;
90006d20:	f8c4 52d8 	str.w	r5, [r4, #728]	; 0x2d8
90006d24:	f00b fe08 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006d28:	4bd8      	ldr	r3, [pc, #864]	; (9000708c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderUp = borderColorReleased;
90006d2a:	49d9      	ldr	r1, [pc, #868]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006d2c:	f04f 0e00 	mov.w	lr, #0
        down = colorPressed;
90006d30:	4ad8      	ldr	r2, [pc, #864]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006d32:	f8c4 1390 	str.w	r1, [r4, #912]	; 0x390
        borderDown = borderColorPressed;
90006d36:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006d3a:	f894 034c 	ldrb.w	r0, [r4, #844]	; 0x34c
        borderDown = borderColorPressed;
90006d3e:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006d42:	e9c4 e3d6 	strd	lr, r3, [r4, #856]	; 0x358
        borderSize = size;
90006d46:	2305      	movs	r3, #5
90006d48:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
        handlePressedUpdated();
90006d4c:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
90006d50:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        down = colorPressed;
90006d54:	4bd0      	ldr	r3, [pc, #832]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006d56:	e9c4 32e2 	strd	r3, r2, [r4, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90006d5a:	2800      	cmp	r0, #0
90006d5c:	f000 850b 	beq.w	90007776 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1622>
        color = newColor;
90006d60:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006d62:	f504 7265 	add.w	r2, r4, #916	; 0x394
90006d66:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
90006d6a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006d6c:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        alpha = newAlpha;
90006d70:	2300      	movs	r3, #0
90006d72:	f884 334d 	strb.w	r3, [r4, #845]	; 0x34d
        handleAlphaUpdated();
90006d76:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006d7a:	42b2      	cmp	r2, r6
90006d7c:	f040 8548 	bne.w	90007810 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16bc>
        alpha = newAlpha;
90006d80:	f884 337a 	strb.w	r3, [r4, #890]	; 0x37a
90006d84:	4bc1      	ldr	r3, [pc, #772]	; (9000708c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90006d86:	2700      	movs	r7, #0
90006d88:	48c4      	ldr	r0, [pc, #784]	; (9000709c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90006d8a:	9902      	ldr	r1, [sp, #8]
        action = &callback;
90006d8c:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
90006d90:	e9c4 03c9 	strd	r0, r3, [r4, #804]	; 0x324
90006d94:	4650      	mov	r0, sl
90006d96:	f00b fdcf 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006d9a:	4bc1      	ldr	r3, [pc, #772]	; (900070a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90006d9c:	49bc      	ldr	r1, [pc, #752]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        down = colorPressed;
90006d9e:	4abd      	ldr	r2, [pc, #756]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006da0:	f8c4 1408 	str.w	r1, [r4, #1032]	; 0x408
        borderDown = borderColorPressed;
90006da4:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90006da8:	f894 03c4 	ldrb.w	r0, [r4, #964]	; 0x3c4
        borderDown = borderColorPressed;
90006dac:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006db0:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
90006db4:	e9c4 73f4 	strd	r7, r3, [r4, #976]	; 0x3d0
        borderSize = size;
90006db8:	2305      	movs	r3, #5
        borderDown = borderColorPressed;
90006dba:	f8c4 140c 	str.w	r1, [r4, #1036]	; 0x40c
        handlePressedUpdated();
90006dbe:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
90006dc2:	f8a4 33fc 	strh.w	r3, [r4, #1020]	; 0x3fc
        up = colorReleased;
90006dc6:	4bb4      	ldr	r3, [pc, #720]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90006dc8:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90006dcc:	2800      	cmp	r0, #0
90006dce:	f000 84ce 	beq.w	9000776e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x161a>
        color = newColor;
90006dd2:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006dd4:	f204 420c 	addw	r2, r4, #1036	; 0x40c
90006dd8:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
90006ddc:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006dde:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        alpha = newAlpha;
90006de2:	2300      	movs	r3, #0
90006de4:	f884 33c5 	strb.w	r3, [r4, #965]	; 0x3c5
        handleAlphaUpdated();
90006de8:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006dec:	42b2      	cmp	r2, r6
90006dee:	f040 850b 	bne.w	90007808 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16b4>
        alpha = newAlpha;
90006df2:	f884 33f2 	strb.w	r3, [r4, #1010]	; 0x3f2
90006df6:	4aab      	ldr	r2, [pc, #684]	; (900070a4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
90006df8:	4650      	mov	r0, sl
90006dfa:	4ba9      	ldr	r3, [pc, #676]	; (900070a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
90006dfc:	9903      	ldr	r1, [sp, #12]
        action = &callback;
90006dfe:	f8c4 53c8 	str.w	r5, [r4, #968]	; 0x3c8
90006e02:	e9c4 23e7 	strd	r2, r3, [r4, #924]	; 0x39c
90006e06:	f00b fd97 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e0a:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006e0c:	49a0      	ldr	r1, [pc, #640]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006e0e:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
90006e12:	4ba5      	ldr	r3, [pc, #660]	; (900070a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
90006e14:	f8c4 1480 	str.w	r1, [r4, #1152]	; 0x480
        borderDown = borderColorPressed;
90006e18:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006e1c:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
        borderSize = size;
90006e20:	2305      	movs	r3, #5
90006e22:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006e26:	4a9b      	ldr	r2, [pc, #620]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006e28:	f8a4 3474 	strh.w	r3, [r4, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90006e2c:	f894 043c 	ldrb.w	r0, [r4, #1084]	; 0x43c
        up = colorReleased;
90006e30:	4b99      	ldr	r3, [pc, #612]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006e32:	f8c4 1484 	str.w	r1, [r4, #1156]	; 0x484
        up = colorReleased;
90006e36:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        handlePressedUpdated();
90006e3a:	f8d4 1410 	ldr.w	r1, [r4, #1040]	; 0x410
        down = colorPressed;
90006e3e:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90006e42:	2800      	cmp	r0, #0
90006e44:	f000 848f 	beq.w	90007766 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1612>
        color = newColor;
90006e48:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006e4a:	f204 4284 	addw	r2, r4, #1156	; 0x484
90006e4e:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
90006e52:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006e54:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
        alpha = newAlpha;
90006e58:	2300      	movs	r3, #0
90006e5a:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
        handleAlphaUpdated();
90006e5e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006e62:	42b2      	cmp	r2, r6
90006e64:	f040 84cc 	bne.w	90007800 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ac>
        alpha = newAlpha;
90006e68:	f884 346a 	strb.w	r3, [r4, #1130]	; 0x46a
90006e6c:	4b8f      	ldr	r3, [pc, #572]	; (900070ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
90006e6e:	4650      	mov	r0, sl
90006e70:	9904      	ldr	r1, [sp, #16]
90006e72:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
90006e76:	4b8c      	ldr	r3, [pc, #560]	; (900070a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
        action = &callback;
90006e78:	f8c4 5440 	str.w	r5, [r4, #1088]	; 0x440
90006e7c:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
90006e80:	f00b fd5a 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006e84:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006e86:	4982      	ldr	r1, [pc, #520]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006e88:	f8c4 34c0 	str.w	r3, [r4, #1216]	; 0x4c0
90006e8c:	4b88      	ldr	r3, [pc, #544]	; (900070b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
90006e8e:	f8c4 14f8 	str.w	r1, [r4, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90006e92:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006e96:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        borderSize = size;
90006e9a:	2305      	movs	r3, #5
90006e9c:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006ea0:	4a7c      	ldr	r2, [pc, #496]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006ea2:	f8a4 34ec 	strh.w	r3, [r4, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90006ea6:	f894 04b4 	ldrb.w	r0, [r4, #1204]	; 0x4b4
        up = colorReleased;
90006eaa:	4b7b      	ldr	r3, [pc, #492]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006eac:	f8c4 14fc 	str.w	r1, [r4, #1276]	; 0x4fc
        up = colorReleased;
90006eb0:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
90006eb4:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
        down = colorPressed;
90006eb8:	f8c4 24f4 	str.w	r2, [r4, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90006ebc:	2800      	cmp	r0, #0
90006ebe:	f000 844e 	beq.w	9000775e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x160a>
        color = newColor;
90006ec2:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006ec4:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
90006ec8:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
90006ecc:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006ece:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        alpha = newAlpha;
90006ed2:	2300      	movs	r3, #0
90006ed4:	f884 34b5 	strb.w	r3, [r4, #1205]	; 0x4b5
        handleAlphaUpdated();
90006ed8:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006edc:	42b2      	cmp	r2, r6
90006ede:	f040 8479 	bne.w	900077d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1680>
        alpha = newAlpha;
90006ee2:	f884 34e2 	strb.w	r3, [r4, #1250]	; 0x4e2
90006ee6:	4b73      	ldr	r3, [pc, #460]	; (900070b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
90006ee8:	4650      	mov	r0, sl
90006eea:	9905      	ldr	r1, [sp, #20]
90006eec:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
90006ef0:	4b6f      	ldr	r3, [pc, #444]	; (900070b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
        action = &callback;
90006ef2:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
90006ef6:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
90006efa:	f00b fd1d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006efe:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006f00:	4963      	ldr	r1, [pc, #396]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006f02:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
90006f06:	4b6c      	ldr	r3, [pc, #432]	; (900070b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006f08:	f8c4 1570 	str.w	r1, [r4, #1392]	; 0x570
        borderDown = borderColorPressed;
90006f0c:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006f10:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
        borderSize = size;
90006f14:	2305      	movs	r3, #5
90006f16:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006f1a:	4a5e      	ldr	r2, [pc, #376]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006f1c:	f8a4 3564 	strh.w	r3, [r4, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90006f20:	f894 052c 	ldrb.w	r0, [r4, #1324]	; 0x52c
        up = colorReleased;
90006f24:	4b5c      	ldr	r3, [pc, #368]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderDown = borderColorPressed;
90006f26:	f8c4 1574 	str.w	r1, [r4, #1396]	; 0x574
        up = colorReleased;
90006f2a:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        handlePressedUpdated();
90006f2e:	f8d4 1500 	ldr.w	r1, [r4, #1280]	; 0x500
        down = colorPressed;
90006f32:	f8c4 256c 	str.w	r2, [r4, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90006f36:	2800      	cmp	r0, #0
90006f38:	f000 840d 	beq.w	90007756 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1602>
        color = newColor;
90006f3c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006f3e:	f204 5274 	addw	r2, r4, #1396	; 0x574
90006f42:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
90006f46:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90006f48:	f8c4 3560 	str.w	r3, [r4, #1376]	; 0x560
        alpha = newAlpha;
90006f4c:	2300      	movs	r3, #0
90006f4e:	f884 352d 	strb.w	r3, [r4, #1325]	; 0x52d
        handleAlphaUpdated();
90006f52:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006f56:	42b2      	cmp	r2, r6
90006f58:	f040 8438 	bne.w	900077cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1678>
        alpha = newAlpha;
90006f5c:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
90006f60:	4b56      	ldr	r3, [pc, #344]	; (900070bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf68>)
90006f62:	4650      	mov	r0, sl
90006f64:	4e54      	ldr	r6, [pc, #336]	; (900070b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006f66:	9906      	ldr	r1, [sp, #24]
90006f68:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        action = &callback;
90006f6c:	f8c4 5530 	str.w	r5, [r4, #1328]	; 0x530
90006f70:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006f74:	f00b fce0 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006f78:	4945      	ldr	r1, [pc, #276]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006f7a:	2300      	movs	r3, #0
        down = colorPressed;
90006f7c:	4a45      	ldr	r2, [pc, #276]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90006f7e:	f8c4 15e8 	str.w	r1, [r4, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90006f82:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006f86:	f8c4 35b0 	str.w	r3, [r4, #1456]	; 0x5b0
        borderSize = size;
90006f8a:	2305      	movs	r3, #5
90006f8c:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90006f90:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
90006f94:	f8a4 35dc 	strh.w	r3, [r4, #1500]	; 0x5dc
90006f98:	f8c4 15ec 	str.w	r1, [r4, #1516]	; 0x5ec
        up = colorReleased;
90006f9c:	4b3e      	ldr	r3, [pc, #248]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90006f9e:	f894 15a4 	ldrb.w	r1, [r4, #1444]	; 0x5a4
        up = colorReleased;
90006fa2:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
        down = colorPressed;
90006fa6:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
90006faa:	2900      	cmp	r1, #0
90006fac:	f000 83d0 	beq.w	90007750 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15fc>
        color = newColor;
90006fb0:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006fb2:	f204 52ec 	addw	r2, r4, #1516	; 0x5ec
90006fb6:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
        alpha = newAlpha;
90006fba:	2600      	movs	r6, #0
90006fbc:	6813      	ldr	r3, [r2, #0]
90006fbe:	4650      	mov	r0, sl
90006fc0:	9907      	ldr	r1, [sp, #28]
        borderColor = colorBorder;
90006fc2:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
90006fc6:	4b3e      	ldr	r3, [pc, #248]	; (900070c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
        action = &callback;
90006fc8:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
90006fcc:	f8c4 357c 	str.w	r3, [r4, #1404]	; 0x57c
90006fd0:	4b39      	ldr	r3, [pc, #228]	; (900070b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
        alpha = newAlpha;
90006fd2:	f884 65a5 	strb.w	r6, [r4, #1445]	; 0x5a5
90006fd6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        alpha = newAlpha;
90006fda:	f884 65d2 	strb.w	r6, [r4, #1490]	; 0x5d2
90006fde:	f00b fcab 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006fe2:	492b      	ldr	r1, [pc, #172]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90006fe4:	4b37      	ldr	r3, [pc, #220]	; (900070c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
90006fe6:	f8c4 1660 	str.w	r1, [r4, #1632]	; 0x660
        borderDown = borderColorPressed;
90006fea:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006fee:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        borderSize = size;
90006ff2:	2305      	movs	r3, #5
90006ff4:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90006ff8:	4a26      	ldr	r2, [pc, #152]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90006ffa:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
        borderDown = borderColorPressed;
90006ffe:	f8c4 1664 	str.w	r1, [r4, #1636]	; 0x664
        up = colorReleased;
90007002:	4b25      	ldr	r3, [pc, #148]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderBox.setColor(T::getPressed() ? down : up);
90007004:	f894 161c 	ldrb.w	r1, [r4, #1564]	; 0x61c
90007008:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
        up = colorReleased;
9000700c:	f8c4 3658 	str.w	r3, [r4, #1624]	; 0x658
        down = colorPressed;
90007010:	f8c4 265c 	str.w	r2, [r4, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
90007014:	2900      	cmp	r1, #0
90007016:	f000 8398 	beq.w	9000774a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f6>
        color = newColor;
9000701a:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000701c:	f204 6264 	addw	r2, r4, #1636	; 0x664
90007020:	f8c4 364c 	str.w	r3, [r4, #1612]	; 0x64c
90007024:	2600      	movs	r6, #0
90007026:	6813      	ldr	r3, [r2, #0]
90007028:	4650      	mov	r0, sl
9000702a:	4f26      	ldr	r7, [pc, #152]	; (900070c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
        borderColor = colorBorder;
9000702c:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
90007030:	4b25      	ldr	r3, [pc, #148]	; (900070c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>)
90007032:	9908      	ldr	r1, [sp, #32]
90007034:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
        action = &callback;
90007038:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        alpha = newAlpha;
9000703c:	f884 661d 	strb.w	r6, [r4, #1565]	; 0x61d
        alpha = newAlpha;
90007040:	f884 664a 	strb.w	r6, [r4, #1610]	; 0x64a
90007044:	f8c4 75f8 	str.w	r7, [r4, #1528]	; 0x5f8
90007048:	f00b fc76 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
9000704c:	4910      	ldr	r1, [pc, #64]	; (90007090 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
        borderSize = size;
9000704e:	2305      	movs	r3, #5
        down = colorPressed;
90007050:	4a10      	ldr	r2, [pc, #64]	; (90007094 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
        borderUp = borderColorReleased;
90007052:	f8c4 16d8 	str.w	r1, [r4, #1752]	; 0x6d8
        borderDown = borderColorPressed;
90007056:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000705a:	f8a4 36cc 	strh.w	r3, [r4, #1740]	; 0x6cc
9000705e:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        up = colorReleased;
90007062:	4b0d      	ldr	r3, [pc, #52]	; (90007098 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90007064:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
        borderDown = borderColorPressed;
90007068:	f8c4 16dc 	str.w	r1, [r4, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
9000706c:	f894 1694 	ldrb.w	r1, [r4, #1684]	; 0x694
90007070:	f8c4 76a4 	str.w	r7, [r4, #1700]	; 0x6a4
        up = colorReleased;
90007074:	f8c4 36d0 	str.w	r3, [r4, #1744]	; 0x6d0
        down = colorPressed;
90007078:	f8c4 26d4 	str.w	r2, [r4, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
9000707c:	2900      	cmp	r1, #0
9000707e:	f000 8361 	beq.w	90007744 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f0>
        color = newColor;
90007082:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90007084:	f204 62dc 	addw	r2, r4, #1756	; 0x6dc
90007088:	e020      	b.n	900070cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
9000708a:	bf00      	nop
9000708c:	00610064 	.word	0x00610064
90007090:	ff003366 	.word	0xff003366
90007094:	ff0099cc 	.word	0xff0099cc
90007098:	ff006699 	.word	0xff006699
9000709c:	00580038 	.word	0x00580038
900070a0:	00610070 	.word	0x00610070
900070a4:	0058012e 	.word	0x0058012e
900070a8:	0061007c 	.word	0x0061007c
900070ac:	005800a7 	.word	0x005800a7
900070b0:	00470064 	.word	0x00470064
900070b4:	00c20038 	.word	0x00c20038
900070b8:	0047007c 	.word	0x0047007c
900070bc:	000700a7 	.word	0x000700a7
900070c0:	00c200a7 	.word	0x00c200a7
900070c4:	00470071 	.word	0x00470071
900070c8:	0007012e 	.word	0x0007012e
900070cc:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
900070d0:	f04f 1650 	mov.w	r6, #5242960	; 0x500050
900070d4:	6813      	ldr	r3, [r2, #0]
900070d6:	f04f 0b05 	mov.w	fp, #5
        action = &callback;
900070da:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
        alpha = newAlpha;
900070de:	2500      	movs	r5, #0
        borderColor = colorBorder;
900070e0:	f8c4 36c8 	str.w	r3, [r4, #1736]	; 0x6c8
900070e4:	4650      	mov	r0, sl
900070e6:	4bf1      	ldr	r3, [pc, #964]	; (900074ac <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1358>)
900070e8:	4ff1      	ldr	r7, [pc, #964]	; (900074b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x135c>)
900070ea:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
900070ee:	4bf1      	ldr	r3, [pc, #964]	; (900074b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1360>)
900070f0:	9909      	ldr	r1, [sp, #36]	; 0x24
900070f2:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
900070f6:	f884 5695 	strb.w	r5, [r4, #1685]	; 0x695
        alpha = newAlpha;
900070fa:	f884 56c2 	strb.w	r5, [r4, #1730]	; 0x6c2
900070fe:	f00b fc1b 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007102:	4648      	mov	r0, r9
90007104:	a926      	add	r1, sp, #152	; 0x98
90007106:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
9000710a:	f00e fb7e 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000710e:	4648      	mov	r0, r9
90007110:	4629      	mov	r1, r5
90007112:	f8c4 76e4 	str.w	r7, [r4, #1764]	; 0x6e4
90007116:	f8c4 66e8 	str.w	r6, [r4, #1768]	; 0x6e8
9000711a:	f00d faf6 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000711e:	4649      	mov	r1, r9
90007120:	4650      	mov	r0, sl
        visible = vis;
90007122:	f884 5705 	strb.w	r5, [r4, #1797]	; 0x705
90007126:	f00b fc07 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000712a:	ed9d 8a0a 	vldr	s16, [sp, #40]	; 0x28
9000712e:	f04f 0906 	mov.w	r9, #6
90007132:	a926      	add	r1, sp, #152	; 0x98
90007134:	ee18 0a10 	vmov	r0, s16
90007138:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000713c:	f00e fb65 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007140:	ee18 0a10 	vmov	r0, s16
90007144:	4629      	mov	r1, r5
        rect.x = x;
90007146:	f8c4 7710 	str.w	r7, [r4, #1808]	; 0x710
9000714a:	377a      	adds	r7, #122	; 0x7a
9000714c:	f8c4 6714 	str.w	r6, [r4, #1812]	; 0x714
90007150:	f00d fadb 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007154:	ee18 1a10 	vmov	r1, s16
90007158:	4650      	mov	r0, sl
        visible = vis;
9000715a:	f884 5731 	strb.w	r5, [r4, #1841]	; 0x731
9000715e:	f00b fbeb 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007162:	ed9d 8a0b 	vldr	s16, [sp, #44]	; 0x2c
90007166:	a926      	add	r1, sp, #152	; 0x98
90007168:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000716c:	ee18 0a10 	vmov	r0, s16
90007170:	f00e fb4b 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007174:	ee18 0a10 	vmov	r0, s16
90007178:	4629      	mov	r1, r5
        rect.x = x;
9000717a:	f8c4 773c 	str.w	r7, [r4, #1852]	; 0x73c
9000717e:	f8c4 6740 	str.w	r6, [r4, #1856]	; 0x740
90007182:	f00d fac2 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007186:	ee18 1a10 	vmov	r1, s16
9000718a:	4650      	mov	r0, sl
        visible = vis;
9000718c:	f884 575d 	strb.w	r5, [r4, #1885]	; 0x75d
90007190:	f00b fbd2 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007194:	ed9d 8a0c 	vldr	s16, [sp, #48]	; 0x30
90007198:	a926      	add	r1, sp, #152	; 0x98
9000719a:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
9000719e:	ee18 0a10 	vmov	r0, s16
900071a2:	f00e fb32 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071a6:	ee18 0a10 	vmov	r0, s16
900071aa:	4629      	mov	r1, r5
        rect.x = x;
900071ac:	f8c4 7768 	str.w	r7, [r4, #1896]	; 0x768
900071b0:	f8c4 676c 	str.w	r6, [r4, #1900]	; 0x76c
900071b4:	3776      	adds	r7, #118	; 0x76
900071b6:	f00d faa8 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071ba:	ee18 1a10 	vmov	r1, s16
900071be:	4650      	mov	r0, sl
        visible = vis;
900071c0:	f884 5789 	strb.w	r5, [r4, #1929]	; 0x789
900071c4:	f00b fbb8 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900071c8:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
900071cc:	a926      	add	r1, sp, #152	; 0x98
900071ce:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
900071d2:	ee18 0a10 	vmov	r0, s16
900071d6:	f00e fb18 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900071da:	ee18 0a10 	vmov	r0, s16
900071de:	4629      	mov	r1, r5
        rect.x = x;
900071e0:	f8c4 7794 	str.w	r7, [r4, #1940]	; 0x794
900071e4:	f8c4 6798 	str.w	r6, [r4, #1944]	; 0x798
900071e8:	f00d fa8f 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900071ec:	ee18 1a10 	vmov	r1, s16
900071f0:	4650      	mov	r0, sl
        visible = vis;
900071f2:	f884 57b5 	strb.w	r5, [r4, #1973]	; 0x7b5
900071f6:	f00b fb9f 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900071fa:	ed9d 8a0e 	vldr	s16, [sp, #56]	; 0x38
900071fe:	a926      	add	r1, sp, #152	; 0x98
90007200:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
90007204:	ee18 0a10 	vmov	r0, s16
90007208:	f00e faff 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000720c:	ee18 0a10 	vmov	r0, s16
90007210:	4629      	mov	r1, r5
        rect.x = x;
90007212:	f8c4 77c0 	str.w	r7, [r4, #1984]	; 0x7c0
90007216:	f8c4 67c4 	str.w	r6, [r4, #1988]	; 0x7c4
9000721a:	f00d fa76 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000721e:	ee18 1a10 	vmov	r1, s16
90007222:	4650      	mov	r0, sl
        visible = vis;
90007224:	f884 57e1 	strb.w	r5, [r4, #2017]	; 0x7e1
90007228:	f00b fb86 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000722c:	ed9d 8a0f 	vldr	s16, [sp, #60]	; 0x3c
        rect.x = x;
90007230:	4fa1      	ldr	r7, [pc, #644]	; (900074b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1364>)
90007232:	a926      	add	r1, sp, #152	; 0x98
90007234:	ee18 0a10 	vmov	r0, s16
90007238:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000723c:	f00e fae5 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007240:	ee18 0a10 	vmov	r0, s16
90007244:	4629      	mov	r1, r5
90007246:	f8c4 77ec 	str.w	r7, [r4, #2028]	; 0x7ec
9000724a:	f8c4 67f0 	str.w	r6, [r4, #2032]	; 0x7f0
9000724e:	f00d fa5c 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007252:	ee18 1a10 	vmov	r1, s16
90007256:	4650      	mov	r0, sl
        visible = vis;
90007258:	f884 580d 	strb.w	r5, [r4, #2061]	; 0x80d
9000725c:	f00b fb6c 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90007260:	ed9d 8a10 	vldr	s16, [sp, #64]	; 0x40
90007264:	a926      	add	r1, sp, #152	; 0x98
90007266:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
9000726a:	ee18 0a10 	vmov	r0, s16
9000726e:	f00e facc 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007272:	ee18 0a10 	vmov	r0, s16
90007276:	4629      	mov	r1, r5
        rect.x = x;
90007278:	f8c4 7818 	str.w	r7, [r4, #2072]	; 0x818
9000727c:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
90007280:	377a      	adds	r7, #122	; 0x7a
90007282:	f00d fa42 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007286:	ee18 1a10 	vmov	r1, s16
9000728a:	4650      	mov	r0, sl
        visible = vis;
9000728c:	f884 5839 	strb.w	r5, [r4, #2105]	; 0x839
90007290:	f00b fb52 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007294:	ed9d 8a11 	vldr	s16, [sp, #68]	; 0x44
90007298:	a926      	add	r1, sp, #152	; 0x98
9000729a:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000729e:	ee18 0a10 	vmov	r0, s16
900072a2:	f00e fab2 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072a6:	ee18 0a10 	vmov	r0, s16
900072aa:	4629      	mov	r1, r5
        rect.x = x;
900072ac:	f8c4 7844 	str.w	r7, [r4, #2116]	; 0x844
900072b0:	f8c4 6848 	str.w	r6, [r4, #2120]	; 0x848
900072b4:	f00d fa29 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072b8:	ee18 1a10 	vmov	r1, s16
900072bc:	4650      	mov	r0, sl
        visible = vis;
900072be:	f884 5865 	strb.w	r5, [r4, #2149]	; 0x865
900072c2:	f00b fb39 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900072c6:	ed9d 8a12 	vldr	s16, [sp, #72]	; 0x48
900072ca:	a926      	add	r1, sp, #152	; 0x98
900072cc:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
900072d0:	ee18 0a10 	vmov	r0, s16
900072d4:	f00e fa99 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900072d8:	ee18 0a10 	vmov	r0, s16
900072dc:	4629      	mov	r1, r5
        rect.x = x;
900072de:	f8c4 7870 	str.w	r7, [r4, #2160]	; 0x870
900072e2:	f8c4 6874 	str.w	r6, [r4, #2164]	; 0x874
900072e6:	3776      	adds	r7, #118	; 0x76
900072e8:	f00d fa0f 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900072ec:	ee18 1a10 	vmov	r1, s16
900072f0:	4650      	mov	r0, sl
        visible = vis;
900072f2:	f884 5891 	strb.w	r5, [r4, #2193]	; 0x891
900072f6:	f00b fb1f 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900072fa:	ed9d 8a13 	vldr	s16, [sp, #76]	; 0x4c
900072fe:	a926      	add	r1, sp, #152	; 0x98
90007300:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
90007304:	ee18 0a10 	vmov	r0, s16
90007308:	f00e fa7f 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000730c:	ee18 0a10 	vmov	r0, s16
90007310:	4629      	mov	r1, r5
        rect.x = x;
90007312:	f8c4 789c 	str.w	r7, [r4, #2204]	; 0x89c
90007316:	f8c4 68a0 	str.w	r6, [r4, #2208]	; 0x8a0
9000731a:	f00d f9f6 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000731e:	ee18 1a10 	vmov	r1, s16
90007322:	4650      	mov	r0, sl
        visible = vis;
90007324:	f884 58bd 	strb.w	r5, [r4, #2237]	; 0x8bd
90007328:	f00b fb06 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000732c:	ed9d 8a14 	vldr	s16, [sp, #80]	; 0x50
90007330:	a926      	add	r1, sp, #152	; 0x98
90007332:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
90007336:	ee18 0a10 	vmov	r0, s16
9000733a:	f00e fa66 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000733e:	ee18 0a10 	vmov	r0, s16
90007342:	4629      	mov	r1, r5
        rect.x = x;
90007344:	f8c4 78c8 	str.w	r7, [r4, #2248]	; 0x8c8
90007348:	f8c4 68cc 	str.w	r6, [r4, #2252]	; 0x8cc
9000734c:	f00d f9dd 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007350:	ee18 1a10 	vmov	r1, s16
90007354:	4650      	mov	r0, sl
        visible = vis;
90007356:	f884 58e9 	strb.w	r5, [r4, #2281]	; 0x8e9
9000735a:	f00b faed 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000735e:	ed9d 8a15 	vldr	s16, [sp, #84]	; 0x54
        rect.x = x;
90007362:	4f56      	ldr	r7, [pc, #344]	; (900074bc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1368>)
90007364:	a926      	add	r1, sp, #152	; 0x98
90007366:	ee18 0a10 	vmov	r0, s16
9000736a:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
9000736e:	f00e fa4c 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90007372:	ee18 0a10 	vmov	r0, s16
90007376:	4629      	mov	r1, r5
90007378:	f8c4 78f4 	str.w	r7, [r4, #2292]	; 0x8f4
9000737c:	f8c4 68f8 	str.w	r6, [r4, #2296]	; 0x8f8
90007380:	f00d f9c3 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007384:	ee18 1a10 	vmov	r1, s16
90007388:	4650      	mov	r0, sl
        visible = vis;
9000738a:	f884 5915 	strb.w	r5, [r4, #2325]	; 0x915
9000738e:	f00b fad3 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90007392:	ed9d 8a16 	vldr	s16, [sp, #88]	; 0x58
90007396:	a926      	add	r1, sp, #152	; 0x98
90007398:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
9000739c:	ee18 0a10 	vmov	r0, s16
900073a0:	f00e fa33 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900073a4:	ee18 0a10 	vmov	r0, s16
900073a8:	4629      	mov	r1, r5
        rect.x = x;
900073aa:	f8c4 7920 	str.w	r7, [r4, #2336]	; 0x920
900073ae:	f8c4 6924 	str.w	r6, [r4, #2340]	; 0x924
900073b2:	377e      	adds	r7, #126	; 0x7e
900073b4:	f00d f9a9 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900073b8:	ee18 1a10 	vmov	r1, s16
900073bc:	4650      	mov	r0, sl
        visible = vis;
900073be:	f884 5941 	strb.w	r5, [r4, #2369]	; 0x941
900073c2:	f00b fab9 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900073c6:	ed9d 8a17 	vldr	s16, [sp, #92]	; 0x5c
900073ca:	a926      	add	r1, sp, #152	; 0x98
900073cc:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
900073d0:	ee18 0a10 	vmov	r0, s16
900073d4:	f00e fa19 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900073d8:	ee18 0a10 	vmov	r0, s16
900073dc:	4629      	mov	r1, r5
        rect.x = x;
900073de:	f8c4 794c 	str.w	r7, [r4, #2380]	; 0x94c
900073e2:	f8c4 6950 	str.w	r6, [r4, #2384]	; 0x950
900073e6:	f00d f990 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900073ea:	ee18 1a10 	vmov	r1, s16
900073ee:	4650      	mov	r0, sl
        visible = vis;
900073f0:	f884 596d 	strb.w	r5, [r4, #2413]	; 0x96d
900073f4:	f00b faa0 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900073f8:	ed9d 8a18 	vldr	s16, [sp, #96]	; 0x60
900073fc:	a926      	add	r1, sp, #152	; 0x98
900073fe:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
90007402:	ee18 0a10 	vmov	r0, s16
90007406:	f00e fa00 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000740a:	ee18 0a10 	vmov	r0, s16
9000740e:	4629      	mov	r1, r5
        rect.x = x;
90007410:	f8c4 7978 	str.w	r7, [r4, #2424]	; 0x978
90007414:	f8c4 697c 	str.w	r6, [r4, #2428]	; 0x97c
90007418:	3772      	adds	r7, #114	; 0x72
9000741a:	f00d f976 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000741e:	ee18 1a10 	vmov	r1, s16
90007422:	4650      	mov	r0, sl
        visible = vis;
90007424:	f884 5999 	strb.w	r5, [r4, #2457]	; 0x999
90007428:	f00b fa86 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000742c:	ed9d 8a19 	vldr	s16, [sp, #100]	; 0x64
90007430:	a926      	add	r1, sp, #152	; 0x98
90007432:	f8ad b098 	strh.w	fp, [sp, #152]	; 0x98
90007436:	ee18 0a10 	vmov	r0, s16
9000743a:	f00e f9e6 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000743e:	4629      	mov	r1, r5
90007440:	ee18 0a10 	vmov	r0, s16
        rect.x = x;
90007444:	f8c4 79a4 	str.w	r7, [r4, #2468]	; 0x9a4
90007448:	f8c4 69a8 	str.w	r6, [r4, #2472]	; 0x9a8
9000744c:	f00d f95d 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90007450:	ee18 1a10 	vmov	r1, s16
90007454:	4650      	mov	r0, sl
        visible = vis;
90007456:	f884 59c5 	strb.w	r5, [r4, #2501]	; 0x9c5
9000745a:	f00b fa6d 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000745e:	4640      	mov	r0, r8
90007460:	a926      	add	r1, sp, #152	; 0x98
90007462:	f8ad 9098 	strh.w	r9, [sp, #152]	; 0x98
90007466:	f00e f9d0 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000746a:	4640      	mov	r0, r8
9000746c:	4629      	mov	r1, r5
        rect.x = x;
9000746e:	f8c4 79d0 	str.w	r7, [r4, #2512]	; 0x9d0
90007472:	f8c4 69d4 	str.w	r6, [r4, #2516]	; 0x9d4
    lbl_result.setPosition(100, 142, 258, 24);
90007476:	f604 27a8 	addw	r7, r4, #2728	; 0xaa8
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000747a:	f00d f946 	bl	9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000747e:	4641      	mov	r1, r8
90007480:	4650      	mov	r0, sl
        visible = vis;
90007482:	f884 59f1 	strb.w	r5, [r4, #2545]	; 0x9f1
90007486:	f00b fa57 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000748a:	4b0d      	ldr	r3, [pc, #52]	; (900074c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x136c>)
9000748c:	f604 11f8 	addw	r1, r4, #2552	; 0x9f8
90007490:	4650      	mov	r0, sl
90007492:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
        boundingArea = calculateBoundingArea();
90007496:	f10d 0878 	add.w	r8, sp, #120	; 0x78
9000749a:	4b0a      	ldr	r3, [pc, #40]	; (900074c4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1370>)
        boundingArea = calculateBoundingArea();
9000749c:	f604 26e4 	addw	r6, r4, #2788	; 0xae4
        visible = vis;
900074a0:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
        rect.x = x;
900074a4:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
900074a8:	e00e      	b.n	900074c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1374>
900074aa:	bf00      	nop
900074ac:	00c2012e 	.word	0x00c2012e
900074b0:	fffe0042 	.word	0xfffe0042
900074b4:	00470071 	.word	0x00470071
900074b8:	00600042 	.word	0x00600042
900074bc:	00c30042 	.word	0x00c30042
900074c0:	003f006a 	.word	0x003f006a
900074c4:	00980110 	.word	0x00980110
        color = newColor;
900074c8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900074cc:	f8c4 3a20 	str.w	r3, [r4, #2592]	; 0xa20
900074d0:	f00b fa32 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900074d4:	4bc1      	ldr	r3, [pc, #772]	; (900077dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1688>)
        boundingArea = calculateBoundingArea();
900074d6:	ee1a 1a90 	vmov	r1, s21
900074da:	4640      	mov	r0, r8
900074dc:	f8c4 3a28 	str.w	r3, [r4, #2600]	; 0xa28
        color = newColor;
900074e0:	4bbf      	ldr	r3, [pc, #764]	; (900077e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x168c>)
        linespace = space;
900074e2:	f8a4 5a58 	strh.w	r5, [r4, #2648]	; 0xa58
        color = newColor;
900074e6:	f8c4 3a54 	str.w	r3, [r4, #2644]	; 0xa54
        boundingArea = calculateBoundingArea();
900074ea:	f00d fbfd 	bl	90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900074ee:	4abd      	ldr	r2, [pc, #756]	; (900077e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
900074f0:	ee1a 3a90 	vmov	r3, s21
900074f4:	9226      	str	r2, [sp, #152]	; 0x98
900074f6:	2209      	movs	r2, #9
900074f8:	333c      	adds	r3, #60	; 0x3c
900074fa:	f8ad 209c 	strh.w	r2, [sp, #156]	; 0x9c
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900074fe:	f504 6234 	add.w	r2, r4, #2880	; 0xb40
90007502:	9202      	str	r2, [sp, #8]
90007504:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90007508:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
9000750c:	a926      	add	r1, sp, #152	; 0x98
9000750e:	ee1a 0a90 	vmov	r0, s21
90007512:	f00d fe91 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90007516:	ee1a 1a90 	vmov	r1, s21
9000751a:	4650      	mov	r0, sl
        visible = vis;
9000751c:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
90007520:	f00b fa0a 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90007524:	ab26      	add	r3, sp, #152	; 0x98
90007526:	aa24      	add	r2, sp, #144	; 0x90
90007528:	a923      	add	r1, sp, #140	; 0x8c
9000752a:	9300      	str	r3, [sp, #0]
        rect.x = x;
9000752c:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
90007530:	ee1b 0a10 	vmov	r0, s22
90007534:	f8ad 508c 	strh.w	r5, [sp, #140]	; 0x8c
90007538:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
9000753c:	230c      	movs	r3, #12
9000753e:	f8ad 3094 	strh.w	r3, [sp, #148]	; 0x94
90007542:	f8ad 3098 	strh.w	r3, [sp, #152]	; 0x98
90007546:	2301      	movs	r3, #1
90007548:	f8ad 3090 	strh.w	r3, [sp, #144]	; 0x90
9000754c:	ab25      	add	r3, sp, #148	; 0x94
9000754e:	f00e f89f 	bl	90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_back.setAction(buttonCallback);
90007552:	f242 73ac 	movw	r3, #10156	; 0x27ac
90007556:	ee1b 1a10 	vmov	r1, s22
9000755a:	4650      	mov	r0, sl
9000755c:	4423      	add	r3, r4
        visible = vis;
9000755e:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90007562:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
90007566:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
9000756a:	f8c4 3aa4 	str.w	r3, [r4, #2724]	; 0xaa4
9000756e:	f00b f9e3 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90007572:	4b9d      	ldr	r3, [pc, #628]	; (900077e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1694>)
        boundingArea = calculateBoundingArea();
90007574:	4639      	mov	r1, r7
90007576:	4640      	mov	r0, r8
90007578:	f8c4 3aac 	str.w	r3, [r4, #2732]	; 0xaac
        rect.width = width;
9000757c:	f44f 7381 	mov.w	r3, #258	; 0x102
90007580:	f8a4 3ab0 	strh.w	r3, [r4, #2736]	; 0xab0
90007584:	f7fd fc08 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
90007588:	2318      	movs	r3, #24
9000758a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
9000758e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90007592:	4639      	mov	r1, r7
90007594:	4640      	mov	r0, r8
90007596:	f8a4 3ab2 	strh.w	r3, [r4, #2738]	; 0xab2
9000759a:	f7fd fbfd 	bl	90004d98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000759e:	4b93      	ldr	r3, [pc, #588]	; (900077ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
900075a0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
900075a4:	681b      	ldr	r3, [r3, #0]
900075a6:	e886 0007 	stmia.w	r6, {r0, r1, r2}
        color = newColor;
900075aa:	f04f 32ff 	mov.w	r2, #4294967295
        linespace = space;
900075ae:	f8a4 5adc 	strh.w	r5, [r4, #2780]	; 0xadc
        boundingArea = calculateBoundingArea();
900075b2:	f8c4 5ae4 	str.w	r5, [r4, #2788]	; 0xae4
        color = newColor;
900075b6:	f8c4 2ad8 	str.w	r2, [r4, #2776]	; 0xad8
        boundingArea = calculateBoundingArea();
900075ba:	f8c4 2ae8 	str.w	r2, [r4, #2792]	; 0xae8
900075be:	f8c4 5aec 	str.w	r5, [r4, #2796]	; 0xaec
900075c2:	2b00      	cmp	r3, #0
900075c4:	f000 812d 	beq.w	90007822 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ce>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900075c8:	4b89      	ldr	r3, [pc, #548]	; (900077f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
900075ca:	881b      	ldrh	r3, [r3, #0]
900075cc:	2b07      	cmp	r3, #7
900075ce:	f240 812e 	bls.w	9000782e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16da>
        return texts->getText(typedTextId);
900075d2:	4e88      	ldr	r6, [pc, #544]	; (900077f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a0>)
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
900075d4:	f604 3368 	addw	r3, r4, #2920	; 0xb68
900075d8:	2107      	movs	r1, #7
    lbl_turn.setXY(337, 0);
900075da:	f604 28f4 	addw	r8, r4, #2804	; 0xaf4
900075de:	6830      	ldr	r0, [r6, #0]
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
900075e0:	9303      	str	r3, [sp, #12]
900075e2:	f7fd f831 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900075e6:	4a84      	ldr	r2, [pc, #528]	; (900077f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a4>)
900075e8:	4603      	mov	r3, r0
900075ea:	2114      	movs	r1, #20
900075ec:	9802      	ldr	r0, [sp, #8]
900075ee:	f013 feeb 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
900075f2:	9b02      	ldr	r3, [sp, #8]
    lbl_result.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOP9));
900075f4:	a926      	add	r1, sp, #152	; 0x98
900075f6:	4638      	mov	r0, r7
900075f8:	f8c4 3af0 	str.w	r3, [r4, #2800]	; 0xaf0
        : typedTextId(id)
900075fc:	4b79      	ldr	r3, [pc, #484]	; (900077e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
900075fe:	9326      	str	r3, [sp, #152]	; 0x98
90007600:	2308      	movs	r3, #8
90007602:	f8ad 309c 	strh.w	r3, [sp, #156]	; 0x9c
90007606:	f00d fe17 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000760a:	4639      	mov	r1, r7
9000760c:	4650      	mov	r0, sl
        visible = vis;
9000760e:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90007612:	f00b f991 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007616:	4a75      	ldr	r2, [pc, #468]	; (900077ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1698>)
        linespace = space;
90007618:	f8a4 5b28 	strh.w	r5, [r4, #2856]	; 0xb28
9000761c:	6813      	ldr	r3, [r2, #0]
        color = newColor;
9000761e:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
90007622:	f8c4 5b30 	str.w	r5, [r4, #2864]	; 0xb30
        color = newColor;
90007626:	f8c4 2b24 	str.w	r2, [r4, #2852]	; 0xb24
        boundingArea = calculateBoundingArea();
9000762a:	f8c4 2b34 	str.w	r2, [r4, #2868]	; 0xb34
        rect.x = x;
9000762e:	f240 1251 	movw	r2, #337	; 0x151
90007632:	f8c4 5b38 	str.w	r5, [r4, #2872]	; 0xb38
90007636:	f8c4 2af8 	str.w	r2, [r4, #2808]	; 0xaf8
9000763a:	2b00      	cmp	r3, #0
9000763c:	f000 80f1 	beq.w	90007822 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ce>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90007640:	4a6b      	ldr	r2, [pc, #428]	; (900077f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x169c>)
90007642:	8813      	ldrh	r3, [r2, #0]
90007644:	2b05      	cmp	r3, #5
90007646:	f240 80f2 	bls.w	9000782e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16da>
        return texts->getText(typedTextId);
9000764a:	4659      	mov	r1, fp
9000764c:	6830      	ldr	r0, [r6, #0]
9000764e:	f7fc fffb 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_29C0).getText());
90007652:	9d03      	ldr	r5, [sp, #12]
90007654:	4a68      	ldr	r2, [pc, #416]	; (900077f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a4>)
90007656:	4603      	mov	r3, r0
90007658:	210a      	movs	r1, #10
9000765a:	4628      	mov	r0, r5
9000765c:	f013 feb4 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_turn.resizeToCurrentText();
90007660:	4640      	mov	r0, r8
90007662:	f8c4 5b3c 	str.w	r5, [r4, #2876]	; 0xb3c
90007666:	f00d fdc7 	bl	900151f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
9000766a:	4b5e      	ldr	r3, [pc, #376]	; (900077e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1690>)
    lbl_turn.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3N5W));
9000766c:	a926      	add	r1, sp, #152	; 0x98
9000766e:	4640      	mov	r0, r8
90007670:	9326      	str	r3, [sp, #152]	; 0x98
90007672:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
90007676:	f00d fddf 	bl	90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
9000767a:	235f      	movs	r3, #95	; 0x5f
9000767c:	4650      	mov	r0, sl
9000767e:	4641      	mov	r1, r8
90007680:	f884 3b2a 	strb.w	r3, [r4, #2858]	; 0xb2a
90007684:	f00b f958 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90007688:	4620      	mov	r0, r4
9000768a:	b029      	add	sp, #164	; 0xa4
9000768c:	ecbd 8b08 	vpop	{d8-d11}
90007690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007694:	6898      	ldr	r0, [r3, #8]
90007696:	4d59      	ldr	r5, [pc, #356]	; (900077fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16a8>)
90007698:	6803      	ldr	r3, [r0, #0]
9000769a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000769c:	42aa      	cmp	r2, r5
9000769e:	f43e add6 	beq.w	9000624e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900076a2:	f7fe bda0 	b.w	900061e6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900076a6:	6898      	ldr	r0, [r3, #8]
900076a8:	6802      	ldr	r2, [r0, #0]
900076aa:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900076ac:	42aa      	cmp	r2, r5
900076ae:	d16a      	bne.n	90007786 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1632>
        return auxiliaryLCD;
900076b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900076b2:	2800      	cmp	r0, #0
900076b4:	f43e adf1 	beq.w	9000629a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
900076b8:	6803      	ldr	r3, [r0, #0]
900076ba:	f04f 0b01 	mov.w	fp, #1
900076be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900076c0:	42ab      	cmp	r3, r5
900076c2:	f43e adea 	beq.w	9000629a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900076c6:	4798      	blx	r3
900076c8:	2800      	cmp	r0, #0
900076ca:	bf08      	it	eq
900076cc:	f04b 0b01 	orreq.w	fp, fp, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900076d0:	f1bb 0f00 	cmp.w	fp, #0
900076d4:	f47e ade1 	bne.w	9000629a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
900076d8:	f7fe bd96 	b.w	90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
900076dc:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900076de:	6802      	ldr	r2, [r0, #0]
900076e0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900076e2:	42aa      	cmp	r2, r5
900076e4:	d166      	bne.n	900077b4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1660>
        return auxiliaryLCD;
900076e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900076e8:	2800      	cmp	r0, #0
900076ea:	f43e adf9 	beq.w	900062e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
900076ee:	6803      	ldr	r3, [r0, #0]
900076f0:	f04f 0b01 	mov.w	fp, #1
900076f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900076f6:	42ab      	cmp	r3, r5
900076f8:	f43e adf2 	beq.w	900062e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
900076fc:	4798      	blx	r3
900076fe:	2800      	cmp	r0, #0
90007700:	bf08      	it	eq
90007702:	f04b 0b01 	orreq.w	fp, fp, #1
90007706:	f1bb 0f00 	cmp.w	fp, #0
9000770a:	f47e ade9 	bne.w	900062e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
9000770e:	f7fe bd7b 	b.w	90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90007712:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90007714:	6802      	ldr	r2, [r0, #0]
90007716:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90007718:	42aa      	cmp	r2, r5
9000771a:	d140      	bne.n	9000779e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x164a>
        return auxiliaryLCD;
9000771c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000771e:	2800      	cmp	r0, #0
90007720:	f43e ae01 	beq.w	90006326 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007724:	6803      	ldr	r3, [r0, #0]
90007726:	2701      	movs	r7, #1
90007728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000772a:	42ab      	cmp	r3, r5
9000772c:	f43e adfb 	beq.w	90006326 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90007730:	4798      	blx	r3
90007732:	2800      	cmp	r0, #0
90007734:	bf08      	it	eq
90007736:	f047 0701 	orreq.w	r7, r7, #1
9000773a:	2f00      	cmp	r7, #0
9000773c:	f47e adf3 	bne.w	90006326 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90007740:	f7fe bd62 	b.w	90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
90007744:	f504 62db 	add.w	r2, r4, #1752	; 0x6d8
90007748:	e4c0      	b.n	900070cc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>
9000774a:	f504 62cc 	add.w	r2, r4, #1632	; 0x660
9000774e:	e467      	b.n	90007020 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xecc>
90007750:	f504 62bd 	add.w	r2, r4, #1512	; 0x5e8
90007754:	e42f      	b.n	90006fb6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe62>
90007756:	f504 62ae 	add.w	r2, r4, #1392	; 0x570
9000775a:	f7ff bbf2 	b.w	90006f42 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdee>
9000775e:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
90007762:	f7ff bbb1 	b.w	90006ec8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd74>
90007766:	f504 6290 	add.w	r2, r4, #1152	; 0x480
9000776a:	f7ff bb70 	b.w	90006e4e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcfa>
9000776e:	f504 6281 	add.w	r2, r4, #1032	; 0x408
90007772:	f7ff bb31 	b.w	90006dd8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc84>
90007776:	f504 7264 	add.w	r2, r4, #912	; 0x390
9000777a:	f7ff baf4 	b.w	90006d66 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc12>
9000777e:	f504 7246 	add.w	r2, r4, #792	; 0x318
90007782:	f7ff ba85 	b.w	90006c90 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb3c>
        bool compat = HAL::lcd().framebufferFormat() == format;
90007786:	4790      	blx	r2
90007788:	683b      	ldr	r3, [r7, #0]
9000778a:	fab0 fb80 	clz	fp, r0
9000778e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90007790:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90007794:	2800      	cmp	r0, #0
90007796:	d09b      	beq.n	900076d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x157c>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90007798:	6803      	ldr	r3, [r0, #0]
9000779a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000779c:	e790      	b.n	900076c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x156c>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000779e:	4790      	blx	r2
900077a0:	683b      	ldr	r3, [r7, #0]
900077a2:	fab0 f780 	clz	r7, r0
900077a6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900077a8:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900077aa:	2800      	cmp	r0, #0
900077ac:	d0c5      	beq.n	9000773a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e6>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900077ae:	6803      	ldr	r3, [r0, #0]
900077b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900077b2:	e7ba      	b.n	9000772a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d6>
        bool compat = HAL::lcd().framebufferFormat() == format;
900077b4:	4790      	blx	r2
900077b6:	683b      	ldr	r3, [r7, #0]
900077b8:	fab0 fb80 	clz	fp, r0
900077bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900077be:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900077c2:	2800      	cmp	r0, #0
900077c4:	d09f      	beq.n	90007706 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15b2>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900077c6:	6803      	ldr	r3, [r0, #0]
900077c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900077ca:	e794      	b.n	900076f6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15a2>
        handleAlphaUpdated();
900077cc:	9806      	ldr	r0, [sp, #24]
900077ce:	4790      	blx	r2
900077d0:	f7ff bbc6 	b.w	90006f60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0c>
900077d4:	9805      	ldr	r0, [sp, #20]
900077d6:	4790      	blx	r2
900077d8:	f7ff bb85 	b.w	90006ee6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd92>
900077dc:	00550076 	.word	0x00550076
900077e0:	ffff0000 	.word	0xffff0000
900077e4:	9002c0c0 	.word	0x9002c0c0
900077e8:	008e0064 	.word	0x008e0064
900077ec:	24039b24 	.word	0x24039b24
900077f0:	24039b28 	.word	0x24039b28
900077f4:	24039b30 	.word	0x24039b30
900077f8:	9002cd44 	.word	0x9002cd44
900077fc:	90002331 	.word	0x90002331
90007800:	9804      	ldr	r0, [sp, #16]
90007802:	4790      	blx	r2
90007804:	f7ff bb32 	b.w	90006e6c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd18>
90007808:	9803      	ldr	r0, [sp, #12]
9000780a:	4790      	blx	r2
9000780c:	f7ff baf3 	b.w	90006df6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xca2>
90007810:	9802      	ldr	r0, [sp, #8]
90007812:	4790      	blx	r2
90007814:	f7ff bab6 	b.w	90006d84 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc30>
90007818:	ee1a 0a10 	vmov	r0, s20
9000781c:	4790      	blx	r2
9000781e:	f7ff ba47 	b.w	90006cb0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb5c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90007822:	4b06      	ldr	r3, [pc, #24]	; (9000783c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16e8>)
90007824:	2160      	movs	r1, #96	; 0x60
90007826:	4a06      	ldr	r2, [pc, #24]	; (90007840 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ec>)
90007828:	4806      	ldr	r0, [pc, #24]	; (90007844 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f0>)
9000782a:	f021 fe49 	bl	900294c0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000782e:	4b06      	ldr	r3, [pc, #24]	; (90007848 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f4>)
90007830:	2161      	movs	r1, #97	; 0x61
90007832:	4a03      	ldr	r2, [pc, #12]	; (90007840 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16ec>)
90007834:	4803      	ldr	r0, [pc, #12]	; (90007844 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x16f0>)
90007836:	f021 fe43 	bl	900294c0 <__assert_func>
9000783a:	bf00      	nop
9000783c:	9002cc04 	.word	0x9002cc04
90007840:	9002cd0c 	.word	0x9002cd0c
90007844:	9002cc84 	.word	0x9002cc84
90007848:	9002cccc 	.word	0x9002cccc

9000784c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
9000784c:	4770      	bx	lr
9000784e:	bf00      	nop

90007850 <_ZN19FrontendApplicationD0Ev>:
90007850:	b510      	push	{r4, lr}
90007852:	4604      	mov	r4, r0
90007854:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90007858:	f021 fe04 	bl	90029464 <_ZdlPvj>
9000785c:	4620      	mov	r0, r4
9000785e:	bd10      	pop	{r4, pc}

90007860 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90007860:	b510      	push	{r4, lr}
90007862:	4604      	mov	r4, r0
    {
        model.tick();
90007864:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
90007868:	f000 f814 	bl	90007894 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
9000786c:	4620      	mov	r0, r4
    }
9000786e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90007872:	f010 bd63 	b.w	9001833c <_ZN8touchgfx11Application15handleTickEventEv>
90007876:	bf00      	nop

90007878 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90007878:	b510      	push	{r4, lr}
9000787a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
9000787c:	f7fc fc70 	bl	90004160 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90007880:	4b01      	ldr	r3, [pc, #4]	; (90007888 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90007882:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90007884:	6023      	str	r3, [r4, #0]
}
90007886:	bd10      	pop	{r4, pc}
90007888:	9002d018 	.word	0x9002d018

9000788c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
9000788c:	2200      	movs	r2, #0
9000788e:	6002      	str	r2, [r0, #0]
{

}
90007890:	4770      	bx	lr
90007892:	bf00      	nop

90007894 <_ZN5Model4tickEv>:

void Model::tick()
{

}
90007894:	4770      	bx	lr
90007896:	bf00      	nop

90007898 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
90007898:	4770      	bx	lr
9000789a:	bf00      	nop

9000789c <_ZThn4_N25screen_main_menuPresenterD1Ev>:
9000789c:	3804      	subs	r0, #4
9000789e:	4770      	bx	lr

900078a0 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
900078a0:	4770      	bx	lr
900078a2:	bf00      	nop

900078a4 <_ZN25screen_main_menuPresenterD0Ev>:
900078a4:	b510      	push	{r4, lr}
900078a6:	4604      	mov	r4, r0
900078a8:	2110      	movs	r1, #16
900078aa:	f021 fddb 	bl	90029464 <_ZdlPvj>
900078ae:	4620      	mov	r0, r4
900078b0:	bd10      	pop	{r4, pc}
900078b2:	bf00      	nop

900078b4 <_ZThn4_N25screen_main_menuPresenterD0Ev>:
900078b4:	b500      	push	{lr}
900078b6:	3804      	subs	r0, #4
900078b8:	b083      	sub	sp, #12
900078ba:	2110      	movs	r1, #16
900078bc:	9001      	str	r0, [sp, #4]
900078be:	f021 fdd1 	bl	90029464 <_ZdlPvj>
900078c2:	9801      	ldr	r0, [sp, #4]
900078c4:	b003      	add	sp, #12
900078c6:	f85d fb04 	ldr.w	pc, [sp], #4
900078ca:	bf00      	nop

900078cc <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
900078cc:	4a06      	ldr	r2, [pc, #24]	; (900078e8 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
900078ce:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
900078d0:	b410      	push	{r4}
    ModelListener() : model(0) {}
900078d2:	2400      	movs	r4, #0
900078d4:	6084      	str	r4, [r0, #8]
    : view(v)
900078d6:	f102 0408 	add.w	r4, r2, #8
900078da:	3220      	adds	r2, #32
900078dc:	e9c0 4200 	strd	r4, r2, [r0]
}
900078e0:	f85d 4b04 	ldr.w	r4, [sp], #4
900078e4:	4770      	bx	lr
900078e6:	bf00      	nop
900078e8:	9002d064 	.word	0x9002d064

900078ec <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
900078ec:	4770      	bx	lr
900078ee:	bf00      	nop

900078f0 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
900078f0:	4b03      	ldr	r3, [pc, #12]	; (90007900 <_ZN20screen_main_menuViewD1Ev+0x10>)
900078f2:	b510      	push	{r4, lr}
900078f4:	4604      	mov	r4, r0
900078f6:	6003      	str	r3, [r0, #0]
900078f8:	f7fc fed0 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
900078fc:	4620      	mov	r0, r4
900078fe:	bd10      	pop	{r4, pc}
90007900:	9002d094 	.word	0x9002d094

90007904 <_ZN20screen_main_menuViewD0Ev>:
90007904:	4b06      	ldr	r3, [pc, #24]	; (90007920 <_ZN20screen_main_menuViewD0Ev+0x1c>)
90007906:	b510      	push	{r4, lr}
90007908:	4604      	mov	r4, r0
9000790a:	6003      	str	r3, [r0, #0]
9000790c:	f7fc fec6 	bl	9000469c <_ZN24screen_main_menuViewBaseD1Ev>
90007910:	f44f 711a 	mov.w	r1, #616	; 0x268
90007914:	4620      	mov	r0, r4
90007916:	f021 fda5 	bl	90029464 <_ZdlPvj>
9000791a:	4620      	mov	r0, r4
9000791c:	bd10      	pop	{r4, pc}
9000791e:	bf00      	nop
90007920:	9002d094 	.word	0x9002d094

90007924 <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
90007924:	b510      	push	{r4, lr}
90007926:	4604      	mov	r4, r0
90007928:	f7fc ffde 	bl	900048e8 <_ZN24screen_main_menuViewBaseC1Ev>
9000792c:	4b01      	ldr	r3, [pc, #4]	; (90007934 <_ZN20screen_main_menuViewC1Ev+0x10>)
}
9000792e:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
90007930:	6023      	str	r3, [r4, #0]
}
90007932:	bd10      	pop	{r4, pc}
90007934:	9002d094 	.word	0x9002d094

90007938 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90007938:	f7fc beb2 	b.w	900046a0 <_ZN24screen_main_menuViewBase11setupScreenEv>

9000793c <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
9000793c:	4770      	bx	lr
9000793e:	bf00      	nop

90007940 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
90007940:	3804      	subs	r0, #4
90007942:	4770      	bx	lr

90007944 <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
90007944:	4770      	bx	lr
90007946:	bf00      	nop

90007948 <_ZN26screen_snake_gamePresenterD0Ev>:
90007948:	b510      	push	{r4, lr}
9000794a:	4604      	mov	r4, r0
9000794c:	2110      	movs	r1, #16
9000794e:	f021 fd89 	bl	90029464 <_ZdlPvj>
90007952:	4620      	mov	r0, r4
90007954:	bd10      	pop	{r4, pc}
90007956:	bf00      	nop

90007958 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
90007958:	b500      	push	{lr}
9000795a:	3804      	subs	r0, #4
9000795c:	b083      	sub	sp, #12
9000795e:	2110      	movs	r1, #16
90007960:	9001      	str	r0, [sp, #4]
90007962:	f021 fd7f 	bl	90029464 <_ZdlPvj>
90007966:	9801      	ldr	r0, [sp, #4]
90007968:	b003      	add	sp, #12
9000796a:	f85d fb04 	ldr.w	pc, [sp], #4
9000796e:	bf00      	nop

90007970 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
90007970:	4a06      	ldr	r2, [pc, #24]	; (9000798c <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
90007972:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
90007974:	b410      	push	{r4}
90007976:	2400      	movs	r4, #0
90007978:	6084      	str	r4, [r0, #8]
    : view(v)
9000797a:	f102 0408 	add.w	r4, r2, #8
9000797e:	3220      	adds	r2, #32
90007980:	e9c0 4200 	strd	r4, r2, [r0]
}
90007984:	f85d 4b04 	ldr.w	r4, [sp], #4
90007988:	4770      	bx	lr
9000798a:	bf00      	nop
9000798c:	9002d0c0 	.word	0x9002d0c0

90007990 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
90007990:	4770      	bx	lr
90007992:	bf00      	nop

90007994 <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
90007994:	4b01      	ldr	r3, [pc, #4]	; (9000799c <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
90007996:	2201      	movs	r2, #1
90007998:	801a      	strh	r2, [r3, #0]
}
9000799a:	4770      	bx	lr
9000799c:	24000030 	.word	0x24000030

900079a0 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
900079a0:	4b01      	ldr	r3, [pc, #4]	; (900079a8 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
900079a2:	2203      	movs	r2, #3
900079a4:	801a      	strh	r2, [r3, #0]
}
900079a6:	4770      	bx	lr
900079a8:	24000030 	.word	0x24000030

900079ac <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
900079ac:	4b01      	ldr	r3, [pc, #4]	; (900079b4 <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
900079ae:	2202      	movs	r2, #2
900079b0:	801a      	strh	r2, [r3, #0]
}
900079b2:	4770      	bx	lr
900079b4:	24000030 	.word	0x24000030

900079b8 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
900079b8:	4b01      	ldr	r3, [pc, #4]	; (900079c0 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
900079ba:	2200      	movs	r2, #0
900079bc:	801a      	strh	r2, [r3, #0]
}
900079be:	4770      	bx	lr
900079c0:	24000030 	.word	0x24000030

900079c4 <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
900079c4:	4b09      	ldr	r3, [pc, #36]	; (900079ec <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
900079c6:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
900079ca:	4a09      	ldr	r2, [pc, #36]	; (900079f0 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
900079cc:	681b      	ldr	r3, [r3, #0]
900079ce:	6810      	ldr	r0, [r2, #0]
900079d0:	689a      	ldr	r2, [r3, #8]
900079d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900079d6:	8893      	ldrh	r3, [r2, #4]
900079d8:	88d2      	ldrh	r2, [r2, #6]
900079da:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900079de:	fb13 f302 	smulbb	r3, r3, r2
900079e2:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
900079e6:	4418      	add	r0, r3
900079e8:	4770      	bx	lr
900079ea:	bf00      	nop
900079ec:	2401f88c 	.word	0x2401f88c
900079f0:	24000034 	.word	0x24000034

900079f4 <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
900079f4:	4b0a      	ldr	r3, [pc, #40]	; (90007a20 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
900079f6:	f04f 0c46 	mov.w	ip, #70	; 0x46
900079fa:	4a0a      	ldr	r2, [pc, #40]	; (90007a24 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
900079fc:	681b      	ldr	r3, [r3, #0]
900079fe:	6810      	ldr	r0, [r2, #0]
90007a00:	689a      	ldr	r2, [r3, #8]
90007a02:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90007a06:	8893      	ldrh	r3, [r2, #4]
90007a08:	88d2      	ldrh	r2, [r2, #6]
90007a0a:	fb0c 0001 	mla	r0, ip, r1, r0
90007a0e:	fb13 f302 	smulbb	r3, r3, r2
90007a12:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007a16:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90007a1a:	4418      	add	r0, r3
90007a1c:	4770      	bx	lr
90007a1e:	bf00      	nop
90007a20:	2401f88c 	.word	0x2401f88c
90007a24:	24000034 	.word	0x24000034

90007a28 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90007a28:	4b03      	ldr	r3, [pc, #12]	; (90007a38 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90007a2a:	b510      	push	{r4, lr}
90007a2c:	4604      	mov	r4, r0
90007a2e:	6003      	str	r3, [r0, #0]
90007a30:	f7fd f9c6 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
90007a34:	4620      	mov	r0, r4
90007a36:	bd10      	pop	{r4, pc}
90007a38:	9002d0f4 	.word	0x9002d0f4

90007a3c <_ZN21screen_snake_gameViewD0Ev>:
90007a3c:	4b06      	ldr	r3, [pc, #24]	; (90007a58 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
90007a3e:	b510      	push	{r4, lr}
90007a40:	4604      	mov	r4, r0
90007a42:	6003      	str	r3, [r0, #0]
90007a44:	f7fd f9bc 	bl	90004dc0 <_ZN25screen_snake_gameViewBaseD1Ev>
90007a48:	f44f 6191 	mov.w	r1, #1160	; 0x488
90007a4c:	4620      	mov	r0, r4
90007a4e:	f021 fd09 	bl	90029464 <_ZdlPvj>
90007a52:	4620      	mov	r0, r4
90007a54:	bd10      	pop	{r4, pc}
90007a56:	bf00      	nop
90007a58:	9002d0f4 	.word	0x9002d0f4

90007a5c <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90007a5c:	b510      	push	{r4, lr}
90007a5e:	4604      	mov	r4, r0
90007a60:	f7fd fafe 	bl	90005060 <_ZN25screen_snake_gameViewBaseC1Ev>
90007a64:	4b01      	ldr	r3, [pc, #4]	; (90007a6c <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
90007a66:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90007a68:	6023      	str	r3, [r4, #0]
}
90007a6a:	bd10      	pop	{r4, pc}
90007a6c:	9002d0f4 	.word	0x9002d0f4

90007a70 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007a70:	4b0e      	ldr	r3, [pc, #56]	; (90007aac <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
90007a72:	2200      	movs	r2, #0
          touchable(false),
90007a74:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90007a78:	21ff      	movs	r1, #255	; 0xff
90007a7a:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90007a7e:	b410      	push	{r4}
90007a80:	4c0b      	ldr	r4, [pc, #44]	; (90007ab0 <_GLOBAL__sub_I_game_started+0x40>)
90007a82:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
90007a86:	601c      	str	r4, [r3, #0]
90007a88:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90007a8c:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
90007a8e:	e9c3 2201 	strd	r2, r2, [r3, #4]
90007a92:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
90007a96:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90007a9a:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007a9e:	332c      	adds	r3, #44	; 0x2c
90007aa0:	4283      	cmp	r3, r0
90007aa2:	d1ee      	bne.n	90007a82 <_GLOBAL__sub_I_game_started+0x12>
}
90007aa4:	f85d 4b04 	ldr.w	r4, [sp], #4
90007aa8:	4770      	bx	lr
90007aaa:	bf00      	nop
90007aac:	2400988c 	.word	0x2400988c
90007ab0:	9002d9a0 	.word	0x9002d9a0

90007ab4 <_GLOBAL__sub_D_game_started>:
90007ab4:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90007ab6:	4c05      	ldr	r4, [pc, #20]	; (90007acc <_GLOBAL__sub_D_game_started+0x18>)
90007ab8:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
90007abc:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90007ac0:	681b      	ldr	r3, [r3, #0]
90007ac2:	4620      	mov	r0, r4
90007ac4:	4798      	blx	r3
90007ac6:	42ac      	cmp	r4, r5
90007ac8:	d1f8      	bne.n	90007abc <_GLOBAL__sub_D_game_started+0x8>
}
90007aca:	bd38      	pop	{r3, r4, r5, pc}
90007acc:	2401f88c 	.word	0x2401f88c

90007ad0 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
90007ad0:	f7fd b978 	b.w	90004dc4 <_ZN25screen_snake_gameViewBase11setupScreenEv>

90007ad4 <_ZN21screen_snake_gameView16game_snake_startEv>:
{
90007ad4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007ad8:	4604      	mov	r4, r0
        visible = vis;
90007ada:	2500      	movs	r5, #0
	btn_snake_start.invalidate();
90007adc:	30c4      	adds	r0, #196	; 0xc4
class Drawable
90007ade:	4e35      	ldr	r6, [pc, #212]	; (90007bb4 <_ZN21screen_snake_gameView16game_snake_startEv+0xe0>)
        visible = vis;
90007ae0:	f884 50e9 	strb.w	r5, [r4, #233]	; 0xe9
90007ae4:	f011 fc21 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_restart.invalidate();
90007ae8:	f504 7019 	add.w	r0, r4, #612	; 0x264
90007aec:	f884 5289 	strb.w	r5, [r4, #649]	; 0x289
90007af0:	f011 fc1b 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90007af4:	f504 700a 	add.w	r0, r4, #552	; 0x228
90007af8:	f884 524d 	strb.w	r5, [r4, #589]	; 0x24d
90007afc:	f011 fc15 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	snake_head.invalidate();
90007b00:	f104 0098 	add.w	r0, r4, #152	; 0x98
90007b04:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
90007b08:	f011 fc0f 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
90007b0c:	f504 704d 	add.w	r0, r4, #820	; 0x334
90007b10:	f884 5359 	strb.w	r5, [r4, #857]	; 0x359
90007b14:	f011 fc09 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_new_high_score.invalidate();
90007b18:	f504 7072 	add.w	r0, r4, #968	; 0x3c8
90007b1c:	f884 53ed 	strb.w	r5, [r4, #1005]	; 0x3ed
90007b20:	f011 fc03 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_high_score.invalidate();
90007b24:	f504 705f 	add.w	r0, r4, #892	; 0x37c
90007b28:	f884 53a1 	strb.w	r5, [r4, #929]	; 0x3a1
90007b2c:	f011 fbfd 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
90007b30:	4f21      	ldr	r7, [pc, #132]	; (90007bb8 <_ZN21screen_snake_gameView16game_snake_startEv+0xe4>)
class Drawable
90007b32:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
90007b36:	62b5      	str	r5, [r6, #40]	; 0x28
90007b38:	6838      	ldr	r0, [r7, #0]
90007b3a:	84b3      	strh	r3, [r6, #36]	; 0x24
90007b3c:	23ff      	movs	r3, #255	; 0xff
90007b3e:	e9c6 5501 	strd	r5, r5, [r6, #4]
90007b42:	e9c6 5503 	strd	r5, r5, [r6, #12]
90007b46:	e9c6 5505 	strd	r5, r5, [r6, #20]
90007b4a:	e9c6 5507 	strd	r5, r5, [r6, #28]
90007b4e:	f886 3026 	strb.w	r3, [r6, #38]	; 0x26
90007b52:	b318      	cbz	r0, 90007b9c <_ZN21screen_snake_gameView16game_snake_startEv+0xc8>
        rect.x = x;
90007b54:	4b19      	ldr	r3, [pc, #100]	; (90007bbc <_ZN21screen_snake_gameView16game_snake_startEv+0xe8>)
90007b56:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90007b5a:	6086      	str	r6, [r0, #8]
90007b5c:	1d20      	adds	r0, r4, #4
90007b5e:	6073      	str	r3, [r6, #4]
        color = newColor;
90007b60:	4b17      	ldr	r3, [pc, #92]	; (90007bc0 <_ZN21screen_snake_gameView16game_snake_startEv+0xec>)
90007b62:	4914      	ldr	r1, [pc, #80]	; (90007bb4 <_ZN21screen_snake_gameView16game_snake_startEv+0xe0>)
90007b64:	60b2      	str	r2, [r6, #8]
90007b66:	62b3      	str	r3, [r6, #40]	; 0x28
90007b68:	f00a fee6 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90007b6c:	683b      	ldr	r3, [r7, #0]
	tail = head;
90007b6e:	4c15      	ldr	r4, [pc, #84]	; (90007bc4 <_ZN21screen_snake_gameView16game_snake_startEv+0xf0>)
        return parent;
90007b70:	689b      	ldr	r3, [r3, #8]
90007b72:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
90007b74:	6803      	ldr	r3, [r0, #0]
90007b76:	695b      	ldr	r3, [r3, #20]
90007b78:	4798      	blx	r3
	head->next = NULL;
90007b7a:	683a      	ldr	r2, [r7, #0]
90007b7c:	2300      	movs	r3, #0
	snake_direction = SNAKE_DOWN;
90007b7e:	4912      	ldr	r1, [pc, #72]	; (90007bc8 <_ZN21screen_snake_gameView16game_snake_startEv+0xf4>)
90007b80:	2003      	movs	r0, #3
	head->prev = NULL;
90007b82:	e9c2 3300 	strd	r3, r3, [r2]
	head->old_y = 0;
90007b86:	e9c2 3303 	strd	r3, r3, [r2, #12]
	snake_direction = SNAKE_DOWN;
90007b8a:	8008      	strh	r0, [r1, #0]
	game_started = true;
90007b8c:	2101      	movs	r1, #1
	new_high_score = false;
90007b8e:	480f      	ldr	r0, [pc, #60]	; (90007bcc <_ZN21screen_snake_gameView16game_snake_startEv+0xf8>)
	tail = head;
90007b90:	6022      	str	r2, [r4, #0]
	game_started = true;
90007b92:	4a0f      	ldr	r2, [pc, #60]	; (90007bd0 <_ZN21screen_snake_gameView16game_snake_startEv+0xfc>)
	new_high_score = false;
90007b94:	7003      	strb	r3, [r0, #0]
	game_started = true;
90007b96:	7011      	strb	r1, [r2, #0]
}
90007b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90007b9c:	2014      	movs	r0, #20
90007b9e:	f021 fcb3 	bl	90029508 <malloc>
90007ba2:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
90007ba4:	2800      	cmp	r0, #0
90007ba6:	d1d5      	bne.n	90007b54 <_ZN21screen_snake_gameView16game_snake_startEv+0x80>
		error();
90007ba8:	6823      	ldr	r3, [r4, #0]
90007baa:	4620      	mov	r0, r4
90007bac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90007bae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90007bb2:	4718      	bx	r3
90007bb4:	2400988c 	.word	0x2400988c
90007bb8:	24009884 	.word	0x24009884
90007bbc:	0014000a 	.word	0x0014000a
90007bc0:	ff00ff32 	.word	0xff00ff32
90007bc4:	2401f88c 	.word	0x2401f88c
90007bc8:	24000030 	.word	0x24000030
90007bcc:	24009888 	.word	0x24009888
90007bd0:	24009880 	.word	0x24009880

90007bd4 <_ZN21screen_snake_gameView15handleTickEventEv>:
	if( game_started )
90007bd4:	f8df c338 	ldr.w	ip, [pc, #824]	; 90007f10 <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
void screen_snake_gameView::handleTickEvent() {
90007bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
90007bdc:	f89c 6000 	ldrb.w	r6, [ip]
void screen_snake_gameView::handleTickEvent() {
90007be0:	b083      	sub	sp, #12
90007be2:	4607      	mov	r7, r0
	if( game_started )
90007be4:	2e00      	cmp	r6, #0
90007be6:	f000 819b 	beq.w	90007f20 <_ZN21screen_snake_gameView15handleTickEventEv+0x34c>
		if( ++tick % SNAKE_SPEED == 0 )
90007bea:	4eba      	ldr	r6, [pc, #744]	; (90007ed4 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90007bec:	49ba      	ldr	r1, [pc, #744]	; (90007ed8 <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
90007bee:	6833      	ldr	r3, [r6, #0]
90007bf0:	4aba      	ldr	r2, [pc, #744]	; (90007edc <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
90007bf2:	3301      	adds	r3, #1
90007bf4:	fb01 2203 	mla	r2, r1, r3, r2
90007bf8:	6033      	str	r3, [r6, #0]
90007bfa:	4bb9      	ldr	r3, [pc, #740]	; (90007ee0 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90007bfc:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90007c00:	f240 81cd 	bls.w	90007f9e <_ZN21screen_snake_gameView15handleTickEventEv+0x3ca>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90007c04:	f8df a30c 	ldr.w	sl, [pc, #780]	; 90007f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
90007c08:	f8da e000 	ldr.w	lr, [sl]
90007c0c:	f8de 5008 	ldr.w	r5, [lr, #8]
        return rect.x;
90007c10:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90007c14:	b293      	uxth	r3, r2
90007c16:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90007c1a:	f240 8232 	bls.w	90008082 <_ZN21screen_snake_gameView15handleTickEventEv+0x4ae>
				game_started = false;
90007c1e:	2300      	movs	r3, #0
90007c20:	f88c 3000 	strb.w	r3, [ip]
			snake_piece *snake_part = head->next;
90007c24:	f8de 3000 	ldr.w	r3, [lr]
			while( snake_part != NULL )
90007c28:	b913      	cbnz	r3, 90007c30 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c>
90007c2a:	e00f      	b.n	90007c4c <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				snake_part = snake_part->next;
90007c2c:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007c2e:	b16b      	cbz	r3, 90007c4c <_ZN21screen_snake_gameView15handleTickEventEv+0x78>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
90007c30:	6899      	ldr	r1, [r3, #8]
90007c32:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90007c36:	4294      	cmp	r4, r2
90007c38:	d1f8      	bne.n	90007c2c <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
90007c3a:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90007c3e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90007c42:	4288      	cmp	r0, r1
90007c44:	d1f2      	bne.n	90007c2c <_ZN21screen_snake_gameView15handleTickEventEv+0x58>
					game_started = false;
90007c46:	2300      	movs	r3, #0
90007c48:	f88c 3000 	strb.w	r3, [ip]
90007c4c:	f9b7 0110 	ldrsh.w	r0, [r7, #272]	; 0x110
90007c50:	4629      	mov	r1, r5
90007c52:	4673      	mov	r3, lr
90007c54:	e006      	b.n	90007c64 <_ZN21screen_snake_gameView15handleTickEventEv+0x90>
				snake_part = snake_part->next;
90007c56:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90007c58:	2b00      	cmp	r3, #0
90007c5a:	f000 80e7 	beq.w	90007e2c <_ZN21screen_snake_gameView15handleTickEventEv+0x258>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90007c5e:	6899      	ldr	r1, [r3, #8]
90007c60:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90007c64:	4290      	cmp	r0, r2
90007c66:	d1f6      	bne.n	90007c56 <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
90007c68:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
90007c6c:	f9b7 2112 	ldrsh.w	r2, [r7, #274]	; 0x112
90007c70:	4291      	cmp	r1, r2
90007c72:	d1f0      	bne.n	90007c56 <_ZN21screen_snake_gameView15handleTickEventEv+0x82>
					snake_length++;
90007c74:	4c9b      	ldr	r4, [pc, #620]	; (90007ee4 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007c76:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
90007c7a:	f8d4 b000 	ldr.w	fp, [r4]
90007c7e:	f10b 0301 	add.w	r3, fp, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007c82:	4293      	cmp	r3, r2
					snake_length++;
90007c84:	6023      	str	r3, [r4, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90007c86:	f000 821a 	beq.w	900080be <_ZN21screen_snake_gameView15handleTickEventEv+0x4ea>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90007c8a:	2014      	movs	r0, #20
90007c8c:	f021 fc3c 	bl	90029508 <malloc>
					if( new_piece == NULL ) {
90007c90:	4680      	mov	r8, r0
90007c92:	2800      	cmp	r0, #0
90007c94:	f000 8342 	beq.w	9000831c <_ZN21screen_snake_gameView15handleTickEventEv+0x748>
					snake_pixels[snake_length-1] = Box();
90007c98:	222c      	movs	r2, #44	; 0x2c
90007c9a:	f8df 927c 	ldr.w	r9, [pc, #636]	; 90007f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x344>
class Drawable
90007c9e:	2100      	movs	r1, #0
90007ca0:	f44f 7380 	mov.w	r3, #256	; 0x100
90007ca4:	fb02 f20b 	mul.w	r2, r2, fp
90007ca8:	eb09 0502 	add.w	r5, r9, r2
90007cac:	84ab      	strh	r3, [r5, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
90007cae:	6085      	str	r5, [r0, #8]
class Box : public Widget
90007cb0:	20ff      	movs	r0, #255	; 0xff
90007cb2:	e9c5 1101 	strd	r1, r1, [r5, #4]
90007cb6:	e9c5 1103 	strd	r1, r1, [r5, #12]
90007cba:	e9c5 1105 	strd	r1, r1, [r5, #20]
90007cbe:	e9c5 1107 	strd	r1, r1, [r5, #28]
        setX(x);
90007cc2:	f859 3002 	ldr.w	r3, [r9, r2]
90007cc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90007cc8:	f885 0026 	strb.w	r0, [r5, #38]	; 0x26
90007ccc:	f109 0028 	add.w	r0, r9, #40	; 0x28
90007cd0:	5081      	str	r1, [r0, r2]
90007cd2:	4a85      	ldr	r2, [pc, #532]	; (90007ee8 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
90007cd4:	4293      	cmp	r3, r2
90007cd6:	f040 823c 	bne.w	90008152 <_ZN21screen_snake_gameView15handleTickEventEv+0x57e>
        rect.x = x;
90007cda:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007cdc:	232c      	movs	r3, #44	; 0x2c
90007cde:	4983      	ldr	r1, [pc, #524]	; (90007eec <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
90007ce0:	fb03 f30b 	mul.w	r3, r3, fp
90007ce4:	f859 2003 	ldr.w	r2, [r9, r3]
90007ce8:	444b      	add	r3, r9
90007cea:	6b52      	ldr	r2, [r2, #52]	; 0x34
90007cec:	428a      	cmp	r2, r1
90007cee:	f040 82f3 	bne.w	900082d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x704>
        rect.y = y;
90007cf2:	2200      	movs	r2, #0
90007cf4:	80da      	strh	r2, [r3, #6]
        setWidth(width);
90007cf6:	222c      	movs	r2, #44	; 0x2c
90007cf8:	210a      	movs	r1, #10
90007cfa:	4628      	mov	r0, r5
90007cfc:	fb02 f20b 	mul.w	r2, r2, fp
					tail->next = new_piece;
90007d00:	f8df b218 	ldr.w	fp, [pc, #536]	; 90007f1c <_ZN21screen_snake_gameView15handleTickEventEv+0x348>
90007d04:	f859 3002 	ldr.w	r3, [r9, r2]
90007d08:	9201      	str	r2, [sp, #4]
90007d0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90007d0c:	4798      	blx	r3
        setHeight(height);
90007d0e:	9a01      	ldr	r2, [sp, #4]
90007d10:	4628      	mov	r0, r5
90007d12:	210a      	movs	r1, #10
90007d14:	f859 3002 	ldr.w	r3, [r9, r2]
90007d18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90007d1a:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
90007d1c:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
90007d20:	4b73      	ldr	r3, [pc, #460]	; (90007ef0 <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
90007d22:	1d38      	adds	r0, r7, #4
90007d24:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
90007d26:	2301      	movs	r3, #1
90007d28:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
90007d2c:	f00a fe04 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90007d30:	f8d8 3008 	ldr.w	r3, [r8, #8]
90007d34:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
90007d36:	6803      	ldr	r3, [r0, #0]
90007d38:	695b      	ldr	r3, [r3, #20]
90007d3a:	4798      	blx	r3
					tail->next = new_piece;
90007d3c:	f8db 3000 	ldr.w	r3, [fp]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d40:	683a      	ldr	r2, [r7, #0]
					tail->next = new_piece;
90007d42:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
90007d46:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
90007d4a:	2300      	movs	r3, #0
90007d4c:	4869      	ldr	r0, [pc, #420]	; (90007ef4 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
90007d4e:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d52:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90007d54:	f8cb 8000 	str.w	r8, [fp]
					new_piece->old_y = 0;
90007d58:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d5c:	6c13      	ldr	r3, [r2, #64]	; 0x40
90007d5e:	4283      	cmp	r3, r0
90007d60:	f040 82b5 	bne.w	900082ce <_ZN21screen_snake_gameView15handleTickEventEv+0x6fa>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90007d64:	f8d8 5008 	ldr.w	r5, [r8, #8]
90007d68:	6820      	ldr	r0, [r4, #0]
90007d6a:	88ab      	ldrh	r3, [r5, #4]
90007d6c:	88ed      	ldrh	r5, [r5, #6]
90007d6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90007d72:	fb13 f305 	smulbb	r3, r3, r5
90007d76:	ebc1 1501 	rsb	r5, r1, r1, lsl #4
90007d7a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90007d7e:	eb00 0045 	add.w	r0, r0, r5, lsl #1
90007d82:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d84:	4b5c      	ldr	r3, [pc, #368]	; (90007ef8 <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007d86:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
90007d88:	fb83 5300 	smull	r5, r3, r3, r0
90007d8c:	17c5      	asrs	r5, r0, #31
90007d8e:	4403      	add	r3, r0
90007d90:	ebc5 2523 	rsb	r5, r5, r3, asr #8
90007d94:	f44f 73eb 	mov.w	r3, #470	; 0x1d6
90007d98:	fb03 0515 	mls	r5, r3, r5, r0
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007d9c:	4b57      	ldr	r3, [pc, #348]	; (90007efc <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
90007d9e:	429a      	cmp	r2, r3
90007da0:	f040 8292 	bne.w	900082c8 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f4>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90007da4:	f8db 3000 	ldr.w	r3, [fp]
90007da8:	6898      	ldr	r0, [r3, #8]
90007daa:	6823      	ldr	r3, [r4, #0]
90007dac:	8882      	ldrh	r2, [r0, #4]
90007dae:	88c0      	ldrh	r0, [r0, #6]
90007db0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90007db4:	fb12 f200 	smulbb	r2, r2, r0
90007db8:	2046      	movs	r0, #70	; 0x46
90007dba:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007dbe:	fb00 3301 	mla	r3, r0, r1, r3
90007dc2:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90007dc6:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007dc8:	4a4d      	ldr	r2, [pc, #308]	; (90007f00 <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					food_new_x = food_new_x - (food_new_x % 10);
90007dca:	494e      	ldr	r1, [pc, #312]	; (90007f04 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
90007dcc:	fb82 3200 	smull	r3, r2, r2, r0
90007dd0:	17c3      	asrs	r3, r0, #31
90007dd2:	ebc3 13a2 	rsb	r3, r3, r2, asr #6
90007dd6:	f44f 7283 	mov.w	r2, #262	; 0x106
90007dda:	fb02 0313 	mls	r3, r2, r3, r0
					food_new_x = food_new_x - (food_new_x % 10);
90007dde:	17ea      	asrs	r2, r5, #31
90007de0:	fb81 0505 	smull	r0, r5, r1, r5
					food_new_y = food_new_y - (food_new_y % 10);
90007de4:	fb81 0103 	smull	r0, r1, r1, r3
90007de8:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90007dea:	ebc2 02a5 	rsb	r2, r2, r5, asr #2
					food.invalidate();
90007dee:	f507 7086 	add.w	r0, r7, #268	; 0x10c
					food_new_y = food_new_y - (food_new_y % 10);
90007df2:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
90007df6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90007dfa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90007dfe:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90007e00:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
90007e02:	f8a7 2110 	strh.w	r2, [r7, #272]	; 0x110
90007e06:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
					food.invalidate();
90007e0a:	f011 fa8e 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90007e0e:	6823      	ldr	r3, [r4, #0]
90007e10:	4a3d      	ldr	r2, [pc, #244]	; (90007f08 <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
90007e12:	2120      	movs	r1, #32
90007e14:	f507 6082 	add.w	r0, r7, #1040	; 0x410
90007e18:	f013 fad6 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
90007e1c:	f507 703a 	add.w	r0, r7, #744	; 0x2e8
90007e20:	f011 fa83 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
90007e24:	f8da e000 	ldr.w	lr, [sl]
90007e28:	f8de 5008 	ldr.w	r5, [lr, #8]
			if( snake_direction == SNAKE_RIGHT )
90007e2c:	4b37      	ldr	r3, [pc, #220]	; (90007f0c <_ZN21screen_snake_gameView15handleTickEventEv+0x338>)
90007e2e:	f9b3 3000 	ldrsh.w	r3, [r3]
90007e32:	2b00      	cmp	r3, #0
90007e34:	f040 8117 	bne.w	90008066 <_ZN21screen_snake_gameView15handleTickEventEv+0x492>
        return rect.x;
90007e38:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
90007e3c:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
90007e40:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
90007e42:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
90007e46:	330a      	adds	r3, #10
90007e48:	f8df b09c 	ldr.w	fp, [pc, #156]	; 90007ee8 <_ZN21screen_snake_gameView15handleTickEventEv+0x314>
90007e4c:	b219      	sxth	r1, r3
90007e4e:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
90007e50:	f8ce 4010 	str.w	r4, [lr, #16]
90007e54:	455b      	cmp	r3, fp
90007e56:	f040 8231 	bne.w	900082bc <_ZN21screen_snake_gameView15handleTickEventEv+0x6e8>
        rect.x = x;
90007e5a:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007e5c:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007e5e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90007eec <_ZN21screen_snake_gameView15handleTickEventEv+0x318>
90007e62:	454b      	cmp	r3, r9
90007e64:	f040 8226 	bne.w	900082b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6e0>
        rect.y = y;
90007e68:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007e6a:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007e6e:	689b      	ldr	r3, [r3, #8]
90007e70:	6958      	ldr	r0, [r3, #20]
90007e72:	6803      	ldr	r3, [r0, #0]
90007e74:	695b      	ldr	r3, [r3, #20]
90007e76:	4798      	blx	r3
				snake_piece *piece = head->next;
90007e78:	f8da 3000 	ldr.w	r3, [sl]
90007e7c:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90007e7e:	b974      	cbnz	r4, 90007e9e <_ZN21screen_snake_gameView15handleTickEventEv+0x2ca>
90007e80:	e220      	b.n	900082c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f0>
        setY(y);
90007e82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007e84:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90007e86:	454b      	cmp	r3, r9
90007e88:	d11f      	bne.n	90007eca <_ZN21screen_snake_gameView15handleTickEventEv+0x2f6>
        return parent;
90007e8a:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007e8c:	80ef      	strh	r7, [r5, #6]
        return parent;
90007e8e:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007e90:	6803      	ldr	r3, [r0, #0]
90007e92:	695b      	ldr	r3, [r3, #20]
90007e94:	4798      	blx	r3
					piece = piece->next;
90007e96:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007e98:	2c00      	cmp	r4, #0
90007e9a:	f000 8103 	beq.w	900080a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4d0>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007e9e:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007ea2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007ea6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007eaa:	60e3      	str	r3, [r4, #12]
        setX(x);
90007eac:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007eae:	6121      	str	r1, [r4, #16]
90007eb0:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007eb2:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90007eb6:	455e      	cmp	r6, fp
90007eb8:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90007ebc:	d0e1      	beq.n	90007e82 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
        setX(x);
90007ebe:	4628      	mov	r0, r5
90007ec0:	47b0      	blx	r6
        setY(y);
90007ec2:	682b      	ldr	r3, [r5, #0]
90007ec4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007ec6:	454b      	cmp	r3, r9
90007ec8:	d0df      	beq.n	90007e8a <_ZN21screen_snake_gameView15handleTickEventEv+0x2b6>
90007eca:	4639      	mov	r1, r7
90007ecc:	4628      	mov	r0, r5
90007ece:	4798      	blx	r3
        return parent;
90007ed0:	68a3      	ldr	r3, [r4, #8]
90007ed2:	e7dc      	b.n	90007e8e <_ZN21screen_snake_gameView15handleTickEventEv+0x2ba>
90007ed4:	2400987c 	.word	0x2400987c
90007ed8:	cccccccd 	.word	0xcccccccd
90007edc:	19999998 	.word	0x19999998
90007ee0:	19999999 	.word	0x19999999
90007ee4:	24000034 	.word	0x24000034
90007ee8:	9000228d 	.word	0x9000228d
90007eec:	90002291 	.word	0x90002291
90007ef0:	ffff8200 	.word	0xffff8200
90007ef4:	900079c5 	.word	0x900079c5
90007ef8:	8b70344b 	.word	0x8b70344b
90007efc:	900079f5 	.word	0x900079f5
90007f00:	3e88cb3d 	.word	0x3e88cb3d
90007f04:	66666667 	.word	0x66666667
90007f08:	9002d0e8 	.word	0x9002d0e8
90007f0c:	24000030 	.word	0x24000030
90007f10:	24009880 	.word	0x24009880
90007f14:	24009884 	.word	0x24009884
90007f18:	2400988c 	.word	0x2400988c
90007f1c:	2401f88c 	.word	0x2401f88c
		if( head != NULL ) {
90007f20:	f8df a2f8 	ldr.w	sl, [pc, #760]	; 9000821c <_ZN21screen_snake_gameView15handleTickEventEv+0x648>
90007f24:	f8da 3000 	ldr.w	r3, [sl]
90007f28:	2b00      	cmp	r3, #0
90007f2a:	d076      	beq.n	9000801a <_ZN21screen_snake_gameView15handleTickEventEv+0x446>
			old = head->next;
90007f2c:	681c      	ldr	r4, [r3, #0]
		while( old != NULL ) {
90007f2e:	2c00      	cmp	r4, #0
90007f30:	f000 81ee 	beq.w	90008310 <_ZN21screen_snake_gameView15handleTickEventEv+0x73c>
			old->pixel->setXY(-1, -1);
90007f34:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90007f36:	f64f 78ff 	movw	r8, #65535	; 0xffff
        setX(x);
90007f3a:	f8df b2c8 	ldr.w	fp, [pc, #712]	; 90008204 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>
90007f3e:	682b      	ldr	r3, [r5, #0]
90007f40:	f8df 92c4 	ldr.w	r9, [pc, #708]	; 90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x634>
90007f44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007f46:	455a      	cmp	r2, fp
90007f48:	d118      	bne.n	90007f7c <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
        setY(y);
90007f4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90007f4c:	f8a5 8004 	strh.w	r8, [r5, #4]
        rect.y = y;
90007f50:	454b      	cmp	r3, r9
90007f52:	d11b      	bne.n	90007f8c <_ZN21screen_snake_gameView15handleTickEventEv+0x3b8>
			old->pixel->setVisible(false);
90007f54:	68a3      	ldr	r3, [r4, #8]
90007f56:	f8a5 8006 	strh.w	r8, [r5, #6]
        return parent;
90007f5a:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007f5c:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90007f60:	6803      	ldr	r3, [r0, #0]
90007f62:	695b      	ldr	r3, [r3, #20]
90007f64:	4798      	blx	r3
			old = old->next;
90007f66:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90007f68:	b1e4      	cbz	r4, 90007fa4 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
				free(old->prev);
90007f6a:	6860      	ldr	r0, [r4, #4]
90007f6c:	f021 fad4 	bl	90029518 <free>
			old->pixel->setXY(-1, -1);
90007f70:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90007f72:	6066      	str	r6, [r4, #4]
        setX(x);
90007f74:	682b      	ldr	r3, [r5, #0]
90007f76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007f78:	455a      	cmp	r2, fp
90007f7a:	d0e6      	beq.n	90007f4a <_ZN21screen_snake_gameView15handleTickEventEv+0x376>
90007f7c:	f04f 31ff 	mov.w	r1, #4294967295
90007f80:	4628      	mov	r0, r5
90007f82:	4790      	blx	r2
        setY(y);
90007f84:	682b      	ldr	r3, [r5, #0]
90007f86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007f88:	454b      	cmp	r3, r9
90007f8a:	d0e3      	beq.n	90007f54 <_ZN21screen_snake_gameView15handleTickEventEv+0x380>
90007f8c:	4628      	mov	r0, r5
90007f8e:	f04f 31ff 	mov.w	r1, #4294967295
90007f92:	4798      	blx	r3
			old->pixel->setVisible(false);
90007f94:	68a3      	ldr	r3, [r4, #8]
        return parent;
90007f96:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007f98:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
90007f9c:	e7e0      	b.n	90007f60 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
}
90007f9e:	b003      	add	sp, #12
90007fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			else if (head != tail ) {
90007fa4:	4a95      	ldr	r2, [pc, #596]	; (900081fc <_ZN21screen_snake_gameView15handleTickEventEv+0x628>)
90007fa6:	f8da 3000 	ldr.w	r3, [sl]
90007faa:	6810      	ldr	r0, [r2, #0]
90007fac:	4283      	cmp	r3, r0
90007fae:	d001      	beq.n	90007fb4 <_ZN21screen_snake_gameView15handleTickEventEv+0x3e0>
				free(tail);
90007fb0:	f021 fab2 	bl	90029518 <free>
		if( tick > 0 ) {
90007fb4:	4e92      	ldr	r6, [pc, #584]	; (90008200 <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
90007fb6:	6833      	ldr	r3, [r6, #0]
90007fb8:	2b00      	cmp	r3, #0
90007fba:	dc32      	bgt.n	90008022 <_ZN21screen_snake_gameView15handleTickEventEv+0x44e>
		if( head != NULL ) {
90007fbc:	f8da 3000 	ldr.w	r3, [sl]
90007fc0:	b1db      	cbz	r3, 90007ffa <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
			tail = head;
90007fc2:	4a8e      	ldr	r2, [pc, #568]	; (900081fc <_ZN21screen_snake_gameView15handleTickEventEv+0x628>)
			head->pixel->setXY(20, 50);
90007fc4:	689c      	ldr	r4, [r3, #8]
			tail = head;
90007fc6:	6013      	str	r3, [r2, #0]
			head->next = NULL;
90007fc8:	2200      	movs	r2, #0
90007fca:	498e      	ldr	r1, [pc, #568]	; (90008204 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>)
90007fcc:	601a      	str	r2, [r3, #0]
        setX(x);
90007fce:	6823      	ldr	r3, [r4, #0]
90007fd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007fd2:	428a      	cmp	r2, r1
90007fd4:	d16e      	bne.n	900080b4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e0>
        rect.x = x;
90007fd6:	2214      	movs	r2, #20
90007fd8:	80a2      	strh	r2, [r4, #4]
        setY(y);
90007fda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007fdc:	4a8a      	ldr	r2, [pc, #552]	; (90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x634>)
90007fde:	4293      	cmp	r3, r2
90007fe0:	d164      	bne.n	900080ac <_ZN21screen_snake_gameView15handleTickEventEv+0x4d8>
        rect.y = y;
90007fe2:	2332      	movs	r3, #50	; 0x32
90007fe4:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90007fe6:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007fea:	689b      	ldr	r3, [r3, #8]
90007fec:	6958      	ldr	r0, [r3, #20]
90007fee:	6803      	ldr	r3, [r0, #0]
90007ff0:	695b      	ldr	r3, [r3, #20]
90007ff2:	4798      	blx	r3
			snake_length = 1;
90007ff4:	4b85      	ldr	r3, [pc, #532]	; (9000820c <_ZN21screen_snake_gameView15handleTickEventEv+0x638>)
90007ff6:	2201      	movs	r2, #1
90007ff8:	601a      	str	r2, [r3, #0]
        visible = vis;
90007ffa:	2401      	movs	r4, #1
		btn_back.invalidate();
90007ffc:	f507 700a 	add.w	r0, r7, #552	; 0x228
90008000:	f887 424d 	strb.w	r4, [r7, #589]	; 0x24d
90008004:	f011 f991 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		btn_restart.invalidate();
90008008:	f507 7019 	add.w	r0, r7, #612	; 0x264
9000800c:	f887 4289 	strb.w	r4, [r7, #649]	; 0x289
}
90008010:	b003      	add	sp, #12
90008012:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		btn_restart.invalidate();
90008016:	f011 b988 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
9000801a:	4e79      	ldr	r6, [pc, #484]	; (90008200 <_ZN21screen_snake_gameView15handleTickEventEv+0x62c>)
9000801c:	6833      	ldr	r3, [r6, #0]
9000801e:	2b00      	cmp	r3, #0
90008020:	ddeb      	ble.n	90007ffa <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
90008022:	2501      	movs	r5, #1
			tick = 0;
90008024:	2300      	movs	r3, #0
			lbl_game_over.invalidate();
90008026:	f507 704d 	add.w	r0, r7, #820	; 0x334
			if( snake_length > high_score ) {
9000802a:	4c79      	ldr	r4, [pc, #484]	; (90008210 <_ZN21screen_snake_gameView15handleTickEventEv+0x63c>)
9000802c:	f887 5359 	strb.w	r5, [r7, #857]	; 0x359
			tick = 0;
90008030:	6033      	str	r3, [r6, #0]
			lbl_game_over.invalidate();
90008032:	f011 f97a 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
			if( snake_length > high_score ) {
90008036:	4b75      	ldr	r3, [pc, #468]	; (9000820c <_ZN21screen_snake_gameView15handleTickEventEv+0x638>)
90008038:	681a      	ldr	r2, [r3, #0]
9000803a:	6823      	ldr	r3, [r4, #0]
9000803c:	429a      	cmp	r2, r3
9000803e:	dc26      	bgt.n	9000808e <_ZN21screen_snake_gameView15handleTickEventEv+0x4ba>
			lbl_high_score.resizeToCurrentText();
90008040:	f507 745f 	add.w	r4, r7, #892	; 0x37c
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
90008044:	4a73      	ldr	r2, [pc, #460]	; (90008214 <_ZN21screen_snake_gameView15handleTickEventEv+0x640>)
90008046:	2114      	movs	r1, #20
90008048:	f507 608a 	add.w	r0, r7, #1104	; 0x450
9000804c:	f013 f9bc 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
			lbl_high_score.resizeToCurrentText();
90008050:	4620      	mov	r0, r4
90008052:	9401      	str	r4, [sp, #4]
90008054:	f00d f8d0 	bl	900151f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90008058:	2301      	movs	r3, #1
			lbl_high_score.invalidate();
9000805a:	9801      	ldr	r0, [sp, #4]
9000805c:	f887 33a1 	strb.w	r3, [r7, #929]	; 0x3a1
90008060:	f011 f963 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90008064:	e7aa      	b.n	90007fbc <_ZN21screen_snake_gameView15handleTickEventEv+0x3e8>
			else if( snake_direction == SNAKE_LEFT )
90008066:	2b02      	cmp	r3, #2
90008068:	d076      	beq.n	90008158 <_ZN21screen_snake_gameView15handleTickEventEv+0x584>
			else if( snake_direction == SNAKE_UP )
9000806a:	2b01      	cmp	r3, #1
9000806c:	f000 80d8 	beq.w	90008220 <_ZN21screen_snake_gameView15handleTickEventEv+0x64c>
			else if( snake_direction == SNAKE_DOWN )
90008070:	2b03      	cmp	r3, #3
90008072:	d028      	beq.n	900080c6 <_ZN21screen_snake_gameView15handleTickEventEv+0x4f2>
        return parent;
90008074:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90008076:	6803      	ldr	r3, [r0, #0]
90008078:	695b      	ldr	r3, [r3, #20]
}
9000807a:	b003      	add	sp, #12
9000807c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
90008080:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
90008082:	88eb      	ldrh	r3, [r5, #6]
90008084:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008088:	f63f adc9 	bhi.w	90007c1e <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
9000808c:	e5ca      	b.n	90007c24 <_ZN21screen_snake_gameView15handleTickEventEv+0x50>
				new_high_score = true;
9000808e:	4b62      	ldr	r3, [pc, #392]	; (90008218 <_ZN21screen_snake_gameView15handleTickEventEv+0x644>)
				lbl_new_high_score.invalidate();
90008090:	f507 7072 	add.w	r0, r7, #968	; 0x3c8
        visible = vis;
90008094:	f887 53ed 	strb.w	r5, [r7, #1005]	; 0x3ed
				new_high_score = true;
90008098:	701d      	strb	r5, [r3, #0]
				high_score = snake_length;
9000809a:	6022      	str	r2, [r4, #0]
				lbl_new_high_score.invalidate();
9000809c:	f011 f945 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_high_scoreBuffer, LBL_HIGH_SCORE_SIZE, "%d", high_score);
900080a0:	6823      	ldr	r3, [r4, #0]
900080a2:	e7cd      	b.n	90008040 <_ZN21screen_snake_gameView15handleTickEventEv+0x46c>
			head->pixel->getParent()->invalidate();
900080a4:	f8da 3000 	ldr.w	r3, [sl]
900080a8:	689d      	ldr	r5, [r3, #8]
900080aa:	e7e3      	b.n	90008074 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a0>
        setY(y);
900080ac:	2132      	movs	r1, #50	; 0x32
900080ae:	4620      	mov	r0, r4
900080b0:	4798      	blx	r3
900080b2:	e798      	b.n	90007fe6 <_ZN21screen_snake_gameView15handleTickEventEv+0x412>
        setX(x);
900080b4:	2114      	movs	r1, #20
900080b6:	4620      	mov	r0, r4
900080b8:	4790      	blx	r2
        setY(y);
900080ba:	6823      	ldr	r3, [r4, #0]
900080bc:	e78d      	b.n	90007fda <_ZN21screen_snake_gameView15handleTickEventEv+0x406>
						game_started = false;
900080be:	2300      	movs	r3, #0
900080c0:	f88c 3000 	strb.w	r3, [ip]
900080c4:	e5e1      	b.n	90007c8a <_ZN21screen_snake_gameView15handleTickEventEv+0xb6>
        return rect.y;
900080c6:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
900080ca:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
900080ce:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
900080d2:	330a      	adds	r3, #10
900080d4:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90008204 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>
900080d8:	b21c      	sxth	r4, r3
        setX(x);
900080da:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
900080dc:	f8ce 100c 	str.w	r1, [lr, #12]
900080e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900080e2:	455a      	cmp	r2, fp
900080e4:	f040 8110 	bne.w	90008308 <_ZN21screen_snake_gameView15handleTickEventEv+0x734>
        rect.x = x;
900080e8:	80a9      	strh	r1, [r5, #4]
        setY(y);
900080ea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900080ec:	f8df 9118 	ldr.w	r9, [pc, #280]	; 90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x634>
900080f0:	454b      	cmp	r3, r9
900080f2:	f040 8105 	bne.w	90008300 <_ZN21screen_snake_gameView15handleTickEventEv+0x72c>
        rect.y = y;
900080f6:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
900080f8:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
900080fc:	689b      	ldr	r3, [r3, #8]
900080fe:	6958      	ldr	r0, [r3, #20]
90008100:	6803      	ldr	r3, [r0, #0]
90008102:	695b      	ldr	r3, [r3, #20]
90008104:	4798      	blx	r3
				snake_piece *piece = head->next;
90008106:	f8da 3000 	ldr.w	r3, [sl]
9000810a:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
9000810c:	b96c      	cbnz	r4, 9000812a <_ZN21screen_snake_gameView15handleTickEventEv+0x556>
9000810e:	e0d9      	b.n	900082c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f0>
        rect.x = x;
90008110:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008112:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008114:	454b      	cmp	r3, r9
90008116:	d16c      	bne.n	900081f2 <_ZN21screen_snake_gameView15handleTickEventEv+0x61e>
        return parent;
90008118:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
9000811a:	80ef      	strh	r7, [r5, #6]
        return parent;
9000811c:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
9000811e:	6803      	ldr	r3, [r0, #0]
90008120:	695b      	ldr	r3, [r3, #20]
90008122:	4798      	blx	r3
					piece = piece->next;
90008124:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90008126:	2c00      	cmp	r4, #0
90008128:	d0bc      	beq.n	900080a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4d0>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000812a:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
9000812e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90008132:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90008136:	60e3      	str	r3, [r4, #12]
        setX(x);
90008138:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000813a:	6121      	str	r1, [r4, #16]
9000813c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000813e:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
90008142:	455e      	cmp	r6, fp
90008144:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90008148:	d0e2      	beq.n	90008110 <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
        setX(x);
9000814a:	4628      	mov	r0, r5
9000814c:	47b0      	blx	r6
        setY(y);
9000814e:	682b      	ldr	r3, [r5, #0]
90008150:	e7df      	b.n	90008112 <_ZN21screen_snake_gameView15handleTickEventEv+0x53e>
        setX(x);
90008152:	4628      	mov	r0, r5
90008154:	4798      	blx	r3
90008156:	e5c1      	b.n	90007cdc <_ZN21screen_snake_gameView15handleTickEventEv+0x108>
90008158:	682a      	ldr	r2, [r5, #0]
        return rect.x;
9000815a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9000815e:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 90008204 <_ZN21screen_snake_gameView15handleTickEventEv+0x630>
        setX(x);
90008162:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
90008164:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
90008168:	455e      	cmp	r6, fp
				head->old_x = head->pixel->getX();
9000816a:	f8ce 300c 	str.w	r3, [lr, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
9000816e:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
90008172:	f8ce 4010 	str.w	r4, [lr, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90008176:	b219      	sxth	r1, r3
        setX(x);
90008178:	f040 80b6 	bne.w	900082e8 <_ZN21screen_snake_gameView15handleTickEventEv+0x714>
        rect.x = x;
9000817c:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000817e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90008180:	f8df 9084 	ldr.w	r9, [pc, #132]	; 90008208 <_ZN21screen_snake_gameView15handleTickEventEv+0x634>
90008184:	454b      	cmp	r3, r9
90008186:	f040 80ab 	bne.w	900082e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x70c>
        rect.y = y;
9000818a:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
9000818c:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90008190:	689b      	ldr	r3, [r3, #8]
90008192:	6958      	ldr	r0, [r3, #20]
90008194:	6803      	ldr	r3, [r0, #0]
90008196:	695b      	ldr	r3, [r3, #20]
90008198:	4798      	blx	r3
				snake_piece *piece = head->next;
9000819a:	f8da 3000 	ldr.w	r3, [sl]
9000819e:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
900081a0:	b974      	cbnz	r4, 900081c0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5ec>
900081a2:	e08f      	b.n	900082c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f0>
        rect.x = x;
900081a4:	80a9      	strh	r1, [r5, #4]
        setY(y);
900081a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900081a8:	454b      	cmp	r3, r9
900081aa:	d11d      	bne.n	900081e8 <_ZN21screen_snake_gameView15handleTickEventEv+0x614>
        return parent;
900081ac:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900081ae:	80ef      	strh	r7, [r5, #6]
        return parent;
900081b0:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
900081b2:	6803      	ldr	r3, [r0, #0]
900081b4:	695b      	ldr	r3, [r3, #20]
900081b6:	4798      	blx	r3
					piece = piece->next;
900081b8:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
900081ba:	2c00      	cmp	r4, #0
900081bc:	f43f af72 	beq.w	900080a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4d0>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900081c0:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900081c4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900081c8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900081cc:	60e3      	str	r3, [r4, #12]
        setX(x);
900081ce:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
900081d0:	6121      	str	r1, [r4, #16]
900081d2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900081d4:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
900081d8:	455e      	cmp	r6, fp
900081da:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900081de:	d0e1      	beq.n	900081a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setX(x);
900081e0:	4628      	mov	r0, r5
900081e2:	47b0      	blx	r6
        setY(y);
900081e4:	682b      	ldr	r3, [r5, #0]
900081e6:	e7de      	b.n	900081a6 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d2>
900081e8:	4639      	mov	r1, r7
900081ea:	4628      	mov	r0, r5
900081ec:	4798      	blx	r3
        return parent;
900081ee:	68a3      	ldr	r3, [r4, #8]
900081f0:	e7de      	b.n	900081b0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5dc>
        setY(y);
900081f2:	4639      	mov	r1, r7
900081f4:	4628      	mov	r0, r5
900081f6:	4798      	blx	r3
        return parent;
900081f8:	68a3      	ldr	r3, [r4, #8]
900081fa:	e78f      	b.n	9000811c <_ZN21screen_snake_gameView15handleTickEventEv+0x548>
900081fc:	2401f88c 	.word	0x2401f88c
90008200:	2400987c 	.word	0x2400987c
90008204:	9000228d 	.word	0x9000228d
90008208:	90002291 	.word	0x90002291
9000820c:	24000034 	.word	0x24000034
90008210:	24009878 	.word	0x24009878
90008214:	9002d0e8 	.word	0x9002d0e8
90008218:	24009888 	.word	0x24009888
9000821c:	24009884 	.word	0x24009884
        return rect.y;
90008220:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90008224:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90008228:	f8ce 3010 	str.w	r3, [lr, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
9000822c:	3b0a      	subs	r3, #10
9000822e:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 90008328 <_ZN21screen_snake_gameView15handleTickEventEv+0x754>
90008232:	b21c      	sxth	r4, r3
        setX(x);
90008234:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
90008236:	f8ce 100c 	str.w	r1, [lr, #12]
9000823a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000823c:	455a      	cmp	r2, fp
9000823e:	d15b      	bne.n	900082f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x724>
        rect.x = x;
90008240:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008242:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90008244:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 9000832c <_ZN21screen_snake_gameView15handleTickEventEv+0x758>
90008248:	454b      	cmp	r3, r9
9000824a:	d151      	bne.n	900082f0 <_ZN21screen_snake_gameView15handleTickEventEv+0x71c>
        rect.y = y;
9000824c:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
9000824e:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90008252:	689b      	ldr	r3, [r3, #8]
90008254:	6958      	ldr	r0, [r3, #20]
90008256:	6803      	ldr	r3, [r0, #0]
90008258:	695b      	ldr	r3, [r3, #20]
9000825a:	4798      	blx	r3
				snake_piece *piece = head->next;
9000825c:	f8da 3000 	ldr.w	r3, [sl]
90008260:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90008262:	b974      	cbnz	r4, 90008282 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ae>
90008264:	e02e      	b.n	900082c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6f0>
        rect.x = x;
90008266:	80a9      	strh	r1, [r5, #4]
        setY(y);
90008268:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000826a:	454b      	cmp	r3, r9
9000826c:	d11d      	bne.n	900082aa <_ZN21screen_snake_gameView15handleTickEventEv+0x6d6>
        return parent;
9000826e:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90008270:	80ef      	strh	r7, [r5, #6]
        return parent;
90008272:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90008274:	6803      	ldr	r3, [r0, #0]
90008276:	695b      	ldr	r3, [r3, #20]
90008278:	4798      	blx	r3
					piece = piece->next;
9000827a:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
9000827c:	2c00      	cmp	r4, #0
9000827e:	f43f af11 	beq.w	900080a4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4d0>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90008282:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90008286:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
9000828a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
9000828e:	60e3      	str	r3, [r4, #12]
        setX(x);
90008290:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90008292:	6121      	str	r1, [r4, #16]
90008294:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90008296:	f9b2 7010 	ldrsh.w	r7, [r2, #16]
9000829a:	455e      	cmp	r6, fp
9000829c:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900082a0:	d0e1      	beq.n	90008266 <_ZN21screen_snake_gameView15handleTickEventEv+0x692>
        setX(x);
900082a2:	4628      	mov	r0, r5
900082a4:	47b0      	blx	r6
        setY(y);
900082a6:	682b      	ldr	r3, [r5, #0]
900082a8:	e7de      	b.n	90008268 <_ZN21screen_snake_gameView15handleTickEventEv+0x694>
900082aa:	4639      	mov	r1, r7
900082ac:	4628      	mov	r0, r5
900082ae:	4798      	blx	r3
        return parent;
900082b0:	68a3      	ldr	r3, [r4, #8]
900082b2:	e7de      	b.n	90008272 <_ZN21screen_snake_gameView15handleTickEventEv+0x69e>
        setY(y);
900082b4:	4621      	mov	r1, r4
900082b6:	4628      	mov	r0, r5
900082b8:	4798      	blx	r3
900082ba:	e5d6      	b.n	90007e6a <_ZN21screen_snake_gameView15handleTickEventEv+0x296>
        setX(x);
900082bc:	4628      	mov	r0, r5
900082be:	4798      	blx	r3
        setY(y);
900082c0:	682a      	ldr	r2, [r5, #0]
900082c2:	e5cb      	b.n	90007e5c <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
			head->pixel->getParent()->invalidate();
900082c4:	689d      	ldr	r5, [r3, #8]
900082c6:	e6d5      	b.n	90008074 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a0>
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900082c8:	4638      	mov	r0, r7
900082ca:	4790      	blx	r2
900082cc:	e57c      	b.n	90007dc8 <_ZN21screen_snake_gameView15handleTickEventEv+0x1f4>
					int food_new_x = pseudo_random(tick) % SCREEN_WIDTH;
900082ce:	4638      	mov	r0, r7
900082d0:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % SCREEN_HEIGHT;
900082d2:	6831      	ldr	r1, [r6, #0]
900082d4:	683a      	ldr	r2, [r7, #0]
900082d6:	e555      	b.n	90007d84 <_ZN21screen_snake_gameView15handleTickEventEv+0x1b0>
900082d8:	2100      	movs	r1, #0
900082da:	4628      	mov	r0, r5
900082dc:	4790      	blx	r2
900082de:	e50a      	b.n	90007cf6 <_ZN21screen_snake_gameView15handleTickEventEv+0x122>
900082e0:	4621      	mov	r1, r4
900082e2:	4628      	mov	r0, r5
900082e4:	4798      	blx	r3
900082e6:	e751      	b.n	9000818c <_ZN21screen_snake_gameView15handleTickEventEv+0x5b8>
        setX(x);
900082e8:	4628      	mov	r0, r5
900082ea:	47b0      	blx	r6
        setY(y);
900082ec:	682a      	ldr	r2, [r5, #0]
900082ee:	e746      	b.n	9000817e <_ZN21screen_snake_gameView15handleTickEventEv+0x5aa>
900082f0:	4621      	mov	r1, r4
900082f2:	4628      	mov	r0, r5
900082f4:	4798      	blx	r3
900082f6:	e7aa      	b.n	9000824e <_ZN21screen_snake_gameView15handleTickEventEv+0x67a>
        setX(x);
900082f8:	4628      	mov	r0, r5
900082fa:	4790      	blx	r2
        setY(y);
900082fc:	682b      	ldr	r3, [r5, #0]
900082fe:	e7a0      	b.n	90008242 <_ZN21screen_snake_gameView15handleTickEventEv+0x66e>
90008300:	4621      	mov	r1, r4
90008302:	4628      	mov	r0, r5
90008304:	4798      	blx	r3
90008306:	e6f7      	b.n	900080f8 <_ZN21screen_snake_gameView15handleTickEventEv+0x524>
        setX(x);
90008308:	4628      	mov	r0, r5
9000830a:	4790      	blx	r2
        setY(y);
9000830c:	682b      	ldr	r3, [r5, #0]
9000830e:	e6ec      	b.n	900080ea <_ZN21screen_snake_gameView15handleTickEventEv+0x516>
		if( tick > 0 ) {
90008310:	4e04      	ldr	r6, [pc, #16]	; (90008324 <_ZN21screen_snake_gameView15handleTickEventEv+0x750>)
90008312:	6832      	ldr	r2, [r6, #0]
90008314:	2a00      	cmp	r2, #0
90008316:	f77f ae54 	ble.w	90007fc2 <_ZN21screen_snake_gameView15handleTickEventEv+0x3ee>
9000831a:	e682      	b.n	90008022 <_ZN21screen_snake_gameView15handleTickEventEv+0x44e>
						error();
9000831c:	683b      	ldr	r3, [r7, #0]
9000831e:	4638      	mov	r0, r7
90008320:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90008322:	e6aa      	b.n	9000807a <_ZN21screen_snake_gameView15handleTickEventEv+0x4a6>
90008324:	2400987c 	.word	0x2400987c
90008328:	9000228d 	.word	0x9000228d
9000832c:	90002291 	.word	0x90002291

90008330 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
90008330:	b500      	push	{lr}
          touchable(false),
90008332:	f44f 7180 	mov.w	r1, #256	; 0x100
90008336:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
90008338:	4a0f      	ldr	r2, [pc, #60]	; (90008378 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
9000833a:	2300      	movs	r3, #0
          touchable(false),
9000833c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
90008340:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
90008344:	490d      	ldr	r1, [pc, #52]	; (9000837c <_ZN21screen_snake_gameView5errorEv+0x4c>)
90008346:	3004      	adds	r0, #4
90008348:	9201      	str	r2, [sp, #4]
        color = newColor;
9000834a:	4a0d      	ldr	r2, [pc, #52]	; (90008380 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
9000834c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90008350:	920b      	str	r2, [sp, #44]	; 0x2c
90008352:	e9cd 3102 	strd	r3, r1, [sp, #8]
90008356:	a901      	add	r1, sp, #4
          nextSibling(0),
90008358:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
9000835c:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90008360:	e9cd 3304 	strd	r3, r3, [sp, #16]
90008364:	f00a fae8 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90008368:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
9000836a:	6803      	ldr	r3, [r0, #0]
9000836c:	695b      	ldr	r3, [r3, #20]
9000836e:	4798      	blx	r3
}
90008370:	b00d      	add	sp, #52	; 0x34
90008372:	f85d fb04 	ldr.w	pc, [sp], #4
90008376:	bf00      	nop
90008378:	9002d9a0 	.word	0x9002d9a0
9000837c:	011001e0 	.word	0x011001e0
90008380:	ffff0000 	.word	0xffff0000

90008384 <_ZN30screen_space_invadersPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_space_invadersPresenter() {}
90008384:	4770      	bx	lr
90008386:	bf00      	nop

90008388 <_ZThn4_N30screen_space_invadersPresenterD1Ev>:
90008388:	3804      	subs	r0, #4
9000838a:	4770      	bx	lr

9000838c <_ZN30screen_space_invadersPresenter10deactivateEv>:
}

void screen_space_invadersPresenter::activate()
{

}
9000838c:	4770      	bx	lr
9000838e:	bf00      	nop

90008390 <_ZN30screen_space_invadersPresenterD0Ev>:
90008390:	b510      	push	{r4, lr}
90008392:	4604      	mov	r4, r0
90008394:	2110      	movs	r1, #16
90008396:	f021 f865 	bl	90029464 <_ZdlPvj>
9000839a:	4620      	mov	r0, r4
9000839c:	bd10      	pop	{r4, pc}
9000839e:	bf00      	nop

900083a0 <_ZThn4_N30screen_space_invadersPresenterD0Ev>:
900083a0:	b500      	push	{lr}
900083a2:	3804      	subs	r0, #4
900083a4:	b083      	sub	sp, #12
900083a6:	2110      	movs	r1, #16
900083a8:	9001      	str	r0, [sp, #4]
900083aa:	f021 f85b 	bl	90029464 <_ZdlPvj>
900083ae:	9801      	ldr	r0, [sp, #4]
900083b0:	b003      	add	sp, #12
900083b2:	f85d fb04 	ldr.w	pc, [sp], #4
900083b6:	bf00      	nop

900083b8 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView>:
    : view(v)
900083b8:	4a06      	ldr	r2, [pc, #24]	; (900083d4 <_ZN30screen_space_invadersPresenterC1ER25screen_space_invadersView+0x1c>)
900083ba:	60c1      	str	r1, [r0, #12]
screen_space_invadersPresenter::screen_space_invadersPresenter(screen_space_invadersView& v)
900083bc:	b410      	push	{r4}
900083be:	2400      	movs	r4, #0
900083c0:	6084      	str	r4, [r0, #8]
    : view(v)
900083c2:	f102 0408 	add.w	r4, r2, #8
900083c6:	3220      	adds	r2, #32
900083c8:	e9c0 4200 	strd	r4, r2, [r0]
}
900083cc:	f85d 4b04 	ldr.w	r4, [sp], #4
900083d0:	4770      	bx	lr
900083d2:	bf00      	nop
900083d4:	9002d140 	.word	0x9002d140

900083d8 <_ZN25screen_space_invadersView14tearDownScreenEv>:
}

void screen_space_invadersView::tearDownScreen()
{
    screen_space_invadersViewBase::tearDownScreen();
}
900083d8:	4770      	bx	lr
900083da:	bf00      	nop

900083dc <_ZN25screen_space_invadersView15check_game_overEv>:
		}
	}
}

void screen_space_invadersView::check_game_over()
{
900083dc:	b5f0      	push	{r4, r5, r6, r7, lr}
        return visible;
900083de:	4c75      	ldr	r4, [pc, #468]	; (900085b4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d8>)
	// check that the player hasn't killed all the enemies
	invaders_game_over = true;
900083e0:	2301      	movs	r3, #1
900083e2:	4f75      	ldr	r7, [pc, #468]	; (900085b8 <_ZN25screen_space_invadersView15check_game_overEv+0x1dc>)
900083e4:	f894 6025 	ldrb.w	r6, [r4, #37]	; 0x25
900083e8:	703b      	strb	r3, [r7, #0]
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
		if( enemies[i].isVisible()) {
900083ea:	2e00      	cmp	r6, #0
900083ec:	f040 80de 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
900083f0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
900083f4:	2b00      	cmp	r3, #0
900083f6:	f040 80d9 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
900083fa:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
900083fe:	2b00      	cmp	r3, #0
90008400:	f040 80d4 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008404:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
90008408:	2b00      	cmp	r3, #0
9000840a:	f040 80cf 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000840e:	f894 30d5 	ldrb.w	r3, [r4, #213]	; 0xd5
90008412:	2b00      	cmp	r3, #0
90008414:	f040 80ca 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008418:	f894 3101 	ldrb.w	r3, [r4, #257]	; 0x101
9000841c:	2b00      	cmp	r3, #0
9000841e:	f040 80c5 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008422:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
90008426:	2b00      	cmp	r3, #0
90008428:	f040 80c0 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000842c:	f894 3159 	ldrb.w	r3, [r4, #345]	; 0x159
90008430:	2b00      	cmp	r3, #0
90008432:	f040 80bb 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008436:	f894 3185 	ldrb.w	r3, [r4, #389]	; 0x185
9000843a:	2b00      	cmp	r3, #0
9000843c:	f040 80b6 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008440:	f894 31b1 	ldrb.w	r3, [r4, #433]	; 0x1b1
90008444:	2b00      	cmp	r3, #0
90008446:	f040 80b1 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000844a:	f894 31dd 	ldrb.w	r3, [r4, #477]	; 0x1dd
9000844e:	2b00      	cmp	r3, #0
90008450:	f040 80ac 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
90008454:	f894 3209 	ldrb.w	r3, [r4, #521]	; 0x209
90008458:	2b00      	cmp	r3, #0
9000845a:	f040 80a7 	bne.w	900085ac <_ZN25screen_space_invadersView15check_game_overEv+0x1d0>
9000845e:	4b55      	ldr	r3, [pc, #340]	; (900085b4 <_ZN25screen_space_invadersView15check_game_overEv+0x1d8>)
90008460:	f503 7504 	add.w	r5, r3, #528	; 0x210
90008464:	e009      	b.n	9000847a <_ZN25screen_space_invadersView15check_game_overEv+0x9e>

		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
			&& ship.getX() > enemies[i].getX()
			&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
			|| (ship.getX() + ship.getWidth() < enemies[i].getX()+enemies[i].getWidth()
90008466:	f9b0 c180 	ldrsh.w	ip, [r0, #384]	; 0x180
9000846a:	44f4      	add	ip, lr
				&& ship.getX() + ship.getWidth() > enemies[i].getX()
9000846c:	4561      	cmp	r1, ip
9000846e:	da01      	bge.n	90008474 <_ZN25screen_space_invadersView15check_game_overEv+0x98>
90008470:	4562      	cmp	r2, ip
90008472:	dc26      	bgt.n	900084c2 <_ZN25screen_space_invadersView15check_game_overEv+0xe6>
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008474:	332c      	adds	r3, #44	; 0x2c
90008476:	42ab      	cmp	r3, r5
90008478:	d038      	beq.n	900084ec <_ZN25screen_space_invadersView15check_game_overEv+0x110>
		if( !enemies[i].isVisible() )
9000847a:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
9000847e:	2a00      	cmp	r2, #0
90008480:	d0f8      	beq.n	90008474 <_ZN25screen_space_invadersView15check_game_overEv+0x98>
        return rect.x;
90008482:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90008486:	f9b0 e17c 	ldrsh.w	lr, [r0, #380]	; 0x17c
		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
9000848a:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
			&& ship.getX() > enemies[i].getX()
9000848e:	458e      	cmp	lr, r1
		if( (ship.getX() < enemies[i].getX()+enemies[i].getWidth()
90008490:	440a      	add	r2, r1
			&& ship.getX() > enemies[i].getX()
90008492:	dde8      	ble.n	90008466 <_ZN25screen_space_invadersView15check_game_overEv+0x8a>
90008494:	4596      	cmp	lr, r2
90008496:	dae6      	bge.n	90008466 <_ZN25screen_space_invadersView15check_game_overEv+0x8a>
			&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
90008498:	f9b0 1182 	ldrsh.w	r1, [r0, #386]	; 0x182
9000849c:	f9b0 217e 	ldrsh.w	r2, [r0, #382]	; 0x17e
900084a0:	2900      	cmp	r1, #0
900084a2:	f9b3 c006 	ldrsh.w	ip, [r3, #6]
900084a6:	bfb8      	it	lt
900084a8:	3101      	addlt	r1, #1
900084aa:	eb02 0261 	add.w	r2, r2, r1, asr #1
900084ae:	4562      	cmp	r2, ip
900084b0:	dde0      	ble.n	90008474 <_ZN25screen_space_invadersView15check_game_overEv+0x98>
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
900084b2:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
900084b6:	4461      	add	r1, ip
900084b8:	428a      	cmp	r2, r1
900084ba:	dadb      	bge.n	90008474 <_ZN25screen_space_invadersView15check_game_overEv+0x98>
				&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
				&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())	)
		{
			// Enemy collided with the player
			invaders_game_over = true;
900084bc:	2301      	movs	r3, #1
900084be:	703b      	strb	r3, [r7, #0]
			// Enemy has gone past the player
			invaders_game_over = true;
			return;
		}
	}
}
900084c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				&& ship.getY() + ship.getHeight()/2 > enemies[i].getY()
900084c2:	f9b0 1182 	ldrsh.w	r1, [r0, #386]	; 0x182
900084c6:	f9b0 217e 	ldrsh.w	r2, [r0, #382]	; 0x17e
900084ca:	2900      	cmp	r1, #0
900084cc:	bfb8      	it	lt
900084ce:	3101      	addlt	r1, #1
900084d0:	eb02 0261 	add.w	r2, r2, r1, asr #1
900084d4:	f9b3 1006 	ldrsh.w	r1, [r3, #6]
900084d8:	428a      	cmp	r2, r1
900084da:	ddcb      	ble.n	90008474 <_ZN25screen_space_invadersView15check_game_overEv+0x98>
			&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())
900084dc:	f9b3 c00a 	ldrsh.w	ip, [r3, #10]
900084e0:	4461      	add	r1, ip
				&& ship.getY() + ship.getHeight()/2 < enemies[i].getY() + enemies[i].getHeight())	)
900084e2:	428a      	cmp	r2, r1
900084e4:	dbea      	blt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
	for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900084e6:	332c      	adds	r3, #44	; 0x2c
900084e8:	42ab      	cmp	r3, r5
900084ea:	d1c6      	bne.n	9000847a <_ZN25screen_space_invadersView15check_game_overEv+0x9e>
		if( !enemies[i].isVisible() )
900084ec:	b126      	cbz	r6, 900084f8 <_ZN25screen_space_invadersView15check_game_overEv+0x11c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900084ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900084f2:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900084f6:	dce1      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
900084f8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
900084fc:	b123      	cbz	r3, 90008508 <_ZN25screen_space_invadersView15check_game_overEv+0x12c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900084fe:	f9b4 3032 	ldrsh.w	r3, [r4, #50]	; 0x32
90008502:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008506:	dcd9      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008508:	f894 307d 	ldrb.w	r3, [r4, #125]	; 0x7d
9000850c:	b123      	cbz	r3, 90008518 <_ZN25screen_space_invadersView15check_game_overEv+0x13c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000850e:	f9b4 305e 	ldrsh.w	r3, [r4, #94]	; 0x5e
90008512:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008516:	dcd1      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008518:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
9000851c:	b123      	cbz	r3, 90008528 <_ZN25screen_space_invadersView15check_game_overEv+0x14c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000851e:	f9b4 308a 	ldrsh.w	r3, [r4, #138]	; 0x8a
90008522:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008526:	dcc9      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008528:	f894 30d5 	ldrb.w	r3, [r4, #213]	; 0xd5
9000852c:	b123      	cbz	r3, 90008538 <_ZN25screen_space_invadersView15check_game_overEv+0x15c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000852e:	f9b4 30b6 	ldrsh.w	r3, [r4, #182]	; 0xb6
90008532:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008536:	dcc1      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008538:	f894 3101 	ldrb.w	r3, [r4, #257]	; 0x101
9000853c:	b123      	cbz	r3, 90008548 <_ZN25screen_space_invadersView15check_game_overEv+0x16c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000853e:	f9b4 30e2 	ldrsh.w	r3, [r4, #226]	; 0xe2
90008542:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008546:	dcb9      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008548:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
9000854c:	b123      	cbz	r3, 90008558 <_ZN25screen_space_invadersView15check_game_overEv+0x17c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000854e:	f9b4 310e 	ldrsh.w	r3, [r4, #270]	; 0x10e
90008552:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008556:	dcb1      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008558:	f894 3159 	ldrb.w	r3, [r4, #345]	; 0x159
9000855c:	b123      	cbz	r3, 90008568 <_ZN25screen_space_invadersView15check_game_overEv+0x18c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000855e:	f9b4 313a 	ldrsh.w	r3, [r4, #314]	; 0x13a
90008562:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008566:	dca9      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008568:	f894 3185 	ldrb.w	r3, [r4, #389]	; 0x185
9000856c:	b123      	cbz	r3, 90008578 <_ZN25screen_space_invadersView15check_game_overEv+0x19c>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000856e:	f9b4 3166 	ldrsh.w	r3, [r4, #358]	; 0x166
90008572:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008576:	dca1      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008578:	f894 31b1 	ldrb.w	r3, [r4, #433]	; 0x1b1
9000857c:	b123      	cbz	r3, 90008588 <_ZN25screen_space_invadersView15check_game_overEv+0x1ac>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000857e:	f9b4 3192 	ldrsh.w	r3, [r4, #402]	; 0x192
90008582:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008586:	dc99      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008588:	f894 31dd 	ldrb.w	r3, [r4, #477]	; 0x1dd
9000858c:	b123      	cbz	r3, 90008598 <_ZN25screen_space_invadersView15check_game_overEv+0x1bc>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
9000858e:	f9b4 31be 	ldrsh.w	r3, [r4, #446]	; 0x1be
90008592:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90008596:	dc91      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
		if( !enemies[i].isVisible() )
90008598:	f894 3209 	ldrb.w	r3, [r4, #521]	; 0x209
9000859c:	2b00      	cmp	r3, #0
9000859e:	d08f      	beq.n	900084c0 <_ZN25screen_space_invadersView15check_game_overEv+0xe4>
		if( enemies[i].getY() > SCREEN_HEIGHT ) {
900085a0:	f9b4 31ea 	ldrsh.w	r3, [r4, #490]	; 0x1ea
900085a4:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
900085a8:	dc88      	bgt.n	900084bc <_ZN25screen_space_invadersView15check_game_overEv+0xe0>
}
900085aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
			invaders_game_over = false;
900085ac:	2300      	movs	r3, #0
900085ae:	703b      	strb	r3, [r7, #0]
			break;
900085b0:	e755      	b.n	9000845e <_ZN25screen_space_invadersView15check_game_overEv+0x82>
900085b2:	bf00      	nop
900085b4:	2401f898 	.word	0x2401f898
900085b8:	2401faac 	.word	0x2401faac

900085bc <_ZN25screen_space_invadersViewD1Ev>:

class screen_space_invadersView : public screen_space_invadersViewBase
{
public:
    screen_space_invadersView();
    virtual ~screen_space_invadersView() {}
900085bc:	4b03      	ldr	r3, [pc, #12]	; (900085cc <_ZN25screen_space_invadersViewD1Ev+0x10>)
900085be:	b510      	push	{r4, lr}
900085c0:	4604      	mov	r4, r0
900085c2:	6003      	str	r3, [r0, #0]
900085c4:	f7fd f9b4 	bl	90005930 <_ZN29screen_space_invadersViewBaseD1Ev>
900085c8:	4620      	mov	r0, r4
900085ca:	bd10      	pop	{r4, pc}
900085cc:	9002d170 	.word	0x9002d170

900085d0 <_ZN25screen_space_invadersViewD0Ev>:
900085d0:	4b06      	ldr	r3, [pc, #24]	; (900085ec <_ZN25screen_space_invadersViewD0Ev+0x1c>)
900085d2:	b510      	push	{r4, lr}
900085d4:	4604      	mov	r4, r0
900085d6:	6003      	str	r3, [r0, #0]
900085d8:	f7fd f9aa 	bl	90005930 <_ZN29screen_space_invadersViewBaseD1Ev>
900085dc:	f641 716c 	movw	r1, #8044	; 0x1f6c
900085e0:	4620      	mov	r0, r4
900085e2:	f020 ff3f 	bl	90029464 <_ZdlPvj>
900085e6:	4620      	mov	r0, r4
900085e8:	bd10      	pop	{r4, pc}
900085ea:	bf00      	nop
900085ec:	9002d170 	.word	0x9002d170

900085f0 <_GLOBAL__sub_I_enemies>:
}
900085f0:	b570      	push	{r4, r5, r6, lr}
900085f2:	4c08      	ldr	r4, [pc, #32]	; (90008614 <_GLOBAL__sub_I_enemies+0x24>)
900085f4:	b082      	sub	sp, #8
900085f6:	f64f 76ff 	movw	r6, #65535	; 0xffff
900085fa:	f504 7504 	add.w	r5, r4, #528	; 0x210
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
900085fe:	4620      	mov	r0, r4
90008600:	342c      	adds	r4, #44	; 0x2c
90008602:	a901      	add	r1, sp, #4
90008604:	f8ad 6004 	strh.w	r6, [sp, #4]
90008608:	f00c f8c4 	bl	90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000860c:	42ac      	cmp	r4, r5
9000860e:	d1f6      	bne.n	900085fe <_GLOBAL__sub_I_enemies+0xe>
}
90008610:	b002      	add	sp, #8
90008612:	bd70      	pop	{r4, r5, r6, pc}
90008614:	2401f898 	.word	0x2401f898

90008618 <_GLOBAL__sub_D_enemies>:
90008618:	b538      	push	{r3, r4, r5, lr}
touchgfx::ScalableImage enemies[NUM_OF_ENEMIES];
9000861a:	4c05      	ldr	r4, [pc, #20]	; (90008630 <_GLOBAL__sub_D_enemies+0x18>)
9000861c:	f5a4 7504 	sub.w	r5, r4, #528	; 0x210
90008620:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90008624:	681b      	ldr	r3, [r3, #0]
90008626:	4620      	mov	r0, r4
90008628:	4798      	blx	r3
9000862a:	42ac      	cmp	r4, r5
9000862c:	d1f8      	bne.n	90008620 <_GLOBAL__sub_D_enemies+0x8>
}
9000862e:	bd38      	pop	{r3, r4, r5, pc}
90008630:	2401faa8 	.word	0x2401faa8

90008634 <_ZN25screen_space_invadersView15handleTickEventEv>:
	if( !invaders_game_over ) {
90008634:	4b82      	ldr	r3, [pc, #520]	; (90008840 <_ZN25screen_space_invadersView15handleTickEventEv+0x20c>)
{
90008636:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !invaders_game_over ) {
9000863a:	781d      	ldrb	r5, [r3, #0]
{
9000863c:	b082      	sub	sp, #8
9000863e:	4604      	mov	r4, r0
	if( !invaders_game_over ) {
90008640:	2d00      	cmp	r5, #0
90008642:	d169      	bne.n	90008718 <_ZN25screen_space_invadersView15handleTickEventEv+0xe4>
		check_bullet_hitbox();
90008644:	6803      	ldr	r3, [r0, #0]
90008646:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90008648:	4798      	blx	r3
		if( bullet.isVisible() ) {
9000864a:	f894 31c9 	ldrb.w	r3, [r4, #457]	; 0x1c9
9000864e:	2b00      	cmp	r3, #0
90008650:	d14c      	bne.n	900086ec <_ZN25screen_space_invadersView15handleTickEventEv+0xb8>
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
90008652:	f894 30c4 	ldrb.w	r3, [r4, #196]	; 0xc4
90008656:	2b00      	cmp	r3, #0
90008658:	d140      	bne.n	900086dc <_ZN25screen_space_invadersView15handleTickEventEv+0xa8>
		else if( btn_right.getPressedState() && ship.getX() + ship.getWidth() < SCREEN_WIDTH ) {
9000865a:	f894 3100 	ldrb.w	r3, [r4, #256]	; 0x100
9000865e:	b13b      	cbz	r3, 90008670 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
90008660:	f9b4 217c 	ldrsh.w	r2, [r4, #380]	; 0x17c
90008664:	f9b4 3180 	ldrsh.w	r3, [r4, #384]	; 0x180
90008668:	4413      	add	r3, r2
9000866a:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
9000866e:	db6d      	blt.n	9000874c <_ZN25screen_space_invadersView15handleTickEventEv+0x118>
        return parent;
90008670:	f8d4 018c 	ldr.w	r0, [r4, #396]	; 0x18c
		ship.getParent()->invalidate();
90008674:	6803      	ldr	r3, [r0, #0]
90008676:	695b      	ldr	r3, [r3, #20]
90008678:	4798      	blx	r3
		if( ++tick%10 == 0 ) {
9000867a:	4972      	ldr	r1, [pc, #456]	; (90008844 <_ZN25screen_space_invadersView15handleTickEventEv+0x210>)
9000867c:	4872      	ldr	r0, [pc, #456]	; (90008848 <_ZN25screen_space_invadersView15handleTickEventEv+0x214>)
9000867e:	680b      	ldr	r3, [r1, #0]
90008680:	4a72      	ldr	r2, [pc, #456]	; (9000884c <_ZN25screen_space_invadersView15handleTickEventEv+0x218>)
90008682:	3301      	adds	r3, #1
90008684:	fb00 2203 	mla	r2, r0, r3, r2
90008688:	4871      	ldr	r0, [pc, #452]	; (90008850 <_ZN25screen_space_invadersView15handleTickEventEv+0x21c>)
9000868a:	600b      	str	r3, [r1, #0]
9000868c:	ebb0 0f72 	cmp.w	r0, r2, ror #1
90008690:	d91d      	bls.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
			if( enemy_move_direction == MOVE_RIGHT ) {
90008692:	4a70      	ldr	r2, [pc, #448]	; (90008854 <_ZN25screen_space_invadersView15handleTickEventEv+0x220>)
90008694:	6813      	ldr	r3, [r2, #0]
90008696:	2b01      	cmp	r3, #1
90008698:	f000 808a 	beq.w	900087b0 <_ZN25screen_space_invadersView15handleTickEventEv+0x17c>
			else if( enemy_move_direction == MOVE_LEFT ) {
9000869c:	2b00      	cmp	r3, #0
9000869e:	d159      	bne.n	90008754 <_ZN25screen_space_invadersView15handleTickEventEv+0x120>
        return rect.x;
900086a0:	4d6d      	ldr	r5, [pc, #436]	; (90008858 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( enemies[0].getX() > 10 ) {
900086a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900086a6:	2b0a      	cmp	r3, #10
900086a8:	f340 80a2 	ble.w	900087f0 <_ZN25screen_space_invadersView15handleTickEventEv+0x1bc>
900086ac:	4e6b      	ldr	r6, [pc, #428]	; (9000885c <_ZN25screen_space_invadersView15handleTickEventEv+0x228>)
900086ae:	f505 7704 	add.w	r7, r5, #528	; 0x210
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900086b2:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900086b4:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
900086b6:	88a9      	ldrh	r1, [r5, #4]
900086b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900086ba:	390a      	subs	r1, #10
900086bc:	42b2      	cmp	r2, r6
900086be:	b209      	sxth	r1, r1
900086c0:	d16d      	bne.n	9000879e <_ZN25screen_space_invadersView15handleTickEventEv+0x16a>
        rect.x = x;
900086c2:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900086c4:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900086c6:	695b      	ldr	r3, [r3, #20]
900086c8:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900086ca:	42af      	cmp	r7, r5
900086cc:	d1f1      	bne.n	900086b2 <_ZN25screen_space_invadersView15handleTickEventEv+0x7e>
		check_game_over();
900086ce:	6823      	ldr	r3, [r4, #0]
900086d0:	4620      	mov	r0, r4
900086d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
900086d4:	b002      	add	sp, #8
900086d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		check_game_over();
900086da:	4718      	bx	r3
        return rect.x;
900086dc:	f9b4 317c 	ldrsh.w	r3, [r4, #380]	; 0x17c
		if( btn_left.getPressedState() && ship.getX() > 0 ) {
900086e0:	2b00      	cmp	r3, #0
900086e2:	ddba      	ble.n	9000865a <_ZN25screen_space_invadersView15handleTickEventEv+0x26>
			ship.setX(ship.getX() - SHIP_MOVE_SPEED);
900086e4:	3b0a      	subs	r3, #10
        rect.x = x;
900086e6:	f8a4 317c 	strh.w	r3, [r4, #380]	; 0x17c
    }
900086ea:	e7c1      	b.n	90008670 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
900086ec:	f8b4 31aa 	ldrh.w	r3, [r4, #426]	; 0x1aa
			bullet.invalidate();
900086f0:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
			bullet.setY(bullet.getY() - BULLET_MOVE_SPEED);
900086f4:	3b0a      	subs	r3, #10
			bullet.invalidate();
900086f6:	9001      	str	r0, [sp, #4]
        rect.y = y;
900086f8:	f8a4 31aa 	strh.w	r3, [r4, #426]	; 0x1aa
900086fc:	f00b fb84 	bl	90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
			if( bullet.getY()+bullet.getHeight() < 0 ) {
90008700:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
90008704:	f9b4 31ae 	ldrsh.w	r3, [r4, #430]	; 0x1ae
90008708:	9801      	ldr	r0, [sp, #4]
9000870a:	42da      	cmn	r2, r3
9000870c:	d5a1      	bpl.n	90008652 <_ZN25screen_space_invadersView15handleTickEventEv+0x1e>
        visible = vis;
9000870e:	f884 51c9 	strb.w	r5, [r4, #457]	; 0x1c9
				bullet.invalidate();
90008712:	f00b fb79 	bl	90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
90008716:	e79c      	b.n	90008652 <_ZN25screen_space_invadersView15handleTickEventEv+0x1e>
90008718:	2501      	movs	r5, #1
		lbl_game_over.invalidate();
9000871a:	f500 7019 	add.w	r0, r0, #612	; 0x264
9000871e:	f884 5289 	strb.w	r5, [r4, #649]	; 0x289
90008722:	f010 fe02 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		btn_back.invalidate();
90008726:	f504 700a 	add.w	r0, r4, #552	; 0x228
9000872a:	f884 524d 	strb.w	r5, [r4, #589]	; 0x24d
9000872e:	f010 fdfc 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( enemies_killed == NUM_OF_ENEMIES ) {
90008732:	4b4b      	ldr	r3, [pc, #300]	; (90008860 <_ZN25screen_space_invadersView15handleTickEventEv+0x22c>)
90008734:	681b      	ldr	r3, [r3, #0]
90008736:	2b0c      	cmp	r3, #12
90008738:	d05d      	beq.n	900087f6 <_ZN25screen_space_invadersView15handleTickEventEv+0x1c2>
			lbl_lose.invalidate();
9000873a:	f504 703d 	add.w	r0, r4, #756	; 0x2f4
9000873e:	f884 5319 	strb.w	r5, [r4, #793]	; 0x319
}
90008742:	b002      	add	sp, #8
90008744:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			lbl_lose.invalidate();
90008748:	f010 bdef 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
			ship.setX(ship.getX() + SHIP_MOVE_SPEED);
9000874c:	320a      	adds	r2, #10
        rect.x = x;
9000874e:	f8a4 217c 	strh.w	r2, [r4, #380]	; 0x17c
    }
90008752:	e78d      	b.n	90008670 <_ZN25screen_space_invadersView15handleTickEventEv+0x3c>
			else if( enemy_move_direction == MOVE_DOWN ) {
90008754:	2b03      	cmp	r3, #3
90008756:	d1ba      	bne.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
        return rect.height;
90008758:	4d3f      	ldr	r5, [pc, #252]	; (90008858 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( pixels_moved < enemies[0].getHeight()/2 ) {
9000875a:	4e42      	ldr	r6, [pc, #264]	; (90008864 <_ZN25screen_space_invadersView15handleTickEventEv+0x230>)
9000875c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90008760:	6831      	ldr	r1, [r6, #0]
90008762:	2b00      	cmp	r3, #0
90008764:	bfb8      	it	lt
90008766:	3301      	addlt	r3, #1
90008768:	ebb1 0f63 	cmp.w	r1, r3, asr #1
9000876c:	da59      	bge.n	90008822 <_ZN25screen_space_invadersView15handleTickEventEv+0x1ee>
9000876e:	4d3a      	ldr	r5, [pc, #232]	; (90008858 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
90008770:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 90008868 <_ZN25screen_space_invadersView15handleTickEventEv+0x234>
90008774:	f505 7704 	add.w	r7, r5, #528	; 0x210
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008778:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
9000877a:	4628      	mov	r0, r5
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
9000877c:	88e9      	ldrh	r1, [r5, #6]
9000877e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008780:	310a      	adds	r1, #10
90008782:	4542      	cmp	r2, r8
90008784:	b209      	sxth	r1, r1
        return rect.y;
90008786:	d13f      	bne.n	90008808 <_ZN25screen_space_invadersView15handleTickEventEv+0x1d4>
        rect.y = y;
90008788:	80e9      	strh	r1, [r5, #6]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000878a:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
9000878c:	695b      	ldr	r3, [r3, #20]
9000878e:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
90008790:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008792:	42af      	cmp	r7, r5
						pixels_moved += ENEMY_MOVE_SPEED;
90008794:	f103 030a 	add.w	r3, r3, #10
90008798:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000879a:	d1ed      	bne.n	90008778 <_ZN25screen_space_invadersView15handleTickEventEv+0x144>
9000879c:	e797      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemies[i].setX(enemies[i].getX() - ENEMY_MOVE_SPEED);
9000879e:	4790      	blx	r2
						enemies[i].invalidate();
900087a0:	682b      	ldr	r3, [r5, #0]
900087a2:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087a4:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900087a6:	695b      	ldr	r3, [r3, #20]
900087a8:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087aa:	42bd      	cmp	r5, r7
900087ac:	d181      	bne.n	900086b2 <_ZN25screen_space_invadersView15handleTickEventEv+0x7e>
900087ae:	e78e      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
        return rect.x;
900087b0:	4d29      	ldr	r5, [pc, #164]	; (90008858 <_ZN25screen_space_invadersView15handleTickEventEv+0x224>)
				if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
900087b2:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
900087b6:	f9b5 1110 	ldrsh.w	r1, [r5, #272]	; 0x110
900087ba:	440b      	add	r3, r1
900087bc:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
900087c0:	da16      	bge.n	900087f0 <_ZN25screen_space_invadersView15handleTickEventEv+0x1bc>
900087c2:	4e26      	ldr	r6, [pc, #152]	; (9000885c <_ZN25screen_space_invadersView15handleTickEventEv+0x228>)
900087c4:	f505 7704 	add.w	r7, r5, #528	; 0x210
900087c8:	e006      	b.n	900087d8 <_ZN25screen_space_invadersView15handleTickEventEv+0x1a4>
        rect.x = x;
900087ca:	80a9      	strh	r1, [r5, #4]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087cc:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
900087ce:	695b      	ldr	r3, [r3, #20]
900087d0:	4798      	blx	r3
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
900087d2:	42af      	cmp	r7, r5
900087d4:	f43f af7b 	beq.w	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
900087d8:	682b      	ldr	r3, [r5, #0]
						enemies[i].invalidate();
900087da:	4628      	mov	r0, r5
						enemies[i].setX(enemies[i].getX() + ENEMY_MOVE_SPEED);
900087dc:	88a9      	ldrh	r1, [r5, #4]
900087de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900087e0:	310a      	adds	r1, #10
900087e2:	42b2      	cmp	r2, r6
900087e4:	b209      	sxth	r1, r1
        return rect.x;
900087e6:	d0f0      	beq.n	900087ca <_ZN25screen_space_invadersView15handleTickEventEv+0x196>
900087e8:	4790      	blx	r2
						enemies[i].invalidate();
900087ea:	682b      	ldr	r3, [r5, #0]
900087ec:	4628      	mov	r0, r5
900087ee:	e7ed      	b.n	900087cc <_ZN25screen_space_invadersView15handleTickEventEv+0x198>
					enemy_move_direction = MOVE_DOWN;
900087f0:	2303      	movs	r3, #3
900087f2:	6013      	str	r3, [r2, #0]
900087f4:	e76b      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
			lbl_win.invalidate();
900087f6:	f504 702b 	add.w	r0, r4, #684	; 0x2ac
        visible = vis;
900087fa:	f884 52d1 	strb.w	r5, [r4, #721]	; 0x2d1
}
900087fe:	b002      	add	sp, #8
90008800:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			lbl_lose.invalidate();
90008804:	f010 bd91 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
						enemies[i].setY(enemies[i].getY() + ENEMY_MOVE_SPEED);
90008808:	4790      	blx	r2
						enemies[i].invalidate();
9000880a:	682b      	ldr	r3, [r5, #0]
9000880c:	4628      	mov	r0, r5
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000880e:	352c      	adds	r5, #44	; 0x2c
						enemies[i].invalidate();
90008810:	695b      	ldr	r3, [r3, #20]
90008812:	4798      	blx	r3
						pixels_moved += ENEMY_MOVE_SPEED;
90008814:	6833      	ldr	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
90008816:	42bd      	cmp	r5, r7
						pixels_moved += ENEMY_MOVE_SPEED;
90008818:	f103 030a 	add.w	r3, r3, #10
9000881c:	6033      	str	r3, [r6, #0]
					for(int i = 0; i < NUM_OF_ENEMIES; ++i) {
9000881e:	d1ab      	bne.n	90008778 <_ZN25screen_space_invadersView15handleTickEventEv+0x144>
90008820:	e755      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
90008822:	f9b5 30e0 	ldrsh.w	r3, [r5, #224]	; 0xe0
					pixels_moved = 0;
90008826:	2100      	movs	r1, #0
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
90008828:	f9b5 0110 	ldrsh.w	r0, [r5, #272]	; 0x110
					pixels_moved = 0;
9000882c:	6031      	str	r1, [r6, #0]
					if( enemies[NUM_OF_ENEMIES_PER_ROW-1].getX() + enemies[NUM_OF_ENEMIES_PER_ROW].getWidth() < SCREEN_WIDTH ) {
9000882e:	4403      	add	r3, r0
90008830:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90008834:	da02      	bge.n	9000883c <_ZN25screen_space_invadersView15handleTickEventEv+0x208>
						enemy_move_direction = MOVE_RIGHT;
90008836:	2301      	movs	r3, #1
90008838:	6013      	str	r3, [r2, #0]
9000883a:	e748      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
						enemy_move_direction = MOVE_LEFT;
9000883c:	6011      	str	r1, [r2, #0]
9000883e:	e746      	b.n	900086ce <_ZN25screen_space_invadersView15handleTickEventEv+0x9a>
90008840:	2401faac 	.word	0x2401faac
90008844:	2401f894 	.word	0x2401f894
90008848:	cccccccd 	.word	0xcccccccd
9000884c:	19999998 	.word	0x19999998
90008850:	19999999 	.word	0x19999999
90008854:	24000038 	.word	0x24000038
90008858:	2401f898 	.word	0x2401f898
9000885c:	9000228d 	.word	0x9000228d
90008860:	2401faa8 	.word	0x2401faa8
90008864:	2401f890 	.word	0x2401f890
90008868:	90002291 	.word	0x90002291

9000886c <_ZN25screen_space_invadersView11fire_bulletEv>:
	if( !bullet.isVisible() )
9000886c:	f890 21c9 	ldrb.w	r2, [r0, #457]	; 0x1c9
{
90008870:	4603      	mov	r3, r0
	if( !bullet.isVisible() )
90008872:	b102      	cbz	r2, 90008876 <_ZN25screen_space_invadersView11fire_bulletEv+0xa>
}
90008874:	4770      	bx	lr
		bullet.setXY(ship.getX() + (ship.getWidth()/2 - bullet.getWidth()/2), ship.getY() - bullet.getHeight()/2);
90008876:	f9b0 21ae 	ldrsh.w	r2, [r0, #430]	; 0x1ae
9000887a:	f9b0 c180 	ldrsh.w	ip, [r0, #384]	; 0x180
9000887e:	2a00      	cmp	r2, #0
90008880:	f8b0 117e 	ldrh.w	r1, [r0, #382]	; 0x17e
90008884:	bfb8      	it	lt
90008886:	3201      	addlt	r2, #1
90008888:	f1bc 0f00 	cmp.w	ip, #0
9000888c:	eba1 0162 	sub.w	r1, r1, r2, asr #1
90008890:	f8b0 217c 	ldrh.w	r2, [r0, #380]	; 0x17c
90008894:	f9b0 01ac 	ldrsh.w	r0, [r0, #428]	; 0x1ac
90008898:	bfb8      	it	lt
9000889a:	f10c 0c01 	addlt.w	ip, ip, #1
9000889e:	b209      	sxth	r1, r1
900088a0:	2800      	cmp	r0, #0
900088a2:	eb02 026c 	add.w	r2, r2, ip, asr #1
900088a6:	f04f 0c01 	mov.w	ip, #1
        rect.y = y;
900088aa:	f8a3 11aa 	strh.w	r1, [r3, #426]	; 0x1aa
900088ae:	bfb8      	it	lt
900088b0:	3001      	addlt	r0, #1
        visible = vis;
900088b2:	f883 c1c9 	strb.w	ip, [r3, #457]	; 0x1c9
900088b6:	eba2 0260 	sub.w	r2, r2, r0, asr #1
		bullet.invalidate();
900088ba:	f503 70d2 	add.w	r0, r3, #420	; 0x1a4
        rect.x = x;
900088be:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
900088c2:	f00b baa1 	b.w	90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
900088c6:	bf00      	nop

900088c8 <_ZN25screen_space_invadersView19check_bullet_hitboxEv>:
	if( bullet.isVisible() ) {
900088c8:	f890 31c9 	ldrb.w	r3, [r0, #457]	; 0x1c9
900088cc:	2b00      	cmp	r3, #0
900088ce:	d043      	beq.n	90008958 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x90>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
900088d0:	2100      	movs	r1, #0
{
900088d2:	b570      	push	{r4, r5, r6, lr}
900088d4:	4d21      	ldr	r5, [pc, #132]	; (9000895c <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x94>)
900088d6:	4604      	mov	r4, r0
900088d8:	462b      	mov	r3, r5
900088da:	e00a      	b.n	900088f2 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x2a>
				|| (bullet.getX() + bullet.getWidth() < enemies[i].getX()+enemies[i].getWidth()
900088dc:	f9b4 c1ac 	ldrsh.w	ip, [r4, #428]	; 0x1ac
900088e0:	44f4      	add	ip, lr
					&& bullet.getX() + bullet.getWidth() > enemies[i].getX()
900088e2:	4562      	cmp	r2, ip
900088e4:	dd01      	ble.n	900088ea <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
900088e6:	4560      	cmp	r0, ip
900088e8:	db12      	blt.n	90008910 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x48>
		for(int i = 0; i < NUM_OF_ENEMIES; ++i ) {
900088ea:	3101      	adds	r1, #1
900088ec:	332c      	adds	r3, #44	; 0x2c
900088ee:	290c      	cmp	r1, #12
900088f0:	d031      	beq.n	90008956 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x8e>
			if( !enemies[i].isVisible() )
900088f2:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
900088f6:	2a00      	cmp	r2, #0
900088f8:	d0f7      	beq.n	900088ea <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        return rect.x;
900088fa:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
			if( (bullet.getX() < enemies[i].getX()+enemies[i].getWidth()
900088fe:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
90008902:	f9b4 e1a8 	ldrsh.w	lr, [r4, #424]	; 0x1a8
90008906:	4402      	add	r2, r0
				&& bullet.getX() > enemies[i].getX()
90008908:	4596      	cmp	lr, r2
9000890a:	dae7      	bge.n	900088dc <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
9000890c:	4586      	cmp	lr, r0
9000890e:	dde5      	ble.n	900088dc <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x14>
        return rect.y;
90008910:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90008914:	f9b4 21aa 	ldrsh.w	r2, [r4, #426]	; 0x1aa
					&& bullet.getY() > enemies[i].getY()
90008918:	4282      	cmp	r2, r0
9000891a:	dde6      	ble.n	900088ea <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
				&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())
9000891c:	f9b3 c00a 	ldrsh.w	ip, [r3, #10]
90008920:	4460      	add	r0, ip
					&& bullet.getY() < enemies[i].getY() + enemies[i].getHeight())	)
90008922:	4282      	cmp	r2, r0
90008924:	dae1      	bge.n	900088ea <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x22>
        visible = vis;
90008926:	232c      	movs	r3, #44	; 0x2c
90008928:	2600      	movs	r6, #0
9000892a:	fb03 f101 	mul.w	r1, r3, r1
9000892e:	1868      	adds	r0, r5, r1
				enemies[i].invalidate();
90008930:	586b      	ldr	r3, [r5, r1]
90008932:	695b      	ldr	r3, [r3, #20]
90008934:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
90008938:	4798      	blx	r3
        rect.x = x;
9000893a:	f04f 33ff 	mov.w	r3, #4294967295
				bullet.invalidate();
9000893e:	f504 70d2 	add.w	r0, r4, #420	; 0x1a4
        visible = vis;
90008942:	f884 61c9 	strb.w	r6, [r4, #457]	; 0x1c9
        rect.x = x;
90008946:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
9000894a:	f00b fa5d 	bl	90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
				enemies_killed++;
9000894e:	4a04      	ldr	r2, [pc, #16]	; (90008960 <_ZN25screen_space_invadersView19check_bullet_hitboxEv+0x98>)
90008950:	6813      	ldr	r3, [r2, #0]
90008952:	3301      	adds	r3, #1
90008954:	6013      	str	r3, [r2, #0]
}
90008956:	bd70      	pop	{r4, r5, r6, pc}
90008958:	4770      	bx	lr
9000895a:	bf00      	nop
9000895c:	2401f898 	.word	0x2401f898
90008960:	2401faa8 	.word	0x2401faa8

90008964 <_ZN25screen_space_invadersViewC1Ev>:
screen_space_invadersView::screen_space_invadersView()
90008964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008968:	b085      	sub	sp, #20
9000896a:	4605      	mov	r5, r0
        visible = vis;
9000896c:	2400      	movs	r4, #0
9000896e:	f7fd f81b 	bl	900059a8 <_ZN29screen_space_invadersViewBaseC1Ev>
90008972:	4b4d      	ldr	r3, [pc, #308]	; (90008aa8 <_ZN25screen_space_invadersViewC1Ev+0x144>)
	enemy1.invalidate();
90008974:	f505 70a6 	add.w	r0, r5, #332	; 0x14c
90008978:	f885 4171 	strb.w	r4, [r5, #369]	; 0x171
9000897c:	f105 0b04 	add.w	fp, r5, #4
screen_space_invadersView::screen_space_invadersView()
90008980:	602b      	str	r3, [r5, #0]
90008982:	f04f 0810 	mov.w	r8, #16
	enemy1.invalidate();
90008986:	f010 fcd0 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
        rect.x = x;
9000898a:	f04f 33ff 	mov.w	r3, #4294967295
	bullet.invalidate();
9000898e:	f505 70d2 	add.w	r0, r5, #420	; 0x1a4
        visible = vis;
90008992:	f885 41c9 	strb.w	r4, [r5, #457]	; 0x1c9
        rect.x = x;
90008996:	f8c5 31a8 	str.w	r3, [r5, #424]	; 0x1a8
9000899a:	f00b fa35 	bl	90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
	lbl_game_over.invalidate();
9000899e:	f505 7019 	add.w	r0, r5, #612	; 0x264
        visible = vis;
900089a2:	f885 4289 	strb.w	r4, [r5, #649]	; 0x289
900089a6:	f010 fcc0 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
900089aa:	f505 700a 	add.w	r0, r5, #552	; 0x228
900089ae:	f885 424d 	strb.w	r4, [r5, #589]	; 0x24d
900089b2:	f010 fcba 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_lose.invalidate();
900089b6:	f505 703d 	add.w	r0, r5, #756	; 0x2f4
900089ba:	f885 4319 	strb.w	r4, [r5, #793]	; 0x319
900089be:	f010 fcb4 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_win.invalidate();
900089c2:	f505 702b 	add.w	r0, r5, #684	; 0x2ac
900089c6:	f885 42d1 	strb.w	r4, [r5, #721]	; 0x2d1
900089ca:	f010 fcae 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	enemies_killed = 0;
900089ce:	4a37      	ldr	r2, [pc, #220]	; (90008aac <_ZN25screen_space_invadersViewC1Ev+0x148>)
	enemy_move_direction = MOVE_RIGHT;
900089d0:	4b37      	ldr	r3, [pc, #220]	; (90008ab0 <_ZN25screen_space_invadersViewC1Ev+0x14c>)
	enemies_killed = 0;
900089d2:	6014      	str	r4, [r2, #0]
	enemy_move_direction = MOVE_RIGHT;
900089d4:	2201      	movs	r2, #1
900089d6:	4e37      	ldr	r6, [pc, #220]	; (90008ab4 <_ZN25screen_space_invadersViewC1Ev+0x150>)
900089d8:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 90008ac0 <_ZN25screen_space_invadersViewC1Ev+0x15c>
	int counter = 0;
900089dc:	9401      	str	r4, [sp, #4]
	enemy_move_direction = MOVE_RIGHT;
900089de:	601a      	str	r2, [r3, #0]
	int current_y = 0;
900089e0:	9400      	str	r4, [sp, #0]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
900089e2:	f9bd 7000 	ldrsh.w	r7, [sp]
900089e6:	f5a6 7984 	sub.w	r9, r6, #264	; 0x108
		current_x = 0;
900089ea:	2400      	movs	r4, #0
900089ec:	e02c      	b.n	90008a48 <_ZN25screen_space_invadersViewC1Ev+0xe4>
        setY(y);
900089ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
900089f0:	f8a9 1004 	strh.w	r1, [r9, #4]
        rect.y = y;
900089f4:	4930      	ldr	r1, [pc, #192]	; (90008ab8 <_ZN25screen_space_invadersViewC1Ev+0x154>)
900089f6:	428a      	cmp	r2, r1
900089f8:	d13c      	bne.n	90008a74 <_ZN25screen_space_invadersViewC1Ev+0x110>
900089fa:	f8a9 7006 	strh.w	r7, [r9, #6]
        setWidth(width);
900089fe:	4648      	mov	r0, r9
90008a00:	2132      	movs	r1, #50	; 0x32
90008a02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90008a04:	4798      	blx	r3
        setHeight(height);
90008a06:	f8d9 3000 	ldr.w	r3, [r9]
90008a0a:	4648      	mov	r0, r9
90008a0c:	2134      	movs	r1, #52	; 0x34
90008a0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90008a10:	4798      	blx	r3
			enemies[counter].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90008a12:	f8d9 3000 	ldr.w	r3, [r9]
90008a16:	4648      	mov	r0, r9
90008a18:	2100      	movs	r1, #0
90008a1a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90008a1c:	4798      	blx	r3
        visible = vis;
90008a1e:	2301      	movs	r3, #1
90008a20:	4649      	mov	r1, r9
90008a22:	4658      	mov	r0, fp
90008a24:	f889 3025 	strb.w	r3, [r9, #37]	; 0x25
90008a28:	f009 ff86 	bl	90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			enemies[counter].invalidate();
90008a2c:	f8d9 3000 	ldr.w	r3, [r9]
90008a30:	4648      	mov	r0, r9
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008a32:	f109 092c 	add.w	r9, r9, #44	; 0x2c
			enemies[counter].invalidate();
90008a36:	695b      	ldr	r3, [r3, #20]
90008a38:	4798      	blx	r3
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008a3a:	f9b5 3154 	ldrsh.w	r3, [r5, #340]	; 0x154
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008a3e:	45b1      	cmp	r9, r6
			current_x += enemy1.getWidth() + SPACE_BETWEEN_ENEMIES_X;
90008a40:	f103 030f 	add.w	r3, r3, #15
90008a44:	441c      	add	r4, r3
		for(int j = 0; j < NUM_OF_ENEMIES_PER_ROW; ++j) {
90008a46:	d01b      	beq.n	90008a80 <_ZN25screen_space_invadersViewC1Ev+0x11c>
			enemies[counter].setBitmap(touchgfx::Bitmap(BITMAP_SPACE_INVADERS_ENEMY_ID));
90008a48:	f8d9 3000 	ldr.w	r3, [r9]
90008a4c:	a903      	add	r1, sp, #12
90008a4e:	4648      	mov	r0, r9
90008a50:	f8ad 800c 	strh.w	r8, [sp, #12]
90008a54:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90008a56:	4798      	blx	r3
        setX(x);
90008a58:	f8d9 3000 	ldr.w	r3, [r9]
			enemies[counter].setPosition(current_x, current_y, 50, 52);
90008a5c:	b221      	sxth	r1, r4
90008a5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90008a60:	4552      	cmp	r2, sl
90008a62:	d0c4      	beq.n	900089ee <_ZN25screen_space_invadersViewC1Ev+0x8a>
90008a64:	4648      	mov	r0, r9
90008a66:	4790      	blx	r2
90008a68:	f8d9 3000 	ldr.w	r3, [r9]
        rect.y = y;
90008a6c:	4912      	ldr	r1, [pc, #72]	; (90008ab8 <_ZN25screen_space_invadersViewC1Ev+0x154>)
        setY(y);
90008a6e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90008a70:	428a      	cmp	r2, r1
90008a72:	d0c2      	beq.n	900089fa <_ZN25screen_space_invadersViewC1Ev+0x96>
90008a74:	4648      	mov	r0, r9
90008a76:	4639      	mov	r1, r7
90008a78:	4790      	blx	r2
90008a7a:	f8d9 3000 	ldr.w	r3, [r9]
90008a7e:	e7be      	b.n	900089fe <_ZN25screen_space_invadersViewC1Ev+0x9a>
			counter++;
90008a80:	9b01      	ldr	r3, [sp, #4]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008a82:	f509 7684 	add.w	r6, r9, #264	; 0x108
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008a86:	9900      	ldr	r1, [sp, #0]
			counter++;
90008a88:	3306      	adds	r3, #6
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008a8a:	f9b5 2156 	ldrsh.w	r2, [r5, #342]	; 0x156
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008a8e:	2b0c      	cmp	r3, #12
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008a90:	4411      	add	r1, r2
			counter++;
90008a92:	9301      	str	r3, [sp, #4]
		current_y += enemy1.getHeight() + SPACE_BETWEEN_ENEMIES_Y;
90008a94:	9100      	str	r1, [sp, #0]
	for(int i = 0; i < NUM_OF_ROWS_OF_ENEMIES; ++i) {
90008a96:	d1a4      	bne.n	900089e2 <_ZN25screen_space_invadersViewC1Ev+0x7e>
	invaders_game_over = false;
90008a98:	4b08      	ldr	r3, [pc, #32]	; (90008abc <_ZN25screen_space_invadersViewC1Ev+0x158>)
90008a9a:	2200      	movs	r2, #0
}
90008a9c:	4628      	mov	r0, r5
	invaders_game_over = false;
90008a9e:	701a      	strb	r2, [r3, #0]
}
90008aa0:	b005      	add	sp, #20
90008aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008aa6:	bf00      	nop
90008aa8:	9002d170 	.word	0x9002d170
90008aac:	2401faa8 	.word	0x2401faa8
90008ab0:	24000038 	.word	0x24000038
90008ab4:	2401f9a0 	.word	0x2401f9a0
90008ab8:	90002291 	.word	0x90002291
90008abc:	2401faac 	.word	0x2401faac
90008ac0:	9000228d 	.word	0x9000228d

90008ac4 <_ZN25screen_space_invadersView11setupScreenEv>:
    screen_space_invadersViewBase::setupScreen();
90008ac4:	f7fc bf06 	b.w	900058d4 <_ZN29screen_space_invadersViewBase11setupScreenEv>

90008ac8 <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
90008ac8:	4770      	bx	lr
90008aca:	bf00      	nop

90008acc <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
90008acc:	3804      	subs	r0, #4
90008ace:	4770      	bx	lr

90008ad0 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
90008ad0:	4770      	bx	lr
90008ad2:	bf00      	nop

90008ad4 <_ZN30screen_tictactoe_gamePresenterD0Ev>:
90008ad4:	b510      	push	{r4, lr}
90008ad6:	4604      	mov	r4, r0
90008ad8:	2110      	movs	r1, #16
90008ada:	f020 fcc3 	bl	90029464 <_ZdlPvj>
90008ade:	4620      	mov	r0, r4
90008ae0:	bd10      	pop	{r4, pc}
90008ae2:	bf00      	nop

90008ae4 <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
90008ae4:	b500      	push	{lr}
90008ae6:	3804      	subs	r0, #4
90008ae8:	b083      	sub	sp, #12
90008aea:	2110      	movs	r1, #16
90008aec:	9001      	str	r0, [sp, #4]
90008aee:	f020 fcb9 	bl	90029464 <_ZdlPvj>
90008af2:	9801      	ldr	r0, [sp, #4]
90008af4:	b003      	add	sp, #12
90008af6:	f85d fb04 	ldr.w	pc, [sp], #4
90008afa:	bf00      	nop

90008afc <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
90008afc:	4a06      	ldr	r2, [pc, #24]	; (90008b18 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
90008afe:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
90008b00:	b410      	push	{r4}
90008b02:	2400      	movs	r4, #0
90008b04:	6084      	str	r4, [r0, #8]
    : view(v)
90008b06:	f102 0408 	add.w	r4, r2, #8
90008b0a:	3220      	adds	r2, #32
90008b0c:	e9c0 4200 	strd	r4, r2, [r0]
}
90008b10:	f85d 4b04 	ldr.w	r4, [sp], #4
90008b14:	4770      	bx	lr
90008b16:	bf00      	nop
90008b18:	9002d1a8 	.word	0x9002d1a8

90008b1c <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90008b1c:	4770      	bx	lr
90008b1e:	bf00      	nop

90008b20 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90008b20:	4b22      	ldr	r3, [pc, #136]	; (90008bac <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
90008b22:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90008b24:	eb01 0341 	add.w	r3, r1, r1, lsl #1
		symbol = 'O';
90008b28:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int x, int y) {
90008b2a:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
90008b2c:	4d20      	ldr	r5, [pc, #128]	; (90008bb0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
90008b2e:	bf14      	ite	ne
90008b30:	2458      	movne	r4, #88	; 0x58
90008b32:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008b34:	f815 c003 	ldrb.w	ip, [r5, r3]
90008b38:	442b      	add	r3, r5
90008b3a:	45a4      	cmp	ip, r4
90008b3c:	d109      	bne.n	90008b52 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008b3e:	f893 e001 	ldrb.w	lr, [r3, #1]
90008b42:	45e6      	cmp	lr, ip
90008b44:	d105      	bne.n	90008b52 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
90008b46:	789b      	ldrb	r3, [r3, #2]
90008b48:	4573      	cmp	r3, lr
90008b4a:	d102      	bne.n	90008b52 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
90008b4c:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
90008b50:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
90008b52:	5cab      	ldrb	r3, [r5, r2]
90008b54:	42a3      	cmp	r3, r4
90008b56:	d107      	bne.n	90008b68 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008b58:	18ab      	adds	r3, r5, r2
90008b5a:	f893 c003 	ldrb.w	ip, [r3, #3]
90008b5e:	45a4      	cmp	ip, r4
90008b60:	d102      	bne.n	90008b68 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
90008b62:	799b      	ldrb	r3, [r3, #6]
90008b64:	42a3      	cmp	r3, r4
90008b66:	d0f1      	beq.n	90008b4c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
90008b68:	4291      	cmp	r1, r2
90008b6a:	d00a      	beq.n	90008b82 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
90008b6c:	440a      	add	r2, r1
90008b6e:	2a02      	cmp	r2, #2
90008b70:	d011      	beq.n	90008b96 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
90008b72:	4b10      	ldr	r3, [pc, #64]	; (90008bb4 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
90008b74:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
90008b78:	2b09      	cmp	r3, #9
90008b7a:	bf14      	ite	ne
90008b7c:	2000      	movne	r0, #0
90008b7e:	2003      	moveq	r0, #3
}
90008b80:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
90008b82:	782b      	ldrb	r3, [r5, #0]
90008b84:	42a3      	cmp	r3, r4
90008b86:	d1f1      	bne.n	90008b6c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008b88:	792b      	ldrb	r3, [r5, #4]
90008b8a:	42a3      	cmp	r3, r4
90008b8c:	d1ee      	bne.n	90008b6c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90008b8e:	7a2b      	ldrb	r3, [r5, #8]
90008b90:	42a3      	cmp	r3, r4
90008b92:	d0db      	beq.n	90008b4c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008b94:	e7ea      	b.n	90008b6c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
90008b96:	78ab      	ldrb	r3, [r5, #2]
90008b98:	42a3      	cmp	r3, r4
90008b9a:	d1ea      	bne.n	90008b72 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008b9c:	792b      	ldrb	r3, [r5, #4]
90008b9e:	42a3      	cmp	r3, r4
90008ba0:	d1e7      	bne.n	90008b72 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008ba2:	79ab      	ldrb	r3, [r5, #6]
90008ba4:	42a3      	cmp	r3, r4
90008ba6:	d0d1      	beq.n	90008b4c <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90008ba8:	e7e3      	b.n	90008b72 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90008baa:	bf00      	nop
90008bac:	2400003c 	.word	0x2400003c
90008bb0:	2401fab0 	.word	0x2401fab0
90008bb4:	2401fabc 	.word	0x2401fabc

90008bb8 <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
90008bb8:	4b03      	ldr	r3, [pc, #12]	; (90008bc8 <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
90008bba:	b510      	push	{r4, lr}
90008bbc:	4604      	mov	r4, r0
90008bbe:	6003      	str	r3, [r0, #0]
90008bc0:	f7fd fa1e 	bl	90006000 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008bc4:	4620      	mov	r0, r4
90008bc6:	bd10      	pop	{r4, pc}
90008bc8:	9002d204 	.word	0x9002d204

90008bcc <_ZN25screen_tictactoe_gameViewD0Ev>:
90008bcc:	4b06      	ldr	r3, [pc, #24]	; (90008be8 <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
90008bce:	b510      	push	{r4, lr}
90008bd0:	4604      	mov	r4, r0
90008bd2:	6003      	str	r3, [r0, #0]
90008bd4:	f7fd fa14 	bl	90006000 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90008bd8:	f242 71bc 	movw	r1, #10172	; 0x27bc
90008bdc:	4620      	mov	r0, r4
90008bde:	f020 fc41 	bl	90029464 <_ZdlPvj>
90008be2:	4620      	mov	r0, r4
90008be4:	bd10      	pop	{r4, pc}
90008be6:	bf00      	nop
90008be8:	9002d204 	.word	0x9002d204

90008bec <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008bec:	b538      	push	{r3, r4, r5, lr}
90008bee:	4604      	mov	r4, r0
			board[i][j] = 0;
90008bf0:	2500      	movs	r5, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008bf2:	f7fd faaf 	bl	90006154 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
90008bf6:	4b13      	ldr	r3, [pc, #76]	; (90008c44 <_ZN25screen_tictactoe_gameViewC1Ev+0x58>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008bf8:	4913      	ldr	r1, [pc, #76]	; (90008c48 <_ZN25screen_tictactoe_gameViewC1Ev+0x5c>)
	lbl_game_over.invalidate();
90008bfa:	f604 2024 	addw	r0, r4, #2596	; 0xa24
	game_over = false;
90008bfe:	4a13      	ldr	r2, [pc, #76]	; (90008c4c <_ZN25screen_tictactoe_gameViewC1Ev+0x60>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90008c00:	6021      	str	r1, [r4, #0]
			board[i][j] = 0;
90008c02:	721d      	strb	r5, [r3, #8]
        visible = vis;
90008c04:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
	game_over = false;
90008c08:	7015      	strb	r5, [r2, #0]
			board[i][j] = 0;
90008c0a:	e9c3 5500 	strd	r5, r5, [r3]
	lbl_game_over.invalidate();
90008c0e:	f010 fb8c 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	box_background.invalidate();
90008c12:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90008c16:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90008c1a:	f010 fb86 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_result.invalidate();
90008c1e:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
90008c22:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90008c26:	f010 fb80 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90008c2a:	f604 206c 	addw	r0, r4, #2668	; 0xa6c
90008c2e:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90008c32:	f010 fb7a 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
	turn_number = 0;
90008c36:	4906      	ldr	r1, [pc, #24]	; (90008c50 <_ZN25screen_tictactoe_gameViewC1Ev+0x64>)
	turn = true;
90008c38:	4b06      	ldr	r3, [pc, #24]	; (90008c54 <_ZN25screen_tictactoe_gameViewC1Ev+0x68>)
90008c3a:	2201      	movs	r2, #1
}
90008c3c:	4620      	mov	r0, r4
	turn_number = 0;
90008c3e:	800d      	strh	r5, [r1, #0]
	turn = true;
90008c40:	701a      	strb	r2, [r3, #0]
}
90008c42:	bd38      	pop	{r3, r4, r5, pc}
90008c44:	2401fab0 	.word	0x2401fab0
90008c48:	9002d204 	.word	0x9002d204
90008c4c:	2401fab9 	.word	0x2401fab9
90008c50:	2401fabc 	.word	0x2401fabc
90008c54:	2400003c 	.word	0x2400003c

90008c58 <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
90008c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][0] == 0 ) {
90008c5c:	4d2d      	ldr	r5, [pc, #180]	; (90008d14 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
90008c5e:	782b      	ldrb	r3, [r5, #0]
90008c60:	2b00      	cmp	r3, #0
90008c62:	d12e      	bne.n	90008cc2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
90008c64:	4e2c      	ldr	r6, [pc, #176]	; (90008d18 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
90008c66:	7833      	ldrb	r3, [r6, #0]
90008c68:	bb5b      	cbnz	r3, 90008cc2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
		if( turn ) {
90008c6a:	4f2c      	ldr	r7, [pc, #176]	; (90008d1c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc4>)
90008c6c:	4604      	mov	r4, r0
90008c6e:	783b      	ldrb	r3, [r7, #0]
90008c70:	bb4b      	cbnz	r3, 90008cc6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6e>
			board[0][0] = 'O';
90008c72:	234f      	movs	r3, #79	; 0x4f
			pos1_circle.invalidate();
90008c74:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
90008c78:	7033      	strb	r3, [r6, #0]
90008c7a:	2301      	movs	r3, #1
90008c7c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_circle.invalidate();
90008c80:	f010 fb53 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008c84:	4a26      	ldr	r2, [pc, #152]	; (90008d20 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc8>)
		short temp_result = is_game_over(0, 0);
90008c86:	6823      	ldr	r3, [r4, #0]
90008c88:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008c8c:	8813      	ldrh	r3, [r2, #0]
90008c8e:	3301      	adds	r3, #1
90008c90:	b21b      	sxth	r3, r3
90008c92:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
90008c94:	4a23      	ldr	r2, [pc, #140]	; (90008d24 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xcc>)
90008c96:	4590      	cmp	r8, r2
90008c98:	d11f      	bne.n	90008cda <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x82>
	if(turn)
90008c9a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008c9c:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008c9e:	2800      	cmp	r0, #0
90008ca0:	bf14      	ite	ne
90008ca2:	2458      	movne	r4, #88	; 0x58
90008ca4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008ca6:	42a2      	cmp	r2, r4
90008ca8:	d12f      	bne.n	90008d0a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008caa:	7871      	ldrb	r1, [r6, #1]
90008cac:	4291      	cmp	r1, r2
90008cae:	d120      	bne.n	90008cf2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
90008cb0:	78b2      	ldrb	r2, [r6, #2]
90008cb2:	428a      	cmp	r2, r1
90008cb4:	d11d      	bne.n	90008cf2 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
                if( turn )
90008cb6:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008cba:	2201      	movs	r2, #1
			result = temp_result;
90008cbc:	4b1a      	ldr	r3, [pc, #104]	; (90008d28 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xd0>)
			game_over = true;
90008cbe:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008cc0:	8018      	strh	r0, [r3, #0]
}
90008cc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][0] = 'X';
90008cc6:	2358      	movs	r3, #88	; 0x58
			pos1_cross.invalidate();
90008cc8:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
90008ccc:	7033      	strb	r3, [r6, #0]
90008cce:	2301      	movs	r3, #1
90008cd0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_cross.invalidate();
90008cd4:	f010 fb29 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90008cd8:	e7d4      	b.n	90008c84 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x2c>
		short temp_result = is_game_over(0, 0);
90008cda:	2200      	movs	r2, #0
90008cdc:	4620      	mov	r0, r4
90008cde:	4611      	mov	r1, r2
90008ce0:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008ce2:	2800      	cmp	r0, #0
90008ce4:	d1e9      	bne.n	90008cba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
		turn = !turn;
90008ce6:	783b      	ldrb	r3, [r7, #0]
90008ce8:	f083 0301 	eor.w	r3, r3, #1
90008cec:	703b      	strb	r3, [r7, #0]
}
90008cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008cf2:	78f2      	ldrb	r2, [r6, #3]
90008cf4:	42a2      	cmp	r2, r4
90008cf6:	d102      	bne.n	90008cfe <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa6>
90008cf8:	79b2      	ldrb	r2, [r6, #6]
90008cfa:	42a2      	cmp	r2, r4
90008cfc:	d0db      	beq.n	90008cb6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
            if(board[i][i] != symbol)
90008cfe:	7932      	ldrb	r2, [r6, #4]
90008d00:	42a2      	cmp	r2, r4
90008d02:	d102      	bne.n	90008d0a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90008d04:	7a32      	ldrb	r2, [r6, #8]
90008d06:	42a2      	cmp	r2, r4
90008d08:	d0d5      	beq.n	90008cb6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
	if( turn_number == 9 )
90008d0a:	2b09      	cmp	r3, #9
90008d0c:	d1eb      	bne.n	90008ce6 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8e>
		return 3;
90008d0e:	2003      	movs	r0, #3
90008d10:	e7d3      	b.n	90008cba <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
90008d12:	bf00      	nop
90008d14:	2401fab9 	.word	0x2401fab9
90008d18:	2401fab0 	.word	0x2401fab0
90008d1c:	2400003c 	.word	0x2400003c
90008d20:	2401fabc 	.word	0x2401fabc
90008d24:	90008b21 	.word	0x90008b21
90008d28:	2401faba 	.word	0x2401faba

90008d2c <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
90008d2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][1] == 0 ) {
90008d30:	4d2b      	ldr	r5, [pc, #172]	; (90008de0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
90008d32:	782b      	ldrb	r3, [r5, #0]
90008d34:	2b00      	cmp	r3, #0
90008d36:	d12e      	bne.n	90008d96 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
90008d38:	4e2a      	ldr	r6, [pc, #168]	; (90008de4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb8>)
90008d3a:	7873      	ldrb	r3, [r6, #1]
90008d3c:	bb5b      	cbnz	r3, 90008d96 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
		if( turn ) {
90008d3e:	4f2a      	ldr	r7, [pc, #168]	; (90008de8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xbc>)
90008d40:	4604      	mov	r4, r0
90008d42:	783b      	ldrb	r3, [r7, #0]
90008d44:	bb4b      	cbnz	r3, 90008d9a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6e>
			board[0][1] = 'O';
90008d46:	234f      	movs	r3, #79	; 0x4f
			pos2_circle.invalidate();
90008d48:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
90008d4c:	7073      	strb	r3, [r6, #1]
90008d4e:	2301      	movs	r3, #1
90008d50:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_circle.invalidate();
90008d54:	f010 fae9 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008d58:	4a24      	ldr	r2, [pc, #144]	; (90008dec <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc0>)
		short temp_result = is_game_over(0, 1);
90008d5a:	6823      	ldr	r3, [r4, #0]
90008d5c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008d60:	8813      	ldrh	r3, [r2, #0]
90008d62:	3301      	adds	r3, #1
90008d64:	b21b      	sxth	r3, r3
90008d66:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
90008d68:	4a21      	ldr	r2, [pc, #132]	; (90008df0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc4>)
90008d6a:	4590      	cmp	r8, r2
90008d6c:	d11f      	bne.n	90008dae <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
	if(turn)
90008d6e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008d70:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008d72:	2800      	cmp	r0, #0
90008d74:	bf14      	ite	ne
90008d76:	2458      	movne	r4, #88	; 0x58
90008d78:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008d7a:	42a2      	cmp	r2, r4
90008d7c:	d123      	bne.n	90008dc6 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x9a>
90008d7e:	7871      	ldrb	r1, [r6, #1]
90008d80:	4291      	cmp	r1, r2
90008d82:	d129      	bne.n	90008dd8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008d84:	78b2      	ldrb	r2, [r6, #2]
90008d86:	428a      	cmp	r2, r1
90008d88:	d120      	bne.n	90008dcc <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>
            if( turn )
90008d8a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008d8e:	2201      	movs	r2, #1
			result = temp_result;
90008d90:	4b18      	ldr	r3, [pc, #96]	; (90008df4 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc8>)
			game_over = true;
90008d92:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008d94:	8018      	strh	r0, [r3, #0]
}
90008d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][1] = 'X';
90008d9a:	2358      	movs	r3, #88	; 0x58
			pos2_cross.invalidate();
90008d9c:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90008da0:	7073      	strb	r3, [r6, #1]
90008da2:	2301      	movs	r3, #1
90008da4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_cross.invalidate();
90008da8:	f010 fabf 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90008dac:	e7d4      	b.n	90008d58 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x2c>
		short temp_result = is_game_over(0, 1);
90008dae:	2201      	movs	r2, #1
90008db0:	4620      	mov	r0, r4
90008db2:	2100      	movs	r1, #0
90008db4:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008db6:	2800      	cmp	r0, #0
90008db8:	d1e9      	bne.n	90008d8e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
		turn = !turn;
90008dba:	7838      	ldrb	r0, [r7, #0]
90008dbc:	f080 0001 	eor.w	r0, r0, #1
90008dc0:	7038      	strb	r0, [r7, #0]
}
90008dc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008dc6:	7872      	ldrb	r2, [r6, #1]
90008dc8:	42a2      	cmp	r2, r4
90008dca:	d105      	bne.n	90008dd8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008dcc:	7932      	ldrb	r2, [r6, #4]
90008dce:	42a2      	cmp	r2, r4
90008dd0:	d102      	bne.n	90008dd8 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90008dd2:	79f2      	ldrb	r2, [r6, #7]
90008dd4:	42a2      	cmp	r2, r4
90008dd6:	d0d8      	beq.n	90008d8a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x5e>
	if( turn_number == 9 )
90008dd8:	2b09      	cmp	r3, #9
90008dda:	d1ef      	bne.n	90008dbc <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x90>
		return 3;
90008ddc:	2003      	movs	r0, #3
90008dde:	e7d6      	b.n	90008d8e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
90008de0:	2401fab9 	.word	0x2401fab9
90008de4:	2401fab0 	.word	0x2401fab0
90008de8:	2400003c 	.word	0x2400003c
90008dec:	2401fabc 	.word	0x2401fabc
90008df0:	90008b21 	.word	0x90008b21
90008df4:	2401faba 	.word	0x2401faba

90008df8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
90008df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][2] == 0 ) {
90008dfc:	4d2e      	ldr	r5, [pc, #184]	; (90008eb8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
90008dfe:	782b      	ldrb	r3, [r5, #0]
90008e00:	2b00      	cmp	r3, #0
90008e02:	d12e      	bne.n	90008e62 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
90008e04:	4e2d      	ldr	r6, [pc, #180]	; (90008ebc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc4>)
90008e06:	78b3      	ldrb	r3, [r6, #2]
90008e08:	bb5b      	cbnz	r3, 90008e62 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
		if( turn ) {
90008e0a:	4f2d      	ldr	r7, [pc, #180]	; (90008ec0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc8>)
90008e0c:	4604      	mov	r4, r0
90008e0e:	783b      	ldrb	r3, [r7, #0]
90008e10:	bb4b      	cbnz	r3, 90008e66 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6e>
			board[0][2] = 'O';
90008e12:	234f      	movs	r3, #79	; 0x4f
			pos3_circle.invalidate();
90008e14:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
90008e18:	70b3      	strb	r3, [r6, #2]
90008e1a:	2301      	movs	r3, #1
90008e1c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_circle.invalidate();
90008e20:	f010 fa83 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008e24:	4a27      	ldr	r2, [pc, #156]	; (90008ec4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xcc>)
		short temp_result = is_game_over(0, 2);
90008e26:	6823      	ldr	r3, [r4, #0]
90008e28:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008e2c:	8813      	ldrh	r3, [r2, #0]
90008e2e:	3301      	adds	r3, #1
90008e30:	b21b      	sxth	r3, r3
90008e32:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
90008e34:	4a24      	ldr	r2, [pc, #144]	; (90008ec8 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd0>)
90008e36:	4590      	cmp	r8, r2
90008e38:	d11f      	bne.n	90008e7a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
	if(turn)
90008e3a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008e3c:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90008e3e:	2800      	cmp	r0, #0
90008e40:	bf14      	ite	ne
90008e42:	2458      	movne	r4, #88	; 0x58
90008e44:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008e46:	42a2      	cmp	r2, r4
90008e48:	d123      	bne.n	90008e92 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008e4a:	7871      	ldrb	r1, [r6, #1]
90008e4c:	4291      	cmp	r1, r2
90008e4e:	d120      	bne.n	90008e92 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
90008e50:	78b2      	ldrb	r2, [r6, #2]
90008e52:	428a      	cmp	r2, r1
90008e54:	d12c      	bne.n	90008eb0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
                if( turn )
90008e56:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008e5a:	2201      	movs	r2, #1
			result = temp_result;
90008e5c:	4b1b      	ldr	r3, [pc, #108]	; (90008ecc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd4>)
			game_over = true;
90008e5e:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008e60:	8018      	strh	r0, [r3, #0]
}
90008e62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][2] = 'X';
90008e66:	2358      	movs	r3, #88	; 0x58
			pos3_cross.invalidate();
90008e68:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
90008e6c:	70b3      	strb	r3, [r6, #2]
90008e6e:	2301      	movs	r3, #1
90008e70:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_cross.invalidate();
90008e74:	f010 fa59 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90008e78:	e7d4      	b.n	90008e24 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x2c>
		short temp_result = is_game_over(0, 2);
90008e7a:	2202      	movs	r2, #2
90008e7c:	4620      	mov	r0, r4
90008e7e:	2100      	movs	r1, #0
90008e80:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008e82:	2800      	cmp	r0, #0
90008e84:	d1e9      	bne.n	90008e5a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
		turn = !turn;
90008e86:	7838      	ldrb	r0, [r7, #0]
90008e88:	f080 0001 	eor.w	r0, r0, #1
90008e8c:	7038      	strb	r0, [r7, #0]
}
90008e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008e92:	78b2      	ldrb	r2, [r6, #2]
90008e94:	42a2      	cmp	r2, r4
90008e96:	d10b      	bne.n	90008eb0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90008e98:	7972      	ldrb	r2, [r6, #5]
90008e9a:	42a2      	cmp	r2, r4
90008e9c:	d102      	bne.n	90008ea4 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>
90008e9e:	7a32      	ldrb	r2, [r6, #8]
90008ea0:	42a2      	cmp	r2, r4
90008ea2:	d0d8      	beq.n	90008e56 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90008ea4:	7932      	ldrb	r2, [r6, #4]
90008ea6:	42a2      	cmp	r2, r4
90008ea8:	d102      	bne.n	90008eb0 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
90008eaa:	79b2      	ldrb	r2, [r6, #6]
90008eac:	42a2      	cmp	r2, r4
90008eae:	d0d2      	beq.n	90008e56 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
	if( turn_number == 9 )
90008eb0:	2b09      	cmp	r3, #9
90008eb2:	d1e9      	bne.n	90008e88 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x90>
		return 3;
90008eb4:	2003      	movs	r0, #3
90008eb6:	e7d0      	b.n	90008e5a <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
90008eb8:	2401fab9 	.word	0x2401fab9
90008ebc:	2401fab0 	.word	0x2401fab0
90008ec0:	2400003c 	.word	0x2400003c
90008ec4:	2401fabc 	.word	0x2401fabc
90008ec8:	90008b21 	.word	0x90008b21
90008ecc:	2401faba 	.word	0x2401faba

90008ed0 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90008ed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][0] == 0 ) {
90008ed4:	4d2a      	ldr	r5, [pc, #168]	; (90008f80 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
90008ed6:	782b      	ldrb	r3, [r5, #0]
90008ed8:	2b00      	cmp	r3, #0
90008eda:	d12e      	bne.n	90008f3a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
90008edc:	4e29      	ldr	r6, [pc, #164]	; (90008f84 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90008ede:	78f3      	ldrb	r3, [r6, #3]
90008ee0:	bb5b      	cbnz	r3, 90008f3a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
		if( turn ) {
90008ee2:	4f29      	ldr	r7, [pc, #164]	; (90008f88 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
90008ee4:	4604      	mov	r4, r0
90008ee6:	783b      	ldrb	r3, [r7, #0]
90008ee8:	bb4b      	cbnz	r3, 90008f3e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6e>
			board[1][0] = 'O';
90008eea:	234f      	movs	r3, #79	; 0x4f
			pos4_circle.invalidate();
90008eec:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
90008ef0:	70f3      	strb	r3, [r6, #3]
90008ef2:	2301      	movs	r3, #1
90008ef4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_circle.invalidate();
90008ef8:	f010 fa17 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008efc:	4a23      	ldr	r2, [pc, #140]	; (90008f8c <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xbc>)
		short temp_result = is_game_over(1, 0);
90008efe:	6823      	ldr	r3, [r4, #0]
90008f00:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008f04:	8813      	ldrh	r3, [r2, #0]
90008f06:	3301      	adds	r3, #1
90008f08:	b21b      	sxth	r3, r3
90008f0a:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
90008f0c:	4a20      	ldr	r2, [pc, #128]	; (90008f90 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc0>)
90008f0e:	4590      	cmp	r8, r2
90008f10:	d11f      	bne.n	90008f52 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
	if(turn)
90008f12:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90008f14:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90008f16:	2800      	cmp	r0, #0
90008f18:	bf14      	ite	ne
90008f1a:	2458      	movne	r4, #88	; 0x58
90008f1c:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008f1e:	42a2      	cmp	r2, r4
90008f20:	d129      	bne.n	90008f76 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90008f22:	7931      	ldrb	r1, [r6, #4]
90008f24:	4291      	cmp	r1, r2
90008f26:	d120      	bne.n	90008f6a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
90008f28:	7972      	ldrb	r2, [r6, #5]
90008f2a:	428a      	cmp	r2, r1
90008f2c:	d11d      	bne.n	90008f6a <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
            if( turn )
90008f2e:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90008f32:	2201      	movs	r2, #1
			result = temp_result;
90008f34:	4b17      	ldr	r3, [pc, #92]	; (90008f94 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc4>)
			game_over = true;
90008f36:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90008f38:	8018      	strh	r0, [r3, #0]
}
90008f3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][0] = 'X';
90008f3e:	2358      	movs	r3, #88	; 0x58
			pos4_cross.invalidate();
90008f40:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
90008f44:	70f3      	strb	r3, [r6, #3]
90008f46:	2301      	movs	r3, #1
90008f48:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_cross.invalidate();
90008f4c:	f010 f9ed 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90008f50:	e7d4      	b.n	90008efc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x2c>
		short temp_result = is_game_over(1, 0);
90008f52:	2200      	movs	r2, #0
90008f54:	4620      	mov	r0, r4
90008f56:	2101      	movs	r1, #1
90008f58:	47c0      	blx	r8
		if( temp_result != 0 ) {
90008f5a:	2800      	cmp	r0, #0
90008f5c:	d1e9      	bne.n	90008f32 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
		turn = !turn;
90008f5e:	7838      	ldrb	r0, [r7, #0]
90008f60:	f080 0001 	eor.w	r0, r0, #1
90008f64:	7038      	strb	r0, [r7, #0]
}
90008f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90008f6a:	7832      	ldrb	r2, [r6, #0]
90008f6c:	42a2      	cmp	r2, r4
90008f6e:	d102      	bne.n	90008f76 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90008f70:	79b2      	ldrb	r2, [r6, #6]
90008f72:	42a2      	cmp	r2, r4
90008f74:	d0db      	beq.n	90008f2e <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x5e>
	if( turn_number == 9 )
90008f76:	2b09      	cmp	r3, #9
90008f78:	d1f2      	bne.n	90008f60 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
		return 3;
90008f7a:	2003      	movs	r0, #3
90008f7c:	e7d9      	b.n	90008f32 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
90008f7e:	bf00      	nop
90008f80:	2401fab9 	.word	0x2401fab9
90008f84:	2401fab0 	.word	0x2401fab0
90008f88:	2400003c 	.word	0x2400003c
90008f8c:	2401fabc 	.word	0x2401fabc
90008f90:	90008b21 	.word	0x90008b21
90008f94:	2401faba 	.word	0x2401faba

90008f98 <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
90008f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][1] == 0 ) {
90008f9c:	4d3c      	ldr	r5, [pc, #240]	; (90009090 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90008f9e:	782b      	ldrb	r3, [r5, #0]
90008fa0:	2b00      	cmp	r3, #0
90008fa2:	d12e      	bne.n	90009002 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
90008fa4:	4e3b      	ldr	r6, [pc, #236]	; (90009094 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
90008fa6:	7933      	ldrb	r3, [r6, #4]
90008fa8:	bb5b      	cbnz	r3, 90009002 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
		if( turn ) {
90008faa:	4f3b      	ldr	r7, [pc, #236]	; (90009098 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x100>)
90008fac:	4604      	mov	r4, r0
90008fae:	783b      	ldrb	r3, [r7, #0]
90008fb0:	bb4b      	cbnz	r3, 90009006 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6e>
			board[1][1] = 'O';
90008fb2:	234f      	movs	r3, #79	; 0x4f
			pos5_circle.invalidate();
90008fb4:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
90008fb8:	7133      	strb	r3, [r6, #4]
90008fba:	2301      	movs	r3, #1
90008fbc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_circle.invalidate();
90008fc0:	f010 f9b3 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90008fc4:	4a35      	ldr	r2, [pc, #212]	; (9000909c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x104>)
		short temp_result = is_game_over(1, 1);
90008fc6:	6823      	ldr	r3, [r4, #0]
90008fc8:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90008fcc:	8813      	ldrh	r3, [r2, #0]
90008fce:	3301      	adds	r3, #1
90008fd0:	b21b      	sxth	r3, r3
90008fd2:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90008fd4:	4a32      	ldr	r2, [pc, #200]	; (900090a0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x108>)
90008fd6:	4590      	cmp	r8, r2
90008fd8:	d11f      	bne.n	9000901a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x82>
	if(turn)
90008fda:	783a      	ldrb	r2, [r7, #0]
        if(board[x][i] != symbol)
90008fdc:	78f1      	ldrb	r1, [r6, #3]
		symbol = 'O';
90008fde:	2a00      	cmp	r2, #0
90008fe0:	bf14      	ite	ne
90008fe2:	2458      	movne	r4, #88	; 0x58
90008fe4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90008fe6:	42a1      	cmp	r1, r4
90008fe8:	d123      	bne.n	90009032 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90008fea:	7930      	ldrb	r0, [r6, #4]
90008fec:	4288      	cmp	r0, r1
90008fee:	d120      	bne.n	90009032 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90008ff0:	7971      	ldrb	r1, [r6, #5]
90008ff2:	4281      	cmp	r1, r0
90008ff4:	d136      	bne.n	90009064 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xcc>
                if( turn )
90008ff6:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
90008ffa:	2201      	movs	r2, #1
			result = temp_result;
90008ffc:	4b29      	ldr	r3, [pc, #164]	; (900090a4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x10c>)
			game_over = true;
90008ffe:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009000:	8018      	strh	r0, [r3, #0]
}
90009002:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][1] = 'X';
90009006:	2358      	movs	r3, #88	; 0x58
			pos5_cross.invalidate();
90009008:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
9000900c:	7133      	strb	r3, [r6, #4]
9000900e:	2301      	movs	r3, #1
90009010:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_cross.invalidate();
90009014:	f010 f989 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90009018:	e7d4      	b.n	90008fc4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x2c>
		short temp_result = is_game_over(1, 1);
9000901a:	2201      	movs	r2, #1
9000901c:	4620      	mov	r0, r4
9000901e:	4611      	mov	r1, r2
90009020:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009022:	2800      	cmp	r0, #0
90009024:	d1e9      	bne.n	90008ffa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
		turn = !turn;
90009026:	783b      	ldrb	r3, [r7, #0]
90009028:	f083 0301 	eor.w	r3, r3, #1
9000902c:	703b      	strb	r3, [r7, #0]
}
9000902e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009032:	7871      	ldrb	r1, [r6, #1]
90009034:	42a1      	cmp	r1, r4
90009036:	d123      	bne.n	90009080 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>
90009038:	7931      	ldrb	r1, [r6, #4]
9000903a:	42a1      	cmp	r1, r4
9000903c:	d116      	bne.n	9000906c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd4>
9000903e:	79f1      	ldrb	r1, [r6, #7]
90009040:	42a1      	cmp	r1, r4
90009042:	d0d8      	beq.n	90008ff6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][i] != symbol)
90009044:	7831      	ldrb	r1, [r6, #0]
90009046:	42a1      	cmp	r1, r4
90009048:	d113      	bne.n	90009072 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
9000904a:	7a31      	ldrb	r1, [r6, #8]
9000904c:	42a1      	cmp	r1, r4
9000904e:	d0d2      	beq.n	90008ff6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90009050:	78b1      	ldrb	r1, [r6, #2]
90009052:	42a1      	cmp	r1, r4
90009054:	d102      	bne.n	9000905c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90009056:	79b1      	ldrb	r1, [r6, #6]
90009058:	42a1      	cmp	r1, r4
9000905a:	d0cc      	beq.n	90008ff6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
	if( turn_number == 9 )
9000905c:	2b09      	cmp	r3, #9
9000905e:	d1e2      	bne.n	90009026 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8e>
		return 3;
90009060:	2003      	movs	r0, #3
90009062:	e7ca      	b.n	90008ffa <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
        if(board[i][y] != symbol)
90009064:	7871      	ldrb	r1, [r6, #1]
90009066:	42a1      	cmp	r1, r4
90009068:	d0e9      	beq.n	9000903e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa6>
9000906a:	e7eb      	b.n	90009044 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xac>
            if(board[i][i] != symbol)
9000906c:	7831      	ldrb	r1, [r6, #0]
9000906e:	42a1      	cmp	r1, r4
90009070:	d0f4      	beq.n	9000905c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][(3-1)-i] != symbol)
90009072:	78b1      	ldrb	r1, [r6, #2]
90009074:	42a1      	cmp	r1, r4
90009076:	d1f1      	bne.n	9000905c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90009078:	7931      	ldrb	r1, [r6, #4]
9000907a:	42a1      	cmp	r1, r4
9000907c:	d0eb      	beq.n	90009056 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbe>
9000907e:	e7ed      	b.n	9000905c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][i] != symbol)
90009080:	7831      	ldrb	r1, [r6, #0]
90009082:	42a1      	cmp	r1, r4
90009084:	d1f5      	bne.n	90009072 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
90009086:	7931      	ldrb	r1, [r6, #4]
90009088:	42a1      	cmp	r1, r4
9000908a:	d0de      	beq.n	9000904a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb2>
9000908c:	e7e6      	b.n	9000905c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
9000908e:	bf00      	nop
90009090:	2401fab9 	.word	0x2401fab9
90009094:	2401fab0 	.word	0x2401fab0
90009098:	2400003c 	.word	0x2400003c
9000909c:	2401fabc 	.word	0x2401fabc
900090a0:	90008b21 	.word	0x90008b21
900090a4:	2401faba 	.word	0x2401faba

900090a8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
900090a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][2] == 0 ) {
900090ac:	4d2b      	ldr	r5, [pc, #172]	; (9000915c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
900090ae:	782b      	ldrb	r3, [r5, #0]
900090b0:	2b00      	cmp	r3, #0
900090b2:	d12e      	bne.n	90009112 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
900090b4:	4e2a      	ldr	r6, [pc, #168]	; (90009160 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
900090b6:	7973      	ldrb	r3, [r6, #5]
900090b8:	bb5b      	cbnz	r3, 90009112 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
		if( turn ) {
900090ba:	4f2a      	ldr	r7, [pc, #168]	; (90009164 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xbc>)
900090bc:	4604      	mov	r4, r0
900090be:	783b      	ldrb	r3, [r7, #0]
900090c0:	bb4b      	cbnz	r3, 90009116 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6e>
			board[1][2] = 'O';
900090c2:	234f      	movs	r3, #79	; 0x4f
			pos6_circle.invalidate();
900090c4:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
900090c8:	7173      	strb	r3, [r6, #5]
900090ca:	2301      	movs	r3, #1
900090cc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_circle.invalidate();
900090d0:	f010 f92b 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900090d4:	4a24      	ldr	r2, [pc, #144]	; (90009168 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc0>)
		short temp_result = is_game_over(1, 2);
900090d6:	6823      	ldr	r3, [r4, #0]
900090d8:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900090dc:	8813      	ldrh	r3, [r2, #0]
900090de:	3301      	adds	r3, #1
900090e0:	b21b      	sxth	r3, r3
900090e2:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
900090e4:	4a21      	ldr	r2, [pc, #132]	; (9000916c <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc4>)
900090e6:	4590      	cmp	r8, r2
900090e8:	d11f      	bne.n	9000912a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
	if(turn)
900090ea:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900090ec:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
900090ee:	2800      	cmp	r0, #0
900090f0:	bf14      	ite	ne
900090f2:	2458      	movne	r4, #88	; 0x58
900090f4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900090f6:	42a2      	cmp	r2, r4
900090f8:	d123      	bne.n	90009142 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
900090fa:	7931      	ldrb	r1, [r6, #4]
900090fc:	4291      	cmp	r1, r2
900090fe:	d120      	bne.n	90009142 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90009100:	7972      	ldrb	r2, [r6, #5]
90009102:	428a      	cmp	r2, r1
90009104:	d126      	bne.n	90009154 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
            if( turn )
90009106:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000910a:	2201      	movs	r2, #1
			result = temp_result;
9000910c:	4b18      	ldr	r3, [pc, #96]	; (90009170 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc8>)
			game_over = true;
9000910e:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90009110:	8018      	strh	r0, [r3, #0]
}
90009112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][2] = 'X';
90009116:	2358      	movs	r3, #88	; 0x58
			pos6_cross.invalidate();
90009118:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
9000911c:	7173      	strb	r3, [r6, #5]
9000911e:	2301      	movs	r3, #1
90009120:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_cross.invalidate();
90009124:	f010 f901 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90009128:	e7d4      	b.n	900090d4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x2c>
		short temp_result = is_game_over(1, 2);
9000912a:	2202      	movs	r2, #2
9000912c:	4620      	mov	r0, r4
9000912e:	2101      	movs	r1, #1
90009130:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009132:	2800      	cmp	r0, #0
90009134:	d1e9      	bne.n	9000910a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
		turn = !turn;
90009136:	7838      	ldrb	r0, [r7, #0]
90009138:	f080 0001 	eor.w	r0, r0, #1
9000913c:	7038      	strb	r0, [r7, #0]
}
9000913e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009142:	78b2      	ldrb	r2, [r6, #2]
90009144:	42a2      	cmp	r2, r4
90009146:	d105      	bne.n	90009154 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
90009148:	7972      	ldrb	r2, [r6, #5]
9000914a:	42a2      	cmp	r2, r4
9000914c:	d102      	bne.n	90009154 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
9000914e:	7a32      	ldrb	r2, [r6, #8]
90009150:	42a2      	cmp	r2, r4
90009152:	d0d8      	beq.n	90009106 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x5e>
	if( turn_number == 9 )
90009154:	2b09      	cmp	r3, #9
90009156:	d1ef      	bne.n	90009138 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x90>
		return 3;
90009158:	2003      	movs	r0, #3
9000915a:	e7d6      	b.n	9000910a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
9000915c:	2401fab9 	.word	0x2401fab9
90009160:	2401fab0 	.word	0x2401fab0
90009164:	2400003c 	.word	0x2400003c
90009168:	2401fabc 	.word	0x2401fabc
9000916c:	90008b21 	.word	0x90008b21
90009170:	2401faba 	.word	0x2401faba

90009174 <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
90009174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][0] == 0 ) {
90009178:	4d2d      	ldr	r5, [pc, #180]	; (90009230 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
9000917a:	782b      	ldrb	r3, [r5, #0]
9000917c:	2b00      	cmp	r3, #0
9000917e:	d12f      	bne.n	900091e0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
90009180:	4e2c      	ldr	r6, [pc, #176]	; (90009234 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
90009182:	79b3      	ldrb	r3, [r6, #6]
90009184:	bb63      	cbnz	r3, 900091e0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
		if( turn ) {
90009186:	4f2c      	ldr	r7, [pc, #176]	; (90009238 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
90009188:	4604      	mov	r4, r0
9000918a:	783b      	ldrb	r3, [r7, #0]
9000918c:	bb53      	cbnz	r3, 900091e4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x70>
			board[2][0] = 'O';
9000918e:	234f      	movs	r3, #79	; 0x4f
			pos7_circle.invalidate();
90009190:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
90009194:	71b3      	strb	r3, [r6, #6]
90009196:	2301      	movs	r3, #1
90009198:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_circle.invalidate();
9000919c:	f010 f8c5 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900091a0:	4a26      	ldr	r2, [pc, #152]	; (9000923c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc8>)
		short temp_result = is_game_over(2, 0);
900091a2:	6823      	ldr	r3, [r4, #0]
900091a4:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900091a8:	8813      	ldrh	r3, [r2, #0]
900091aa:	3301      	adds	r3, #1
900091ac:	b21b      	sxth	r3, r3
900091ae:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
900091b0:	4a23      	ldr	r2, [pc, #140]	; (90009240 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xcc>)
900091b2:	4590      	cmp	r8, r2
900091b4:	d120      	bne.n	900091f8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x84>
	if(turn)
900091b6:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900091b8:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
900091ba:	2800      	cmp	r0, #0
900091bc:	bf14      	ite	ne
900091be:	2258      	movne	r2, #88	; 0x58
900091c0:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
900091c2:	42a2      	cmp	r2, r4
900091c4:	d130      	bne.n	90009228 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
900091c6:	79f1      	ldrb	r1, [r6, #7]
900091c8:	4291      	cmp	r1, r2
900091ca:	d121      	bne.n	90009210 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
900091cc:	f896 c008 	ldrb.w	ip, [r6, #8]
900091d0:	458c      	cmp	ip, r1
900091d2:	d11d      	bne.n	90009210 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
                if( turn )
900091d4:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900091d8:	2201      	movs	r2, #1
			result = temp_result;
900091da:	4b1a      	ldr	r3, [pc, #104]	; (90009244 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xd0>)
			game_over = true;
900091dc:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900091de:	8018      	strh	r0, [r3, #0]
}
900091e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][0] = 'X';
900091e4:	2358      	movs	r3, #88	; 0x58
			pos7_cross.invalidate();
900091e6:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
900091ea:	71b3      	strb	r3, [r6, #6]
900091ec:	2301      	movs	r3, #1
900091ee:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_cross.invalidate();
900091f2:	f010 f89a 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
900091f6:	e7d3      	b.n	900091a0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x2c>
		short temp_result = is_game_over(2, 0);
900091f8:	2200      	movs	r2, #0
900091fa:	4620      	mov	r0, r4
900091fc:	2102      	movs	r1, #2
900091fe:	47c0      	blx	r8
		if( temp_result != 0 ) {
90009200:	2800      	cmp	r0, #0
90009202:	d1e9      	bne.n	900091d8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
		turn = !turn;
90009204:	7838      	ldrb	r0, [r7, #0]
90009206:	f080 0001 	eor.w	r0, r0, #1
9000920a:	7038      	strb	r0, [r7, #0]
}
9000920c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90009210:	7831      	ldrb	r1, [r6, #0]
90009212:	42a1      	cmp	r1, r4
90009214:	d102      	bne.n	9000921c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
90009216:	78f1      	ldrb	r1, [r6, #3]
90009218:	42a1      	cmp	r1, r4
9000921a:	d0db      	beq.n	900091d4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
            if(board[i][(3-1)-i] != symbol)
9000921c:	78b1      	ldrb	r1, [r6, #2]
9000921e:	4291      	cmp	r1, r2
90009220:	d102      	bne.n	90009228 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
90009222:	7931      	ldrb	r1, [r6, #4]
90009224:	4291      	cmp	r1, r2
90009226:	d0d5      	beq.n	900091d4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
	if( turn_number == 9 )
90009228:	2b09      	cmp	r3, #9
9000922a:	d1ec      	bne.n	90009206 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x92>
		return 3;
9000922c:	2003      	movs	r0, #3
9000922e:	e7d3      	b.n	900091d8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
90009230:	2401fab9 	.word	0x2401fab9
90009234:	2401fab0 	.word	0x2401fab0
90009238:	2400003c 	.word	0x2400003c
9000923c:	2401fabc 	.word	0x2401fabc
90009240:	90008b21 	.word	0x90008b21
90009244:	2401faba 	.word	0x2401faba

90009248 <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90009248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][1] == 0 ) {
9000924c:	4d2b      	ldr	r5, [pc, #172]	; (900092fc <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
9000924e:	782b      	ldrb	r3, [r5, #0]
90009250:	2b00      	cmp	r3, #0
90009252:	d12e      	bne.n	900092b2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
90009254:	4e2a      	ldr	r6, [pc, #168]	; (90009300 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
90009256:	79f3      	ldrb	r3, [r6, #7]
90009258:	bb5b      	cbnz	r3, 900092b2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
		if( turn ) {
9000925a:	4f2a      	ldr	r7, [pc, #168]	; (90009304 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xbc>)
9000925c:	4604      	mov	r4, r0
9000925e:	783b      	ldrb	r3, [r7, #0]
90009260:	bb4b      	cbnz	r3, 900092b6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6e>
			board[2][1] = 'O';
90009262:	234f      	movs	r3, #79	; 0x4f
			pos8_circle.invalidate();
90009264:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
90009268:	71f3      	strb	r3, [r6, #7]
9000926a:	2301      	movs	r3, #1
9000926c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_circle.invalidate();
90009270:	f010 f85b 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009274:	4a24      	ldr	r2, [pc, #144]	; (90009308 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc0>)
		short temp_result = is_game_over(2, 1);
90009276:	6823      	ldr	r3, [r4, #0]
90009278:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
9000927c:	8813      	ldrh	r3, [r2, #0]
9000927e:	3301      	adds	r3, #1
90009280:	b21b      	sxth	r3, r3
90009282:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
90009284:	4a21      	ldr	r2, [pc, #132]	; (9000930c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc4>)
90009286:	4590      	cmp	r8, r2
90009288:	d11f      	bne.n	900092ca <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
	if(turn)
9000928a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
9000928c:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
9000928e:	2800      	cmp	r0, #0
90009290:	bf14      	ite	ne
90009292:	2458      	movne	r4, #88	; 0x58
90009294:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90009296:	42a2      	cmp	r2, r4
90009298:	d123      	bne.n	900092e2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
9000929a:	79f1      	ldrb	r1, [r6, #7]
9000929c:	4291      	cmp	r1, r2
9000929e:	d120      	bne.n	900092e2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
900092a0:	7a32      	ldrb	r2, [r6, #8]
900092a2:	428a      	cmp	r2, r1
900092a4:	d11d      	bne.n	900092e2 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
            if( turn )
900092a6:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900092aa:	2201      	movs	r2, #1
			result = temp_result;
900092ac:	4b18      	ldr	r3, [pc, #96]	; (90009310 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc8>)
			game_over = true;
900092ae:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900092b0:	8018      	strh	r0, [r3, #0]
}
900092b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][1] = 'X';
900092b6:	2358      	movs	r3, #88	; 0x58
			pos8_cross.invalidate();
900092b8:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
900092bc:	71f3      	strb	r3, [r6, #7]
900092be:	2301      	movs	r3, #1
900092c0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_cross.invalidate();
900092c4:	f010 f831 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
900092c8:	e7d4      	b.n	90009274 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x2c>
		short temp_result = is_game_over(2, 1);
900092ca:	2201      	movs	r2, #1
900092cc:	4620      	mov	r0, r4
900092ce:	2102      	movs	r1, #2
900092d0:	47c0      	blx	r8
		if( temp_result != 0 ) {
900092d2:	2800      	cmp	r0, #0
900092d4:	d1e9      	bne.n	900092aa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
		turn = !turn;
900092d6:	7838      	ldrb	r0, [r7, #0]
900092d8:	f080 0001 	eor.w	r0, r0, #1
900092dc:	7038      	strb	r0, [r7, #0]
}
900092de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900092e2:	7872      	ldrb	r2, [r6, #1]
900092e4:	42a2      	cmp	r2, r4
900092e6:	d105      	bne.n	900092f4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
900092e8:	7932      	ldrb	r2, [r6, #4]
900092ea:	42a2      	cmp	r2, r4
900092ec:	d102      	bne.n	900092f4 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
900092ee:	79f2      	ldrb	r2, [r6, #7]
900092f0:	42a2      	cmp	r2, r4
900092f2:	d0d8      	beq.n	900092a6 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x5e>
	if( turn_number == 9 )
900092f4:	2b09      	cmp	r3, #9
900092f6:	d1ef      	bne.n	900092d8 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x90>
		return 3;
900092f8:	2003      	movs	r0, #3
900092fa:	e7d6      	b.n	900092aa <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
900092fc:	2401fab9 	.word	0x2401fab9
90009300:	2401fab0 	.word	0x2401fab0
90009304:	2400003c 	.word	0x2400003c
90009308:	2401fabc 	.word	0x2401fabc
9000930c:	90008b21 	.word	0x90008b21
90009310:	2401faba 	.word	0x2401faba

90009314 <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
90009314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][2] == 0 ) {
90009318:	4d30      	ldr	r5, [pc, #192]	; (900093dc <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
9000931a:	782b      	ldrb	r3, [r5, #0]
9000931c:	2b00      	cmp	r3, #0
9000931e:	d12e      	bne.n	9000937e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
90009320:	4e2f      	ldr	r6, [pc, #188]	; (900093e0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
90009322:	7a33      	ldrb	r3, [r6, #8]
90009324:	bb5b      	cbnz	r3, 9000937e <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
		if( turn ) {
90009326:	4f2f      	ldr	r7, [pc, #188]	; (900093e4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd0>)
90009328:	4604      	mov	r4, r0
9000932a:	783b      	ldrb	r3, [r7, #0]
9000932c:	bb4b      	cbnz	r3, 90009382 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6e>
			board[2][2] = 'O';
9000932e:	234f      	movs	r3, #79	; 0x4f
			pos9_circle.invalidate();
90009330:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
90009334:	7233      	strb	r3, [r6, #8]
90009336:	2301      	movs	r3, #1
90009338:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_circle.invalidate();
9000933c:	f00f fff5 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90009340:	4a29      	ldr	r2, [pc, #164]	; (900093e8 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd4>)
		short temp_result = is_game_over(2, 2);
90009342:	6823      	ldr	r3, [r4, #0]
90009344:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90009348:	8813      	ldrh	r3, [r2, #0]
9000934a:	3301      	adds	r3, #1
9000934c:	b21b      	sxth	r3, r3
9000934e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90009350:	4a26      	ldr	r2, [pc, #152]	; (900093ec <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd8>)
90009352:	4590      	cmp	r8, r2
90009354:	d11f      	bne.n	90009396 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x82>
	if(turn)
90009356:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90009358:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
9000935a:	2800      	cmp	r0, #0
9000935c:	bf14      	ite	ne
9000935e:	2458      	movne	r4, #88	; 0x58
90009360:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90009362:	42a2      	cmp	r2, r4
90009364:	d123      	bne.n	900093ae <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90009366:	79f1      	ldrb	r1, [r6, #7]
90009368:	4291      	cmp	r1, r2
9000936a:	d120      	bne.n	900093ae <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
9000936c:	7a32      	ldrb	r2, [r6, #8]
9000936e:	428a      	cmp	r2, r1
90009370:	d11d      	bne.n	900093ae <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
                if( turn )
90009372:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90009376:	2201      	movs	r2, #1
			result = temp_result;
90009378:	4b1d      	ldr	r3, [pc, #116]	; (900093f0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xdc>)
			game_over = true;
9000937a:	702a      	strb	r2, [r5, #0]
			result = temp_result;
9000937c:	8018      	strh	r0, [r3, #0]
}
9000937e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][2] = 'X';
90009382:	2358      	movs	r3, #88	; 0x58
			pos9_cross.invalidate();
90009384:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90009388:	7233      	strb	r3, [r6, #8]
9000938a:	2301      	movs	r3, #1
9000938c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_cross.invalidate();
90009390:	f00f ffcb 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90009394:	e7d4      	b.n	90009340 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x2c>
		short temp_result = is_game_over(2, 2);
90009396:	2202      	movs	r2, #2
90009398:	4620      	mov	r0, r4
9000939a:	4611      	mov	r1, r2
9000939c:	47c0      	blx	r8
		if( temp_result != 0 ) {
9000939e:	2800      	cmp	r0, #0
900093a0:	d1e9      	bne.n	90009376 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
		turn = !turn;
900093a2:	783b      	ldrb	r3, [r7, #0]
900093a4:	f083 0301 	eor.w	r3, r3, #1
900093a8:	703b      	strb	r3, [r7, #0]
}
900093aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900093ae:	78b2      	ldrb	r2, [r6, #2]
900093b0:	42a2      	cmp	r2, r4
900093b2:	d105      	bne.n	900093c0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
900093b4:	7972      	ldrb	r2, [r6, #5]
900093b6:	42a2      	cmp	r2, r4
900093b8:	d102      	bne.n	900093c0 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
900093ba:	7a32      	ldrb	r2, [r6, #8]
900093bc:	42a2      	cmp	r2, r4
900093be:	d0d8      	beq.n	90009372 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
            if(board[i][i] != symbol)
900093c0:	7832      	ldrb	r2, [r6, #0]
900093c2:	42a2      	cmp	r2, r4
900093c4:	d105      	bne.n	900093d2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
900093c6:	7932      	ldrb	r2, [r6, #4]
900093c8:	42a2      	cmp	r2, r4
900093ca:	d102      	bne.n	900093d2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
900093cc:	7a32      	ldrb	r2, [r6, #8]
900093ce:	42a2      	cmp	r2, r4
900093d0:	d0cf      	beq.n	90009372 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
	if( turn_number == 9 )
900093d2:	2b09      	cmp	r3, #9
900093d4:	d1e5      	bne.n	900093a2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8e>
		return 3;
900093d6:	2003      	movs	r0, #3
900093d8:	e7cd      	b.n	90009376 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
900093da:	bf00      	nop
900093dc:	2401fab9 	.word	0x2401fab9
900093e0:	2401fab0 	.word	0x2401fab0
900093e4:	2400003c 	.word	0x2400003c
900093e8:	2401fabc 	.word	0x2401fabc
900093ec:	90008b21 	.word	0x90008b21
900093f0:	2401faba 	.word	0x2401faba

900093f4 <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
void screen_tictactoe_gameView::handleTickEvent() {
900093f4:	b538      	push	{r3, r4, r5, lr}
	if( game_over ) {
900093f6:	4b36      	ldr	r3, [pc, #216]	; (900094d0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xdc>)
void screen_tictactoe_gameView::handleTickEvent() {
900093f8:	4604      	mov	r4, r0
	if( game_over ) {
900093fa:	781b      	ldrb	r3, [r3, #0]
900093fc:	bb7b      	cbnz	r3, 9000945e <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x6a>
		if( turn_number == 0 ) {
900093fe:	4a35      	ldr	r2, [pc, #212]	; (900094d4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe0>)
90009400:	f9b2 2000 	ldrsh.w	r2, [r2]
90009404:	b1a2      	cbz	r2, 90009430 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x3c>
90009406:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
			btn_back.invalidate();
9000940a:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
9000940e:	f00f ff8c 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
90009412:	4b31      	ldr	r3, [pc, #196]	; (900094d8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
90009414:	781b      	ldrb	r3, [r3, #0]
90009416:	b1b3      	cbz	r3, 90009446 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x52>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "1");
90009418:	f604 3068 	addw	r0, r4, #2920	; 0xb68
9000941c:	4a2f      	ldr	r2, [pc, #188]	; (900094dc <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe8>)
9000941e:	210a      	movs	r1, #10
90009420:	f011 ffd2 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
90009424:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
90009428:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
9000942c:	f00f bf7d 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
90009430:	2301      	movs	r3, #1
			btn_back.invalidate();
90009432:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90009436:	f884 3a91 	strb.w	r3, [r4, #2705]	; 0xa91
9000943a:	f00f ff76 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( turn )
9000943e:	4b26      	ldr	r3, [pc, #152]	; (900094d8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xe4>)
90009440:	781b      	ldrb	r3, [r3, #0]
90009442:	2b00      	cmp	r3, #0
90009444:	d1e8      	bne.n	90009418 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x24>
			Unicode::snprintf(lbl_turnBuffer, LBL_TURN_SIZE, "2");
90009446:	f604 3068 	addw	r0, r4, #2920	; 0xb68
9000944a:	4a25      	ldr	r2, [pc, #148]	; (900094e0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xec>)
9000944c:	210a      	movs	r1, #10
9000944e:	f011 ffbb 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		lbl_turn.invalidate();
90009452:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
}
90009456:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_turn.invalidate();
9000945a:	f00f bf66 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
9000945e:	2501      	movs	r5, #1
		btn_back.invalidate();
90009460:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90009464:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90009468:	f00f ff5f 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		box_background.invalidate();
9000946c:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90009470:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90009474:	f00f ff59 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		lbl_game_over.invalidate();
90009478:	f604 2024 	addw	r0, r4, #2596	; 0xa24
9000947c:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
90009480:	f00f ff53 	bl	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
		if( result == 1 )
90009484:	4b17      	ldr	r3, [pc, #92]	; (900094e4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf0>)
90009486:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
9000948a:	f9b3 3000 	ldrsh.w	r3, [r3]
9000948e:	42ab      	cmp	r3, r5
90009490:	d009      	beq.n	900094a6 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xb2>
		else if( result == 2 )
90009492:	2b02      	cmp	r3, #2
90009494:	d00e      	beq.n	900094b4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xc0>
		else if( result == 3 )
90009496:	2b03      	cmp	r3, #3
90009498:	d013      	beq.n	900094c2 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xce>
		lbl_result.invalidate();
9000949a:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
}
9000949e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_result.invalidate();
900094a2:	f00f bf42 	b.w	9001932a <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 1 wins");
900094a6:	4a10      	ldr	r2, [pc, #64]	; (900094e8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf4>)
900094a8:	2114      	movs	r1, #20
900094aa:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900094ae:	f011 ff8b 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900094b2:	e7f2      	b.n	9000949a <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 2 wins");
900094b4:	4a0d      	ldr	r2, [pc, #52]	; (900094ec <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xf8>)
900094b6:	2114      	movs	r1, #20
900094b8:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900094bc:	f011 ff84 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900094c0:	e7eb      	b.n	9000949a <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Tie");
900094c2:	4a0b      	ldr	r2, [pc, #44]	; (900094f0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xfc>)
900094c4:	2114      	movs	r1, #20
900094c6:	f504 6034 	add.w	r0, r4, #2880	; 0xb40
900094ca:	f011 ff7d 	bl	9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
900094ce:	e7e4      	b.n	9000949a <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa6>
900094d0:	2401fab9 	.word	0x2401fab9
900094d4:	2401fabc 	.word	0x2401fabc
900094d8:	2400003c 	.word	0x2400003c
900094dc:	9002d1f4 	.word	0x9002d1f4
900094e0:	9002d1f8 	.word	0x9002d1f8
900094e4:	2401faba 	.word	0x2401faba
900094e8:	9002d1d0 	.word	0x9002d1d0
900094ec:	9002d1e0 	.word	0x9002d1e0
900094f0:	9002d1f0 	.word	0x9002d1f0

900094f4 <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
900094f4:	f7fc bd2a 	b.w	90005f4c <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

900094f8 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900094f8:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900094fc:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900094fe:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90009502:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90009506:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90009508:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000950a:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
9000950e:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90009512:	4770      	bx	lr

90009514 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90009514:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90009518:	2b01      	cmp	r3, #1
9000951a:	d102      	bne.n	90009522 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
9000951c:	2300      	movs	r3, #0
9000951e:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90009522:	2000      	movs	r0, #0
90009524:	4770      	bx	lr
90009526:	bf00      	nop

90009528 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90009528:	2000      	movs	r0, #0
9000952a:	4770      	bx	lr

9000952c <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
9000952c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000952e:	6904      	ldr	r4, [r0, #16]
90009530:	8900      	ldrh	r0, [r0, #8]
90009532:	46a4      	mov	ip, r4
}
90009534:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90009538:	4760      	bx	ip
9000953a:	bf00      	nop

9000953c <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
9000953c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000953e:	68c4      	ldr	r4, [r0, #12]
90009540:	8900      	ldrh	r0, [r0, #8]
90009542:	46a4      	mov	ip, r4
}
90009544:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90009548:	4760      	bx	ip
9000954a:	bf00      	nop

9000954c <FT5336_GestureConfig>:
{
9000954c:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000954e:	f100 0518 	add.w	r5, r0, #24
{
90009552:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90009554:	7809      	ldrb	r1, [r1, #0]
90009556:	4628      	mov	r0, r5
90009558:	f000 f96c 	bl	90009834 <ft5336_radian_value>
9000955c:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000955e:	7931      	ldrb	r1, [r6, #4]
90009560:	4628      	mov	r0, r5
90009562:	f000 f975 	bl	90009850 <ft5336_offset_left_right>
90009566:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90009568:	7a31      	ldrb	r1, [r6, #8]
9000956a:	4628      	mov	r0, r5
9000956c:	f000 f97e 	bl	9000986c <ft5336_offset_up_down>
90009570:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90009572:	7b31      	ldrb	r1, [r6, #12]
90009574:	4628      	mov	r0, r5
90009576:	f000 f987 	bl	90009888 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000957a:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000957c:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000957e:	4628      	mov	r0, r5
90009580:	f000 f990 	bl	900098a4 <ft5336_distance_up_down>
90009584:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90009586:	7d31      	ldrb	r1, [r6, #20]
90009588:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000958a:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
9000958c:	f000 f998 	bl	900098c0 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90009590:	42c4      	cmn	r4, r0
}
90009592:	bf14      	ite	ne
90009594:	f04f 30ff 	movne.w	r0, #4294967295
90009598:	2000      	moveq	r0, #0
9000959a:	bd70      	pop	{r4, r5, r6, pc}

9000959c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
9000959c:	3018      	adds	r0, #24
9000959e:	f000 b9ab 	b.w	900098f8 <ft5336_chip_id>
900095a2:	bf00      	nop

900095a4 <FT5336_GetState>:
{
900095a4:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900095a6:	f100 0518 	add.w	r5, r0, #24
{
900095aa:	b083      	sub	sp, #12
900095ac:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900095ae:	4628      	mov	r0, r5
900095b0:	a901      	add	r1, sp, #4
900095b2:	f000 f931 	bl	90009818 <ft5336_td_status>
900095b6:	bb10      	cbnz	r0, 900095fe <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900095b8:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900095bc:	2b05      	cmp	r3, #5
900095be:	bf94      	ite	ls
900095c0:	4619      	movls	r1, r3
900095c2:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900095c4:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900095c6:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900095c8:	4628      	mov	r0, r5
900095ca:	2103      	movs	r1, #3
900095cc:	eb0d 0203 	add.w	r2, sp, r3
900095d0:	f000 f910 	bl	900097f4 <ft5336_read_reg>
900095d4:	b9b0      	cbnz	r0, 90009604 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900095d6:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900095da:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900095de:	0212      	lsls	r2, r2, #8
900095e0:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900095e4:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900095e6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900095ea:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900095ee:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900095f0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900095f4:	430b      	orrs	r3, r1
900095f6:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900095fa:	b003      	add	sp, #12
900095fc:	bd30      	pop	{r4, r5, pc}
900095fe:	f04f 31ff 	mov.w	r1, #4294967295
90009602:	e7df      	b.n	900095c4 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90009604:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009608:	e7f7      	b.n	900095fa <FT5336_GetState+0x56>
9000960a:	bf00      	nop

9000960c <FT5336_GetMultiTouchState>:
{
9000960c:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000960e:	f100 0518 	add.w	r5, r0, #24
{
90009612:	b088      	sub	sp, #32
90009614:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90009616:	4628      	mov	r0, r5
90009618:	4669      	mov	r1, sp
9000961a:	f000 f8fd 	bl	90009818 <ft5336_td_status>
9000961e:	2800      	cmp	r0, #0
90009620:	f040 809a 	bne.w	90009758 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90009624:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90009628:	2b05      	cmp	r3, #5
9000962a:	bf94      	ite	ls
9000962c:	4619      	movls	r1, r3
9000962e:	2100      	movhi	r1, #0
90009630:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90009632:	231e      	movs	r3, #30
90009634:	466a      	mov	r2, sp
90009636:	4628      	mov	r0, r5
90009638:	2103      	movs	r1, #3
9000963a:	f000 f8db 	bl	900097f4 <ft5336_read_reg>
9000963e:	2800      	cmp	r0, #0
90009640:	f040 808d 	bne.w	9000975e <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009644:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009648:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000964c:	020a      	lsls	r2, r1, #8
9000964e:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009652:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009654:	f89d c007 	ldrb.w	ip, [sp, #7]
90009658:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000965c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000965e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009662:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009666:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009668:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000966c:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000966e:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009670:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009672:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009674:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009678:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000967a:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000967e:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009682:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009684:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009686:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000968a:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000968c:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000968e:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009690:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009694:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009696:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009698:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000969c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900096a0:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096a2:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900096a4:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096a6:	ea45 050c 	orr.w	r5, r5, ip
900096aa:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096ae:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900096b2:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096b4:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096b6:	0212      	lsls	r2, r2, #8
900096b8:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900096bc:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096be:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900096c2:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096c6:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900096c8:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096ca:	f89d 300e 	ldrb.w	r3, [sp, #14]
900096ce:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096d0:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096d4:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096d6:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096d8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096dc:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096de:	f89d 200f 	ldrb.w	r2, [sp, #15]
900096e2:	4313      	orrs	r3, r2
900096e4:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900096e6:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096e8:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096ec:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096f0:	020a      	lsls	r2, r1, #8
900096f2:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096f6:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900096f8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900096fc:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900096fe:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009702:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009704:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90009708:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000970a:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000970c:	f89d 1018 	ldrb.w	r1, [sp, #24]
90009710:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009712:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009714:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009716:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000971a:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000971c:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009720:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90009722:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009726:	f89d 301d 	ldrb.w	r3, [sp, #29]
9000972a:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000972c:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000972e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90009730:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90009734:	6625      	str	r5, [r4, #96]	; 0x60
90009736:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90009738:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000973c:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000973e:	021b      	lsls	r3, r3, #8
90009740:	f89d 101b 	ldrb.w	r1, [sp, #27]
90009744:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90009748:	430b      	orrs	r3, r1
9000974a:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000974c:	f89d 3019 	ldrb.w	r3, [sp, #25]
90009750:	4313      	orrs	r3, r2
90009752:	6163      	str	r3, [r4, #20]
}
90009754:	b008      	add	sp, #32
90009756:	bd70      	pop	{r4, r5, r6, pc}
90009758:	f04f 31ff 	mov.w	r1, #4294967295
9000975c:	e768      	b.n	90009630 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
9000975e:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90009762:	e7f7      	b.n	90009754 <FT5336_GetMultiTouchState+0x148>

90009764 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90009764:	3018      	adds	r0, #24
90009766:	f000 b84d 	b.w	90009804 <ft5336_gest_id>
9000976a:	bf00      	nop

9000976c <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
9000976c:	2101      	movs	r1, #1
9000976e:	3018      	adds	r0, #24
90009770:	f000 b8b4 	b.w	900098dc <ft5336_g_mode>

90009774 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90009774:	2100      	movs	r1, #0
90009776:	3018      	adds	r0, #24
90009778:	f000 b8b0 	b.w	900098dc <ft5336_g_mode>

9000977c <FT5336_Init>:
{
9000977c:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
9000977e:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90009782:	b98d      	cbnz	r5, 900097a8 <FT5336_Init+0x2c>
    pObj->IO.Init();
90009784:	4606      	mov	r6, r0
90009786:	4604      	mov	r4, r0
90009788:	f856 3b18 	ldr.w	r3, [r6], #24
9000978c:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
9000978e:	4629      	mov	r1, r5
90009790:	4630      	mov	r0, r6
90009792:	f000 f8a3 	bl	900098dc <ft5336_g_mode>
  if(ret != FT5336_OK)
90009796:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90009798:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
9000979c:	bf18      	it	ne
9000979e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
900097a0:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
900097a4:	4240      	negs	r0, r0
}
900097a6:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
900097a8:	2000      	movs	r0, #0
}
900097aa:	bd70      	pop	{r4, r5, r6, pc}

900097ac <FT5336_ClearIT>:
900097ac:	2000      	movs	r0, #0
900097ae:	4770      	bx	lr

900097b0 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
900097b0:	b1c0      	cbz	r0, 900097e4 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
900097b2:	890a      	ldrh	r2, [r1, #8]
{
900097b4:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
900097b6:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
900097ba:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
900097bc:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
900097c0:	694a      	ldr	r2, [r1, #20]
900097c2:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
900097c6:	4909      	ldr	r1, [pc, #36]	; (900097ec <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
900097c8:	60c5      	str	r5, [r0, #12]
900097ca:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
900097ce:	4a08      	ldr	r2, [pc, #32]	; (900097f0 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
900097d0:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
900097d4:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
900097d6:	b10b      	cbz	r3, 900097dc <FT5336_RegisterBusIO+0x2c>
}
900097d8:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
900097da:	4718      	bx	r3
}
900097dc:	f04f 30ff 	mov.w	r0, #4294967295
900097e0:	bc30      	pop	{r4, r5}
900097e2:	4770      	bx	lr
900097e4:	f04f 30ff 	mov.w	r0, #4294967295
900097e8:	4770      	bx	lr
900097ea:	bf00      	nop
900097ec:	9000952d 	.word	0x9000952d
900097f0:	9000953d 	.word	0x9000953d

900097f4 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
900097f4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900097f6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
900097fa:	46a4      	mov	ip, r4
}
900097fc:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009800:	4760      	bx	ip
90009802:	bf00      	nop

90009804 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90009804:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009806:	2301      	movs	r3, #1
{
90009808:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000980a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
9000980e:	4619      	mov	r1, r3
90009810:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90009812:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009816:	4760      	bx	ip

90009818 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90009818:	b538      	push	{r3, r4, r5, lr}
9000981a:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000981c:	2301      	movs	r3, #1
9000981e:	2102      	movs	r1, #2
90009820:	4622      	mov	r2, r4
90009822:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90009826:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90009828:	b918      	cbnz	r0, 90009832 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
9000982a:	7823      	ldrb	r3, [r4, #0]
9000982c:	f003 030f 	and.w	r3, r3, #15
90009830:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90009832:	bd38      	pop	{r3, r4, r5, pc}

90009834 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90009834:	b510      	push	{r4, lr}
90009836:	460c      	mov	r4, r1
90009838:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000983a:	2301      	movs	r3, #1
9000983c:	2191      	movs	r1, #145	; 0x91
{
9000983e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009842:	f10d 0207 	add.w	r2, sp, #7
90009846:	6804      	ldr	r4, [r0, #0]
90009848:	6880      	ldr	r0, [r0, #8]
9000984a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
9000984c:	b002      	add	sp, #8
9000984e:	bd10      	pop	{r4, pc}

90009850 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009850:	b510      	push	{r4, lr}
90009852:	460c      	mov	r4, r1
90009854:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009856:	2301      	movs	r3, #1
90009858:	2192      	movs	r1, #146	; 0x92
{
9000985a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000985e:	f10d 0207 	add.w	r2, sp, #7
90009862:	6804      	ldr	r4, [r0, #0]
90009864:	6880      	ldr	r0, [r0, #8]
90009866:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90009868:	b002      	add	sp, #8
9000986a:	bd10      	pop	{r4, pc}

9000986c <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
9000986c:	b510      	push	{r4, lr}
9000986e:	460c      	mov	r4, r1
90009870:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009872:	2301      	movs	r3, #1
90009874:	2193      	movs	r1, #147	; 0x93
{
90009876:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000987a:	f10d 0207 	add.w	r2, sp, #7
9000987e:	6804      	ldr	r4, [r0, #0]
90009880:	6880      	ldr	r0, [r0, #8]
90009882:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90009884:	b002      	add	sp, #8
90009886:	bd10      	pop	{r4, pc}

90009888 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90009888:	b510      	push	{r4, lr}
9000988a:	460c      	mov	r4, r1
9000988c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000988e:	2301      	movs	r3, #1
90009890:	2194      	movs	r1, #148	; 0x94
{
90009892:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90009896:	f10d 0207 	add.w	r2, sp, #7
9000989a:	6804      	ldr	r4, [r0, #0]
9000989c:	6880      	ldr	r0, [r0, #8]
9000989e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
900098a0:	b002      	add	sp, #8
900098a2:	bd10      	pop	{r4, pc}

900098a4 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900098a4:	b510      	push	{r4, lr}
900098a6:	460c      	mov	r4, r1
900098a8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098aa:	2301      	movs	r3, #1
900098ac:	2195      	movs	r1, #149	; 0x95
{
900098ae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098b2:	f10d 0207 	add.w	r2, sp, #7
900098b6:	6804      	ldr	r4, [r0, #0]
900098b8:	6880      	ldr	r0, [r0, #8]
900098ba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900098bc:	b002      	add	sp, #8
900098be:	bd10      	pop	{r4, pc}

900098c0 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900098c0:	b510      	push	{r4, lr}
900098c2:	460c      	mov	r4, r1
900098c4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098c6:	2301      	movs	r3, #1
900098c8:	2196      	movs	r1, #150	; 0x96
{
900098ca:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098ce:	f10d 0207 	add.w	r2, sp, #7
900098d2:	6804      	ldr	r4, [r0, #0]
900098d4:	6880      	ldr	r0, [r0, #8]
900098d6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900098d8:	b002      	add	sp, #8
900098da:	bd10      	pop	{r4, pc}

900098dc <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900098dc:	b510      	push	{r4, lr}
900098de:	460c      	mov	r4, r1
900098e0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098e2:	2301      	movs	r3, #1
900098e4:	21a4      	movs	r1, #164	; 0xa4
{
900098e6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900098ea:	f10d 0207 	add.w	r2, sp, #7
900098ee:	6804      	ldr	r4, [r0, #0]
900098f0:	6880      	ldr	r0, [r0, #8]
900098f2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900098f4:	b002      	add	sp, #8
900098f6:	bd10      	pop	{r4, pc}

900098f8 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
900098f8:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
900098fa:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
900098fe:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90009900:	2301      	movs	r3, #1
90009902:	46a4      	mov	ip, r4
90009904:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90009906:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000990a:	4760      	bx	ip

9000990c <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
9000990c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
9000990e:	680b      	ldr	r3, [r1, #0]
{
90009910:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009912:	4c2a      	ldr	r4, [pc, #168]	; (900099bc <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009914:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90009918:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
9000991a:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
9000991c:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000991e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90009920:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90009922:	2301      	movs	r3, #1
90009924:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90009926:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009928:	f005 fd2a 	bl	9000f380 <HAL_SDRAM_SendCommand>
9000992c:	2800      	cmp	r0, #0
9000992e:	d142      	bne.n	900099b6 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90009930:	f000 ff46 	bl	9000a7c0 <HAL_GetTick>
90009934:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90009936:	f000 ff43 	bl	9000a7c0 <HAL_GetTick>
9000993a:	4286      	cmp	r6, r0
9000993c:	d0fb      	beq.n	90009936 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000993e:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90009940:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90009942:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009944:	491d      	ldr	r1, [pc, #116]	; (900099bc <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90009946:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90009948:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
9000994a:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000994c:	4638      	mov	r0, r7
9000994e:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90009952:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90009954:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009956:	f005 fd13 	bl	9000f380 <HAL_SDRAM_SendCommand>
9000995a:	bb60      	cbnz	r0, 900099b6 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000995c:	4917      	ldr	r1, [pc, #92]	; (900099bc <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
9000995e:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90009962:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009964:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90009966:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
9000996a:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000996c:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90009970:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009972:	f005 fd05 	bl	9000f380 <HAL_SDRAM_SendCommand>
90009976:	b9f0      	cbnz	r0, 900099b6 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009978:	4910      	ldr	r1, [pc, #64]	; (900099bc <MT48LC4M32B2_Init+0xb0>)
9000997a:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000997c:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90009980:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90009982:	696a      	ldr	r2, [r5, #20]
90009984:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90009986:	69aa      	ldr	r2, [r5, #24]
90009988:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000998a:	69ea      	ldr	r2, [r5, #28]
9000998c:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000998e:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90009990:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90009992:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90009994:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90009998:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000999c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000999e:	f005 fcef 	bl	9000f380 <HAL_SDRAM_SendCommand>
900099a2:	b940      	cbnz	r0, 900099b6 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
900099a4:	68a9      	ldr	r1, [r5, #8]
900099a6:	4638      	mov	r0, r7
900099a8:	f005 fd0a 	bl	9000f3c0 <HAL_SDRAM_ProgramRefreshRate>
900099ac:	3800      	subs	r0, #0
900099ae:	bf18      	it	ne
900099b0:	2001      	movne	r0, #1
900099b2:	4240      	negs	r0, r0
}
900099b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900099b6:	f04f 30ff 	mov.w	r0, #4294967295
}
900099ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900099bc:	2401fac0 	.word	0x2401fac0

900099c0 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900099c0:	4a10      	ldr	r2, [pc, #64]	; (90009a04 <BSP_I2C4_DeInit+0x44>)
{
900099c2:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900099c4:	6813      	ldr	r3, [r2, #0]
900099c6:	3b01      	subs	r3, #1
900099c8:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900099ca:	b10b      	cbz	r3, 900099d0 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900099cc:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900099ce:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900099d0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900099d4:	480c      	ldr	r0, [pc, #48]	; (90009a08 <BSP_I2C4_DeInit+0x48>)
900099d6:	f001 faaf 	bl	9000af38 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900099da:	480b      	ldr	r0, [pc, #44]	; (90009a08 <BSP_I2C4_DeInit+0x48>)
900099dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900099e0:	f001 faaa 	bl	9000af38 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900099e4:	4a09      	ldr	r2, [pc, #36]	; (90009a0c <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900099e6:	480a      	ldr	r0, [pc, #40]	; (90009a10 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900099e8:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900099ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900099f0:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900099f4:	f001 fd48 	bl	9000b488 <HAL_I2C_DeInit>
900099f8:	2800      	cmp	r0, #0
900099fa:	d0e7      	beq.n	900099cc <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900099fc:	f06f 0007 	mvn.w	r0, #7
}
90009a00:	bd08      	pop	{r3, pc}
90009a02:	bf00      	nop
90009a04:	2401fad0 	.word	0x2401fad0
90009a08:	58020c00 	.word	0x58020c00
90009a0c:	58024400 	.word	0x58024400
90009a10:	240204d8 	.word	0x240204d8

90009a14 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90009a14:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90009a16:	2201      	movs	r2, #1
{
90009a18:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90009a1a:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90009a1e:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90009a22:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90009a26:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90009a2a:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90009a2c:	f001 fcd4 	bl	9000b3d8 <HAL_I2C_Init>
90009a30:	b108      	cbz	r0, 90009a36 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90009a32:	2001      	movs	r0, #1
}
90009a34:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90009a36:	4601      	mov	r1, r0
90009a38:	4620      	mov	r0, r4
90009a3a:	f001 ffe3 	bl	9000ba04 <HAL_I2CEx_ConfigAnalogFilter>
90009a3e:	2800      	cmp	r0, #0
90009a40:	d1f7      	bne.n	90009a32 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90009a42:	4601      	mov	r1, r0
90009a44:	4620      	mov	r0, r4
90009a46:	f002 f807 	bl	9000ba58 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90009a4a:	3800      	subs	r0, #0
90009a4c:	bf18      	it	ne
90009a4e:	2001      	movne	r0, #1
}
90009a50:	bd10      	pop	{r4, pc}
90009a52:	bf00      	nop

90009a54 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90009a54:	4b99      	ldr	r3, [pc, #612]	; (90009cbc <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90009a56:	489a      	ldr	r0, [pc, #616]	; (90009cc0 <BSP_I2C4_Init+0x26c>)
90009a58:	4a9a      	ldr	r2, [pc, #616]	; (90009cc4 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90009a5a:	6819      	ldr	r1, [r3, #0]
{
90009a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009a60:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90009a62:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90009a64:	9103      	str	r1, [sp, #12]
90009a66:	b119      	cbz	r1, 90009a70 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90009a68:	2000      	movs	r0, #0
}
90009a6a:	b01f      	add	sp, #124	; 0x7c
90009a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90009a70:	2201      	movs	r2, #1
90009a72:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90009a74:	f001 ffc0 	bl	9000b9f8 <HAL_I2C_GetState>
90009a78:	2800      	cmp	r0, #0
90009a7a:	d1f5      	bne.n	90009a68 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009a7c:	4c92      	ldr	r4, [pc, #584]	; (90009cc8 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009a7e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90009a82:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009a84:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009a86:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009a8a:	2600      	movs	r6, #0
90009a8c:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90009a8e:	f043 0308 	orr.w	r3, r3, #8
90009a92:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009a96:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009a9a:	f003 0308 	and.w	r3, r3, #8
90009a9e:	9315      	str	r3, [sp, #84]	; 0x54
90009aa0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009aa2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90009aa6:	f043 0308 	orr.w	r3, r3, #8
90009aaa:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90009aae:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90009ab2:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009ab4:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009ab8:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009abc:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009abe:	a918      	add	r1, sp, #96	; 0x60
90009ac0:	4882      	ldr	r0, [pc, #520]	; (90009ccc <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90009ac2:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90009ac4:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90009ac8:	f001 f904 	bl	9000acd4 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009acc:	2312      	movs	r3, #18
90009ace:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009ad2:	a918      	add	r1, sp, #96	; 0x60
90009ad4:	487d      	ldr	r0, [pc, #500]	; (90009ccc <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90009ad6:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90009ad8:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90009adc:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90009ae0:	f001 f8f8 	bl	9000acd4 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90009ae4:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90009ae8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90009aec:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90009af0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90009af4:	f003 0380 	and.w	r3, r3, #128	; 0x80
90009af8:	9317      	str	r3, [sp, #92]	; 0x5c
90009afa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90009afc:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009b00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90009b04:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90009b08:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90009b0c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90009b10:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009b14:	f004 fc94 	bl	9000e440 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90009b18:	2800      	cmp	r0, #0
90009b1a:	f000 81f6 	beq.w	90009f0a <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009b1e:	4b6c      	ldr	r3, [pc, #432]	; (90009cd0 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90009b20:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009b24:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009b26:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009b2a:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90009cd8 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009b2e:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009b30:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90009b34:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90009b36:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009b38:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009b3c:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90009b40:	4b64      	ldr	r3, [pc, #400]	; (90009cd4 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90009b42:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90009b46:	0079      	lsls	r1, r7, #1
90009b48:	681b      	ldr	r3, [r3, #0]
90009b4a:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90009b4e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90009b52:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90009b54:	4699      	mov	r9, r3
90009b56:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009b58:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90009b5c:	46b8      	mov	r8, r7
90009b5e:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90009b62:	bf94      	ite	ls
90009b64:	2101      	movls	r1, #1
90009b66:	2100      	movhi	r1, #0
90009b68:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90009b6c:	f001 0101 	and.w	r1, r1, #1
90009b70:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90009b74:	bf38      	it	cc
90009b76:	2100      	movcc	r1, #0
90009b78:	429c      	cmp	r4, r3
90009b7a:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90009b7e:	9105      	str	r1, [sp, #20]
90009b80:	bf8c      	ite	hi
90009b82:	2100      	movhi	r1, #0
90009b84:	2101      	movls	r1, #1
90009b86:	459c      	cmp	ip, r3
90009b88:	bf38      	it	cc
90009b8a:	2100      	movcc	r1, #0
90009b8c:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90009b90:	9106      	str	r1, [sp, #24]
90009b92:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90009b96:	9104      	str	r1, [sp, #16]
90009b98:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90009b9c:	9111      	str	r1, [sp, #68]	; 0x44
90009b9e:	bf94      	ite	ls
90009ba0:	2101      	movls	r1, #1
90009ba2:	2100      	movhi	r1, #0
90009ba4:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90009ba8:	f001 0e01 	and.w	lr, r1, #1
90009bac:	bf38      	it	cc
90009bae:	f04f 0e00 	movcc.w	lr, #0
90009bb2:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009bb4:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009bb8:	f8cd e01c 	str.w	lr, [sp, #28]
90009bbc:	bf8c      	ite	hi
90009bbe:	f04f 0e00 	movhi.w	lr, #0
90009bc2:	f04f 0e01 	movls.w	lr, #1
90009bc6:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009bc8:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009bca:	bf38      	it	cc
90009bcc:	f04f 0e00 	movcc.w	lr, #0
90009bd0:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90009bd4:	bf98      	it	ls
90009bd6:	2101      	movls	r1, #1
90009bd8:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90009bdc:	f8cd e020 	str.w	lr, [sp, #32]
90009be0:	f001 0101 	and.w	r1, r1, #1
90009be4:	bf38      	it	cc
90009be6:	2100      	movcc	r1, #0
90009be8:	4284      	cmp	r4, r0
90009bea:	9109      	str	r1, [sp, #36]	; 0x24
90009bec:	4601      	mov	r1, r0
90009bee:	bf8c      	ite	hi
90009bf0:	2000      	movhi	r0, #0
90009bf2:	2001      	movls	r0, #1
90009bf4:	458c      	cmp	ip, r1
90009bf6:	bf38      	it	cc
90009bf8:	2000      	movcc	r0, #0
90009bfa:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90009bfe:	900b      	str	r0, [sp, #44]	; 0x2c
90009c00:	bf94      	ite	ls
90009c02:	2001      	movls	r0, #1
90009c04:	2000      	movhi	r0, #0
90009c06:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90009c0a:	f000 0001 	and.w	r0, r0, #1
90009c0e:	bf38      	it	cc
90009c10:	2000      	movcc	r0, #0
90009c12:	900c      	str	r0, [sp, #48]	; 0x30
90009c14:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90009c18:	4284      	cmp	r4, r0
90009c1a:	bf8c      	ite	hi
90009c1c:	f04f 0e00 	movhi.w	lr, #0
90009c20:	f04f 0e01 	movls.w	lr, #1
90009c24:	4584      	cmp	ip, r0
90009c26:	bf38      	it	cc
90009c28:	f04f 0e00 	movcc.w	lr, #0
90009c2c:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90009c30:	4670      	mov	r0, lr
90009c32:	bf94      	ite	ls
90009c34:	2001      	movls	r0, #1
90009c36:	2000      	movhi	r0, #0
90009c38:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90009c3c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90009c40:	f04f 0e00 	mov.w	lr, #0
90009c44:	f000 0001 	and.w	r0, r0, #1
90009c48:	bf38      	it	cc
90009c4a:	2000      	movcc	r0, #0
90009c4c:	900e      	str	r0, [sp, #56]	; 0x38
90009c4e:	9804      	ldr	r0, [sp, #16]
90009c50:	4284      	cmp	r4, r0
90009c52:	4602      	mov	r2, r0
90009c54:	bf8c      	ite	hi
90009c56:	2200      	movhi	r2, #0
90009c58:	2201      	movls	r2, #1
90009c5a:	4584      	cmp	ip, r0
90009c5c:	bf38      	it	cc
90009c5e:	2200      	movcc	r2, #0
90009c60:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90009c64:	920f      	str	r2, [sp, #60]	; 0x3c
90009c66:	bf94      	ite	ls
90009c68:	2201      	movls	r2, #1
90009c6a:	2200      	movhi	r2, #0
90009c6c:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90009c70:	f002 0201 	and.w	r2, r2, #1
90009c74:	bf38      	it	cc
90009c76:	2200      	movcc	r2, #0
90009c78:	9210      	str	r2, [sp, #64]	; 0x40
90009c7a:	9a11      	ldr	r2, [sp, #68]	; 0x44
90009c7c:	4294      	cmp	r4, r2
90009c7e:	4613      	mov	r3, r2
90009c80:	bf8c      	ite	hi
90009c82:	2300      	movhi	r3, #0
90009c84:	2301      	movls	r3, #1
90009c86:	4594      	cmp	ip, r2
90009c88:	bf38      	it	cc
90009c8a:	2300      	movcc	r3, #0
90009c8c:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90009c90:	9311      	str	r3, [sp, #68]	; 0x44
90009c92:	bf94      	ite	ls
90009c94:	2301      	movls	r3, #1
90009c96:	2300      	movhi	r3, #0
90009c98:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90009c9c:	f003 0301 	and.w	r3, r3, #1
90009ca0:	bf38      	it	cc
90009ca2:	2300      	movcc	r3, #0
90009ca4:	9312      	str	r3, [sp, #72]	; 0x48
90009ca6:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90009caa:	429c      	cmp	r4, r3
90009cac:	bf8c      	ite	hi
90009cae:	2200      	movhi	r2, #0
90009cb0:	2201      	movls	r2, #1
90009cb2:	459c      	cmp	ip, r3
90009cb4:	bf38      	it	cc
90009cb6:	2200      	movcc	r2, #0
90009cb8:	9204      	str	r2, [sp, #16]
90009cba:	e014      	b.n	90009ce6 <BSP_I2C4_Init+0x292>
90009cbc:	2401fad0 	.word	0x2401fad0
90009cc0:	240204d8 	.word	0x240204d8
90009cc4:	58001c00 	.word	0x58001c00
90009cc8:	58024400 	.word	0x58024400
90009ccc:	58020c00 	.word	0x58020c00
90009cd0:	3b9aca00 	.word	0x3b9aca00
90009cd4:	240204d4 	.word	0x240204d4
90009cd8:	2401fad4 	.word	0x2401fad4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90009cdc:	f1be 0f10 	cmp.w	lr, #16
90009ce0:	44b8      	add	r8, r7
90009ce2:	f000 826c 	beq.w	9000a1be <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90009ce6:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90009cea:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90009cec:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90009cf0:	d3f4      	bcc.n	90009cdc <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90009cf2:	ebbb 0205 	subs.w	r2, fp, r5
90009cf6:	bf18      	it	ne
90009cf8:	2201      	movne	r2, #1
90009cfa:	2c00      	cmp	r4, #0
90009cfc:	bf18      	it	ne
90009cfe:	2200      	movne	r2, #0
90009d00:	2a00      	cmp	r2, #0
90009d02:	f040 824a 	bne.w	9000a19a <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90009d06:	45bc      	cmp	ip, r7
90009d08:	bf34      	ite	cc
90009d0a:	2200      	movcc	r2, #0
90009d0c:	2201      	movcs	r2, #1
90009d0e:	42bc      	cmp	r4, r7
90009d10:	bf88      	it	hi
90009d12:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90009d14:	45ab      	cmp	fp, r5
90009d16:	bf0c      	ite	eq
90009d18:	2200      	moveq	r2, #0
90009d1a:	f002 0201 	andne.w	r2, r2, #1
90009d1e:	2a00      	cmp	r2, #0
90009d20:	f000 80fd 	beq.w	90009f1e <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d24:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d28:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d2c:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d2e:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d32:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d36:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d3a:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d3c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009d3e:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d40:	f200 81a5 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009d44:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009d46:	9906      	ldr	r1, [sp, #24]
90009d48:	45ab      	cmp	fp, r5
90009d4a:	bf0c      	ite	eq
90009d4c:	2100      	moveq	r1, #0
90009d4e:	f001 0101 	andne.w	r1, r1, #1
90009d52:	2900      	cmp	r1, #0
90009d54:	f000 80ff 	beq.w	90009f56 <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d58:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d5c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d60:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d62:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d66:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d6a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d6e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d70:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009d72:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d74:	f200 818b 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009d78:	460a      	mov	r2, r1
90009d7a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009d7c:	9908      	ldr	r1, [sp, #32]
90009d7e:	45ab      	cmp	fp, r5
90009d80:	bf0c      	ite	eq
90009d82:	2100      	moveq	r1, #0
90009d84:	f001 0101 	andne.w	r1, r1, #1
90009d88:	2900      	cmp	r1, #0
90009d8a:	f000 80ff 	beq.w	90009f8c <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d8e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009d92:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009d96:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009d98:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009d9c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009da0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009da4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009da6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009da8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009daa:	f200 8170 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009dae:	460a      	mov	r2, r1
90009db0:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009db2:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009db4:	45ab      	cmp	fp, r5
90009db6:	bf0c      	ite	eq
90009db8:	2100      	moveq	r1, #0
90009dba:	f001 0101 	andne.w	r1, r1, #1
90009dbe:	2900      	cmp	r1, #0
90009dc0:	f000 80fe 	beq.w	90009fc0 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009dc4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009dc8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009dcc:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009dce:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009dd2:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009dd6:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009dda:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ddc:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009dde:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009de0:	f200 8155 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009de4:	460a      	mov	r2, r1
90009de6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009de8:	990d      	ldr	r1, [sp, #52]	; 0x34
90009dea:	45ab      	cmp	fp, r5
90009dec:	bf0c      	ite	eq
90009dee:	2100      	moveq	r1, #0
90009df0:	f001 0101 	andne.w	r1, r1, #1
90009df4:	2900      	cmp	r1, #0
90009df6:	f000 80fd 	beq.w	90009ff4 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009dfa:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009dfe:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e02:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e04:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e08:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e0c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e10:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e12:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009e14:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e16:	f200 813a 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009e1a:	460a      	mov	r2, r1
90009e1c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009e1e:	990f      	ldr	r1, [sp, #60]	; 0x3c
90009e20:	45ab      	cmp	fp, r5
90009e22:	bf0c      	ite	eq
90009e24:	2100      	moveq	r1, #0
90009e26:	f001 0101 	andne.w	r1, r1, #1
90009e2a:	2900      	cmp	r1, #0
90009e2c:	f000 80fc 	beq.w	9000a028 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e30:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e34:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e38:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e3a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e3e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e42:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e46:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e48:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009e4a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e4c:	f200 811f 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009e50:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009e52:	9e11      	ldr	r6, [sp, #68]	; 0x44
90009e54:	455d      	cmp	r5, fp
90009e56:	bf0c      	ite	eq
90009e58:	2600      	moveq	r6, #0
90009e5a:	f006 0601 	andne.w	r6, r6, #1
90009e5e:	2e00      	cmp	r6, #0
90009e60:	f000 80fb 	beq.w	9000a05a <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e64:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e68:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e6c:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e6e:	4650      	mov	r0, sl
90009e70:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e74:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e78:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009e7c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009e7e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009e80:	f200 8105 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009e84:	4631      	mov	r1, r6
90009e86:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009e88:	9e04      	ldr	r6, [sp, #16]
90009e8a:	455d      	cmp	r5, fp
90009e8c:	bf0c      	ite	eq
90009e8e:	2600      	moveq	r6, #0
90009e90:	f006 0601 	andne.w	r6, r6, #1
90009e94:	2e00      	cmp	r6, #0
90009e96:	f000 817c 	beq.w	9000a192 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009e9a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009e9e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009ea2:	4650      	mov	r0, sl
90009ea4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90009ea8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eac:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009eb0:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009eb2:	f04f 030f 	mov.w	r3, #15
90009eb6:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009eb8:	f200 80e9 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009ebc:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90009ebe:	e70d      	b.n	90009cdc <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90009ec0:	9a07      	ldr	r2, [sp, #28]
90009ec2:	9b08      	ldr	r3, [sp, #32]
90009ec4:	3214      	adds	r2, #20
90009ec6:	3301      	adds	r3, #1
90009ec8:	9207      	str	r2, [sp, #28]
90009eca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90009ecc:	9308      	str	r3, [sp, #32]
90009ece:	4293      	cmp	r3, r2
90009ed0:	f040 80ff 	bne.w	9000a0d2 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90009ed4:	297f      	cmp	r1, #127	; 0x7f
90009ed6:	d818      	bhi.n	90009f0a <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009ed8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90009edc:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009ede:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90009ee2:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009ee6:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90009ee8:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009eea:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009eec:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90009ef0:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009ef4:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009ef8:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90009efa:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009efc:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90009efe:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90009f02:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90009f04:	430b      	orrs	r3, r1
90009f06:	4313      	orrs	r3, r2
90009f08:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90009f0a:	9903      	ldr	r1, [sp, #12]
90009f0c:	48b5      	ldr	r0, [pc, #724]	; (9000a1e4 <BSP_I2C4_Init+0x790>)
90009f0e:	f7ff fd81 	bl	90009a14 <MX_I2C4_Init>
90009f12:	2800      	cmp	r0, #0
90009f14:	f43f ada8 	beq.w	90009a68 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90009f18:	f06f 0007 	mvn.w	r0, #7
  return ret;
90009f1c:	e5a5      	b.n	90009a6a <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90009f1e:	4632      	mov	r2, r6
90009f20:	9905      	ldr	r1, [sp, #20]
90009f22:	45ab      	cmp	fp, r5
90009f24:	bf0c      	ite	eq
90009f26:	2100      	moveq	r1, #0
90009f28:	f001 0101 	andne.w	r1, r1, #1
90009f2c:	2900      	cmp	r1, #0
90009f2e:	f43f af0a 	beq.w	90009d46 <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f32:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f36:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f3a:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f3c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f40:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f44:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f48:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f4a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f4c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f4e:	f200 809e 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009f52:	460a      	mov	r2, r1
90009f54:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f56:	9907      	ldr	r1, [sp, #28]
90009f58:	45ab      	cmp	fp, r5
90009f5a:	bf0c      	ite	eq
90009f5c:	2100      	moveq	r1, #0
90009f5e:	f001 0101 	andne.w	r1, r1, #1
90009f62:	2900      	cmp	r1, #0
90009f64:	f43f af0a 	beq.w	90009d7c <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f68:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009f6c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f70:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f72:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f76:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f7a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009f7e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f80:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009f82:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009f84:	f200 8083 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
90009f88:	460a      	mov	r2, r1
90009f8a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009f8c:	9909      	ldr	r1, [sp, #36]	; 0x24
90009f8e:	45ab      	cmp	fp, r5
90009f90:	bf0c      	ite	eq
90009f92:	2100      	moveq	r1, #0
90009f94:	f001 0101 	andne.w	r1, r1, #1
90009f98:	2900      	cmp	r1, #0
90009f9a:	f43f af0a 	beq.w	90009db2 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009f9e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fa2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fa6:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fa8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fac:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fb0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fb4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fb6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009fb8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fba:	d868      	bhi.n	9000a08e <BSP_I2C4_Init+0x63a>
90009fbc:	460a      	mov	r2, r1
90009fbe:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009fc0:	990c      	ldr	r1, [sp, #48]	; 0x30
90009fc2:	45ab      	cmp	fp, r5
90009fc4:	bf0c      	ite	eq
90009fc6:	2100      	moveq	r1, #0
90009fc8:	f001 0101 	andne.w	r1, r1, #1
90009fcc:	2900      	cmp	r1, #0
90009fce:	f43f af0b 	beq.w	90009de8 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fd2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90009fd6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fda:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fdc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fe0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fe4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90009fe8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90009fea:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90009fec:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90009fee:	d84e      	bhi.n	9000a08e <BSP_I2C4_Init+0x63a>
90009ff0:	460a      	mov	r2, r1
90009ff2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90009ff4:	990e      	ldr	r1, [sp, #56]	; 0x38
90009ff6:	45ab      	cmp	fp, r5
90009ff8:	bf0c      	ite	eq
90009ffa:	2100      	moveq	r1, #0
90009ffc:	f001 0101 	andne.w	r1, r1, #1
9000a000:	2900      	cmp	r1, #0
9000a002:	f43f af0c 	beq.w	90009e1e <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a006:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a00a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a00e:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a010:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a014:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a018:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a01c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a01e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a020:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a022:	d834      	bhi.n	9000a08e <BSP_I2C4_Init+0x63a>
9000a024:	460a      	mov	r2, r1
9000a026:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a028:	9910      	ldr	r1, [sp, #64]	; 0x40
9000a02a:	45ab      	cmp	fp, r5
9000a02c:	bf0c      	ite	eq
9000a02e:	2100      	moveq	r1, #0
9000a030:	f001 0101 	andne.w	r1, r1, #1
9000a034:	2900      	cmp	r1, #0
9000a036:	f000 80ae 	beq.w	9000a196 <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a03a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a03e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a042:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a044:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a048:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a04c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a050:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a052:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a054:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a056:	d81a      	bhi.n	9000a08e <BSP_I2C4_Init+0x63a>
9000a058:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000a05a:	9e12      	ldr	r6, [sp, #72]	; 0x48
9000a05c:	455d      	cmp	r5, fp
9000a05e:	bf0c      	ite	eq
9000a060:	2600      	moveq	r6, #0
9000a062:	f006 0601 	andne.w	r6, r6, #1
9000a066:	2e00      	cmp	r6, #0
9000a068:	f43f af0e 	beq.w	90009e88 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a06c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a070:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a074:	4650      	mov	r0, sl
9000a076:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
9000a07a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a07e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a082:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a084:	f04f 030e 	mov.w	r3, #14
9000a088:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a08a:	f67f af17 	bls.w	90009ebc <BSP_I2C4_Init+0x468>
9000a08e:	4b56      	ldr	r3, [pc, #344]	; (9000a1e8 <BSP_I2C4_Init+0x794>)
9000a090:	900b      	str	r0, [sp, #44]	; 0x2c
9000a092:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000a096:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000a09a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9000a09c:	f240 4201 	movw	r2, #1025	; 0x401
9000a0a0:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a0a4:	f640 1ac4 	movw	sl, #2500	; 0x9c4
9000a0a8:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a0aa:	f240 4b12 	movw	fp, #1042	; 0x412
9000a0ae:	920d      	str	r2, [sp, #52]	; 0x34
9000a0b0:	9a02      	ldr	r2, [sp, #8]
9000a0b2:	4296      	cmp	r6, r2
9000a0b4:	bf38      	it	cc
9000a0b6:	4616      	movcc	r6, r2
9000a0b8:	4a4c      	ldr	r2, [pc, #304]	; (9000a1ec <BSP_I2C4_Init+0x798>)
9000a0ba:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a0bc:	2200      	movs	r2, #0
9000a0be:	9208      	str	r2, [sp, #32]
9000a0c0:	f04f 32ff 	mov.w	r2, #4294967295
9000a0c4:	4611      	mov	r1, r2
9000a0c6:	f103 0232 	add.w	r2, r3, #50	; 0x32
9000a0ca:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
9000a0ce:	920c      	str	r2, [sp, #48]	; 0x30
9000a0d0:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a0d2:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a0d4:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000a0d8:	6818      	ldr	r0, [r3, #0]
9000a0da:	9b02      	ldr	r3, [sp, #8]
9000a0dc:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000a0e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000a0e2:	1a1b      	subs	r3, r3, r0
9000a0e4:	ea4f 0943 	mov.w	r9, r3, lsl #1
9000a0e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000a0ea:	eb03 0e00 	add.w	lr, r3, r0
9000a0ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000a0f0:	4403      	add	r3, r0
9000a0f2:	9309      	str	r3, [sp, #36]	; 0x24
9000a0f4:	e006      	b.n	9000a104 <BSP_I2C4_Init+0x6b0>
9000a0f6:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
9000a0fa:	4486      	add	lr, r0
9000a0fc:	eba9 0900 	sub.w	r9, r9, r0
9000a100:	f43f aede 	beq.w	90009ec0 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a104:	f240 5214 	movw	r2, #1300	; 0x514
9000a108:	f8cd 8004 	str.w	r8, [sp, #4]
9000a10c:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000a110:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000a114:	4596      	cmp	lr, r2
9000a116:	d9ee      	bls.n	9000a0f6 <BSP_I2C4_Init+0x6a2>
9000a118:	9a02      	ldr	r2, [sp, #8]
9000a11a:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
9000a11e:	d2ea      	bcs.n	9000a0f6 <BSP_I2C4_Init+0x6a2>
9000a120:	f640 0c34 	movw	ip, #2100	; 0x834
9000a124:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a126:	f8cd 9018 	str.w	r9, [sp, #24]
9000a12a:	2200      	movs	r2, #0
9000a12c:	ebac 0c03 	sub.w	ip, ip, r3
9000a130:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000a132:	4689      	mov	r9, r1
9000a134:	4473      	add	r3, lr
9000a136:	e9cd e804 	strd	lr, r8, [sp, #16]
9000a13a:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000a13e:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000a142:	e005      	b.n	9000a150 <BSP_I2C4_Init+0x6fc>
9000a144:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000a148:	4403      	add	r3, r0
9000a14a:	eba4 0400 	sub.w	r4, r4, r0
9000a14e:	d01a      	beq.n	9000a186 <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a150:	eb0c 0103 	add.w	r1, ip, r3
9000a154:	4617      	mov	r7, r2
9000a156:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000a15a:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000a15c:	42b1      	cmp	r1, r6
9000a15e:	d9f1      	bls.n	9000a144 <BSP_I2C4_Init+0x6f0>
9000a160:	455d      	cmp	r5, fp
9000a162:	d8ef      	bhi.n	9000a144 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
9000a164:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000a168:	bf28      	it	cs
9000a16a:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
9000a16c:	458a      	cmp	sl, r1
9000a16e:	d9e9      	bls.n	9000a144 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
9000a170:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a172:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000a176:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
9000a178:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a17a:	4403      	add	r3, r0
9000a17c:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000a180:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000a184:	d1e4      	bne.n	9000a150 <BSP_I2C4_Init+0x6fc>
9000a186:	4649      	mov	r1, r9
9000a188:	f8dd 9018 	ldr.w	r9, [sp, #24]
9000a18c:	e9dd e804 	ldrd	lr, r8, [sp, #16]
9000a190:	e7b1      	b.n	9000a0f6 <BSP_I2C4_Init+0x6a2>
9000a192:	460e      	mov	r6, r1
9000a194:	e5a2      	b.n	90009cdc <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000a196:	4611      	mov	r1, r2
9000a198:	e65b      	b.n	90009e52 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a19a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000a19e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1a2:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1a4:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1a8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1ac:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000a1b0:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000a1b2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000a1b4:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000a1b6:	f63f af6a 	bhi.w	9000a08e <BSP_I2C4_Init+0x63a>
9000a1ba:	46ab      	mov	fp, r5
9000a1bc:	e6b0      	b.n	90009f20 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000a1be:	3501      	adds	r5, #1
9000a1c0:	9b02      	ldr	r3, [sp, #8]
9000a1c2:	2d10      	cmp	r5, #16
9000a1c4:	441f      	add	r7, r3
9000a1c6:	f47f acc7 	bne.w	90009b58 <BSP_I2C4_Init+0x104>
9000a1ca:	b126      	cbz	r6, 9000a1d6 <BSP_I2C4_Init+0x782>
9000a1cc:	4b06      	ldr	r3, [pc, #24]	; (9000a1e8 <BSP_I2C4_Init+0x794>)
9000a1ce:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000a1d2:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000a1d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000a1d8:	2b00      	cmp	r3, #0
9000a1da:	f43f ae96 	beq.w	90009f0a <BSP_I2C4_Init+0x4b6>
9000a1de:	4b03      	ldr	r3, [pc, #12]	; (9000a1ec <BSP_I2C4_Init+0x798>)
9000a1e0:	930b      	str	r3, [sp, #44]	; 0x2c
9000a1e2:	e75a      	b.n	9000a09a <BSP_I2C4_Init+0x646>
9000a1e4:	240204d8 	.word	0x240204d8
9000a1e8:	240204d4 	.word	0x240204d4
9000a1ec:	2401fad4 	.word	0x2401fad4

9000a1f0 <BSP_I2C4_WriteReg>:
{
9000a1f0:	b530      	push	{r4, r5, lr}
9000a1f2:	4614      	mov	r4, r2
9000a1f4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a1f6:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a1fa:	460a      	mov	r2, r1
9000a1fc:	9301      	str	r3, [sp, #4]
9000a1fe:	4601      	mov	r1, r0
9000a200:	2301      	movs	r3, #1
9000a202:	4809      	ldr	r0, [pc, #36]	; (9000a228 <BSP_I2C4_WriteReg+0x38>)
9000a204:	9502      	str	r5, [sp, #8]
9000a206:	9400      	str	r4, [sp, #0]
9000a208:	f001 f958 	bl	9000b4bc <HAL_I2C_Mem_Write>
9000a20c:	b908      	cbnz	r0, 9000a212 <BSP_I2C4_WriteReg+0x22>
}
9000a20e:	b005      	add	sp, #20
9000a210:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a212:	4805      	ldr	r0, [pc, #20]	; (9000a228 <BSP_I2C4_WriteReg+0x38>)
9000a214:	f001 fbf4 	bl	9000ba00 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a218:	2804      	cmp	r0, #4
9000a21a:	bf0c      	ite	eq
9000a21c:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a220:	f06f 0003 	mvnne.w	r0, #3
9000a224:	e7f3      	b.n	9000a20e <BSP_I2C4_WriteReg+0x1e>
9000a226:	bf00      	nop
9000a228:	240204d8 	.word	0x240204d8

9000a22c <BSP_I2C4_ReadReg>:
{
9000a22c:	b530      	push	{r4, r5, lr}
9000a22e:	4614      	mov	r4, r2
9000a230:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000a232:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000a236:	460a      	mov	r2, r1
9000a238:	9301      	str	r3, [sp, #4]
9000a23a:	4601      	mov	r1, r0
9000a23c:	2301      	movs	r3, #1
9000a23e:	4809      	ldr	r0, [pc, #36]	; (9000a264 <BSP_I2C4_ReadReg+0x38>)
9000a240:	9502      	str	r5, [sp, #8]
9000a242:	9400      	str	r4, [sp, #0]
9000a244:	f001 fa6e 	bl	9000b724 <HAL_I2C_Mem_Read>
9000a248:	b908      	cbnz	r0, 9000a24e <BSP_I2C4_ReadReg+0x22>
}
9000a24a:	b005      	add	sp, #20
9000a24c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000a24e:	4805      	ldr	r0, [pc, #20]	; (9000a264 <BSP_I2C4_ReadReg+0x38>)
9000a250:	f001 fbd6 	bl	9000ba00 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000a254:	2804      	cmp	r0, #4
9000a256:	bf0c      	ite	eq
9000a258:	f06f 0065 	mvneq.w	r0, #101	; 0x65
9000a25c:	f06f 0003 	mvnne.w	r0, #3
9000a260:	e7f3      	b.n	9000a24a <BSP_I2C4_ReadReg+0x1e>
9000a262:	bf00      	nop
9000a264:	240204d8 	.word	0x240204d8

9000a268 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000a268:	f000 baaa 	b.w	9000a7c0 <HAL_GetTick>

9000a26c <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000a26c:	b970      	cbnz	r0, 9000a28c <BSP_SDRAM_DeInit+0x20>
{
9000a26e:	b510      	push	{r4, lr}
9000a270:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000a272:	4808      	ldr	r0, [pc, #32]	; (9000a294 <BSP_SDRAM_DeInit+0x28>)
9000a274:	f005 f876 	bl	9000f364 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
9000a278:	207a      	movs	r0, #122	; 0x7a
9000a27a:	f000 fb0b 	bl	9000a894 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a27e:	4b06      	ldr	r3, [pc, #24]	; (9000a298 <BSP_SDRAM_DeInit+0x2c>)
9000a280:	4806      	ldr	r0, [pc, #24]	; (9000a29c <BSP_SDRAM_DeInit+0x30>)
9000a282:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
9000a284:	f003 f98e 	bl	9000d5a4 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
9000a288:	4620      	mov	r0, r4
}
9000a28a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a28c:	f06f 0001 	mvn.w	r0, #1
}
9000a290:	4770      	bx	lr
9000a292:	bf00      	nop
9000a294:	2402052c 	.word	0x2402052c
9000a298:	52000040 	.word	0x52000040
9000a29c:	24020560 	.word	0x24020560

9000a2a0 <MX_SDRAM_BANK2_Init>:
{
9000a2a0:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000a2a2:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a2a4:	2200      	movs	r2, #0
{
9000a2a6:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a2a8:	4c13      	ldr	r4, [pc, #76]	; (9000a2f8 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000a2aa:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a2ac:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000a2ae:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a2b0:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000a2b2:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000a2b4:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000a2b6:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a2b8:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
9000a2bc:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000a2be:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a2c0:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000a2c2:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000a2c4:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a2c6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000a2ca:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a2cc:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000a2d0:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a2d2:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000a2d4:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000a2d8:	2204      	movs	r2, #4
9000a2da:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000a2de:	2202      	movs	r2, #2
9000a2e0:	2302      	movs	r3, #2
9000a2e2:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000a2e6:	4b05      	ldr	r3, [pc, #20]	; (9000a2fc <MX_SDRAM_BANK2_Init+0x5c>)
9000a2e8:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000a2ea:	f005 f811 	bl	9000f310 <HAL_SDRAM_Init>
}
9000a2ee:	3800      	subs	r0, #0
9000a2f0:	bf18      	it	ne
9000a2f2:	2001      	movne	r0, #1
9000a2f4:	b009      	add	sp, #36	; 0x24
9000a2f6:	bd30      	pop	{r4, r5, pc}
9000a2f8:	2402052c 	.word	0x2402052c
9000a2fc:	52004140 	.word	0x52004140

9000a300 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
9000a300:	2800      	cmp	r0, #0
9000a302:	f040 80d2 	bne.w	9000a4aa <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000a306:	4b6c      	ldr	r3, [pc, #432]	; (9000a4b8 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a308:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000a30a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a30e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
9000a312:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
9000a314:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
9000a318:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
9000a31a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a31e:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a320:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a324:	4c65      	ldr	r4, [pc, #404]	; (9000a4bc <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a326:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a32a:	4e65      	ldr	r6, [pc, #404]	; (9000a4c0 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000a32c:	9201      	str	r2, [sp, #4]
9000a32e:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
9000a330:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a334:	f042 0201 	orr.w	r2, r2, #1
9000a338:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
9000a33c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000a340:	f002 0201 	and.w	r2, r2, #1
9000a344:	9202      	str	r2, [sp, #8]
9000a346:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000a348:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a34c:	f042 0208 	orr.w	r2, r2, #8
9000a350:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a354:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a358:	f002 0208 	and.w	r2, r2, #8
9000a35c:	9203      	str	r2, [sp, #12]
9000a35e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000a360:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a364:	f042 0210 	orr.w	r2, r2, #16
9000a368:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a36c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a370:	f002 0210 	and.w	r2, r2, #16
9000a374:	9204      	str	r2, [sp, #16]
9000a376:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
9000a378:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a37c:	f042 0220 	orr.w	r2, r2, #32
9000a380:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a384:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a388:	f002 0220 	and.w	r2, r2, #32
9000a38c:	9205      	str	r2, [sp, #20]
9000a38e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000a390:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a394:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a398:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a39c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a3a0:	f002 0240 	and.w	r2, r2, #64	; 0x40
9000a3a4:	9206      	str	r2, [sp, #24]
9000a3a6:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a3a8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000a3ac:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000a3b0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000a3b4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000a3b8:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a3ba:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a3bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a3c0:	e9cd 0108 	strd	r0, r1, [sp, #32]
9000a3c4:	2001      	movs	r0, #1
9000a3c6:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
9000a3c8:	9307      	str	r3, [sp, #28]
9000a3ca:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000a3cc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000a3d0:	a908      	add	r1, sp, #32
9000a3d2:	483c      	ldr	r0, [pc, #240]	; (9000a4c4 <BSP_SDRAM_Init+0x1c4>)
9000a3d4:	f000 fc7e 	bl	9000acd4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a3d8:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a3dc:	a908      	add	r1, sp, #32
9000a3de:	483a      	ldr	r0, [pc, #232]	; (9000a4c8 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000a3e0:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
9000a3e2:	f000 fc77 	bl	9000acd4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a3e6:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a3ea:	a908      	add	r1, sp, #32
9000a3ec:	4837      	ldr	r0, [pc, #220]	; (9000a4cc <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000a3ee:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000a3f0:	f000 fc70 	bl	9000acd4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a3f4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a3f8:	a908      	add	r1, sp, #32
9000a3fa:	4835      	ldr	r0, [pc, #212]	; (9000a4d0 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
9000a3fc:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000a3fe:	f000 fc69 	bl	9000acd4 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a402:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a404:	a908      	add	r1, sp, #32
9000a406:	4833      	ldr	r0, [pc, #204]	; (9000a4d4 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000a408:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000a40a:	f000 fc63 	bl	9000acd4 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a40e:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a410:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a414:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000a418:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000a41a:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
9000a41c:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
9000a41e:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a420:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
9000a424:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000a426:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a428:	4a2b      	ldr	r2, [pc, #172]	; (9000a4d8 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a42a:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000a42c:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000a42e:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
9000a430:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
9000a434:	f640 0308 	movw	r3, #2056	; 0x808
9000a438:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000a43a:	2320      	movs	r3, #32
9000a43c:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a43e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000a442:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000a446:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
9000a448:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
9000a44c:	f003 f8aa 	bl	9000d5a4 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000a450:	4620      	mov	r0, r4
9000a452:	f003 f82d 	bl	9000d4b0 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000a456:	462a      	mov	r2, r5
9000a458:	210f      	movs	r1, #15
9000a45a:	207a      	movs	r0, #122	; 0x7a
9000a45c:	f000 f9ce 	bl	9000a7fc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000a460:	207a      	movs	r0, #122	; 0x7a
9000a462:	f000 fa09 	bl	9000a878 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000a466:	2210      	movs	r2, #16
9000a468:	2104      	movs	r1, #4
9000a46a:	4630      	mov	r0, r6
9000a46c:	f7ff ff18 	bl	9000a2a0 <MX_SDRAM_BANK2_Init>
9000a470:	b9f0      	cbnz	r0, 9000a4b0 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a472:	491a      	ldr	r1, [pc, #104]	; (9000a4dc <BSP_SDRAM_Init+0x1dc>)
9000a474:	2208      	movs	r2, #8
9000a476:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a478:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000a47a:	e9c1 2300 	strd	r2, r3, [r1]
9000a47e:	f240 6203 	movw	r2, #1539	; 0x603
9000a482:	2300      	movs	r3, #0
9000a484:	e9c1 2302 	strd	r2, r3, [r1, #8]
9000a488:	2200      	movs	r2, #0
9000a48a:	2330      	movs	r3, #48	; 0x30
9000a48c:	e9c1 2304 	strd	r2, r3, [r1, #16]
9000a490:	2200      	movs	r2, #0
9000a492:	f44f 7300 	mov.w	r3, #512	; 0x200
9000a496:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
9000a49a:	f7ff fa37 	bl	9000990c <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000a49e:	2800      	cmp	r0, #0
9000a4a0:	bf18      	it	ne
9000a4a2:	f06f 0004 	mvnne.w	r0, #4
}
9000a4a6:	b00e      	add	sp, #56	; 0x38
9000a4a8:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000a4aa:	f06f 0001 	mvn.w	r0, #1
}
9000a4ae:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000a4b0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
9000a4b4:	e7f7      	b.n	9000a4a6 <BSP_SDRAM_Init+0x1a6>
9000a4b6:	bf00      	nop
9000a4b8:	58024400 	.word	0x58024400
9000a4bc:	240205cc 	.word	0x240205cc
9000a4c0:	2402052c 	.word	0x2402052c
9000a4c4:	58020c00 	.word	0x58020c00
9000a4c8:	58021000 	.word	0x58021000
9000a4cc:	58021400 	.word	0x58021400
9000a4d0:	58021800 	.word	0x58021800
9000a4d4:	58021c00 	.word	0x58021c00
9000a4d8:	52000040 	.word	0x52000040
9000a4dc:	24020638 	.word	0x24020638

9000a4e0 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
9000a4e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a4e4:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000a4e6:	2800      	cmp	r0, #0
9000a4e8:	d16b      	bne.n	9000a5c2 <BSP_TS_Init+0xe2>
9000a4ea:	680b      	ldr	r3, [r1, #0]
9000a4ec:	460c      	mov	r4, r1
9000a4ee:	1e5a      	subs	r2, r3, #1
9000a4f0:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
9000a4f4:	d265      	bcs.n	9000a5c2 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a4f6:	684a      	ldr	r2, [r1, #4]
9000a4f8:	1e51      	subs	r1, r2, #1
9000a4fa:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
9000a4fe:	d260      	bcs.n	9000a5c2 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
9000a500:	4293      	cmp	r3, r2
9000a502:	bf28      	it	cs
9000a504:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000a506:	68e2      	ldr	r2, [r4, #12]
9000a508:	429a      	cmp	r2, r3
9000a50a:	d85a      	bhi.n	9000a5c2 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a50c:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
9000a50e:	4b31      	ldr	r3, [pc, #196]	; (9000a5d4 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a510:	4d31      	ldr	r5, [pc, #196]	; (9000a5d8 <BSP_TS_Init+0xf8>)
9000a512:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
9000a514:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000a518:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a51a:	4a30      	ldr	r2, [pc, #192]	; (9000a5dc <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a51c:	4b30      	ldr	r3, [pc, #192]	; (9000a5e0 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000a51e:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
9000a520:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a522:	4a30      	ldr	r2, [pc, #192]	; (9000a5e4 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
9000a524:	4b30      	ldr	r3, [pc, #192]	; (9000a5e8 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000a526:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a528:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000a52a:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
9000a52c:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000a52e:	f7ff f93f 	bl	900097b0 <FT5336_RegisterBusIO>
9000a532:	2800      	cmp	r0, #0
9000a534:	d14b      	bne.n	9000a5ce <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000a536:	a901      	add	r1, sp, #4
9000a538:	4628      	mov	r0, r5
9000a53a:	f7ff f82f 	bl	9000959c <FT5336_ReadID>
9000a53e:	2800      	cmp	r0, #0
9000a540:	d145      	bne.n	9000a5ce <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000a542:	9b01      	ldr	r3, [sp, #4]
9000a544:	2b51      	cmp	r3, #81	; 0x51
9000a546:	d142      	bne.n	9000a5ce <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a548:	4b28      	ldr	r3, [pc, #160]	; (9000a5ec <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a54a:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
9000a54c:	4f28      	ldr	r7, [pc, #160]	; (9000a5f0 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a54e:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 9000a5f8 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000a552:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000a554:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000a558:	681b      	ldr	r3, [r3, #0]
9000a55a:	4798      	blx	r3
9000a55c:	4606      	mov	r6, r0
9000a55e:	2800      	cmp	r0, #0
9000a560:	d135      	bne.n	9000a5ce <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a562:	4d24      	ldr	r5, [pc, #144]	; (9000a5f4 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a564:	a902      	add	r1, sp, #8
9000a566:	6838      	ldr	r0, [r7, #0]
9000a568:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a56c:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a570:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000a572:	e9c5 7200 	strd	r7, r2, [r5]
9000a576:	68a2      	ldr	r2, [r4, #8]
9000a578:	60aa      	str	r2, [r5, #8]
9000a57a:	68e2      	ldr	r2, [r4, #12]
9000a57c:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000a57e:	4798      	blx	r3
9000a580:	2800      	cmp	r0, #0
9000a582:	db18      	blt.n	9000a5b6 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
9000a584:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
9000a588:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a58c:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a58e:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a592:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a594:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a596:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a598:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a59a:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a59e:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a5a2:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a5a4:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a5a6:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a5a8:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000a5aa:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000a5ac:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000a5ae:	4630      	mov	r0, r6
9000a5b0:	b008      	add	sp, #32
9000a5b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
9000a5b6:	f06f 0604 	mvn.w	r6, #4
}
9000a5ba:	4630      	mov	r0, r6
9000a5bc:	b008      	add	sp, #32
9000a5be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
9000a5c2:	f06f 0601 	mvn.w	r6, #1
}
9000a5c6:	4630      	mov	r0, r6
9000a5c8:	b008      	add	sp, #32
9000a5ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000a5ce:	f04f 36ff 	mov.w	r6, #4294967295
9000a5d2:	e7ec      	b.n	9000a5ae <BSP_TS_Init+0xce>
9000a5d4:	90009a55 	.word	0x90009a55
9000a5d8:	24020658 	.word	0x24020658
9000a5dc:	900099c1 	.word	0x900099c1
9000a5e0:	9000a22d 	.word	0x9000a22d
9000a5e4:	9000a1f1 	.word	0x9000a1f1
9000a5e8:	9000a269 	.word	0x9000a269
9000a5ec:	24000040 	.word	0x24000040
9000a5f0:	24020680 	.word	0x24020680
9000a5f4:	24020684 	.word	0x24020684
9000a5f8:	240206c4 	.word	0x240206c4

9000a5fc <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
9000a5fc:	2800      	cmp	r0, #0
9000a5fe:	d157      	bne.n	9000a6b0 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a600:	4b2d      	ldr	r3, [pc, #180]	; (9000a6b8 <BSP_TS_GetState+0xbc>)
9000a602:	4a2e      	ldr	r2, [pc, #184]	; (9000a6bc <BSP_TS_GetState+0xc0>)
9000a604:	681b      	ldr	r3, [r3, #0]
9000a606:	6810      	ldr	r0, [r2, #0]
9000a608:	691b      	ldr	r3, [r3, #16]
{
9000a60a:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a60c:	b085      	sub	sp, #20
9000a60e:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
9000a610:	a901      	add	r1, sp, #4
9000a612:	4798      	blx	r3
9000a614:	2800      	cmp	r0, #0
9000a616:	db41      	blt.n	9000a69c <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
9000a618:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a61a:	4b29      	ldr	r3, [pc, #164]	; (9000a6c0 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
9000a61c:	b93d      	cbnz	r5, 9000a62e <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
9000a61e:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
9000a620:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a622:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
9000a624:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a626:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
9000a62a:	b005      	add	sp, #20
9000a62c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a62e:	6898      	ldr	r0, [r3, #8]
9000a630:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
9000a632:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
9000a636:	d435      	bmi.n	9000a6a4 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
9000a638:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
9000a63a:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a63c:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000a63e:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000a642:	bf1c      	itt	ne
9000a644:	f106 32ff 	addne.w	r2, r6, #4294967295
9000a648:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
9000a64c:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000a650:	6958      	ldr	r0, [r3, #20]
9000a652:	bf18      	it	ne
9000a654:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a656:	681f      	ldr	r7, [r3, #0]
9000a658:	fb07 f202 	mul.w	r2, r7, r2
9000a65c:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a660:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000a662:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a664:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
9000a668:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
9000a66a:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a66c:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000a66e:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a670:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
9000a674:	bf8c      	ite	hi
9000a676:	1b90      	subhi	r0, r2, r6
9000a678:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a67a:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000a67c:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000a67e:	bf8c      	ite	hi
9000a680:	1b4f      	subhi	r7, r1, r5
9000a682:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a684:	42b8      	cmp	r0, r7
9000a686:	bf38      	it	cc
9000a688:	4638      	movcc	r0, r7
9000a68a:	68df      	ldr	r7, [r3, #12]
9000a68c:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000a68e:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000a692:	d20a      	bcs.n	9000a6aa <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
9000a694:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
9000a696:	62d9      	str	r1, [r3, #44]	; 0x2c
}
9000a698:	b005      	add	sp, #20
9000a69a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
9000a69c:	f06f 0004 	mvn.w	r0, #4
}
9000a6a0:	b005      	add	sp, #20
9000a6a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
9000a6a4:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
9000a6a6:	463a      	mov	r2, r7
9000a6a8:	e7c8      	b.n	9000a63c <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
9000a6aa:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000a6ae:	e7bc      	b.n	9000a62a <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
9000a6b0:	f06f 0001 	mvn.w	r0, #1
}
9000a6b4:	4770      	bx	lr
9000a6b6:	bf00      	nop
9000a6b8:	240206c4 	.word	0x240206c4
9000a6bc:	24020680 	.word	0x24020680
9000a6c0:	24020684 	.word	0x24020684

9000a6c4 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
9000a6c4:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a6c6:	4c19      	ldr	r4, [pc, #100]	; (9000a72c <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
9000a6c8:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
9000a6ca:	4b19      	ldr	r3, [pc, #100]	; (9000a730 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a6cc:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000a6d0:	4818      	ldr	r0, [pc, #96]	; (9000a734 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000a6d2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000a6d6:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
9000a6da:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a6dc:	4c16      	ldr	r4, [pc, #88]	; (9000a738 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
9000a6de:	f041 0101 	orr.w	r1, r1, #1
9000a6e2:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
9000a6e4:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
9000a6e6:	6819      	ldr	r1, [r3, #0]
9000a6e8:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a6ea:	4914      	ldr	r1, [pc, #80]	; (9000a73c <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
9000a6ec:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
9000a6ee:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
9000a6f0:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
9000a6f2:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
9000a6f4:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
9000a6f6:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
9000a6f8:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
9000a6fa:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
9000a6fc:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
9000a6fe:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
9000a700:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
9000a702:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
9000a704:	6818      	ldr	r0, [r3, #0]
9000a706:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
9000a70a:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
9000a70c:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9000a70e:	6823      	ldr	r3, [r4, #0]
9000a710:	4019      	ands	r1, r3
9000a712:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000a716:	d203      	bcs.n	9000a720 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
9000a718:	4b09      	ldr	r3, [pc, #36]	; (9000a740 <SystemInit+0x7c>)
9000a71a:	2201      	movs	r2, #1
9000a71c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a720:	4a08      	ldr	r2, [pc, #32]	; (9000a744 <SystemInit+0x80>)
9000a722:	4b02      	ldr	r3, [pc, #8]	; (9000a72c <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
9000a724:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
9000a728:	609a      	str	r2, [r3, #8]
}
9000a72a:	4770      	bx	lr
9000a72c:	e000ed00 	.word	0xe000ed00
9000a730:	58024400 	.word	0x58024400
9000a734:	eaf6ed7f 	.word	0xeaf6ed7f
9000a738:	5c001000 	.word	0x5c001000
9000a73c:	ffff0000 	.word	0xffff0000
9000a740:	51008000 	.word	0x51008000
9000a744:	90000000 	.word	0x90000000

9000a748 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
9000a748:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a74a:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a74c:	4c12      	ldr	r4, [pc, #72]	; (9000a798 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9000a74e:	f000 f843 	bl	9000a7d8 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a752:	f003 fc65 	bl	9000e020 <HAL_RCC_GetSysClockFreq>
9000a756:	4b11      	ldr	r3, [pc, #68]	; (9000a79c <HAL_Init+0x54>)
9000a758:	4911      	ldr	r1, [pc, #68]	; (9000a7a0 <HAL_Init+0x58>)
9000a75a:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a75c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a75e:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a762:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a766:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a768:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a76a:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000a76e:	490d      	ldr	r1, [pc, #52]	; (9000a7a4 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a770:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000a774:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a776:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
9000a77a:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a77c:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000a77e:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9000a780:	f7f8 fe28 	bl	900033d4 <HAL_InitTick>
9000a784:	b110      	cbz	r0, 9000a78c <HAL_Init+0x44>
  {
    return HAL_ERROR;
9000a786:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
9000a788:	4620      	mov	r0, r4
9000a78a:	bd10      	pop	{r4, pc}
9000a78c:	4604      	mov	r4, r0
  HAL_MspInit();
9000a78e:	f7f8 fbdf 	bl	90002f50 <HAL_MspInit>
}
9000a792:	4620      	mov	r0, r4
9000a794:	bd10      	pop	{r4, pc}
9000a796:	bf00      	nop
9000a798:	24000074 	.word	0x24000074
9000a79c:	58024400 	.word	0x58024400
9000a7a0:	9002d258 	.word	0x9002d258
9000a7a4:	24000070 	.word	0x24000070

9000a7a8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
9000a7a8:	4a03      	ldr	r2, [pc, #12]	; (9000a7b8 <HAL_IncTick+0x10>)
9000a7aa:	4b04      	ldr	r3, [pc, #16]	; (9000a7bc <HAL_IncTick+0x14>)
9000a7ac:	6811      	ldr	r1, [r2, #0]
9000a7ae:	781b      	ldrb	r3, [r3, #0]
9000a7b0:	440b      	add	r3, r1
9000a7b2:	6013      	str	r3, [r2, #0]
}
9000a7b4:	4770      	bx	lr
9000a7b6:	bf00      	nop
9000a7b8:	240206c8 	.word	0x240206c8
9000a7bc:	24000078 	.word	0x24000078

9000a7c0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9000a7c0:	4b01      	ldr	r3, [pc, #4]	; (9000a7c8 <HAL_GetTick+0x8>)
9000a7c2:	6818      	ldr	r0, [r3, #0]
}
9000a7c4:	4770      	bx	lr
9000a7c6:	bf00      	nop
9000a7c8:	240206c8 	.word	0x240206c8

9000a7cc <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
9000a7cc:	4b01      	ldr	r3, [pc, #4]	; (9000a7d4 <HAL_GetREVID+0x8>)
9000a7ce:	6818      	ldr	r0, [r3, #0]
}
9000a7d0:	0c00      	lsrs	r0, r0, #16
9000a7d2:	4770      	bx	lr
9000a7d4:	5c001000 	.word	0x5c001000

9000a7d8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a7d8:	4906      	ldr	r1, [pc, #24]	; (9000a7f4 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a7da:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a7de:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
9000a7e0:	4b05      	ldr	r3, [pc, #20]	; (9000a7f8 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
9000a7e2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
9000a7e4:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
9000a7e8:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
9000a7ec:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
9000a7ee:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
9000a7f0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
9000a7f2:	4770      	bx	lr
9000a7f4:	e000ed00 	.word	0xe000ed00
9000a7f8:	05fa0000 	.word	0x05fa0000

9000a7fc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
9000a7fc:	4b1b      	ldr	r3, [pc, #108]	; (9000a86c <HAL_NVIC_SetPriority+0x70>)
9000a7fe:	68db      	ldr	r3, [r3, #12]
9000a800:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000a804:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a806:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a80a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000a80e:	f1be 0f04 	cmp.w	lr, #4
9000a812:	bf28      	it	cs
9000a814:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a818:	f1bc 0f06 	cmp.w	ip, #6
9000a81c:	d91a      	bls.n	9000a854 <HAL_NVIC_SetPriority+0x58>
9000a81e:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
9000a820:	f04f 3cff 	mov.w	ip, #4294967295
9000a824:	fa0c fc03 	lsl.w	ip, ip, r3
9000a828:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a82c:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
9000a830:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000a832:	fa0c fc0e 	lsl.w	ip, ip, lr
9000a836:	ea21 010c 	bic.w	r1, r1, ip
9000a83a:	fa01 f103 	lsl.w	r1, r1, r3
9000a83e:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000a842:	db0a      	blt.n	9000a85a <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a844:	0109      	lsls	r1, r1, #4
9000a846:	4b0a      	ldr	r3, [pc, #40]	; (9000a870 <HAL_NVIC_SetPriority+0x74>)
9000a848:	b2c9      	uxtb	r1, r1
9000a84a:	4403      	add	r3, r0
9000a84c:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
9000a850:	f85d fb04 	ldr.w	pc, [sp], #4
9000a854:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000a856:	4613      	mov	r3, r2
9000a858:	e7e8      	b.n	9000a82c <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000a85a:	f000 000f 	and.w	r0, r0, #15
9000a85e:	0109      	lsls	r1, r1, #4
9000a860:	4b04      	ldr	r3, [pc, #16]	; (9000a874 <HAL_NVIC_SetPriority+0x78>)
9000a862:	b2c9      	uxtb	r1, r1
9000a864:	4403      	add	r3, r0
9000a866:	7619      	strb	r1, [r3, #24]
9000a868:	f85d fb04 	ldr.w	pc, [sp], #4
9000a86c:	e000ed00 	.word	0xe000ed00
9000a870:	e000e100 	.word	0xe000e100
9000a874:	e000ecfc 	.word	0xe000ecfc

9000a878 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a878:	2800      	cmp	r0, #0
9000a87a:	db07      	blt.n	9000a88c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a87c:	2301      	movs	r3, #1
9000a87e:	f000 011f 	and.w	r1, r0, #31
9000a882:	4a03      	ldr	r2, [pc, #12]	; (9000a890 <HAL_NVIC_EnableIRQ+0x18>)
9000a884:	0940      	lsrs	r0, r0, #5
9000a886:	408b      	lsls	r3, r1
9000a888:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000a88c:	4770      	bx	lr
9000a88e:	bf00      	nop
9000a890:	e000e100 	.word	0xe000e100

9000a894 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000a894:	2800      	cmp	r0, #0
9000a896:	db0c      	blt.n	9000a8b2 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000a898:	0943      	lsrs	r3, r0, #5
9000a89a:	2201      	movs	r2, #1
9000a89c:	f000 001f 	and.w	r0, r0, #31
9000a8a0:	4904      	ldr	r1, [pc, #16]	; (9000a8b4 <HAL_NVIC_DisableIRQ+0x20>)
9000a8a2:	3320      	adds	r3, #32
9000a8a4:	4082      	lsls	r2, r0
9000a8a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000a8aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a8ae:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000a8b2:	4770      	bx	lr
9000a8b4:	e000e100 	.word	0xe000e100

9000a8b8 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000a8b8:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a8bc:	4b04      	ldr	r3, [pc, #16]	; (9000a8d0 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000a8be:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000a8c0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a8c2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000a8c6:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
9000a8c8:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
9000a8cc:	4770      	bx	lr
9000a8ce:	bf00      	nop
9000a8d0:	e000ed00 	.word	0xe000ed00

9000a8d4 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
9000a8d4:	4b06      	ldr	r3, [pc, #24]	; (9000a8f0 <HAL_MPU_Enable+0x1c>)
9000a8d6:	f040 0001 	orr.w	r0, r0, #1
9000a8da:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000a8de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000a8e0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000a8e4:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000a8e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000a8ea:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000a8ee:	4770      	bx	lr
9000a8f0:	e000ed00 	.word	0xe000ed00

9000a8f4 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
9000a8f4:	4a17      	ldr	r2, [pc, #92]	; (9000a954 <HAL_MPU_ConfigRegion+0x60>)
9000a8f6:	7843      	ldrb	r3, [r0, #1]
9000a8f8:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
9000a8fc:	7801      	ldrb	r1, [r0, #0]
9000a8fe:	b321      	cbz	r1, 9000a94a <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
9000a900:	6843      	ldr	r3, [r0, #4]
{
9000a902:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000a904:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a908:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a90a:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000a90e:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000a910:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a914:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9000a918:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a91c:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
9000a91e:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a920:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000a924:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a928:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
9000a92c:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000a930:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000a934:	7a01      	ldrb	r1, [r0, #8]
9000a936:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
9000a93a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000a93e:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000a942:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000a946:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
9000a94a:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
9000a94e:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000a952:	4770      	bx	lr
9000a954:	e000ed00 	.word	0xe000ed00

9000a958 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
9000a958:	2800      	cmp	r0, #0
9000a95a:	d036      	beq.n	9000a9ca <HAL_CRC_Init+0x72>
{
9000a95c:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
9000a95e:	7f43      	ldrb	r3, [r0, #29]
9000a960:	4604      	mov	r4, r0
9000a962:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a966:	b363      	cbz	r3, 9000a9c2 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
9000a968:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a96a:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000a96c:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000a96e:	b9f3      	cbnz	r3, 9000a9ae <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
9000a970:	6823      	ldr	r3, [r4, #0]
9000a972:	4a17      	ldr	r2, [pc, #92]	; (9000a9d0 <HAL_CRC_Init+0x78>)
9000a974:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000a976:	689a      	ldr	r2, [r3, #8]
9000a978:	f022 0218 	bic.w	r2, r2, #24
9000a97c:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000a97e:	7962      	ldrb	r2, [r4, #5]
9000a980:	b18a      	cbz	r2, 9000a9a6 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000a982:	6922      	ldr	r2, [r4, #16]
9000a984:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a986:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a988:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a98c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9000a990:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000a992:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000a994:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a996:	689a      	ldr	r2, [r3, #8]
9000a998:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9000a99c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000a99e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000a9a0:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000a9a2:	7761      	strb	r1, [r4, #29]
}
9000a9a4:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a9a6:	f04f 32ff 	mov.w	r2, #4294967295
9000a9aa:	611a      	str	r2, [r3, #16]
9000a9ac:	e7eb      	b.n	9000a986 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000a9ae:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000a9b2:	4620      	mov	r0, r4
9000a9b4:	f000 f80e 	bl	9000a9d4 <HAL_CRCEx_Polynomial_Set>
9000a9b8:	b908      	cbnz	r0, 9000a9be <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000a9ba:	6823      	ldr	r3, [r4, #0]
9000a9bc:	e7df      	b.n	9000a97e <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000a9be:	2001      	movs	r0, #1
}
9000a9c0:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000a9c2:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000a9c4:	f7f8 fade 	bl	90002f84 <HAL_CRC_MspInit>
9000a9c8:	e7ce      	b.n	9000a968 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000a9ca:	2001      	movs	r0, #1
}
9000a9cc:	4770      	bx	lr
9000a9ce:	bf00      	nop
9000a9d0:	04c11db7 	.word	0x04c11db7

9000a9d4 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000a9d4:	07cb      	lsls	r3, r1, #31
9000a9d6:	d51a      	bpl.n	9000aa0e <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a9d8:	231e      	movs	r3, #30
{
9000a9da:	b410      	push	{r4}
9000a9dc:	e001      	b.n	9000a9e2 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000a9de:	3b01      	subs	r3, #1
9000a9e0:	d317      	bcc.n	9000aa12 <HAL_CRCEx_Polynomial_Set+0x3e>
9000a9e2:	fa21 fc03 	lsr.w	ip, r1, r3
9000a9e6:	f01c 0f01 	tst.w	ip, #1
9000a9ea:	d0f8      	beq.n	9000a9de <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
9000a9ec:	2a18      	cmp	r2, #24
9000a9ee:	d811      	bhi.n	9000aa14 <HAL_CRCEx_Polynomial_Set+0x40>
9000a9f0:	e8df f002 	tbb	[pc, r2]
9000a9f4:	10101016 	.word	0x10101016
9000a9f8:	10101010 	.word	0x10101010
9000a9fc:	10101024 	.word	0x10101024
9000aa00:	10101010 	.word	0x10101010
9000aa04:	10101021 	.word	0x10101021
9000aa08:	10101010 	.word	0x10101010
9000aa0c:	14          	.byte	0x14
9000aa0d:	00          	.byte	0x00
    status =  HAL_ERROR;
9000aa0e:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000aa10:	4770      	bx	lr
    switch (PolyLength)
9000aa12:	b12a      	cbz	r2, 9000aa20 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000aa14:	2001      	movs	r0, #1
}
9000aa16:	f85d 4b04 	ldr.w	r4, [sp], #4
9000aa1a:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
9000aa1c:	2b06      	cmp	r3, #6
9000aa1e:	d8f9      	bhi.n	9000aa14 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
9000aa20:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000aa22:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000aa24:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000aa26:	68a3      	ldr	r3, [r4, #8]
9000aa28:	f023 0318 	bic.w	r3, r3, #24
9000aa2c:	4313      	orrs	r3, r2
9000aa2e:	60a3      	str	r3, [r4, #8]
}
9000aa30:	f85d 4b04 	ldr.w	r4, [sp], #4
9000aa34:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000aa36:	2b07      	cmp	r3, #7
9000aa38:	d9f2      	bls.n	9000aa20 <HAL_CRCEx_Polynomial_Set+0x4c>
9000aa3a:	e7eb      	b.n	9000aa14 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
9000aa3c:	2b0f      	cmp	r3, #15
9000aa3e:	d9ef      	bls.n	9000aa20 <HAL_CRCEx_Polynomial_Set+0x4c>
9000aa40:	e7e8      	b.n	9000aa14 <HAL_CRCEx_Polynomial_Set+0x40>
9000aa42:	bf00      	nop

9000aa44 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000aa44:	2800      	cmp	r0, #0
9000aa46:	d035      	beq.n	9000aab4 <HAL_DMA2D_Init+0x70>
{
9000aa48:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
9000aa4a:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
9000aa4e:	4604      	mov	r4, r0
9000aa50:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000aa54:	b34b      	cbz	r3, 9000aaaa <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa56:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000aa58:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa5a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000aa5c:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa60:	69e1      	ldr	r1, [r4, #28]
9000aa62:	681d      	ldr	r5, [r3, #0]
9000aa64:	4814      	ldr	r0, [pc, #80]	; (9000aab8 <HAL_DMA2D_Init+0x74>)
9000aa66:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000aa68:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa6a:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000aa6c:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa6e:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000aa70:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000aa72:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000aa74:	4302      	orrs	r2, r0
9000aa76:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000aa78:	4810      	ldr	r0, [pc, #64]	; (9000aabc <HAL_DMA2D_Init+0x78>)
9000aa7a:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000aa7c:	4910      	ldr	r1, [pc, #64]	; (9000aac0 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000aa7e:	4302      	orrs	r2, r0
9000aa80:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000aa82:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000aa84:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000aa86:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000aa8a:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000aa8c:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000aa8e:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000aa90:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000aa92:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000aa96:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000aa98:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000aa9c:	430a      	orrs	r2, r1
9000aa9e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000aaa0:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000aaa2:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000aaa4:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
9000aaa8:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000aaaa:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000aaae:	f7f8 fa81 	bl	90002fb4 <HAL_DMA2D_MspInit>
9000aab2:	e7d0      	b.n	9000aa56 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000aab4:	2001      	movs	r0, #1
}
9000aab6:	4770      	bx	lr
9000aab8:	fff8ffbf 	.word	0xfff8ffbf
9000aabc:	fffffef8 	.word	0xfffffef8
9000aac0:	ffff0000 	.word	0xffff0000

9000aac4 <HAL_DMA2D_LineEventCallback>:
9000aac4:	4770      	bx	lr
9000aac6:	bf00      	nop

9000aac8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
9000aac8:	4770      	bx	lr
9000aaca:	bf00      	nop

9000aacc <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000aacc:	6803      	ldr	r3, [r0, #0]
{
9000aace:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000aad0:	685d      	ldr	r5, [r3, #4]
{
9000aad2:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000aad4:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000aad6:	07ea      	lsls	r2, r5, #31
9000aad8:	d501      	bpl.n	9000aade <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
9000aada:	05f1      	lsls	r1, r6, #23
9000aadc:	d456      	bmi.n	9000ab8c <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000aade:	06aa      	lsls	r2, r5, #26
9000aae0:	d501      	bpl.n	9000aae6 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
9000aae2:	04b3      	lsls	r3, r6, #18
9000aae4:	d43b      	bmi.n	9000ab5e <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000aae6:	0728      	lsls	r0, r5, #28
9000aae8:	d501      	bpl.n	9000aaee <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
9000aaea:	0531      	lsls	r1, r6, #20
9000aaec:	d421      	bmi.n	9000ab32 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000aaee:	076a      	lsls	r2, r5, #29
9000aaf0:	d501      	bpl.n	9000aaf6 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
9000aaf2:	0573      	lsls	r3, r6, #21
9000aaf4:	d472      	bmi.n	9000abdc <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000aaf6:	07a8      	lsls	r0, r5, #30
9000aaf8:	d501      	bpl.n	9000aafe <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
9000aafa:	05b1      	lsls	r1, r6, #22
9000aafc:	d404      	bmi.n	9000ab08 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000aafe:	06ea      	lsls	r2, r5, #27
9000ab00:	d501      	bpl.n	9000ab06 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000ab02:	04f3      	lsls	r3, r6, #19
9000ab04:	d457      	bmi.n	9000abb6 <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000ab06:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
9000ab08:	6823      	ldr	r3, [r4, #0]
9000ab0a:	681a      	ldr	r2, [r3, #0]
9000ab0c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000ab10:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000ab12:	2202      	movs	r2, #2
9000ab14:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ab16:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000ab18:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000ab1a:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000ab1c:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000ab1e:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000ab22:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000ab26:	6a23      	ldr	r3, [r4, #32]
9000ab28:	2b00      	cmp	r3, #0
9000ab2a:	d0e8      	beq.n	9000aafe <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
9000ab2c:	4620      	mov	r0, r4
9000ab2e:	4798      	blx	r3
9000ab30:	e7e5      	b.n	9000aafe <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000ab32:	6823      	ldr	r3, [r4, #0]
9000ab34:	681a      	ldr	r2, [r3, #0]
9000ab36:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
9000ab3a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
9000ab3c:	2208      	movs	r2, #8
9000ab3e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ab40:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000ab42:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000ab44:	4313      	orrs	r3, r2
9000ab46:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ab48:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000ab4c:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000ab4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000ab50:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000ab54:	2b00      	cmp	r3, #0
9000ab56:	d0ca      	beq.n	9000aaee <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
9000ab58:	4620      	mov	r0, r4
9000ab5a:	4798      	blx	r3
9000ab5c:	e7c7      	b.n	9000aaee <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
9000ab5e:	6823      	ldr	r3, [r4, #0]
9000ab60:	681a      	ldr	r2, [r3, #0]
9000ab62:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000ab66:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
9000ab68:	2220      	movs	r2, #32
9000ab6a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ab6c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000ab6e:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000ab70:	f043 0302 	orr.w	r3, r3, #2
9000ab74:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000ab76:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000ab7a:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
9000ab7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
9000ab7e:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000ab82:	2b00      	cmp	r3, #0
9000ab84:	d0af      	beq.n	9000aae6 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000ab86:	4620      	mov	r0, r4
9000ab88:	4798      	blx	r3
9000ab8a:	e7ac      	b.n	9000aae6 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
9000ab8c:	681a      	ldr	r2, [r3, #0]
9000ab8e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000ab92:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000ab94:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000ab96:	f042 0201 	orr.w	r2, r2, #1
9000ab9a:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
9000ab9c:	2201      	movs	r2, #1
9000ab9e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000aba0:	2304      	movs	r3, #4
9000aba2:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000aba6:	2300      	movs	r3, #0
9000aba8:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000abac:	6a43      	ldr	r3, [r0, #36]	; 0x24
9000abae:	2b00      	cmp	r3, #0
9000abb0:	d095      	beq.n	9000aade <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000abb2:	4798      	blx	r3
9000abb4:	e793      	b.n	9000aade <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000abb6:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000abb8:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000abba:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
9000abbc:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000abbe:	681a      	ldr	r2, [r3, #0]
9000abc0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9000abc4:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000abc6:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000abc8:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000abca:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
9000abcc:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000abd0:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000abd2:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000abd6:	f7ff ff77 	bl	9000aac8 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000abda:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000abdc:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000abde:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000abe0:	681a      	ldr	r2, [r3, #0]
9000abe2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000abe6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000abe8:	2204      	movs	r2, #4
9000abea:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000abec:	f7ff ff6a 	bl	9000aac4 <HAL_DMA2D_LineEventCallback>
9000abf0:	e781      	b.n	9000aaf6 <HAL_DMA2D_IRQHandler+0x2a>
9000abf2:	bf00      	nop

9000abf4 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000abf4:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000abf8:	2a01      	cmp	r2, #1
9000abfa:	d065      	beq.n	9000acc8 <HAL_DMA2D_ConfigLayer+0xd4>
9000abfc:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000abfe:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000ac02:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ac04:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000ac08:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000ac0a:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000ac0c:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
9000ac10:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ac14:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ac16:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000ac18:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000ac1a:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ac1c:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ac20:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000ac24:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ac26:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000ac2a:	ea42 0204 	orr.w	r2, r2, r4
9000ac2e:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ac32:	d922      	bls.n	9000ac7a <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000ac34:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000ac36:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000ac3a:	b981      	cbnz	r1, 9000ac5e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ac3c:	6818      	ldr	r0, [r3, #0]
9000ac3e:	4923      	ldr	r1, [pc, #140]	; (9000accc <HAL_DMA2D_ConfigLayer+0xd8>)
9000ac40:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ac42:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ac44:	4029      	ands	r1, r5
9000ac46:	4311      	orrs	r1, r2
9000ac48:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ac4a:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
9000ac4c:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000ac4e:	2101      	movs	r1, #1

  return HAL_OK;
9000ac50:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000ac52:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000ac56:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000ac5a:	bc70      	pop	{r4, r5, r6}
9000ac5c:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000ac5e:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ac60:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000ac62:	d129      	bne.n	9000acb8 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ac64:	69e5      	ldr	r5, [r4, #28]
9000ac66:	491a      	ldr	r1, [pc, #104]	; (9000acd0 <HAL_DMA2D_ConfigLayer+0xdc>)
9000ac68:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000ac6a:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ac6c:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ac6e:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000ac72:	4311      	orrs	r1, r2
9000ac74:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000ac76:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000ac78:	e7e8      	b.n	9000ac4c <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000ac7a:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000ac7c:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000ac80:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000ac82:	b961      	cbnz	r1, 9000ac9e <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ac84:	6819      	ldr	r1, [r3, #0]
9000ac86:	4a11      	ldr	r2, [pc, #68]	; (9000accc <HAL_DMA2D_ConfigLayer+0xd8>)
9000ac88:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ac8a:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ac8c:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ac8e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ac90:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000ac94:	4322      	orrs	r2, r4
9000ac96:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000ac98:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000ac9a:	6288      	str	r0, [r1, #40]	; 0x28
9000ac9c:	e7d6      	b.n	9000ac4c <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000ac9e:	6819      	ldr	r1, [r3, #0]
9000aca0:	4a0a      	ldr	r2, [pc, #40]	; (9000accc <HAL_DMA2D_ConfigLayer+0xd8>)
9000aca2:	69cd      	ldr	r5, [r1, #28]
9000aca4:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000aca6:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000aca8:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000acaa:	6b44      	ldr	r4, [r0, #52]	; 0x34
9000acac:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000acb0:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000acb2:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000acb4:	620c      	str	r4, [r1, #32]
9000acb6:	e7c9      	b.n	9000ac4c <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000acb8:	69e5      	ldr	r5, [r4, #28]
9000acba:	4904      	ldr	r1, [pc, #16]	; (9000accc <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000acbc:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000acbe:	4029      	ands	r1, r5
9000acc0:	4311      	orrs	r1, r2
9000acc2:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000acc4:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000acc6:	e7c1      	b.n	9000ac4c <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
9000acc8:	2002      	movs	r0, #2
}
9000acca:	4770      	bx	lr
9000accc:	00ccfff0 	.word	0x00ccfff0
9000acd0:	00c0fff0 	.word	0x00c0fff0

9000acd4 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
9000acd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000acd8:	680c      	ldr	r4, [r1, #0]
{
9000acda:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000acdc:	2c00      	cmp	r4, #0
9000acde:	f000 80a7 	beq.w	9000ae30 <HAL_GPIO_Init+0x15c>
9000ace2:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ace6:	4f8a      	ldr	r7, [pc, #552]	; (9000af10 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000ace8:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000acea:	2201      	movs	r2, #1
9000acec:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
9000acee:	ea12 0e04 	ands.w	lr, r2, r4
9000acf2:	f000 8096 	beq.w	9000ae22 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000acf6:	684d      	ldr	r5, [r1, #4]
9000acf8:	f005 0903 	and.w	r9, r5, #3
9000acfc:	f109 36ff 	add.w	r6, r9, #4294967295
9000ad00:	2e01      	cmp	r6, #1
9000ad02:	f240 8098 	bls.w	9000ae36 <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000ad06:	f1b9 0f03 	cmp.w	r9, #3
9000ad0a:	f040 80d2 	bne.w	9000aeb2 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ad0e:	fa09 f20c 	lsl.w	r2, r9, ip
9000ad12:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000ad16:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ad18:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
9000ad1c:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000ad20:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000ad24:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000ad26:	d07c      	beq.n	9000ae22 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ad28:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
9000ad2c:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ad30:	f003 0903 	and.w	r9, r3, #3
9000ad34:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ad36:	f042 0202 	orr.w	r2, r2, #2
9000ad3a:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ad3e:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ad42:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000ad46:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000ad4a:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ad4e:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000ad52:	f002 0202 	and.w	r2, r2, #2
9000ad56:	9201      	str	r2, [sp, #4]
9000ad58:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000ad5a:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000ad5e:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000ad62:	4e6c      	ldr	r6, [pc, #432]	; (9000af14 <HAL_GPIO_Init+0x240>)
9000ad64:	42b0      	cmp	r0, r6
9000ad66:	d028      	beq.n	9000adba <HAL_GPIO_Init+0xe6>
9000ad68:	f506 6680 	add.w	r6, r6, #1024	; 0x400
9000ad6c:	42b0      	cmp	r0, r6
9000ad6e:	f000 80ac 	beq.w	9000aeca <HAL_GPIO_Init+0x1f6>
9000ad72:	4e69      	ldr	r6, [pc, #420]	; (9000af18 <HAL_GPIO_Init+0x244>)
9000ad74:	42b0      	cmp	r0, r6
9000ad76:	f000 80ad 	beq.w	9000aed4 <HAL_GPIO_Init+0x200>
9000ad7a:	4e68      	ldr	r6, [pc, #416]	; (9000af1c <HAL_GPIO_Init+0x248>)
9000ad7c:	42b0      	cmp	r0, r6
9000ad7e:	f000 809f 	beq.w	9000aec0 <HAL_GPIO_Init+0x1ec>
9000ad82:	4e67      	ldr	r6, [pc, #412]	; (9000af20 <HAL_GPIO_Init+0x24c>)
9000ad84:	42b0      	cmp	r0, r6
9000ad86:	f000 80af 	beq.w	9000aee8 <HAL_GPIO_Init+0x214>
9000ad8a:	4e66      	ldr	r6, [pc, #408]	; (9000af24 <HAL_GPIO_Init+0x250>)
9000ad8c:	42b0      	cmp	r0, r6
9000ad8e:	f000 80b0 	beq.w	9000aef2 <HAL_GPIO_Init+0x21e>
9000ad92:	4e65      	ldr	r6, [pc, #404]	; (9000af28 <HAL_GPIO_Init+0x254>)
9000ad94:	42b0      	cmp	r0, r6
9000ad96:	f000 80a2 	beq.w	9000aede <HAL_GPIO_Init+0x20a>
9000ad9a:	4e64      	ldr	r6, [pc, #400]	; (9000af2c <HAL_GPIO_Init+0x258>)
9000ad9c:	42b0      	cmp	r0, r6
9000ad9e:	f000 80ad 	beq.w	9000aefc <HAL_GPIO_Init+0x228>
9000ada2:	4e63      	ldr	r6, [pc, #396]	; (9000af30 <HAL_GPIO_Init+0x25c>)
9000ada4:	42b0      	cmp	r0, r6
9000ada6:	f000 80ae 	beq.w	9000af06 <HAL_GPIO_Init+0x232>
9000adaa:	4e62      	ldr	r6, [pc, #392]	; (9000af34 <HAL_GPIO_Init+0x260>)
9000adac:	42b0      	cmp	r0, r6
9000adae:	bf0c      	ite	eq
9000adb0:	2609      	moveq	r6, #9
9000adb2:	260a      	movne	r6, #10
9000adb4:	fa06 f609 	lsl.w	r6, r6, r9
9000adb8:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
9000adba:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000adbe:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000adc2:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
9000adc6:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
9000adca:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
9000adcc:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000add0:	bf0c      	ite	eq
9000add2:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000add4:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000add8:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
9000addc:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
9000ade0:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
9000ade4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000ade8:	bf0c      	ite	eq
9000adea:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000adec:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000adf0:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
9000adf4:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000adf8:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
9000adfc:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000ae00:	bf0c      	ite	eq
9000ae02:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000ae04:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000ae08:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000ae0a:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
9000ae0e:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000ae12:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000ae16:	bf54      	ite	pl
9000ae18:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000ae1a:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
9000ae1e:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000ae22:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000ae24:	f10c 0c02 	add.w	ip, ip, #2
9000ae28:	fa34 f203 	lsrs.w	r2, r4, r3
9000ae2c:	f47f af5d 	bne.w	9000acea <HAL_GPIO_Init+0x16>
  }
}
9000ae30:	b003      	add	sp, #12
9000ae32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ae36:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000ae3a:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ae3c:	fa08 f80c 	lsl.w	r8, r8, ip
9000ae40:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000ae44:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000ae46:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000ae4a:	fa06 f60c 	lsl.w	r6, r6, ip
9000ae4e:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000ae52:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ae54:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000ae58:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ae5c:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000ae5e:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000ae62:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000ae64:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000ae66:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000ae68:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000ae6c:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000ae6e:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000ae72:	fa06 f60c 	lsl.w	r6, r6, ip
9000ae76:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
9000ae7a:	fa09 f20c 	lsl.w	r2, r9, ip
9000ae7e:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000ae80:	f47f af49 	bne.w	9000ad16 <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
9000ae84:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000ae88:	f003 0b07 	and.w	fp, r3, #7
9000ae8c:	260f      	movs	r6, #15
9000ae8e:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000ae92:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000ae96:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000ae9a:	fa06 f60b 	lsl.w	r6, r6, fp
9000ae9e:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000aea2:	690e      	ldr	r6, [r1, #16]
9000aea4:	fa06 f60b 	lsl.w	r6, r6, fp
9000aea8:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
9000aeac:	f8c9 6020 	str.w	r6, [r9, #32]
9000aeb0:	e731      	b.n	9000ad16 <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000aeb2:	f04f 0803 	mov.w	r8, #3
9000aeb6:	fa08 f80c 	lsl.w	r8, r8, ip
9000aeba:	ea6f 0808 	mvn.w	r8, r8
9000aebe:	e7d2      	b.n	9000ae66 <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000aec0:	2603      	movs	r6, #3
9000aec2:	fa06 f609 	lsl.w	r6, r6, r9
9000aec6:	4332      	orrs	r2, r6
9000aec8:	e777      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aeca:	2601      	movs	r6, #1
9000aecc:	fa06 f609 	lsl.w	r6, r6, r9
9000aed0:	4332      	orrs	r2, r6
9000aed2:	e772      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aed4:	2602      	movs	r6, #2
9000aed6:	fa06 f609 	lsl.w	r6, r6, r9
9000aeda:	4332      	orrs	r2, r6
9000aedc:	e76d      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aede:	2606      	movs	r6, #6
9000aee0:	fa06 f609 	lsl.w	r6, r6, r9
9000aee4:	4332      	orrs	r2, r6
9000aee6:	e768      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aee8:	2604      	movs	r6, #4
9000aeea:	fa06 f609 	lsl.w	r6, r6, r9
9000aeee:	4332      	orrs	r2, r6
9000aef0:	e763      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aef2:	2605      	movs	r6, #5
9000aef4:	fa06 f609 	lsl.w	r6, r6, r9
9000aef8:	4332      	orrs	r2, r6
9000aefa:	e75e      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000aefc:	2607      	movs	r6, #7
9000aefe:	fa06 f609 	lsl.w	r6, r6, r9
9000af02:	4332      	orrs	r2, r6
9000af04:	e759      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000af06:	2608      	movs	r6, #8
9000af08:	fa06 f609 	lsl.w	r6, r6, r9
9000af0c:	4332      	orrs	r2, r6
9000af0e:	e754      	b.n	9000adba <HAL_GPIO_Init+0xe6>
9000af10:	58024400 	.word	0x58024400
9000af14:	58020000 	.word	0x58020000
9000af18:	58020800 	.word	0x58020800
9000af1c:	58020c00 	.word	0x58020c00
9000af20:	58021000 	.word	0x58021000
9000af24:	58021400 	.word	0x58021400
9000af28:	58021800 	.word	0x58021800
9000af2c:	58021c00 	.word	0x58021c00
9000af30:	58022000 	.word	0x58022000
9000af34:	58022400 	.word	0x58022400

9000af38 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000af38:	2900      	cmp	r1, #0
9000af3a:	f000 80a4 	beq.w	9000b086 <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000af3e:	2300      	movs	r3, #0
{
9000af40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000af44:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000b0b0 <HAL_GPIO_DeInit+0x178>
9000af48:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000af4a:	f8df 8168 	ldr.w	r8, [pc, #360]	; 9000b0b4 <HAL_GPIO_DeInit+0x17c>
9000af4e:	f8df a168 	ldr.w	sl, [pc, #360]	; 9000b0b8 <HAL_GPIO_DeInit+0x180>
9000af52:	f8df b168 	ldr.w	fp, [pc, #360]	; 9000b0bc <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000af56:	f04f 0e01 	mov.w	lr, #1
9000af5a:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000af5e:	ea12 0c01 	ands.w	ip, r2, r1
9000af62:	d06b      	beq.n	9000b03c <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000af64:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000af68:	f003 0403 	and.w	r4, r3, #3
9000af6c:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000af6e:	4540      	cmp	r0, r8
9000af70:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000af72:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000af76:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000af78:	fa06 f604 	lsl.w	r6, r6, r4
9000af7c:	ea07 0706 	and.w	r7, r7, r6
9000af80:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000af82:	d01f      	beq.n	9000afc4 <HAL_GPIO_DeInit+0x8c>
9000af84:	4550      	cmp	r0, sl
9000af86:	d01a      	beq.n	9000afbe <HAL_GPIO_DeInit+0x86>
9000af88:	4558      	cmp	r0, fp
9000af8a:	d05e      	beq.n	9000b04a <HAL_GPIO_DeInit+0x112>
9000af8c:	4f43      	ldr	r7, [pc, #268]	; (9000b09c <HAL_GPIO_DeInit+0x164>)
9000af8e:	42b8      	cmp	r0, r7
9000af90:	d065      	beq.n	9000b05e <HAL_GPIO_DeInit+0x126>
9000af92:	4f43      	ldr	r7, [pc, #268]	; (9000b0a0 <HAL_GPIO_DeInit+0x168>)
9000af94:	42b8      	cmp	r0, r7
9000af96:	d067      	beq.n	9000b068 <HAL_GPIO_DeInit+0x130>
9000af98:	4f42      	ldr	r7, [pc, #264]	; (9000b0a4 <HAL_GPIO_DeInit+0x16c>)
9000af9a:	42b8      	cmp	r0, r7
9000af9c:	d05a      	beq.n	9000b054 <HAL_GPIO_DeInit+0x11c>
9000af9e:	4f42      	ldr	r7, [pc, #264]	; (9000b0a8 <HAL_GPIO_DeInit+0x170>)
9000afa0:	42b8      	cmp	r0, r7
9000afa2:	d06b      	beq.n	9000b07c <HAL_GPIO_DeInit+0x144>
9000afa4:	4f41      	ldr	r7, [pc, #260]	; (9000b0ac <HAL_GPIO_DeInit+0x174>)
9000afa6:	42b8      	cmp	r0, r7
9000afa8:	d06e      	beq.n	9000b088 <HAL_GPIO_DeInit+0x150>
9000afaa:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000b0c0 <HAL_GPIO_DeInit+0x188>
9000afae:	4570      	cmp	r0, lr
9000afb0:	d05f      	beq.n	9000b072 <HAL_GPIO_DeInit+0x13a>
9000afb2:	f8df e110 	ldr.w	lr, [pc, #272]	; 9000b0c4 <HAL_GPIO_DeInit+0x18c>
9000afb6:	4570      	cmp	r0, lr
9000afb8:	d06b      	beq.n	9000b092 <HAL_GPIO_DeInit+0x15a>
9000afba:	f04f 0e0a 	mov.w	lr, #10
9000afbe:	fa0e f404 	lsl.w	r4, lr, r4
9000afc2:	e000      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000afc4:	2400      	movs	r4, #0
9000afc6:	9f01      	ldr	r7, [sp, #4]
9000afc8:	42a7      	cmp	r7, r4
9000afca:	d119      	bne.n	9000b000 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000afcc:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000afd0:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
9000afd4:	ea27 070c 	bic.w	r7, r7, ip
9000afd8:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
9000afdc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
9000afe0:	ea27 070c 	bic.w	r7, r7, ip
9000afe4:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000afe8:	6867      	ldr	r7, [r4, #4]
9000afea:	ea27 070c 	bic.w	r7, r7, ip
9000afee:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
9000aff0:	6827      	ldr	r7, [r4, #0]
9000aff2:	ea27 070c 	bic.w	r7, r7, ip
9000aff6:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000aff8:	68ac      	ldr	r4, [r5, #8]
9000affa:	ea24 0406 	bic.w	r4, r4, r6
9000affe:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b000:	005d      	lsls	r5, r3, #1
9000b002:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b004:	f003 0607 	and.w	r6, r3, #7
9000b008:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b00a:	40ac      	lsls	r4, r5
9000b00c:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b00e:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b010:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b012:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000b014:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000b016:	08dd      	lsrs	r5, r3, #3
9000b018:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9000b01c:	6a2e      	ldr	r6, [r5, #32]
9000b01e:	ea26 0607 	bic.w	r6, r6, r7
9000b022:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000b024:	68c5      	ldr	r5, [r0, #12]
9000b026:	ea25 0504 	bic.w	r5, r5, r4
9000b02a:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000b02c:	6845      	ldr	r5, [r0, #4]
9000b02e:	ea25 0202 	bic.w	r2, r5, r2
9000b032:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000b034:	6882      	ldr	r2, [r0, #8]
9000b036:	ea22 0204 	bic.w	r2, r2, r4
9000b03a:	6082      	str	r2, [r0, #8]
    }

    position++;
9000b03c:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000b03e:	fa31 f203 	lsrs.w	r2, r1, r3
9000b042:	d188      	bne.n	9000af56 <HAL_GPIO_DeInit+0x1e>
  }
}
9000b044:	b003      	add	sp, #12
9000b046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000b04a:	f04f 0e02 	mov.w	lr, #2
9000b04e:	fa0e f404 	lsl.w	r4, lr, r4
9000b052:	e7b8      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b054:	f04f 0e05 	mov.w	lr, #5
9000b058:	fa0e f404 	lsl.w	r4, lr, r4
9000b05c:	e7b3      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b05e:	f04f 0e03 	mov.w	lr, #3
9000b062:	fa0e f404 	lsl.w	r4, lr, r4
9000b066:	e7ae      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b068:	f04f 0e04 	mov.w	lr, #4
9000b06c:	fa0e f404 	lsl.w	r4, lr, r4
9000b070:	e7a9      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b072:	f04f 0e08 	mov.w	lr, #8
9000b076:	fa0e f404 	lsl.w	r4, lr, r4
9000b07a:	e7a4      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b07c:	f04f 0e06 	mov.w	lr, #6
9000b080:	fa0e f404 	lsl.w	r4, lr, r4
9000b084:	e79f      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b086:	4770      	bx	lr
9000b088:	f04f 0e07 	mov.w	lr, #7
9000b08c:	fa0e f404 	lsl.w	r4, lr, r4
9000b090:	e799      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b092:	f04f 0e09 	mov.w	lr, #9
9000b096:	fa0e f404 	lsl.w	r4, lr, r4
9000b09a:	e794      	b.n	9000afc6 <HAL_GPIO_DeInit+0x8e>
9000b09c:	58020c00 	.word	0x58020c00
9000b0a0:	58021000 	.word	0x58021000
9000b0a4:	58021400 	.word	0x58021400
9000b0a8:	58021800 	.word	0x58021800
9000b0ac:	58021c00 	.word	0x58021c00
9000b0b0:	58000400 	.word	0x58000400
9000b0b4:	58020000 	.word	0x58020000
9000b0b8:	58020400 	.word	0x58020400
9000b0bc:	58020800 	.word	0x58020800
9000b0c0:	58022000 	.word	0x58022000
9000b0c4:	58022400 	.word	0x58022400

9000b0c8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000b0c8:	6903      	ldr	r3, [r0, #16]
9000b0ca:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000b0cc:	bf14      	ite	ne
9000b0ce:	2001      	movne	r0, #1
9000b0d0:	2000      	moveq	r0, #0
9000b0d2:	4770      	bx	lr

9000b0d4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
9000b0d4:	b902      	cbnz	r2, 9000b0d8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000b0d6:	0409      	lsls	r1, r1, #16
9000b0d8:	6181      	str	r1, [r0, #24]
  }
}
9000b0da:	4770      	bx	lr

9000b0dc <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000b0dc:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000b0de:	ea01 0203 	and.w	r2, r1, r3
9000b0e2:	ea21 0103 	bic.w	r1, r1, r3
9000b0e6:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000b0ea:	6181      	str	r1, [r0, #24]
}
9000b0ec:	4770      	bx	lr
9000b0ee:	bf00      	nop

9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
9000b0f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b0f4:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b0f6:	f04f 0820 	mov.w	r8, #32
{
9000b0fa:	4605      	mov	r5, r0
9000b0fc:	460e      	mov	r6, r1
9000b0fe:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9000b100:	6998      	ldr	r0, [r3, #24]
9000b102:	f010 0902 	ands.w	r9, r0, #2
9000b106:	f040 809e 	bne.w	9000b246 <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000b10a:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b10c:	f014 0410 	ands.w	r4, r4, #16
9000b110:	d068      	beq.n	9000b1e4 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b112:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000b114:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000b116:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b118:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b11a:	1c71      	adds	r1, r6, #1
9000b11c:	699a      	ldr	r2, [r3, #24]
9000b11e:	d163      	bne.n	9000b1e8 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
9000b120:	0690      	lsls	r0, r2, #26
9000b122:	f100 8093 	bmi.w	9000b24c <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b126:	f1ba 0f00 	cmp.w	sl, #0
9000b12a:	d104      	bne.n	9000b136 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b12c:	699c      	ldr	r4, [r3, #24]
9000b12e:	06a1      	lsls	r1, r4, #26
9000b130:	d5fc      	bpl.n	9000b12c <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b132:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000b136:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000b13a:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
9000b13c:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b13e:	05d0      	lsls	r0, r2, #23
9000b140:	d530      	bpl.n	9000b1a4 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b142:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b146:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b148:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b14c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b14e:	d504      	bpl.n	9000b15a <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b150:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b154:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b158:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b15a:	0591      	lsls	r1, r2, #22
9000b15c:	d504      	bpl.n	9000b168 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b15e:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b162:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b166:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b168:	699a      	ldr	r2, [r3, #24]
9000b16a:	0790      	lsls	r0, r2, #30
9000b16c:	d501      	bpl.n	9000b172 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000b16e:	2200      	movs	r2, #0
9000b170:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b172:	699a      	ldr	r2, [r3, #24]
9000b174:	07d1      	lsls	r1, r2, #31
9000b176:	d403      	bmi.n	9000b180 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b178:	699a      	ldr	r2, [r3, #24]
9000b17a:	f042 0201 	orr.w	r2, r2, #1
9000b17e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000b180:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b182:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b184:	4834      	ldr	r0, [pc, #208]	; (9000b258 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b186:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
9000b188:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b18a:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b18c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b18e:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000b190:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b194:	4323      	orrs	r3, r4
9000b196:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b198:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b19c:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000b1a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b1a4:	0550      	lsls	r0, r2, #21
9000b1a6:	d4d3      	bmi.n	9000b150 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b1a8:	0592      	lsls	r2, r2, #22
9000b1aa:	d4d8      	bmi.n	9000b15e <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
9000b1ac:	2900      	cmp	r1, #0
9000b1ae:	d1db      	bne.n	9000b168 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000b1b0:	1c72      	adds	r2, r6, #1
9000b1b2:	d0a5      	beq.n	9000b100 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b1b4:	f7ff fb04 	bl	9000a7c0 <HAL_GetTick>
9000b1b8:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b1ba:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b1bc:	42b0      	cmp	r0, r6
9000b1be:	d801      	bhi.n	9000b1c4 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000b1c0:	2e00      	cmp	r6, #0
9000b1c2:	d19d      	bne.n	9000b100 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
9000b1c4:	699a      	ldr	r2, [r3, #24]
9000b1c6:	f012 0202 	ands.w	r2, r2, #2
9000b1ca:	d199      	bne.n	9000b100 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1cc:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1ce:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000b1d0:	2001      	movs	r0, #1
9000b1d2:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b1d6:	430b      	orrs	r3, r1
9000b1d8:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b1da:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b1de:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
9000b1e2:	e7dd      	b.n	9000b1a0 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
9000b1e4:	4621      	mov	r1, r4
9000b1e6:	e7a9      	b.n	9000b13c <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b1e8:	0692      	lsls	r2, r2, #26
9000b1ea:	d42f      	bmi.n	9000b24c <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000b1ec:	f1ba 0f00 	cmp.w	sl, #0
9000b1f0:	d1a1      	bne.n	9000b136 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b1f2:	f7ff fae5 	bl	9000a7c0 <HAL_GetTick>
9000b1f6:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b1f8:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b1fa:	4286      	cmp	r6, r0
9000b1fc:	d301      	bcc.n	9000b202 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
9000b1fe:	2e00      	cmp	r6, #0
9000b200:	d18b      	bne.n	9000b11a <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b202:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b204:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b208:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b20a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b20c:	0409      	lsls	r1, r1, #16
9000b20e:	d50b      	bpl.n	9000b228 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
9000b210:	0441      	lsls	r1, r0, #17
9000b212:	d409      	bmi.n	9000b228 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
9000b214:	2a20      	cmp	r2, #32
9000b216:	d007      	beq.n	9000b228 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b218:	685a      	ldr	r2, [r3, #4]
9000b21a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b21e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b220:	f7ff face 	bl	9000a7c0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b224:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000b226:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b228:	699a      	ldr	r2, [r3, #24]
9000b22a:	0690      	lsls	r0, r2, #26
9000b22c:	f53f af75 	bmi.w	9000b11a <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b230:	f7ff fac6 	bl	9000a7c0 <HAL_GetTick>
9000b234:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b236:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b238:	2819      	cmp	r0, #25
9000b23a:	d9f5      	bls.n	9000b228 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b23c:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000b240:	f04f 0a01 	mov.w	sl, #1
9000b244:	e769      	b.n	9000b11a <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000b246:	2000      	movs	r0, #0
}
9000b248:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
9000b24c:	f1ba 0f00 	cmp.w	sl, #0
9000b250:	f43f af6f 	beq.w	9000b132 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
9000b254:	e76f      	b.n	9000b136 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000b256:	bf00      	nop
9000b258:	fe00e800 	.word	0xfe00e800

9000b25c <I2C_WaitOnSTOPFlagUntilTimeout>:
{
9000b25c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b260:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b262:	6802      	ldr	r2, [r0, #0]
{
9000b264:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b266:	6991      	ldr	r1, [r2, #24]
9000b268:	068c      	lsls	r4, r1, #26
9000b26a:	d469      	bmi.n	9000b340 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
9000b26c:	4606      	mov	r6, r0
9000b26e:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b270:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
9000b274:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
9000b276:	f014 0410 	ands.w	r4, r4, #16
9000b27a:	d064      	beq.n	9000b346 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
9000b27c:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b27e:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000b280:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000b282:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
9000b286:	46aa      	mov	sl, r5
9000b288:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b28a:	699a      	ldr	r2, [r3, #24]
9000b28c:	d15d      	bne.n	9000b34a <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000b28e:	0690      	lsls	r0, r2, #26
9000b290:	f100 8083 	bmi.w	9000b39a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b294:	f1ba 0f00 	cmp.w	sl, #0
9000b298:	d104      	bne.n	9000b2a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
9000b29a:	699c      	ldr	r4, [r3, #24]
9000b29c:	06a1      	lsls	r1, r4, #26
9000b29e:	d5fc      	bpl.n	9000b29a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b2a0:	2220      	movs	r2, #32
9000b2a2:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
9000b2a4:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
9000b2a8:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
9000b2aa:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000b2ac:	05d0      	lsls	r0, r2, #23
9000b2ae:	d530      	bpl.n	9000b312 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b2b0:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b2b4:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000b2b6:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000b2ba:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b2bc:	d504      	bpl.n	9000b2c8 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b2be:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000b2c2:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000b2c6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b2c8:	0591      	lsls	r1, r2, #22
9000b2ca:	d504      	bpl.n	9000b2d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b2cc:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000b2d0:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000b2d4:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000b2d6:	699a      	ldr	r2, [r3, #24]
9000b2d8:	0795      	lsls	r5, r2, #30
9000b2da:	d501      	bpl.n	9000b2e0 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
9000b2dc:	2200      	movs	r2, #0
9000b2de:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000b2e0:	699a      	ldr	r2, [r3, #24]
9000b2e2:	07d0      	lsls	r0, r2, #31
9000b2e4:	d403      	bmi.n	9000b2ee <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000b2e6:	699a      	ldr	r2, [r3, #24]
9000b2e8:	f042 0201 	orr.w	r2, r2, #1
9000b2ec:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
9000b2ee:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b2f0:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000b2f2:	4837      	ldr	r0, [pc, #220]	; (9000b3d0 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
9000b2f4:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000b2f6:	4002      	ands	r2, r0
      return HAL_ERROR;
9000b2f8:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000b2fa:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000b2fc:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
9000b2fe:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000b302:	4323      	orrs	r3, r4
9000b304:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000b306:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000b30a:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b30e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000b312:	0550      	lsls	r0, r2, #21
9000b314:	d4d3      	bmi.n	9000b2be <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000b316:	0592      	lsls	r2, r2, #22
9000b318:	d4d8      	bmi.n	9000b2cc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000b31a:	2900      	cmp	r1, #0
9000b31c:	d1db      	bne.n	9000b2d6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b31e:	f7ff fa4f 	bl	9000a7c0 <HAL_GetTick>
9000b322:	eba0 0008 	sub.w	r0, r0, r8
9000b326:	42b8      	cmp	r0, r7
9000b328:	d801      	bhi.n	9000b32e <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000b32a:	2f00      	cmp	r7, #0
9000b32c:	d132      	bne.n	9000b394 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b32e:	6832      	ldr	r2, [r6, #0]
9000b330:	6991      	ldr	r1, [r2, #24]
9000b332:	4613      	mov	r3, r2
9000b334:	f011 0120 	ands.w	r1, r1, #32
9000b338:	d034      	beq.n	9000b3a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b33a:	6991      	ldr	r1, [r2, #24]
9000b33c:	0689      	lsls	r1, r1, #26
9000b33e:	d599      	bpl.n	9000b274 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000b340:	2000      	movs	r0, #0
}
9000b342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000b346:	4621      	mov	r1, r4
9000b348:	e7af      	b.n	9000b2aa <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b34a:	0692      	lsls	r2, r2, #26
9000b34c:	d425      	bmi.n	9000b39a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000b34e:	f1ba 0f00 	cmp.w	sl, #0
9000b352:	d1a7      	bne.n	9000b2a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b354:	f7ff fa34 	bl	9000a7c0 <HAL_GetTick>
9000b358:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b35a:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000b35c:	4287      	cmp	r7, r0
9000b35e:	d301      	bcc.n	9000b364 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000b360:	2f00      	cmp	r7, #0
9000b362:	d191      	bne.n	9000b288 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000b364:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000b366:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b36a:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000b36c:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000b36e:	0409      	lsls	r1, r1, #16
9000b370:	d503      	bpl.n	9000b37a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000b372:	0441      	lsls	r1, r0, #17
9000b374:	d401      	bmi.n	9000b37a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b376:	2a20      	cmp	r2, #32
9000b378:	d121      	bne.n	9000b3be <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b37a:	699a      	ldr	r2, [r3, #24]
9000b37c:	0690      	lsls	r0, r2, #26
9000b37e:	d483      	bmi.n	9000b288 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b380:	f7ff fa1e 	bl	9000a7c0 <HAL_GetTick>
9000b384:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000b386:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000b388:	2819      	cmp	r0, #25
9000b38a:	d9f6      	bls.n	9000b37a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000b38c:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000b38e:	f04f 0a01 	mov.w	sl, #1
9000b392:	e779      	b.n	9000b288 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
9000b394:	6833      	ldr	r3, [r6, #0]
9000b396:	461a      	mov	r2, r3
9000b398:	e7cf      	b.n	9000b33a <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
9000b39a:	f1ba 0f00 	cmp.w	sl, #0
9000b39e:	f43f af7f 	beq.w	9000b2a0 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000b3a2:	e77f      	b.n	9000b2a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b3a4:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b3a6:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
9000b3a8:	2001      	movs	r0, #1
9000b3aa:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b3ae:	4313      	orrs	r3, r2
9000b3b0:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b3b2:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b3b6:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
9000b3ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000b3be:	685a      	ldr	r2, [r3, #4]
9000b3c0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000b3c4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
9000b3c6:	f7ff f9fb 	bl	9000a7c0 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000b3ca:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
9000b3cc:	4604      	mov	r4, r0
9000b3ce:	e7d4      	b.n	9000b37a <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000b3d0:	fe00e800 	.word	0xfe00e800

9000b3d4 <HAL_I2C_MspInit>:
}
9000b3d4:	4770      	bx	lr
9000b3d6:	bf00      	nop

9000b3d8 <HAL_I2C_Init>:
  if (hi2c == NULL)
9000b3d8:	2800      	cmp	r0, #0
9000b3da:	d04e      	beq.n	9000b47a <HAL_I2C_Init+0xa2>
{
9000b3dc:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
9000b3de:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
9000b3e2:	4604      	mov	r4, r0
9000b3e4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b3e8:	2b00      	cmp	r3, #0
9000b3ea:	d041      	beq.n	9000b470 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
9000b3ec:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b3ee:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b3f0:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b3f2:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000b3f6:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b3f8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b3fc:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
9000b3fe:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b402:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
9000b404:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000b406:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000b408:	689a      	ldr	r2, [r3, #8]
9000b40a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9000b40e:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b410:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
9000b412:	d029      	beq.n	9000b468 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b414:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b418:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000b41a:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b41c:	d102      	bne.n	9000b424 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
9000b41e:	f44f 6200 	mov.w	r2, #2048	; 0x800
9000b422:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b424:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000b426:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b42a:	4915      	ldr	r1, [pc, #84]	; (9000b480 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b42c:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000b42e:	4301      	orrs	r1, r0
9000b430:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9000b432:	68d9      	ldr	r1, [r3, #12]
9000b434:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000b438:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000b43a:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b43e:	4302      	orrs	r2, r0
9000b440:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b444:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000b448:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b44a:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b44c:	4301      	orrs	r1, r0
  return HAL_OK;
9000b44e:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000b450:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000b452:	6819      	ldr	r1, [r3, #0]
9000b454:	f041 0101 	orr.w	r1, r1, #1
9000b458:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b45a:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
9000b45c:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000b460:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b462:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b466:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000b468:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b46c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000b46e:	e7d9      	b.n	9000b424 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000b470:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9000b474:	f7ff ffae 	bl	9000b3d4 <HAL_I2C_MspInit>
9000b478:	e7b8      	b.n	9000b3ec <HAL_I2C_Init+0x14>
    return HAL_ERROR;
9000b47a:	2001      	movs	r0, #1
}
9000b47c:	4770      	bx	lr
9000b47e:	bf00      	nop
9000b480:	02008000 	.word	0x02008000

9000b484 <HAL_I2C_MspDeInit>:
9000b484:	4770      	bx	lr
9000b486:	bf00      	nop

9000b488 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9000b488:	b1b0      	cbz	r0, 9000b4b8 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9000b48a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b48c:	2324      	movs	r3, #36	; 0x24
{
9000b48e:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000b490:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
9000b494:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9000b496:	6813      	ldr	r3, [r2, #0]
9000b498:	f023 0301 	bic.w	r3, r3, #1
9000b49c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000b49e:	f7ff fff1 	bl	9000b484 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b4a2:	2300      	movs	r3, #0
9000b4a4:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9000b4a6:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9000b4a8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
9000b4ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000b4b0:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000b4b2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9000b4b6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9000b4b8:	2001      	movs	r0, #1
}
9000b4ba:	4770      	bx	lr

9000b4bc <HAL_I2C_Mem_Write>:
{
9000b4bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000b4c0:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b4c2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b4c6:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b4ca:	2b20      	cmp	r3, #32
{
9000b4cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b4ce:	d132      	bne.n	9000b536 <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000b4d0:	9b08      	ldr	r3, [sp, #32]
9000b4d2:	4604      	mov	r4, r0
9000b4d4:	b34b      	cbz	r3, 9000b52a <HAL_I2C_Mem_Write+0x6e>
9000b4d6:	f1ba 0f00 	cmp.w	sl, #0
9000b4da:	d026      	beq.n	9000b52a <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
9000b4dc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b4e0:	2b01      	cmp	r3, #1
9000b4e2:	d028      	beq.n	9000b536 <HAL_I2C_Mem_Write+0x7a>
9000b4e4:	2301      	movs	r3, #1
9000b4e6:	460e      	mov	r6, r1
9000b4e8:	4691      	mov	r9, r2
9000b4ea:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b4ee:	f7ff f967 	bl	9000a7c0 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b4f2:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
9000b4f4:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b4f6:	699a      	ldr	r2, [r3, #24]
9000b4f8:	0411      	lsls	r1, r2, #16
9000b4fa:	d51f      	bpl.n	9000b53c <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b4fc:	f7ff f960 	bl	9000a7c0 <HAL_GetTick>
9000b500:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b502:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b504:	2819      	cmp	r0, #25
9000b506:	d9f6      	bls.n	9000b4f6 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b508:	699a      	ldr	r2, [r3, #24]
9000b50a:	0412      	lsls	r2, r2, #16
9000b50c:	d5f3      	bpl.n	9000b4f6 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b50e:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b510:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b512:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b514:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b516:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b518:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b51c:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b51e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b522:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000b526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b52a:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b52e:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b530:	6463      	str	r3, [r4, #68]	; 0x44
}
9000b532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000b536:	2002      	movs	r0, #2
}
9000b538:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000b53c:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b53e:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b540:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b544:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000b546:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b54a:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b54c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b54e:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b550:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b554:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b556:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000b558:	496d      	ldr	r1, [pc, #436]	; (9000b710 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000b55a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b55e:	685a      	ldr	r2, [r3, #4]
9000b560:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b562:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000b566:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b56a:	496a      	ldr	r1, [pc, #424]	; (9000b714 <HAL_I2C_Mem_Write+0x258>)
9000b56c:	4332      	orrs	r2, r6
9000b56e:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b570:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b572:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b574:	4639      	mov	r1, r7
9000b576:	f7ff fdbb 	bl	9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>
9000b57a:	2800      	cmp	r0, #0
9000b57c:	d175      	bne.n	9000b66a <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b57e:	f1b8 0f01 	cmp.w	r8, #1
9000b582:	d00a      	beq.n	9000b59a <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b584:	ea4f 2219 	mov.w	r2, r9, lsr #8
9000b588:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b58a:	4639      	mov	r1, r7
9000b58c:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b58e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b590:	462a      	mov	r2, r5
9000b592:	f7ff fdad 	bl	9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>
9000b596:	2800      	cmp	r0, #0
9000b598:	d167      	bne.n	9000b66a <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b59a:	fa5f f389 	uxtb.w	r3, r9
9000b59e:	6822      	ldr	r2, [r4, #0]
9000b5a0:	6293      	str	r3, [r2, #40]	; 0x28
9000b5a2:	1c78      	adds	r0, r7, #1
9000b5a4:	d14a      	bne.n	9000b63c <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b5a6:	6993      	ldr	r3, [r2, #24]
9000b5a8:	0619      	lsls	r1, r3, #24
9000b5aa:	d5fc      	bpl.n	9000b5a6 <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b5ac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b5ae:	b29b      	uxth	r3, r3
9000b5b0:	2bff      	cmp	r3, #255	; 0xff
9000b5b2:	f240 808a 	bls.w	9000b6ca <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5b6:	6853      	ldr	r3, [r2, #4]
9000b5b8:	4957      	ldr	r1, [pc, #348]	; (9000b718 <HAL_I2C_Mem_Write+0x25c>)
9000b5ba:	400b      	ands	r3, r1
9000b5bc:	4957      	ldr	r1, [pc, #348]	; (9000b71c <HAL_I2C_Mem_Write+0x260>)
9000b5be:	4333      	orrs	r3, r6
9000b5c0:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b5c2:	23ff      	movs	r3, #255	; 0xff
9000b5c4:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5c6:	6051      	str	r1, [r2, #4]
9000b5c8:	f8df 814c 	ldr.w	r8, [pc, #332]	; 9000b718 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b5cc:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b5d0:	f8df 9148 	ldr.w	r9, [pc, #328]	; 9000b71c <HAL_I2C_Mem_Write+0x260>
9000b5d4:	e004      	b.n	9000b5e0 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
9000b5d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b5d8:	b29b      	uxth	r3, r3
9000b5da:	2b00      	cmp	r3, #0
9000b5dc:	f000 8083 	beq.w	9000b6e6 <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b5e0:	462a      	mov	r2, r5
9000b5e2:	4639      	mov	r1, r7
9000b5e4:	4620      	mov	r0, r4
9000b5e6:	f7ff fd83 	bl	9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>
9000b5ea:	2800      	cmp	r0, #0
9000b5ec:	d16b      	bne.n	9000b6c6 <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b5ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b5f0:	6821      	ldr	r1, [r4, #0]
9000b5f2:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
9000b5f6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000b5f8:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
9000b5fa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
9000b5fc:	3b01      	subs	r3, #1
      hi2c->XferCount--;
9000b5fe:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9000b600:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9000b602:	3a01      	subs	r2, #1
      hi2c->XferSize--;
9000b604:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9000b606:	b292      	uxth	r2, r2
9000b608:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b60a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9000b60c:	b292      	uxth	r2, r2
9000b60e:	2a00      	cmp	r2, #0
9000b610:	d0e1      	beq.n	9000b5d6 <HAL_I2C_Mem_Write+0x11a>
9000b612:	2b00      	cmp	r3, #0
9000b614:	d1df      	bne.n	9000b5d6 <HAL_I2C_Mem_Write+0x11a>
9000b616:	1c78      	adds	r0, r7, #1
9000b618:	d12c      	bne.n	9000b674 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b61a:	698b      	ldr	r3, [r1, #24]
9000b61c:	061a      	lsls	r2, r3, #24
9000b61e:	d5fc      	bpl.n	9000b61a <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b620:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b622:	b29b      	uxth	r3, r3
9000b624:	2bff      	cmp	r3, #255	; 0xff
9000b626:	d940      	bls.n	9000b6aa <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b628:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b62a:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b62e:	ea03 0308 	and.w	r3, r3, r8
9000b632:	4333      	orrs	r3, r6
9000b634:	ea43 0309 	orr.w	r3, r3, r9
9000b638:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
9000b63a:	e7cc      	b.n	9000b5d6 <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b63c:	6993      	ldr	r3, [r2, #24]
9000b63e:	061b      	lsls	r3, r3, #24
9000b640:	d4b4      	bmi.n	9000b5ac <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b642:	f7ff f8bd 	bl	9000a7c0 <HAL_GetTick>
9000b646:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b648:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b64a:	4287      	cmp	r7, r0
9000b64c:	d301      	bcc.n	9000b652 <HAL_I2C_Mem_Write+0x196>
9000b64e:	2f00      	cmp	r7, #0
9000b650:	d1a7      	bne.n	9000b5a2 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b652:	6993      	ldr	r3, [r2, #24]
9000b654:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b658:	d1a3      	bne.n	9000b5a2 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b65a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b65c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b65e:	430a      	orrs	r2, r1
9000b660:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b662:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b666:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b66a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b66c:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b66e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000b672:	e75e      	b.n	9000b532 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b674:	698b      	ldr	r3, [r1, #24]
9000b676:	061b      	lsls	r3, r3, #24
9000b678:	d4d2      	bmi.n	9000b620 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b67a:	f7ff f8a1 	bl	9000a7c0 <HAL_GetTick>
9000b67e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b680:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b682:	4287      	cmp	r7, r0
9000b684:	d301      	bcc.n	9000b68a <HAL_I2C_Mem_Write+0x1ce>
9000b686:	2f00      	cmp	r7, #0
9000b688:	d1c5      	bne.n	9000b616 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b68a:	698b      	ldr	r3, [r1, #24]
9000b68c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b690:	d1c1      	bne.n	9000b616 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b692:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b694:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b696:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b698:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b69c:	430a      	orrs	r2, r1
9000b69e:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b6a0:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b6a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
9000b6a8:	e743      	b.n	9000b532 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
9000b6aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000b6ac:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b6ae:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000b6b0:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6b2:	684b      	ldr	r3, [r1, #4]
9000b6b4:	ea03 0308 	and.w	r3, r3, r8
9000b6b8:	4333      	orrs	r3, r6
9000b6ba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b6be:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b6c2:	604b      	str	r3, [r1, #4]
}
9000b6c4:	e787      	b.n	9000b5d6 <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
9000b6c6:	2001      	movs	r0, #1
9000b6c8:	e733      	b.n	9000b532 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
9000b6ca:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6cc:	4812      	ldr	r0, [pc, #72]	; (9000b718 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000b6ce:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b6d0:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000b6d2:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b6d4:	6853      	ldr	r3, [r2, #4]
9000b6d6:	4003      	ands	r3, r0
9000b6d8:	4333      	orrs	r3, r6
9000b6da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b6de:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b6e2:	6053      	str	r3, [r2, #4]
}
9000b6e4:	e770      	b.n	9000b5c8 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b6e6:	462a      	mov	r2, r5
9000b6e8:	4639      	mov	r1, r7
9000b6ea:	4620      	mov	r0, r4
9000b6ec:	f7ff fdb6 	bl	9000b25c <I2C_WaitOnSTOPFlagUntilTimeout>
9000b6f0:	2800      	cmp	r0, #0
9000b6f2:	d1e8      	bne.n	9000b6c6 <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b6f4:	6823      	ldr	r3, [r4, #0]
9000b6f6:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b6f8:	4d09      	ldr	r5, [pc, #36]	; (9000b720 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b6fa:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b6fc:	685a      	ldr	r2, [r3, #4]
9000b6fe:	402a      	ands	r2, r5
9000b700:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b702:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b706:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b70a:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
9000b70e:	e710      	b.n	9000b532 <HAL_I2C_Mem_Write+0x76>
9000b710:	fc009800 	.word	0xfc009800
9000b714:	01002000 	.word	0x01002000
9000b718:	fc009c00 	.word	0xfc009c00
9000b71c:	01ff0000 	.word	0x01ff0000
9000b720:	fe00e800 	.word	0xfe00e800

9000b724 <HAL_I2C_Mem_Read>:
{
9000b724:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b728:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b72a:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9000b72e:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b732:	2b20      	cmp	r3, #32
{
9000b734:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
9000b736:	d137      	bne.n	9000b7a8 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
9000b738:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000b73a:	4683      	mov	fp, r0
9000b73c:	b36b      	cbz	r3, 9000b79a <HAL_I2C_Mem_Read+0x76>
9000b73e:	f1b9 0f00 	cmp.w	r9, #0
9000b742:	d02a      	beq.n	9000b79a <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
9000b744:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
9000b748:	2b01      	cmp	r3, #1
9000b74a:	d02d      	beq.n	9000b7a8 <HAL_I2C_Mem_Read+0x84>
9000b74c:	2301      	movs	r3, #1
9000b74e:	460f      	mov	r7, r1
9000b750:	4690      	mov	r8, r2
9000b752:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
9000b756:	f7ff f833 	bl	9000a7c0 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b75a:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
9000b75e:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b760:	699a      	ldr	r2, [r3, #24]
9000b762:	0410      	lsls	r0, r2, #16
9000b764:	d523      	bpl.n	9000b7ae <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b766:	f7ff f82b 	bl	9000a7c0 <HAL_GetTick>
9000b76a:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b76c:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b770:	2819      	cmp	r0, #25
9000b772:	d9f5      	bls.n	9000b760 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b774:	699a      	ldr	r2, [r3, #24]
9000b776:	0411      	lsls	r1, r2, #16
9000b778:	d5f2      	bpl.n	9000b760 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b77a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b77e:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b780:	2200      	movs	r2, #0
      return HAL_ERROR;
9000b782:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b784:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000b786:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b78a:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b78e:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b792:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
9000b796:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b79a:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
9000b79e:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000b7a0:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
9000b7a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
9000b7a8:	2002      	movs	r0, #2
}
9000b7aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
9000b7ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b7b0:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000b7b2:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b7b6:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000b7b8:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b7bc:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
9000b7be:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b7c2:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000b7c4:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
9000b7c8:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000b7cc:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7d0:	4983      	ldr	r1, [pc, #524]	; (9000b9e0 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
9000b7d2:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7d6:	685a      	ldr	r2, [r3, #4]
9000b7d8:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b7da:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7dc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b7e0:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000b7e2:	433a      	orrs	r2, r7
9000b7e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000b7e8:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b7ea:	4632      	mov	r2, r6
9000b7ec:	f7ff fc80 	bl	9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>
9000b7f0:	2800      	cmp	r0, #0
9000b7f2:	f040 8091 	bne.w	9000b918 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000b7f6:	2c01      	cmp	r4, #1
9000b7f8:	d00c      	beq.n	9000b814 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b7fa:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000b7fe:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b802:	4629      	mov	r1, r5
9000b804:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000b806:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000b808:	4632      	mov	r2, r6
9000b80a:	f7ff fc71 	bl	9000b0f0 <I2C_WaitOnTXISFlagUntilTimeout>
9000b80e:	2800      	cmp	r0, #0
9000b810:	f040 8082 	bne.w	9000b918 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000b814:	fa5f f388 	uxtb.w	r3, r8
9000b818:	f8db 4000 	ldr.w	r4, [fp]
9000b81c:	62a3      	str	r3, [r4, #40]	; 0x28
9000b81e:	1c6a      	adds	r2, r5, #1
9000b820:	d160      	bne.n	9000b8e4 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b822:	69a3      	ldr	r3, [r4, #24]
9000b824:	065b      	lsls	r3, r3, #25
9000b826:	d5fc      	bpl.n	9000b822 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b828:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b82c:	b29b      	uxth	r3, r3
9000b82e:	2bff      	cmp	r3, #255	; 0xff
9000b830:	f240 80ae 	bls.w	9000b990 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b834:	6863      	ldr	r3, [r4, #4]
9000b836:	4a6a      	ldr	r2, [pc, #424]	; (9000b9e0 <HAL_I2C_Mem_Read+0x2bc>)
9000b838:	4013      	ands	r3, r2
9000b83a:	4a6a      	ldr	r2, [pc, #424]	; (9000b9e4 <HAL_I2C_Mem_Read+0x2c0>)
9000b83c:	433b      	orrs	r3, r7
9000b83e:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000b840:	23ff      	movs	r3, #255	; 0xff
9000b842:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b846:	6062      	str	r2, [r4, #4]
9000b848:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000b9f0 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b84c:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000b850:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000b9f4 <HAL_I2C_Mem_Read+0x2d0>
9000b854:	1c69      	adds	r1, r5, #1
9000b856:	d127      	bne.n	9000b8a8 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b858:	69a3      	ldr	r3, [r4, #24]
9000b85a:	075a      	lsls	r2, r3, #29
9000b85c:	d5fc      	bpl.n	9000b858 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000b85e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b860:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000b864:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000b866:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000b86a:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000b86e:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000b870:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000b872:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000b874:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000b878:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000b87c:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b880:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b882:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000b886:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b888:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000b88a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000b88e:	b10a      	cbz	r2, 9000b894 <HAL_I2C_Mem_Read+0x170>
9000b890:	2b00      	cmp	r3, #0
9000b892:	d046      	beq.n	9000b922 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000b894:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b898:	b29b      	uxth	r3, r3
9000b89a:	2b00      	cmp	r3, #0
9000b89c:	f000 8088 	beq.w	9000b9b0 <HAL_I2C_Mem_Read+0x28c>
9000b8a0:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b8a2:	f8db 4000 	ldr.w	r4, [fp]
9000b8a6:	d0d7      	beq.n	9000b858 <HAL_I2C_Mem_Read+0x134>
9000b8a8:	69a3      	ldr	r3, [r4, #24]
9000b8aa:	075b      	lsls	r3, r3, #29
9000b8ac:	d4d7      	bmi.n	9000b85e <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8ae:	f7fe ff87 	bl	9000a7c0 <HAL_GetTick>
9000b8b2:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8b4:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8b8:	4285      	cmp	r5, r0
9000b8ba:	d301      	bcc.n	9000b8c0 <HAL_I2C_Mem_Read+0x19c>
9000b8bc:	2d00      	cmp	r5, #0
9000b8be:	d1c9      	bne.n	9000b854 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8c0:	69a3      	ldr	r3, [r4, #24]
9000b8c2:	f013 0304 	ands.w	r3, r3, #4
9000b8c6:	d1c5      	bne.n	9000b854 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b8c8:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b8cc:	2120      	movs	r1, #32
          return HAL_ERROR;
9000b8ce:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000b8d0:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b8d4:	430a      	orrs	r2, r1
9000b8d6:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b8da:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b8de:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000b8e2:	e75f      	b.n	9000b7a4 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b8e4:	69a3      	ldr	r3, [r4, #24]
9000b8e6:	0658      	lsls	r0, r3, #25
9000b8e8:	d49e      	bmi.n	9000b828 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8ea:	f7fe ff69 	bl	9000a7c0 <HAL_GetTick>
9000b8ee:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8f0:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b8f4:	4285      	cmp	r5, r0
9000b8f6:	d301      	bcc.n	9000b8fc <HAL_I2C_Mem_Read+0x1d8>
9000b8f8:	2d00      	cmp	r5, #0
9000b8fa:	d190      	bne.n	9000b81e <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b8fc:	69a3      	ldr	r3, [r4, #24]
9000b8fe:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000b902:	d18c      	bne.n	9000b81e <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b904:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b908:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000b90a:	430a      	orrs	r2, r1
9000b90c:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000b910:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000b914:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000b918:	2300      	movs	r3, #0
      return HAL_ERROR;
9000b91a:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000b91c:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000b920:	e740      	b.n	9000b7a4 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b922:	f8db 2000 	ldr.w	r2, [fp]
9000b926:	1c68      	adds	r0, r5, #1
9000b928:	d111      	bne.n	9000b94e <HAL_I2C_Mem_Read+0x22a>
9000b92a:	6993      	ldr	r3, [r2, #24]
9000b92c:	0619      	lsls	r1, r3, #24
9000b92e:	d5fc      	bpl.n	9000b92a <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000b930:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b934:	b29b      	uxth	r3, r3
9000b936:	2bff      	cmp	r3, #255	; 0xff
9000b938:	d91a      	bls.n	9000b970 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000b93a:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000b93c:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b940:	ea03 0308 	and.w	r3, r3, r8
9000b944:	433b      	orrs	r3, r7
9000b946:	ea43 0309 	orr.w	r3, r3, r9
9000b94a:	6053      	str	r3, [r2, #4]
}
9000b94c:	e7a2      	b.n	9000b894 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000b94e:	6993      	ldr	r3, [r2, #24]
9000b950:	061b      	lsls	r3, r3, #24
9000b952:	d4ed      	bmi.n	9000b930 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b954:	f7fe ff34 	bl	9000a7c0 <HAL_GetTick>
9000b958:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b95a:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000b95e:	4285      	cmp	r5, r0
9000b960:	d301      	bcc.n	9000b966 <HAL_I2C_Mem_Read+0x242>
9000b962:	2d00      	cmp	r5, #0
9000b964:	d1df      	bne.n	9000b926 <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000b966:	6993      	ldr	r3, [r2, #24]
9000b968:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000b96c:	d1db      	bne.n	9000b926 <HAL_I2C_Mem_Read+0x202>
9000b96e:	e7ab      	b.n	9000b8c8 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000b970:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000b974:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b976:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000b978:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b97c:	6853      	ldr	r3, [r2, #4]
9000b97e:	ea03 0308 	and.w	r3, r3, r8
9000b982:	433b      	orrs	r3, r7
9000b984:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000b988:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000b98c:	6053      	str	r3, [r2, #4]
}
9000b98e:	e781      	b.n	9000b894 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000b990:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000b994:	4912      	ldr	r1, [pc, #72]	; (9000b9e0 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000b996:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000b998:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000b99a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000b99e:	6863      	ldr	r3, [r4, #4]
9000b9a0:	400b      	ands	r3, r1
9000b9a2:	433b      	orrs	r3, r7
9000b9a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000b9a8:	4a0f      	ldr	r2, [pc, #60]	; (9000b9e8 <HAL_I2C_Mem_Read+0x2c4>)
9000b9aa:	431a      	orrs	r2, r3
9000b9ac:	6062      	str	r2, [r4, #4]
}
9000b9ae:	e74b      	b.n	9000b848 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000b9b0:	4632      	mov	r2, r6
9000b9b2:	4629      	mov	r1, r5
9000b9b4:	4658      	mov	r0, fp
9000b9b6:	f7ff fc51 	bl	9000b25c <I2C_WaitOnSTOPFlagUntilTimeout>
9000b9ba:	b970      	cbnz	r0, 9000b9da <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b9bc:	f8db 3000 	ldr.w	r3, [fp]
9000b9c0:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000b9c2:	4c0a      	ldr	r4, [pc, #40]	; (9000b9ec <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000b9c4:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000b9c6:	685a      	ldr	r2, [r3, #4]
9000b9c8:	4022      	ands	r2, r4
9000b9ca:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000b9cc:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000b9d0:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000b9d4:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000b9d8:	e6e4      	b.n	9000b7a4 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000b9da:	2001      	movs	r0, #1
9000b9dc:	e6e2      	b.n	9000b7a4 <HAL_I2C_Mem_Read+0x80>
9000b9de:	bf00      	nop
9000b9e0:	fc009800 	.word	0xfc009800
9000b9e4:	01ff2400 	.word	0x01ff2400
9000b9e8:	02002400 	.word	0x02002400
9000b9ec:	fe00e800 	.word	0xfe00e800
9000b9f0:	fc009c00 	.word	0xfc009c00
9000b9f4:	01ff0000 	.word	0x01ff0000

9000b9f8 <HAL_I2C_GetState>:
  return hi2c->State;
9000b9f8:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000b9fc:	4770      	bx	lr
9000b9fe:	bf00      	nop

9000ba00 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000ba00:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000ba02:	4770      	bx	lr

9000ba04 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000ba04:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000ba08:	2a20      	cmp	r2, #32
9000ba0a:	d123      	bne.n	9000ba54 <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000ba0c:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000ba10:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000ba14:	4603      	mov	r3, r0
9000ba16:	2a01      	cmp	r2, #1
9000ba18:	d01c      	beq.n	9000ba54 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000ba1a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000ba1c:	2024      	movs	r0, #36	; 0x24
{
9000ba1e:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000ba20:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000ba24:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000ba28:	6810      	ldr	r0, [r2, #0]
9000ba2a:	f020 0001 	bic.w	r0, r0, #1
9000ba2e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000ba30:	6810      	ldr	r0, [r2, #0]
9000ba32:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000ba36:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000ba38:	6810      	ldr	r0, [r2, #0]
9000ba3a:	4301      	orrs	r1, r0

    return HAL_OK;
9000ba3c:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000ba3e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000ba40:	6811      	ldr	r1, [r2, #0]
9000ba42:	f041 0101 	orr.w	r1, r1, #1
9000ba46:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000ba48:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000ba4c:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000ba50:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000ba54:	2002      	movs	r0, #2
}
9000ba56:	4770      	bx	lr

9000ba58 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000ba58:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000ba5c:	2a20      	cmp	r2, #32
9000ba5e:	d122      	bne.n	9000baa6 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000ba60:	4603      	mov	r3, r0
{
9000ba62:	b500      	push	{lr}
9000ba64:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000ba68:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000ba6c:	2a01      	cmp	r2, #1
9000ba6e:	d01c      	beq.n	9000baaa <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000ba70:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000ba72:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000ba74:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000ba78:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000ba7c:	6810      	ldr	r0, [r2, #0]
9000ba7e:	f020 0001 	bic.w	r0, r0, #1
9000ba82:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000ba84:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000ba86:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000ba8a:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000ba8e:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000ba90:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000ba92:	6811      	ldr	r1, [r2, #0]
9000ba94:	f041 0101 	orr.w	r1, r1, #1
9000ba98:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000ba9a:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000ba9e:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000baa2:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000baa6:	2002      	movs	r0, #2
}
9000baa8:	4770      	bx	lr
    return HAL_BUSY;
9000baaa:	2002      	movs	r0, #2
}
9000baac:	f85d fb04 	ldr.w	pc, [sp], #4

9000bab0 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000bab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000bab4:	460d      	mov	r5, r1
9000bab6:	4614      	mov	r4, r2
9000bab8:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000baba:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000babc:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000babe:	2701      	movs	r7, #1
  p = 0;
9000bac0:	f04f 0800 	mov.w	r8, #0
9000bac4:	e006      	b.n	9000bad4 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000bac6:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000baca:	eb06 0308 	add.w	r3, r6, r8
9000bace:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000bad2:	d837      	bhi.n	9000bb44 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000bad4:	eb05 0008 	add.w	r0, r5, r8
9000bad8:	4632      	mov	r2, r6
9000bada:	4639      	mov	r1, r7
    while (i != 0UL)
9000badc:	b116      	cbz	r6, 9000bae4 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000bade:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000bae0:	f01d ff76 	bl	900299d0 <memset>
  for (l = 0; l < 16UL; l++)
9000bae4:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000bae6:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000baea:	d1ec      	bne.n	9000bac6 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000baec:	2300      	movs	r3, #0
9000baee:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000baf2:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000baf6:	7828      	ldrb	r0, [r5, #0]
9000baf8:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000bafa:	b300      	cbz	r0, 9000bb3e <JPEG_Bits_To_SizeCodes+0x8e>
9000bafc:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000bb00:	2701      	movs	r7, #1
  p = 0;
9000bb02:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000bb04:	4288      	cmp	r0, r1
9000bb06:	d10f      	bne.n	9000bb28 <JPEG_Bits_To_SizeCodes+0x78>
9000bb08:	eb02 0008 	add.w	r0, r2, r8
9000bb0c:	1c56      	adds	r6, r2, #1
9000bb0e:	eb05 0c02 	add.w	ip, r5, r2
9000bb12:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000bb16:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000bb18:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000bb1c:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000bb1e:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000bb22:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000bb24:	458e      	cmp	lr, r1
9000bb26:	d0f7      	beq.n	9000bb18 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000bb28:	291f      	cmp	r1, #31
9000bb2a:	d80b      	bhi.n	9000bb44 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000bb2c:	fa07 f001 	lsl.w	r0, r7, r1
9000bb30:	4298      	cmp	r0, r3
9000bb32:	d907      	bls.n	9000bb44 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000bb34:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000bb36:	005b      	lsls	r3, r3, #1
    si++;
9000bb38:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000bb3a:	2800      	cmp	r0, #0
9000bb3c:	d1e2      	bne.n	9000bb04 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000bb3e:	2000      	movs	r0, #0
}
9000bb40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000bb44:	2001      	movs	r0, #1
}
9000bb46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000bb4a:	bf00      	nop

9000bb4c <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000bb4c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000bb4e:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000bb52:	460d      	mov	r5, r1
9000bb54:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000bb56:	ab01      	add	r3, sp, #4
9000bb58:	aa43      	add	r2, sp, #268	; 0x10c
9000bb5a:	a902      	add	r1, sp, #8
9000bb5c:	f7ff ffa8 	bl	9000bab0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bb60:	b9d0      	cbnz	r0, 9000bb98 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000bb62:	9f01      	ldr	r7, [sp, #4]
9000bb64:	b1c7      	cbz	r7, 9000bb98 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000bb66:	370f      	adds	r7, #15
9000bb68:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000bb6c:	a902      	add	r1, sp, #8
9000bb6e:	f104 0c0f 	add.w	ip, r4, #15
9000bb72:	4427      	add	r7, r4
9000bb74:	e009      	b.n	9000bb8a <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bb76:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000bb7a:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bb7c:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bb80:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bb84:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bb86:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000bb88:	d006      	beq.n	9000bb98 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000bb8a:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000bb8e:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bb90:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000bb94:	d9ef      	bls.n	9000bb76 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000bb96:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bb98:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000bb9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000bb9e:	bf00      	nop

9000bba0 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000bba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000bba4:	6804      	ldr	r4, [r0, #0]
{
9000bba6:	b093      	sub	sp, #76	; 0x4c
9000bba8:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000bbaa:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000bbae:	429a      	cmp	r2, r3
9000bbb0:	f000 809d 	beq.w	9000bcee <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000bbb4:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000bbb8:	429a      	cmp	r2, r3
9000bbba:	d003      	beq.n	9000bbc4 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000bbbc:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bbbe:	b013      	add	sp, #76	; 0x4c
9000bbc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000bbc4:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000bbc8:	a903      	add	r1, sp, #12
9000bbca:	f7ff ffbf 	bl	9000bb4c <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000bbce:	2800      	cmp	r0, #0
9000bbd0:	d1f5      	bne.n	9000bbbe <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000bbd2:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbd6:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbda:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000bbde:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbe0:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000bbe4:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbe6:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000bbea:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbee:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000bbf2:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbf6:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000bbfa:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bbfc:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000bc00:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc04:	f89d c014 	ldrb.w	ip, [sp, #20]
9000bc08:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc0c:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc10:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc14:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc18:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc1a:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc1e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000bc22:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000bc26:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc2a:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc2e:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc32:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000bc36:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc3a:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000bc3c:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc40:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000bc44:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc48:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000bc4a:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc4e:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc50:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000bc54:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc58:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc5c:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000bc60:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc64:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc68:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc6a:	9b01      	ldr	r3, [sp, #4]
9000bc6c:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc70:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000bc74:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc78:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000bc7c:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc80:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000bc82:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc86:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc8a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000bc8e:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc92:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc96:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bc9a:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000bc9e:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000bca2:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000bca6:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcaa:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000bcae:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcb0:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000bcb4:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000bcb6:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000bcba:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcbe:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000bcc2:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcc4:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000bcc8:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000bcca:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000bcce:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcd2:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000bcd6:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000bcd8:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000bcdc:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000bce0:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000bce4:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000bce8:	b013      	add	sp, #76	; 0x4c
9000bcea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000bcee:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000bcf2:	e769      	b.n	9000bbc8 <JPEG_Set_HuffDC_Mem+0x28>

9000bcf4 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000bcf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000bcf8:	6804      	ldr	r4, [r0, #0]
{
9000bcfa:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000bcfe:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000bd00:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000bd04:	429a      	cmp	r2, r3
9000bd06:	d042      	beq.n	9000bd8e <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000bd08:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000bd0c:	429a      	cmp	r2, r3
9000bd0e:	d004      	beq.n	9000bd1a <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000bd10:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000bd12:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000bd16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000bd1a:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000bd1e:	4628      	mov	r0, r5
9000bd20:	466b      	mov	r3, sp
9000bd22:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000bd26:	a901      	add	r1, sp, #4
9000bd28:	f7ff fec2 	bl	9000bab0 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000bd2c:	2800      	cmp	r0, #0
9000bd2e:	d1f0      	bne.n	9000bd12 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000bd30:	9b00      	ldr	r3, [sp, #0]
9000bd32:	b37b      	cbz	r3, 9000bd94 <JPEG_Set_HuffAC_Mem+0xa0>
9000bd34:	330f      	adds	r3, #15
9000bd36:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000bd3a:	f10d 0c04 	add.w	ip, sp, #4
9000bd3e:	f105 020f 	add.w	r2, r5, #15
9000bd42:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bd46:	ae42      	add	r6, sp, #264	; 0x108
9000bd48:	e011      	b.n	9000bd6e <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000bd4a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000bd4e:	2ba1      	cmp	r3, #161	; 0xa1
9000bd50:	d8de      	bhi.n	9000bd10 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bd52:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bd56:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000bd5a:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000bd5e:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bd60:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000bd64:	4631      	mov	r1, r6
9000bd66:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000bd6a:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000bd6c:	d013      	beq.n	9000bd96 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000bd6e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000bd72:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000bd74:	2900      	cmp	r1, #0
9000bd76:	d0ec      	beq.n	9000bd52 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000bd78:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000bd7a:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bd7e:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000bd80:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000bd84:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000bd88:	d1df      	bne.n	9000bd4a <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000bd8a:	23a1      	movs	r3, #161	; 0xa1
9000bd8c:	e7e1      	b.n	9000bd52 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000bd8e:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000bd92:	e7c4      	b.n	9000bd1e <JPEG_Set_HuffAC_Mem+0x2a>
9000bd94:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000bd96:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000bd9a:	4a1a      	ldr	r2, [pc, #104]	; (9000be04 <JPEG_Set_HuffAC_Mem+0x110>)
9000bd9c:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000bda0:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000bda4:	6023      	str	r3, [r4, #0]
9000bda6:	6063      	str	r3, [r4, #4]
9000bda8:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000bdac:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000bdae:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000bdb2:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000bdb4:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000bdb8:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000bdbc:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000bdbe:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bdc2:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000bdc4:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000bdc8:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdca:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdce:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdd2:	0212      	lsls	r2, r2, #8
9000bdd4:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdd8:	021b      	lsls	r3, r3, #8
9000bdda:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdde:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000bde2:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bde4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bde8:	433a      	orrs	r2, r7
    while (i > 1UL)
9000bdea:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000bdec:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000bdf0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000bdf4:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000bdf8:	d1e7      	bne.n	9000bdca <JPEG_Set_HuffAC_Mem+0xd6>
}
9000bdfa:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000bdfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000be02:	bf00      	nop
9000be04:	0fd10fd0 	.word	0x0fd10fd0

9000be08 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000be08:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000be0a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000be0e:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000be10:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000be12:	f003 0303 	and.w	r3, r3, #3
9000be16:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000be18:	6803      	ldr	r3, [r0, #0]
9000be1a:	685a      	ldr	r2, [r3, #4]
9000be1c:	bf0c      	ite	eq
9000be1e:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000be22:	f022 0208 	bicne.w	r2, r2, #8
9000be26:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000be28:	681a      	ldr	r2, [r3, #0]
9000be2a:	f022 0201 	bic.w	r2, r2, #1
9000be2e:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000be30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000be32:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000be36:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000be38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000be3a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000be3e:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000be40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000be42:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000be46:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000be48:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000be4a:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000be4e:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000be50:	681a      	ldr	r2, [r3, #0]
9000be52:	f042 0201 	orr.w	r2, r2, #1
9000be56:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000be58:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000be5a:	f002 020c 	and.w	r2, r2, #12
9000be5e:	2a08      	cmp	r2, #8
9000be60:	d00a      	beq.n	9000be78 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000be62:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000be64:	f002 020c 	and.w	r2, r2, #12
9000be68:	2a0c      	cmp	r2, #12
9000be6a:	d000      	beq.n	9000be6e <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000be6c:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000be6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000be70:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000be74:	631a      	str	r2, [r3, #48]	; 0x30
}
9000be76:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000be78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000be7a:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000be7e:	631a      	str	r2, [r3, #48]	; 0x30
9000be80:	4770      	bx	lr
9000be82:	bf00      	nop

9000be84 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000be84:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000be86:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000be88:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000be8a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000be8c:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000be8e:	42aa      	cmp	r2, r5
9000be90:	d32d      	bcc.n	9000beee <JPEG_DMA_StartProcess+0x6a>
9000be92:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000be94:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000be96:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000be98:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000be9a:	42b3      	cmp	r3, r6
9000be9c:	d327      	bcc.n	9000beee <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000be9e:	4f1b      	ldr	r7, [pc, #108]	; (9000bf0c <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000bea0:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000bf18 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000bea4:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000bea6:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000beaa:	4919      	ldr	r1, [pc, #100]	; (9000bf10 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000beac:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000beae:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000beb0:	4918      	ldr	r1, [pc, #96]	; (9000bf14 <JPEG_DMA_StartProcess+0x90>)
9000beb2:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000beb4:	b1a5      	cbz	r5, 9000bee0 <JPEG_DMA_StartProcess+0x5c>
9000beb6:	b19e      	cbz	r6, 9000bee0 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000beb8:	fbb2 f1f5 	udiv	r1, r2, r5
9000bebc:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bec0:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bec2:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bec4:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000bec6:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bec8:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000beca:	fbb3 f2f6 	udiv	r2, r3, r6
9000bece:	fb06 3212 	mls	r2, r6, r2, r3
9000bed2:	1a9b      	subs	r3, r3, r2
9000bed4:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000bed6:	9500      	str	r5, [sp, #0]
9000bed8:	69e2      	ldr	r2, [r4, #28]
9000beda:	f001 fbb5 	bl	9000d648 <HAL_MDMA_Start_IT>
9000bede:	b148      	cbz	r0, 9000bef4 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bee0:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000bee2:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000bee4:	f043 0304 	orr.w	r3, r3, #4
9000bee8:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000beea:	b003      	add	sp, #12
9000beec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000beee:	2001      	movs	r0, #1
}
9000bef0:	b003      	add	sp, #12
9000bef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000bef4:	6822      	ldr	r2, [r4, #0]
9000bef6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bef8:	69a1      	ldr	r1, [r4, #24]
9000befa:	3240      	adds	r2, #64	; 0x40
9000befc:	9500      	str	r5, [sp, #0]
9000befe:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000bf00:	f001 fba2 	bl	9000d648 <HAL_MDMA_Start_IT>
9000bf04:	2800      	cmp	r0, #0
9000bf06:	d0f3      	beq.n	9000bef0 <JPEG_DMA_StartProcess+0x6c>
9000bf08:	e7ea      	b.n	9000bee0 <JPEG_DMA_StartProcess+0x5c>
9000bf0a:	bf00      	nop
9000bf0c:	9000c43d 	.word	0x9000c43d
9000bf10:	9000c6b5 	.word	0x9000c6b5
9000bf14:	9000c735 	.word	0x9000c735
9000bf18:	9000c469 	.word	0x9000c469

9000bf1c <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000bf1c:	6803      	ldr	r3, [r0, #0]
9000bf1e:	685a      	ldr	r2, [r3, #4]
9000bf20:	f002 0203 	and.w	r2, r2, #3
9000bf24:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000bf26:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000bf2a:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000bf2c:	f000 8094 	beq.w	9000c058 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000bf30:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000bf32:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000bf34:	f014 0403 	ands.w	r4, r4, #3
9000bf38:	d172      	bne.n	9000c020 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000bf3a:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000bf3c:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000bf3e:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000bf40:	68da      	ldr	r2, [r3, #12]
9000bf42:	0c12      	lsrs	r2, r2, #16
9000bf44:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000bf46:	4a5f      	ldr	r2, [pc, #380]	; (9000c0c4 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000bf48:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000bf4c:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000bf50:	2600      	movs	r6, #0
9000bf52:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000bf56:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000bf5a:	f241 3488 	movw	r4, #5000	; 0x1388
9000bf5e:	e033      	b.n	9000bfc8 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000bf60:	f892 8001 	ldrb.w	r8, [r2, #1]
9000bf64:	fb0e f707 	mul.w	r7, lr, r7
9000bf68:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bf6a:	f811 8008 	ldrb.w	r8, [r1, r8]
9000bf6e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000bf72:	2f64      	cmp	r7, #100	; 0x64
9000bf74:	d961      	bls.n	9000c03a <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000bf76:	fbb4 f7f7 	udiv	r7, r4, r7
9000bf7a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bf7c:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000bf80:	2f01      	cmp	r7, #1
9000bf82:	d03d      	beq.n	9000c000 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000bf84:	f892 8002 	ldrb.w	r8, [r2, #2]
9000bf88:	fb0e f707 	mul.w	r7, lr, r7
9000bf8c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bf8e:	f811 8008 	ldrb.w	r8, [r1, r8]
9000bf92:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000bf96:	2f64      	cmp	r7, #100	; 0x64
9000bf98:	d94a      	bls.n	9000c030 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000bf9a:	fbb4 f7f7 	udiv	r7, r4, r7
9000bf9e:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bfa0:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000bfa2:	2b01      	cmp	r3, #1
9000bfa4:	d030      	beq.n	9000c008 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000bfa6:	78d7      	ldrb	r7, [r2, #3]
9000bfa8:	fb0e f303 	mul.w	r3, lr, r3
9000bfac:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bfae:	5dcf      	ldrb	r7, [r1, r7]
9000bfb0:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000bfb4:	2b64      	cmp	r3, #100	; 0x64
9000bfb6:	d94a      	bls.n	9000c04e <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000bfb8:	fbb4 f3f3 	udiv	r3, r4, r3
9000bfbc:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000bfbe:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000bfc0:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000bfc4:	4295      	cmp	r5, r2
9000bfc6:	d025      	beq.n	9000c014 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000bfc8:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bfcc:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000bfce:	2f01      	cmp	r7, #1
9000bfd0:	d02c      	beq.n	9000c02c <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000bfd2:	f892 8000 	ldrb.w	r8, [r2]
9000bfd6:	fb0e f707 	mul.w	r7, lr, r7
9000bfda:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000bfdc:	f811 8008 	ldrb.w	r8, [r1, r8]
9000bfe0:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000bfe4:	2f64      	cmp	r7, #100	; 0x64
9000bfe6:	d92d      	bls.n	9000c044 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000bfe8:	fbb4 f7f7 	udiv	r7, r4, r7
9000bfec:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bfee:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000bff2:	2f01      	cmp	r7, #1
9000bff4:	d1b4      	bne.n	9000bf60 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000bff6:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000bffa:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000bffc:	2f01      	cmp	r7, #1
9000bffe:	d1c1      	bne.n	9000bf84 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000c000:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000c002:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000c004:	2b01      	cmp	r3, #1
9000c006:	d1ce      	bne.n	9000bfa6 <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c008:	3204      	adds	r2, #4
        quality += 100UL;
9000c00a:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000c00c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000c010:	4295      	cmp	r5, r2
9000c012:	d1d9      	bne.n	9000bfc8 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000c014:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000c016:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000c018:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000c01c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000c020:	f002 0203 	and.w	r2, r2, #3
9000c024:	2a03      	cmp	r2, #3
9000c026:	d14a      	bne.n	9000c0be <HAL_JPEG_GetInfo.part.0+0x1a2>
9000c028:	2430      	movs	r4, #48	; 0x30
9000c02a:	e016      	b.n	9000c05a <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000c02c:	3664      	adds	r6, #100	; 0x64
9000c02e:	e7de      	b.n	9000bfee <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000c030:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c034:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c038:	e7b2      	b.n	9000bfa0 <HAL_JPEG_GetInfo.part.0+0x84>
9000c03a:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c03e:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c042:	e79b      	b.n	9000bf7c <HAL_JPEG_GetInfo.part.0+0x60>
9000c044:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000c048:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000c04c:	e7cf      	b.n	9000bfee <HAL_JPEG_GetInfo.part.0+0xd2>
9000c04e:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000c052:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000c056:	e7b2      	b.n	9000bfbe <HAL_JPEG_GetInfo.part.0+0xa2>
9000c058:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c05a:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000c05c:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000c060:	0c12      	lsrs	r2, r2, #16
9000c062:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c066:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c068:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c06a:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c06c:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c06e:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c070:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000c074:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000c078:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000c07c:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000c080:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000c084:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c088:	d108      	bne.n	9000c09c <HAL_JPEG_GetInfo.part.0+0x180>
9000c08a:	2d01      	cmp	r5, #1
9000c08c:	d106      	bne.n	9000c09c <HAL_JPEG_GetInfo.part.0+0x180>
9000c08e:	f016 0f0f 	tst.w	r6, #15
9000c092:	bf0c      	ite	eq
9000c094:	2401      	moveq	r4, #1
9000c096:	2400      	movne	r4, #0
9000c098:	0064      	lsls	r4, r4, #1
9000c09a:	e754      	b.n	9000bf46 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c09c:	ea42 020c 	orr.w	r2, r2, ip
9000c0a0:	f012 040f 	ands.w	r4, r2, #15
9000c0a4:	f43f af4f 	beq.w	9000bf46 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000c0a8:	ea4c 0206 	orr.w	r2, ip, r6
9000c0ac:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000c0b0:	2d03      	cmp	r5, #3
9000c0b2:	bf08      	it	eq
9000c0b4:	2a00      	cmpeq	r2, #0
9000c0b6:	bf0c      	ite	eq
9000c0b8:	2401      	moveq	r4, #1
9000c0ba:	2400      	movne	r4, #0
9000c0bc:	e743      	b.n	9000bf46 <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000c0be:	2001      	movs	r0, #1
}
9000c0c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000c0c4:	9002d488 	.word	0x9002d488

9000c0c8 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000c0c8:	2800      	cmp	r0, #0
9000c0ca:	f000 810b 	beq.w	9000c2e4 <HAL_JPEG_Init+0x21c>
{
9000c0ce:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000c0d0:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000c0d4:	4604      	mov	r4, r0
9000c0d6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c0da:	2b00      	cmp	r3, #0
9000c0dc:	f000 80fd 	beq.w	9000c2da <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000c0e0:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c0e2:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000c0e4:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c0e6:	4880      	ldr	r0, [pc, #512]	; (9000c2e8 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000c0e8:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000c0ec:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c0ee:	f041 0101 	orr.w	r1, r1, #1
9000c0f2:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c0f4:	6811      	ldr	r1, [r2, #0]
9000c0f6:	f021 0101 	bic.w	r1, r1, #1
9000c0fa:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c0fc:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c0fe:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000c102:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000c104:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c106:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000c10a:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000c10c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000c10e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000c112:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c114:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000c116:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000c11a:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c11c:	4973      	ldr	r1, [pc, #460]	; (9000c2ec <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000c11e:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c120:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000c122:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000c124:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c128:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000c12c:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000c130:	4b6f      	ldr	r3, [pc, #444]	; (9000c2f0 <HAL_JPEG_Init+0x228>)
9000c132:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000c136:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c13a:	486e      	ldr	r0, [pc, #440]	; (9000c2f4 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c13c:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c140:	4b6d      	ldr	r3, [pc, #436]	; (9000c2f8 <HAL_JPEG_Init+0x230>)
9000c142:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000c146:	496d      	ldr	r1, [pc, #436]	; (9000c2fc <HAL_JPEG_Init+0x234>)
9000c148:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c14c:	4b6c      	ldr	r3, [pc, #432]	; (9000c300 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c14e:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000c152:	486c      	ldr	r0, [pc, #432]	; (9000c304 <HAL_JPEG_Init+0x23c>)
9000c154:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000c158:	496b      	ldr	r1, [pc, #428]	; (9000c308 <HAL_JPEG_Init+0x240>)
9000c15a:	4b6c      	ldr	r3, [pc, #432]	; (9000c30c <HAL_JPEG_Init+0x244>)
9000c15c:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000c160:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000c164:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c168:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000c16c:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000c170:	4967      	ldr	r1, [pc, #412]	; (9000c310 <HAL_JPEG_Init+0x248>)
9000c172:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000c174:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000c178:	430b      	orrs	r3, r1
  *address = value;
9000c17a:	4966      	ldr	r1, [pc, #408]	; (9000c314 <HAL_JPEG_Init+0x24c>)
9000c17c:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000c180:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c184:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000c188:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c18a:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000c18e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000c190:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c194:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000c198:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c19a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000c19e:	ea43 030c 	orr.w	r3, r3, ip
9000c1a2:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000c1a6:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c1aa:	d1eb      	bne.n	9000c184 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000c1ac:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c1b0:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000c1b4:	4856      	ldr	r0, [pc, #344]	; (9000c310 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c1b6:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000c1b8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000c1ba:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000c1be:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000c1c2:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c1c6:	4003      	ands	r3, r0
  *address = value;
9000c1c8:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c1cc:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000c1d0:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000c1d4:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c1d8:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000c1dc:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000c1e0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000c1e2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c1e6:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000c1ea:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c1ee:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000c1f0:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c1f2:	4b49      	ldr	r3, [pc, #292]	; (9000c318 <HAL_JPEG_Init+0x250>)
  *address = value;
9000c1f4:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c1f8:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c1fc:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000c200:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000c204:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000c208:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000c20c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000c20e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000c212:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000c216:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000c21a:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c21c:	483f      	ldr	r0, [pc, #252]	; (9000c31c <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000c21e:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c220:	4b3f      	ldr	r3, [pc, #252]	; (9000c320 <HAL_JPEG_Init+0x258>)
  *address = value;
9000c222:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c226:	493f      	ldr	r1, [pc, #252]	; (9000c324 <HAL_JPEG_Init+0x25c>)
9000c228:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000c22c:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000c230:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000c234:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000c238:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c23c:	493a      	ldr	r1, [pc, #232]	; (9000c328 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000c23e:	b29b      	uxth	r3, r3
9000c240:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000c244:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000c248:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c24c:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000c250:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c252:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000c256:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000c258:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c25c:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000c260:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000c262:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000c266:	ea43 030e 	orr.w	r3, r3, lr
9000c26a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000c26e:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000c272:	d1eb      	bne.n	9000c24c <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000c274:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000c278:	4926      	ldr	r1, [pc, #152]	; (9000c314 <HAL_JPEG_Init+0x24c>)
9000c27a:	4620      	mov	r0, r4
9000c27c:	f7ff fd3a 	bl	9000bcf4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c280:	b118      	cbz	r0, 9000c28a <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c282:	2301      	movs	r3, #1
    return HAL_ERROR;
9000c284:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000c286:	6523      	str	r3, [r4, #80]	; 0x50
}
9000c288:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000c28a:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000c28c:	4620      	mov	r0, r4
9000c28e:	4926      	ldr	r1, [pc, #152]	; (9000c328 <HAL_JPEG_Init+0x260>)
9000c290:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000c294:	f7ff fd2e 	bl	9000bcf4 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000c298:	2800      	cmp	r0, #0
9000c29a:	d1f2      	bne.n	9000c282 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000c29c:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000c29e:	4620      	mov	r0, r4
9000c2a0:	4922      	ldr	r1, [pc, #136]	; (9000c32c <HAL_JPEG_Init+0x264>)
9000c2a2:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000c2a6:	f7ff fc7b 	bl	9000bba0 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000c2aa:	2800      	cmp	r0, #0
9000c2ac:	d1e9      	bne.n	9000c282 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000c2ae:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000c2b0:	4620      	mov	r0, r4
9000c2b2:	491f      	ldr	r1, [pc, #124]	; (9000c330 <HAL_JPEG_Init+0x268>)
9000c2b4:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000c2b8:	f7ff fc72 	bl	9000bba0 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000c2bc:	2800      	cmp	r0, #0
9000c2be:	d1e0      	bne.n	9000c282 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c2c0:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c2c2:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000c2c4:	6853      	ldr	r3, [r2, #4]
9000c2c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c2ca:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000c2cc:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000c2ce:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c2d0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000c2d4:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000c2d6:	6560      	str	r0, [r4, #84]	; 0x54
}
9000c2d8:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000c2da:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000c2de:	f7f6 fe8d 	bl	90002ffc <HAL_JPEG_MspInit>
9000c2e2:	e6fd      	b.n	9000c0e0 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000c2e4:	2001      	movs	r0, #1
}
9000c2e6:	4770      	bx	lr
9000c2e8:	9002d448 	.word	0x9002d448
9000c2ec:	9002d3d0 	.word	0x9002d3d0
9000c2f0:	01050100 	.word	0x01050100
9000c2f4:	0b0a0908 	.word	0x0b0a0908
9000c2f8:	07060504 	.word	0x07060504
9000c2fc:	03020100 	.word	0x03020100
9000c300:	7d010000 	.word	0x7d010000
9000c304:	04040505 	.word	0x04040505
9000c308:	03040203 	.word	0x03040203
9000c30c:	03010200 	.word	0x03010200
9000c310:	ffff0000 	.word	0xffff0000
9000c314:	9002d31c 	.word	0x9002d31c
9000c318:	09080706 	.word	0x09080706
9000c31c:	01000404 	.word	0x01000404
9000c320:	04040201 	.word	0x04040201
9000c324:	05070403 	.word	0x05070403
9000c328:	9002d268 	.word	0x9002d268
9000c32c:	9002d42c 	.word	0x9002d42c
9000c330:	9002d410 	.word	0x9002d410

9000c334 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c334:	2b00      	cmp	r3, #0
9000c336:	bf18      	it	ne
9000c338:	2900      	cmpne	r1, #0
9000c33a:	d03b      	beq.n	9000c3b4 <HAL_JPEG_Decode_DMA+0x80>
{
9000c33c:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000c33e:	fab0 f580 	clz	r5, r0
9000c342:	4604      	mov	r4, r0
9000c344:	096d      	lsrs	r5, r5, #5
9000c346:	b330      	cbz	r0, 9000c396 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000c348:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000c34c:	f1bc 0f01 	cmp.w	ip, #1
9000c350:	d02e      	beq.n	9000c3b0 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c352:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000c356:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c35a:	45f4      	cmp	ip, lr
9000c35c:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000c360:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000c364:	d119      	bne.n	9000c39a <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000c366:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000c368:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000c36c:	9b04      	ldr	r3, [sp, #16]
9000c36e:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000c370:	2304      	movs	r3, #4
9000c372:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000c376:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c378:	f023 030f 	bic.w	r3, r3, #15
9000c37c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000c37e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c380:	f043 030e 	orr.w	r3, r3, #14
9000c384:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000c386:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000c388:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000c38a:	f7ff fd3d 	bl	9000be08 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000c38e:	f7ff fd79 	bl	9000be84 <JPEG_DMA_StartProcess>
9000c392:	b930      	cbnz	r0, 9000c3a2 <HAL_JPEG_Decode_DMA+0x6e>
}
9000c394:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c396:	2001      	movs	r0, #1
}
9000c398:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000c39a:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000c39c:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000c3a0:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c3a2:	2306      	movs	r3, #6
      return HAL_ERROR;
9000c3a4:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000c3a6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c3aa:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000c3ae:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000c3b0:	2002      	movs	r0, #2
}
9000c3b2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000c3b4:	2001      	movs	r0, #1
}
9000c3b6:	4770      	bx	lr

9000c3b8 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c3b8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c3ba:	f003 030c 	and.w	r3, r3, #12
9000c3be:	2b0c      	cmp	r3, #12
9000c3c0:	d01a      	beq.n	9000c3f8 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c3c2:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c3c4:	f003 030c 	and.w	r3, r3, #12
9000c3c8:	2b08      	cmp	r3, #8
9000c3ca:	d001      	beq.n	9000c3d0 <HAL_JPEG_Pause+0x18>
}
9000c3cc:	2000      	movs	r0, #0
9000c3ce:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c3d0:	07ca      	lsls	r2, r1, #31
9000c3d2:	d41f      	bmi.n	9000c414 <HAL_JPEG_Pause+0x5c>
9000c3d4:	f04f 3cff 	mov.w	ip, #4294967295
9000c3d8:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c3dc:	078b      	lsls	r3, r1, #30
9000c3de:	d504      	bpl.n	9000c3ea <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c3e0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c3e2:	4694      	mov	ip, r2
9000c3e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c3e8:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c3ea:	6802      	ldr	r2, [r0, #0]
}
9000c3ec:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000c3ee:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c3f0:	ea03 030c 	and.w	r3, r3, ip
9000c3f4:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c3f6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c3f8:	07cb      	lsls	r3, r1, #31
9000c3fa:	d503      	bpl.n	9000c404 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c3fc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c3fe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c402:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c404:	0789      	lsls	r1, r1, #30
9000c406:	d5e1      	bpl.n	9000c3cc <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000c408:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c40a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000c40e:	6543      	str	r3, [r0, #84]	; 0x54
}
9000c410:	2000      	movs	r0, #0
9000c412:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000c414:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c416:	f06f 0c06 	mvn.w	ip, #6
9000c41a:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000c41e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c422:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c424:	e7da      	b.n	9000c3dc <HAL_JPEG_Pause+0x24>
9000c426:	bf00      	nop

9000c428 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000c428:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000c42a:	6282      	str	r2, [r0, #40]	; 0x28
}
9000c42c:	4770      	bx	lr
9000c42e:	bf00      	nop

9000c430 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000c430:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000c432:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000c434:	4770      	bx	lr
9000c436:	bf00      	nop

9000c438 <HAL_JPEG_EncodeCpltCallback>:
9000c438:	4770      	bx	lr
9000c43a:	bf00      	nop

9000c43c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c43c:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c43e:	2101      	movs	r1, #1
{
9000c440:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c442:	6803      	ldr	r3, [r0, #0]
9000c444:	681a      	ldr	r2, [r3, #0]
9000c446:	f022 0201 	bic.w	r2, r2, #1
9000c44a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c44c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c44e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c452:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000c454:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c458:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000c45a:	f043 0304 	orr.w	r3, r3, #4
9000c45e:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000c460:	f7f5 f978 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000c464:	bd08      	pop	{r3, pc}
9000c466:	bf00      	nop

9000c468 <JPEG_MDMAInCpltCallback>:
{
9000c468:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c46a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c46c:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c470:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c472:	6822      	ldr	r2, [r4, #0]
9000c474:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c476:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000c47a:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000c47c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c47e:	400b      	ands	r3, r1
9000c480:	2b0c      	cmp	r3, #12
9000c482:	d001      	beq.n	9000c488 <JPEG_MDMAInCpltCallback+0x20>
}
9000c484:	b003      	add	sp, #12
9000c486:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c488:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c48a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c48c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c48e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c490:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c492:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c496:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c498:	1a9b      	subs	r3, r3, r2
9000c49a:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000c49c:	6a21      	ldr	r1, [r4, #32]
9000c49e:	f7f5 f8e5 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000c4a2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c4a4:	42ab      	cmp	r3, r5
9000c4a6:	d311      	bcc.n	9000c4cc <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000c4a8:	b305      	cbz	r5, 9000c4ec <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c4aa:	fbb3 f2f5 	udiv	r2, r3, r5
9000c4ae:	fb05 3212 	mls	r2, r5, r2, r3
9000c4b2:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c4b4:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000c4b6:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c4b8:	04d1      	lsls	r1, r2, #19
9000c4ba:	d400      	bmi.n	9000c4be <JPEG_MDMAInCpltCallback+0x56>
9000c4bc:	b963      	cbnz	r3, 9000c4d8 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c4be:	6822      	ldr	r2, [r4, #0]
9000c4c0:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c4c2:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000c4c6:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c4c8:	b003      	add	sp, #12
9000c4ca:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000c4cc:	b1cb      	cbz	r3, 9000c502 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000c4ce:	0798      	lsls	r0, r3, #30
9000c4d0:	d119      	bne.n	9000c506 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c4d2:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c4d4:	04d2      	lsls	r2, r2, #19
9000c4d6:	d4f2      	bmi.n	9000c4be <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c4d8:	6822      	ldr	r2, [r4, #0]
9000c4da:	2501      	movs	r5, #1
9000c4dc:	69a1      	ldr	r1, [r4, #24]
9000c4de:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000c4e0:	3240      	adds	r2, #64	; 0x40
9000c4e2:	9500      	str	r5, [sp, #0]
9000c4e4:	f001 f8b0 	bl	9000d648 <HAL_MDMA_Start_IT>
9000c4e8:	2800      	cmp	r0, #0
9000c4ea:	d0e8      	beq.n	9000c4be <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c4ec:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c4ee:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000c4f0:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c4f2:	f043 0304 	orr.w	r3, r3, #4
9000c4f6:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c4f8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000c4fc:	f7f5 f92a 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000c500:	e7c0      	b.n	9000c484 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000c502:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c504:	e7db      	b.n	9000c4be <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000c506:	f023 0303 	bic.w	r3, r3, #3
9000c50a:	3304      	adds	r3, #4
9000c50c:	e7d2      	b.n	9000c4b4 <JPEG_MDMAInCpltCallback+0x4c>
9000c50e:	bf00      	nop

9000c510 <JPEG_DMA_PollResidualData>:
{
9000c510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c512:	6802      	ldr	r2, [r0, #0]
9000c514:	2610      	movs	r6, #16
{
9000c516:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c518:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c51a:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c51e:	d11d      	bne.n	9000c55c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c520:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c522:	06df      	lsls	r7, r3, #27
9000c524:	d51a      	bpl.n	9000c55c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000c526:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c528:	69e7      	ldr	r7, [r4, #28]
9000c52a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c52c:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c52e:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000c530:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c532:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000c534:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000c536:	69e2      	ldr	r2, [r4, #28]
9000c538:	443a      	add	r2, r7
9000c53a:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000c53c:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c53e:	69e2      	ldr	r2, [r4, #28]
9000c540:	4402      	add	r2, r0
9000c542:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000c544:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c546:	69e2      	ldr	r2, [r4, #28]
9000c548:	440a      	add	r2, r1
9000c54a:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000c54c:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c54e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000c550:	3304      	adds	r3, #4
9000c552:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c554:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c556:	4293      	cmp	r3, r2
9000c558:	d021      	beq.n	9000c59e <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c55a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000c55c:	3e01      	subs	r6, #1
9000c55e:	d1db      	bne.n	9000c518 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000c560:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c562:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000c564:	06d8      	lsls	r0, r3, #27
9000c566:	d501      	bpl.n	9000c56c <JPEG_DMA_PollResidualData+0x5c>
9000c568:	048b      	lsls	r3, r1, #18
9000c56a:	d417      	bmi.n	9000c59c <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c56c:	6813      	ldr	r3, [r2, #0]
9000c56e:	f023 0301 	bic.w	r3, r3, #1
9000c572:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000c574:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c576:	b9eb      	cbnz	r3, 9000c5b4 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000c578:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c57a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c57c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c57e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c580:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c584:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c588:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c58c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c58e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c590:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c592:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c596:	d00a      	beq.n	9000c5ae <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c598:	f7ff ff4e 	bl	9000c438 <HAL_JPEG_EncodeCpltCallback>
}
9000c59c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c59e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c5a0:	4620      	mov	r0, r4
9000c5a2:	69e1      	ldr	r1, [r4, #28]
9000c5a4:	f7f5 f882 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000c5a8:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000c5aa:	6265      	str	r5, [r4, #36]	; 0x24
9000c5ac:	e7d6      	b.n	9000c55c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c5ae:	f7f5 f8d3 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c5b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c5b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c5b6:	4620      	mov	r0, r4
9000c5b8:	69e1      	ldr	r1, [r4, #28]
9000c5ba:	f7f5 f877 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000c5be:	2300      	movs	r3, #0
9000c5c0:	6263      	str	r3, [r4, #36]	; 0x24
9000c5c2:	e7d9      	b.n	9000c578 <JPEG_DMA_PollResidualData+0x68>

9000c5c4 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000c5c4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c5c6:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000c5ca:	d028      	beq.n	9000c61e <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c5cc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c5ce:	f003 030c 	and.w	r3, r3, #12
9000c5d2:	2b0c      	cmp	r3, #12
{
9000c5d4:	b570      	push	{r4, r5, r6, lr}
9000c5d6:	4604      	mov	r4, r0
9000c5d8:	b082      	sub	sp, #8
9000c5da:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000c5dc:	d007      	beq.n	9000c5ee <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c5de:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c5e0:	f003 030c 	and.w	r3, r3, #12
9000c5e4:	2b08      	cmp	r3, #8
9000c5e6:	d037      	beq.n	9000c658 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000c5e8:	2000      	movs	r0, #0
}
9000c5ea:	b002      	add	sp, #8
9000c5ec:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c5ee:	07c8      	lsls	r0, r1, #31
9000c5f0:	d417      	bmi.n	9000c622 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c5f2:	07a9      	lsls	r1, r5, #30
9000c5f4:	d5f8      	bpl.n	9000c5e8 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c5f6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c5f8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c5fc:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c5fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c600:	041a      	lsls	r2, r3, #16
9000c602:	d453      	bmi.n	9000c6ac <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000c604:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c606:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000c608:	2a00      	cmp	r2, #0
9000c60a:	d13e      	bne.n	9000c68a <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c60c:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c60e:	2206      	movs	r2, #6
          return HAL_ERROR;
9000c610:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c612:	f043 0304 	orr.w	r3, r3, #4
9000c616:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c618:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000c61c:	e7e5      	b.n	9000c5ea <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000c61e:	2001      	movs	r0, #1
}
9000c620:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c622:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c624:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c626:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000c62a:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c62c:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000c62e:	2a00      	cmp	r2, #0
9000c630:	d0ec      	beq.n	9000c60c <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000c632:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c634:	fbb3 f1f2 	udiv	r1, r3, r2
9000c638:	fb02 3211 	mls	r2, r2, r1, r3
9000c63c:	1a9b      	subs	r3, r3, r2
9000c63e:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000c640:	2b00      	cmp	r3, #0
9000c642:	d0d6      	beq.n	9000c5f2 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000c644:	6822      	ldr	r2, [r4, #0]
9000c646:	2601      	movs	r6, #1
9000c648:	3240      	adds	r2, #64	; 0x40
9000c64a:	9600      	str	r6, [sp, #0]
9000c64c:	69a1      	ldr	r1, [r4, #24]
9000c64e:	f000 fffb 	bl	9000d648 <HAL_MDMA_Start_IT>
9000c652:	2800      	cmp	r0, #0
9000c654:	d0cd      	beq.n	9000c5f2 <HAL_JPEG_Resume+0x2e>
9000c656:	e7d9      	b.n	9000c60c <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000c658:	f011 0101 	ands.w	r1, r1, #1
9000c65c:	d013      	beq.n	9000c686 <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c65e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c660:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000c662:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000c664:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c668:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000c66a:	07ab      	lsls	r3, r5, #30
9000c66c:	d504      	bpl.n	9000c678 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c66e:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000c670:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000c672:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000c676:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c678:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000c67a:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000c67c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c67e:	430b      	orrs	r3, r1
9000c680:	6313      	str	r3, [r2, #48]	; 0x30
}
9000c682:	b002      	add	sp, #8
9000c684:	bd70      	pop	{r4, r5, r6, pc}
9000c686:	2228      	movs	r2, #40	; 0x28
9000c688:	e7ef      	b.n	9000c66a <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c68a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c68c:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c68e:	fbb3 f1f2 	udiv	r1, r3, r2
9000c692:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c696:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c698:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c69a:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000c69c:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c69e:	9500      	str	r5, [sp, #0]
9000c6a0:	69e2      	ldr	r2, [r4, #28]
9000c6a2:	f000 ffd1 	bl	9000d648 <HAL_MDMA_Start_IT>
9000c6a6:	2800      	cmp	r0, #0
9000c6a8:	d09e      	beq.n	9000c5e8 <HAL_JPEG_Resume+0x24>
9000c6aa:	e7af      	b.n	9000c60c <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000c6ac:	4620      	mov	r0, r4
9000c6ae:	f7ff ff2f 	bl	9000c510 <JPEG_DMA_PollResidualData>
9000c6b2:	e799      	b.n	9000c5e8 <HAL_JPEG_Resume+0x24>

9000c6b4 <JPEG_MDMAOutCpltCallback>:
{
9000c6b4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c6b6:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c6b8:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000c6bc:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000c6be:	6823      	ldr	r3, [r4, #0]
9000c6c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c6c2:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000c6c6:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000c6c8:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c6ca:	400a      	ands	r2, r1
9000c6cc:	2a0c      	cmp	r2, #12
9000c6ce:	d001      	beq.n	9000c6d4 <JPEG_MDMAOutCpltCallback+0x20>
}
9000c6d0:	b003      	add	sp, #12
9000c6d2:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000c6d4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c6d6:	0692      	lsls	r2, r2, #26
9000c6d8:	d505      	bpl.n	9000c6e6 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c6da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c6dc:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c6e0:	631a      	str	r2, [r3, #48]	; 0x30
}
9000c6e2:	b003      	add	sp, #12
9000c6e4:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c6e6:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c6e8:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c6ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c6ec:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c6ee:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c6f0:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000c6f4:	1a9b      	subs	r3, r3, r2
9000c6f6:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c6f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c6fa:	f7f4 ffd7 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c6fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c700:	049b      	lsls	r3, r3, #18
9000c702:	d501      	bpl.n	9000c708 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000c704:	6823      	ldr	r3, [r4, #0]
9000c706:	e7e8      	b.n	9000c6da <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000c708:	6821      	ldr	r1, [r4, #0]
9000c70a:	2501      	movs	r5, #1
9000c70c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c70e:	69e2      	ldr	r2, [r4, #28]
9000c710:	3144      	adds	r1, #68	; 0x44
9000c712:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000c714:	9500      	str	r5, [sp, #0]
9000c716:	f000 ff97 	bl	9000d648 <HAL_MDMA_Start_IT>
9000c71a:	2800      	cmp	r0, #0
9000c71c:	d0f2      	beq.n	9000c704 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c71e:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c720:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000c722:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000c724:	f043 0304 	orr.w	r3, r3, #4
9000c728:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000c72a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000c72e:	f7f5 f811 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000c732:	e7cd      	b.n	9000c6d0 <JPEG_MDMAOutCpltCallback+0x1c>

9000c734 <JPEG_MDMAOutAbortCallback>:
{
9000c734:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000c736:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000c738:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c73a:	041a      	lsls	r2, r3, #16
9000c73c:	d400      	bmi.n	9000c740 <JPEG_MDMAOutAbortCallback+0xc>
}
9000c73e:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000c740:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c742:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c744:	681b      	ldr	r3, [r3, #0]
9000c746:	695b      	ldr	r3, [r3, #20]
9000c748:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000c74c:	1ad3      	subs	r3, r2, r3
9000c74e:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000c750:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c752:	429a      	cmp	r2, r3
9000c754:	d025      	beq.n	9000c7a2 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000c756:	6822      	ldr	r2, [r4, #0]
9000c758:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000c75a:	f015 0510 	ands.w	r5, r5, #16
9000c75e:	d118      	bne.n	9000c792 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000c760:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c762:	bb4b      	cbnz	r3, 9000c7b8 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c764:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000c766:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c768:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c76a:	f023 0301 	bic.w	r3, r3, #1
9000c76e:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000c770:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c772:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c774:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000c778:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c77c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c780:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c782:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c784:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c786:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c78a:	d012      	beq.n	9000c7b2 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c78c:	f7ff fe54 	bl	9000c438 <HAL_JPEG_EncodeCpltCallback>
}
9000c790:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c792:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c794:	049b      	lsls	r3, r3, #18
9000c796:	d4d2      	bmi.n	9000c73e <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000c798:	4620      	mov	r0, r4
}
9000c79a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000c79e:	f7ff beb7 	b.w	9000c510 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c7a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c7a4:	4620      	mov	r0, r4
9000c7a6:	69e1      	ldr	r1, [r4, #28]
9000c7a8:	f7f4 ff80 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000c7ac:	2300      	movs	r3, #0
9000c7ae:	6263      	str	r3, [r4, #36]	; 0x24
9000c7b0:	e7d1      	b.n	9000c756 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c7b2:	f7f4 ffd1 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000c7b6:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000c7b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c7ba:	4620      	mov	r0, r4
9000c7bc:	69e1      	ldr	r1, [r4, #28]
9000c7be:	f7f4 ff75 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c7c2:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000c7c4:	6265      	str	r5, [r4, #36]	; 0x24
9000c7c6:	e7cd      	b.n	9000c764 <JPEG_MDMAOutAbortCallback+0x30>

9000c7c8 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c7c8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000c7ca:	f003 0303 	and.w	r3, r3, #3
9000c7ce:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c7d0:	6803      	ldr	r3, [r0, #0]
{
9000c7d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c7d6:	4604      	mov	r4, r0
9000c7d8:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c7da:	d01f      	beq.n	9000c81c <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000c7dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c7de:	04d7      	lsls	r7, r2, #19
9000c7e0:	d407      	bmi.n	9000c7f2 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000c7e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c7e4:	0796      	lsls	r6, r2, #30
9000c7e6:	f100 811d 	bmi.w	9000ca24 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000c7ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c7ec:	0750      	lsls	r0, r2, #29
9000c7ee:	f100 81b1 	bmi.w	9000cb54 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000c7f2:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c7f4:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000c7f8:	d107      	bne.n	9000c80a <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000c7fa:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000c7fc:	f016 0608 	ands.w	r6, r6, #8
9000c800:	d14c      	bne.n	9000c89c <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000c802:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c804:	06d2      	lsls	r2, r2, #27
9000c806:	f100 81e3 	bmi.w	9000cbd0 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c80a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c80c:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000c810:	2a20      	cmp	r2, #32
9000c812:	d01a      	beq.n	9000c84a <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000c814:	2000      	movs	r0, #0
}
9000c816:	b002      	add	sp, #8
9000c818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000c81c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c81e:	0652      	lsls	r2, r2, #25
9000c820:	d5dc      	bpl.n	9000c7dc <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000c822:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000c824:	9101      	str	r1, [sp, #4]
9000c826:	f7ff fb79 	bl	9000bf1c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000c82a:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c82c:	9901      	ldr	r1, [sp, #4]
9000c82e:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000c830:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000c832:	f7f4 fee5 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000c836:	6823      	ldr	r3, [r4, #0]
9000c838:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000c83a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000c83e:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000c840:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c842:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000c846:	639a      	str	r2, [r3, #56]	; 0x38
9000c848:	e7c8      	b.n	9000c7dc <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000c84a:	681a      	ldr	r2, [r3, #0]
9000c84c:	f022 0201 	bic.w	r2, r2, #1
9000c850:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000c852:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000c854:	f002 020c 	and.w	r2, r2, #12
9000c858:	2a08      	cmp	r2, #8
9000c85a:	f000 81e6 	beq.w	9000cc2a <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000c85e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000c860:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000c864:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000c866:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c868:	2b00      	cmp	r3, #0
9000c86a:	f040 81e3 	bne.w	9000cc34 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000c86e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000c870:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c872:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c874:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c876:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000c87a:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c87c:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000c880:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c884:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000c886:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000c888:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000c88c:	f000 81c9 	beq.w	9000cc22 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000c890:	f7ff fdd2 	bl	9000c438 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000c894:	4628      	mov	r0, r5
}
9000c896:	b002      	add	sp, #8
9000c898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000c89c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c89e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000c8a0:	3220      	adds	r2, #32
9000c8a2:	4296      	cmp	r6, r2
9000c8a4:	f0c0 81e4 	bcc.w	9000cc70 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000c8a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8aa:	69e1      	ldr	r1, [r4, #28]
9000c8ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8ae:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c8b0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8b2:	69e2      	ldr	r2, [r4, #28]
9000c8b4:	440a      	add	r2, r1
9000c8b6:	0a19      	lsrs	r1, r3, #8
9000c8b8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8ba:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8bc:	69e2      	ldr	r2, [r4, #28]
9000c8be:	440a      	add	r2, r1
9000c8c0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8c2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8c4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8c8:	69e2      	ldr	r2, [r4, #28]
9000c8ca:	440a      	add	r2, r1
9000c8cc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c8ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c8d0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c8d2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8d4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c8d6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c8d8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c8da:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c8dc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c8de:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8e0:	69e2      	ldr	r2, [r4, #28]
9000c8e2:	440a      	add	r2, r1
9000c8e4:	0a19      	lsrs	r1, r3, #8
9000c8e6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8ea:	69e2      	ldr	r2, [r4, #28]
9000c8ec:	440a      	add	r2, r1
9000c8ee:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8f0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c8f2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c8f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c8f6:	69e2      	ldr	r2, [r4, #28]
9000c8f8:	440a      	add	r2, r1
9000c8fa:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c8fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c8fe:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c900:	3304      	adds	r3, #4
9000c902:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c904:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c906:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c908:	69e1      	ldr	r1, [r4, #28]
9000c90a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c90c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c90e:	69e2      	ldr	r2, [r4, #28]
9000c910:	440a      	add	r2, r1
9000c912:	0a19      	lsrs	r1, r3, #8
9000c914:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c916:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c918:	69e2      	ldr	r2, [r4, #28]
9000c91a:	440a      	add	r2, r1
9000c91c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c91e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c920:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c922:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c924:	69e2      	ldr	r2, [r4, #28]
9000c926:	440a      	add	r2, r1
9000c928:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c92a:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c92c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c92e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c930:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c932:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c934:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c936:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c938:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c93a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c93c:	69e2      	ldr	r2, [r4, #28]
9000c93e:	440a      	add	r2, r1
9000c940:	0a19      	lsrs	r1, r3, #8
9000c942:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c944:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c946:	69e2      	ldr	r2, [r4, #28]
9000c948:	440a      	add	r2, r1
9000c94a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c94c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c94e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c950:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c952:	69e2      	ldr	r2, [r4, #28]
9000c954:	440a      	add	r2, r1
9000c956:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c958:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c95a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c95c:	3304      	adds	r3, #4
9000c95e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c960:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c962:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c964:	69e1      	ldr	r1, [r4, #28]
9000c966:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c968:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c96a:	69e2      	ldr	r2, [r4, #28]
9000c96c:	440a      	add	r2, r1
9000c96e:	0a19      	lsrs	r1, r3, #8
9000c970:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c972:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c974:	69e2      	ldr	r2, [r4, #28]
9000c976:	440a      	add	r2, r1
9000c978:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c97a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c97c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c97e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c980:	69e2      	ldr	r2, [r4, #28]
9000c982:	440a      	add	r2, r1
9000c984:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c986:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c988:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c98a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c98c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c98e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c990:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c992:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c994:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c996:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c998:	69e2      	ldr	r2, [r4, #28]
9000c99a:	440a      	add	r2, r1
9000c99c:	0a19      	lsrs	r1, r3, #8
9000c99e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c9a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9a2:	69e2      	ldr	r2, [r4, #28]
9000c9a4:	440a      	add	r2, r1
9000c9a6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c9a8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c9aa:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c9ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9ae:	69e2      	ldr	r2, [r4, #28]
9000c9b0:	440a      	add	r2, r1
9000c9b2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c9b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c9b6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c9b8:	3304      	adds	r3, #4
9000c9ba:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c9bc:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c9be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c9c0:	69e1      	ldr	r1, [r4, #28]
9000c9c2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c9c4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9c6:	69e2      	ldr	r2, [r4, #28]
9000c9c8:	440a      	add	r2, r1
9000c9ca:	0a19      	lsrs	r1, r3, #8
9000c9cc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c9ce:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9d0:	69e2      	ldr	r2, [r4, #28]
9000c9d2:	440a      	add	r2, r1
9000c9d4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c9d6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c9d8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000c9da:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9dc:	69e2      	ldr	r2, [r4, #28]
9000c9de:	440a      	add	r2, r1
9000c9e0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000c9e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000c9e4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000c9e6:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c9e8:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000c9ea:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000c9ec:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000c9ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000c9f0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000c9f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9f4:	69e2      	ldr	r2, [r4, #28]
9000c9f6:	440a      	add	r2, r1
9000c9f8:	0a19      	lsrs	r1, r3, #8
9000c9fa:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000c9fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000c9fe:	69e2      	ldr	r2, [r4, #28]
9000ca00:	440a      	add	r2, r1
9000ca02:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca04:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ca06:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ca08:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ca0a:	69e2      	ldr	r2, [r4, #28]
9000ca0c:	440a      	add	r2, r1
9000ca0e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ca10:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ca12:	3304      	adds	r3, #4
9000ca14:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ca16:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ca18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ca1a:	429a      	cmp	r2, r3
9000ca1c:	f000 82ae 	beq.w	9000cf7c <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000ca20:	6823      	ldr	r3, [r4, #0]
9000ca22:	e6f2      	b.n	9000c80a <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000ca24:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ca26:	2a00      	cmp	r2, #0
9000ca28:	f000 810c 	beq.w	9000cc44 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ca2c:	6a21      	ldr	r1, [r4, #32]
9000ca2e:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ca30:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000ca32:	f240 81a4 	bls.w	9000cd7e <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ca36:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ca38:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000ca3a:	04cd      	lsls	r5, r1, #19
9000ca3c:	f53f aed9 	bmi.w	9000c7f2 <JPEG_Process+0x2a>
9000ca40:	2a00      	cmp	r2, #0
9000ca42:	f43f aed6 	beq.w	9000c7f2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000ca46:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000ca48:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000ca4c:	f240 8203 	bls.w	9000ce56 <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca50:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000ca52:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca54:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca56:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca58:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca5a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca5c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ca5e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca60:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ca64:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca66:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca6a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ca6c:	6a21      	ldr	r1, [r4, #32]
9000ca6e:	3104      	adds	r1, #4
9000ca70:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ca72:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca74:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca76:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca78:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca7a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca7c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ca7e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca80:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000ca84:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca86:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca8a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000ca8c:	6a21      	ldr	r1, [r4, #32]
9000ca8e:	3104      	adds	r1, #4
9000ca90:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000ca92:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca94:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ca96:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca98:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ca9a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ca9c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ca9e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000caa0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000caa4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000caa6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000caaa:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000caac:	6a21      	ldr	r1, [r4, #32]
9000caae:	3104      	adds	r1, #4
9000cab0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cab2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cab4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cab6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cab8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000caba:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cabc:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cabe:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cac0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cac4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cac6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000caca:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cacc:	6a21      	ldr	r1, [r4, #32]
9000cace:	3104      	adds	r1, #4
9000cad0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cad2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cad4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cad6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cad8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cada:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cadc:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cade:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cae0:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cae4:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cae6:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000caea:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000caec:	6a21      	ldr	r1, [r4, #32]
9000caee:	3104      	adds	r1, #4
9000caf0:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000caf2:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000caf4:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000caf6:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000caf8:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cafa:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cafc:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cafe:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb00:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cb04:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb06:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb0a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cb0c:	6a21      	ldr	r1, [r4, #32]
9000cb0e:	3104      	adds	r1, #4
9000cb10:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cb12:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb14:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb16:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb18:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb1a:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb1c:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cb1e:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb20:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000cb24:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb26:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb2a:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cb2c:	6a21      	ldr	r1, [r4, #32]
9000cb2e:	3104      	adds	r1, #4
9000cb30:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000cb32:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb34:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb36:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb38:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cb3a:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb3c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cb3e:	7849      	ldrb	r1, [r1, #1]
9000cb40:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000cb44:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cb46:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb4a:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000cb4c:	6a22      	ldr	r2, [r4, #32]
9000cb4e:	3204      	adds	r2, #4
9000cb50:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000cb52:	e64e      	b.n	9000c7f2 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000cb54:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cb56:	2a00      	cmp	r2, #0
9000cb58:	d074      	beq.n	9000cc44 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cb5a:	6a21      	ldr	r1, [r4, #32]
9000cb5c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000cb5e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000cb60:	f200 8164 	bhi.w	9000ce2c <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000cb64:	428a      	cmp	r2, r1
9000cb66:	f040 810c 	bne.w	9000cd82 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000cb6a:	6a21      	ldr	r1, [r4, #32]
9000cb6c:	4620      	mov	r0, r4
9000cb6e:	f7f4 fd7d 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000cb72:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000cb74:	2a04      	cmp	r2, #4
9000cb76:	d902      	bls.n	9000cb7e <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000cb78:	f022 0203 	bic.w	r2, r2, #3
9000cb7c:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000cb7e:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cb80:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000cb82:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cb84:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000cb86:	04c9      	lsls	r1, r1, #19
9000cb88:	f53f ae33 	bmi.w	9000c7f2 <JPEG_Process+0x2a>
9000cb8c:	2a00      	cmp	r2, #0
9000cb8e:	f43f ae30 	beq.w	9000c7f2 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000cb92:	0891      	lsrs	r1, r2, #2
9000cb94:	f040 8203 	bne.w	9000cf9e <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cb98:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cb9a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000cb9c:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cb9e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000cba0:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cba4:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000cba6:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cba8:	d010      	beq.n	9000cbcc <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cbaa:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cbac:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cbae:	5c69      	ldrb	r1, [r5, r1]
9000cbb0:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000cbb4:	6a21      	ldr	r1, [r4, #32]
9000cbb6:	f101 0101 	add.w	r1, r1, #1
9000cbba:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cbbc:	d106      	bne.n	9000cbcc <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cbbe:	6a22      	ldr	r2, [r4, #32]
9000cbc0:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000cbc2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cbc4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000cbc8:	3201      	adds	r2, #1
9000cbca:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000cbcc:	6418      	str	r0, [r3, #64]	; 0x40
9000cbce:	e610      	b.n	9000c7f2 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000cbd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbd2:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cbd4:	3204      	adds	r2, #4
9000cbd6:	4295      	cmp	r5, r2
9000cbd8:	f0c0 80d5 	bcc.w	9000cd86 <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000cbdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cbde:	69e1      	ldr	r1, [r4, #28]
9000cbe0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cbe2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cbe4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cbe6:	69e2      	ldr	r2, [r4, #28]
9000cbe8:	440a      	add	r2, r1
9000cbea:	0a19      	lsrs	r1, r3, #8
9000cbec:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cbee:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cbf0:	69e2      	ldr	r2, [r4, #28]
9000cbf2:	440a      	add	r2, r1
9000cbf4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cbf6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cbf8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cbfa:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cbfc:	69e2      	ldr	r2, [r4, #28]
9000cbfe:	440a      	add	r2, r1
9000cc00:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cc02:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cc04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000cc06:	3304      	adds	r3, #4
9000cc08:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cc0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cc0c:	429a      	cmp	r2, r3
9000cc0e:	f47f af07 	bne.w	9000ca20 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cc12:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc14:	4620      	mov	r0, r4
9000cc16:	69e1      	ldr	r1, [r4, #28]
9000cc18:	f7f4 fd48 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cc1c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cc1e:	6266      	str	r6, [r4, #36]	; 0x24
9000cc20:	e5f3      	b.n	9000c80a <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000cc22:	f7f4 fd99 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000cc26:	4628      	mov	r0, r5
9000cc28:	e5f5      	b.n	9000c816 <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000cc2a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cc2c:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000cc30:	631a      	str	r2, [r3, #48]	; 0x30
9000cc32:	e614      	b.n	9000c85e <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cc34:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc36:	4620      	mov	r0, r4
9000cc38:	69e1      	ldr	r1, [r4, #28]
9000cc3a:	f7f4 fd37 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cc3e:	2300      	movs	r3, #0
9000cc40:	6263      	str	r3, [r4, #36]	; 0x24
9000cc42:	e614      	b.n	9000c86e <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cc44:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cc46:	f002 020c 	and.w	r2, r2, #12
9000cc4a:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cc4c:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cc4e:	f000 80fd 	beq.w	9000ce4c <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cc52:	f002 020c 	and.w	r2, r2, #12
9000cc56:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cc58:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cc5a:	f47f adca 	bne.w	9000c7f2 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000cc5e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000cc62:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000cc64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000cc66:	f022 0206 	bic.w	r2, r2, #6
9000cc6a:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cc6c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cc6e:	e5c0      	b.n	9000c7f2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cc70:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc72:	4296      	cmp	r6, r2
9000cc74:	f67f adc9 	bls.w	9000c80a <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cc78:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cc7a:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000cc7c:	0880      	lsrs	r0, r0, #2
9000cc7e:	d020      	beq.n	9000ccc2 <JPEG_Process+0x4fa>
9000cc80:	4629      	mov	r1, r5
9000cc82:	e000      	b.n	9000cc86 <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000cc84:	6823      	ldr	r3, [r4, #0]
9000cc86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cc88:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cc8c:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cc8e:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cc90:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cc92:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cc94:	69e2      	ldr	r2, [r4, #28]
9000cc96:	4432      	add	r2, r6
9000cc98:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000cc9c:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cc9e:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000cca0:	69e2      	ldr	r2, [r4, #28]
9000cca2:	4432      	add	r2, r6
9000cca4:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cca8:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000ccac:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000ccae:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000ccb0:	69e2      	ldr	r2, [r4, #28]
9000ccb2:	4432      	add	r2, r6
9000ccb4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000ccb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccb8:	f103 0304 	add.w	r3, r3, #4
9000ccbc:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000ccbe:	d1e1      	bne.n	9000cc84 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000ccc0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000ccc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccc4:	42b3      	cmp	r3, r6
9000ccc6:	f000 8161 	beq.w	9000cf8c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000ccca:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000ccce:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000ccd0:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000ccd4:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000ccd6:	d00e      	beq.n	9000ccf6 <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000ccd8:	f005 0303 	and.w	r3, r5, #3
9000ccdc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ccde:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000cce0:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cce2:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000cce4:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cce6:	fa27 f303 	lsr.w	r3, r7, r3
9000ccea:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ccec:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ccee:	f103 0301 	add.w	r3, r3, #1
9000ccf2:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000ccf4:	d1f0      	bne.n	9000ccd8 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000ccf6:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ccfa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ccfc:	69e1      	ldr	r1, [r4, #28]
9000ccfe:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000cd00:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cd04:	f7f4 fcd2 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cd08:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000cd0a:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000cd0e:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd10:	f63f ae86 	bhi.w	9000ca20 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd14:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000cd18:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd1a:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cd1c:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd20:	fa27 f003 	lsr.w	r0, r7, r3
9000cd24:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000cd26:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd28:	f102 0201 	add.w	r2, r2, #1
9000cd2c:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd2e:	f43f ae77 	beq.w	9000ca20 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd32:	f103 0208 	add.w	r2, r3, #8
9000cd36:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd38:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cd3a:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd3e:	fa27 f202 	lsr.w	r2, r7, r2
9000cd42:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000cd44:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd46:	f102 0201 	add.w	r2, r2, #1
9000cd4a:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd4c:	f108 0202 	add.w	r2, r8, #2
9000cd50:	f43f ae66 	beq.w	9000ca20 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd54:	3310      	adds	r3, #16
9000cd56:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000cd58:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000cd5a:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd5c:	fa27 f303 	lsr.w	r3, r7, r3
9000cd60:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000cd62:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd64:	f103 0301 	add.w	r3, r3, #1
9000cd68:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd6a:	f47f ae59 	bne.w	9000ca20 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000cd6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd70:	0e3f      	lsrs	r7, r7, #24
9000cd72:	69e2      	ldr	r2, [r4, #28]
9000cd74:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000cd76:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cd78:	3301      	adds	r3, #1
9000cd7a:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000cd7c:	e650      	b.n	9000ca20 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000cd7e:	428a      	cmp	r2, r1
9000cd80:	d056      	beq.n	9000ce30 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000cd82:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000cd84:	e535      	b.n	9000c7f2 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000cd86:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cd88:	4295      	cmp	r5, r2
9000cd8a:	f67f ad3e 	bls.w	9000c80a <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000cd8e:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000cd90:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000cd92:	0880      	lsrs	r0, r0, #2
9000cd94:	d020      	beq.n	9000cdd8 <JPEG_Process+0x610>
9000cd96:	4631      	mov	r1, r6
9000cd98:	e000      	b.n	9000cd9c <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000cd9a:	6823      	ldr	r3, [r4, #0]
9000cd9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000cd9e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cda0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cda2:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000cda4:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000cda6:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000cda8:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cdaa:	69e2      	ldr	r2, [r4, #28]
9000cdac:	442a      	add	r2, r5
9000cdae:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000cdb2:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cdb4:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cdb6:	69e2      	ldr	r2, [r4, #28]
9000cdb8:	442a      	add	r2, r5
9000cdba:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cdbe:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000cdc2:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000cdc4:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000cdc6:	69e2      	ldr	r2, [r4, #28]
9000cdc8:	442a      	add	r2, r5
9000cdca:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000cdcc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cdce:	f103 0304 	add.w	r3, r3, #4
9000cdd2:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000cdd4:	d1e1      	bne.n	9000cd9a <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000cdd6:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000cdd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000cdda:	429d      	cmp	r5, r3
9000cddc:	f000 80d6 	beq.w	9000cf8c <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000cde0:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000cde4:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000cde6:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000cdea:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000cdec:	d00e      	beq.n	9000ce0c <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cdee:	f006 0303 	and.w	r3, r6, #3
9000cdf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cdf4:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000cdf6:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cdf8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000cdfa:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000cdfc:	fa27 f303 	lsr.w	r3, r7, r3
9000ce00:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000ce02:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ce04:	f103 0301 	add.w	r3, r3, #1
9000ce08:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000ce0a:	d1f0      	bne.n	9000cdee <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000ce0c:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce10:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ce12:	69e1      	ldr	r1, [r4, #28]
9000ce14:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000ce16:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ce1a:	f7f4 fc47 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000ce1e:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000ce20:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000ce24:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000ce26:	f67f af75 	bls.w	9000cd14 <JPEG_Process+0x54c>
9000ce2a:	e5f9      	b.n	9000ca20 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000ce2c:	1a52      	subs	r2, r2, r1
9000ce2e:	e6a9      	b.n	9000cb84 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ce30:	6a21      	ldr	r1, [r4, #32]
9000ce32:	4620      	mov	r0, r4
9000ce34:	f7f4 fc1a 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000ce38:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000ce3a:	2a04      	cmp	r2, #4
9000ce3c:	d902      	bls.n	9000ce44 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000ce3e:	f022 0203 	bic.w	r2, r2, #3
9000ce42:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000ce44:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce46:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000ce48:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000ce4a:	e5f5      	b.n	9000ca38 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ce4c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000ce50:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000ce52:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000ce54:	e4cd      	b.n	9000c7f2 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000ce56:	2a03      	cmp	r2, #3
9000ce58:	f240 80a4 	bls.w	9000cfa4 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000ce5c:	2900      	cmp	r1, #0
9000ce5e:	f43f acc8 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ce62:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce64:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce66:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce68:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce6c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce6e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce70:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce72:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ce76:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce78:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ce7c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce80:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce84:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ce86:	6a20      	ldr	r0, [r4, #32]
9000ce88:	f100 0004 	add.w	r0, r0, #4
9000ce8c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce8e:	f43f acb0 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ce92:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ce94:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce96:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ce9a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ce9c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ce9e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cea0:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cea4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cea6:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ceaa:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ceae:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000ceb2:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000ceb4:	6a20      	ldr	r0, [r4, #32]
9000ceb6:	f100 0004 	add.w	r0, r0, #4
9000ceba:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cebc:	f43f ac99 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cec0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cec2:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cec4:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cec8:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000ceca:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cecc:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cece:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000ced2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000ced4:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000ced8:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cedc:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cee0:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cee2:	6a20      	ldr	r0, [r4, #32]
9000cee4:	f100 0004 	add.w	r0, r0, #4
9000cee8:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000ceea:	f43f ac82 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000ceee:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cef0:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cef2:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cef6:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cef8:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cefa:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cefc:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cf00:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf02:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cf06:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf0a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf0e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cf10:	6a20      	ldr	r0, [r4, #32]
9000cf12:	f100 0004 	add.w	r0, r0, #4
9000cf16:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cf18:	f43f ac6b 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cf1c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cf1e:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf20:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf24:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf26:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf28:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf2a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cf2e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf30:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cf34:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf38:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf3c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cf3e:	6a20      	ldr	r0, [r4, #32]
9000cf40:	f100 0004 	add.w	r0, r0, #4
9000cf44:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cf46:	f43f ac54 	beq.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cf4a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cf4c:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf4e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf52:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf54:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf56:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf58:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000cf5c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000cf5e:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000cf62:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000cf66:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf6a:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000cf6c:	6a20      	ldr	r0, [r4, #32]
9000cf6e:	f100 0004 	add.w	r0, r0, #4
9000cf72:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000cf74:	f47f ac3d 	bne.w	9000c7f2 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000cf78:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cf7a:	e5db      	b.n	9000cb34 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf7c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf7e:	4620      	mov	r0, r4
9000cf80:	69e1      	ldr	r1, [r4, #28]
9000cf82:	f7f4 fb93 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cf86:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cf88:	6265      	str	r5, [r4, #36]	; 0x24
9000cf8a:	e43e      	b.n	9000c80a <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000cf8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000cf8e:	4620      	mov	r0, r4
9000cf90:	69e1      	ldr	r1, [r4, #28]
9000cf92:	f7f4 fb8b 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000cf96:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000cf98:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000cf9a:	6262      	str	r2, [r4, #36]	; 0x24
9000cf9c:	e435      	b.n	9000c80a <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000cf9e:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000cfa0:	69a0      	ldr	r0, [r4, #24]
9000cfa2:	e5c7      	b.n	9000cb34 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfa4:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cfa6:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000cfa8:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfaa:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000cfac:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfb0:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000cfb2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cfb4:	d010      	beq.n	9000cfd8 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfb6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cfb8:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfba:	5c28      	ldrb	r0, [r5, r0]
9000cfbc:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000cfc0:	6a20      	ldr	r0, [r4, #32]
9000cfc2:	f100 0001 	add.w	r0, r0, #1
9000cfc6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000cfc8:	d106      	bne.n	9000cfd8 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfca:	6a22      	ldr	r2, [r4, #32]
9000cfcc:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000cfce:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000cfd0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000cfd4:	3201      	adds	r2, #1
9000cfd6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000cfd8:	6419      	str	r1, [r3, #64]	; 0x40
9000cfda:	e40a      	b.n	9000c7f2 <JPEG_Process+0x2a>

9000cfdc <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000cfdc:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000cfe0:	3b03      	subs	r3, #3
9000cfe2:	2b01      	cmp	r3, #1
9000cfe4:	d900      	bls.n	9000cfe8 <HAL_JPEG_IRQHandler+0xc>
9000cfe6:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cfe8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cfea:	f003 030c 	and.w	r3, r3, #12
9000cfee:	2b08      	cmp	r3, #8
{
9000cff0:	b530      	push	{r4, r5, lr}
9000cff2:	4604      	mov	r4, r0
9000cff4:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000cff6:	d006      	beq.n	9000d006 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000cff8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000cffa:	f003 030c 	and.w	r3, r3, #12
9000cffe:	2b0c      	cmp	r3, #12
9000d000:	d006      	beq.n	9000d010 <HAL_JPEG_IRQHandler+0x34>
}
9000d002:	b003      	add	sp, #12
9000d004:	bd30      	pop	{r4, r5, pc}
9000d006:	b003      	add	sp, #12
9000d008:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000d00c:	f7ff bbdc 	b.w	9000c7c8 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d010:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000d012:	f003 0303 	and.w	r3, r3, #3
9000d016:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d018:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d01a:	d045      	beq.n	9000d0a8 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000d01c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d01e:	0692      	lsls	r2, r2, #26
9000d020:	d5ef      	bpl.n	9000d002 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d022:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d024:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000d026:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000d02a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d02c:	681a      	ldr	r2, [r3, #0]
9000d02e:	f022 0201 	bic.w	r2, r2, #1
9000d032:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000d034:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d036:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000d03a:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000d03c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d03e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000d042:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000d044:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d048:	2b02      	cmp	r3, #2
9000d04a:	d052      	beq.n	9000d0f2 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000d04c:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000d04e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000d052:	2b02      	cmp	r3, #2
9000d054:	d03f      	beq.n	9000d0d6 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000d056:	6803      	ldr	r3, [r0, #0]
9000d058:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000d05a:	695b      	ldr	r3, [r3, #20]
9000d05c:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000d060:	1ad3      	subs	r3, r2, r3
9000d062:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000d064:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d066:	429a      	cmp	r2, r3
9000d068:	d046      	beq.n	9000d0f8 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000d06a:	6822      	ldr	r2, [r4, #0]
9000d06c:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000d06e:	f015 0510 	ands.w	r5, r5, #16
9000d072:	d135      	bne.n	9000d0e0 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000d074:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000d076:	2b00      	cmp	r3, #0
9000d078:	d149      	bne.n	9000d10e <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d07a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000d07c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d07e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d080:	f023 0301 	bic.w	r3, r3, #1
9000d084:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000d086:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d088:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d08a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000d08e:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d092:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d096:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d098:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000d09a:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000d09c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000d0a0:	d032      	beq.n	9000d108 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000d0a2:	f7ff f9c9 	bl	9000c438 <HAL_JPEG_EncodeCpltCallback>
9000d0a6:	e7ac      	b.n	9000d002 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000d0a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d0aa:	0651      	lsls	r1, r2, #25
9000d0ac:	d5b6      	bpl.n	9000d01c <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000d0ae:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000d0b0:	9101      	str	r1, [sp, #4]
9000d0b2:	f7fe ff33 	bl	9000bf1c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000d0b6:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d0b8:	9901      	ldr	r1, [sp, #4]
9000d0ba:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000d0bc:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000d0be:	f7f4 fa9f 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000d0c2:	6823      	ldr	r3, [r4, #0]
9000d0c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000d0c6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000d0ca:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000d0cc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000d0ce:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000d0d2:	639a      	str	r2, [r3, #56]	; 0x38
9000d0d4:	e7a2      	b.n	9000d01c <HAL_JPEG_IRQHandler+0x40>
}
9000d0d6:	b003      	add	sp, #12
9000d0d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000d0dc:	f000 bb30 	b.w	9000d740 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000d0e0:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d0e2:	049b      	lsls	r3, r3, #18
9000d0e4:	d48d      	bmi.n	9000d002 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000d0e6:	4620      	mov	r0, r4
}
9000d0e8:	b003      	add	sp, #12
9000d0ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000d0ee:	f7ff ba0f 	b.w	9000c510 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000d0f2:	f000 fb25 	bl	9000d740 <HAL_MDMA_Abort_IT>
9000d0f6:	e7a9      	b.n	9000d04c <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d0f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d0fa:	4620      	mov	r0, r4
9000d0fc:	69e1      	ldr	r1, [r4, #28]
9000d0fe:	f7f4 fad5 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000d102:	2300      	movs	r3, #0
9000d104:	6263      	str	r3, [r4, #36]	; 0x24
9000d106:	e7b0      	b.n	9000d06a <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000d108:	f7f4 fb26 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000d10c:	e779      	b.n	9000d002 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000d10e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000d110:	4620      	mov	r0, r4
9000d112:	69e1      	ldr	r1, [r4, #28]
9000d114:	f7f4 faca 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000d118:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000d11a:	6265      	str	r5, [r4, #36]	; 0x24
9000d11c:	e7ad      	b.n	9000d07a <HAL_JPEG_IRQHandler+0x9e>
9000d11e:	bf00      	nop

9000d120 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000d120:	2800      	cmp	r0, #0
9000d122:	d067      	beq.n	9000d1f4 <HAL_LTDC_Init+0xd4>
{
9000d124:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000d126:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000d12a:	4604      	mov	r4, r0
9000d12c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000d130:	2b00      	cmp	r3, #0
9000d132:	d05a      	beq.n	9000d1ea <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d134:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d136:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d138:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d13c:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d140:	4302      	orrs	r2, r0
9000d142:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d144:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d146:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d148:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d14a:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000d14e:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d150:	4929      	ldr	r1, [pc, #164]	; (9000d1f8 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000d152:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d154:	6998      	ldr	r0, [r3, #24]
9000d156:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000d158:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000d15a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000d15c:	689a      	ldr	r2, [r3, #8]
9000d15e:	400a      	ands	r2, r1
9000d160:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d162:	689a      	ldr	r2, [r3, #8]
9000d164:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d168:	69a0      	ldr	r0, [r4, #24]
9000d16a:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000d16c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000d16e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000d170:	68da      	ldr	r2, [r3, #12]
9000d172:	400a      	ands	r2, r1
9000d174:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d176:	68da      	ldr	r2, [r3, #12]
9000d178:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d17c:	6a20      	ldr	r0, [r4, #32]
9000d17e:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000d180:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000d182:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000d184:	691a      	ldr	r2, [r3, #16]
9000d186:	400a      	ands	r2, r1
9000d188:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d18a:	691a      	ldr	r2, [r3, #16]
9000d18c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d190:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d192:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000d194:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000d196:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000d198:	695a      	ldr	r2, [r3, #20]
9000d19a:	400a      	ands	r2, r1
9000d19c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000d19e:	695a      	ldr	r2, [r3, #20]
9000d1a0:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000d1a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000d1a6:	430a      	orrs	r2, r1
9000d1a8:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d1aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000d1ac:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d1b0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000d1b4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000d1b8:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d1ba:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000d1bc:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000d1c0:	432a      	orrs	r2, r5
9000d1c2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d1c6:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000d1c8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000d1cc:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000d1ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d1d0:	f042 0206 	orr.w	r2, r2, #6
9000d1d4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000d1d6:	699a      	ldr	r2, [r3, #24]
9000d1d8:	f042 0201 	orr.w	r2, r2, #1
9000d1dc:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000d1de:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000d1e0:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000d1e4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000d1e8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000d1ea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000d1ee:	f7f5 ff91 	bl	90003114 <HAL_LTDC_MspInit>
9000d1f2:	e79f      	b.n	9000d134 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000d1f4:	2001      	movs	r0, #1
}
9000d1f6:	4770      	bx	lr
9000d1f8:	f000f800 	.word	0xf000f800

9000d1fc <HAL_LTDC_ErrorCallback>:
9000d1fc:	4770      	bx	lr
9000d1fe:	bf00      	nop

9000d200 <HAL_LTDC_ReloadEventCallback>:
9000d200:	4770      	bx	lr
9000d202:	bf00      	nop

9000d204 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d204:	6803      	ldr	r3, [r0, #0]
{
9000d206:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000d208:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000d20a:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000d20c:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000d20e:	076a      	lsls	r2, r5, #29
9000d210:	d501      	bpl.n	9000d216 <HAL_LTDC_IRQHandler+0x12>
9000d212:	0771      	lsls	r1, r6, #29
9000d214:	d41d      	bmi.n	9000d252 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000d216:	07aa      	lsls	r2, r5, #30
9000d218:	d501      	bpl.n	9000d21e <HAL_LTDC_IRQHandler+0x1a>
9000d21a:	07b3      	lsls	r3, r6, #30
9000d21c:	d42d      	bmi.n	9000d27a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000d21e:	07e8      	lsls	r0, r5, #31
9000d220:	d501      	bpl.n	9000d226 <HAL_LTDC_IRQHandler+0x22>
9000d222:	07f1      	lsls	r1, r6, #31
9000d224:	d440      	bmi.n	9000d2a8 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000d226:	072a      	lsls	r2, r5, #28
9000d228:	d501      	bpl.n	9000d22e <HAL_LTDC_IRQHandler+0x2a>
9000d22a:	0733      	lsls	r3, r6, #28
9000d22c:	d400      	bmi.n	9000d230 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000d22e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d230:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d232:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000d234:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000d236:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000d238:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d23a:	f022 0208 	bic.w	r2, r2, #8
9000d23e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000d240:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d242:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000d244:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d248:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000d24c:	f7ff ffd8 	bl	9000d200 <HAL_LTDC_ReloadEventCallback>
}
9000d250:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000d252:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d254:	f022 0204 	bic.w	r2, r2, #4
9000d258:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000d25a:	2204      	movs	r2, #4
9000d25c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000d25e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000d262:	f043 0301 	orr.w	r3, r3, #1
9000d266:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d26a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d26c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d270:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d274:	f7ff ffc2 	bl	9000d1fc <HAL_LTDC_ErrorCallback>
9000d278:	e7cd      	b.n	9000d216 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d27a:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000d27c:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000d27e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d280:	f022 0202 	bic.w	r2, r2, #2
9000d284:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000d286:	2202      	movs	r2, #2
9000d288:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d28a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000d28c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000d290:	f043 0302 	orr.w	r3, r3, #2
9000d294:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000d298:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000d29a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d29e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000d2a2:	f7ff ffab 	bl	9000d1fc <HAL_LTDC_ErrorCallback>
9000d2a6:	e7ba      	b.n	9000d21e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d2a8:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000d2aa:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d2ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000d2ae:	f022 0201 	bic.w	r2, r2, #1
9000d2b2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000d2b4:	2201      	movs	r2, #1
9000d2b6:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000d2b8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000d2ba:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000d2be:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000d2c2:	f7f5 fa9d 	bl	90002800 <HAL_LTDC_LineEventCallback>
9000d2c6:	e7ae      	b.n	9000d226 <HAL_LTDC_IRQHandler+0x22>

9000d2c8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000d2c8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000d2cc:	2b01      	cmp	r3, #1
9000d2ce:	f000 80c0 	beq.w	9000d452 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d2d2:	2302      	movs	r3, #2
{
9000d2d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d2d8:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d2dc:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d2e0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000d2e4:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d2e6:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d2ea:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d2ec:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d2f0:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d2f2:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000d2f6:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d2f8:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000d2fc:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d2fe:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d302:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d306:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000d468 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d30a:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000d30e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000d312:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d314:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d316:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d31a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d31c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d31e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d322:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000d324:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000d328:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000d32a:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000d32c:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d330:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d332:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000d334:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d338:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000d33c:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d33e:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d340:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000d344:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000d348:	440b      	add	r3, r1
9000d34a:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000d34e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d352:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d356:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d35a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d35e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000d362:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000d364:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d368:	68ab      	ldr	r3, [r5, #8]
9000d36a:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000d36e:	3301      	adds	r3, #1
9000d370:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000d374:	4403      	add	r3, r0
9000d376:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d37a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000d37c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000d380:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000d384:	f023 0307 	bic.w	r3, r3, #7
9000d388:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000d38c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d390:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000d394:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000d396:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000d39a:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000d39e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000d3a2:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000d3a6:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000d3aa:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000d3ae:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000d3b2:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000d3b6:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000d3ba:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000d3be:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000d3c2:	696b      	ldr	r3, [r5, #20]
9000d3c4:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d3c8:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d3cc:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d3ce:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d3d2:	6a28      	ldr	r0, [r5, #32]
9000d3d4:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000d3d6:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000d3da:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000d3de:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000d3e2:	2300      	movs	r3, #0
9000d3e4:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000d3e8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000d3ea:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d3ee:	bb59      	cbnz	r1, 9000d448 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000d3f0:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d3f2:	1abf      	subs	r7, r7, r2
9000d3f4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000d3f6:	fb03 f707 	mul.w	r7, r3, r7
9000d3fa:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d3fe:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d400:	3707      	adds	r7, #7
9000d402:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000d406:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000d40a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000d40e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000d412:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000d416:	4b12      	ldr	r3, [pc, #72]	; (9000d460 <HAL_LTDC_ConfigLayer+0x198>)
9000d418:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000d41c:	400b      	ands	r3, r1
9000d41e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000d422:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d426:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000d428:	f859 3006 	ldr.w	r3, [r9, r6]
9000d42c:	4313      	orrs	r3, r2
9000d42e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000d432:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000d434:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000d438:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000d43a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000d43e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000d442:	b003      	add	sp, #12
9000d444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000d448:	3901      	subs	r1, #1
9000d44a:	2906      	cmp	r1, #6
9000d44c:	d903      	bls.n	9000d456 <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000d44e:	2301      	movs	r3, #1
9000d450:	e7cf      	b.n	9000d3f2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000d452:	2002      	movs	r0, #2
}
9000d454:	4770      	bx	lr
9000d456:	4b03      	ldr	r3, [pc, #12]	; (9000d464 <HAL_LTDC_ConfigLayer+0x19c>)
9000d458:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000d45c:	e7c9      	b.n	9000d3f2 <HAL_LTDC_ConfigLayer+0x12a>
9000d45e:	bf00      	nop
9000d460:	fffff800 	.word	0xfffff800
9000d464:	9002d4c8 	.word	0x9002d4c8
9000d468:	fffff8f8 	.word	0xfffff8f8

9000d46c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000d46c:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000d470:	2a01      	cmp	r2, #1
9000d472:	d019      	beq.n	9000d4a8 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d474:	6802      	ldr	r2, [r0, #0]
9000d476:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d478:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000d47a:	f04f 0c00 	mov.w	ip, #0
{
9000d47e:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000d480:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d484:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000d486:	4c09      	ldr	r4, [pc, #36]	; (9000d4ac <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000d488:	f020 0001 	bic.w	r0, r0, #1
9000d48c:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d48e:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000d490:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000d492:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000d494:	4301      	orrs	r1, r0
9000d496:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000d498:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000d49c:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000d49e:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000d4a2:	f85d 4b04 	ldr.w	r4, [sp], #4
9000d4a6:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000d4a8:	2002      	movs	r0, #2
}
9000d4aa:	4770      	bx	lr
9000d4ac:	50001000 	.word	0x50001000

9000d4b0 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000d4b0:	b538      	push	{r3, r4, r5, lr}
9000d4b2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000d4b4:	f7fd f984 	bl	9000a7c0 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000d4b8:	2c00      	cmp	r4, #0
9000d4ba:	d05a      	beq.n	9000d572 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000d4bc:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d4be:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000d4c0:	2100      	movs	r1, #0
9000d4c2:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000d4c4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000d4c8:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000d4cc:	68da      	ldr	r2, [r3, #12]
9000d4ce:	f022 0201 	bic.w	r2, r2, #1
9000d4d2:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d4d4:	e005      	b.n	9000d4e2 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000d4d6:	f7fd f973 	bl	9000a7c0 <HAL_GetTick>
9000d4da:	1b43      	subs	r3, r0, r5
9000d4dc:	2b05      	cmp	r3, #5
9000d4de:	d841      	bhi.n	9000d564 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d4e0:	6823      	ldr	r3, [r4, #0]
9000d4e2:	68da      	ldr	r2, [r3, #12]
9000d4e4:	07d2      	lsls	r2, r2, #31
9000d4e6:	d4f6      	bmi.n	9000d4d6 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d4e8:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000d4ec:	69e0      	ldr	r0, [r4, #28]
9000d4ee:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d4f0:	68e1      	ldr	r1, [r4, #12]
9000d4f2:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d4f4:	4302      	orrs	r2, r0
9000d4f6:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d4f8:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000d4fa:	4302      	orrs	r2, r0
9000d4fc:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000d4fe:	4302      	orrs	r2, r0
9000d500:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000d502:	4302      	orrs	r2, r0
9000d504:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000d506:	4302      	orrs	r2, r0
9000d508:	68a0      	ldr	r0, [r4, #8]
9000d50a:	4302      	orrs	r2, r0
9000d50c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000d50e:	3801      	subs	r0, #1
9000d510:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d514:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000d516:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d518:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000d51c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d51e:	d103      	bne.n	9000d528 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000d520:	691a      	ldr	r2, [r3, #16]
9000d522:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000d526:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000d528:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d52a:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000d52c:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000d52e:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000d530:	db30      	blt.n	9000d594 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000d532:	b292      	uxth	r2, r2
9000d534:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000d536:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000d538:	2a00      	cmp	r2, #0
9000d53a:	db1c      	blt.n	9000d576 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d53c:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d53e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d542:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d546:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d548:	d021      	beq.n	9000d58e <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000d54a:	b2c0      	uxtb	r0, r0
9000d54c:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000d54e:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000d550:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000d552:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000d554:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d556:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000d558:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000d55a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000d55e:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000d562:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d564:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d566:	2303      	movs	r3, #3
      return HAL_ERROR;
9000d568:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000d56a:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d56c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000d570:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000d572:	2001      	movs	r0, #1
}
9000d574:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d576:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000d578:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d57a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000d57e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000d582:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000d584:	6a19      	ldr	r1, [r3, #32]
9000d586:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000d58a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000d58c:	d1dd      	bne.n	9000d54a <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000d58e:	2200      	movs	r2, #0
9000d590:	629a      	str	r2, [r3, #40]	; 0x28
9000d592:	e7dc      	b.n	9000d54e <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d594:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000d596:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d598:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d59c:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000d59e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000d5a0:	621a      	str	r2, [r3, #32]
9000d5a2:	e7c8      	b.n	9000d536 <HAL_MDMA_Init+0x86>

9000d5a4 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000d5a4:	b1f8      	cbz	r0, 9000d5e6 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000d5a6:	6802      	ldr	r2, [r0, #0]
9000d5a8:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000d5aa:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000d5ac:	68d0      	ldr	r0, [r2, #12]
{
9000d5ae:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000d5b0:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d5b4:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000d5b6:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000d5b8:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000d5ba:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000d5bc:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000d5be:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000d5c0:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000d5c2:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000d5c4:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000d5c6:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000d5c8:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000d5ca:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000d5cc:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000d5ce:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d5d0:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000d5d2:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000d5d6:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000d5da:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000d5de:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000d5e0:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000d5e4:	4770      	bx	lr
    return HAL_ERROR;
9000d5e6:	2001      	movs	r0, #1
}
9000d5e8:	4770      	bx	lr
9000d5ea:	bf00      	nop

9000d5ec <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000d5ec:	b310      	cbz	r0, 9000d634 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000d5ee:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000d5f0:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d5f4:	2801      	cmp	r0, #1
9000d5f6:	d01f      	beq.n	9000d638 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000d5f8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000d5fa:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d5fe:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000d602:	45f4      	cmp	ip, lr
9000d604:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000d608:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d60c:	d004      	beq.n	9000d618 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000d60e:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000d610:	2200      	movs	r2, #0
9000d612:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000d616:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000d618:	681d      	ldr	r5, [r3, #0]
9000d61a:	692c      	ldr	r4, [r5, #16]
9000d61c:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000d620:	d1f6      	bne.n	9000d610 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000d622:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000d624:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d626:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000d628:	b941      	cbnz	r1, 9000d63c <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d62a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d62e:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000d630:	612a      	str	r2, [r5, #16]
9000d632:	e7ed      	b.n	9000d610 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000d634:	2001      	movs	r0, #1
9000d636:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000d638:	2002      	movs	r0, #2
}
9000d63a:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d63c:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000d640:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000d642:	612a      	str	r2, [r5, #16]
9000d644:	e7e4      	b.n	9000d610 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000d646:	bf00      	nop

9000d648 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000d648:	2800      	cmp	r0, #0
9000d64a:	d06f      	beq.n	9000d72c <HAL_MDMA_Start_IT+0xe4>
9000d64c:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000d64e:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000d652:	2801      	cmp	r0, #1
9000d654:	d072      	beq.n	9000d73c <HAL_MDMA_Start_IT+0xf4>
9000d656:	2001      	movs	r0, #1
9000d658:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000d65c:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000d660:	2801      	cmp	r0, #1
9000d662:	d004      	beq.n	9000d66e <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000d664:	2300      	movs	r3, #0
    return HAL_BUSY;
9000d666:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000d668:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000d66c:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d66e:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d670:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d674:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000d678:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d67a:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000d67c:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d680:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000d684:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d688:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000d68c:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d690:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000d694:	68e5      	ldr	r5, [r4, #12]
9000d696:	f025 0501 	bic.w	r5, r5, #1
9000d69a:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000d69c:	6965      	ldr	r5, [r4, #20]
9000d69e:	ea00 0005 	and.w	r0, r0, r5
9000d6a2:	ea40 0003 	orr.w	r0, r0, r3
9000d6a6:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000d6a8:	6963      	ldr	r3, [r4, #20]
9000d6aa:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000d6ae:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000d6b2:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000d6b4:	f04f 031f 	mov.w	r3, #31
9000d6b8:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000d6ba:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000d6bc:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000d6be:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d6c0:	bf0c      	ite	eq
9000d6c2:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d6c6:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000d6ca:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000d6ce:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000d6d2:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000d6d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000d6d6:	bf0c      	ite	eq
9000d6d8:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000d6dc:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000d6e0:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000d6e2:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000d6e6:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000d6e8:	68e3      	ldr	r3, [r4, #12]
9000d6ea:	f043 0306 	orr.w	r3, r3, #6
9000d6ee:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000d6f0:	b11a      	cbz	r2, 9000d6fa <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000d6f2:	68e3      	ldr	r3, [r4, #12]
9000d6f4:	f043 0310 	orr.w	r3, r3, #16
9000d6f8:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d6fa:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000d6fe:	b11b      	cbz	r3, 9000d708 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000d700:	68e3      	ldr	r3, [r4, #12]
9000d702:	f043 0308 	orr.w	r3, r3, #8
9000d706:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000d708:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000d70c:	b11b      	cbz	r3, 9000d716 <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000d70e:	68e3      	ldr	r3, [r4, #12]
9000d710:	f043 0320 	orr.w	r3, r3, #32
9000d714:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000d716:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d718:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000d71c:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d720:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000d724:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000d726:	d003      	beq.n	9000d730 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000d728:	2000      	movs	r0, #0
}
9000d72a:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000d72c:	2001      	movs	r0, #1
9000d72e:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d730:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000d732:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000d734:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000d738:	60e3      	str	r3, [r4, #12]
}
9000d73a:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000d73c:	2002      	movs	r0, #2
}
9000d73e:	4770      	bx	lr

9000d740 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000d740:	4603      	mov	r3, r0
9000d742:	b188      	cbz	r0, 9000d768 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000d744:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000d748:	2a02      	cmp	r2, #2
9000d74a:	d003      	beq.n	9000d754 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d74c:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000d74e:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000d750:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000d752:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000d754:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d756:	2104      	movs	r1, #4
  return HAL_OK;
9000d758:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d75a:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000d75e:	68d3      	ldr	r3, [r2, #12]
9000d760:	f023 0301 	bic.w	r3, r3, #1
9000d764:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000d766:	4770      	bx	lr
    return HAL_ERROR;
9000d768:	2001      	movs	r0, #1
}
9000d76a:	4770      	bx	lr

9000d76c <HAL_MDMA_IRQHandler>:
{
9000d76c:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000d76e:	2300      	movs	r3, #0
{
9000d770:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d772:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000d776:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000d778:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d77a:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d77c:	4b57      	ldr	r3, [pc, #348]	; (9000d8dc <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d77e:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d780:	4a57      	ldr	r2, [pc, #348]	; (9000d8e0 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000d782:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000d784:	6823      	ldr	r3, [r4, #0]
9000d786:	441a      	add	r2, r3
9000d788:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000d78c:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000d790:	4202      	tst	r2, r0
9000d792:	f000 80a0 	beq.w	9000d8d6 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000d796:	681a      	ldr	r2, [r3, #0]
9000d798:	07d1      	lsls	r1, r2, #31
9000d79a:	d529      	bpl.n	9000d7f0 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000d79c:	68da      	ldr	r2, [r3, #12]
9000d79e:	0792      	lsls	r2, r2, #30
9000d7a0:	d526      	bpl.n	9000d7f0 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000d7a2:	68da      	ldr	r2, [r3, #12]
9000d7a4:	f022 0202 	bic.w	r2, r2, #2
9000d7a8:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000d7aa:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d7ac:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000d7ae:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000d7b0:	bf54      	ite	pl
9000d7b2:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000d7b6:	f041 0102 	orrmi.w	r1, r1, #2
9000d7ba:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000d7bc:	0591      	lsls	r1, r2, #22
9000d7be:	d503      	bpl.n	9000d7c8 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000d7c0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d7c2:	f041 0104 	orr.w	r1, r1, #4
9000d7c6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000d7c8:	05d0      	lsls	r0, r2, #23
9000d7ca:	d503      	bpl.n	9000d7d4 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000d7cc:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d7ce:	f041 0108 	orr.w	r1, r1, #8
9000d7d2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000d7d4:	0551      	lsls	r1, r2, #21
9000d7d6:	d503      	bpl.n	9000d7e0 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000d7d8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000d7da:	f041 0110 	orr.w	r1, r1, #16
9000d7de:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000d7e0:	0510      	lsls	r0, r2, #20
9000d7e2:	d503      	bpl.n	9000d7ec <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000d7e4:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000d7e6:	f042 0220 	orr.w	r2, r2, #32
9000d7ea:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000d7ec:	2201      	movs	r2, #1
9000d7ee:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000d7f0:	681a      	ldr	r2, [r3, #0]
9000d7f2:	06d1      	lsls	r1, r2, #27
9000d7f4:	d509      	bpl.n	9000d80a <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000d7f6:	68da      	ldr	r2, [r3, #12]
9000d7f8:	0692      	lsls	r2, r2, #26
9000d7fa:	d506      	bpl.n	9000d80a <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d7fc:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000d7fe:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000d800:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000d802:	b112      	cbz	r2, 9000d80a <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000d804:	4620      	mov	r0, r4
9000d806:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000d808:	6823      	ldr	r3, [r4, #0]
9000d80a:	681a      	ldr	r2, [r3, #0]
9000d80c:	0710      	lsls	r0, r2, #28
9000d80e:	d509      	bpl.n	9000d824 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000d810:	68da      	ldr	r2, [r3, #12]
9000d812:	06d1      	lsls	r1, r2, #27
9000d814:	d506      	bpl.n	9000d824 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d816:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000d818:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000d81a:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000d81c:	b112      	cbz	r2, 9000d824 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000d81e:	4620      	mov	r0, r4
9000d820:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000d822:	6823      	ldr	r3, [r4, #0]
9000d824:	681a      	ldr	r2, [r3, #0]
9000d826:	0752      	lsls	r2, r2, #29
9000d828:	d509      	bpl.n	9000d83e <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000d82a:	68da      	ldr	r2, [r3, #12]
9000d82c:	0710      	lsls	r0, r2, #28
9000d82e:	d506      	bpl.n	9000d83e <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d830:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d832:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000d834:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000d836:	b112      	cbz	r2, 9000d83e <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000d838:	4620      	mov	r0, r4
9000d83a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000d83c:	6823      	ldr	r3, [r4, #0]
9000d83e:	681a      	ldr	r2, [r3, #0]
9000d840:	0791      	lsls	r1, r2, #30
9000d842:	d516      	bpl.n	9000d872 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000d844:	68da      	ldr	r2, [r3, #12]
9000d846:	0752      	lsls	r2, r2, #29
9000d848:	d513      	bpl.n	9000d872 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000d84a:	68da      	ldr	r2, [r3, #12]
9000d84c:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000d850:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000d852:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000d856:	2a04      	cmp	r2, #4
9000d858:	d034      	beq.n	9000d8c4 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d85a:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000d85c:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000d85e:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000d860:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000d862:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000d864:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000d868:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000d86c:	b10b      	cbz	r3, 9000d872 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000d86e:	4620      	mov	r0, r4
9000d870:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000d872:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000d874:	2b00      	cmp	r3, #0
9000d876:	d02e      	beq.n	9000d8d6 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000d878:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d87a:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000d87c:	4b19      	ldr	r3, [pc, #100]	; (9000d8e4 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000d87e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000d882:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000d886:	68cb      	ldr	r3, [r1, #12]
9000d888:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000d88c:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000d88e:	60cb      	str	r3, [r1, #12]
9000d890:	e002      	b.n	9000d898 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000d892:	68cb      	ldr	r3, [r1, #12]
9000d894:	07d8      	lsls	r0, r3, #31
9000d896:	d504      	bpl.n	9000d8a2 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000d898:	9b01      	ldr	r3, [sp, #4]
9000d89a:	3301      	adds	r3, #1
9000d89c:	4293      	cmp	r3, r2
9000d89e:	9301      	str	r3, [sp, #4]
9000d8a0:	d9f7      	bls.n	9000d892 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000d8a2:	2300      	movs	r3, #0
9000d8a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000d8a8:	68cb      	ldr	r3, [r1, #12]
9000d8aa:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000d8ac:	bf4c      	ite	mi
9000d8ae:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000d8b0:	2301      	movpl	r3, #1
9000d8b2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000d8b6:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000d8b8:	b16b      	cbz	r3, 9000d8d6 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000d8ba:	4620      	mov	r0, r4
}
9000d8bc:	b003      	add	sp, #12
9000d8be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000d8c2:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000d8c4:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000d8c6:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000d8c8:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000d8ca:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000d8ce:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000d8d2:	2b00      	cmp	r3, #0
9000d8d4:	d1f1      	bne.n	9000d8ba <HAL_MDMA_IRQHandler+0x14e>
}
9000d8d6:	b003      	add	sp, #12
9000d8d8:	bd30      	pop	{r4, r5, pc}
9000d8da:	bf00      	nop
9000d8dc:	24000070 	.word	0x24000070
9000d8e0:	adffffc0 	.word	0xadffffc0
9000d8e4:	1b4e81b5 	.word	0x1b4e81b5

9000d8e8 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000d8e8:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d8ea:	4c10      	ldr	r4, [pc, #64]	; (9000d92c <HAL_PWREx_ConfigSupply+0x44>)
9000d8ec:	68e3      	ldr	r3, [r4, #12]
9000d8ee:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d8f2:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000d8f4:	d105      	bne.n	9000d902 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000d8f6:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000d8fa:	1a18      	subs	r0, r3, r0
9000d8fc:	bf18      	it	ne
9000d8fe:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000d900:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000d902:	f023 0307 	bic.w	r3, r3, #7
9000d906:	4303      	orrs	r3, r0
9000d908:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000d90a:	f7fc ff59 	bl	9000a7c0 <HAL_GetTick>
9000d90e:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d910:	e005      	b.n	9000d91e <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000d912:	f7fc ff55 	bl	9000a7c0 <HAL_GetTick>
9000d916:	1b40      	subs	r0, r0, r5
9000d918:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000d91c:	d804      	bhi.n	9000d928 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000d91e:	6863      	ldr	r3, [r4, #4]
9000d920:	049b      	lsls	r3, r3, #18
9000d922:	d5f6      	bpl.n	9000d912 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000d924:	2000      	movs	r0, #0
}
9000d926:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000d928:	2001      	movs	r0, #1
}
9000d92a:	bd38      	pop	{r3, r4, r5, pc}
9000d92c:	58024800 	.word	0x58024800

9000d930 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d930:	4b3b      	ldr	r3, [pc, #236]	; (9000da20 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000d932:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d934:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d936:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d938:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000d93a:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d93e:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000d940:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000d944:	d038      	beq.n	9000d9b8 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d946:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000d94a:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000d94e:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000d952:	fb05 f101 	mul.w	r1, r5, r1
9000d956:	2a01      	cmp	r2, #1
9000d958:	ee07 1a90 	vmov	s15, r1
9000d95c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000d960:	d002      	beq.n	9000d968 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000d962:	2a02      	cmp	r2, #2
9000d964:	d04e      	beq.n	9000da04 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000d966:	b34a      	cbz	r2, 9000d9bc <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d968:	ee07 0a90 	vmov	s15, r0
9000d96c:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000da24 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000d970:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d976:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000d97a:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000da28 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d97e:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000d982:	ee07 3a90 	vmov	s15, r3
9000d986:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000d98a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d98e:	eee7 7a25 	vfma.f32	s15, s14, s11
9000d992:	ee77 7a86 	vadd.f32	s15, s15, s12
9000d996:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000d99a:	4b21      	ldr	r3, [pc, #132]	; (9000da20 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000d99c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000d99e:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000d9a2:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000d9a4:	ee07 3a90 	vmov	s15, r3
9000d9a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000d9ac:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000d9b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000d9b4:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000d9b8:	bc30      	pop	{r4, r5}
9000d9ba:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d9bc:	681a      	ldr	r2, [r3, #0]
9000d9be:	0692      	lsls	r2, r2, #26
9000d9c0:	d527      	bpl.n	9000da12 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9c2:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9c4:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9c8:	4a18      	ldr	r2, [pc, #96]	; (9000da2c <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9ca:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000d9ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9d0:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d9d8:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000da28 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000d9dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d9e0:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000d9e2:	ee06 3a90 	vmov	s13, r3
9000d9e6:	ee06 2a10 	vmov	s12, r2
9000d9ea:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000d9ee:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000d9f2:	eee7 6a05 	vfma.f32	s13, s14, s10
9000d9f6:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000d9fa:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000d9fe:	ee66 6a87 	vmul.f32	s13, s13, s14
9000da02:	e7ca      	b.n	9000d99a <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000da04:	ee07 0a90 	vmov	s15, r0
9000da08:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000da30 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000da0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000da10:	e7b0      	b.n	9000d974 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000da12:	ee07 0a90 	vmov	s15, r0
9000da16:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000da34 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000da1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000da1e:	e7a9      	b.n	9000d974 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000da20:	58024400 	.word	0x58024400
9000da24:	4a742400 	.word	0x4a742400
9000da28:	39000000 	.word	0x39000000
9000da2c:	03d09000 	.word	0x03d09000
9000da30:	4bbebc20 	.word	0x4bbebc20
9000da34:	4c742400 	.word	0x4c742400

9000da38 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000da38:	2800      	cmp	r0, #0
9000da3a:	f000 81e8 	beq.w	9000de0e <HAL_RCC_OscConfig+0x3d6>
{
9000da3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000da40:	6803      	ldr	r3, [r0, #0]
9000da42:	4604      	mov	r4, r0
9000da44:	07d9      	lsls	r1, r3, #31
9000da46:	d52e      	bpl.n	9000daa6 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000da48:	49a4      	ldr	r1, [pc, #656]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000da4a:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000da4c:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000da4e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000da52:	2a10      	cmp	r2, #16
9000da54:	f000 8107 	beq.w	9000dc66 <HAL_RCC_OscConfig+0x22e>
9000da58:	2a18      	cmp	r2, #24
9000da5a:	f000 80ff 	beq.w	9000dc5c <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000da5e:	6863      	ldr	r3, [r4, #4]
9000da60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000da64:	f000 812a 	beq.w	9000dcbc <HAL_RCC_OscConfig+0x284>
9000da68:	2b00      	cmp	r3, #0
9000da6a:	f000 8168 	beq.w	9000dd3e <HAL_RCC_OscConfig+0x306>
9000da6e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000da72:	4b9a      	ldr	r3, [pc, #616]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000da74:	681a      	ldr	r2, [r3, #0]
9000da76:	f000 8289 	beq.w	9000df8c <HAL_RCC_OscConfig+0x554>
9000da7a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000da7e:	601a      	str	r2, [r3, #0]
9000da80:	681a      	ldr	r2, [r3, #0]
9000da82:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000da86:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000da88:	f7fc fe9a 	bl	9000a7c0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000da8c:	4e93      	ldr	r6, [pc, #588]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000da8e:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000da90:	e005      	b.n	9000da9e <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000da92:	f7fc fe95 	bl	9000a7c0 <HAL_GetTick>
9000da96:	1b40      	subs	r0, r0, r5
9000da98:	2864      	cmp	r0, #100	; 0x64
9000da9a:	f200 814e 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000da9e:	6833      	ldr	r3, [r6, #0]
9000daa0:	039b      	lsls	r3, r3, #14
9000daa2:	d5f6      	bpl.n	9000da92 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000daa4:	6823      	ldr	r3, [r4, #0]
9000daa6:	079d      	lsls	r5, r3, #30
9000daa8:	f100 808a 	bmi.w	9000dbc0 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000daac:	06d9      	lsls	r1, r3, #27
9000daae:	d533      	bpl.n	9000db18 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dab0:	4a8a      	ldr	r2, [pc, #552]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dab2:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dab4:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dab6:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000daba:	2b08      	cmp	r3, #8
9000dabc:	f000 80e3 	beq.w	9000dc86 <HAL_RCC_OscConfig+0x24e>
9000dac0:	2b18      	cmp	r3, #24
9000dac2:	f000 80db 	beq.w	9000dc7c <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000dac6:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000dac8:	4d84      	ldr	r5, [pc, #528]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000daca:	2b00      	cmp	r3, #0
9000dacc:	f000 816f 	beq.w	9000ddae <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000dad0:	682b      	ldr	r3, [r5, #0]
9000dad2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000dad6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dad8:	f7fc fe72 	bl	9000a7c0 <HAL_GetTick>
9000dadc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000dade:	e005      	b.n	9000daec <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000dae0:	f7fc fe6e 	bl	9000a7c0 <HAL_GetTick>
9000dae4:	1b80      	subs	r0, r0, r6
9000dae6:	2802      	cmp	r0, #2
9000dae8:	f200 8127 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000daec:	682b      	ldr	r3, [r5, #0]
9000daee:	05db      	lsls	r3, r3, #23
9000daf0:	d5f6      	bpl.n	9000dae0 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000daf2:	f7fc fe6b 	bl	9000a7cc <HAL_GetREVID>
9000daf6:	f241 0303 	movw	r3, #4099	; 0x1003
9000dafa:	4298      	cmp	r0, r3
9000dafc:	f200 826d 	bhi.w	9000dfda <HAL_RCC_OscConfig+0x5a2>
9000db00:	6a22      	ldr	r2, [r4, #32]
9000db02:	686b      	ldr	r3, [r5, #4]
9000db04:	2a20      	cmp	r2, #32
9000db06:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000db0a:	bf0c      	ite	eq
9000db0c:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000db10:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000db14:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000db16:	6823      	ldr	r3, [r4, #0]
9000db18:	071d      	lsls	r5, r3, #28
9000db1a:	d516      	bpl.n	9000db4a <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000db1c:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000db1e:	4d6f      	ldr	r5, [pc, #444]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000db20:	2b00      	cmp	r3, #0
9000db22:	f000 8122 	beq.w	9000dd6a <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000db26:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000db28:	f043 0301 	orr.w	r3, r3, #1
9000db2c:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000db2e:	f7fc fe47 	bl	9000a7c0 <HAL_GetTick>
9000db32:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000db34:	e005      	b.n	9000db42 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000db36:	f7fc fe43 	bl	9000a7c0 <HAL_GetTick>
9000db3a:	1b80      	subs	r0, r0, r6
9000db3c:	2802      	cmp	r0, #2
9000db3e:	f200 80fc 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000db42:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000db44:	0798      	lsls	r0, r3, #30
9000db46:	d5f6      	bpl.n	9000db36 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000db48:	6823      	ldr	r3, [r4, #0]
9000db4a:	069a      	lsls	r2, r3, #26
9000db4c:	d516      	bpl.n	9000db7c <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000db4e:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000db50:	4d62      	ldr	r5, [pc, #392]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000db52:	2b00      	cmp	r3, #0
9000db54:	f000 811a 	beq.w	9000dd8c <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000db58:	682b      	ldr	r3, [r5, #0]
9000db5a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000db5e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000db60:	f7fc fe2e 	bl	9000a7c0 <HAL_GetTick>
9000db64:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000db66:	e005      	b.n	9000db74 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000db68:	f7fc fe2a 	bl	9000a7c0 <HAL_GetTick>
9000db6c:	1b80      	subs	r0, r0, r6
9000db6e:	2802      	cmp	r0, #2
9000db70:	f200 80e3 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000db74:	682b      	ldr	r3, [r5, #0]
9000db76:	049f      	lsls	r7, r3, #18
9000db78:	d5f6      	bpl.n	9000db68 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000db7a:	6823      	ldr	r3, [r4, #0]
9000db7c:	0759      	lsls	r1, r3, #29
9000db7e:	f100 80a3 	bmi.w	9000dcc8 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000db82:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000db84:	b1d0      	cbz	r0, 9000dbbc <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000db86:	4d55      	ldr	r5, [pc, #340]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000db88:	692b      	ldr	r3, [r5, #16]
9000db8a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000db8e:	2b18      	cmp	r3, #24
9000db90:	f000 81ae 	beq.w	9000def0 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000db94:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000db96:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000db98:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000db9c:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000db9e:	f000 8142 	beq.w	9000de26 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000dba2:	f7fc fe0d 	bl	9000a7c0 <HAL_GetTick>
9000dba6:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dba8:	e005      	b.n	9000dbb6 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000dbaa:	f7fc fe09 	bl	9000a7c0 <HAL_GetTick>
9000dbae:	1b00      	subs	r0, r0, r4
9000dbb0:	2802      	cmp	r0, #2
9000dbb2:	f200 80c2 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000dbb6:	682b      	ldr	r3, [r5, #0]
9000dbb8:	019b      	lsls	r3, r3, #6
9000dbba:	d4f6      	bmi.n	9000dbaa <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000dbbc:	2000      	movs	r0, #0
}
9000dbbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000dbc0:	4a46      	ldr	r2, [pc, #280]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dbc2:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000dbc4:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dbc6:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000dbca:	d12d      	bne.n	9000dc28 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000dbcc:	4b43      	ldr	r3, [pc, #268]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dbce:	68e2      	ldr	r2, [r4, #12]
9000dbd0:	681b      	ldr	r3, [r3, #0]
9000dbd2:	0759      	lsls	r1, r3, #29
9000dbd4:	d501      	bpl.n	9000dbda <HAL_RCC_OscConfig+0x1a2>
9000dbd6:	2a00      	cmp	r2, #0
9000dbd8:	d04e      	beq.n	9000dc78 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dbda:	4d40      	ldr	r5, [pc, #256]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dbdc:	682b      	ldr	r3, [r5, #0]
9000dbde:	f023 0319 	bic.w	r3, r3, #25
9000dbe2:	4313      	orrs	r3, r2
9000dbe4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dbe6:	f7fc fdeb 	bl	9000a7c0 <HAL_GetTick>
9000dbea:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dbec:	e005      	b.n	9000dbfa <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dbee:	f7fc fde7 	bl	9000a7c0 <HAL_GetTick>
9000dbf2:	1b80      	subs	r0, r0, r6
9000dbf4:	2802      	cmp	r0, #2
9000dbf6:	f200 80a0 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dbfa:	682b      	ldr	r3, [r5, #0]
9000dbfc:	075b      	lsls	r3, r3, #29
9000dbfe:	d5f6      	bpl.n	9000dbee <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000dc00:	f7fc fde4 	bl	9000a7cc <HAL_GetREVID>
9000dc04:	f241 0303 	movw	r3, #4099	; 0x1003
9000dc08:	4298      	cmp	r0, r3
9000dc0a:	f200 80f7 	bhi.w	9000ddfc <HAL_RCC_OscConfig+0x3c4>
9000dc0e:	6922      	ldr	r2, [r4, #16]
9000dc10:	686b      	ldr	r3, [r5, #4]
9000dc12:	2a40      	cmp	r2, #64	; 0x40
9000dc14:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000dc18:	bf0c      	ite	eq
9000dc1a:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000dc1e:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000dc22:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000dc24:	6823      	ldr	r3, [r4, #0]
9000dc26:	e741      	b.n	9000daac <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000dc28:	2b18      	cmp	r3, #24
9000dc2a:	f000 80e3 	beq.w	9000ddf4 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dc2e:	4d2b      	ldr	r5, [pc, #172]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000dc30:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dc32:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000dc34:	2a00      	cmp	r2, #0
9000dc36:	f000 80cc 	beq.w	9000ddd2 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000dc3a:	f023 0319 	bic.w	r3, r3, #25
9000dc3e:	4313      	orrs	r3, r2
9000dc40:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dc42:	f7fc fdbd 	bl	9000a7c0 <HAL_GetTick>
9000dc46:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dc48:	e004      	b.n	9000dc54 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dc4a:	f7fc fdb9 	bl	9000a7c0 <HAL_GetTick>
9000dc4e:	1b80      	subs	r0, r0, r6
9000dc50:	2802      	cmp	r0, #2
9000dc52:	d872      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000dc54:	682b      	ldr	r3, [r5, #0]
9000dc56:	075f      	lsls	r7, r3, #29
9000dc58:	d5f7      	bpl.n	9000dc4a <HAL_RCC_OscConfig+0x212>
9000dc5a:	e7d1      	b.n	9000dc00 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000dc5c:	f001 0103 	and.w	r1, r1, #3
9000dc60:	2902      	cmp	r1, #2
9000dc62:	f47f aefc 	bne.w	9000da5e <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000dc66:	4a1d      	ldr	r2, [pc, #116]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dc68:	6812      	ldr	r2, [r2, #0]
9000dc6a:	0392      	lsls	r2, r2, #14
9000dc6c:	f57f af1b 	bpl.w	9000daa6 <HAL_RCC_OscConfig+0x6e>
9000dc70:	6862      	ldr	r2, [r4, #4]
9000dc72:	2a00      	cmp	r2, #0
9000dc74:	f47f af17 	bne.w	9000daa6 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000dc78:	2001      	movs	r0, #1
}
9000dc7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000dc7c:	f002 0203 	and.w	r2, r2, #3
9000dc80:	2a01      	cmp	r2, #1
9000dc82:	f47f af20 	bne.w	9000dac6 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000dc86:	4b15      	ldr	r3, [pc, #84]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dc88:	681b      	ldr	r3, [r3, #0]
9000dc8a:	05da      	lsls	r2, r3, #23
9000dc8c:	d502      	bpl.n	9000dc94 <HAL_RCC_OscConfig+0x25c>
9000dc8e:	69e3      	ldr	r3, [r4, #28]
9000dc90:	2b80      	cmp	r3, #128	; 0x80
9000dc92:	d1f1      	bne.n	9000dc78 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000dc94:	f7fc fd9a 	bl	9000a7cc <HAL_GetREVID>
9000dc98:	f241 0303 	movw	r3, #4099	; 0x1003
9000dc9c:	4298      	cmp	r0, r3
9000dc9e:	f200 80b8 	bhi.w	9000de12 <HAL_RCC_OscConfig+0x3da>
9000dca2:	6a22      	ldr	r2, [r4, #32]
9000dca4:	2a20      	cmp	r2, #32
9000dca6:	f000 81a7 	beq.w	9000dff8 <HAL_RCC_OscConfig+0x5c0>
9000dcaa:	490c      	ldr	r1, [pc, #48]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dcac:	684b      	ldr	r3, [r1, #4]
9000dcae:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000dcb2:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000dcb6:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dcb8:	6823      	ldr	r3, [r4, #0]
9000dcba:	e72d      	b.n	9000db18 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000dcbc:	4a07      	ldr	r2, [pc, #28]	; (9000dcdc <HAL_RCC_OscConfig+0x2a4>)
9000dcbe:	6813      	ldr	r3, [r2, #0]
9000dcc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000dcc4:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000dcc6:	e6df      	b.n	9000da88 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000dcc8:	4d05      	ldr	r5, [pc, #20]	; (9000dce0 <HAL_RCC_OscConfig+0x2a8>)
9000dcca:	682b      	ldr	r3, [r5, #0]
9000dccc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000dcd0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000dcd2:	f7fc fd75 	bl	9000a7c0 <HAL_GetTick>
9000dcd6:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dcd8:	e009      	b.n	9000dcee <HAL_RCC_OscConfig+0x2b6>
9000dcda:	bf00      	nop
9000dcdc:	58024400 	.word	0x58024400
9000dce0:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000dce4:	f7fc fd6c 	bl	9000a7c0 <HAL_GetTick>
9000dce8:	1b80      	subs	r0, r0, r6
9000dcea:	2864      	cmp	r0, #100	; 0x64
9000dcec:	d825      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dcee:	682b      	ldr	r3, [r5, #0]
9000dcf0:	05da      	lsls	r2, r3, #23
9000dcf2:	d5f7      	bpl.n	9000dce4 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dcf4:	68a3      	ldr	r3, [r4, #8]
9000dcf6:	2b01      	cmp	r3, #1
9000dcf8:	f000 8178 	beq.w	9000dfec <HAL_RCC_OscConfig+0x5b4>
9000dcfc:	2b00      	cmp	r3, #0
9000dcfe:	f000 8153 	beq.w	9000dfa8 <HAL_RCC_OscConfig+0x570>
9000dd02:	2b05      	cmp	r3, #5
9000dd04:	4ba5      	ldr	r3, [pc, #660]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
9000dd06:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000dd08:	f000 817f 	beq.w	9000e00a <HAL_RCC_OscConfig+0x5d2>
9000dd0c:	f022 0201 	bic.w	r2, r2, #1
9000dd10:	671a      	str	r2, [r3, #112]	; 0x70
9000dd12:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000dd14:	f022 0204 	bic.w	r2, r2, #4
9000dd18:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000dd1a:	f7fc fd51 	bl	9000a7c0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dd1e:	4e9f      	ldr	r6, [pc, #636]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dd20:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000dd24:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dd26:	e004      	b.n	9000dd32 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dd28:	f7fc fd4a 	bl	9000a7c0 <HAL_GetTick>
9000dd2c:	1b40      	subs	r0, r0, r5
9000dd2e:	42b8      	cmp	r0, r7
9000dd30:	d803      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dd32:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000dd34:	079b      	lsls	r3, r3, #30
9000dd36:	d5f7      	bpl.n	9000dd28 <HAL_RCC_OscConfig+0x2f0>
9000dd38:	e723      	b.n	9000db82 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000dd3a:	2003      	movs	r0, #3
}
9000dd3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000dd3e:	4d97      	ldr	r5, [pc, #604]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
9000dd40:	682b      	ldr	r3, [r5, #0]
9000dd42:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000dd46:	602b      	str	r3, [r5, #0]
9000dd48:	682b      	ldr	r3, [r5, #0]
9000dd4a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000dd4e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000dd50:	f7fc fd36 	bl	9000a7c0 <HAL_GetTick>
9000dd54:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000dd56:	e004      	b.n	9000dd62 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000dd58:	f7fc fd32 	bl	9000a7c0 <HAL_GetTick>
9000dd5c:	1b80      	subs	r0, r0, r6
9000dd5e:	2864      	cmp	r0, #100	; 0x64
9000dd60:	d8eb      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000dd62:	682b      	ldr	r3, [r5, #0]
9000dd64:	039f      	lsls	r7, r3, #14
9000dd66:	d4f7      	bmi.n	9000dd58 <HAL_RCC_OscConfig+0x320>
9000dd68:	e69c      	b.n	9000daa4 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000dd6a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dd6c:	f023 0301 	bic.w	r3, r3, #1
9000dd70:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000dd72:	f7fc fd25 	bl	9000a7c0 <HAL_GetTick>
9000dd76:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000dd78:	e004      	b.n	9000dd84 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000dd7a:	f7fc fd21 	bl	9000a7c0 <HAL_GetTick>
9000dd7e:	1b80      	subs	r0, r0, r6
9000dd80:	2802      	cmp	r0, #2
9000dd82:	d8da      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000dd84:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000dd86:	0799      	lsls	r1, r3, #30
9000dd88:	d4f7      	bmi.n	9000dd7a <HAL_RCC_OscConfig+0x342>
9000dd8a:	e6dd      	b.n	9000db48 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000dd8c:	682b      	ldr	r3, [r5, #0]
9000dd8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000dd92:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000dd94:	f7fc fd14 	bl	9000a7c0 <HAL_GetTick>
9000dd98:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000dd9a:	e004      	b.n	9000dda6 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000dd9c:	f7fc fd10 	bl	9000a7c0 <HAL_GetTick>
9000dda0:	1b80      	subs	r0, r0, r6
9000dda2:	2802      	cmp	r0, #2
9000dda4:	d8c9      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000dda6:	682b      	ldr	r3, [r5, #0]
9000dda8:	0498      	lsls	r0, r3, #18
9000ddaa:	d4f7      	bmi.n	9000dd9c <HAL_RCC_OscConfig+0x364>
9000ddac:	e6e5      	b.n	9000db7a <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000ddae:	682b      	ldr	r3, [r5, #0]
9000ddb0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000ddb4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ddb6:	f7fc fd03 	bl	9000a7c0 <HAL_GetTick>
9000ddba:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000ddbc:	e004      	b.n	9000ddc8 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000ddbe:	f7fc fcff 	bl	9000a7c0 <HAL_GetTick>
9000ddc2:	1b80      	subs	r0, r0, r6
9000ddc4:	2802      	cmp	r0, #2
9000ddc6:	d8b8      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000ddc8:	682b      	ldr	r3, [r5, #0]
9000ddca:	05df      	lsls	r7, r3, #23
9000ddcc:	d4f7      	bmi.n	9000ddbe <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ddce:	6823      	ldr	r3, [r4, #0]
9000ddd0:	e6a2      	b.n	9000db18 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000ddd2:	f023 0301 	bic.w	r3, r3, #1
9000ddd6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ddd8:	f7fc fcf2 	bl	9000a7c0 <HAL_GetTick>
9000dddc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ddde:	e004      	b.n	9000ddea <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000dde0:	f7fc fcee 	bl	9000a7c0 <HAL_GetTick>
9000dde4:	1b80      	subs	r0, r0, r6
9000dde6:	2802      	cmp	r0, #2
9000dde8:	d8a7      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000ddea:	682b      	ldr	r3, [r5, #0]
9000ddec:	0758      	lsls	r0, r3, #29
9000ddee:	d4f7      	bmi.n	9000dde0 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ddf0:	6823      	ldr	r3, [r4, #0]
9000ddf2:	e65b      	b.n	9000daac <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ddf4:	0790      	lsls	r0, r2, #30
9000ddf6:	f47f af1a 	bne.w	9000dc2e <HAL_RCC_OscConfig+0x1f6>
9000ddfa:	e6e7      	b.n	9000dbcc <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000ddfc:	686b      	ldr	r3, [r5, #4]
9000ddfe:	6922      	ldr	r2, [r4, #16]
9000de00:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000de04:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000de08:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000de0a:	6823      	ldr	r3, [r4, #0]
9000de0c:	e64e      	b.n	9000daac <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000de0e:	2001      	movs	r0, #1
}
9000de10:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000de12:	4a62      	ldr	r2, [pc, #392]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
9000de14:	6a21      	ldr	r1, [r4, #32]
9000de16:	68d3      	ldr	r3, [r2, #12]
9000de18:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000de1c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000de20:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000de22:	6823      	ldr	r3, [r4, #0]
9000de24:	e678      	b.n	9000db18 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000de26:	f7fc fccb 	bl	9000a7c0 <HAL_GetTick>
9000de2a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000de2c:	e004      	b.n	9000de38 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000de2e:	f7fc fcc7 	bl	9000a7c0 <HAL_GetTick>
9000de32:	1b80      	subs	r0, r0, r6
9000de34:	2802      	cmp	r0, #2
9000de36:	d880      	bhi.n	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000de38:	682b      	ldr	r3, [r5, #0]
9000de3a:	0199      	lsls	r1, r3, #6
9000de3c:	d4f7      	bmi.n	9000de2e <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000de3e:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000de40:	4b57      	ldr	r3, [pc, #348]	; (9000dfa0 <HAL_RCC_OscConfig+0x568>)
9000de42:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000de44:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000de46:	4957      	ldr	r1, [pc, #348]	; (9000dfa4 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000de48:	4e54      	ldr	r6, [pc, #336]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000de4a:	4313      	orrs	r3, r2
9000de4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000de4e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000de52:	62ab      	str	r3, [r5, #40]	; 0x28
9000de54:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000de58:	3b01      	subs	r3, #1
9000de5a:	3a01      	subs	r2, #1
9000de5c:	025b      	lsls	r3, r3, #9
9000de5e:	0412      	lsls	r2, r2, #16
9000de60:	b29b      	uxth	r3, r3
9000de62:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000de66:	4313      	orrs	r3, r2
9000de68:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000de6a:	3a01      	subs	r2, #1
9000de6c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000de70:	4313      	orrs	r3, r2
9000de72:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000de74:	3a01      	subs	r2, #1
9000de76:	0612      	lsls	r2, r2, #24
9000de78:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000de7c:	4313      	orrs	r3, r2
9000de7e:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000de80:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000de82:	f023 0301 	bic.w	r3, r3, #1
9000de86:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000de88:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000de8a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000de8c:	4011      	ands	r1, r2
9000de8e:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000de92:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000de94:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000de96:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000de98:	f023 030c 	bic.w	r3, r3, #12
9000de9c:	4313      	orrs	r3, r2
9000de9e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000dea0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dea2:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000dea4:	f023 0302 	bic.w	r3, r3, #2
9000dea8:	4313      	orrs	r3, r2
9000deaa:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000deac:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000deae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000deb2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000deb4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000deb6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000deba:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000debc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000debe:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000dec2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000dec4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000dec6:	f043 0301 	orr.w	r3, r3, #1
9000deca:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000decc:	682b      	ldr	r3, [r5, #0]
9000dece:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000ded2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ded4:	f7fc fc74 	bl	9000a7c0 <HAL_GetTick>
9000ded8:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000deda:	e005      	b.n	9000dee8 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000dedc:	f7fc fc70 	bl	9000a7c0 <HAL_GetTick>
9000dee0:	1b00      	subs	r0, r0, r4
9000dee2:	2802      	cmp	r0, #2
9000dee4:	f63f af29 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000dee8:	6833      	ldr	r3, [r6, #0]
9000deea:	019a      	lsls	r2, r3, #6
9000deec:	d5f6      	bpl.n	9000dedc <HAL_RCC_OscConfig+0x4a4>
9000deee:	e665      	b.n	9000dbbc <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000def0:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000def2:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000def4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000def6:	f43f ae62 	beq.w	9000dbbe <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000defa:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000defe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000df00:	428b      	cmp	r3, r1
9000df02:	f47f aeb9 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000df06:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000df0a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000df0c:	429a      	cmp	r2, r3
9000df0e:	f47f aeb3 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000df12:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000df14:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000df18:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000df1a:	429a      	cmp	r2, r3
9000df1c:	f47f aeac 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000df20:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000df22:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000df26:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000df28:	429a      	cmp	r2, r3
9000df2a:	f47f aea5 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000df2e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000df30:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000df34:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000df36:	429a      	cmp	r2, r3
9000df38:	f47f ae9e 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000df3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000df3e:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000df42:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000df44:	429e      	cmp	r6, r3
9000df46:	f47f ae97 	bne.w	9000dc78 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000df4a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000df4c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000df4e:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000df52:	429a      	cmp	r2, r3
9000df54:	f43f ae32 	beq.w	9000dbbc <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000df58:	4a10      	ldr	r2, [pc, #64]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
9000df5a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000df5c:	f023 0301 	bic.w	r3, r3, #1
9000df60:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000df62:	f7fc fc2d 	bl	9000a7c0 <HAL_GetTick>
9000df66:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000df68:	f7fc fc2a 	bl	9000a7c0 <HAL_GetTick>
9000df6c:	42a8      	cmp	r0, r5
9000df6e:	d0fb      	beq.n	9000df68 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000df70:	4a0a      	ldr	r2, [pc, #40]	; (9000df9c <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000df72:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000df74:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000df76:	4b0b      	ldr	r3, [pc, #44]	; (9000dfa4 <HAL_RCC_OscConfig+0x56c>)
9000df78:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000df7a:	4023      	ands	r3, r4
9000df7c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000df80:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000df82:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000df84:	f043 0301 	orr.w	r3, r3, #1
9000df88:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000df8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000df8c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000df90:	601a      	str	r2, [r3, #0]
9000df92:	681a      	ldr	r2, [r3, #0]
9000df94:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000df98:	601a      	str	r2, [r3, #0]
9000df9a:	e575      	b.n	9000da88 <HAL_RCC_OscConfig+0x50>
9000df9c:	58024400 	.word	0x58024400
9000dfa0:	fffffc0c 	.word	0xfffffc0c
9000dfa4:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dfa8:	4d1c      	ldr	r5, [pc, #112]	; (9000e01c <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dfaa:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dfae:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000dfb0:	f023 0301 	bic.w	r3, r3, #1
9000dfb4:	672b      	str	r3, [r5, #112]	; 0x70
9000dfb6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000dfb8:	f023 0304 	bic.w	r3, r3, #4
9000dfbc:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000dfbe:	f7fc fbff 	bl	9000a7c0 <HAL_GetTick>
9000dfc2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000dfc4:	e005      	b.n	9000dfd2 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dfc6:	f7fc fbfb 	bl	9000a7c0 <HAL_GetTick>
9000dfca:	1b80      	subs	r0, r0, r6
9000dfcc:	42b8      	cmp	r0, r7
9000dfce:	f63f aeb4 	bhi.w	9000dd3a <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000dfd2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000dfd4:	0798      	lsls	r0, r3, #30
9000dfd6:	d4f6      	bmi.n	9000dfc6 <HAL_RCC_OscConfig+0x58e>
9000dfd8:	e5d3      	b.n	9000db82 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000dfda:	68eb      	ldr	r3, [r5, #12]
9000dfdc:	6a22      	ldr	r2, [r4, #32]
9000dfde:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000dfe2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000dfe6:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000dfe8:	6823      	ldr	r3, [r4, #0]
9000dfea:	e595      	b.n	9000db18 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000dfec:	4a0b      	ldr	r2, [pc, #44]	; (9000e01c <HAL_RCC_OscConfig+0x5e4>)
9000dfee:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000dff0:	f043 0301 	orr.w	r3, r3, #1
9000dff4:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000dff6:	e690      	b.n	9000dd1a <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000dff8:	4a08      	ldr	r2, [pc, #32]	; (9000e01c <HAL_RCC_OscConfig+0x5e4>)
9000dffa:	6853      	ldr	r3, [r2, #4]
9000dffc:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000e000:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000e004:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000e006:	6823      	ldr	r3, [r4, #0]
9000e008:	e586      	b.n	9000db18 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000e00a:	f042 0204 	orr.w	r2, r2, #4
9000e00e:	671a      	str	r2, [r3, #112]	; 0x70
9000e010:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000e012:	f042 0201 	orr.w	r2, r2, #1
9000e016:	671a      	str	r2, [r3, #112]	; 0x70
9000e018:	e67f      	b.n	9000dd1a <HAL_RCC_OscConfig+0x2e2>
9000e01a:	bf00      	nop
9000e01c:	58024400 	.word	0x58024400

9000e020 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e020:	4a47      	ldr	r2, [pc, #284]	; (9000e140 <HAL_RCC_GetSysClockFreq+0x120>)
9000e022:	6913      	ldr	r3, [r2, #16]
9000e024:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e028:	2b10      	cmp	r3, #16
9000e02a:	d004      	beq.n	9000e036 <HAL_RCC_GetSysClockFreq+0x16>
9000e02c:	2b18      	cmp	r3, #24
9000e02e:	d00d      	beq.n	9000e04c <HAL_RCC_GetSysClockFreq+0x2c>
9000e030:	b11b      	cbz	r3, 9000e03a <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000e032:	4844      	ldr	r0, [pc, #272]	; (9000e144 <HAL_RCC_GetSysClockFreq+0x124>)
9000e034:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e036:	4844      	ldr	r0, [pc, #272]	; (9000e148 <HAL_RCC_GetSysClockFreq+0x128>)
9000e038:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e03a:	6813      	ldr	r3, [r2, #0]
9000e03c:	0699      	lsls	r1, r3, #26
9000e03e:	d54a      	bpl.n	9000e0d6 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e040:	6813      	ldr	r3, [r2, #0]
9000e042:	4842      	ldr	r0, [pc, #264]	; (9000e14c <HAL_RCC_GetSysClockFreq+0x12c>)
9000e044:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e048:	40d8      	lsrs	r0, r3
9000e04a:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e04c:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000e04e:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e050:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e052:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000e054:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e058:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000e05a:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000e05e:	d038      	beq.n	9000e0d2 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e060:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000e064:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000e068:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000e06c:	fb05 f101 	mul.w	r1, r5, r1
9000e070:	2b01      	cmp	r3, #1
9000e072:	ee07 1a90 	vmov	s15, r1
9000e076:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000e07a:	d002      	beq.n	9000e082 <HAL_RCC_GetSysClockFreq+0x62>
9000e07c:	2b02      	cmp	r3, #2
9000e07e:	d02c      	beq.n	9000e0da <HAL_RCC_GetSysClockFreq+0xba>
9000e080:	b393      	cbz	r3, 9000e0e8 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e082:	ee07 0a90 	vmov	s15, r0
9000e086:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000e150 <HAL_RCC_GetSysClockFreq+0x130>
9000e08a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e08e:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000e090:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000e094:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000e154 <HAL_RCC_GetSysClockFreq+0x134>
9000e098:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000e09c:	ee07 3a90 	vmov	s15, r3
9000e0a0:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000e0a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e0a8:	eee7 7a25 	vfma.f32	s15, s14, s11
9000e0ac:	ee77 7a86 	vadd.f32	s15, s15, s12
9000e0b0:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000e0b4:	4b22      	ldr	r3, [pc, #136]	; (9000e140 <HAL_RCC_GetSysClockFreq+0x120>)
9000e0b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000e0b8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000e0bc:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000e0be:	ee07 3a90 	vmov	s15, r3
9000e0c2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000e0c6:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000e0ca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000e0ce:	ee17 0a90 	vmov	r0, s15
}
9000e0d2:	bc30      	pop	{r4, r5}
9000e0d4:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e0d6:	481d      	ldr	r0, [pc, #116]	; (9000e14c <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000e0d8:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e0da:	ee07 0a90 	vmov	s15, r0
9000e0de:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000e158 <HAL_RCC_GetSysClockFreq+0x138>
9000e0e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e0e6:	e7d2      	b.n	9000e08e <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e0e8:	6813      	ldr	r3, [r2, #0]
9000e0ea:	069b      	lsls	r3, r3, #26
9000e0ec:	d520      	bpl.n	9000e130 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e0ee:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e0f0:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e0f4:	4915      	ldr	r1, [pc, #84]	; (9000e14c <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e0f6:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000e0fa:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e0fc:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e100:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e104:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000e154 <HAL_RCC_GetSysClockFreq+0x134>
9000e108:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e10c:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e10e:	ee06 3a90 	vmov	s13, r3
9000e112:	ee06 1a10 	vmov	s12, r1
9000e116:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000e11a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000e11e:	eee7 6a05 	vfma.f32	s13, s14, s10
9000e122:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000e126:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000e12a:	ee66 6a87 	vmul.f32	s13, s13, s14
9000e12e:	e7c1      	b.n	9000e0b4 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000e130:	ee07 0a90 	vmov	s15, r0
9000e134:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000e15c <HAL_RCC_GetSysClockFreq+0x13c>
9000e138:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000e13c:	e7a7      	b.n	9000e08e <HAL_RCC_GetSysClockFreq+0x6e>
9000e13e:	bf00      	nop
9000e140:	58024400 	.word	0x58024400
9000e144:	003d0900 	.word	0x003d0900
9000e148:	017d7840 	.word	0x017d7840
9000e14c:	03d09000 	.word	0x03d09000
9000e150:	4a742400 	.word	0x4a742400
9000e154:	39000000 	.word	0x39000000
9000e158:	4bbebc20 	.word	0x4bbebc20
9000e15c:	4c742400 	.word	0x4c742400

9000e160 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000e160:	2800      	cmp	r0, #0
9000e162:	f000 810c 	beq.w	9000e37e <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e166:	4a8c      	ldr	r2, [pc, #560]	; (9000e398 <HAL_RCC_ClockConfig+0x238>)
9000e168:	6813      	ldr	r3, [r2, #0]
9000e16a:	f003 030f 	and.w	r3, r3, #15
9000e16e:	428b      	cmp	r3, r1
{
9000e170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e174:	4604      	mov	r4, r0
9000e176:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000e178:	d20c      	bcs.n	9000e194 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e17a:	6813      	ldr	r3, [r2, #0]
9000e17c:	f023 030f 	bic.w	r3, r3, #15
9000e180:	430b      	orrs	r3, r1
9000e182:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e184:	6813      	ldr	r3, [r2, #0]
9000e186:	f003 030f 	and.w	r3, r3, #15
9000e18a:	428b      	cmp	r3, r1
9000e18c:	d002      	beq.n	9000e194 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000e18e:	2001      	movs	r0, #1
}
9000e190:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e194:	6823      	ldr	r3, [r4, #0]
9000e196:	075f      	lsls	r7, r3, #29
9000e198:	d50b      	bpl.n	9000e1b2 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e19a:	4980      	ldr	r1, [pc, #512]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e19c:	6920      	ldr	r0, [r4, #16]
9000e19e:	698a      	ldr	r2, [r1, #24]
9000e1a0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e1a4:	4290      	cmp	r0, r2
9000e1a6:	d904      	bls.n	9000e1b2 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e1a8:	698a      	ldr	r2, [r1, #24]
9000e1aa:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e1ae:	4302      	orrs	r2, r0
9000e1b0:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e1b2:	071e      	lsls	r6, r3, #28
9000e1b4:	d50b      	bpl.n	9000e1ce <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e1b6:	4979      	ldr	r1, [pc, #484]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e1b8:	6960      	ldr	r0, [r4, #20]
9000e1ba:	69ca      	ldr	r2, [r1, #28]
9000e1bc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e1c0:	4290      	cmp	r0, r2
9000e1c2:	d904      	bls.n	9000e1ce <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e1c4:	69ca      	ldr	r2, [r1, #28]
9000e1c6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e1ca:	4302      	orrs	r2, r0
9000e1cc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e1ce:	06d8      	lsls	r0, r3, #27
9000e1d0:	d50b      	bpl.n	9000e1ea <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e1d2:	4972      	ldr	r1, [pc, #456]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e1d4:	69a0      	ldr	r0, [r4, #24]
9000e1d6:	69ca      	ldr	r2, [r1, #28]
9000e1d8:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e1dc:	4290      	cmp	r0, r2
9000e1de:	d904      	bls.n	9000e1ea <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e1e0:	69ca      	ldr	r2, [r1, #28]
9000e1e2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e1e6:	4302      	orrs	r2, r0
9000e1e8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e1ea:	0699      	lsls	r1, r3, #26
9000e1ec:	d50b      	bpl.n	9000e206 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e1ee:	496b      	ldr	r1, [pc, #428]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e1f0:	69e0      	ldr	r0, [r4, #28]
9000e1f2:	6a0a      	ldr	r2, [r1, #32]
9000e1f4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e1f8:	4290      	cmp	r0, r2
9000e1fa:	d904      	bls.n	9000e206 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e1fc:	6a0a      	ldr	r2, [r1, #32]
9000e1fe:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e202:	4302      	orrs	r2, r0
9000e204:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e206:	079a      	lsls	r2, r3, #30
9000e208:	f140 80ab 	bpl.w	9000e362 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e20c:	4863      	ldr	r0, [pc, #396]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e20e:	68e1      	ldr	r1, [r4, #12]
9000e210:	6982      	ldr	r2, [r0, #24]
9000e212:	f002 020f 	and.w	r2, r2, #15
9000e216:	4291      	cmp	r1, r2
9000e218:	d904      	bls.n	9000e224 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e21a:	6982      	ldr	r2, [r0, #24]
9000e21c:	f022 020f 	bic.w	r2, r2, #15
9000e220:	430a      	orrs	r2, r1
9000e222:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e224:	07d8      	lsls	r0, r3, #31
9000e226:	d530      	bpl.n	9000e28a <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000e228:	4a5c      	ldr	r2, [pc, #368]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e22a:	68a1      	ldr	r1, [r4, #8]
9000e22c:	6993      	ldr	r3, [r2, #24]
9000e22e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000e232:	430b      	orrs	r3, r1
9000e234:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e236:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e238:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000e23a:	2902      	cmp	r1, #2
9000e23c:	f000 80a1 	beq.w	9000e382 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000e240:	2903      	cmp	r1, #3
9000e242:	f000 8098 	beq.w	9000e376 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000e246:	2901      	cmp	r1, #1
9000e248:	f000 80a1 	beq.w	9000e38e <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000e24c:	0758      	lsls	r0, r3, #29
9000e24e:	d59e      	bpl.n	9000e18e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e250:	4e52      	ldr	r6, [pc, #328]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e252:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000e256:	6933      	ldr	r3, [r6, #16]
9000e258:	f023 0307 	bic.w	r3, r3, #7
9000e25c:	430b      	orrs	r3, r1
9000e25e:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000e260:	f7fc faae 	bl	9000a7c0 <HAL_GetTick>
9000e264:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e266:	e005      	b.n	9000e274 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000e268:	f7fc faaa 	bl	9000a7c0 <HAL_GetTick>
9000e26c:	1bc0      	subs	r0, r0, r7
9000e26e:	4540      	cmp	r0, r8
9000e270:	f200 808b 	bhi.w	9000e38a <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000e274:	6933      	ldr	r3, [r6, #16]
9000e276:	6862      	ldr	r2, [r4, #4]
9000e278:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e27c:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000e280:	d1f2      	bne.n	9000e268 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000e282:	6823      	ldr	r3, [r4, #0]
9000e284:	0799      	lsls	r1, r3, #30
9000e286:	d506      	bpl.n	9000e296 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000e288:	68e1      	ldr	r1, [r4, #12]
9000e28a:	4844      	ldr	r0, [pc, #272]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e28c:	6982      	ldr	r2, [r0, #24]
9000e28e:	f002 020f 	and.w	r2, r2, #15
9000e292:	428a      	cmp	r2, r1
9000e294:	d869      	bhi.n	9000e36a <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000e296:	4940      	ldr	r1, [pc, #256]	; (9000e398 <HAL_RCC_ClockConfig+0x238>)
9000e298:	680a      	ldr	r2, [r1, #0]
9000e29a:	f002 020f 	and.w	r2, r2, #15
9000e29e:	42aa      	cmp	r2, r5
9000e2a0:	d90a      	bls.n	9000e2b8 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000e2a2:	680a      	ldr	r2, [r1, #0]
9000e2a4:	f022 020f 	bic.w	r2, r2, #15
9000e2a8:	432a      	orrs	r2, r5
9000e2aa:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000e2ac:	680a      	ldr	r2, [r1, #0]
9000e2ae:	f002 020f 	and.w	r2, r2, #15
9000e2b2:	42aa      	cmp	r2, r5
9000e2b4:	f47f af6b 	bne.w	9000e18e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000e2b8:	075a      	lsls	r2, r3, #29
9000e2ba:	d50b      	bpl.n	9000e2d4 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000e2bc:	4937      	ldr	r1, [pc, #220]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e2be:	6920      	ldr	r0, [r4, #16]
9000e2c0:	698a      	ldr	r2, [r1, #24]
9000e2c2:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e2c6:	4290      	cmp	r0, r2
9000e2c8:	d204      	bcs.n	9000e2d4 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000e2ca:	698a      	ldr	r2, [r1, #24]
9000e2cc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e2d0:	4302      	orrs	r2, r0
9000e2d2:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000e2d4:	071f      	lsls	r7, r3, #28
9000e2d6:	d50b      	bpl.n	9000e2f0 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000e2d8:	4930      	ldr	r1, [pc, #192]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e2da:	6960      	ldr	r0, [r4, #20]
9000e2dc:	69ca      	ldr	r2, [r1, #28]
9000e2de:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e2e2:	4290      	cmp	r0, r2
9000e2e4:	d204      	bcs.n	9000e2f0 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000e2e6:	69ca      	ldr	r2, [r1, #28]
9000e2e8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000e2ec:	4302      	orrs	r2, r0
9000e2ee:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000e2f0:	06de      	lsls	r6, r3, #27
9000e2f2:	d50b      	bpl.n	9000e30c <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000e2f4:	4929      	ldr	r1, [pc, #164]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e2f6:	69a0      	ldr	r0, [r4, #24]
9000e2f8:	69ca      	ldr	r2, [r1, #28]
9000e2fa:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e2fe:	4290      	cmp	r0, r2
9000e300:	d204      	bcs.n	9000e30c <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000e302:	69ca      	ldr	r2, [r1, #28]
9000e304:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000e308:	4302      	orrs	r2, r0
9000e30a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000e30c:	069d      	lsls	r5, r3, #26
9000e30e:	d50b      	bpl.n	9000e328 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000e310:	4a22      	ldr	r2, [pc, #136]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e312:	69e1      	ldr	r1, [r4, #28]
9000e314:	6a13      	ldr	r3, [r2, #32]
9000e316:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000e31a:	4299      	cmp	r1, r3
9000e31c:	d204      	bcs.n	9000e328 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000e31e:	6a13      	ldr	r3, [r2, #32]
9000e320:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000e324:	430b      	orrs	r3, r1
9000e326:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e328:	f7ff fe7a 	bl	9000e020 <HAL_RCC_GetSysClockFreq>
9000e32c:	4a1b      	ldr	r2, [pc, #108]	; (9000e39c <HAL_RCC_ClockConfig+0x23c>)
9000e32e:	4603      	mov	r3, r0
9000e330:	481b      	ldr	r0, [pc, #108]	; (9000e3a0 <HAL_RCC_ClockConfig+0x240>)
9000e332:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e334:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e336:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000e33a:	4d1a      	ldr	r5, [pc, #104]	; (9000e3a4 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e33c:	f002 020f 	and.w	r2, r2, #15
9000e340:	4c19      	ldr	r4, [pc, #100]	; (9000e3a8 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e342:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e344:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e346:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000e34a:	4818      	ldr	r0, [pc, #96]	; (9000e3ac <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e34c:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000e350:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000e352:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000e354:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e356:	40d3      	lsrs	r3, r2
9000e358:	6023      	str	r3, [r4, #0]
}
9000e35a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000e35e:	f7f5 b839 	b.w	900033d4 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000e362:	07da      	lsls	r2, r3, #31
9000e364:	f53f af60 	bmi.w	9000e228 <HAL_RCC_ClockConfig+0xc8>
9000e368:	e795      	b.n	9000e296 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000e36a:	6982      	ldr	r2, [r0, #24]
9000e36c:	f022 020f 	bic.w	r2, r2, #15
9000e370:	430a      	orrs	r2, r1
9000e372:	6182      	str	r2, [r0, #24]
9000e374:	e78f      	b.n	9000e296 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000e376:	019f      	lsls	r7, r3, #6
9000e378:	f53f af6a 	bmi.w	9000e250 <HAL_RCC_ClockConfig+0xf0>
9000e37c:	e707      	b.n	9000e18e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000e37e:	2001      	movs	r0, #1
}
9000e380:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000e382:	039b      	lsls	r3, r3, #14
9000e384:	f53f af64 	bmi.w	9000e250 <HAL_RCC_ClockConfig+0xf0>
9000e388:	e701      	b.n	9000e18e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000e38a:	2003      	movs	r0, #3
9000e38c:	e700      	b.n	9000e190 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000e38e:	05de      	lsls	r6, r3, #23
9000e390:	f53f af5e 	bmi.w	9000e250 <HAL_RCC_ClockConfig+0xf0>
9000e394:	e6fb      	b.n	9000e18e <HAL_RCC_ClockConfig+0x2e>
9000e396:	bf00      	nop
9000e398:	52002000 	.word	0x52002000
9000e39c:	58024400 	.word	0x58024400
9000e3a0:	9002d258 	.word	0x9002d258
9000e3a4:	24000070 	.word	0x24000070
9000e3a8:	24000074 	.word	0x24000074
9000e3ac:	2400007c 	.word	0x2400007c

9000e3b0 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e3b0:	4a1c      	ldr	r2, [pc, #112]	; (9000e424 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000e3b2:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e3b4:	6913      	ldr	r3, [r2, #16]
9000e3b6:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e3ba:	2b10      	cmp	r3, #16
9000e3bc:	d021      	beq.n	9000e402 <HAL_RCC_GetPCLK1Freq+0x52>
9000e3be:	2b18      	cmp	r3, #24
9000e3c0:	d02a      	beq.n	9000e418 <HAL_RCC_GetPCLK1Freq+0x68>
9000e3c2:	b303      	cbz	r3, 9000e406 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e3c4:	4818      	ldr	r0, [pc, #96]	; (9000e428 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e3c6:	4a17      	ldr	r2, [pc, #92]	; (9000e424 <HAL_RCC_GetPCLK1Freq+0x74>)
9000e3c8:	4918      	ldr	r1, [pc, #96]	; (9000e42c <HAL_RCC_GetPCLK1Freq+0x7c>)
9000e3ca:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e3cc:	4c18      	ldr	r4, [pc, #96]	; (9000e430 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e3ce:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e3d2:	4d18      	ldr	r5, [pc, #96]	; (9000e434 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e3d4:	5ccb      	ldrb	r3, [r1, r3]
9000e3d6:	f003 031f 	and.w	r3, r3, #31
9000e3da:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e3dc:	6993      	ldr	r3, [r2, #24]
9000e3de:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e3e2:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e3e4:	5ccb      	ldrb	r3, [r1, r3]
9000e3e6:	f003 031f 	and.w	r3, r3, #31
9000e3ea:	fa20 f303 	lsr.w	r3, r0, r3
9000e3ee:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000e3f0:	69d2      	ldr	r2, [r2, #28]
9000e3f2:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000e3f6:	5c88      	ldrb	r0, [r1, r2]
9000e3f8:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000e3fc:	fa23 f000 	lsr.w	r0, r3, r0
9000e400:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e402:	480d      	ldr	r0, [pc, #52]	; (9000e438 <HAL_RCC_GetPCLK1Freq+0x88>)
9000e404:	e7df      	b.n	9000e3c6 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e406:	6813      	ldr	r3, [r2, #0]
9000e408:	069b      	lsls	r3, r3, #26
9000e40a:	d508      	bpl.n	9000e41e <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e40c:	6813      	ldr	r3, [r2, #0]
9000e40e:	480b      	ldr	r0, [pc, #44]	; (9000e43c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e410:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e414:	40d8      	lsrs	r0, r3
9000e416:	e7d6      	b.n	9000e3c6 <HAL_RCC_GetPCLK1Freq+0x16>
9000e418:	f7ff fa8a 	bl	9000d930 <HAL_RCC_GetSysClockFreq.part.0>
9000e41c:	e7d3      	b.n	9000e3c6 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e41e:	4807      	ldr	r0, [pc, #28]	; (9000e43c <HAL_RCC_GetPCLK1Freq+0x8c>)
9000e420:	e7d1      	b.n	9000e3c6 <HAL_RCC_GetPCLK1Freq+0x16>
9000e422:	bf00      	nop
9000e424:	58024400 	.word	0x58024400
9000e428:	003d0900 	.word	0x003d0900
9000e42c:	9002d258 	.word	0x9002d258
9000e430:	24000074 	.word	0x24000074
9000e434:	24000070 	.word	0x24000070
9000e438:	017d7840 	.word	0x017d7840
9000e43c:	03d09000 	.word	0x03d09000

9000e440 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e440:	4a1c      	ldr	r2, [pc, #112]	; (9000e4b4 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000e442:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e444:	6913      	ldr	r3, [r2, #16]
9000e446:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000e44a:	2b10      	cmp	r3, #16
9000e44c:	d021      	beq.n	9000e492 <HAL_RCC_GetPCLK2Freq+0x52>
9000e44e:	2b18      	cmp	r3, #24
9000e450:	d02a      	beq.n	9000e4a8 <HAL_RCC_GetPCLK2Freq+0x68>
9000e452:	b303      	cbz	r3, 9000e496 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000e454:	4818      	ldr	r0, [pc, #96]	; (9000e4b8 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e456:	4a17      	ldr	r2, [pc, #92]	; (9000e4b4 <HAL_RCC_GetPCLK2Freq+0x74>)
9000e458:	4918      	ldr	r1, [pc, #96]	; (9000e4bc <HAL_RCC_GetPCLK2Freq+0x7c>)
9000e45a:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e45c:	4c18      	ldr	r4, [pc, #96]	; (9000e4c0 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e45e:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000e462:	4d18      	ldr	r5, [pc, #96]	; (9000e4c4 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000e464:	5ccb      	ldrb	r3, [r1, r3]
9000e466:	f003 031f 	and.w	r3, r3, #31
9000e46a:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e46c:	6993      	ldr	r3, [r2, #24]
9000e46e:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000e472:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000e474:	5ccb      	ldrb	r3, [r1, r3]
9000e476:	f003 031f 	and.w	r3, r3, #31
9000e47a:	fa20 f303 	lsr.w	r3, r0, r3
9000e47e:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000e480:	69d2      	ldr	r2, [r2, #28]
9000e482:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000e486:	5c88      	ldrb	r0, [r1, r2]
9000e488:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000e48c:	fa23 f000 	lsr.w	r0, r3, r0
9000e490:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000e492:	480d      	ldr	r0, [pc, #52]	; (9000e4c8 <HAL_RCC_GetPCLK2Freq+0x88>)
9000e494:	e7df      	b.n	9000e456 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000e496:	6813      	ldr	r3, [r2, #0]
9000e498:	069b      	lsls	r3, r3, #26
9000e49a:	d508      	bpl.n	9000e4ae <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000e49c:	6813      	ldr	r3, [r2, #0]
9000e49e:	480b      	ldr	r0, [pc, #44]	; (9000e4cc <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e4a0:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000e4a4:	40d8      	lsrs	r0, r3
9000e4a6:	e7d6      	b.n	9000e456 <HAL_RCC_GetPCLK2Freq+0x16>
9000e4a8:	f7ff fa42 	bl	9000d930 <HAL_RCC_GetSysClockFreq.part.0>
9000e4ac:	e7d3      	b.n	9000e456 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000e4ae:	4807      	ldr	r0, [pc, #28]	; (9000e4cc <HAL_RCC_GetPCLK2Freq+0x8c>)
9000e4b0:	e7d1      	b.n	9000e456 <HAL_RCC_GetPCLK2Freq+0x16>
9000e4b2:	bf00      	nop
9000e4b4:	58024400 	.word	0x58024400
9000e4b8:	003d0900 	.word	0x003d0900
9000e4bc:	9002d258 	.word	0x9002d258
9000e4c0:	24000074 	.word	0x24000074
9000e4c4:	24000070 	.word	0x24000070
9000e4c8:	017d7840 	.word	0x017d7840
9000e4cc:	03d09000 	.word	0x03d09000

9000e4d0 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e4d0:	4b13      	ldr	r3, [pc, #76]	; (9000e520 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000e4d2:	223f      	movs	r2, #63	; 0x3f
9000e4d4:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000e4d6:	691a      	ldr	r2, [r3, #16]
9000e4d8:	f002 0207 	and.w	r2, r2, #7
9000e4dc:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000e4de:	699a      	ldr	r2, [r3, #24]
9000e4e0:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000e4e4:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000e4e6:	699a      	ldr	r2, [r3, #24]
9000e4e8:	f002 020f 	and.w	r2, r2, #15
9000e4ec:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000e4ee:	699a      	ldr	r2, [r3, #24]
9000e4f0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e4f4:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000e4f6:	69da      	ldr	r2, [r3, #28]
9000e4f8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000e4fc:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000e4fe:	69da      	ldr	r2, [r3, #28]
9000e500:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000e504:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e506:	6a1b      	ldr	r3, [r3, #32]
{
9000e508:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e50a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e50e:	4c05      	ldr	r4, [pc, #20]	; (9000e524 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000e510:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e512:	6823      	ldr	r3, [r4, #0]
}
9000e514:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000e518:	f003 030f 	and.w	r3, r3, #15
9000e51c:	600b      	str	r3, [r1, #0]
}
9000e51e:	4770      	bx	lr
9000e520:	58024400 	.word	0x58024400
9000e524:	52002000 	.word	0x52002000

9000e528 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000e528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e52a:	4c3a      	ldr	r4, [pc, #232]	; (9000e614 <RCCEx_PLL2_Config+0xec>)
9000e52c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e52e:	f003 0303 	and.w	r3, r3, #3
9000e532:	2b03      	cmp	r3, #3
9000e534:	d067      	beq.n	9000e606 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000e536:	6823      	ldr	r3, [r4, #0]
9000e538:	4606      	mov	r6, r0
9000e53a:	460f      	mov	r7, r1
9000e53c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000e540:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e542:	f7fc f93d 	bl	9000a7c0 <HAL_GetTick>
9000e546:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e548:	e004      	b.n	9000e554 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e54a:	f7fc f939 	bl	9000a7c0 <HAL_GetTick>
9000e54e:	1b43      	subs	r3, r0, r5
9000e550:	2b02      	cmp	r3, #2
9000e552:	d856      	bhi.n	9000e602 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000e554:	6823      	ldr	r3, [r4, #0]
9000e556:	011a      	lsls	r2, r3, #4
9000e558:	d4f7      	bmi.n	9000e54a <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000e55a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e55c:	6832      	ldr	r2, [r6, #0]
9000e55e:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000e562:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e566:	62a3      	str	r3, [r4, #40]	; 0x28
9000e568:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e56c:	3b01      	subs	r3, #1
9000e56e:	3a01      	subs	r2, #1
9000e570:	025b      	lsls	r3, r3, #9
9000e572:	0412      	lsls	r2, r2, #16
9000e574:	b29b      	uxth	r3, r3
9000e576:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e57a:	4313      	orrs	r3, r2
9000e57c:	6872      	ldr	r2, [r6, #4]
9000e57e:	3a01      	subs	r2, #1
9000e580:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e584:	4313      	orrs	r3, r2
9000e586:	6932      	ldr	r2, [r6, #16]
9000e588:	3a01      	subs	r2, #1
9000e58a:	0612      	lsls	r2, r2, #24
9000e58c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e590:	4313      	orrs	r3, r2
9000e592:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000e594:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e596:	6972      	ldr	r2, [r6, #20]
9000e598:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000e59c:	4313      	orrs	r3, r2
9000e59e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e5a0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e5a2:	69b3      	ldr	r3, [r6, #24]
9000e5a4:	f022 0220 	bic.w	r2, r2, #32
9000e5a8:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e5aa:	4b1b      	ldr	r3, [pc, #108]	; (9000e618 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000e5ac:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000e5ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e5b0:	f022 0210 	bic.w	r2, r2, #16
9000e5b4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000e5b6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000e5b8:	69f2      	ldr	r2, [r6, #28]
9000e5ba:	400b      	ands	r3, r1
9000e5bc:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e5c0:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000e5c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e5c4:	f043 0310 	orr.w	r3, r3, #16
9000e5c8:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e5ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e5cc:	b1ef      	cbz	r7, 9000e60a <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e5ce:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000e5d0:	bf0c      	ite	eq
9000e5d2:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000e5d6:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000e5da:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000e5dc:	4c0d      	ldr	r4, [pc, #52]	; (9000e614 <RCCEx_PLL2_Config+0xec>)
9000e5de:	6823      	ldr	r3, [r4, #0]
9000e5e0:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000e5e4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e5e6:	f7fc f8eb 	bl	9000a7c0 <HAL_GetTick>
9000e5ea:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e5ec:	e004      	b.n	9000e5f8 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000e5ee:	f7fc f8e7 	bl	9000a7c0 <HAL_GetTick>
9000e5f2:	1b40      	subs	r0, r0, r5
9000e5f4:	2802      	cmp	r0, #2
9000e5f6:	d804      	bhi.n	9000e602 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000e5f8:	6823      	ldr	r3, [r4, #0]
9000e5fa:	011b      	lsls	r3, r3, #4
9000e5fc:	d5f7      	bpl.n	9000e5ee <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000e5fe:	2000      	movs	r0, #0
}
9000e600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e602:	2003      	movs	r0, #3
}
9000e604:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e606:	2001      	movs	r0, #1
}
9000e608:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000e60a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000e60e:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e610:	e7e4      	b.n	9000e5dc <RCCEx_PLL2_Config+0xb4>
9000e612:	bf00      	nop
9000e614:	58024400 	.word	0x58024400
9000e618:	ffff0007 	.word	0xffff0007

9000e61c <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000e61c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e61e:	4c3a      	ldr	r4, [pc, #232]	; (9000e708 <RCCEx_PLL3_Config+0xec>)
9000e620:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e622:	f003 0303 	and.w	r3, r3, #3
9000e626:	2b03      	cmp	r3, #3
9000e628:	d067      	beq.n	9000e6fa <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000e62a:	6823      	ldr	r3, [r4, #0]
9000e62c:	4606      	mov	r6, r0
9000e62e:	460f      	mov	r7, r1
9000e630:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000e634:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e636:	f7fc f8c3 	bl	9000a7c0 <HAL_GetTick>
9000e63a:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e63c:	e004      	b.n	9000e648 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e63e:	f7fc f8bf 	bl	9000a7c0 <HAL_GetTick>
9000e642:	1b43      	subs	r3, r0, r5
9000e644:	2b02      	cmp	r3, #2
9000e646:	d856      	bhi.n	9000e6f6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000e648:	6823      	ldr	r3, [r4, #0]
9000e64a:	009a      	lsls	r2, r3, #2
9000e64c:	d4f7      	bmi.n	9000e63e <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000e64e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000e650:	6832      	ldr	r2, [r6, #0]
9000e652:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000e656:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000e65a:	62a3      	str	r3, [r4, #40]	; 0x28
9000e65c:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000e660:	3b01      	subs	r3, #1
9000e662:	3a01      	subs	r2, #1
9000e664:	025b      	lsls	r3, r3, #9
9000e666:	0412      	lsls	r2, r2, #16
9000e668:	b29b      	uxth	r3, r3
9000e66a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000e66e:	4313      	orrs	r3, r2
9000e670:	6872      	ldr	r2, [r6, #4]
9000e672:	3a01      	subs	r2, #1
9000e674:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000e678:	4313      	orrs	r3, r2
9000e67a:	6932      	ldr	r2, [r6, #16]
9000e67c:	3a01      	subs	r2, #1
9000e67e:	0612      	lsls	r2, r2, #24
9000e680:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000e684:	4313      	orrs	r3, r2
9000e686:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000e688:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e68a:	6972      	ldr	r2, [r6, #20]
9000e68c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000e690:	4313      	orrs	r3, r2
9000e692:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e694:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e696:	69b3      	ldr	r3, [r6, #24]
9000e698:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000e69c:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e69e:	4b1b      	ldr	r3, [pc, #108]	; (9000e70c <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000e6a0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000e6a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000e6a4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000e6a8:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000e6aa:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000e6ac:	69f2      	ldr	r2, [r6, #28]
9000e6ae:	400b      	ands	r3, r1
9000e6b0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000e6b4:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000e6b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000e6b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000e6bc:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e6be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000e6c0:	b1ef      	cbz	r7, 9000e6fe <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000e6c2:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000e6c4:	bf0c      	ite	eq
9000e6c6:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000e6ca:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000e6ce:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000e6d0:	4c0d      	ldr	r4, [pc, #52]	; (9000e708 <RCCEx_PLL3_Config+0xec>)
9000e6d2:	6823      	ldr	r3, [r4, #0]
9000e6d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000e6d8:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000e6da:	f7fc f871 	bl	9000a7c0 <HAL_GetTick>
9000e6de:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e6e0:	e004      	b.n	9000e6ec <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000e6e2:	f7fc f86d 	bl	9000a7c0 <HAL_GetTick>
9000e6e6:	1b40      	subs	r0, r0, r5
9000e6e8:	2802      	cmp	r0, #2
9000e6ea:	d804      	bhi.n	9000e6f6 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000e6ec:	6823      	ldr	r3, [r4, #0]
9000e6ee:	009b      	lsls	r3, r3, #2
9000e6f0:	d5f7      	bpl.n	9000e6e2 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000e6f2:	2000      	movs	r0, #0
}
9000e6f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000e6f6:	2003      	movs	r0, #3
}
9000e6f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000e6fa:	2001      	movs	r0, #1
}
9000e6fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000e6fe:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000e702:	62e3      	str	r3, [r4, #44]	; 0x2c
9000e704:	e7e4      	b.n	9000e6d0 <RCCEx_PLL3_Config+0xb4>
9000e706:	bf00      	nop
9000e708:	58024400 	.word	0x58024400
9000e70c:	ffff0007 	.word	0xffff0007

9000e710 <HAL_RCCEx_PeriphCLKConfig>:
{
9000e710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e714:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000e718:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000e71a:	011d      	lsls	r5, r3, #4
9000e71c:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000e720:	d523      	bpl.n	9000e76a <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e722:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000e724:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e728:	f000 8553 	beq.w	9000f1d2 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000e72c:	d812      	bhi.n	9000e754 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000e72e:	2900      	cmp	r1, #0
9000e730:	f000 85a9 	beq.w	9000f286 <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000e734:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000e738:	f040 85a2 	bne.w	9000f280 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000e73c:	2102      	movs	r1, #2
9000e73e:	3008      	adds	r0, #8
9000e740:	f7ff fef2 	bl	9000e528 <RCCEx_PLL2_Config>
9000e744:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000e746:	2e00      	cmp	r6, #0
9000e748:	f040 8522 	bne.w	9000f190 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e74c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e74e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e752:	e003      	b.n	9000e75c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000e754:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000e758:	f040 8592 	bne.w	9000f280 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e75c:	4dae      	ldr	r5, [pc, #696]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e75e:	2600      	movs	r6, #0
9000e760:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000e762:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000e766:	4301      	orrs	r1, r0
9000e768:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e76a:	05d8      	lsls	r0, r3, #23
9000e76c:	d50a      	bpl.n	9000e784 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000e76e:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000e770:	2904      	cmp	r1, #4
9000e772:	d806      	bhi.n	9000e782 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000e774:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e778:	053d0536 	.word	0x053d0536
9000e77c:	0323051a 	.word	0x0323051a
9000e780:	0323      	.short	0x0323
9000e782:	2601      	movs	r6, #1
9000e784:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e786:	0599      	lsls	r1, r3, #22
9000e788:	d51d      	bpl.n	9000e7c6 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000e78a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000e78c:	2980      	cmp	r1, #128	; 0x80
9000e78e:	f000 8516 	beq.w	9000f1be <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000e792:	f200 80f9 	bhi.w	9000e988 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000e796:	2900      	cmp	r1, #0
9000e798:	f000 8433 	beq.w	9000f002 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000e79c:	2940      	cmp	r1, #64	; 0x40
9000e79e:	f040 80fa 	bne.w	9000e996 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e7a2:	2100      	movs	r1, #0
9000e7a4:	f104 0008 	add.w	r0, r4, #8
9000e7a8:	f7ff febe 	bl	9000e528 <RCCEx_PLL2_Config>
9000e7ac:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e7ae:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7b2:	2d00      	cmp	r5, #0
9000e7b4:	f040 83fe 	bne.w	9000efb4 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000e7b8:	4f97      	ldr	r7, [pc, #604]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e7ba:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000e7bc:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e7be:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000e7c2:	4301      	orrs	r1, r0
9000e7c4:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e7c6:	055f      	lsls	r7, r3, #21
9000e7c8:	d521      	bpl.n	9000e80e <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e7ca:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000e7ce:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000e7d2:	f000 8521 	beq.w	9000f218 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000e7d6:	f200 80e1 	bhi.w	9000e99c <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000e7da:	2900      	cmp	r1, #0
9000e7dc:	f000 8418 	beq.w	9000f010 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000e7e0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000e7e4:	f040 80e2 	bne.w	9000e9ac <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e7e8:	2100      	movs	r1, #0
9000e7ea:	f104 0008 	add.w	r0, r4, #8
9000e7ee:	f7ff fe9b 	bl	9000e528 <RCCEx_PLL2_Config>
9000e7f2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e7f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e7f8:	2d00      	cmp	r5, #0
9000e7fa:	f040 83e2 	bne.w	9000efc2 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000e7fe:	4f86      	ldr	r7, [pc, #536]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e800:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000e804:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e806:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000e80a:	4301      	orrs	r1, r0
9000e80c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e80e:	0518      	lsls	r0, r3, #20
9000e810:	d521      	bpl.n	9000e856 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e812:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000e816:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000e81a:	f000 84bd 	beq.w	9000f198 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000e81e:	f200 80c8 	bhi.w	9000e9b2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000e822:	2900      	cmp	r1, #0
9000e824:	f000 83e7 	beq.w	9000eff6 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000e828:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000e82c:	f040 80c9 	bne.w	9000e9c2 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e830:	2100      	movs	r1, #0
9000e832:	f104 0008 	add.w	r0, r4, #8
9000e836:	f7ff fe77 	bl	9000e528 <RCCEx_PLL2_Config>
9000e83a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e83c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e840:	2d00      	cmp	r5, #0
9000e842:	f040 83b5 	bne.w	9000efb0 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000e846:	4f74      	ldr	r7, [pc, #464]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e848:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000e84c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e84e:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000e852:	4301      	orrs	r1, r0
9000e854:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e856:	0199      	lsls	r1, r3, #6
9000e858:	d518      	bpl.n	9000e88c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000e85a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000e85c:	2920      	cmp	r1, #32
9000e85e:	f000 841f 	beq.w	9000f0a0 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000e862:	f200 80b1 	bhi.w	9000e9c8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000e866:	b139      	cbz	r1, 9000e878 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e868:	2910      	cmp	r1, #16
9000e86a:	f040 80b0 	bne.w	9000e9ce <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e86e:	486a      	ldr	r0, [pc, #424]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e870:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000e872:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000e876:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000e878:	2d00      	cmp	r5, #0
9000e87a:	f040 83d8 	bne.w	9000f02e <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000e87e:	4f66      	ldr	r7, [pc, #408]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e880:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000e882:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000e884:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000e888:	4301      	orrs	r1, r0
9000e88a:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000e88c:	04df      	lsls	r7, r3, #19
9000e88e:	d51f      	bpl.n	9000e8d0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e890:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000e892:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000e896:	f000 84b5 	beq.w	9000f204 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000e89a:	f200 809b 	bhi.w	9000e9d4 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000e89e:	2900      	cmp	r1, #0
9000e8a0:	f000 83a3 	beq.w	9000efea <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000e8a4:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000e8a8:	f040 809c 	bne.w	9000e9e4 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000e8ac:	2100      	movs	r1, #0
9000e8ae:	f104 0008 	add.w	r0, r4, #8
9000e8b2:	f7ff fe39 	bl	9000e528 <RCCEx_PLL2_Config>
9000e8b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e8b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e8bc:	2d00      	cmp	r5, #0
9000e8be:	f040 837b 	bne.w	9000efb8 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000e8c2:	4f55      	ldr	r7, [pc, #340]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e8c4:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000e8c6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e8c8:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000e8cc:	4301      	orrs	r1, r0
9000e8ce:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e8d0:	0498      	lsls	r0, r3, #18
9000e8d2:	d51d      	bpl.n	9000e910 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e8d4:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000e8d6:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000e8da:	f000 8410 	beq.w	9000f0fe <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000e8de:	f200 8084 	bhi.w	9000e9ea <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000e8e2:	b159      	cbz	r1, 9000e8fc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e8e4:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000e8e8:	f040 8087 	bne.w	9000e9fa <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e8ec:	2101      	movs	r1, #1
9000e8ee:	f104 0008 	add.w	r0, r4, #8
9000e8f2:	f7ff fe19 	bl	9000e528 <RCCEx_PLL2_Config>
9000e8f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e8f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e8fc:	2d00      	cmp	r5, #0
9000e8fe:	f040 839a 	bne.w	9000f036 <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000e902:	4f45      	ldr	r7, [pc, #276]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e904:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000e906:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000e908:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000e90c:	4301      	orrs	r1, r0
9000e90e:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e910:	0459      	lsls	r1, r3, #17
9000e912:	d51d      	bpl.n	9000e950 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000e914:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000e918:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e91c:	f000 83fb 	beq.w	9000f116 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000e920:	d86e      	bhi.n	9000ea00 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000e922:	b151      	cbz	r1, 9000e93a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000e924:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e928:	d172      	bne.n	9000ea10 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000e92a:	2101      	movs	r1, #1
9000e92c:	f104 0008 	add.w	r0, r4, #8
9000e930:	f7ff fdfa 	bl	9000e528 <RCCEx_PLL2_Config>
9000e934:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e936:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e93a:	2d00      	cmp	r5, #0
9000e93c:	f040 837f 	bne.w	9000f03e <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000e940:	4f35      	ldr	r7, [pc, #212]	; (9000ea18 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000e942:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000e946:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000e948:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000e94c:	4301      	orrs	r1, r0
9000e94e:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e950:	041f      	lsls	r7, r3, #16
9000e952:	d50d      	bpl.n	9000e970 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000e954:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000e956:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000e95a:	f000 83c8 	beq.w	9000f0ee <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000e95e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000e962:	f000 823b 	beq.w	9000eddc <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000e966:	2900      	cmp	r1, #0
9000e968:	f000 8240 	beq.w	9000edec <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000e96c:	2601      	movs	r6, #1
9000e96e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e970:	01d8      	lsls	r0, r3, #7
9000e972:	d562      	bpl.n	9000ea3a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000e974:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000e976:	2903      	cmp	r1, #3
9000e978:	f200 84bf 	bhi.w	9000f2fa <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000e97c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000e980:	004e0053 	.word	0x004e0053
9000e984:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000e988:	29c0      	cmp	r1, #192	; 0xc0
9000e98a:	f43f af12 	beq.w	9000e7b2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e98e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000e992:	f43f af0e 	beq.w	9000e7b2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000e996:	2601      	movs	r6, #1
9000e998:	4635      	mov	r5, r6
9000e99a:	e714      	b.n	9000e7c6 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000e99c:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000e9a0:	f43f af2a 	beq.w	9000e7f8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e9a4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000e9a8:	f43f af26 	beq.w	9000e7f8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000e9ac:	2601      	movs	r6, #1
9000e9ae:	4635      	mov	r5, r6
9000e9b0:	e72d      	b.n	9000e80e <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000e9b2:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000e9b6:	f43f af43 	beq.w	9000e840 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e9ba:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000e9be:	f43f af3f 	beq.w	9000e840 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000e9c2:	2601      	movs	r6, #1
9000e9c4:	4635      	mov	r5, r6
9000e9c6:	e746      	b.n	9000e856 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000e9c8:	2930      	cmp	r1, #48	; 0x30
9000e9ca:	f43f af55 	beq.w	9000e878 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000e9ce:	2601      	movs	r6, #1
9000e9d0:	4635      	mov	r5, r6
9000e9d2:	e75b      	b.n	9000e88c <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000e9d4:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000e9d8:	f43f af70 	beq.w	9000e8bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e9dc:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000e9e0:	f43f af6c 	beq.w	9000e8bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000e9e4:	2601      	movs	r6, #1
9000e9e6:	4635      	mov	r5, r6
9000e9e8:	e772      	b.n	9000e8d0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000e9ea:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000e9ee:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000e9f2:	d083      	beq.n	9000e8fc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e9f4:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000e9f8:	d080      	beq.n	9000e8fc <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000e9fa:	2601      	movs	r6, #1
9000e9fc:	4635      	mov	r5, r6
9000e9fe:	e787      	b.n	9000e910 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000ea00:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000ea04:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000ea08:	d097      	beq.n	9000e93a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ea0a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000ea0e:	d094      	beq.n	9000e93a <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000ea10:	2601      	movs	r6, #1
9000ea12:	4635      	mov	r5, r6
9000ea14:	e79c      	b.n	9000e950 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000ea16:	bf00      	nop
9000ea18:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ea1c:	4839      	ldr	r0, [pc, #228]	; (9000eb04 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ea1e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000ea20:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000ea24:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000ea26:	2d00      	cmp	r5, #0
9000ea28:	f040 8303 	bne.w	9000f032 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000ea2c:	4f35      	ldr	r7, [pc, #212]	; (9000eb04 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ea2e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000ea30:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000ea32:	f021 0103 	bic.w	r1, r1, #3
9000ea36:	4301      	orrs	r1, r0
9000ea38:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000ea3a:	0259      	lsls	r1, r3, #9
9000ea3c:	f100 826a 	bmi.w	9000ef14 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ea40:	07d8      	lsls	r0, r3, #31
9000ea42:	d52f      	bpl.n	9000eaa4 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000ea44:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000ea46:	2928      	cmp	r1, #40	; 0x28
9000ea48:	d82a      	bhi.n	9000eaa0 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000ea4a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ea4e:	020a      	.short	0x020a
9000ea50:	00290029 	.word	0x00290029
9000ea54:	00290029 	.word	0x00290029
9000ea58:	00290029 	.word	0x00290029
9000ea5c:	02020029 	.word	0x02020029
9000ea60:	00290029 	.word	0x00290029
9000ea64:	00290029 	.word	0x00290029
9000ea68:	00290029 	.word	0x00290029
9000ea6c:	04070029 	.word	0x04070029
9000ea70:	00290029 	.word	0x00290029
9000ea74:	00290029 	.word	0x00290029
9000ea78:	00290029 	.word	0x00290029
9000ea7c:	020a0029 	.word	0x020a0029
9000ea80:	00290029 	.word	0x00290029
9000ea84:	00290029 	.word	0x00290029
9000ea88:	00290029 	.word	0x00290029
9000ea8c:	020a0029 	.word	0x020a0029
9000ea90:	00290029 	.word	0x00290029
9000ea94:	00290029 	.word	0x00290029
9000ea98:	00290029 	.word	0x00290029
9000ea9c:	020a0029 	.word	0x020a0029
9000eaa0:	2601      	movs	r6, #1
9000eaa2:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000eaa4:	0799      	lsls	r1, r3, #30
9000eaa6:	d51d      	bpl.n	9000eae4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000eaa8:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000eaaa:	2905      	cmp	r1, #5
9000eaac:	f200 8421 	bhi.w	9000f2f2 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000eab0:	e8df f011 	tbh	[pc, r1, lsl #1]
9000eab4:	0006000e 	.word	0x0006000e
9000eab8:	000e03c8 	.word	0x000e03c8
9000eabc:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eac0:	2101      	movs	r1, #1
9000eac2:	f104 0008 	add.w	r0, r4, #8
9000eac6:	f7ff fd2f 	bl	9000e528 <RCCEx_PLL2_Config>
9000eaca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000eacc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ead0:	2d00      	cmp	r5, #0
9000ead2:	f040 82b8 	bne.w	9000f046 <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000ead6:	4f0b      	ldr	r7, [pc, #44]	; (9000eb04 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000ead8:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000eada:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000eadc:	f021 0107 	bic.w	r1, r1, #7
9000eae0:	4301      	orrs	r1, r0
9000eae2:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000eae4:	075f      	lsls	r7, r3, #29
9000eae6:	d522      	bpl.n	9000eb2e <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000eae8:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000eaec:	2905      	cmp	r1, #5
9000eaee:	f200 8408 	bhi.w	9000f302 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000eaf2:	e8df f011 	tbh	[pc, r1, lsl #1]
9000eaf6:	0011      	.short	0x0011
9000eaf8:	039b0009 	.word	0x039b0009
9000eafc:	00110011 	.word	0x00110011
9000eb00:	0011      	.short	0x0011
9000eb02:	bf00      	nop
9000eb04:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eb08:	2101      	movs	r1, #1
9000eb0a:	f104 0008 	add.w	r0, r4, #8
9000eb0e:	f7ff fd0b 	bl	9000e528 <RCCEx_PLL2_Config>
9000eb12:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000eb14:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eb18:	2d00      	cmp	r5, #0
9000eb1a:	f040 8286 	bne.w	9000f02a <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000eb1e:	4fae      	ldr	r7, [pc, #696]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eb20:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000eb24:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000eb26:	f021 0107 	bic.w	r1, r1, #7
9000eb2a:	4301      	orrs	r1, r0
9000eb2c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000eb2e:	0698      	lsls	r0, r3, #26
9000eb30:	d51f      	bpl.n	9000eb72 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000eb32:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000eb36:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000eb3a:	f000 82f7 	beq.w	9000f12c <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000eb3e:	f200 810b 	bhi.w	9000ed58 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000eb42:	b159      	cbz	r1, 9000eb5c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000eb44:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000eb48:	f040 8110 	bne.w	9000ed6c <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000eb4c:	2100      	movs	r1, #0
9000eb4e:	f104 0008 	add.w	r0, r4, #8
9000eb52:	f7ff fce9 	bl	9000e528 <RCCEx_PLL2_Config>
9000eb56:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000eb58:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eb5c:	2d00      	cmp	r5, #0
9000eb5e:	f040 8260 	bne.w	9000f022 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000eb62:	4f9d      	ldr	r7, [pc, #628]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eb64:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000eb68:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000eb6a:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000eb6e:	4301      	orrs	r1, r0
9000eb70:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000eb72:	0659      	lsls	r1, r3, #25
9000eb74:	d51f      	bpl.n	9000ebb6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000eb76:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000eb7a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000eb7e:	f000 829b 	beq.w	9000f0b8 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000eb82:	f200 80f6 	bhi.w	9000ed72 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000eb86:	b159      	cbz	r1, 9000eba0 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000eb88:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000eb8c:	f040 80fb 	bne.w	9000ed86 <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000eb90:	2100      	movs	r1, #0
9000eb92:	f104 0008 	add.w	r0, r4, #8
9000eb96:	f7ff fcc7 	bl	9000e528 <RCCEx_PLL2_Config>
9000eb9a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000eb9c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000eba0:	2d00      	cmp	r5, #0
9000eba2:	f040 824e 	bne.w	9000f042 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000eba6:	4f8c      	ldr	r7, [pc, #560]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eba8:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000ebac:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ebae:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000ebb2:	4301      	orrs	r1, r0
9000ebb4:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000ebb6:	061f      	lsls	r7, r3, #24
9000ebb8:	d51f      	bpl.n	9000ebfa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ebba:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000ebbe:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000ebc2:	f000 8289 	beq.w	9000f0d8 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000ebc6:	f200 80e1 	bhi.w	9000ed8c <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000ebca:	b159      	cbz	r1, 9000ebe4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ebcc:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000ebd0:	f040 80e6 	bne.w	9000eda0 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ebd4:	2100      	movs	r1, #0
9000ebd6:	f104 0008 	add.w	r0, r4, #8
9000ebda:	f7ff fca5 	bl	9000e528 <RCCEx_PLL2_Config>
9000ebde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ebe0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ebe4:	2d00      	cmp	r5, #0
9000ebe6:	f040 8228 	bne.w	9000f03a <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000ebea:	4f7b      	ldr	r7, [pc, #492]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ebec:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000ebf0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ebf2:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000ebf6:	4301      	orrs	r1, r0
9000ebf8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000ebfa:	0718      	lsls	r0, r3, #28
9000ebfc:	d50b      	bpl.n	9000ec16 <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000ebfe:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000ec02:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000ec06:	f000 82a9 	beq.w	9000f15c <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000ec0a:	4f73      	ldr	r7, [pc, #460]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ec0c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ec0e:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000ec12:	4301      	orrs	r1, r0
9000ec14:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000ec16:	06d9      	lsls	r1, r3, #27
9000ec18:	d50b      	bpl.n	9000ec32 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000ec1a:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000ec1e:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000ec22:	f000 82a8 	beq.w	9000f176 <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000ec26:	4f6c      	ldr	r7, [pc, #432]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ec28:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ec2a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000ec2e:	4301      	orrs	r1, r0
9000ec30:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000ec32:	031f      	lsls	r7, r3, #12
9000ec34:	d50e      	bpl.n	9000ec54 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000ec36:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000ec3a:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ec3e:	f000 80f4 	beq.w	9000ee2a <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000ec42:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000ec46:	f000 80f8 	beq.w	9000ee3a <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000ec4a:	2900      	cmp	r1, #0
9000ec4c:	f000 821c 	beq.w	9000f088 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000ec50:	2601      	movs	r6, #1
9000ec52:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ec54:	0358      	lsls	r0, r3, #13
9000ec56:	d50f      	bpl.n	9000ec78 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000ec58:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000ec5c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000ec60:	f000 80cf 	beq.w	9000ee02 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000ec64:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000ec68:	f000 80d3 	beq.w	9000ee12 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000ec6c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000ec70:	f000 8202 	beq.w	9000f078 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000ec74:	2601      	movs	r6, #1
9000ec76:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ec78:	03d9      	lsls	r1, r3, #15
9000ec7a:	d509      	bpl.n	9000ec90 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000ec7c:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000ec7e:	2900      	cmp	r1, #0
9000ec80:	f000 81f1 	beq.w	9000f066 <HAL_RCCEx_PeriphCLKConfig+0x956>
9000ec84:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000ec88:	f000 819d 	beq.w	9000efc6 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000ec8c:	2601      	movs	r6, #1
9000ec8e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000ec90:	009f      	lsls	r7, r3, #2
9000ec92:	f100 80f1 	bmi.w	9000ee78 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ec96:	0398      	lsls	r0, r3, #14
9000ec98:	d50c      	bpl.n	9000ecb4 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000ec9a:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000ec9e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000eca2:	f000 81d8 	beq.w	9000f056 <HAL_RCCEx_PeriphCLKConfig+0x946>
9000eca6:	d97e      	bls.n	9000eda6 <HAL_RCCEx_PeriphCLKConfig+0x696>
9000eca8:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000ecac:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000ecb0:	d07b      	beq.n	9000edaa <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000ecb2:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000ecb4:	02d9      	lsls	r1, r3, #11
9000ecb6:	d506      	bpl.n	9000ecc6 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000ecb8:	4847      	ldr	r0, [pc, #284]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ecba:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000ecbc:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ecbe:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000ecc2:	4329      	orrs	r1, r5
9000ecc4:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000ecc6:	00df      	lsls	r7, r3, #3
9000ecc8:	d507      	bpl.n	9000ecda <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000ecca:	4843      	ldr	r0, [pc, #268]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000eccc:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000ecd0:	6901      	ldr	r1, [r0, #16]
9000ecd2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000ecd6:	4329      	orrs	r1, r5
9000ecd8:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000ecda:	029d      	lsls	r5, r3, #10
9000ecdc:	d506      	bpl.n	9000ecec <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000ecde:	483e      	ldr	r0, [pc, #248]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ece0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000ece2:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000ece4:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000ece8:	4329      	orrs	r1, r5
9000ecea:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000ecec:	0058      	lsls	r0, r3, #1
9000ecee:	d509      	bpl.n	9000ed04 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000ecf0:	4939      	ldr	r1, [pc, #228]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ecf2:	6908      	ldr	r0, [r1, #16]
9000ecf4:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000ecf8:	6108      	str	r0, [r1, #16]
9000ecfa:	6908      	ldr	r0, [r1, #16]
9000ecfc:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000ed00:	4328      	orrs	r0, r5
9000ed02:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000ed04:	2b00      	cmp	r3, #0
9000ed06:	da06      	bge.n	9000ed16 <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000ed08:	4833      	ldr	r0, [pc, #204]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ed0a:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000ed0c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000ed0e:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000ed12:	4329      	orrs	r1, r5
9000ed14:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000ed16:	0219      	lsls	r1, r3, #8
9000ed18:	d507      	bpl.n	9000ed2a <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000ed1a:	492f      	ldr	r1, [pc, #188]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000ed1c:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000ed20:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000ed22:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000ed26:	4303      	orrs	r3, r0
9000ed28:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000ed2a:	07d3      	lsls	r3, r2, #31
9000ed2c:	f100 80b0 	bmi.w	9000ee90 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ed30:	0797      	lsls	r7, r2, #30
9000ed32:	f100 80ba 	bmi.w	9000eeaa <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000ed36:	0755      	lsls	r5, r2, #29
9000ed38:	f100 80c4 	bmi.w	9000eec4 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000ed3c:	0710      	lsls	r0, r2, #28
9000ed3e:	f100 80ce 	bmi.w	9000eede <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000ed42:	06d1      	lsls	r1, r2, #27
9000ed44:	f100 80d8 	bmi.w	9000eef8 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ed48:	0692      	lsls	r2, r2, #26
9000ed4a:	f100 8125 	bmi.w	9000ef98 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000ed4e:	1e30      	subs	r0, r6, #0
9000ed50:	bf18      	it	ne
9000ed52:	2001      	movne	r0, #1
}
9000ed54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000ed58:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000ed5c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000ed60:	f43f aefc 	beq.w	9000eb5c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ed64:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000ed68:	f43f aef8 	beq.w	9000eb5c <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000ed6c:	2601      	movs	r6, #1
9000ed6e:	4635      	mov	r5, r6
9000ed70:	e6ff      	b.n	9000eb72 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000ed72:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000ed76:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000ed7a:	f43f af11 	beq.w	9000eba0 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ed7e:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000ed82:	f43f af0d 	beq.w	9000eba0 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000ed86:	2601      	movs	r6, #1
9000ed88:	4635      	mov	r5, r6
9000ed8a:	e714      	b.n	9000ebb6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000ed8c:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000ed90:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000ed94:	f43f af26 	beq.w	9000ebe4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000ed98:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000ed9c:	f43f af22 	beq.w	9000ebe4 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000eda0:	2601      	movs	r6, #1
9000eda2:	4635      	mov	r5, r6
9000eda4:	e729      	b.n	9000ebfa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000eda6:	2900      	cmp	r1, #0
9000eda8:	d183      	bne.n	9000ecb2 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000edaa:	2d00      	cmp	r5, #0
9000edac:	f040 8151 	bne.w	9000f052 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000edb0:	4d09      	ldr	r5, [pc, #36]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000edb2:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000edb4:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000edb8:	4301      	orrs	r1, r0
9000edba:	6569      	str	r1, [r5, #84]	; 0x54
9000edbc:	e77a      	b.n	9000ecb4 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000edbe:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000edc0:	2d00      	cmp	r5, #0
9000edc2:	f040 80fb 	bne.w	9000efbc <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000edc6:	4f04      	ldr	r7, [pc, #16]	; (9000edd8 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000edc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000edca:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000edcc:	f021 0107 	bic.w	r1, r1, #7
9000edd0:	4301      	orrs	r1, r0
9000edd2:	6539      	str	r1, [r7, #80]	; 0x50
9000edd4:	e4d7      	b.n	9000e786 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000edd6:	bf00      	nop
9000edd8:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eddc:	2101      	movs	r1, #1
9000edde:	f104 0008 	add.w	r0, r4, #8
9000ede2:	f7ff fba1 	bl	9000e528 <RCCEx_PLL2_Config>
9000ede6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000ede8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000edec:	2d00      	cmp	r5, #0
9000edee:	f040 811a 	bne.w	9000f026 <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000edf2:	4fb7      	ldr	r7, [pc, #732]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000edf4:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000edf6:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000edf8:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000edfc:	4301      	orrs	r1, r0
9000edfe:	6539      	str	r1, [r7, #80]	; 0x50
9000ee00:	e5b6      	b.n	9000e970 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000ee02:	2101      	movs	r1, #1
9000ee04:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ee08:	f7ff fc08 	bl	9000e61c <RCCEx_PLL3_Config>
9000ee0c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000ee0e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ee12:	2d00      	cmp	r5, #0
9000ee14:	f040 811b 	bne.w	9000f04e <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ee18:	4fad      	ldr	r7, [pc, #692]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee1a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000ee1e:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ee20:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000ee24:	4301      	orrs	r1, r0
9000ee26:	6579      	str	r1, [r7, #84]	; 0x54
9000ee28:	e726      	b.n	9000ec78 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ee2a:	2102      	movs	r1, #2
9000ee2c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ee30:	f7ff fbf4 	bl	9000e61c <RCCEx_PLL3_Config>
9000ee34:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000ee36:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ee3a:	2d00      	cmp	r5, #0
9000ee3c:	f040 8105 	bne.w	9000f04a <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000ee40:	4fa3      	ldr	r7, [pc, #652]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee42:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000ee46:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000ee48:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000ee4c:	4301      	orrs	r1, r0
9000ee4e:	65b9      	str	r1, [r7, #88]	; 0x58
9000ee50:	e700      	b.n	9000ec54 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000ee52:	2101      	movs	r1, #1
9000ee54:	f104 0008 	add.w	r0, r4, #8
9000ee58:	f7ff fb66 	bl	9000e528 <RCCEx_PLL2_Config>
9000ee5c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ee5e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ee62:	2d00      	cmp	r5, #0
9000ee64:	f040 80db 	bne.w	9000f01e <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000ee68:	4f99      	ldr	r7, [pc, #612]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ee6a:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000ee6c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000ee6e:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000ee72:	4301      	orrs	r1, r0
9000ee74:	6579      	str	r1, [r7, #84]	; 0x54
9000ee76:	e615      	b.n	9000eaa4 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000ee78:	2102      	movs	r1, #2
9000ee7a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000ee7e:	f7ff fbcd 	bl	9000e61c <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000ee82:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000ee86:	2800      	cmp	r0, #0
9000ee88:	f43f af05 	beq.w	9000ec96 <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000ee8c:	2601      	movs	r6, #1
9000ee8e:	e702      	b.n	9000ec96 <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ee90:	2100      	movs	r1, #0
9000ee92:	f104 0008 	add.w	r0, r4, #8
9000ee96:	f7ff fb47 	bl	9000e528 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000ee9a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000ee9c:	2800      	cmp	r0, #0
9000ee9e:	f43f af47 	beq.w	9000ed30 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000eea2:	0797      	lsls	r7, r2, #30
9000eea4:	4606      	mov	r6, r0
9000eea6:	f57f af46 	bpl.w	9000ed36 <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000eeaa:	2101      	movs	r1, #1
9000eeac:	f104 0008 	add.w	r0, r4, #8
9000eeb0:	f7ff fb3a 	bl	9000e528 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000eeb4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000eeb6:	2800      	cmp	r0, #0
9000eeb8:	f43f af3d 	beq.w	9000ed36 <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000eebc:	0755      	lsls	r5, r2, #29
9000eebe:	4606      	mov	r6, r0
9000eec0:	f57f af3c 	bpl.w	9000ed3c <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000eec4:	2102      	movs	r1, #2
9000eec6:	f104 0008 	add.w	r0, r4, #8
9000eeca:	f7ff fb2d 	bl	9000e528 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000eece:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000eed0:	2800      	cmp	r0, #0
9000eed2:	f43f af33 	beq.w	9000ed3c <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000eed6:	4606      	mov	r6, r0
9000eed8:	0710      	lsls	r0, r2, #28
9000eeda:	f57f af32 	bpl.w	9000ed42 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000eede:	2100      	movs	r1, #0
9000eee0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000eee4:	f7ff fb9a 	bl	9000e61c <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000eee8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000eeea:	2800      	cmp	r0, #0
9000eeec:	f43f af29 	beq.w	9000ed42 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000eef0:	06d1      	lsls	r1, r2, #27
9000eef2:	4606      	mov	r6, r0
9000eef4:	f57f af28 	bpl.w	9000ed48 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000eef8:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000eefc:	2101      	movs	r1, #1
9000eefe:	4628      	mov	r0, r5
9000ef00:	f7ff fb8c 	bl	9000e61c <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000ef04:	2800      	cmp	r0, #0
9000ef06:	f000 80c9 	beq.w	9000f09c <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ef0a:	6863      	ldr	r3, [r4, #4]
9000ef0c:	069b      	lsls	r3, r3, #26
9000ef0e:	d54c      	bpl.n	9000efaa <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000ef10:	4606      	mov	r6, r0
9000ef12:	e043      	b.n	9000ef9c <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000ef14:	4f6f      	ldr	r7, [pc, #444]	; (9000f0d4 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000ef16:	683b      	ldr	r3, [r7, #0]
9000ef18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000ef1c:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000ef1e:	f7fb fc4f 	bl	9000a7c0 <HAL_GetTick>
9000ef22:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ef24:	e006      	b.n	9000ef34 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000ef26:	f7fb fc4b 	bl	9000a7c0 <HAL_GetTick>
9000ef2a:	eba0 0008 	sub.w	r0, r0, r8
9000ef2e:	2864      	cmp	r0, #100	; 0x64
9000ef30:	f200 81a0 	bhi.w	9000f274 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ef34:	683b      	ldr	r3, [r7, #0]
9000ef36:	05da      	lsls	r2, r3, #23
9000ef38:	d5f5      	bpl.n	9000ef26 <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000ef3a:	2d00      	cmp	r5, #0
9000ef3c:	f040 81d4 	bne.w	9000f2e8 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000ef40:	4a63      	ldr	r2, [pc, #396]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef42:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000ef46:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000ef48:	4059      	eors	r1, r3
9000ef4a:	f411 7f40 	tst.w	r1, #768	; 0x300
9000ef4e:	d00b      	beq.n	9000ef68 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000ef50:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000ef52:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000ef54:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000ef58:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000ef5c:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000ef5e:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000ef60:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000ef64:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000ef66:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000ef68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000ef6c:	f000 819e 	beq.w	9000f2ac <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ef70:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000ef74:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000ef78:	f000 81ac 	beq.w	9000f2d4 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000ef7c:	4954      	ldr	r1, [pc, #336]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef7e:	690a      	ldr	r2, [r1, #16]
9000ef80:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000ef84:	610a      	str	r2, [r1, #16]
9000ef86:	4852      	ldr	r0, [pc, #328]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000ef88:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000ef8c:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000ef8e:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000ef90:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000ef94:	6701      	str	r1, [r0, #112]	; 0x70
9000ef96:	e553      	b.n	9000ea40 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ef98:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ef9c:	2102      	movs	r1, #2
9000ef9e:	4628      	mov	r0, r5
9000efa0:	f7ff fb3c 	bl	9000e61c <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000efa4:	2800      	cmp	r0, #0
9000efa6:	f43f aed2 	beq.w	9000ed4e <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000efaa:	2001      	movs	r0, #1
}
9000efac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000efb0:	462e      	mov	r6, r5
9000efb2:	e450      	b.n	9000e856 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000efb4:	462e      	mov	r6, r5
9000efb6:	e406      	b.n	9000e7c6 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000efb8:	462e      	mov	r6, r5
9000efba:	e489      	b.n	9000e8d0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000efbc:	462e      	mov	r6, r5
9000efbe:	f7ff bbe2 	b.w	9000e786 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000efc2:	462e      	mov	r6, r5
9000efc4:	e423      	b.n	9000e80e <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000efc6:	2102      	movs	r1, #2
9000efc8:	f104 0008 	add.w	r0, r4, #8
9000efcc:	f7ff faac 	bl	9000e528 <RCCEx_PLL2_Config>
9000efd0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000efd2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000efd6:	2d00      	cmp	r5, #0
9000efd8:	d14c      	bne.n	9000f074 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000efda:	4f3d      	ldr	r7, [pc, #244]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000efdc:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000efde:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000efe0:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000efe4:	4301      	orrs	r1, r0
9000efe6:	64f9      	str	r1, [r7, #76]	; 0x4c
9000efe8:	e652      	b.n	9000ec90 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000efea:	4839      	ldr	r0, [pc, #228]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000efec:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000efee:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000eff2:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000eff4:	e462      	b.n	9000e8bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000eff6:	4836      	ldr	r0, [pc, #216]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000eff8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000effa:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000effe:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f000:	e41e      	b.n	9000e840 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f002:	4833      	ldr	r0, [pc, #204]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f004:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f006:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f00a:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f00c:	f7ff bbd1 	b.w	9000e7b2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f010:	482f      	ldr	r0, [pc, #188]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f012:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f014:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f018:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f01a:	f7ff bbed 	b.w	9000e7f8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000f01e:	462e      	mov	r6, r5
9000f020:	e540      	b.n	9000eaa4 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000f022:	462e      	mov	r6, r5
9000f024:	e5a5      	b.n	9000eb72 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000f026:	462e      	mov	r6, r5
9000f028:	e4a2      	b.n	9000e970 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000f02a:	462e      	mov	r6, r5
9000f02c:	e57f      	b.n	9000eb2e <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000f02e:	462e      	mov	r6, r5
9000f030:	e42c      	b.n	9000e88c <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000f032:	462e      	mov	r6, r5
9000f034:	e501      	b.n	9000ea3a <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000f036:	462e      	mov	r6, r5
9000f038:	e46a      	b.n	9000e910 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000f03a:	462e      	mov	r6, r5
9000f03c:	e5dd      	b.n	9000ebfa <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000f03e:	462e      	mov	r6, r5
9000f040:	e486      	b.n	9000e950 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000f042:	462e      	mov	r6, r5
9000f044:	e5b7      	b.n	9000ebb6 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000f046:	462e      	mov	r6, r5
9000f048:	e54c      	b.n	9000eae4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000f04a:	462e      	mov	r6, r5
9000f04c:	e602      	b.n	9000ec54 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000f04e:	462e      	mov	r6, r5
9000f050:	e612      	b.n	9000ec78 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000f052:	462e      	mov	r6, r5
9000f054:	e62e      	b.n	9000ecb4 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f056:	4f1e      	ldr	r7, [pc, #120]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f058:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000f05a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f05e:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000f060:	2d00      	cmp	r5, #0
9000f062:	d1f6      	bne.n	9000f052 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000f064:	e6a4      	b.n	9000edb0 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f066:	481a      	ldr	r0, [pc, #104]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f068:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f06a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f06e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f070:	2d00      	cmp	r5, #0
9000f072:	d0b2      	beq.n	9000efda <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000f074:	462e      	mov	r6, r5
9000f076:	e60b      	b.n	9000ec90 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f078:	4815      	ldr	r0, [pc, #84]	; (9000f0d0 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000f07a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f07c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f080:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f082:	2d00      	cmp	r5, #0
9000f084:	d1e3      	bne.n	9000f04e <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000f086:	e6c7      	b.n	9000ee18 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f088:	f104 0008 	add.w	r0, r4, #8
9000f08c:	f7ff fa4c 	bl	9000e528 <RCCEx_PLL2_Config>
9000f090:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000f092:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f096:	2d00      	cmp	r5, #0
9000f098:	d1d7      	bne.n	9000f04a <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000f09a:	e6d1      	b.n	9000ee40 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000f09c:	6862      	ldr	r2, [r4, #4]
9000f09e:	e653      	b.n	9000ed48 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f0a0:	2102      	movs	r1, #2
9000f0a2:	f104 0008 	add.w	r0, r4, #8
9000f0a6:	f7ff fa3f 	bl	9000e528 <RCCEx_PLL2_Config>
9000f0aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000f0ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f0b0:	2d00      	cmp	r5, #0
9000f0b2:	d1bc      	bne.n	9000f02e <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000f0b4:	f7ff bbe3 	b.w	9000e87e <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f0b8:	2102      	movs	r1, #2
9000f0ba:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f0be:	f7ff faad 	bl	9000e61c <RCCEx_PLL3_Config>
9000f0c2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000f0c4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f0c8:	2d00      	cmp	r5, #0
9000f0ca:	d1ba      	bne.n	9000f042 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000f0cc:	e56b      	b.n	9000eba6 <HAL_RCCEx_PeriphCLKConfig+0x496>
9000f0ce:	bf00      	nop
9000f0d0:	58024400 	.word	0x58024400
9000f0d4:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f0d8:	2102      	movs	r1, #2
9000f0da:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f0de:	f7ff fa9d 	bl	9000e61c <RCCEx_PLL3_Config>
9000f0e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000f0e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f0e8:	2d00      	cmp	r5, #0
9000f0ea:	d1a6      	bne.n	9000f03a <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000f0ec:	e57d      	b.n	9000ebea <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f0ee:	4886      	ldr	r0, [pc, #536]	; (9000f308 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f0f0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f0f2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f0f6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000f0f8:	2d00      	cmp	r5, #0
9000f0fa:	d194      	bne.n	9000f026 <HAL_RCCEx_PeriphCLKConfig+0x916>
9000f0fc:	e679      	b.n	9000edf2 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f0fe:	2101      	movs	r1, #1
9000f100:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f104:	f7ff fa8a 	bl	9000e61c <RCCEx_PLL3_Config>
9000f108:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000f10a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f10e:	2d00      	cmp	r5, #0
9000f110:	d191      	bne.n	9000f036 <HAL_RCCEx_PeriphCLKConfig+0x926>
9000f112:	f7ff bbf6 	b.w	9000e902 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f116:	2101      	movs	r1, #1
9000f118:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f11c:	f7ff fa7e 	bl	9000e61c <RCCEx_PLL3_Config>
9000f120:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000f122:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f126:	2d00      	cmp	r5, #0
9000f128:	d189      	bne.n	9000f03e <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000f12a:	e409      	b.n	9000e940 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f12c:	2102      	movs	r1, #2
9000f12e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f132:	f7ff fa73 	bl	9000e61c <RCCEx_PLL3_Config>
9000f136:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000f138:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f13c:	2d00      	cmp	r5, #0
9000f13e:	f47f af70 	bne.w	9000f022 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000f142:	e50e      	b.n	9000eb62 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000f144:	2102      	movs	r1, #2
9000f146:	f104 0008 	add.w	r0, r4, #8
9000f14a:	f7ff f9ed 	bl	9000e528 <RCCEx_PLL2_Config>
9000f14e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000f150:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f154:	2d00      	cmp	r5, #0
9000f156:	f47f af6c 	bne.w	9000f032 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000f15a:	e467      	b.n	9000ea2c <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f15c:	2102      	movs	r1, #2
9000f15e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f162:	f7ff fa5b 	bl	9000e61c <RCCEx_PLL3_Config>
9000f166:	2800      	cmp	r0, #0
9000f168:	f040 8094 	bne.w	9000f294 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f16c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f170:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f174:	e549      	b.n	9000ec0a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000f176:	2102      	movs	r1, #2
9000f178:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f17c:	f7ff fa4e 	bl	9000e61c <RCCEx_PLL3_Config>
9000f180:	2800      	cmp	r0, #0
9000f182:	f040 808d 	bne.w	9000f2a0 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f186:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f18a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f18e:	e54a      	b.n	9000ec26 <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000f190:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f194:	f7ff bae9 	b.w	9000e76a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f198:	2100      	movs	r1, #0
9000f19a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f19e:	f7ff fa3d 	bl	9000e61c <RCCEx_PLL3_Config>
9000f1a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000f1a4:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f1a8:	f7ff bb4a 	b.w	9000e840 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f1ac:	2100      	movs	r1, #0
9000f1ae:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f1b2:	f7ff fa33 	bl	9000e61c <RCCEx_PLL3_Config>
9000f1b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f1b8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f1bc:	e600      	b.n	9000edc0 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f1be:	2100      	movs	r1, #0
9000f1c0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f1c4:	f7ff fa2a 	bl	9000e61c <RCCEx_PLL3_Config>
9000f1c8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000f1ca:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f1ce:	f7ff baf0 	b.w	9000e7b2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000f1d2:	2102      	movs	r1, #2
9000f1d4:	3028      	adds	r0, #40	; 0x28
9000f1d6:	f7ff fa21 	bl	9000e61c <RCCEx_PLL3_Config>
9000f1da:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000f1dc:	2e00      	cmp	r6, #0
9000f1de:	f43f aab5 	beq.w	9000e74c <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000f1e2:	e7d5      	b.n	9000f190 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f1e4:	4848      	ldr	r0, [pc, #288]	; (9000f308 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000f1e6:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f1e8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000f1ea:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000f1ee:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000f1f0:	e5e6      	b.n	9000edc0 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000f1f2:	2100      	movs	r1, #0
9000f1f4:	f104 0008 	add.w	r0, r4, #8
9000f1f8:	f7ff f996 	bl	9000e528 <RCCEx_PLL2_Config>
9000f1fc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000f1fe:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f202:	e5dd      	b.n	9000edc0 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f204:	2100      	movs	r1, #0
9000f206:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f20a:	f7ff fa07 	bl	9000e61c <RCCEx_PLL3_Config>
9000f20e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000f210:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f214:	f7ff bb52 	b.w	9000e8bc <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000f218:	2100      	movs	r1, #0
9000f21a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f21e:	f7ff f9fd 	bl	9000e61c <RCCEx_PLL3_Config>
9000f222:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000f224:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000f228:	f7ff bae6 	b.w	9000e7f8 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f22c:	2101      	movs	r1, #1
9000f22e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f232:	f7ff f9f3 	bl	9000e61c <RCCEx_PLL3_Config>
9000f236:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000f238:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f23c:	2d00      	cmp	r5, #0
9000f23e:	f47f aef4 	bne.w	9000f02a <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000f242:	e46c      	b.n	9000eb1e <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f244:	2101      	movs	r1, #1
9000f246:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f24a:	f7ff f9e7 	bl	9000e61c <RCCEx_PLL3_Config>
9000f24e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000f250:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f254:	2d00      	cmp	r5, #0
9000f256:	f47f aef6 	bne.w	9000f046 <HAL_RCCEx_PeriphCLKConfig+0x936>
9000f25a:	e43c      	b.n	9000ead6 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000f25c:	2101      	movs	r1, #1
9000f25e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000f262:	f7ff f9db 	bl	9000e61c <RCCEx_PLL3_Config>
9000f266:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000f268:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000f26c:	2d00      	cmp	r5, #0
9000f26e:	f47f aed6 	bne.w	9000f01e <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000f272:	e5f9      	b.n	9000ee68 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000f274:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f276:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f27a:	4635      	mov	r5, r6
9000f27c:	f7ff bbe0 	b.w	9000ea40 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000f280:	2601      	movs	r6, #1
9000f282:	f7ff ba72 	b.w	9000e76a <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000f286:	4d20      	ldr	r5, [pc, #128]	; (9000f308 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f288:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000f28a:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000f28e:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000f290:	f7ff ba64 	b.w	9000e75c <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000f294:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000f298:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000f29a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f29e:	e4b4      	b.n	9000ec0a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000f2a0:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000f2a4:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000f2a6:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f2aa:	e4bc      	b.n	9000ec26 <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000f2ac:	f7fb fa88 	bl	9000a7c0 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f2b0:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000f308 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000f2b4:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f2b6:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f2ba:	e004      	b.n	9000f2c6 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000f2bc:	f7fb fa80 	bl	9000a7c0 <HAL_GetTick>
9000f2c0:	1bc0      	subs	r0, r0, r7
9000f2c2:	4548      	cmp	r0, r9
9000f2c4:	d8d6      	bhi.n	9000f274 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000f2c6:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000f2ca:	079b      	lsls	r3, r3, #30
9000f2cc:	d5f6      	bpl.n	9000f2bc <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000f2ce:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000f2d2:	e64d      	b.n	9000ef70 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000f2d4:	480c      	ldr	r0, [pc, #48]	; (9000f308 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000f2d6:	4a0d      	ldr	r2, [pc, #52]	; (9000f30c <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000f2d8:	6901      	ldr	r1, [r0, #16]
9000f2da:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000f2de:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000f2e2:	430a      	orrs	r2, r1
9000f2e4:	6102      	str	r2, [r0, #16]
9000f2e6:	e64e      	b.n	9000ef86 <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000f2e8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000f2ec:	462e      	mov	r6, r5
9000f2ee:	f7ff bba7 	b.w	9000ea40 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000f2f2:	2601      	movs	r6, #1
9000f2f4:	4635      	mov	r5, r6
9000f2f6:	f7ff bbf5 	b.w	9000eae4 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000f2fa:	2601      	movs	r6, #1
9000f2fc:	4635      	mov	r5, r6
9000f2fe:	f7ff bb9c 	b.w	9000ea3a <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000f302:	2601      	movs	r6, #1
9000f304:	4635      	mov	r5, r6
9000f306:	e412      	b.n	9000eb2e <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000f308:	58024400 	.word	0x58024400
9000f30c:	00ffffcf 	.word	0x00ffffcf

9000f310 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000f310:	b318      	cbz	r0, 9000f35a <HAL_SDRAM_Init+0x4a>
{
9000f312:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000f314:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000f318:	4604      	mov	r4, r0
9000f31a:	460d      	mov	r5, r1
9000f31c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f320:	b1b3      	cbz	r3, 9000f350 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f322:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f324:	2302      	movs	r3, #2
9000f326:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000f32a:	f851 0b04 	ldr.w	r0, [r1], #4
9000f32e:	f000 fa39 	bl	9000f7a4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000f332:	6862      	ldr	r2, [r4, #4]
9000f334:	4629      	mov	r1, r5
9000f336:	6820      	ldr	r0, [r4, #0]
9000f338:	f000 fa72 	bl	9000f820 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000f33c:	4a08      	ldr	r2, [pc, #32]	; (9000f360 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f33e:	2101      	movs	r1, #1

  return HAL_OK;
9000f340:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000f342:	6813      	ldr	r3, [r2, #0]
9000f344:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000f348:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000f34a:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000f34e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000f350:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000f354:	f7f3 ff8c 	bl	90003270 <HAL_SDRAM_MspInit>
9000f358:	e7e3      	b.n	9000f322 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000f35a:	2001      	movs	r0, #1
}
9000f35c:	4770      	bx	lr
9000f35e:	bf00      	nop
9000f360:	52004000 	.word	0x52004000

9000f364 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000f364:	b510      	push	{r4, lr}
9000f366:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000f368:	f7f3 fffe 	bl	90003368 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000f36c:	e9d4 0100 	ldrd	r0, r1, [r4]
9000f370:	f000 faa4 	bl	9000f8bc <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000f374:	2000      	movs	r0, #0
9000f376:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000f37a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000f37e:	bd10      	pop	{r4, pc}

9000f380 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000f380:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f382:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f386:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000f388:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000f38a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000f38c:	d004      	beq.n	9000f398 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000f38e:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000f392:	2e01      	cmp	r6, #1
9000f394:	d001      	beq.n	9000f39a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000f396:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f398:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f39a:	2302      	movs	r3, #2
9000f39c:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f39e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f3a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000f3a4:	f000 fa9e 	bl	9000f8e4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000f3a8:	682b      	ldr	r3, [r5, #0]
9000f3aa:	2b02      	cmp	r3, #2
9000f3ac:	d003      	beq.n	9000f3b6 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000f3ae:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000f3b0:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000f3b4:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f3b6:	2305      	movs	r3, #5
  return HAL_OK;
9000f3b8:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000f3ba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000f3be:	bd70      	pop	{r4, r5, r6, pc}

9000f3c0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000f3c0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f3c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000f3c6:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000f3c8:	2b02      	cmp	r3, #2
9000f3ca:	b2d8      	uxtb	r0, r3
9000f3cc:	d005      	beq.n	9000f3da <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000f3ce:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000f3d2:	2b01      	cmp	r3, #1
9000f3d4:	b2dd      	uxtb	r5, r3
9000f3d6:	d001      	beq.n	9000f3dc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000f3d8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000f3da:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f3dc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f3de:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000f3e0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000f3e4:	f000 fa96 	bl	9000f914 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000f3e8:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000f3ea:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000f3ee:	bd38      	pop	{r3, r4, r5, pc}

9000f3f0 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000f3f0:	4770      	bx	lr
9000f3f2:	bf00      	nop

9000f3f4 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000f3f4:	2800      	cmp	r0, #0
9000f3f6:	f000 80a5 	beq.w	9000f544 <HAL_TIM_Base_Init+0x150>
{
9000f3fa:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000f3fc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f400:	4604      	mov	r4, r0
9000f402:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000f406:	2b00      	cmp	r3, #0
9000f408:	d076      	beq.n	9000f4f8 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000f40a:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f40c:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f40e:	494e      	ldr	r1, [pc, #312]	; (9000f548 <HAL_TIM_Base_Init+0x154>)
9000f410:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000f414:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f418:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000f41c:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f41e:	fab1 f181 	clz	r1, r1
9000f422:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000f426:	d027      	beq.n	9000f478 <HAL_TIM_Base_Init+0x84>
9000f428:	bb31      	cbnz	r1, 9000f478 <HAL_TIM_Base_Init+0x84>
9000f42a:	4848      	ldr	r0, [pc, #288]	; (9000f54c <HAL_TIM_Base_Init+0x158>)
9000f42c:	4d48      	ldr	r5, [pc, #288]	; (9000f550 <HAL_TIM_Base_Init+0x15c>)
9000f42e:	4282      	cmp	r2, r0
9000f430:	d067      	beq.n	9000f502 <HAL_TIM_Base_Init+0x10e>
9000f432:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f436:	4282      	cmp	r2, r0
9000f438:	d063      	beq.n	9000f502 <HAL_TIM_Base_Init+0x10e>
9000f43a:	1b55      	subs	r5, r2, r5
9000f43c:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000f440:	fab5 f585 	clz	r5, r5
9000f444:	4282      	cmp	r2, r0
9000f446:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000f44a:	d063      	beq.n	9000f514 <HAL_TIM_Base_Init+0x120>
9000f44c:	2d00      	cmp	r5, #0
9000f44e:	d161      	bne.n	9000f514 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f450:	4840      	ldr	r0, [pc, #256]	; (9000f554 <HAL_TIM_Base_Init+0x160>)
9000f452:	4941      	ldr	r1, [pc, #260]	; (9000f558 <HAL_TIM_Base_Init+0x164>)
9000f454:	428a      	cmp	r2, r1
9000f456:	bf18      	it	ne
9000f458:	4282      	cmpne	r2, r0
9000f45a:	d065      	beq.n	9000f528 <HAL_TIM_Base_Init+0x134>
9000f45c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000f460:	428a      	cmp	r2, r1
9000f462:	d061      	beq.n	9000f528 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f464:	69a0      	ldr	r0, [r4, #24]
9000f466:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f46a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f46c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f46e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000f470:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f472:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f474:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f476:	e023      	b.n	9000f4c0 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f478:	4d35      	ldr	r5, [pc, #212]	; (9000f550 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f47a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f47e:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f480:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000f482:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f484:	fab5 f585 	clz	r5, r5
9000f488:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f48a:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f48c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f490:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f492:	69a0      	ldr	r0, [r4, #24]
9000f494:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f498:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000f49a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f49c:	68e3      	ldr	r3, [r4, #12]
9000f49e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f4a0:	6863      	ldr	r3, [r4, #4]
9000f4a2:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f4a4:	b951      	cbnz	r1, 9000f4bc <HAL_TIM_Base_Init+0xc8>
9000f4a6:	b94d      	cbnz	r5, 9000f4bc <HAL_TIM_Base_Init+0xc8>
9000f4a8:	492a      	ldr	r1, [pc, #168]	; (9000f554 <HAL_TIM_Base_Init+0x160>)
9000f4aa:	4b2b      	ldr	r3, [pc, #172]	; (9000f558 <HAL_TIM_Base_Init+0x164>)
9000f4ac:	429a      	cmp	r2, r3
9000f4ae:	bf18      	it	ne
9000f4b0:	428a      	cmpne	r2, r1
9000f4b2:	d003      	beq.n	9000f4bc <HAL_TIM_Base_Init+0xc8>
9000f4b4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000f4b8:	429a      	cmp	r2, r3
9000f4ba:	d101      	bne.n	9000f4c0 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000f4bc:	6963      	ldr	r3, [r4, #20]
9000f4be:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000f4c0:	2301      	movs	r3, #1
  return HAL_OK;
9000f4c2:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000f4c4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000f4c6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f4ca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000f4ce:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000f4d2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000f4d6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000f4da:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000f4de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000f4e2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f4e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f4ea:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000f4ee:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000f4f2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000f4f6:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000f4f8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000f4fc:	f7ff ff78 	bl	9000f3f0 <HAL_TIM_Base_MspInit>
9000f500:	e783      	b.n	9000f40a <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f502:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f504:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f508:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f50a:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000f50e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f510:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f512:	e7ba      	b.n	9000f48a <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000f514:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000f516:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000f51a:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000f51c:	480f      	ldr	r0, [pc, #60]	; (9000f55c <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000f51e:	4282      	cmp	r2, r0
9000f520:	d0b3      	beq.n	9000f48a <HAL_TIM_Base_Init+0x96>
9000f522:	2d00      	cmp	r5, #0
9000f524:	d1b1      	bne.n	9000f48a <HAL_TIM_Base_Init+0x96>
9000f526:	e793      	b.n	9000f450 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f528:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000f52a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f52e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000f530:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f532:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000f534:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000f538:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000f53a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000f53c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000f53e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000f540:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000f542:	e7b1      	b.n	9000f4a8 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000f544:	2001      	movs	r0, #1
}
9000f546:	4770      	bx	lr
9000f548:	40010000 	.word	0x40010000
9000f54c:	40000400 	.word	0x40000400
9000f550:	40010400 	.word	0x40010400
9000f554:	40014000 	.word	0x40014000
9000f558:	40014400 	.word	0x40014400
9000f55c:	40000c00 	.word	0x40000c00

9000f560 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000f560:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000f564:	2b01      	cmp	r3, #1
9000f566:	d141      	bne.n	9000f5ec <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f568:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000f56a:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f56c:	4b24      	ldr	r3, [pc, #144]	; (9000f600 <HAL_TIM_Base_Start_IT+0xa0>)
9000f56e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000f572:	bf18      	it	ne
9000f574:	429a      	cmpne	r2, r3
{
9000f576:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f578:	bf0c      	ite	eq
9000f57a:	2301      	moveq	r3, #1
9000f57c:	2300      	movne	r3, #0
9000f57e:	4d21      	ldr	r5, [pc, #132]	; (9000f604 <HAL_TIM_Base_Start_IT+0xa4>)
9000f580:	4c21      	ldr	r4, [pc, #132]	; (9000f608 <HAL_TIM_Base_Start_IT+0xa8>)
9000f582:	42aa      	cmp	r2, r5
9000f584:	bf08      	it	eq
9000f586:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000f58a:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f58e:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f590:	42a2      	cmp	r2, r4
9000f592:	bf08      	it	eq
9000f594:	f043 0301 	orreq.w	r3, r3, #1
9000f598:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f59c:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f5a0:	481a      	ldr	r0, [pc, #104]	; (9000f60c <HAL_TIM_Base_Start_IT+0xac>)
9000f5a2:	42a2      	cmp	r2, r4
9000f5a4:	bf08      	it	eq
9000f5a6:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000f5aa:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000f5ac:	4282      	cmp	r2, r0
9000f5ae:	bf08      	it	eq
9000f5b0:	f043 0301 	orreq.w	r3, r3, #1
9000f5b4:	4916      	ldr	r1, [pc, #88]	; (9000f610 <HAL_TIM_Base_Start_IT+0xb0>)
9000f5b6:	428a      	cmp	r2, r1
9000f5b8:	bf08      	it	eq
9000f5ba:	f043 0301 	orreq.w	r3, r3, #1
9000f5be:	b933      	cbnz	r3, 9000f5ce <HAL_TIM_Base_Start_IT+0x6e>
9000f5c0:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000f5c4:	1a10      	subs	r0, r2, r0
9000f5c6:	fab0 f080 	clz	r0, r0
9000f5ca:	0940      	lsrs	r0, r0, #5
9000f5cc:	b198      	cbz	r0, 9000f5f6 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000f5ce:	6891      	ldr	r1, [r2, #8]
9000f5d0:	4b10      	ldr	r3, [pc, #64]	; (9000f614 <HAL_TIM_Base_Start_IT+0xb4>)
9000f5d2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000f5d4:	2b06      	cmp	r3, #6
9000f5d6:	d00b      	beq.n	9000f5f0 <HAL_TIM_Base_Start_IT+0x90>
9000f5d8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000f5dc:	d008      	beq.n	9000f5f0 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000f5de:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000f5e0:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000f5e2:	f043 0301 	orr.w	r3, r3, #1
9000f5e6:	6013      	str	r3, [r2, #0]
}
9000f5e8:	bc30      	pop	{r4, r5}
9000f5ea:	4770      	bx	lr
    return HAL_ERROR;
9000f5ec:	2001      	movs	r0, #1
}
9000f5ee:	4770      	bx	lr
  return HAL_OK;
9000f5f0:	2000      	movs	r0, #0
}
9000f5f2:	bc30      	pop	{r4, r5}
9000f5f4:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000f5f6:	6813      	ldr	r3, [r2, #0]
9000f5f8:	f043 0301 	orr.w	r3, r3, #1
9000f5fc:	6013      	str	r3, [r2, #0]
9000f5fe:	e7f3      	b.n	9000f5e8 <HAL_TIM_Base_Start_IT+0x88>
9000f600:	40010000 	.word	0x40010000
9000f604:	40000400 	.word	0x40000400
9000f608:	40000800 	.word	0x40000800
9000f60c:	40010400 	.word	0x40010400
9000f610:	40001800 	.word	0x40001800
9000f614:	00010007 	.word	0x00010007

9000f618 <HAL_TIM_OC_DelayElapsedCallback>:
9000f618:	4770      	bx	lr
9000f61a:	bf00      	nop

9000f61c <HAL_TIM_IC_CaptureCallback>:
9000f61c:	4770      	bx	lr
9000f61e:	bf00      	nop

9000f620 <HAL_TIM_PWM_PulseFinishedCallback>:
9000f620:	4770      	bx	lr
9000f622:	bf00      	nop

9000f624 <HAL_TIM_TriggerCallback>:
9000f624:	4770      	bx	lr
9000f626:	bf00      	nop

9000f628 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f628:	6803      	ldr	r3, [r0, #0]
9000f62a:	691a      	ldr	r2, [r3, #16]
9000f62c:	0791      	lsls	r1, r2, #30
{
9000f62e:	b510      	push	{r4, lr}
9000f630:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000f632:	d502      	bpl.n	9000f63a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000f634:	68da      	ldr	r2, [r3, #12]
9000f636:	0792      	lsls	r2, r2, #30
9000f638:	d468      	bmi.n	9000f70c <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f63a:	691a      	ldr	r2, [r3, #16]
9000f63c:	0752      	lsls	r2, r2, #29
9000f63e:	d502      	bpl.n	9000f646 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000f640:	68da      	ldr	r2, [r3, #12]
9000f642:	0750      	lsls	r0, r2, #29
9000f644:	d44f      	bmi.n	9000f6e6 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f646:	691a      	ldr	r2, [r3, #16]
9000f648:	0711      	lsls	r1, r2, #28
9000f64a:	d502      	bpl.n	9000f652 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000f64c:	68da      	ldr	r2, [r3, #12]
9000f64e:	0712      	lsls	r2, r2, #28
9000f650:	d437      	bmi.n	9000f6c2 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f652:	691a      	ldr	r2, [r3, #16]
9000f654:	06d0      	lsls	r0, r2, #27
9000f656:	d502      	bpl.n	9000f65e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000f658:	68da      	ldr	r2, [r3, #12]
9000f65a:	06d1      	lsls	r1, r2, #27
9000f65c:	d41e      	bmi.n	9000f69c <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f65e:	691a      	ldr	r2, [r3, #16]
9000f660:	07d2      	lsls	r2, r2, #31
9000f662:	d502      	bpl.n	9000f66a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000f664:	68da      	ldr	r2, [r3, #12]
9000f666:	07d0      	lsls	r0, r2, #31
9000f668:	d469      	bmi.n	9000f73e <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f66a:	691a      	ldr	r2, [r3, #16]
9000f66c:	0611      	lsls	r1, r2, #24
9000f66e:	d502      	bpl.n	9000f676 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f670:	68da      	ldr	r2, [r3, #12]
9000f672:	0612      	lsls	r2, r2, #24
9000f674:	d46b      	bmi.n	9000f74e <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f676:	691a      	ldr	r2, [r3, #16]
9000f678:	05d0      	lsls	r0, r2, #23
9000f67a:	d502      	bpl.n	9000f682 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000f67c:	68da      	ldr	r2, [r3, #12]
9000f67e:	0611      	lsls	r1, r2, #24
9000f680:	d46d      	bmi.n	9000f75e <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f682:	691a      	ldr	r2, [r3, #16]
9000f684:	0652      	lsls	r2, r2, #25
9000f686:	d502      	bpl.n	9000f68e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000f688:	68da      	ldr	r2, [r3, #12]
9000f68a:	0650      	lsls	r0, r2, #25
9000f68c:	d46f      	bmi.n	9000f76e <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f68e:	691a      	ldr	r2, [r3, #16]
9000f690:	0691      	lsls	r1, r2, #26
9000f692:	d502      	bpl.n	9000f69a <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000f694:	68da      	ldr	r2, [r3, #12]
9000f696:	0692      	lsls	r2, r2, #26
9000f698:	d449      	bmi.n	9000f72e <HAL_TIM_IRQHandler+0x106>
}
9000f69a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f69c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f6a0:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000f6a2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000f6a4:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000f6a6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000f6a8:	69db      	ldr	r3, [r3, #28]
9000f6aa:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f6ae:	d16f      	bne.n	9000f790 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f6b0:	f7ff ffb2 	bl	9000f618 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f6b4:	4620      	mov	r0, r4
9000f6b6:	f7ff ffb3 	bl	9000f620 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f6ba:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000f6bc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f6be:	7722      	strb	r2, [r4, #28]
9000f6c0:	e7cd      	b.n	9000f65e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f6c2:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f6c6:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000f6c8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000f6ca:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000f6cc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000f6ce:	69db      	ldr	r3, [r3, #28]
9000f6d0:	079b      	lsls	r3, r3, #30
9000f6d2:	d15a      	bne.n	9000f78a <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f6d4:	f7ff ffa0 	bl	9000f618 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f6d8:	4620      	mov	r0, r4
9000f6da:	f7ff ffa1 	bl	9000f620 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f6de:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000f6e0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f6e2:	7722      	strb	r2, [r4, #28]
9000f6e4:	e7b5      	b.n	9000f652 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f6e6:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f6ea:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000f6ec:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000f6ee:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000f6f0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000f6f2:	699b      	ldr	r3, [r3, #24]
9000f6f4:	f413 7f40 	tst.w	r3, #768	; 0x300
9000f6f8:	d144      	bne.n	9000f784 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000f6fa:	f7ff ff8d 	bl	9000f618 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f6fe:	4620      	mov	r0, r4
9000f700:	f7ff ff8e 	bl	9000f620 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f704:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000f706:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f708:	7722      	strb	r2, [r4, #28]
9000f70a:	e79c      	b.n	9000f646 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f70c:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f710:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000f712:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000f714:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000f716:	699b      	ldr	r3, [r3, #24]
9000f718:	0799      	lsls	r1, r3, #30
9000f71a:	d130      	bne.n	9000f77e <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000f71c:	f7ff ff7c 	bl	9000f618 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000f720:	4620      	mov	r0, r4
9000f722:	f7ff ff7d 	bl	9000f620 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f726:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000f728:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000f72a:	7722      	strb	r2, [r4, #28]
9000f72c:	e785      	b.n	9000f63a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f72e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000f732:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000f734:	611a      	str	r2, [r3, #16]
}
9000f736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000f73a:	f000 b82d 	b.w	9000f798 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f73e:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000f742:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000f744:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000f746:	f7f3 fbf7 	bl	90002f38 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000f74a:	6823      	ldr	r3, [r4, #0]
9000f74c:	e78d      	b.n	9000f66a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f74e:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000f752:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000f754:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000f756:	f000 f821 	bl	9000f79c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000f75a:	6823      	ldr	r3, [r4, #0]
9000f75c:	e78b      	b.n	9000f676 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f75e:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000f762:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000f764:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000f766:	f000 f81b 	bl	9000f7a0 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000f76a:	6823      	ldr	r3, [r4, #0]
9000f76c:	e789      	b.n	9000f682 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f76e:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000f772:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000f774:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000f776:	f7ff ff55 	bl	9000f624 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000f77a:	6823      	ldr	r3, [r4, #0]
9000f77c:	e787      	b.n	9000f68e <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000f77e:	f7ff ff4d 	bl	9000f61c <HAL_TIM_IC_CaptureCallback>
9000f782:	e7d0      	b.n	9000f726 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000f784:	f7ff ff4a 	bl	9000f61c <HAL_TIM_IC_CaptureCallback>
9000f788:	e7bc      	b.n	9000f704 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000f78a:	f7ff ff47 	bl	9000f61c <HAL_TIM_IC_CaptureCallback>
9000f78e:	e7a6      	b.n	9000f6de <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000f790:	f7ff ff44 	bl	9000f61c <HAL_TIM_IC_CaptureCallback>
9000f794:	e791      	b.n	9000f6ba <HAL_TIM_IRQHandler+0x92>
9000f796:	bf00      	nop

9000f798 <HAL_TIMEx_CommutCallback>:
9000f798:	4770      	bx	lr
9000f79a:	bf00      	nop

9000f79c <HAL_TIMEx_BreakCallback>:
9000f79c:	4770      	bx	lr
9000f79e:	bf00      	nop

9000f7a0 <HAL_TIMEx_Break2Callback>:
9000f7a0:	4770      	bx	lr
9000f7a2:	bf00      	nop

9000f7a4 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f7a4:	680b      	ldr	r3, [r1, #0]
{
9000f7a6:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000f7a8:	b9d3      	cbnz	r3, 9000f7e0 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f7aa:	6804      	ldr	r4, [r0, #0]
9000f7ac:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000f7b0:	684a      	ldr	r2, [r1, #4]
9000f7b2:	4023      	ands	r3, r4
9000f7b4:	4313      	orrs	r3, r2
9000f7b6:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f7ba:	4323      	orrs	r3, r4
9000f7bc:	4313      	orrs	r3, r2
9000f7be:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000f7c2:	4323      	orrs	r3, r4
9000f7c4:	4313      	orrs	r3, r2
9000f7c6:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000f7ca:	4323      	orrs	r3, r4
9000f7cc:	4313      	orrs	r3, r2
9000f7ce:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000f7d2:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000f7d4:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f7d8:	4313      	orrs	r3, r2
9000f7da:	6003      	str	r3, [r0, #0]
}
9000f7dc:	2000      	movs	r0, #0
9000f7de:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f7e0:	6802      	ldr	r2, [r0, #0]
9000f7e2:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000f7e6:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000f7ea:	4322      	orrs	r2, r4
9000f7ec:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000f7ee:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f7f0:	4b0a      	ldr	r3, [pc, #40]	; (9000f81c <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000f7f2:	4322      	orrs	r2, r4
9000f7f4:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f7f6:	6842      	ldr	r2, [r0, #4]
9000f7f8:	4013      	ands	r3, r2
9000f7fa:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000f7fe:	4323      	orrs	r3, r4
9000f800:	4313      	orrs	r3, r2
9000f802:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000f806:	4323      	orrs	r3, r4
9000f808:	4313      	orrs	r3, r2
9000f80a:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000f80e:	4323      	orrs	r3, r4
}
9000f810:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000f814:	4313      	orrs	r3, r2
9000f816:	6043      	str	r3, [r0, #4]
}
9000f818:	2000      	movs	r0, #0
9000f81a:	4770      	bx	lr
9000f81c:	ffff8000 	.word	0xffff8000

9000f820 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000f820:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000f822:	bb0a      	cbnz	r2, 9000f868 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f824:	6883      	ldr	r3, [r0, #8]
9000f826:	e9d1 2400 	ldrd	r2, r4, [r1]
9000f82a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000f82e:	3c01      	subs	r4, #1
9000f830:	3a01      	subs	r2, #1
9000f832:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000f836:	4313      	orrs	r3, r2
9000f838:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000f83c:	3c01      	subs	r4, #1
9000f83e:	3a01      	subs	r2, #1
9000f840:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000f844:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000f848:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000f84c:	698a      	ldr	r2, [r1, #24]
9000f84e:	3d01      	subs	r5, #1
9000f850:	1e61      	subs	r1, r4, #1
9000f852:	3a01      	subs	r2, #1
9000f854:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000f858:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000f85c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000f860:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f862:	6083      	str	r3, [r0, #8]
}
9000f864:	2000      	movs	r0, #0
9000f866:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f868:	6885      	ldr	r5, [r0, #8]
9000f86a:	68ca      	ldr	r2, [r1, #12]
9000f86c:	4b12      	ldr	r3, [pc, #72]	; (9000f8b8 <FMC_SDRAM_Timing_Init+0x98>)
9000f86e:	1e54      	subs	r4, r2, #1
9000f870:	694a      	ldr	r2, [r1, #20]
9000f872:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f874:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f876:	3a01      	subs	r2, #1
9000f878:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f87c:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f880:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f884:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000f888:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f88a:	68c3      	ldr	r3, [r0, #12]
9000f88c:	3c01      	subs	r4, #1
9000f88e:	3a01      	subs	r2, #1
9000f890:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000f894:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000f898:	690c      	ldr	r4, [r1, #16]
9000f89a:	4313      	orrs	r3, r2
9000f89c:	698a      	ldr	r2, [r1, #24]
9000f89e:	1e61      	subs	r1, r4, #1
9000f8a0:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000f8a4:	3a01      	subs	r2, #1
9000f8a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000f8aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000f8ae:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000f8b0:	60c3      	str	r3, [r0, #12]
}
9000f8b2:	2000      	movs	r0, #0
9000f8b4:	4770      	bx	lr
9000f8b6:	bf00      	nop
9000f8b8:	ff0f0fff 	.word	0xff0f0fff

9000f8bc <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000f8bc:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000f8be:	2200      	movs	r2, #0
{
9000f8c0:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000f8c2:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f8c6:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000f8ca:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000f8ce:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000f8d2:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000f8d4:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000f8d8:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000f8da:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000f8dc:	619a      	str	r2, [r3, #24]
}
9000f8de:	bc30      	pop	{r4, r5}
9000f8e0:	4770      	bx	lr
9000f8e2:	bf00      	nop

9000f8e4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000f8e4:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f8e6:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000f8ea:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f8ec:	6900      	ldr	r0, [r0, #16]
9000f8ee:	4323      	orrs	r3, r4
9000f8f0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000f8f4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000f8f8:	4c05      	ldr	r4, [pc, #20]	; (9000f910 <FMC_SDRAM_SendCommand+0x2c>)
9000f8fa:	3901      	subs	r1, #1
9000f8fc:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000f8fe:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f900:	4323      	orrs	r3, r4
}
9000f902:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000f906:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000f90a:	6113      	str	r3, [r2, #16]
}
9000f90c:	4770      	bx	lr
9000f90e:	bf00      	nop
9000f910:	ffc00000 	.word	0xffc00000

9000f914 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000f914:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f916:	4b05      	ldr	r3, [pc, #20]	; (9000f92c <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000f918:	2000      	movs	r0, #0
{
9000f91a:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f91c:	6954      	ldr	r4, [r2, #20]
9000f91e:	4023      	ands	r3, r4
}
9000f920:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000f924:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000f928:	6151      	str	r1, [r2, #20]
}
9000f92a:	4770      	bx	lr
9000f92c:	ffffc001 	.word	0xffffc001

9000f930 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f930:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f936:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f938:	f002 fcd6 	bl	900122e8 <xTaskGetSchedulerState>
9000f93c:	2801      	cmp	r0, #1
9000f93e:	d100      	bne.n	9000f942 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f940:	bd08      	pop	{r3, pc}
9000f942:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f946:	f000 bcd5 	b.w	900102f4 <xPortSysTickHandler>
9000f94a:	bf00      	nop

9000f94c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f94c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f950:	b92b      	cbnz	r3, 9000f95e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f952:	4b06      	ldr	r3, [pc, #24]	; (9000f96c <osKernelInitialize+0x20>)
9000f954:	6818      	ldr	r0, [r3, #0]
9000f956:	b928      	cbnz	r0, 9000f964 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f958:	2201      	movs	r2, #1
9000f95a:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f95c:	4770      	bx	lr
    stat = osErrorISR;
9000f95e:	f06f 0005 	mvn.w	r0, #5
9000f962:	4770      	bx	lr
    } else {
      stat = osError;
9000f964:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000f968:	4770      	bx	lr
9000f96a:	bf00      	nop
9000f96c:	2402092c 	.word	0x2402092c

9000f970 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f970:	b510      	push	{r4, lr}
9000f972:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f976:	b974      	cbnz	r4, 9000f996 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f978:	4b08      	ldr	r3, [pc, #32]	; (9000f99c <osKernelStart+0x2c>)
9000f97a:	681a      	ldr	r2, [r3, #0]
9000f97c:	2a01      	cmp	r2, #1
9000f97e:	d107      	bne.n	9000f990 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f980:	4907      	ldr	r1, [pc, #28]	; (9000f9a0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f982:	2202      	movs	r2, #2
9000f984:	77cc      	strb	r4, [r1, #31]
9000f986:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f988:	f002 fa3c 	bl	90011e04 <vTaskStartScheduler>
      stat = osOK;
9000f98c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f98e:	bd10      	pop	{r4, pc}
      stat = osError;
9000f990:	f04f 30ff 	mov.w	r0, #4294967295
}
9000f994:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f996:	f06f 0005 	mvn.w	r0, #5
}
9000f99a:	bd10      	pop	{r4, pc}
9000f99c:	2402092c 	.word	0x2402092c
9000f9a0:	e000ed00 	.word	0xe000ed00

9000f9a4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f9a4:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f9a6:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f9a8:	b087      	sub	sp, #28
9000f9aa:	4614      	mov	r4, r2
  hTask = NULL;
9000f9ac:	9505      	str	r5, [sp, #20]
9000f9ae:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f9b2:	bb5a      	cbnz	r2, 9000fa0c <osThreadNew+0x68>
9000f9b4:	4606      	mov	r6, r0
9000f9b6:	b348      	cbz	r0, 9000fa0c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f9b8:	b1e4      	cbz	r4, 9000f9f4 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f9ba:	69a7      	ldr	r7, [r4, #24]
9000f9bc:	bb4f      	cbnz	r7, 9000fa12 <osThreadNew+0x6e>
9000f9be:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f9c0:	6863      	ldr	r3, [r4, #4]
9000f9c2:	07db      	lsls	r3, r3, #31
9000f9c4:	d422      	bmi.n	9000fa0c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f9c6:	6963      	ldr	r3, [r4, #20]
9000f9c8:	b33b      	cbz	r3, 9000fa1a <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f9ca:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f9ce:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000f9d0:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f9d2:	b338      	cbz	r0, 9000fa24 <osThreadNew+0x80>
9000f9d4:	68e2      	ldr	r2, [r4, #12]
9000f9d6:	2a5f      	cmp	r2, #95	; 0x5f
9000f9d8:	d918      	bls.n	9000fa0c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f9da:	6924      	ldr	r4, [r4, #16]
9000f9dc:	b1b3      	cbz	r3, 9000fa0c <osThreadNew+0x68>
9000f9de:	b1ac      	cbz	r4, 9000fa0c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f9e0:	460b      	mov	r3, r1
9000f9e2:	4662      	mov	r2, ip
9000f9e4:	4629      	mov	r1, r5
9000f9e6:	9700      	str	r7, [sp, #0]
9000f9e8:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000f9ec:	4630      	mov	r0, r6
9000f9ee:	f002 f86d 	bl	90011acc <xTaskCreateStatic>
9000f9f2:	e00c      	b.n	9000fa0e <osThreadNew+0x6a>
9000f9f4:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f9f6:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f9f8:	460b      	mov	r3, r1
9000f9fa:	4621      	mov	r1, r4
9000f9fc:	ac05      	add	r4, sp, #20
9000f9fe:	4630      	mov	r0, r6
9000fa00:	9700      	str	r7, [sp, #0]
9000fa02:	9401      	str	r4, [sp, #4]
9000fa04:	f002 f90c 	bl	90011c20 <xTaskCreate>
9000fa08:	2801      	cmp	r0, #1
9000fa0a:	d009      	beq.n	9000fa20 <osThreadNew+0x7c>
        return (NULL);
9000fa0c:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000fa0e:	b007      	add	sp, #28
9000fa10:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000fa12:	1e7a      	subs	r2, r7, #1
9000fa14:	2a37      	cmp	r2, #55	; 0x37
9000fa16:	d9d3      	bls.n	9000f9c0 <osThreadNew+0x1c>
9000fa18:	e7f8      	b.n	9000fa0c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000fa1a:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000fa1e:	e7d6      	b.n	9000f9ce <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000fa20:	9805      	ldr	r0, [sp, #20]
9000fa22:	e7f4      	b.n	9000fa0e <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000fa24:	68e3      	ldr	r3, [r4, #12]
9000fa26:	2b00      	cmp	r3, #0
9000fa28:	d1f1      	bne.n	9000fa0e <osThreadNew+0x6a>
9000fa2a:	6923      	ldr	r3, [r4, #16]
9000fa2c:	2b00      	cmp	r3, #0
9000fa2e:	d1ee      	bne.n	9000fa0e <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000fa30:	fa1f f28c 	uxth.w	r2, ip
9000fa34:	462c      	mov	r4, r5
9000fa36:	e7df      	b.n	9000f9f8 <osThreadNew+0x54>

9000fa38 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000fa38:	b510      	push	{r4, lr}
9000fa3a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000fa3e:	b92c      	cbnz	r4, 9000fa4c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000fa40:	b900      	cbnz	r0, 9000fa44 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000fa42:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000fa44:	f002 f988 	bl	90011d58 <vTaskDelay>
    stat = osOK;
9000fa48:	4620      	mov	r0, r4
}
9000fa4a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fa4c:	f06f 0005 	mvn.w	r0, #5
}
9000fa50:	bd10      	pop	{r4, pc}
9000fa52:	bf00      	nop

9000fa54 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000fa54:	b570      	push	{r4, r5, r6, lr}
9000fa56:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000fa5a:	b9db      	cbnz	r3, 9000fa94 <osMutexNew+0x40>
    if (attr != NULL) {
9000fa5c:	4604      	mov	r4, r0
9000fa5e:	b1e0      	cbz	r0, 9000fa9a <osMutexNew+0x46>
      type = attr->attr_bits;
9000fa60:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000fa62:	0733      	lsls	r3, r6, #28
9000fa64:	d416      	bmi.n	9000fa94 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fa66:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000fa68:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fa6c:	68c3      	ldr	r3, [r0, #12]
9000fa6e:	b181      	cbz	r1, 9000fa92 <osMutexNew+0x3e>
9000fa70:	2b4f      	cmp	r3, #79	; 0x4f
9000fa72:	d90f      	bls.n	9000fa94 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000fa74:	b31e      	cbz	r6, 9000fabe <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000fa76:	2004      	movs	r0, #4
9000fa78:	f001 f84e 	bl	90010b18 <xQueueCreateMutexStatic>
9000fa7c:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000fa7e:	b14d      	cbz	r5, 9000fa94 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000fa80:	6821      	ldr	r1, [r4, #0]
9000fa82:	4628      	mov	r0, r5
9000fa84:	f001 fd7e 	bl	90011584 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000fa88:	b12e      	cbz	r6, 9000fa96 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000fa8a:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000fa8e:	4628      	mov	r0, r5
9000fa90:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000fa92:	b163      	cbz	r3, 9000faae <osMutexNew+0x5a>
  hMutex = NULL;
9000fa94:	2500      	movs	r5, #0
}
9000fa96:	4628      	mov	r0, r5
9000fa98:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000fa9a:	2001      	movs	r0, #1
9000fa9c:	f001 f8ac 	bl	90010bf8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000faa0:	4605      	mov	r5, r0
9000faa2:	2800      	cmp	r0, #0
9000faa4:	d0f6      	beq.n	9000fa94 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000faa6:	4621      	mov	r1, r4
9000faa8:	f001 fd6c 	bl	90011584 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000faac:	e7f3      	b.n	9000fa96 <osMutexNew+0x42>
            if (rmtx != 0U) {
9000faae:	b15e      	cbz	r6, 9000fac8 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000fab0:	2004      	movs	r0, #4
9000fab2:	f001 f8a1 	bl	90010bf8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000fab6:	4605      	mov	r5, r0
9000fab8:	2800      	cmp	r0, #0
9000faba:	d1e1      	bne.n	9000fa80 <osMutexNew+0x2c>
9000fabc:	e7ea      	b.n	9000fa94 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000fabe:	2001      	movs	r0, #1
9000fac0:	f001 f82a 	bl	90010b18 <xQueueCreateMutexStatic>
9000fac4:	4605      	mov	r5, r0
9000fac6:	e7da      	b.n	9000fa7e <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000fac8:	2001      	movs	r0, #1
9000faca:	f001 f895 	bl	90010bf8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000face:	4605      	mov	r5, r0
9000fad0:	e7d5      	b.n	9000fa7e <osMutexNew+0x2a>
9000fad2:	bf00      	nop

9000fad4 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000fad4:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000fad8:	f000 0301 	and.w	r3, r0, #1
9000fadc:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000fae0:	b9a8      	cbnz	r0, 9000fb0e <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000fae2:	b1ba      	cbz	r2, 9000fb14 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000fae4:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000fae6:	b510      	push	{r4, lr}
9000fae8:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000faea:	b953      	cbnz	r3, 9000fb02 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000faec:	f001 fafc 	bl	900110e8 <xQueueSemaphoreTake>
9000faf0:	2801      	cmp	r0, #1
9000faf2:	d00a      	beq.n	9000fb0a <osMutexAcquire+0x36>
          stat = osErrorResource;
9000faf4:	2c00      	cmp	r4, #0
9000faf6:	bf14      	ite	ne
9000faf8:	f06f 0001 	mvnne.w	r0, #1
9000fafc:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000fb00:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000fb02:	f001 fc79 	bl	900113f8 <xQueueTakeMutexRecursive>
9000fb06:	2801      	cmp	r0, #1
9000fb08:	d1f4      	bne.n	9000faf4 <osMutexAcquire+0x20>
  stat = osOK;
9000fb0a:	2000      	movs	r0, #0
}
9000fb0c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fb0e:	f06f 0005 	mvn.w	r0, #5
9000fb12:	4770      	bx	lr
    stat = osErrorParameter;
9000fb14:	f06f 0003 	mvn.w	r0, #3
}
9000fb18:	4770      	bx	lr
9000fb1a:	bf00      	nop

9000fb1c <osMutexRelease>:
9000fb1c:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000fb20:	b9ba      	cbnz	r2, 9000fb52 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000fb22:	b510      	push	{r4, lr}
9000fb24:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000fb28:	b1b4      	cbz	r4, 9000fb58 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000fb2a:	f000 0301 	and.w	r3, r0, #1
9000fb2e:	b943      	cbnz	r3, 9000fb42 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000fb30:	461a      	mov	r2, r3
9000fb32:	4619      	mov	r1, r3
9000fb34:	4620      	mov	r0, r4
9000fb36:	f000 fe6d 	bl	90010814 <xQueueGenericSend>
9000fb3a:	2801      	cmp	r0, #1
9000fb3c:	d106      	bne.n	9000fb4c <osMutexRelease+0x30>
  stat = osOK;
9000fb3e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fb40:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000fb42:	4620      	mov	r0, r4
9000fb44:	f001 f838 	bl	90010bb8 <xQueueGiveMutexRecursive>
9000fb48:	2801      	cmp	r0, #1
9000fb4a:	d0f8      	beq.n	9000fb3e <osMutexRelease+0x22>
        stat = osErrorResource;
9000fb4c:	f06f 0002 	mvn.w	r0, #2
}
9000fb50:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000fb52:	f06f 0005 	mvn.w	r0, #5
}
9000fb56:	4770      	bx	lr
    stat = osErrorParameter;
9000fb58:	f06f 0003 	mvn.w	r0, #3
}
9000fb5c:	bd10      	pop	{r4, pc}
9000fb5e:	bf00      	nop

9000fb60 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000fb60:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fb62:	b083      	sub	sp, #12
9000fb64:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000fb68:	b98e      	cbnz	r6, 9000fb8e <osSemaphoreNew+0x2e>
9000fb6a:	4605      	mov	r5, r0
9000fb6c:	b178      	cbz	r0, 9000fb8e <osSemaphoreNew+0x2e>
9000fb6e:	4288      	cmp	r0, r1
9000fb70:	460f      	mov	r7, r1
9000fb72:	d30c      	bcc.n	9000fb8e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000fb74:	4614      	mov	r4, r2
9000fb76:	b182      	cbz	r2, 9000fb9a <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000fb78:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000fb7c:	b15a      	cbz	r2, 9000fb96 <osSemaphoreNew+0x36>
9000fb7e:	2b4f      	cmp	r3, #79	; 0x4f
9000fb80:	d905      	bls.n	9000fb8e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000fb82:	2801      	cmp	r0, #1
9000fb84:	d032      	beq.n	9000fbec <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000fb86:	f000 fd9d 	bl	900106c4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000fb8a:	4605      	mov	r5, r0
9000fb8c:	b978      	cbnz	r0, 9000fbae <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000fb8e:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000fb90:	4628      	mov	r0, r5
9000fb92:	b003      	add	sp, #12
9000fb94:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000fb96:	2b00      	cmp	r3, #0
9000fb98:	d1f9      	bne.n	9000fb8e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000fb9a:	2d01      	cmp	r5, #1
9000fb9c:	d00f      	beq.n	9000fbbe <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000fb9e:	4628      	mov	r0, r5
9000fba0:	4639      	mov	r1, r7
9000fba2:	f000 fdf1 	bl	90010788 <xQueueCreateCountingSemaphore>
9000fba6:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000fba8:	2d00      	cmp	r5, #0
9000fbaa:	d0f0      	beq.n	9000fb8e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000fbac:	b104      	cbz	r4, 9000fbb0 <osSemaphoreNew+0x50>
          name = attr->name;
9000fbae:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000fbb0:	4628      	mov	r0, r5
9000fbb2:	4621      	mov	r1, r4
9000fbb4:	f001 fce6 	bl	90011584 <vQueueAddToRegistry>
}
9000fbb8:	4628      	mov	r0, r5
9000fbba:	b003      	add	sp, #12
9000fbbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000fbbe:	4628      	mov	r0, r5
9000fbc0:	2203      	movs	r2, #3
9000fbc2:	2100      	movs	r1, #0
9000fbc4:	f000 fd3c 	bl	90010640 <xQueueGenericCreate>
9000fbc8:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000fbca:	2d00      	cmp	r5, #0
9000fbcc:	d0df      	beq.n	9000fb8e <osSemaphoreNew+0x2e>
9000fbce:	2f00      	cmp	r7, #0
9000fbd0:	d0ea      	beq.n	9000fba8 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000fbd2:	2300      	movs	r3, #0
9000fbd4:	4628      	mov	r0, r5
9000fbd6:	461a      	mov	r2, r3
9000fbd8:	4619      	mov	r1, r3
9000fbda:	f000 fe1b 	bl	90010814 <xQueueGenericSend>
9000fbde:	2801      	cmp	r0, #1
9000fbe0:	d0e4      	beq.n	9000fbac <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000fbe2:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000fbe4:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000fbe6:	f001 fc87 	bl	900114f8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000fbea:	e7d1      	b.n	9000fb90 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000fbec:	4613      	mov	r3, r2
9000fbee:	2203      	movs	r2, #3
9000fbf0:	4631      	mov	r1, r6
9000fbf2:	9200      	str	r2, [sp, #0]
9000fbf4:	4632      	mov	r2, r6
9000fbf6:	f000 fcb7 	bl	90010568 <xQueueGenericCreateStatic>
9000fbfa:	4605      	mov	r5, r0
9000fbfc:	e7e5      	b.n	9000fbca <osSemaphoreNew+0x6a>
9000fbfe:	bf00      	nop

9000fc00 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000fc00:	b370      	cbz	r0, 9000fc60 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000fc02:	b510      	push	{r4, lr}
9000fc04:	460c      	mov	r4, r1
9000fc06:	b082      	sub	sp, #8
9000fc08:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fc0c:	b1c3      	cbz	r3, 9000fc40 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000fc0e:	bb21      	cbnz	r1, 9000fc5a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fc10:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fc12:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000fc14:	f001 fc10 	bl	90011438 <xQueueReceiveFromISR>
9000fc18:	2801      	cmp	r0, #1
9000fc1a:	d11a      	bne.n	9000fc52 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fc1c:	9b01      	ldr	r3, [sp, #4]
9000fc1e:	b913      	cbnz	r3, 9000fc26 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000fc20:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fc22:	b002      	add	sp, #8
9000fc24:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000fc26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fc2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fc2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fc32:	f3bf 8f4f 	dsb	sy
9000fc36:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fc3a:	4620      	mov	r0, r4
}
9000fc3c:	b002      	add	sp, #8
9000fc3e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000fc40:	f001 fa52 	bl	900110e8 <xQueueSemaphoreTake>
9000fc44:	2801      	cmp	r0, #1
9000fc46:	d0eb      	beq.n	9000fc20 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000fc48:	b11c      	cbz	r4, 9000fc52 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000fc4a:	f06f 0001 	mvn.w	r0, #1
}
9000fc4e:	b002      	add	sp, #8
9000fc50:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000fc52:	f06f 0002 	mvn.w	r0, #2
}
9000fc56:	b002      	add	sp, #8
9000fc58:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000fc5a:	f06f 0003 	mvn.w	r0, #3
9000fc5e:	e7e0      	b.n	9000fc22 <osSemaphoreAcquire+0x22>
9000fc60:	f06f 0003 	mvn.w	r0, #3
}
9000fc64:	4770      	bx	lr
9000fc66:	bf00      	nop

9000fc68 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000fc68:	b330      	cbz	r0, 9000fcb8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000fc6a:	b510      	push	{r4, lr}
9000fc6c:	b082      	sub	sp, #8
9000fc6e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000fc72:	b1ab      	cbz	r3, 9000fca0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000fc74:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fc76:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000fc78:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000fc7a:	f001 f85f 	bl	90010d3c <xQueueGiveFromISR>
9000fc7e:	2801      	cmp	r0, #1
9000fc80:	d117      	bne.n	9000fcb2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000fc82:	9b01      	ldr	r3, [sp, #4]
9000fc84:	b193      	cbz	r3, 9000fcac <osSemaphoreRelease+0x44>
9000fc86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fc8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fc8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fc92:	f3bf 8f4f 	dsb	sy
9000fc96:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fc9a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000fc9c:	b002      	add	sp, #8
9000fc9e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000fca0:	461a      	mov	r2, r3
9000fca2:	4619      	mov	r1, r3
9000fca4:	f000 fdb6 	bl	90010814 <xQueueGenericSend>
9000fca8:	2801      	cmp	r0, #1
9000fcaa:	d102      	bne.n	9000fcb2 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000fcac:	2000      	movs	r0, #0
}
9000fcae:	b002      	add	sp, #8
9000fcb0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000fcb2:	f06f 0002 	mvn.w	r0, #2
9000fcb6:	e7fa      	b.n	9000fcae <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000fcb8:	f06f 0003 	mvn.w	r0, #3
}
9000fcbc:	4770      	bx	lr
9000fcbe:	bf00      	nop

9000fcc0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000fcc0:	b5f0      	push	{r4, r5, r6, r7, lr}
9000fcc2:	b083      	sub	sp, #12
9000fcc4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000fcc8:	b987      	cbnz	r7, 9000fcec <osMessageQueueNew+0x2c>
9000fcca:	4605      	mov	r5, r0
9000fccc:	b170      	cbz	r0, 9000fcec <osMessageQueueNew+0x2c>
9000fcce:	b169      	cbz	r1, 9000fcec <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000fcd0:	4614      	mov	r4, r2
9000fcd2:	b17a      	cbz	r2, 9000fcf4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fcd4:	6893      	ldr	r3, [r2, #8]
9000fcd6:	b1cb      	cbz	r3, 9000fd0c <osMessageQueueNew+0x4c>
9000fcd8:	68d2      	ldr	r2, [r2, #12]
9000fcda:	2a4f      	cmp	r2, #79	; 0x4f
9000fcdc:	d906      	bls.n	9000fcec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fcde:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000fce0:	b122      	cbz	r2, 9000fcec <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000fce2:	fb01 f505 	mul.w	r5, r1, r5
9000fce6:	6966      	ldr	r6, [r4, #20]
9000fce8:	42ae      	cmp	r6, r5
9000fcea:	d21f      	bcs.n	9000fd2c <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000fcec:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000fcee:	4628      	mov	r0, r5
9000fcf0:	b003      	add	sp, #12
9000fcf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000fcf4:	f000 fca4 	bl	90010640 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fcf8:	4605      	mov	r5, r0
9000fcfa:	2800      	cmp	r0, #0
9000fcfc:	d0f6      	beq.n	9000fcec <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000fcfe:	4628      	mov	r0, r5
9000fd00:	4621      	mov	r1, r4
9000fd02:	f001 fc3f 	bl	90011584 <vQueueAddToRegistry>
}
9000fd06:	4628      	mov	r0, r5
9000fd08:	b003      	add	sp, #12
9000fd0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000fd0c:	68d3      	ldr	r3, [r2, #12]
9000fd0e:	2b00      	cmp	r3, #0
9000fd10:	d1ec      	bne.n	9000fcec <osMessageQueueNew+0x2c>
9000fd12:	6913      	ldr	r3, [r2, #16]
9000fd14:	2b00      	cmp	r3, #0
9000fd16:	d1e9      	bne.n	9000fcec <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000fd18:	6952      	ldr	r2, [r2, #20]
9000fd1a:	2a00      	cmp	r2, #0
9000fd1c:	d1e6      	bne.n	9000fcec <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000fd1e:	f000 fc8f 	bl	90010640 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fd22:	4605      	mov	r5, r0
9000fd24:	2800      	cmp	r0, #0
9000fd26:	d0e1      	beq.n	9000fcec <osMessageQueueNew+0x2c>
        name = attr->name;
9000fd28:	6824      	ldr	r4, [r4, #0]
9000fd2a:	e7e8      	b.n	9000fcfe <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000fd2c:	9700      	str	r7, [sp, #0]
9000fd2e:	f000 fc1b 	bl	90010568 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000fd32:	4605      	mov	r5, r0
9000fd34:	2800      	cmp	r0, #0
9000fd36:	d1f7      	bne.n	9000fd28 <osMessageQueueNew+0x68>
9000fd38:	e7d8      	b.n	9000fcec <osMessageQueueNew+0x2c>
9000fd3a:	bf00      	nop

9000fd3c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000fd3c:	b530      	push	{r4, r5, lr}
9000fd3e:	461c      	mov	r4, r3
9000fd40:	b083      	sub	sp, #12
9000fd42:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000fd46:	b30b      	cbz	r3, 9000fd8c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fd48:	3c00      	subs	r4, #0
9000fd4a:	bf18      	it	ne
9000fd4c:	2401      	movne	r4, #1
9000fd4e:	2900      	cmp	r1, #0
9000fd50:	bf08      	it	eq
9000fd52:	f044 0401 	orreq.w	r4, r4, #1
9000fd56:	bb7c      	cbnz	r4, 9000fdb8 <osMessageQueuePut+0x7c>
9000fd58:	fab0 f480 	clz	r4, r0
9000fd5c:	0964      	lsrs	r4, r4, #5
9000fd5e:	b358      	cbz	r0, 9000fdb8 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fd60:	4623      	mov	r3, r4
9000fd62:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fd64:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fd66:	f000 ff7f 	bl	90010c68 <xQueueGenericSendFromISR>
9000fd6a:	2801      	cmp	r0, #1
9000fd6c:	d120      	bne.n	9000fdb0 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fd6e:	9b01      	ldr	r3, [sp, #4]
9000fd70:	b1db      	cbz	r3, 9000fdaa <osMessageQueuePut+0x6e>
9000fd72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fd76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fd7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fd7e:	f3bf 8f4f 	dsb	sy
9000fd82:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fd86:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000fd88:	b003      	add	sp, #12
9000fd8a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fd8c:	b1a0      	cbz	r0, 9000fdb8 <osMessageQueuePut+0x7c>
9000fd8e:	fab1 f381 	clz	r3, r1
9000fd92:	095b      	lsrs	r3, r3, #5
9000fd94:	b181      	cbz	r1, 9000fdb8 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fd96:	4622      	mov	r2, r4
9000fd98:	f000 fd3c 	bl	90010814 <xQueueGenericSend>
9000fd9c:	2801      	cmp	r0, #1
9000fd9e:	d004      	beq.n	9000fdaa <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000fda0:	b134      	cbz	r4, 9000fdb0 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000fda2:	f06f 0001 	mvn.w	r0, #1
}
9000fda6:	b003      	add	sp, #12
9000fda8:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000fdaa:	2000      	movs	r0, #0
}
9000fdac:	b003      	add	sp, #12
9000fdae:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000fdb0:	f06f 0002 	mvn.w	r0, #2
}
9000fdb4:	b003      	add	sp, #12
9000fdb6:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000fdb8:	f06f 0003 	mvn.w	r0, #3
9000fdbc:	e7e4      	b.n	9000fd88 <osMessageQueuePut+0x4c>
9000fdbe:	bf00      	nop

9000fdc0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000fdc0:	b530      	push	{r4, r5, lr}
9000fdc2:	461c      	mov	r4, r3
9000fdc4:	b083      	sub	sp, #12
9000fdc6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000fdca:	b303      	cbz	r3, 9000fe0e <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fdcc:	3c00      	subs	r4, #0
9000fdce:	bf18      	it	ne
9000fdd0:	2401      	movne	r4, #1
9000fdd2:	2900      	cmp	r1, #0
9000fdd4:	bf08      	it	eq
9000fdd6:	f044 0401 	orreq.w	r4, r4, #1
9000fdda:	bb5c      	cbnz	r4, 9000fe34 <osMessageQueueGet+0x74>
9000fddc:	fab0 f480 	clz	r4, r0
9000fde0:	0964      	lsrs	r4, r4, #5
9000fde2:	b338      	cbz	r0, 9000fe34 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fde4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fde6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fde8:	f001 fb26 	bl	90011438 <xQueueReceiveFromISR>
9000fdec:	2801      	cmp	r0, #1
9000fdee:	d11d      	bne.n	9000fe2c <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fdf0:	9b01      	ldr	r3, [sp, #4]
9000fdf2:	b1c3      	cbz	r3, 9000fe26 <osMessageQueueGet+0x66>
9000fdf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fdf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fdfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fe00:	f3bf 8f4f 	dsb	sy
9000fe04:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fe08:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000fe0a:	b003      	add	sp, #12
9000fe0c:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fe0e:	b188      	cbz	r0, 9000fe34 <osMessageQueueGet+0x74>
9000fe10:	b181      	cbz	r1, 9000fe34 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fe12:	4622      	mov	r2, r4
9000fe14:	f000 ffea 	bl	90010dec <xQueueReceive>
9000fe18:	2801      	cmp	r0, #1
9000fe1a:	d004      	beq.n	9000fe26 <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000fe1c:	b134      	cbz	r4, 9000fe2c <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000fe1e:	f06f 0001 	mvn.w	r0, #1
}
9000fe22:	b003      	add	sp, #12
9000fe24:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000fe26:	2000      	movs	r0, #0
}
9000fe28:	b003      	add	sp, #12
9000fe2a:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000fe2c:	f06f 0002 	mvn.w	r0, #2
}
9000fe30:	b003      	add	sp, #12
9000fe32:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000fe34:	f06f 0003 	mvn.w	r0, #3
9000fe38:	e7e7      	b.n	9000fe0a <osMessageQueueGet+0x4a>
9000fe3a:	bf00      	nop

9000fe3c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fe3c:	4b04      	ldr	r3, [pc, #16]	; (9000fe50 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000fe3e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fe40:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fe42:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000fe44:	4c03      	ldr	r4, [pc, #12]	; (9000fe54 <vApplicationGetIdleTaskMemory+0x18>)
9000fe46:	600c      	str	r4, [r1, #0]
}
9000fe48:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fe4c:	6013      	str	r3, [r2, #0]
}
9000fe4e:	4770      	bx	lr
9000fe50:	240208cc 	.word	0x240208cc
9000fe54:	240206cc 	.word	0x240206cc

9000fe58 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fe58:	4b05      	ldr	r3, [pc, #20]	; (9000fe70 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000fe5a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fe5c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fe5e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000fe62:	4c04      	ldr	r4, [pc, #16]	; (9000fe74 <vApplicationGetTimerTaskMemory+0x1c>)
9000fe64:	600c      	str	r4, [r1, #0]
}
9000fe66:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fe6a:	6013      	str	r3, [r2, #0]
}
9000fe6c:	4770      	bx	lr
9000fe6e:	bf00      	nop
9000fe70:	24020d30 	.word	0x24020d30
9000fe74:	24020930 	.word	0x24020930

9000fe78 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fe78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fe7c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fe7e:	f002 f85d 	bl	90011f3c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fe82:	4a54      	ldr	r2, [pc, #336]	; (9000ffd4 <pvPortMalloc+0x15c>)
9000fe84:	6816      	ldr	r6, [r2, #0]
9000fe86:	2e00      	cmp	r6, #0
9000fe88:	d06f      	beq.n	9000ff6a <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000fe8a:	4b53      	ldr	r3, [pc, #332]	; (9000ffd8 <pvPortMalloc+0x160>)
9000fe8c:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000fe8e:	423d      	tst	r5, r7
9000fe90:	d12e      	bne.n	9000fef0 <pvPortMalloc+0x78>
9000fe92:	b36d      	cbz	r5, 9000fef0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000fe94:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000fe98:	076d      	lsls	r5, r5, #29
9000fe9a:	d002      	beq.n	9000fea2 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000fe9c:	f024 0407 	bic.w	r4, r4, #7
9000fea0:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000fea2:	b32c      	cbz	r4, 9000fef0 <pvPortMalloc+0x78>
9000fea4:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000fff0 <pvPortMalloc+0x178>
9000fea8:	f8dc 5000 	ldr.w	r5, [ip]
9000feac:	42a5      	cmp	r5, r4
9000feae:	d31f      	bcc.n	9000fef0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000feb0:	484a      	ldr	r0, [pc, #296]	; (9000ffdc <pvPortMalloc+0x164>)
9000feb2:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000feb4:	e003      	b.n	9000febe <pvPortMalloc+0x46>
9000feb6:	681a      	ldr	r2, [r3, #0]
9000feb8:	b122      	cbz	r2, 9000fec4 <pvPortMalloc+0x4c>
9000feba:	4618      	mov	r0, r3
9000febc:	4613      	mov	r3, r2
9000febe:	6859      	ldr	r1, [r3, #4]
9000fec0:	42a1      	cmp	r1, r4
9000fec2:	d3f8      	bcc.n	9000feb6 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000fec4:	42b3      	cmp	r3, r6
9000fec6:	d013      	beq.n	9000fef0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000fec8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000feca:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fecc:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fed0:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fed2:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fed6:	d929      	bls.n	9000ff2c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000fed8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000feda:	0748      	lsls	r0, r1, #29
9000fedc:	d00f      	beq.n	9000fefe <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000fede:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fee2:	f383 8811 	msr	BASEPRI, r3
9000fee6:	f3bf 8f6f 	isb	sy
9000feea:	f3bf 8f4f 	dsb	sy
9000feee:	e7fe      	b.n	9000feee <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000fef0:	f04f 0800 	mov.w	r8, #0
9000fef4:	f002 f82a 	bl	90011f4c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000fef8:	4640      	mov	r0, r8
9000fefa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000fefe:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ff00:	4a36      	ldr	r2, [pc, #216]	; (9000ffdc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000ff02:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000ff04:	4614      	mov	r4, r2
9000ff06:	6812      	ldr	r2, [r2, #0]
9000ff08:	4291      	cmp	r1, r2
9000ff0a:	d8fb      	bhi.n	9000ff04 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000ff0c:	6860      	ldr	r0, [r4, #4]
9000ff0e:	eb04 0e00 	add.w	lr, r4, r0
9000ff12:	4571      	cmp	r1, lr
9000ff14:	d04a      	beq.n	9000ffac <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ff16:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ff1a:	eb01 000e 	add.w	r0, r1, lr
9000ff1e:	4282      	cmp	r2, r0
9000ff20:	d050      	beq.n	9000ffc4 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000ff22:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ff24:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000ff26:	bf18      	it	ne
9000ff28:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000ff2a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000ff2c:	4a2c      	ldr	r2, [pc, #176]	; (9000ffe0 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000ff2e:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000ff30:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000ff32:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000ff34:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000ff38:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000ff3a:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000ff3e:	bf38      	it	cc
9000ff40:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000ff42:	4a28      	ldr	r2, [pc, #160]	; (9000ffe4 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000ff44:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000ff48:	6813      	ldr	r3, [r2, #0]
9000ff4a:	3301      	adds	r3, #1
9000ff4c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000ff4e:	f001 fffd 	bl	90011f4c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000ff52:	f018 0f07 	tst.w	r8, #7
9000ff56:	d0cf      	beq.n	9000fef8 <pvPortMalloc+0x80>
9000ff58:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ff5c:	f383 8811 	msr	BASEPRI, r3
9000ff60:	f3bf 8f6f 	isb	sy
9000ff64:	f3bf 8f4f 	dsb	sy
9000ff68:	e7fe      	b.n	9000ff68 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000ff6a:	4b1f      	ldr	r3, [pc, #124]	; (9000ffe8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000ff6c:	075e      	lsls	r6, r3, #29
9000ff6e:	d117      	bne.n	9000ffa0 <pvPortMalloc+0x128>
9000ff70:	4e1e      	ldr	r6, [pc, #120]	; (9000ffec <pvPortMalloc+0x174>)
9000ff72:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000ff74:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000ff76:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000ff7a:	4818      	ldr	r0, [pc, #96]	; (9000ffdc <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000ff7c:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000ff80:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000ff82:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000ff84:	4a16      	ldr	r2, [pc, #88]	; (9000ffe0 <pvPortMalloc+0x168>)
9000ff86:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000ff88:	4a19      	ldr	r2, [pc, #100]	; (9000fff0 <pvPortMalloc+0x178>)
9000ff8a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000ff8c:	4a12      	ldr	r2, [pc, #72]	; (9000ffd8 <pvPortMalloc+0x160>)
9000ff8e:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000ff90:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000ff92:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000ff96:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000ff9a:	e9c1 6300 	strd	r6, r3, [r1]
}
9000ff9e:	e776      	b.n	9000fe8e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000ffa0:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000ffa2:	4e12      	ldr	r6, [pc, #72]	; (9000ffec <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000ffa4:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000ffa8:	460b      	mov	r3, r1
9000ffaa:	e7e3      	b.n	9000ff74 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ffac:	6849      	ldr	r1, [r1, #4]
9000ffae:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ffb2:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000ffb6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ffba:	428a      	cmp	r2, r1
9000ffbc:	d001      	beq.n	9000ffc2 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ffbe:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000ffc0:	e7b3      	b.n	9000ff2a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000ffc2:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000ffc4:	42b2      	cmp	r2, r6
9000ffc6:	d0ac      	beq.n	9000ff22 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000ffc8:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ffca:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000ffcc:	4470      	add	r0, lr
9000ffce:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000ffd0:	e7a7      	b.n	9000ff22 <pvPortMalloc+0xaa>
9000ffd2:	bf00      	nop
9000ffd4:	24020d90 	.word	0x24020d90
9000ffd8:	24039434 	.word	0x24039434
9000ffdc:	24039448 	.word	0x24039448
9000ffe0:	2403943c 	.word	0x2403943c
9000ffe4:	24039440 	.word	0x24039440
9000ffe8:	24020d94 	.word	0x24020d94
9000ffec:	24039434 	.word	0x24039434
9000fff0:	24039438 	.word	0x24039438

9000fff4 <vPortFree>:
	if( pv != NULL )
9000fff4:	b1d0      	cbz	r0, 9001002c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fff6:	4a2c      	ldr	r2, [pc, #176]	; (900100a8 <vPortFree+0xb4>)
9000fff8:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000fffc:	6812      	ldr	r2, [r2, #0]
9000fffe:	4213      	tst	r3, r2
90010000:	d00b      	beq.n	9001001a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
90010002:	f850 1c08 	ldr.w	r1, [r0, #-8]
90010006:	b191      	cbz	r1, 9001002e <vPortFree+0x3a>
90010008:	f04f 0350 	mov.w	r3, #80	; 0x50
9001000c:	f383 8811 	msr	BASEPRI, r3
90010010:	f3bf 8f6f 	isb	sy
90010014:	f3bf 8f4f 	dsb	sy
90010018:	e7fe      	b.n	90010018 <vPortFree+0x24>
9001001a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001001e:	f383 8811 	msr	BASEPRI, r3
90010022:	f3bf 8f6f 	isb	sy
90010026:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9001002a:	e7fe      	b.n	9001002a <vPortFree+0x36>
9001002c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9001002e:	ea23 0302 	bic.w	r3, r3, r2
{
90010032:	b530      	push	{r4, r5, lr}
90010034:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90010036:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9001003a:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9001003e:	4d1b      	ldr	r5, [pc, #108]	; (900100ac <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
90010040:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
90010042:	f001 ff7b 	bl	90011f3c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
90010046:	9801      	ldr	r0, [sp, #4]
90010048:	682a      	ldr	r2, [r5, #0]
9001004a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9001004e:	4b18      	ldr	r3, [pc, #96]	; (900100b0 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
90010050:	440a      	add	r2, r1
90010052:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
90010054:	461a      	mov	r2, r3
90010056:	681b      	ldr	r3, [r3, #0]
90010058:	429c      	cmp	r4, r3
9001005a:	d8fb      	bhi.n	90010054 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9001005c:	6850      	ldr	r0, [r2, #4]
9001005e:	eb02 0c00 	add.w	ip, r2, r0
90010062:	4564      	cmp	r4, ip
90010064:	d00f      	beq.n	90010086 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010066:	1860      	adds	r0, r4, r1
90010068:	4283      	cmp	r3, r0
9001006a:	d014      	beq.n	90010096 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9001006c:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001006e:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
90010070:	bf18      	it	ne
90010072:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
90010074:	4a0f      	ldr	r2, [pc, #60]	; (900100b4 <vPortFree+0xc0>)
90010076:	6813      	ldr	r3, [r2, #0]
90010078:	3301      	adds	r3, #1
9001007a:	6013      	str	r3, [r2, #0]
}
9001007c:	b003      	add	sp, #12
9001007e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
90010082:	f001 bf63 	b.w	90011f4c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
90010086:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010088:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9001008a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9001008c:	4283      	cmp	r3, r0
9001008e:	d001      	beq.n	90010094 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
90010090:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
90010092:	e7ef      	b.n	90010074 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
90010094:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
90010096:	4808      	ldr	r0, [pc, #32]	; (900100b8 <vPortFree+0xc4>)
90010098:	6800      	ldr	r0, [r0, #0]
9001009a:	4283      	cmp	r3, r0
9001009c:	d0e6      	beq.n	9001006c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9001009e:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
900100a2:	4401      	add	r1, r0
900100a4:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
900100a6:	e7e1      	b.n	9001006c <vPortFree+0x78>
900100a8:	24039434 	.word	0x24039434
900100ac:	24039438 	.word	0x24039438
900100b0:	24039448 	.word	0x24039448
900100b4:	24039444 	.word	0x24039444
900100b8:	24020d90 	.word	0x24020d90

900100bc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
900100bc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
900100c0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
900100c4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
900100c6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
900100c8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
900100ca:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
900100cc:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
900100d0:	4770      	bx	lr
900100d2:	bf00      	nop

900100d4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
900100d4:	2300      	movs	r3, #0
900100d6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
900100d8:	4770      	bx	lr
900100da:	bf00      	nop

900100dc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
900100dc:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
900100de:	6802      	ldr	r2, [r0, #0]
{
900100e0:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
900100e2:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
900100e4:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
900100e6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
900100e8:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
900100ea:	689c      	ldr	r4, [r3, #8]
900100ec:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
900100ee:	6099      	str	r1, [r3, #8]
}
900100f0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
900100f4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
900100f6:	6002      	str	r2, [r0, #0]
}
900100f8:	4770      	bx	lr
900100fa:	bf00      	nop

900100fc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
900100fc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
900100fe:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
90010100:	1c6b      	adds	r3, r5, #1
90010102:	d010      	beq.n	90010126 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
90010104:	f100 0308 	add.w	r3, r0, #8
90010108:	461c      	mov	r4, r3
9001010a:	685b      	ldr	r3, [r3, #4]
9001010c:	681a      	ldr	r2, [r3, #0]
9001010e:	42aa      	cmp	r2, r5
90010110:	d9fa      	bls.n	90010108 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
90010112:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
90010114:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
90010116:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
90010118:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9001011a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9001011c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9001011e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
90010120:	6002      	str	r2, [r0, #0]
}
90010122:	bc30      	pop	{r4, r5}
90010124:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
90010126:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
90010128:	6863      	ldr	r3, [r4, #4]
9001012a:	e7f2      	b.n	90010112 <vListInsert+0x16>

9001012c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9001012c:	6903      	ldr	r3, [r0, #16]
{
9001012e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
90010130:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
90010132:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
90010136:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
90010138:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9001013c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9001013e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
90010140:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
90010144:	bf08      	it	eq
90010146:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
90010148:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9001014a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9001014c:	3a01      	subs	r2, #1
9001014e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
90010150:	6818      	ldr	r0, [r3, #0]
}
90010152:	4770      	bx	lr

90010154 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
90010154:	4808      	ldr	r0, [pc, #32]	; (90010178 <prvPortStartFirstTask+0x24>)
90010156:	6800      	ldr	r0, [r0, #0]
90010158:	6800      	ldr	r0, [r0, #0]
9001015a:	f380 8808 	msr	MSP, r0
9001015e:	f04f 0000 	mov.w	r0, #0
90010162:	f380 8814 	msr	CONTROL, r0
90010166:	b662      	cpsie	i
90010168:	b661      	cpsie	f
9001016a:	f3bf 8f4f 	dsb	sy
9001016e:	f3bf 8f6f 	isb	sy
90010172:	df00      	svc	0
90010174:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
90010176:	0000      	.short	0x0000
90010178:	e000ed08 	.word	0xe000ed08

9001017c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9001017c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9001018c <vPortEnableVFP+0x10>
90010180:	6801      	ldr	r1, [r0, #0]
90010182:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90010186:	6001      	str	r1, [r0, #0]
90010188:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9001018a:	0000      	.short	0x0000
9001018c:	e000ed88 	.word	0xe000ed88

90010190 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
90010190:	4b0e      	ldr	r3, [pc, #56]	; (900101cc <prvTaskExitError+0x3c>)
{
90010192:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
90010194:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
90010196:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
90010198:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9001019a:	3301      	adds	r3, #1
9001019c:	d008      	beq.n	900101b0 <prvTaskExitError+0x20>
9001019e:	f04f 0350 	mov.w	r3, #80	; 0x50
900101a2:	f383 8811 	msr	BASEPRI, r3
900101a6:	f3bf 8f6f 	isb	sy
900101aa:	f3bf 8f4f 	dsb	sy
900101ae:	e7fe      	b.n	900101ae <prvTaskExitError+0x1e>
900101b0:	f04f 0350 	mov.w	r3, #80	; 0x50
900101b4:	f383 8811 	msr	BASEPRI, r3
900101b8:	f3bf 8f6f 	isb	sy
900101bc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
900101c0:	9b01      	ldr	r3, [sp, #4]
900101c2:	2b00      	cmp	r3, #0
900101c4:	d0fc      	beq.n	900101c0 <prvTaskExitError+0x30>
}
900101c6:	b002      	add	sp, #8
900101c8:	4770      	bx	lr
900101ca:	bf00      	nop
900101cc:	24000080 	.word	0x24000080

900101d0 <pxPortInitialiseStack>:
{
900101d0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
900101d2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
900101d6:	4809      	ldr	r0, [pc, #36]	; (900101fc <pxPortInitialiseStack+0x2c>)
{
900101d8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
900101da:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
900101de:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
900101e2:	f843 2c20 	str.w	r2, [r3, #-32]
}
900101e6:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
900101ea:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
900101ee:	f06f 0102 	mvn.w	r1, #2
}
900101f2:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
900101f6:	f843 1c24 	str.w	r1, [r3, #-36]
}
900101fa:	4770      	bx	lr
900101fc:	90010191 	.word	0x90010191

90010200 <SVC_Handler>:
	__asm volatile (
90010200:	4b07      	ldr	r3, [pc, #28]	; (90010220 <pxCurrentTCBConst2>)
90010202:	6819      	ldr	r1, [r3, #0]
90010204:	6808      	ldr	r0, [r1, #0]
90010206:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001020a:	f380 8809 	msr	PSP, r0
9001020e:	f3bf 8f6f 	isb	sy
90010212:	f04f 0000 	mov.w	r0, #0
90010216:	f380 8811 	msr	BASEPRI, r0
9001021a:	4770      	bx	lr
9001021c:	f3af 8000 	nop.w

90010220 <pxCurrentTCBConst2>:
90010220:	24039498 	.word	0x24039498

90010224 <vPortEnterCritical>:
90010224:	f04f 0350 	mov.w	r3, #80	; 0x50
90010228:	f383 8811 	msr	BASEPRI, r3
9001022c:	f3bf 8f6f 	isb	sy
90010230:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
90010234:	4a0b      	ldr	r2, [pc, #44]	; (90010264 <vPortEnterCritical+0x40>)
90010236:	6813      	ldr	r3, [r2, #0]
90010238:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9001023a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9001023c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9001023e:	d000      	beq.n	90010242 <vPortEnterCritical+0x1e>
}
90010240:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
90010242:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010246:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9001024a:	b2db      	uxtb	r3, r3
9001024c:	2b00      	cmp	r3, #0
9001024e:	d0f7      	beq.n	90010240 <vPortEnterCritical+0x1c>
90010250:	f04f 0350 	mov.w	r3, #80	; 0x50
90010254:	f383 8811 	msr	BASEPRI, r3
90010258:	f3bf 8f6f 	isb	sy
9001025c:	f3bf 8f4f 	dsb	sy
90010260:	e7fe      	b.n	90010260 <vPortEnterCritical+0x3c>
90010262:	bf00      	nop
90010264:	24000080 	.word	0x24000080

90010268 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
90010268:	4a08      	ldr	r2, [pc, #32]	; (9001028c <vPortExitCritical+0x24>)
9001026a:	6813      	ldr	r3, [r2, #0]
9001026c:	b943      	cbnz	r3, 90010280 <vPortExitCritical+0x18>
9001026e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010272:	f383 8811 	msr	BASEPRI, r3
90010276:	f3bf 8f6f 	isb	sy
9001027a:	f3bf 8f4f 	dsb	sy
9001027e:	e7fe      	b.n	9001027e <vPortExitCritical+0x16>
	uxCriticalNesting--;
90010280:	3b01      	subs	r3, #1
90010282:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
90010284:	b90b      	cbnz	r3, 9001028a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
90010286:	f383 8811 	msr	BASEPRI, r3
}
9001028a:	4770      	bx	lr
9001028c:	24000080 	.word	0x24000080

90010290 <PendSV_Handler>:
	__asm volatile
90010290:	f3ef 8009 	mrs	r0, PSP
90010294:	f3bf 8f6f 	isb	sy
90010298:	4b15      	ldr	r3, [pc, #84]	; (900102f0 <pxCurrentTCBConst>)
9001029a:	681a      	ldr	r2, [r3, #0]
9001029c:	f01e 0f10 	tst.w	lr, #16
900102a0:	bf08      	it	eq
900102a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
900102a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900102aa:	6010      	str	r0, [r2, #0]
900102ac:	e92d 0009 	stmdb	sp!, {r0, r3}
900102b0:	f04f 0050 	mov.w	r0, #80	; 0x50
900102b4:	f380 8811 	msr	BASEPRI, r0
900102b8:	f3bf 8f4f 	dsb	sy
900102bc:	f3bf 8f6f 	isb	sy
900102c0:	f001 fe80 	bl	90011fc4 <vTaskSwitchContext>
900102c4:	f04f 0000 	mov.w	r0, #0
900102c8:	f380 8811 	msr	BASEPRI, r0
900102cc:	bc09      	pop	{r0, r3}
900102ce:	6819      	ldr	r1, [r3, #0]
900102d0:	6808      	ldr	r0, [r1, #0]
900102d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900102d6:	f01e 0f10 	tst.w	lr, #16
900102da:	bf08      	it	eq
900102dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
900102e0:	f380 8809 	msr	PSP, r0
900102e4:	f3bf 8f6f 	isb	sy
900102e8:	4770      	bx	lr
900102ea:	bf00      	nop
900102ec:	f3af 8000 	nop.w

900102f0 <pxCurrentTCBConst>:
900102f0:	24039498 	.word	0x24039498

900102f4 <xPortSysTickHandler>:
{
900102f4:	b508      	push	{r3, lr}
	__asm volatile
900102f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900102fa:	f383 8811 	msr	BASEPRI, r3
900102fe:	f3bf 8f6f 	isb	sy
90010302:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
90010306:	f001 fe37 	bl	90011f78 <xTaskIncrementTick>
9001030a:	b128      	cbz	r0, 90010318 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9001030c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010310:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010314:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
90010318:	2300      	movs	r3, #0
9001031a:	f383 8811 	msr	BASEPRI, r3
}
9001031e:	bd08      	pop	{r3, pc}

90010320 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010320:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
90010324:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010326:	4806      	ldr	r0, [pc, #24]	; (90010340 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
90010328:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001032a:	4906      	ldr	r1, [pc, #24]	; (90010344 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9001032c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9001032e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
90010330:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010332:	fba1 1303 	umull	r1, r3, r1, r3
90010336:	099b      	lsrs	r3, r3, #6
90010338:	3b01      	subs	r3, #1
9001033a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9001033c:	6110      	str	r0, [r2, #16]
}
9001033e:	4770      	bx	lr
90010340:	24000070 	.word	0x24000070
90010344:	10624dd3 	.word	0x10624dd3

90010348 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
90010348:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001034c:	4a48      	ldr	r2, [pc, #288]	; (90010470 <xPortStartScheduler+0x128>)
9001034e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
90010352:	4291      	cmp	r1, r2
90010354:	d041      	beq.n	900103da <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010356:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9001035a:	4b46      	ldr	r3, [pc, #280]	; (90010474 <xPortStartScheduler+0x12c>)
9001035c:	429a      	cmp	r2, r3
9001035e:	d033      	beq.n	900103c8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010360:	4b45      	ldr	r3, [pc, #276]	; (90010478 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010362:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010364:	4945      	ldr	r1, [pc, #276]	; (9001047c <xPortStartScheduler+0x134>)
{
90010366:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010368:	781a      	ldrb	r2, [r3, #0]
{
9001036a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001036c:	4c44      	ldr	r4, [pc, #272]	; (90010480 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9001036e:	b2d2      	uxtb	r2, r2
90010370:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010372:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010374:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
90010376:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010378:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001037a:	b2db      	uxtb	r3, r3
9001037c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010380:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010384:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010388:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001038c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001038e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010390:	d511      	bpl.n	900103b6 <xPortStartScheduler+0x6e>
90010392:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010394:	f89d 3007 	ldrb.w	r3, [sp, #7]
90010398:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001039a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9001039c:	005b      	lsls	r3, r3, #1
9001039e:	b2db      	uxtb	r3, r3
900103a0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
900103a4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900103a8:	0609      	lsls	r1, r1, #24
900103aa:	d4f3      	bmi.n	90010394 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
900103ac:	2803      	cmp	r0, #3
900103ae:	6020      	str	r0, [r4, #0]
900103b0:	f88d 3007 	strb.w	r3, [sp, #7]
900103b4:	d01a      	beq.n	900103ec <xPortStartScheduler+0xa4>
	__asm volatile
900103b6:	f04f 0350 	mov.w	r3, #80	; 0x50
900103ba:	f383 8811 	msr	BASEPRI, r3
900103be:	f3bf 8f6f 	isb	sy
900103c2:	f3bf 8f4f 	dsb	sy
900103c6:	e7fe      	b.n	900103c6 <xPortStartScheduler+0x7e>
900103c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900103cc:	f383 8811 	msr	BASEPRI, r3
900103d0:	f3bf 8f6f 	isb	sy
900103d4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900103d8:	e7fe      	b.n	900103d8 <xPortStartScheduler+0x90>
900103da:	f04f 0350 	mov.w	r3, #80	; 0x50
900103de:	f383 8811 	msr	BASEPRI, r3
900103e2:	f3bf 8f6f 	isb	sy
900103e6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900103ea:	e7fe      	b.n	900103ea <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900103ec:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900103ee:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900103f2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900103f6:	4a20      	ldr	r2, [pc, #128]	; (90010478 <xPortStartScheduler+0x130>)
900103f8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
900103fa:	4e22      	ldr	r6, [pc, #136]	; (90010484 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900103fc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
900103fe:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010400:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
90010402:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010406:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9001040a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9001040e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
90010412:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
90010416:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9001041a:	f7ff ff81 	bl	90010320 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9001041e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
90010420:	f7ff feac 	bl	9001017c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
90010424:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
90010428:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9001042c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
90010430:	f7ff fe90 	bl	90010154 <prvPortStartFirstTask>
	vTaskSwitchContext();
90010434:	f001 fdc6 	bl	90011fc4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
90010438:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9001043a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9001043c:	3301      	adds	r3, #1
9001043e:	d008      	beq.n	90010452 <xPortStartScheduler+0x10a>
90010440:	f04f 0350 	mov.w	r3, #80	; 0x50
90010444:	f383 8811 	msr	BASEPRI, r3
90010448:	f3bf 8f6f 	isb	sy
9001044c:	f3bf 8f4f 	dsb	sy
90010450:	e7fe      	b.n	90010450 <xPortStartScheduler+0x108>
90010452:	f04f 0350 	mov.w	r3, #80	; 0x50
90010456:	f383 8811 	msr	BASEPRI, r3
9001045a:	f3bf 8f6f 	isb	sy
9001045e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010462:	9b03      	ldr	r3, [sp, #12]
90010464:	2b00      	cmp	r3, #0
90010466:	d0fc      	beq.n	90010462 <xPortStartScheduler+0x11a>
}
90010468:	2000      	movs	r0, #0
9001046a:	b004      	add	sp, #16
9001046c:	bd70      	pop	{r4, r5, r6, pc}
9001046e:	bf00      	nop
90010470:	410fc271 	.word	0x410fc271
90010474:	410fc270 	.word	0x410fc270
90010478:	e000e400 	.word	0xe000e400
9001047c:	24039450 	.word	0x24039450
90010480:	24039454 	.word	0x24039454
90010484:	24000080 	.word	0x24000080

90010488 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010488:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001048c:	2b0f      	cmp	r3, #15
9001048e:	d90e      	bls.n	900104ae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010490:	4911      	ldr	r1, [pc, #68]	; (900104d8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010492:	4a12      	ldr	r2, [pc, #72]	; (900104dc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010494:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010496:	7812      	ldrb	r2, [r2, #0]
90010498:	429a      	cmp	r2, r3
9001049a:	d908      	bls.n	900104ae <vPortValidateInterruptPriority+0x26>
9001049c:	f04f 0350 	mov.w	r3, #80	; 0x50
900104a0:	f383 8811 	msr	BASEPRI, r3
900104a4:	f3bf 8f6f 	isb	sy
900104a8:	f3bf 8f4f 	dsb	sy
900104ac:	e7fe      	b.n	900104ac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
900104ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900104b2:	4a0b      	ldr	r2, [pc, #44]	; (900104e0 <vPortValidateInterruptPriority+0x58>)
900104b4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
900104b8:	6812      	ldr	r2, [r2, #0]
900104ba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
900104be:	4293      	cmp	r3, r2
900104c0:	d908      	bls.n	900104d4 <vPortValidateInterruptPriority+0x4c>
900104c2:	f04f 0350 	mov.w	r3, #80	; 0x50
900104c6:	f383 8811 	msr	BASEPRI, r3
900104ca:	f3bf 8f6f 	isb	sy
900104ce:	f3bf 8f4f 	dsb	sy
900104d2:	e7fe      	b.n	900104d2 <vPortValidateInterruptPriority+0x4a>
	}
900104d4:	4770      	bx	lr
900104d6:	bf00      	nop
900104d8:	e000e3f0 	.word	0xe000e3f0
900104dc:	24039450 	.word	0x24039450
900104e0:	24039454 	.word	0x24039454

900104e4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
900104e4:	b570      	push	{r4, r5, r6, lr}
900104e6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900104e8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
900104ea:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900104ec:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900104ee:	b92a      	cbnz	r2, 900104fc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900104f0:	6805      	ldr	r5, [r0, #0]
900104f2:	b365      	cbz	r5, 9001054e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900104f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
900104f6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900104f8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
900104fa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
900104fc:	b97d      	cbnz	r5, 9001051e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900104fe:	6840      	ldr	r0, [r0, #4]
90010500:	f019 fb46 	bl	90029b90 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010504:	6863      	ldr	r3, [r4, #4]
90010506:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010508:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001050a:	68a2      	ldr	r2, [r4, #8]
9001050c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001050e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010510:	d319      	bcc.n	90010546 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010512:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010514:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010516:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
90010518:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001051a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001051c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9001051e:	68c0      	ldr	r0, [r0, #12]
90010520:	f019 fb36 	bl	90029b90 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010524:	6c22      	ldr	r2, [r4, #64]	; 0x40
90010526:	68e3      	ldr	r3, [r4, #12]
90010528:	4251      	negs	r1, r2
9001052a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001052c:	6822      	ldr	r2, [r4, #0]
9001052e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010530:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010532:	d202      	bcs.n	9001053a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90010534:	68a3      	ldr	r3, [r4, #8]
90010536:	440b      	add	r3, r1
90010538:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9001053a:	2d02      	cmp	r5, #2
9001053c:	d00d      	beq.n	9001055a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001053e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010540:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010542:	63a6      	str	r6, [r4, #56]	; 0x38
}
90010544:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010546:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
90010548:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9001054a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9001054c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9001054e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010550:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
90010552:	f001 ff1f 	bl	90012394 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90010556:	60a5      	str	r5, [r4, #8]
90010558:	e7ce      	b.n	900104f8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001055a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9001055c:	f04f 0000 	mov.w	r0, #0
90010560:	bf38      	it	cc
90010562:	2601      	movcc	r6, #1
90010564:	e7c8      	b.n	900104f8 <prvCopyDataToQueue+0x14>
90010566:	bf00      	nop

90010568 <xQueueGenericCreateStatic>:
	{
90010568:	b530      	push	{r4, r5, lr}
9001056a:	b083      	sub	sp, #12
9001056c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010570:	b940      	cbnz	r0, 90010584 <xQueueGenericCreateStatic+0x1c>
90010572:	f04f 0350 	mov.w	r3, #80	; 0x50
90010576:	f383 8811 	msr	BASEPRI, r3
9001057a:	f3bf 8f6f 	isb	sy
9001057e:	f3bf 8f4f 	dsb	sy
90010582:	e7fe      	b.n	90010582 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010584:	461d      	mov	r5, r3
90010586:	b153      	cbz	r3, 9001059e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010588:	b30a      	cbz	r2, 900105ce <xQueueGenericCreateStatic+0x66>
9001058a:	b989      	cbnz	r1, 900105b0 <xQueueGenericCreateStatic+0x48>
9001058c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010590:	f383 8811 	msr	BASEPRI, r3
90010594:	f3bf 8f6f 	isb	sy
90010598:	f3bf 8f4f 	dsb	sy
9001059c:	e7fe      	b.n	9001059c <xQueueGenericCreateStatic+0x34>
9001059e:	f04f 0350 	mov.w	r3, #80	; 0x50
900105a2:	f383 8811 	msr	BASEPRI, r3
900105a6:	f3bf 8f6f 	isb	sy
900105aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
900105ae:	e7fe      	b.n	900105ae <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900105b0:	b16a      	cbz	r2, 900105ce <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
900105b2:	2350      	movs	r3, #80	; 0x50
900105b4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
900105b6:	9b01      	ldr	r3, [sp, #4]
900105b8:	2b50      	cmp	r3, #80	; 0x50
900105ba:	d013      	beq.n	900105e4 <xQueueGenericCreateStatic+0x7c>
900105bc:	f04f 0350 	mov.w	r3, #80	; 0x50
900105c0:	f383 8811 	msr	BASEPRI, r3
900105c4:	f3bf 8f6f 	isb	sy
900105c8:	f3bf 8f4f 	dsb	sy
900105cc:	e7fe      	b.n	900105cc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
900105ce:	2900      	cmp	r1, #0
900105d0:	d0ef      	beq.n	900105b2 <xQueueGenericCreateStatic+0x4a>
900105d2:	f04f 0350 	mov.w	r3, #80	; 0x50
900105d6:	f383 8811 	msr	BASEPRI, r3
900105da:	f3bf 8f6f 	isb	sy
900105de:	f3bf 8f4f 	dsb	sy
900105e2:	e7fe      	b.n	900105e2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
900105e4:	2900      	cmp	r1, #0
900105e6:	bf08      	it	eq
900105e8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
900105ea:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
900105ec:	6429      	str	r1, [r5, #64]	; 0x40
900105ee:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900105f0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900105f2:	2201      	movs	r2, #1
900105f4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
900105f8:	f7ff fe14 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900105fc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900105fe:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010600:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010602:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010604:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
90010608:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001060c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001060e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010610:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010612:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010614:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010616:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001061a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001061c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010620:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010624:	f7ff fd4a 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010628:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001062c:	f7ff fd46 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
90010630:	f7ff fe1a 	bl	90010268 <vPortExitCritical>
	}
90010634:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
90010636:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9001063a:	b003      	add	sp, #12
9001063c:	bd30      	pop	{r4, r5, pc}
9001063e:	bf00      	nop

90010640 <xQueueGenericCreate>:
	{
90010640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
90010642:	b940      	cbnz	r0, 90010656 <xQueueGenericCreate+0x16>
90010644:	f04f 0350 	mov.w	r3, #80	; 0x50
90010648:	f383 8811 	msr	BASEPRI, r3
9001064c:	f3bf 8f6f 	isb	sy
90010650:	f3bf 8f4f 	dsb	sy
90010654:	e7fe      	b.n	90010654 <xQueueGenericCreate+0x14>
90010656:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010658:	fb01 f000 	mul.w	r0, r1, r0
9001065c:	460e      	mov	r6, r1
9001065e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010660:	3050      	adds	r0, #80	; 0x50
90010662:	f7ff fc09 	bl	9000fe78 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010666:	4604      	mov	r4, r0
90010668:	b340      	cbz	r0, 900106bc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001066a:	2300      	movs	r3, #0
9001066c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
90010670:	b336      	cbz	r6, 900106c0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010672:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90010676:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90010678:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9001067c:	f7ff fdd2 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010680:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010682:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010686:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010688:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9001068c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010690:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010692:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010694:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010696:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010698:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9001069a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001069c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001069e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
900106a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900106a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900106a8:	f7ff fd08 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900106ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
900106b0:	f7ff fd04 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
900106b4:	f7ff fdd8 	bl	90010268 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900106b8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
900106bc:	4620      	mov	r0, r4
900106be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900106c0:	4603      	mov	r3, r0
900106c2:	e7d8      	b.n	90010676 <xQueueGenericCreate+0x36>

900106c4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
900106c4:	b940      	cbnz	r0, 900106d8 <xQueueCreateCountingSemaphoreStatic+0x14>
900106c6:	f04f 0350 	mov.w	r3, #80	; 0x50
900106ca:	f383 8811 	msr	BASEPRI, r3
900106ce:	f3bf 8f6f 	isb	sy
900106d2:	f3bf 8f4f 	dsb	sy
900106d6:	e7fe      	b.n	900106d6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
900106d8:	4288      	cmp	r0, r1
900106da:	d208      	bcs.n	900106ee <xQueueCreateCountingSemaphoreStatic+0x2a>
900106dc:	f04f 0350 	mov.w	r3, #80	; 0x50
900106e0:	f383 8811 	msr	BASEPRI, r3
900106e4:	f3bf 8f6f 	isb	sy
900106e8:	f3bf 8f4f 	dsb	sy
900106ec:	e7fe      	b.n	900106ec <xQueueCreateCountingSemaphoreStatic+0x28>
	{
900106ee:	b530      	push	{r4, r5, lr}
900106f0:	4615      	mov	r5, r2
900106f2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
900106f4:	2a00      	cmp	r2, #0
900106f6:	d03d      	beq.n	90010774 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
900106f8:	2350      	movs	r3, #80	; 0x50
900106fa:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
900106fc:	9b03      	ldr	r3, [sp, #12]
900106fe:	2b50      	cmp	r3, #80	; 0x50
90010700:	d008      	beq.n	90010714 <xQueueCreateCountingSemaphoreStatic+0x50>
90010702:	f04f 0350 	mov.w	r3, #80	; 0x50
90010706:	f383 8811 	msr	BASEPRI, r3
9001070a:	f3bf 8f6f 	isb	sy
9001070e:	f3bf 8f4f 	dsb	sy
90010712:	e7fe      	b.n	90010712 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90010714:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010716:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010718:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001071a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9001071c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010720:	6414      	str	r4, [r2, #64]	; 0x40
90010722:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010724:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
90010726:	f7ff fd7d 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001072a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001072c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001072e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010730:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
90010734:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010738:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001073c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001073e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010740:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010742:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010744:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010748:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9001074c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010750:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010754:	f7ff fcb2 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010758:	f105 0024 	add.w	r0, r5, #36	; 0x24
9001075c:	f7ff fcae 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
90010760:	f7ff fd82 	bl	90010268 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010764:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90010766:	9901      	ldr	r1, [sp, #4]
	}
90010768:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9001076a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001076e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
90010770:	b005      	add	sp, #20
90010772:	bd30      	pop	{r4, r5, pc}
90010774:	f04f 0350 	mov.w	r3, #80	; 0x50
90010778:	f383 8811 	msr	BASEPRI, r3
9001077c:	f3bf 8f6f 	isb	sy
90010780:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010784:	e7fe      	b.n	90010784 <xQueueCreateCountingSemaphoreStatic+0xc0>
90010786:	bf00      	nop

90010788 <xQueueCreateCountingSemaphore>:
	{
90010788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9001078a:	b940      	cbnz	r0, 9001079e <xQueueCreateCountingSemaphore+0x16>
9001078c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010790:	f383 8811 	msr	BASEPRI, r3
90010794:	f3bf 8f6f 	isb	sy
90010798:	f3bf 8f4f 	dsb	sy
9001079c:	e7fe      	b.n	9001079c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9001079e:	4288      	cmp	r0, r1
900107a0:	4604      	mov	r4, r0
900107a2:	460e      	mov	r6, r1
900107a4:	d208      	bcs.n	900107b8 <xQueueCreateCountingSemaphore+0x30>
900107a6:	f04f 0350 	mov.w	r3, #80	; 0x50
900107aa:	f383 8811 	msr	BASEPRI, r3
900107ae:	f3bf 8f6f 	isb	sy
900107b2:	f3bf 8f4f 	dsb	sy
900107b6:	e7fe      	b.n	900107b6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900107b8:	2050      	movs	r0, #80	; 0x50
900107ba:	f7ff fb5d 	bl	9000fe78 <pvPortMalloc>
		if( pxNewQueue != NULL )
900107be:	4605      	mov	r5, r0
900107c0:	b330      	cbz	r0, 90010810 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900107c2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900107c4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
900107c6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900107c8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900107cc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
900107ce:	f7ff fd29 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107d2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900107d4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900107d6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900107da:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107dc:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
900107e0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107e4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107e6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107ea:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900107ec:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900107ee:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900107f0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900107f4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900107f8:	f7ff fc60 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900107fc:	f105 0024 	add.w	r0, r5, #36	; 0x24
90010800:	f7ff fc5c 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
90010804:	f7ff fd30 	bl	90010268 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010808:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001080a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9001080c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
90010810:	4628      	mov	r0, r5
90010812:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90010814 <xQueueGenericSend>:
{
90010814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90010818:	b084      	sub	sp, #16
9001081a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9001081c:	2800      	cmp	r0, #0
9001081e:	f000 8103 	beq.w	90010a28 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010822:	4688      	mov	r8, r1
90010824:	4604      	mov	r4, r0
90010826:	461f      	mov	r7, r3
90010828:	2900      	cmp	r1, #0
9001082a:	f000 8097 	beq.w	9001095c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9001082e:	2f02      	cmp	r7, #2
90010830:	d10b      	bne.n	9001084a <xQueueGenericSend+0x36>
90010832:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010834:	2b01      	cmp	r3, #1
90010836:	d008      	beq.n	9001084a <xQueueGenericSend+0x36>
90010838:	f04f 0350 	mov.w	r3, #80	; 0x50
9001083c:	f383 8811 	msr	BASEPRI, r3
90010840:	f3bf 8f6f 	isb	sy
90010844:	f3bf 8f4f 	dsb	sy
90010848:	e7fe      	b.n	90010848 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001084a:	f001 fd4d 	bl	900122e8 <xTaskGetSchedulerState>
9001084e:	2800      	cmp	r0, #0
90010850:	f000 80f3 	beq.w	90010a3a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010854:	f1a7 0902 	sub.w	r9, r7, #2
90010858:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001085a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001085e:	fab9 f989 	clz	r9, r9
90010862:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
90010866:	f7ff fcdd 	bl	90010224 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001086a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9001086c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001086e:	429a      	cmp	r2, r3
90010870:	f0c0 80f0 	bcc.w	90010a54 <xQueueGenericSend+0x240>
90010874:	f1b9 0f00 	cmp.w	r9, #0
90010878:	f040 80ec 	bne.w	90010a54 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9001087c:	9b01      	ldr	r3, [sp, #4]
9001087e:	2b00      	cmp	r3, #0
90010880:	f000 8101 	beq.w	90010a86 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
90010884:	2d00      	cmp	r5, #0
90010886:	f000 80cb 	beq.w	90010a20 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9001088a:	f7ff fced 	bl	90010268 <vPortExitCritical>
		vTaskSuspendAll();
9001088e:	f001 fb55 	bl	90011f3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010892:	f7ff fcc7 	bl	90010224 <vPortEnterCritical>
90010896:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001089a:	2bff      	cmp	r3, #255	; 0xff
9001089c:	d102      	bne.n	900108a4 <xQueueGenericSend+0x90>
9001089e:	2300      	movs	r3, #0
900108a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
900108a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900108a8:	2bff      	cmp	r3, #255	; 0xff
900108aa:	d102      	bne.n	900108b2 <xQueueGenericSend+0x9e>
900108ac:	2300      	movs	r3, #0
900108ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
900108b2:	f7ff fcd9 	bl	90010268 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900108b6:	a901      	add	r1, sp, #4
900108b8:	a802      	add	r0, sp, #8
900108ba:	f001 fcc1 	bl	90012240 <xTaskCheckForTimeOut>
900108be:	2800      	cmp	r0, #0
900108c0:	f040 80e5 	bne.w	90010a8e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
900108c4:	f7ff fcae 	bl	90010224 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
900108c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900108ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900108cc:	429a      	cmp	r2, r3
900108ce:	d052      	beq.n	90010976 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
900108d0:	f7ff fcca 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
900108d4:	f7ff fca6 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900108d8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
900108dc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900108de:	2d00      	cmp	r5, #0
900108e0:	dc04      	bgt.n	900108ec <xQueueGenericSend+0xd8>
900108e2:	e011      	b.n	90010908 <xQueueGenericSend+0xf4>
			--cTxLock;
900108e4:	1e6a      	subs	r2, r5, #1
900108e6:	b2d3      	uxtb	r3, r2
900108e8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900108ea:	b16b      	cbz	r3, 90010908 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900108ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900108ee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900108f0:	b153      	cbz	r3, 90010908 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900108f2:	f001 fc4f 	bl	90012194 <xTaskRemoveFromEventList>
900108f6:	2800      	cmp	r0, #0
900108f8:	d0f4      	beq.n	900108e4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
900108fa:	f001 fce9 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
900108fe:	1e6a      	subs	r2, r5, #1
90010900:	b2d3      	uxtb	r3, r2
90010902:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010904:	2b00      	cmp	r3, #0
90010906:	d1f1      	bne.n	900108ec <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90010908:	23ff      	movs	r3, #255	; 0xff
9001090a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001090e:	f7ff fcab 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90010912:	f7ff fc87 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010916:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9001091a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001091c:	2d00      	cmp	r5, #0
9001091e:	dd14      	ble.n	9001094a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010920:	f104 0a10 	add.w	sl, r4, #16
90010924:	e003      	b.n	9001092e <xQueueGenericSend+0x11a>
				--cRxLock;
90010926:	1e6a      	subs	r2, r5, #1
90010928:	b2d3      	uxtb	r3, r2
9001092a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001092c:	b16b      	cbz	r3, 9001094a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001092e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010930:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010932:	b153      	cbz	r3, 9001094a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010934:	f001 fc2e 	bl	90012194 <xTaskRemoveFromEventList>
90010938:	2800      	cmp	r0, #0
9001093a:	d0f4      	beq.n	90010926 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9001093c:	f001 fcc8 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
90010940:	1e6a      	subs	r2, r5, #1
90010942:	b2d3      	uxtb	r3, r2
90010944:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010946:	2b00      	cmp	r3, #0
90010948:	d1f1      	bne.n	9001092e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9001094a:	23ff      	movs	r3, #255	; 0xff
9001094c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010950:	f7ff fc8a 	bl	90010268 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010954:	f001 fafa 	bl	90011f4c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010958:	2501      	movs	r5, #1
9001095a:	e784      	b.n	90010866 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001095c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001095e:	2b00      	cmp	r3, #0
90010960:	f43f af65 	beq.w	9001082e <xQueueGenericSend+0x1a>
90010964:	f04f 0350 	mov.w	r3, #80	; 0x50
90010968:	f383 8811 	msr	BASEPRI, r3
9001096c:	f3bf 8f6f 	isb	sy
90010970:	f3bf 8f4f 	dsb	sy
90010974:	e7fe      	b.n	90010974 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010976:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9001097a:	f7ff fc75 	bl	90010268 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9001097e:	9901      	ldr	r1, [sp, #4]
90010980:	4650      	mov	r0, sl
90010982:	f001 fb79 	bl	90012078 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010986:	f7ff fc4d 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001098a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9001098e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010990:	2d00      	cmp	r5, #0
90010992:	dc04      	bgt.n	9001099e <xQueueGenericSend+0x18a>
90010994:	e011      	b.n	900109ba <xQueueGenericSend+0x1a6>
			--cTxLock;
90010996:	1e6b      	subs	r3, r5, #1
90010998:	b2da      	uxtb	r2, r3
9001099a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001099c:	b16a      	cbz	r2, 900109ba <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001099e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109a0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109a2:	b153      	cbz	r3, 900109ba <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109a4:	f001 fbf6 	bl	90012194 <xTaskRemoveFromEventList>
900109a8:	2800      	cmp	r0, #0
900109aa:	d0f4      	beq.n	90010996 <xQueueGenericSend+0x182>
						vTaskMissedYield();
900109ac:	f001 fc90 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
900109b0:	1e6b      	subs	r3, r5, #1
900109b2:	b2da      	uxtb	r2, r3
900109b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109b6:	2a00      	cmp	r2, #0
900109b8:	d1f1      	bne.n	9001099e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
900109ba:	23ff      	movs	r3, #255	; 0xff
900109bc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
900109c0:	f7ff fc52 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
900109c4:	f7ff fc2e 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900109c8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
900109cc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109ce:	2d00      	cmp	r5, #0
900109d0:	dc04      	bgt.n	900109dc <xQueueGenericSend+0x1c8>
900109d2:	e011      	b.n	900109f8 <xQueueGenericSend+0x1e4>
				--cRxLock;
900109d4:	1e6b      	subs	r3, r5, #1
900109d6:	b2da      	uxtb	r2, r3
900109d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109da:	b16a      	cbz	r2, 900109f8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109de:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109e0:	b153      	cbz	r3, 900109f8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109e2:	f001 fbd7 	bl	90012194 <xTaskRemoveFromEventList>
900109e6:	2800      	cmp	r0, #0
900109e8:	d0f4      	beq.n	900109d4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
900109ea:	f001 fc71 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
900109ee:	1e6b      	subs	r3, r5, #1
900109f0:	b2da      	uxtb	r2, r3
900109f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109f4:	2a00      	cmp	r2, #0
900109f6:	d1f1      	bne.n	900109dc <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
900109f8:	23ff      	movs	r3, #255	; 0xff
900109fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900109fe:	f7ff fc33 	bl	90010268 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010a02:	f001 faa3 	bl	90011f4c <xTaskResumeAll>
90010a06:	2800      	cmp	r0, #0
90010a08:	d1a6      	bne.n	90010958 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
90010a0a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010a0e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010a12:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010a16:	f3bf 8f4f 	dsb	sy
90010a1a:	f3bf 8f6f 	isb	sy
90010a1e:	e79b      	b.n	90010958 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010a20:	a802      	add	r0, sp, #8
90010a22:	f001 fc01 	bl	90012228 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90010a26:	e730      	b.n	9001088a <xQueueGenericSend+0x76>
90010a28:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a2c:	f383 8811 	msr	BASEPRI, r3
90010a30:	f3bf 8f6f 	isb	sy
90010a34:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010a38:	e7fe      	b.n	90010a38 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010a3a:	9b01      	ldr	r3, [sp, #4]
90010a3c:	2b00      	cmp	r3, #0
90010a3e:	f43f af09 	beq.w	90010854 <xQueueGenericSend+0x40>
90010a42:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a46:	f383 8811 	msr	BASEPRI, r3
90010a4a:	f3bf 8f6f 	isb	sy
90010a4e:	f3bf 8f4f 	dsb	sy
90010a52:	e7fe      	b.n	90010a52 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010a54:	463a      	mov	r2, r7
90010a56:	4641      	mov	r1, r8
90010a58:	4620      	mov	r0, r4
90010a5a:	f7ff fd43 	bl	900104e4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010a60:	2b00      	cmp	r3, #0
90010a62:	d152      	bne.n	90010b0a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
90010a64:	b148      	cbz	r0, 90010a7a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
90010a66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010a6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010a6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010a72:	f3bf 8f4f 	dsb	sy
90010a76:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90010a7a:	f7ff fbf5 	bl	90010268 <vPortExitCritical>
				return pdPASS;
90010a7e:	2001      	movs	r0, #1
}
90010a80:	b004      	add	sp, #16
90010a82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
90010a86:	f7ff fbef 	bl	90010268 <vPortExitCritical>
					return errQUEUE_FULL;
90010a8a:	4648      	mov	r0, r9
90010a8c:	e7f8      	b.n	90010a80 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90010a8e:	f7ff fbc9 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010a92:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010a96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a98:	2d00      	cmp	r5, #0
90010a9a:	dd10      	ble.n	90010abe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a9c:	f104 0624 	add.w	r6, r4, #36	; 0x24
90010aa0:	e003      	b.n	90010aaa <xQueueGenericSend+0x296>
			--cTxLock;
90010aa2:	1e6b      	subs	r3, r5, #1
90010aa4:	b2da      	uxtb	r2, r3
90010aa6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010aa8:	b14a      	cbz	r2, 90010abe <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010aaa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010aac:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010aae:	b133      	cbz	r3, 90010abe <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010ab0:	f001 fb70 	bl	90012194 <xTaskRemoveFromEventList>
90010ab4:	2800      	cmp	r0, #0
90010ab6:	d0f4      	beq.n	90010aa2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90010ab8:	f001 fc0a 	bl	900122d0 <vTaskMissedYield>
90010abc:	e7f1      	b.n	90010aa2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
90010abe:	23ff      	movs	r3, #255	; 0xff
90010ac0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010ac4:	f7ff fbd0 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90010ac8:	f7ff fbac 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010acc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010ad0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ad2:	2d00      	cmp	r5, #0
90010ad4:	dd10      	ble.n	90010af8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ad6:	f104 0610 	add.w	r6, r4, #16
90010ada:	e003      	b.n	90010ae4 <xQueueGenericSend+0x2d0>
				--cRxLock;
90010adc:	1e6b      	subs	r3, r5, #1
90010ade:	b2da      	uxtb	r2, r3
90010ae0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ae2:	b14a      	cbz	r2, 90010af8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ae4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ae6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ae8:	b133      	cbz	r3, 90010af8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010aea:	f001 fb53 	bl	90012194 <xTaskRemoveFromEventList>
90010aee:	2800      	cmp	r0, #0
90010af0:	d0f4      	beq.n	90010adc <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
90010af2:	f001 fbed 	bl	900122d0 <vTaskMissedYield>
90010af6:	e7f1      	b.n	90010adc <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
90010af8:	23ff      	movs	r3, #255	; 0xff
90010afa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010afe:	f7ff fbb3 	bl	90010268 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010b02:	f001 fa23 	bl	90011f4c <xTaskResumeAll>
			return errQUEUE_FULL;
90010b06:	2000      	movs	r0, #0
90010b08:	e7ba      	b.n	90010a80 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010b0e:	f001 fb41 	bl	90012194 <xTaskRemoveFromEventList>
90010b12:	2800      	cmp	r0, #0
90010b14:	d0b1      	beq.n	90010a7a <xQueueGenericSend+0x266>
90010b16:	e7a6      	b.n	90010a66 <xQueueGenericSend+0x252>

90010b18 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
90010b18:	b179      	cbz	r1, 90010b3a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010b1a:	2350      	movs	r3, #80	; 0x50
	{
90010b1c:	b570      	push	{r4, r5, r6, lr}
90010b1e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
90010b20:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010b22:	9b01      	ldr	r3, [sp, #4]
90010b24:	2b50      	cmp	r3, #80	; 0x50
90010b26:	d011      	beq.n	90010b4c <xQueueCreateMutexStatic+0x34>
90010b28:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b2c:	f383 8811 	msr	BASEPRI, r3
90010b30:	f3bf 8f6f 	isb	sy
90010b34:	f3bf 8f4f 	dsb	sy
90010b38:	e7fe      	b.n	90010b38 <xQueueCreateMutexStatic+0x20>
90010b3a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010b3e:	f383 8811 	msr	BASEPRI, r3
90010b42:	f3bf 8f6f 	isb	sy
90010b46:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
90010b4a:	e7fe      	b.n	90010b4a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
90010b4c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010b4e:	2301      	movs	r3, #1
90010b50:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010b52:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010b54:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
90010b58:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010b5a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
90010b5c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
90010b60:	f7ff fb60 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b64:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
90010b66:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010b68:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010b6a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
90010b6c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010b70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b74:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
90010b78:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b7c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b7e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b80:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010b82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010b86:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010b8a:	f7ff fa97 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010b8e:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010b92:	f7ff fa93 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
90010b96:	f7ff fb67 	bl	90010268 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010b9a:	4633      	mov	r3, r6
90010b9c:	4632      	mov	r2, r6
90010b9e:	4631      	mov	r1, r6
90010ba0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010ba2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010ba6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010ba8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010baa:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010bac:	f7ff fe32 	bl	90010814 <xQueueGenericSend>
	}
90010bb0:	4620      	mov	r0, r4
90010bb2:	b002      	add	sp, #8
90010bb4:	bd70      	pop	{r4, r5, r6, pc}
90010bb6:	bf00      	nop

90010bb8 <xQueueGiveMutexRecursive>:
	{
90010bb8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
90010bba:	b138      	cbz	r0, 90010bcc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
90010bbc:	6885      	ldr	r5, [r0, #8]
90010bbe:	4604      	mov	r4, r0
90010bc0:	f001 fb8c 	bl	900122dc <xTaskGetCurrentTaskHandle>
90010bc4:	4285      	cmp	r5, r0
90010bc6:	d00a      	beq.n	90010bde <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
90010bc8:	2000      	movs	r0, #0
	}
90010bca:	bd38      	pop	{r3, r4, r5, pc}
90010bcc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bd0:	f383 8811 	msr	BASEPRI, r3
90010bd4:	f3bf 8f6f 	isb	sy
90010bd8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90010bdc:	e7fe      	b.n	90010bdc <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
90010bde:	68e3      	ldr	r3, [r4, #12]
90010be0:	3b01      	subs	r3, #1
90010be2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
90010be4:	b10b      	cbz	r3, 90010bea <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
90010be6:	2001      	movs	r0, #1
	}
90010be8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
90010bea:	461a      	mov	r2, r3
90010bec:	4619      	mov	r1, r3
90010bee:	4620      	mov	r0, r4
90010bf0:	f7ff fe10 	bl	90010814 <xQueueGenericSend>
			xReturn = pdPASS;
90010bf4:	2001      	movs	r0, #1
	}
90010bf6:	bd38      	pop	{r3, r4, r5, pc}

90010bf8 <xQueueCreateMutex>:
	{
90010bf8:	b570      	push	{r4, r5, r6, lr}
90010bfa:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010bfc:	2050      	movs	r0, #80	; 0x50
90010bfe:	f7ff f93b 	bl	9000fe78 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010c02:	4604      	mov	r4, r0
90010c04:	b370      	cbz	r0, 90010c64 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010c06:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
90010c08:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010c0a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010c0c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010c10:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
90010c14:	f7ff fb06 	bl	90010224 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c18:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010c1a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010c1c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010c20:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c22:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
90010c26:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c2a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c2c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c2e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
90010c30:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010c32:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010c36:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010c3a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010c3e:	f7ff fa3d 	bl	900100bc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010c42:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010c46:	f7ff fa39 	bl	900100bc <vListInitialise>
	taskEXIT_CRITICAL();
90010c4a:	f7ff fb0d 	bl	90010268 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010c4e:	4633      	mov	r3, r6
90010c50:	4632      	mov	r2, r6
90010c52:	4631      	mov	r1, r6
90010c54:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010c56:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
90010c5a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
90010c5c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
90010c5e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
90010c60:	f7ff fdd8 	bl	90010814 <xQueueGenericSend>
	}
90010c64:	4620      	mov	r0, r4
90010c66:	bd70      	pop	{r4, r5, r6, pc}

90010c68 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90010c68:	2800      	cmp	r0, #0
90010c6a:	d04e      	beq.n	90010d0a <xQueueGenericSendFromISR+0xa2>
{
90010c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c70:	460e      	mov	r6, r1
90010c72:	4604      	mov	r4, r0
90010c74:	4617      	mov	r7, r2
90010c76:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010c78:	b339      	cbz	r1, 90010cca <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
90010c7a:	2d02      	cmp	r5, #2
90010c7c:	d10b      	bne.n	90010c96 <xQueueGenericSendFromISR+0x2e>
90010c7e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010c80:	2b01      	cmp	r3, #1
90010c82:	d008      	beq.n	90010c96 <xQueueGenericSendFromISR+0x2e>
90010c84:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c88:	f383 8811 	msr	BASEPRI, r3
90010c8c:	f3bf 8f6f 	isb	sy
90010c90:	f3bf 8f4f 	dsb	sy
90010c94:	e7fe      	b.n	90010c94 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010c96:	f7ff fbf7 	bl	90010488 <vPortValidateInterruptPriority>
	__asm volatile
90010c9a:	f3ef 8811 	mrs	r8, BASEPRI
90010c9e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010ca2:	f383 8811 	msr	BASEPRI, r3
90010ca6:	f3bf 8f6f 	isb	sy
90010caa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010cae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90010cb0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010cb2:	429a      	cmp	r2, r3
90010cb4:	d315      	bcc.n	90010ce2 <xQueueGenericSendFromISR+0x7a>
90010cb6:	f1a5 0002 	sub.w	r0, r5, #2
90010cba:	fab0 f080 	clz	r0, r0
90010cbe:	0940      	lsrs	r0, r0, #5
90010cc0:	b978      	cbnz	r0, 90010ce2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
90010cc2:	f388 8811 	msr	BASEPRI, r8
}
90010cc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010cca:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010ccc:	2b00      	cmp	r3, #0
90010cce:	d0d4      	beq.n	90010c7a <xQueueGenericSendFromISR+0x12>
	__asm volatile
90010cd0:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cd4:	f383 8811 	msr	BASEPRI, r3
90010cd8:	f3bf 8f6f 	isb	sy
90010cdc:	f3bf 8f4f 	dsb	sy
90010ce0:	e7fe      	b.n	90010ce0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010ce2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
90010ce4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010ce8:	4631      	mov	r1, r6
90010cea:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010cec:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010cee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010cf0:	f7ff fbf8 	bl	900104e4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
90010cf4:	1c6b      	adds	r3, r5, #1
90010cf6:	d011      	beq.n	90010d1c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010cf8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
90010cfa:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010cfc:	b25b      	sxtb	r3, r3
90010cfe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
90010d02:	f388 8811 	msr	BASEPRI, r8
}
90010d06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
90010d0a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d0e:	f383 8811 	msr	BASEPRI, r3
90010d12:	f3bf 8f6f 	isb	sy
90010d16:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010d1a:	e7fe      	b.n	90010d1a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010d1e:	b90b      	cbnz	r3, 90010d24 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
90010d20:	2001      	movs	r0, #1
90010d22:	e7ce      	b.n	90010cc2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d24:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010d28:	f001 fa34 	bl	90012194 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010d2c:	2800      	cmp	r0, #0
90010d2e:	d0f7      	beq.n	90010d20 <xQueueGenericSendFromISR+0xb8>
90010d30:	2f00      	cmp	r7, #0
90010d32:	d0f5      	beq.n	90010d20 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010d34:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010d36:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010d38:	603b      	str	r3, [r7, #0]
90010d3a:	e7c2      	b.n	90010cc2 <xQueueGenericSendFromISR+0x5a>

90010d3c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
90010d3c:	b360      	cbz	r0, 90010d98 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
90010d3e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
90010d40:	b570      	push	{r4, r5, r6, lr}
90010d42:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
90010d44:	b143      	cbz	r3, 90010d58 <xQueueGiveFromISR+0x1c>
90010d46:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d4a:	f383 8811 	msr	BASEPRI, r3
90010d4e:	f3bf 8f6f 	isb	sy
90010d52:	f3bf 8f4f 	dsb	sy
90010d56:	e7fe      	b.n	90010d56 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010d58:	6803      	ldr	r3, [r0, #0]
90010d5a:	460d      	mov	r5, r1
90010d5c:	b32b      	cbz	r3, 90010daa <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010d5e:	f7ff fb93 	bl	90010488 <vPortValidateInterruptPriority>
	__asm volatile
90010d62:	f3ef 8611 	mrs	r6, BASEPRI
90010d66:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d6a:	f383 8811 	msr	BASEPRI, r3
90010d6e:	f3bf 8f6f 	isb	sy
90010d72:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010d76:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90010d78:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90010d7a:	429a      	cmp	r2, r3
90010d7c:	d921      	bls.n	90010dc2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
90010d7e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010d82:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
90010d84:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010d86:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
90010d88:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
90010d8a:	d01e      	beq.n	90010dca <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010d8c:	3301      	adds	r3, #1
			xReturn = pdPASS;
90010d8e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010d90:	b25b      	sxtb	r3, r3
90010d92:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90010d96:	e015      	b.n	90010dc4 <xQueueGiveFromISR+0x88>
	__asm volatile
90010d98:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d9c:	f383 8811 	msr	BASEPRI, r3
90010da0:	f3bf 8f6f 	isb	sy
90010da4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010da8:	e7fe      	b.n	90010da8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010daa:	6883      	ldr	r3, [r0, #8]
90010dac:	2b00      	cmp	r3, #0
90010dae:	d0d6      	beq.n	90010d5e <xQueueGiveFromISR+0x22>
90010db0:	f04f 0350 	mov.w	r3, #80	; 0x50
90010db4:	f383 8811 	msr	BASEPRI, r3
90010db8:	f3bf 8f6f 	isb	sy
90010dbc:	f3bf 8f4f 	dsb	sy
90010dc0:	e7fe      	b.n	90010dc0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010dc2:	2000      	movs	r0, #0
	__asm volatile
90010dc4:	f386 8811 	msr	BASEPRI, r6
}
90010dc8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010dca:	6a63      	ldr	r3, [r4, #36]	; 0x24
90010dcc:	b90b      	cbnz	r3, 90010dd2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
90010dce:	2001      	movs	r0, #1
90010dd0:	e7f8      	b.n	90010dc4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010dd2:	f104 0024 	add.w	r0, r4, #36	; 0x24
90010dd6:	f001 f9dd 	bl	90012194 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010dda:	2d00      	cmp	r5, #0
90010ddc:	d0f7      	beq.n	90010dce <xQueueGiveFromISR+0x92>
90010dde:	2800      	cmp	r0, #0
90010de0:	d0f5      	beq.n	90010dce <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010de2:	2301      	movs	r3, #1
			xReturn = pdPASS;
90010de4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
90010de6:	602b      	str	r3, [r5, #0]
90010de8:	e7ec      	b.n	90010dc4 <xQueueGiveFromISR+0x88>
90010dea:	bf00      	nop

90010dec <xQueueReceive>:
{
90010dec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010df0:	b085      	sub	sp, #20
90010df2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010df4:	2800      	cmp	r0, #0
90010df6:	f000 815c 	beq.w	900110b2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010dfa:	460f      	mov	r7, r1
90010dfc:	4604      	mov	r4, r0
90010dfe:	2900      	cmp	r1, #0
90010e00:	d079      	beq.n	90010ef6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010e02:	f001 fa71 	bl	900122e8 <xTaskGetSchedulerState>
90010e06:	2800      	cmp	r0, #0
90010e08:	f000 8081 	beq.w	90010f0e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
90010e0c:	f7ff fa0a 	bl	90010224 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010e10:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010e12:	2d00      	cmp	r5, #0
90010e14:	f040 8138 	bne.w	90011088 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90010e18:	9b01      	ldr	r3, [sp, #4]
90010e1a:	2b00      	cmp	r3, #0
90010e1c:	f000 80d5 	beq.w	90010fca <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
90010e20:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e22:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010e26:	a802      	add	r0, sp, #8
90010e28:	f001 f9fe 	bl	90012228 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010e2c:	f7ff fa1c 	bl	90010268 <vPortExitCritical>
		vTaskSuspendAll();
90010e30:	f001 f884 	bl	90011f3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010e34:	f7ff f9f6 	bl	90010224 <vPortEnterCritical>
90010e38:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010e3c:	2bff      	cmp	r3, #255	; 0xff
90010e3e:	d101      	bne.n	90010e44 <xQueueReceive+0x58>
90010e40:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
90010e44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010e48:	2bff      	cmp	r3, #255	; 0xff
90010e4a:	d101      	bne.n	90010e50 <xQueueReceive+0x64>
90010e4c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
90010e50:	f7ff fa0a 	bl	90010268 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010e54:	a901      	add	r1, sp, #4
90010e56:	a802      	add	r0, sp, #8
90010e58:	f001 f9f2 	bl	90012240 <xTaskCheckForTimeOut>
90010e5c:	2800      	cmp	r0, #0
90010e5e:	d163      	bne.n	90010f28 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
90010e60:	f7ff f9e0 	bl	90010224 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010e64:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90010e66:	2b00      	cmp	r3, #0
90010e68:	f000 80b5 	beq.w	90010fd6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
90010e6c:	f7ff f9fc 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e70:	f7ff f9d8 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010e74:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010e78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e7a:	2d00      	cmp	r5, #0
90010e7c:	dc04      	bgt.n	90010e88 <xQueueReceive+0x9c>
90010e7e:	e011      	b.n	90010ea4 <xQueueReceive+0xb8>
			--cTxLock;
90010e80:	1e6b      	subs	r3, r5, #1
90010e82:	b2da      	uxtb	r2, r3
90010e84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e86:	b16a      	cbz	r2, 90010ea4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e88:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e8a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e8c:	b153      	cbz	r3, 90010ea4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e8e:	f001 f981 	bl	90012194 <xTaskRemoveFromEventList>
90010e92:	2800      	cmp	r0, #0
90010e94:	d0f4      	beq.n	90010e80 <xQueueReceive+0x94>
						vTaskMissedYield();
90010e96:	f001 fa1b 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
90010e9a:	1e6b      	subs	r3, r5, #1
90010e9c:	b2da      	uxtb	r2, r3
90010e9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ea0:	2a00      	cmp	r2, #0
90010ea2:	d1f1      	bne.n	90010e88 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
90010ea4:	23ff      	movs	r3, #255	; 0xff
90010ea6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010eaa:	f7ff f9dd 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90010eae:	f7ff f9b9 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010eb2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010eb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010eb8:	2d00      	cmp	r5, #0
90010eba:	dd14      	ble.n	90010ee6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ebc:	f104 0910 	add.w	r9, r4, #16
90010ec0:	e003      	b.n	90010eca <xQueueReceive+0xde>
				--cRxLock;
90010ec2:	1e6b      	subs	r3, r5, #1
90010ec4:	b2da      	uxtb	r2, r3
90010ec6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ec8:	b16a      	cbz	r2, 90010ee6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010eca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ecc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ece:	b153      	cbz	r3, 90010ee6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ed0:	f001 f960 	bl	90012194 <xTaskRemoveFromEventList>
90010ed4:	2800      	cmp	r0, #0
90010ed6:	d0f4      	beq.n	90010ec2 <xQueueReceive+0xd6>
					vTaskMissedYield();
90010ed8:	f001 f9fa 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
90010edc:	1e6b      	subs	r3, r5, #1
90010ede:	b2da      	uxtb	r2, r3
90010ee0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ee2:	2a00      	cmp	r2, #0
90010ee4:	d1f1      	bne.n	90010eca <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
90010ee6:	23ff      	movs	r3, #255	; 0xff
90010ee8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010eec:	f7ff f9bc 	bl	90010268 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010ef0:	f001 f82c 	bl	90011f4c <xTaskResumeAll>
		taskENTER_CRITICAL();
90010ef4:	e060      	b.n	90010fb8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010ef6:	6c03      	ldr	r3, [r0, #64]	; 0x40
90010ef8:	2b00      	cmp	r3, #0
90010efa:	d082      	beq.n	90010e02 <xQueueReceive+0x16>
	__asm volatile
90010efc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f00:	f383 8811 	msr	BASEPRI, r3
90010f04:	f3bf 8f6f 	isb	sy
90010f08:	f3bf 8f4f 	dsb	sy
90010f0c:	e7fe      	b.n	90010f0c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010f0e:	9b01      	ldr	r3, [sp, #4]
90010f10:	2b00      	cmp	r3, #0
90010f12:	f43f af7b 	beq.w	90010e0c <xQueueReceive+0x20>
90010f16:	f04f 0350 	mov.w	r3, #80	; 0x50
90010f1a:	f383 8811 	msr	BASEPRI, r3
90010f1e:	f3bf 8f6f 	isb	sy
90010f22:	f3bf 8f4f 	dsb	sy
90010f26:	e7fe      	b.n	90010f26 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
90010f28:	f7ff f97c 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010f2c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010f30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010f32:	2d00      	cmp	r5, #0
90010f34:	dc04      	bgt.n	90010f40 <xQueueReceive+0x154>
90010f36:	e011      	b.n	90010f5c <xQueueReceive+0x170>
			--cTxLock;
90010f38:	1e6b      	subs	r3, r5, #1
90010f3a:	b2da      	uxtb	r2, r3
90010f3c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010f3e:	b16a      	cbz	r2, 90010f5c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010f40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010f42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010f44:	b153      	cbz	r3, 90010f5c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010f46:	f001 f925 	bl	90012194 <xTaskRemoveFromEventList>
90010f4a:	2800      	cmp	r0, #0
90010f4c:	d0f4      	beq.n	90010f38 <xQueueReceive+0x14c>
						vTaskMissedYield();
90010f4e:	f001 f9bf 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
90010f52:	1e6b      	subs	r3, r5, #1
90010f54:	b2da      	uxtb	r2, r3
90010f56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010f58:	2a00      	cmp	r2, #0
90010f5a:	d1f1      	bne.n	90010f40 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
90010f5c:	23ff      	movs	r3, #255	; 0xff
90010f5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90010f62:	f7ff f981 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90010f66:	f7ff f95d 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010f6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90010f6e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f70:	2d00      	cmp	r5, #0
90010f72:	dd14      	ble.n	90010f9e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f74:	f104 0910 	add.w	r9, r4, #16
90010f78:	e003      	b.n	90010f82 <xQueueReceive+0x196>
				--cRxLock;
90010f7a:	1e6b      	subs	r3, r5, #1
90010f7c:	b2da      	uxtb	r2, r3
90010f7e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f80:	b16a      	cbz	r2, 90010f9e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f82:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f84:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f86:	b153      	cbz	r3, 90010f9e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f88:	f001 f904 	bl	90012194 <xTaskRemoveFromEventList>
90010f8c:	2800      	cmp	r0, #0
90010f8e:	d0f4      	beq.n	90010f7a <xQueueReceive+0x18e>
					vTaskMissedYield();
90010f90:	f001 f99e 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
90010f94:	1e6b      	subs	r3, r5, #1
90010f96:	b2da      	uxtb	r2, r3
90010f98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010f9a:	2a00      	cmp	r2, #0
90010f9c:	d1f1      	bne.n	90010f82 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
90010f9e:	23ff      	movs	r3, #255	; 0xff
90010fa0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90010fa4:	f7ff f960 	bl	90010268 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010fa8:	f000 ffd0 	bl	90011f4c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010fac:	f7ff f93a 	bl	90010224 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010fb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90010fb2:	b153      	cbz	r3, 90010fca <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
90010fb4:	f7ff f958 	bl	90010268 <vPortExitCritical>
		taskENTER_CRITICAL();
90010fb8:	f7ff f934 	bl	90010224 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010fbc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010fbe:	2d00      	cmp	r5, #0
90010fc0:	d162      	bne.n	90011088 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
90010fc2:	9b01      	ldr	r3, [sp, #4]
90010fc4:	2b00      	cmp	r3, #0
90010fc6:	f47f af31 	bne.w	90010e2c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90010fca:	f7ff f94d 	bl	90010268 <vPortExitCritical>
					return errQUEUE_EMPTY;
90010fce:	2000      	movs	r0, #0
}
90010fd0:	b005      	add	sp, #20
90010fd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
90010fd6:	f7ff f947 	bl	90010268 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010fda:	9901      	ldr	r1, [sp, #4]
90010fdc:	4630      	mov	r0, r6
90010fde:	f001 f84b 	bl	90012078 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010fe2:	f7ff f91f 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010fe6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90010fea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010fec:	2d00      	cmp	r5, #0
90010fee:	dc04      	bgt.n	90010ffa <xQueueReceive+0x20e>
90010ff0:	e011      	b.n	90011016 <xQueueReceive+0x22a>
			--cTxLock;
90010ff2:	1e6b      	subs	r3, r5, #1
90010ff4:	b2da      	uxtb	r2, r3
90010ff6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ff8:	b16a      	cbz	r2, 90011016 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ffa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010ffc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ffe:	b153      	cbz	r3, 90011016 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011000:	f001 f8c8 	bl	90012194 <xTaskRemoveFromEventList>
90011004:	2800      	cmp	r0, #0
90011006:	d0f4      	beq.n	90010ff2 <xQueueReceive+0x206>
						vTaskMissedYield();
90011008:	f001 f962 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
9001100c:	1e6b      	subs	r3, r5, #1
9001100e:	b2da      	uxtb	r2, r3
90011010:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011012:	2a00      	cmp	r2, #0
90011014:	d1f1      	bne.n	90010ffa <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
90011016:	23ff      	movs	r3, #255	; 0xff
90011018:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001101c:	f7ff f924 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90011020:	f7ff f900 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011024:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011028:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001102a:	2d00      	cmp	r5, #0
9001102c:	dd14      	ble.n	90011058 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001102e:	f104 0910 	add.w	r9, r4, #16
90011032:	e003      	b.n	9001103c <xQueueReceive+0x250>
				--cRxLock;
90011034:	1e6b      	subs	r3, r5, #1
90011036:	b2da      	uxtb	r2, r3
90011038:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001103a:	b16a      	cbz	r2, 90011058 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001103c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001103e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011040:	b153      	cbz	r3, 90011058 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011042:	f001 f8a7 	bl	90012194 <xTaskRemoveFromEventList>
90011046:	2800      	cmp	r0, #0
90011048:	d0f4      	beq.n	90011034 <xQueueReceive+0x248>
					vTaskMissedYield();
9001104a:	f001 f941 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
9001104e:	1e6b      	subs	r3, r5, #1
90011050:	b2da      	uxtb	r2, r3
90011052:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011054:	2a00      	cmp	r2, #0
90011056:	d1f1      	bne.n	9001103c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
90011058:	23ff      	movs	r3, #255	; 0xff
9001105a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9001105e:	f7ff f903 	bl	90010268 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90011062:	f000 ff73 	bl	90011f4c <xTaskResumeAll>
90011066:	2800      	cmp	r0, #0
90011068:	d1a6      	bne.n	90010fb8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9001106a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9001106e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011072:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011076:	f3bf 8f4f 	dsb	sy
9001107a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9001107e:	f7ff f8d1 	bl	90010224 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90011082:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011084:	2d00      	cmp	r5, #0
90011086:	d09c      	beq.n	90010fc2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90011088:	6c22      	ldr	r2, [r4, #64]	; 0x40
9001108a:	b152      	cbz	r2, 900110a2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001108c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9001108e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011090:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011092:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90011094:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90011096:	d301      	bcc.n	9001109c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90011098:	6821      	ldr	r1, [r4, #0]
9001109a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001109c:	4638      	mov	r0, r7
9001109e:	f018 fd77 	bl	90029b90 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900110a2:	3d01      	subs	r5, #1
900110a4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900110a6:	6923      	ldr	r3, [r4, #16]
900110a8:	b963      	cbnz	r3, 900110c4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
900110aa:	f7ff f8dd 	bl	90010268 <vPortExitCritical>
				return pdPASS;
900110ae:	2001      	movs	r0, #1
900110b0:	e78e      	b.n	90010fd0 <xQueueReceive+0x1e4>
900110b2:	f04f 0350 	mov.w	r3, #80	; 0x50
900110b6:	f383 8811 	msr	BASEPRI, r3
900110ba:	f3bf 8f6f 	isb	sy
900110be:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
900110c2:	e7fe      	b.n	900110c2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900110c4:	f104 0010 	add.w	r0, r4, #16
900110c8:	f001 f864 	bl	90012194 <xTaskRemoveFromEventList>
900110cc:	2800      	cmp	r0, #0
900110ce:	d0ec      	beq.n	900110aa <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
900110d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900110d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900110d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900110dc:	f3bf 8f4f 	dsb	sy
900110e0:	f3bf 8f6f 	isb	sy
900110e4:	e7e1      	b.n	900110aa <xQueueReceive+0x2be>
900110e6:	bf00      	nop

900110e8 <xQueueSemaphoreTake>:
{
900110e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900110ec:	b084      	sub	sp, #16
900110ee:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
900110f0:	2800      	cmp	r0, #0
900110f2:	d05c      	beq.n	900111ae <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
900110f4:	6c07      	ldr	r7, [r0, #64]	; 0x40
900110f6:	4604      	mov	r4, r0
900110f8:	b147      	cbz	r7, 9001110c <xQueueSemaphoreTake+0x24>
900110fa:	f04f 0350 	mov.w	r3, #80	; 0x50
900110fe:	f383 8811 	msr	BASEPRI, r3
90011102:	f3bf 8f6f 	isb	sy
90011106:	f3bf 8f4f 	dsb	sy
9001110a:	e7fe      	b.n	9001110a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9001110c:	f001 f8ec 	bl	900122e8 <xTaskGetSchedulerState>
90011110:	4605      	mov	r5, r0
90011112:	2800      	cmp	r0, #0
90011114:	d054      	beq.n	900111c0 <xQueueSemaphoreTake+0xd8>
90011116:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011118:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9001111c:	f7ff f882 	bl	90010224 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90011120:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90011122:	2b00      	cmp	r3, #0
90011124:	f040 8149 	bne.w	900113ba <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
90011128:	9b01      	ldr	r3, [sp, #4]
9001112a:	2b00      	cmp	r3, #0
9001112c:	f000 813a 	beq.w	900113a4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
90011130:	2d00      	cmp	r5, #0
90011132:	f000 809d 	beq.w	90011270 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
90011136:	f7ff f897 	bl	90010268 <vPortExitCritical>
		vTaskSuspendAll();
9001113a:	f000 feff 	bl	90011f3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001113e:	f7ff f871 	bl	90010224 <vPortEnterCritical>
90011142:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011146:	2bff      	cmp	r3, #255	; 0xff
90011148:	d102      	bne.n	90011150 <xQueueSemaphoreTake+0x68>
9001114a:	2300      	movs	r3, #0
9001114c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90011150:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011154:	2bff      	cmp	r3, #255	; 0xff
90011156:	d102      	bne.n	9001115e <xQueueSemaphoreTake+0x76>
90011158:	2300      	movs	r3, #0
9001115a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9001115e:	f7ff f883 	bl	90010268 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90011162:	a901      	add	r1, sp, #4
90011164:	a802      	add	r0, sp, #8
90011166:	f001 f86b 	bl	90012240 <xTaskCheckForTimeOut>
9001116a:	2800      	cmp	r0, #0
9001116c:	d135      	bne.n	900111da <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9001116e:	f7ff f859 	bl	90010224 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011172:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011174:	2b00      	cmp	r3, #0
90011176:	f000 80a4 	beq.w	900112c2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9001117a:	f7ff f875 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
9001117e:	f7ff f851 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90011182:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
90011186:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011188:	2d00      	cmp	r5, #0
9001118a:	dc05      	bgt.n	90011198 <xQueueSemaphoreTake+0xb0>
9001118c:	e074      	b.n	90011278 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9001118e:	1e6b      	subs	r3, r5, #1
90011190:	b2da      	uxtb	r2, r3
90011192:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011194:	2a00      	cmp	r2, #0
90011196:	d06f      	beq.n	90011278 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011198:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001119a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001119c:	2b00      	cmp	r3, #0
9001119e:	d06b      	beq.n	90011278 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900111a0:	f000 fff8 	bl	90012194 <xTaskRemoveFromEventList>
900111a4:	2800      	cmp	r0, #0
900111a6:	d0f2      	beq.n	9001118e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
900111a8:	f001 f892 	bl	900122d0 <vTaskMissedYield>
900111ac:	e7ef      	b.n	9001118e <xQueueSemaphoreTake+0xa6>
900111ae:	f04f 0350 	mov.w	r3, #80	; 0x50
900111b2:	f383 8811 	msr	BASEPRI, r3
900111b6:	f3bf 8f6f 	isb	sy
900111ba:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
900111be:	e7fe      	b.n	900111be <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900111c0:	9b01      	ldr	r3, [sp, #4]
900111c2:	2b00      	cmp	r3, #0
900111c4:	f000 80d4 	beq.w	90011370 <xQueueSemaphoreTake+0x288>
900111c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900111cc:	f383 8811 	msr	BASEPRI, r3
900111d0:	f3bf 8f6f 	isb	sy
900111d4:	f3bf 8f4f 	dsb	sy
900111d8:	e7fe      	b.n	900111d8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
900111da:	f7ff f823 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900111de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900111e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900111e4:	2d00      	cmp	r5, #0
900111e6:	dc04      	bgt.n	900111f2 <xQueueSemaphoreTake+0x10a>
900111e8:	e011      	b.n	9001120e <xQueueSemaphoreTake+0x126>
			--cTxLock;
900111ea:	1e6b      	subs	r3, r5, #1
900111ec:	b2da      	uxtb	r2, r3
900111ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900111f0:	b16a      	cbz	r2, 9001120e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900111f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900111f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900111f6:	b153      	cbz	r3, 9001120e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900111f8:	f000 ffcc 	bl	90012194 <xTaskRemoveFromEventList>
900111fc:	2800      	cmp	r0, #0
900111fe:	d0f4      	beq.n	900111ea <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
90011200:	f001 f866 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
90011204:	1e6b      	subs	r3, r5, #1
90011206:	b2da      	uxtb	r2, r3
90011208:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001120a:	2a00      	cmp	r2, #0
9001120c:	d1f1      	bne.n	900111f2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9001120e:	23ff      	movs	r3, #255	; 0xff
90011210:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011214:	f7ff f828 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90011218:	f7ff f804 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001121c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011220:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011222:	2d00      	cmp	r5, #0
90011224:	dd14      	ble.n	90011250 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011226:	f104 0810 	add.w	r8, r4, #16
9001122a:	e003      	b.n	90011234 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9001122c:	1e6b      	subs	r3, r5, #1
9001122e:	b2da      	uxtb	r2, r3
90011230:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011232:	b16a      	cbz	r2, 90011250 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011234:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011236:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011238:	b153      	cbz	r3, 90011250 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001123a:	f000 ffab 	bl	90012194 <xTaskRemoveFromEventList>
9001123e:	2800      	cmp	r0, #0
90011240:	d0f4      	beq.n	9001122c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
90011242:	f001 f845 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
90011246:	1e6b      	subs	r3, r5, #1
90011248:	b2da      	uxtb	r2, r3
9001124a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001124c:	2a00      	cmp	r2, #0
9001124e:	d1f1      	bne.n	90011234 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
90011250:	23ff      	movs	r3, #255	; 0xff
90011252:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011256:	f7ff f807 	bl	90010268 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001125a:	f000 fe77 	bl	90011f4c <xTaskResumeAll>
	taskENTER_CRITICAL();
9001125e:	f7fe ffe1 	bl	90010224 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90011262:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90011264:	2b00      	cmp	r3, #0
90011266:	d07c      	beq.n	90011362 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
90011268:	f7fe fffe 	bl	90010268 <vPortExitCritical>
	return xReturn;
9001126c:	2501      	movs	r5, #1
9001126e:	e755      	b.n	9001111c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
90011270:	a802      	add	r0, sp, #8
90011272:	f000 ffd9 	bl	90012228 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90011276:	e75e      	b.n	90011136 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
90011278:	23ff      	movs	r3, #255	; 0xff
9001127a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9001127e:	f7fe fff3 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90011282:	f7fe ffcf 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90011286:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9001128a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001128c:	2d00      	cmp	r5, #0
9001128e:	dd10      	ble.n	900112b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011290:	f104 0810 	add.w	r8, r4, #16
90011294:	e003      	b.n	9001129e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
90011296:	1e6b      	subs	r3, r5, #1
90011298:	b2da      	uxtb	r2, r3
9001129a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001129c:	b14a      	cbz	r2, 900112b2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001129e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900112a0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900112a2:	b133      	cbz	r3, 900112b2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900112a4:	f000 ff76 	bl	90012194 <xTaskRemoveFromEventList>
900112a8:	2800      	cmp	r0, #0
900112aa:	d0f4      	beq.n	90011296 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
900112ac:	f001 f810 	bl	900122d0 <vTaskMissedYield>
900112b0:	e7f1      	b.n	90011296 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
900112b2:	23ff      	movs	r3, #255	; 0xff
900112b4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
900112b8:	f7fe ffd6 	bl	90010268 <vPortExitCritical>
				( void ) xTaskResumeAll();
900112bc:	f000 fe46 	bl	90011f4c <xTaskResumeAll>
900112c0:	e7d4      	b.n	9001126c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
900112c2:	f7fe ffd1 	bl	90010268 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900112c6:	6823      	ldr	r3, [r4, #0]
900112c8:	2b00      	cmp	r3, #0
900112ca:	d062      	beq.n	90011392 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
900112cc:	9901      	ldr	r1, [sp, #4]
900112ce:	4630      	mov	r0, r6
900112d0:	f000 fed2 	bl	90012078 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900112d4:	f7fe ffa6 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900112d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
900112dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900112de:	2d00      	cmp	r5, #0
900112e0:	dc04      	bgt.n	900112ec <xQueueSemaphoreTake+0x204>
900112e2:	e00d      	b.n	90011300 <xQueueSemaphoreTake+0x218>
			--cTxLock;
900112e4:	1e6b      	subs	r3, r5, #1
900112e6:	b2da      	uxtb	r2, r3
900112e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900112ea:	b14a      	cbz	r2, 90011300 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900112ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900112ee:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900112f0:	b133      	cbz	r3, 90011300 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900112f2:	f000 ff4f 	bl	90012194 <xTaskRemoveFromEventList>
900112f6:	2800      	cmp	r0, #0
900112f8:	d0f4      	beq.n	900112e4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
900112fa:	f000 ffe9 	bl	900122d0 <vTaskMissedYield>
900112fe:	e7f1      	b.n	900112e4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
90011300:	23ff      	movs	r3, #255	; 0xff
90011302:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
90011306:	f7fe ffaf 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
9001130a:	f7fe ff8b 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001130e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
90011312:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011314:	2d00      	cmp	r5, #0
90011316:	dd10      	ble.n	9001133a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011318:	f104 0810 	add.w	r8, r4, #16
9001131c:	e003      	b.n	90011326 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9001131e:	1e6b      	subs	r3, r5, #1
90011320:	b2da      	uxtb	r2, r3
90011322:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011324:	b14a      	cbz	r2, 9001133a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011326:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011328:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001132a:	b133      	cbz	r3, 9001133a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001132c:	f000 ff32 	bl	90012194 <xTaskRemoveFromEventList>
90011330:	2800      	cmp	r0, #0
90011332:	d0f4      	beq.n	9001131e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
90011334:	f000 ffcc 	bl	900122d0 <vTaskMissedYield>
90011338:	e7f1      	b.n	9001131e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9001133a:	23ff      	movs	r3, #255	; 0xff
9001133c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
90011340:	f7fe ff92 	bl	90010268 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90011344:	f000 fe02 	bl	90011f4c <xTaskResumeAll>
90011348:	2800      	cmp	r0, #0
9001134a:	d18f      	bne.n	9001126c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9001134c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011350:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011354:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011358:	f3bf 8f4f 	dsb	sy
9001135c:	f3bf 8f6f 	isb	sy
90011360:	e784      	b.n	9001126c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
90011362:	f7fe ff81 	bl	90010268 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90011366:	b92f      	cbnz	r7, 90011374 <xQueueSemaphoreTake+0x28c>
}
90011368:	4638      	mov	r0, r7
9001136a:	b004      	add	sp, #16
9001136c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011370:	4607      	mov	r7, r0
90011372:	e6d1      	b.n	90011118 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90011374:	f7fe ff56 	bl	90010224 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90011378:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001137a:	b119      	cbz	r1, 90011384 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9001137c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001137e:	6819      	ldr	r1, [r3, #0]
90011380:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011384:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
90011386:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90011388:	f001 f84a 	bl	90012420 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9001138c:	f7fe ff6c 	bl	90010268 <vPortExitCritical>
90011390:	e7ea      	b.n	90011368 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
90011392:	f7fe ff47 	bl	90010224 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90011396:	68a0      	ldr	r0, [r4, #8]
90011398:	f000 ffb6 	bl	90012308 <xTaskPriorityInherit>
9001139c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9001139e:	f7fe ff63 	bl	90010268 <vPortExitCritical>
900113a2:	e793      	b.n	900112cc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
900113a4:	2f00      	cmp	r7, #0
900113a6:	d0f1      	beq.n	9001138c <xQueueSemaphoreTake+0x2a4>
900113a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900113ac:	f383 8811 	msr	BASEPRI, r3
900113b0:	f3bf 8f6f 	isb	sy
900113b4:	f3bf 8f4f 	dsb	sy
900113b8:	e7fe      	b.n	900113b8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
900113ba:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900113bc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
900113be:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900113c0:	b12a      	cbz	r2, 900113ce <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900113c2:	6923      	ldr	r3, [r4, #16]
900113c4:	b93b      	cbnz	r3, 900113d6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
900113c6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
900113c8:	f7fe ff4e 	bl	90010268 <vPortExitCritical>
				return pdPASS;
900113cc:	e7cc      	b.n	90011368 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
900113ce:	f001 f87b 	bl	900124c8 <pvTaskIncrementMutexHeldCount>
900113d2:	60a0      	str	r0, [r4, #8]
900113d4:	e7f5      	b.n	900113c2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900113d6:	f104 0010 	add.w	r0, r4, #16
900113da:	f000 fedb 	bl	90012194 <xTaskRemoveFromEventList>
900113de:	2800      	cmp	r0, #0
900113e0:	d0f1      	beq.n	900113c6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
900113e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900113e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900113ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
900113ee:	f3bf 8f4f 	dsb	sy
900113f2:	f3bf 8f6f 	isb	sy
900113f6:	e7e6      	b.n	900113c6 <xQueueSemaphoreTake+0x2de>

900113f8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
900113f8:	b1a8      	cbz	r0, 90011426 <xQueueTakeMutexRecursive+0x2e>
	{
900113fa:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
900113fc:	6886      	ldr	r6, [r0, #8]
900113fe:	4604      	mov	r4, r0
90011400:	460d      	mov	r5, r1
90011402:	f000 ff6b 	bl	900122dc <xTaskGetCurrentTaskHandle>
90011406:	4286      	cmp	r6, r0
90011408:	d008      	beq.n	9001141c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9001140a:	4629      	mov	r1, r5
9001140c:	4620      	mov	r0, r4
9001140e:	f7ff fe6b 	bl	900110e8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
90011412:	b110      	cbz	r0, 9001141a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90011414:	68e3      	ldr	r3, [r4, #12]
90011416:	3301      	adds	r3, #1
90011418:	60e3      	str	r3, [r4, #12]
	}
9001141a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9001141c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9001141e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
90011420:	4403      	add	r3, r0
90011422:	60e3      	str	r3, [r4, #12]
	}
90011424:	bd70      	pop	{r4, r5, r6, pc}
90011426:	f04f 0350 	mov.w	r3, #80	; 0x50
9001142a:	f383 8811 	msr	BASEPRI, r3
9001142e:	f3bf 8f6f 	isb	sy
90011432:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
90011436:	e7fe      	b.n	90011436 <xQueueTakeMutexRecursive+0x3e>

90011438 <xQueueReceiveFromISR>:
{
90011438:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9001143c:	b310      	cbz	r0, 90011484 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001143e:	460e      	mov	r6, r1
90011440:	4604      	mov	r4, r0
90011442:	4617      	mov	r7, r2
90011444:	b191      	cbz	r1, 9001146c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90011446:	f7ff f81f 	bl	90010488 <vPortValidateInterruptPriority>
	__asm volatile
9001144a:	f3ef 8911 	mrs	r9, BASEPRI
9001144e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011452:	f383 8811 	msr	BASEPRI, r3
90011456:	f3bf 8f6f 	isb	sy
9001145a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001145e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90011460:	b9cd      	cbnz	r5, 90011496 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90011462:	4628      	mov	r0, r5
	__asm volatile
90011464:	f389 8811 	msr	BASEPRI, r9
}
90011468:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001146c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9001146e:	2b00      	cmp	r3, #0
90011470:	d0e9      	beq.n	90011446 <xQueueReceiveFromISR+0xe>
	__asm volatile
90011472:	f04f 0350 	mov.w	r3, #80	; 0x50
90011476:	f383 8811 	msr	BASEPRI, r3
9001147a:	f3bf 8f6f 	isb	sy
9001147e:	f3bf 8f4f 	dsb	sy
90011482:	e7fe      	b.n	90011482 <xQueueReceiveFromISR+0x4a>
90011484:	f04f 0350 	mov.w	r3, #80	; 0x50
90011488:	f383 8811 	msr	BASEPRI, r3
9001148c:	f3bf 8f6f 	isb	sy
90011490:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011494:	e7fe      	b.n	90011494 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90011496:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9001149a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9001149c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
900114a0:	b142      	cbz	r2, 900114b4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900114a2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900114a4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900114a6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900114a8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900114aa:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
900114ac:	d215      	bcs.n	900114da <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900114ae:	4630      	mov	r0, r6
900114b0:	f018 fb6e 	bl	90029b90 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900114b4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
900114b6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
900114ba:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
900114bc:	d009      	beq.n	900114d2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
900114be:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
900114c2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
900114c4:	b25b      	sxtb	r3, r3
900114c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
900114ca:	f389 8811 	msr	BASEPRI, r9
}
900114ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900114d2:	6923      	ldr	r3, [r4, #16]
900114d4:	b923      	cbnz	r3, 900114e0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
900114d6:	2001      	movs	r0, #1
900114d8:	e7c4      	b.n	90011464 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
900114da:	6821      	ldr	r1, [r4, #0]
900114dc:	60e1      	str	r1, [r4, #12]
900114de:	e7e6      	b.n	900114ae <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900114e0:	f104 0010 	add.w	r0, r4, #16
900114e4:	f000 fe56 	bl	90012194 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
900114e8:	2f00      	cmp	r7, #0
900114ea:	d0f4      	beq.n	900114d6 <xQueueReceiveFromISR+0x9e>
900114ec:	2800      	cmp	r0, #0
900114ee:	d0f2      	beq.n	900114d6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
900114f0:	2301      	movs	r3, #1
			xReturn = pdPASS;
900114f2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
900114f4:	603b      	str	r3, [r7, #0]
900114f6:	e7b5      	b.n	90011464 <xQueueReceiveFromISR+0x2c>

900114f8 <vQueueDelete>:
	configASSERT( pxQueue );
900114f8:	b1e0      	cbz	r0, 90011534 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
900114fa:	4b21      	ldr	r3, [pc, #132]	; (90011580 <vQueueDelete+0x88>)
900114fc:	685a      	ldr	r2, [r3, #4]
900114fe:	4290      	cmp	r0, r2
90011500:	d02b      	beq.n	9001155a <vQueueDelete+0x62>
90011502:	68da      	ldr	r2, [r3, #12]
90011504:	4290      	cmp	r0, r2
90011506:	d02a      	beq.n	9001155e <vQueueDelete+0x66>
90011508:	695a      	ldr	r2, [r3, #20]
9001150a:	4290      	cmp	r0, r2
9001150c:	d029      	beq.n	90011562 <vQueueDelete+0x6a>
9001150e:	69da      	ldr	r2, [r3, #28]
90011510:	4290      	cmp	r0, r2
90011512:	d028      	beq.n	90011566 <vQueueDelete+0x6e>
90011514:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90011516:	4290      	cmp	r0, r2
90011518:	d027      	beq.n	9001156a <vQueueDelete+0x72>
9001151a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9001151c:	4290      	cmp	r0, r2
9001151e:	d014      	beq.n	9001154a <vQueueDelete+0x52>
90011520:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90011522:	4290      	cmp	r0, r2
90011524:	d023      	beq.n	9001156e <vQueueDelete+0x76>
90011526:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90011528:	4290      	cmp	r0, r2
9001152a:	d022      	beq.n	90011572 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9001152c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
90011530:	b14b      	cbz	r3, 90011546 <vQueueDelete+0x4e>
}
90011532:	4770      	bx	lr
	__asm volatile
90011534:	f04f 0350 	mov.w	r3, #80	; 0x50
90011538:	f383 8811 	msr	BASEPRI, r3
9001153c:	f3bf 8f6f 	isb	sy
90011540:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011544:	e7fe      	b.n	90011544 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90011546:	f7fe bd55 	b.w	9000fff4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001154a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9001154c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90011550:	ed9f 7b09 	vldr	d7, [pc, #36]	; 90011578 <vQueueDelete+0x80>
90011554:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90011558:	e7e8      	b.n	9001152c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001155a:	2200      	movs	r2, #0
9001155c:	e7f6      	b.n	9001154c <vQueueDelete+0x54>
9001155e:	2201      	movs	r2, #1
90011560:	e7f4      	b.n	9001154c <vQueueDelete+0x54>
90011562:	2202      	movs	r2, #2
90011564:	e7f2      	b.n	9001154c <vQueueDelete+0x54>
90011566:	2203      	movs	r2, #3
90011568:	e7f0      	b.n	9001154c <vQueueDelete+0x54>
9001156a:	2204      	movs	r2, #4
9001156c:	e7ee      	b.n	9001154c <vQueueDelete+0x54>
9001156e:	2206      	movs	r2, #6
90011570:	e7ec      	b.n	9001154c <vQueueDelete+0x54>
90011572:	2207      	movs	r2, #7
90011574:	e7ea      	b.n	9001154c <vQueueDelete+0x54>
90011576:	bf00      	nop
	...
90011580:	24039458 	.word	0x24039458

90011584 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90011584:	4b12      	ldr	r3, [pc, #72]	; (900115d0 <vQueueAddToRegistry+0x4c>)
90011586:	681a      	ldr	r2, [r3, #0]
90011588:	b17a      	cbz	r2, 900115aa <vQueueAddToRegistry+0x26>
9001158a:	689a      	ldr	r2, [r3, #8]
9001158c:	b162      	cbz	r2, 900115a8 <vQueueAddToRegistry+0x24>
9001158e:	691a      	ldr	r2, [r3, #16]
90011590:	b192      	cbz	r2, 900115b8 <vQueueAddToRegistry+0x34>
90011592:	699a      	ldr	r2, [r3, #24]
90011594:	b192      	cbz	r2, 900115bc <vQueueAddToRegistry+0x38>
90011596:	6a1a      	ldr	r2, [r3, #32]
90011598:	b192      	cbz	r2, 900115c0 <vQueueAddToRegistry+0x3c>
9001159a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9001159c:	b192      	cbz	r2, 900115c4 <vQueueAddToRegistry+0x40>
9001159e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900115a0:	b192      	cbz	r2, 900115c8 <vQueueAddToRegistry+0x44>
900115a2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900115a4:	b192      	cbz	r2, 900115cc <vQueueAddToRegistry+0x48>
	}
900115a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900115a8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
900115aa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
900115ae:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900115b2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900115b6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900115b8:	2202      	movs	r2, #2
900115ba:	e7f6      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115bc:	2203      	movs	r2, #3
900115be:	e7f4      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115c0:	2204      	movs	r2, #4
900115c2:	e7f2      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115c4:	2205      	movs	r2, #5
900115c6:	e7f0      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115c8:	2206      	movs	r2, #6
900115ca:	e7ee      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115cc:	2207      	movs	r2, #7
900115ce:	e7ec      	b.n	900115aa <vQueueAddToRegistry+0x26>
900115d0:	24039458 	.word	0x24039458

900115d4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900115d4:	b570      	push	{r4, r5, r6, lr}
900115d6:	4605      	mov	r5, r0
900115d8:	460e      	mov	r6, r1
900115da:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
900115dc:	f7fe fe22 	bl	90010224 <vPortEnterCritical>
900115e0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
900115e4:	2bff      	cmp	r3, #255	; 0xff
900115e6:	d102      	bne.n	900115ee <vQueueWaitForMessageRestricted+0x1a>
900115e8:	2300      	movs	r3, #0
900115ea:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
900115ee:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
900115f2:	2bff      	cmp	r3, #255	; 0xff
900115f4:	d102      	bne.n	900115fc <vQueueWaitForMessageRestricted+0x28>
900115f6:	2300      	movs	r3, #0
900115f8:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
900115fc:	f7fe fe34 	bl	90010268 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90011600:	6bab      	ldr	r3, [r5, #56]	; 0x38
90011602:	2b00      	cmp	r3, #0
90011604:	d043      	beq.n	9001168e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90011606:	f7fe fe0d 	bl	90010224 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001160a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9001160e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011610:	2c00      	cmp	r4, #0
90011612:	dd14      	ble.n	9001163e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011614:	f105 0624 	add.w	r6, r5, #36	; 0x24
90011618:	e003      	b.n	90011622 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9001161a:	1e63      	subs	r3, r4, #1
9001161c:	b2da      	uxtb	r2, r3
9001161e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011620:	b16a      	cbz	r2, 9001163e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011622:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011624:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011626:	b153      	cbz	r3, 9001163e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011628:	f000 fdb4 	bl	90012194 <xTaskRemoveFromEventList>
9001162c:	2800      	cmp	r0, #0
9001162e:	d0f4      	beq.n	9001161a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90011630:	f000 fe4e 	bl	900122d0 <vTaskMissedYield>
			--cTxLock;
90011634:	1e63      	subs	r3, r4, #1
90011636:	b2da      	uxtb	r2, r3
90011638:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001163a:	2a00      	cmp	r2, #0
9001163c:	d1f1      	bne.n	90011622 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001163e:	23ff      	movs	r3, #255	; 0xff
90011640:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
90011644:	f7fe fe10 	bl	90010268 <vPortExitCritical>
	taskENTER_CRITICAL();
90011648:	f7fe fdec 	bl	90010224 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001164c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
90011650:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011652:	2c00      	cmp	r4, #0
90011654:	dd14      	ble.n	90011680 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011656:	f105 0610 	add.w	r6, r5, #16
9001165a:	e003      	b.n	90011664 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9001165c:	1e63      	subs	r3, r4, #1
9001165e:	b2da      	uxtb	r2, r3
90011660:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011662:	b16a      	cbz	r2, 90011680 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011664:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011666:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011668:	b153      	cbz	r3, 90011680 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001166a:	f000 fd93 	bl	90012194 <xTaskRemoveFromEventList>
9001166e:	2800      	cmp	r0, #0
90011670:	d0f4      	beq.n	9001165c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90011672:	f000 fe2d 	bl	900122d0 <vTaskMissedYield>
				--cRxLock;
90011676:	1e63      	subs	r3, r4, #1
90011678:	b2da      	uxtb	r2, r3
9001167a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001167c:	2a00      	cmp	r2, #0
9001167e:	d1f1      	bne.n	90011664 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90011680:	23ff      	movs	r3, #255	; 0xff
90011682:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90011686:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9001168a:	f7fe bded 	b.w	90010268 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001168e:	4622      	mov	r2, r4
90011690:	4631      	mov	r1, r6
90011692:	f105 0024 	add.w	r0, r5, #36	; 0x24
90011696:	f000 fd33 	bl	90012100 <vTaskPlaceOnEventListRestricted>
9001169a:	e7b4      	b.n	90011606 <vQueueWaitForMessageRestricted+0x32>

9001169c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9001169c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900116a0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
900116a2:	f7fe fdbf 	bl	90010224 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900116a6:	4a34      	ldr	r2, [pc, #208]	; (90011778 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
900116a8:	4e34      	ldr	r6, [pc, #208]	; (9001177c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
900116aa:	6813      	ldr	r3, [r2, #0]
900116ac:	3301      	adds	r3, #1
900116ae:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900116b0:	6833      	ldr	r3, [r6, #0]
900116b2:	2b00      	cmp	r3, #0
900116b4:	d032      	beq.n	9001171c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900116b6:	4c32      	ldr	r4, [pc, #200]	; (90011780 <prvAddNewTaskToReadyList+0xe4>)
900116b8:	6823      	ldr	r3, [r4, #0]
900116ba:	b33b      	cbz	r3, 9001170c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900116bc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900116be:	4f31      	ldr	r7, [pc, #196]	; (90011784 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900116c0:	4a31      	ldr	r2, [pc, #196]	; (90011788 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900116c2:	4932      	ldr	r1, [pc, #200]	; (9001178c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
900116c4:	6813      	ldr	r3, [r2, #0]
900116c6:	3301      	adds	r3, #1
900116c8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900116ca:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
900116cc:	680b      	ldr	r3, [r1, #0]
900116ce:	4283      	cmp	r3, r0
900116d0:	d200      	bcs.n	900116d4 <prvAddNewTaskToReadyList+0x38>
900116d2:	6008      	str	r0, [r1, #0]
900116d4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900116d8:	1d29      	adds	r1, r5, #4
900116da:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900116de:	f7fe fcfd 	bl	900100dc <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
900116e2:	f7fe fdc1 	bl	90010268 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
900116e6:	6823      	ldr	r3, [r4, #0]
900116e8:	b173      	cbz	r3, 90011708 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
900116ea:	6832      	ldr	r2, [r6, #0]
900116ec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900116ee:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900116f0:	429a      	cmp	r2, r3
900116f2:	d209      	bcs.n	90011708 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
900116f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
900116f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
900116fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011700:	f3bf 8f4f 	dsb	sy
90011704:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90011708:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001170c:	6833      	ldr	r3, [r6, #0]
9001170e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90011710:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011712:	4f1c      	ldr	r7, [pc, #112]	; (90011784 <prvAddNewTaskToReadyList+0xe8>)
90011714:	4283      	cmp	r3, r0
90011716:	d8d3      	bhi.n	900116c0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90011718:	6035      	str	r5, [r6, #0]
9001171a:	e7d1      	b.n	900116c0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9001171c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9001171e:	6813      	ldr	r3, [r2, #0]
90011720:	2b01      	cmp	r3, #1
90011722:	d003      	beq.n	9001172c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90011724:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90011726:	4f17      	ldr	r7, [pc, #92]	; (90011784 <prvAddNewTaskToReadyList+0xe8>)
90011728:	4c15      	ldr	r4, [pc, #84]	; (90011780 <prvAddNewTaskToReadyList+0xe4>)
9001172a:	e7c9      	b.n	900116c0 <prvAddNewTaskToReadyList+0x24>
9001172c:	4f15      	ldr	r7, [pc, #84]	; (90011784 <prvAddNewTaskToReadyList+0xe8>)
9001172e:	463c      	mov	r4, r7
90011730:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011734:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90011736:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011738:	f7fe fcc0 	bl	900100bc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001173c:	45a0      	cmp	r8, r4
9001173e:	d1f9      	bne.n	90011734 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
90011740:	f8df 9060 	ldr.w	r9, [pc, #96]	; 900117a4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90011744:	f8df 8060 	ldr.w	r8, [pc, #96]	; 900117a8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90011748:	4648      	mov	r0, r9
9001174a:	4c0d      	ldr	r4, [pc, #52]	; (90011780 <prvAddNewTaskToReadyList+0xe4>)
9001174c:	f7fe fcb6 	bl	900100bc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
90011750:	4640      	mov	r0, r8
90011752:	f7fe fcb3 	bl	900100bc <vListInitialise>
	vListInitialise( &xPendingReadyList );
90011756:	480e      	ldr	r0, [pc, #56]	; (90011790 <prvAddNewTaskToReadyList+0xf4>)
90011758:	f7fe fcb0 	bl	900100bc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001175c:	480d      	ldr	r0, [pc, #52]	; (90011794 <prvAddNewTaskToReadyList+0xf8>)
9001175e:	f7fe fcad 	bl	900100bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90011762:	480d      	ldr	r0, [pc, #52]	; (90011798 <prvAddNewTaskToReadyList+0xfc>)
90011764:	f7fe fcaa 	bl	900100bc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90011768:	4b0c      	ldr	r3, [pc, #48]	; (9001179c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9001176a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001176c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
90011770:	4b0b      	ldr	r3, [pc, #44]	; (900117a0 <prvAddNewTaskToReadyList+0x104>)
90011772:	f8c3 8000 	str.w	r8, [r3]
}
90011776:	e7a3      	b.n	900116c0 <prvAddNewTaskToReadyList+0x24>
90011778:	24039904 	.word	0x24039904
9001177c:	24039498 	.word	0x24039498
90011780:	24039960 	.word	0x24039960
90011784:	240394a4 	.word	0x240394a4
90011788:	24039910 	.word	0x24039910
9001178c:	24039914 	.word	0x24039914
90011790:	2403994c 	.word	0x2403994c
90011794:	24039978 	.word	0x24039978
90011798:	24039964 	.word	0x24039964
9001179c:	2403949c 	.word	0x2403949c
900117a0:	240394a0 	.word	0x240394a0
900117a4:	24039918 	.word	0x24039918
900117a8:	2403992c 	.word	0x2403992c

900117ac <prvIdleTask>:
{
900117ac:	b580      	push	{r7, lr}
900117ae:	4c22      	ldr	r4, [pc, #136]	; (90011838 <prvIdleTask+0x8c>)
				taskYIELD();
900117b0:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
900117b4:	4e21      	ldr	r6, [pc, #132]	; (9001183c <prvIdleTask+0x90>)
900117b6:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
900117ba:	4d21      	ldr	r5, [pc, #132]	; (90011840 <prvIdleTask+0x94>)
900117bc:	4f21      	ldr	r7, [pc, #132]	; (90011844 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900117be:	6823      	ldr	r3, [r4, #0]
900117c0:	b353      	cbz	r3, 90011818 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
900117c2:	f7fe fd2f 	bl	90010224 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900117c6:	68f3      	ldr	r3, [r6, #12]
900117c8:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900117cc:	f10a 0004 	add.w	r0, sl, #4
900117d0:	f7fe fcac 	bl	9001012c <uxListRemove>
				--uxCurrentNumberOfTasks;
900117d4:	682b      	ldr	r3, [r5, #0]
900117d6:	3b01      	subs	r3, #1
900117d8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
900117da:	6823      	ldr	r3, [r4, #0]
900117dc:	3b01      	subs	r3, #1
900117de:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
900117e0:	f7fe fd42 	bl	90010268 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900117e4:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
900117e8:	b163      	cbz	r3, 90011804 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
900117ea:	2b01      	cmp	r3, #1
900117ec:	d020      	beq.n	90011830 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
900117ee:	2b02      	cmp	r3, #2
900117f0:	d0e5      	beq.n	900117be <prvIdleTask+0x12>
900117f2:	f04f 0350 	mov.w	r3, #80	; 0x50
900117f6:	f383 8811 	msr	BASEPRI, r3
900117fa:	f3bf 8f6f 	isb	sy
900117fe:	f3bf 8f4f 	dsb	sy
90011802:	e7fe      	b.n	90011802 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
90011804:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
90011808:	f7fe fbf4 	bl	9000fff4 <vPortFree>
				vPortFree( pxTCB );
9001180c:	4650      	mov	r0, sl
9001180e:	f7fe fbf1 	bl	9000fff4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90011812:	6823      	ldr	r3, [r4, #0]
90011814:	2b00      	cmp	r3, #0
90011816:	d1d4      	bne.n	900117c2 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011818:	683b      	ldr	r3, [r7, #0]
9001181a:	2b01      	cmp	r3, #1
9001181c:	d905      	bls.n	9001182a <prvIdleTask+0x7e>
				taskYIELD();
9001181e:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
90011822:	f3bf 8f4f 	dsb	sy
90011826:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9001182a:	f7f1 f8b5 	bl	90002998 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9001182e:	e7c6      	b.n	900117be <prvIdleTask+0x12>
				vPortFree( pxTCB );
90011830:	4650      	mov	r0, sl
90011832:	f7fe fbdf 	bl	9000fff4 <vPortFree>
90011836:	e7c2      	b.n	900117be <prvIdleTask+0x12>
90011838:	24039908 	.word	0x24039908
9001183c:	24039978 	.word	0x24039978
90011840:	24039904 	.word	0x24039904
90011844:	240394a4 	.word	0x240394a4

90011848 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011848:	4b4a      	ldr	r3, [pc, #296]	; (90011974 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9001184a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001184e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90011850:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011852:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90011854:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90011856:	2e00      	cmp	r6, #0
90011858:	d040      	beq.n	900118dc <xTaskIncrementTick.part.0+0x94>
9001185a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90011988 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9001185e:	f8db 3000 	ldr.w	r3, [fp]
90011862:	429e      	cmp	r6, r3
90011864:	d347      	bcc.n	900118f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011866:	4f44      	ldr	r7, [pc, #272]	; (90011978 <xTaskIncrementTick.part.0+0x130>)
90011868:	683b      	ldr	r3, [r7, #0]
9001186a:	681d      	ldr	r5, [r3, #0]
9001186c:	2d00      	cmp	r5, #0
9001186e:	d077      	beq.n	90011960 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90011870:	2500      	movs	r5, #0
90011872:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9001198c <xTaskIncrementTick.part.0+0x144>
90011876:	f8df a118 	ldr.w	sl, [pc, #280]	; 90011990 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9001187a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 90011994 <xTaskIncrementTick.part.0+0x14c>
9001187e:	e022      	b.n	900118c6 <xTaskIncrementTick.part.0+0x7e>
90011880:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90011882:	f7fe fc53 	bl	9001012c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011886:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011888:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9001188c:	9901      	ldr	r1, [sp, #4]
9001188e:	b113      	cbz	r3, 90011896 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011890:	f7fe fc4c 	bl	9001012c <uxListRemove>
90011894:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
90011896:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90011898:	f8d8 2000 	ldr.w	r2, [r8]
9001189c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900118a0:	4293      	cmp	r3, r2
900118a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900118a6:	d901      	bls.n	900118ac <xTaskIncrementTick.part.0+0x64>
900118a8:	f8c8 3000 	str.w	r3, [r8]
900118ac:	f7fe fc16 	bl	900100dc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900118b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900118b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900118b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900118b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900118ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900118bc:	4291      	cmp	r1, r2
900118be:	bf28      	it	cs
900118c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900118c2:	2b00      	cmp	r3, #0
900118c4:	d050      	beq.n	90011968 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900118c6:	683b      	ldr	r3, [r7, #0]
900118c8:	68db      	ldr	r3, [r3, #12]
900118ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900118cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900118ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
900118d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900118d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
900118d4:	d2d4      	bcs.n	90011880 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
900118d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900118da:	e011      	b.n	90011900 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
900118dc:	4b26      	ldr	r3, [pc, #152]	; (90011978 <xTaskIncrementTick.part.0+0x130>)
900118de:	681a      	ldr	r2, [r3, #0]
900118e0:	6812      	ldr	r2, [r2, #0]
900118e2:	b30a      	cbz	r2, 90011928 <xTaskIncrementTick.part.0+0xe0>
900118e4:	f04f 0350 	mov.w	r3, #80	; 0x50
900118e8:	f383 8811 	msr	BASEPRI, r3
900118ec:	f3bf 8f6f 	isb	sy
900118f0:	f3bf 8f4f 	dsb	sy
900118f4:	e7fe      	b.n	900118f4 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
900118f6:	2500      	movs	r5, #0
900118f8:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9001198c <xTaskIncrementTick.part.0+0x144>
900118fc:	f8df a090 	ldr.w	sl, [pc, #144]	; 90011990 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011900:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90011904:	491d      	ldr	r1, [pc, #116]	; (9001197c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011908:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001190c:	009b      	lsls	r3, r3, #2
9001190e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90011912:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90011914:	2a02      	cmp	r2, #2
90011916:	bf28      	it	cs
90011918:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9001191a:	2b00      	cmp	r3, #0
}
9001191c:	bf0c      	ite	eq
9001191e:	4628      	moveq	r0, r5
90011920:	2001      	movne	r0, #1
90011922:	b003      	add	sp, #12
90011924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011928:	4a15      	ldr	r2, [pc, #84]	; (90011980 <xTaskIncrementTick.part.0+0x138>)
9001192a:	6818      	ldr	r0, [r3, #0]
9001192c:	6811      	ldr	r1, [r2, #0]
9001192e:	6019      	str	r1, [r3, #0]
90011930:	4914      	ldr	r1, [pc, #80]	; (90011984 <xTaskIncrementTick.part.0+0x13c>)
90011932:	6010      	str	r0, [r2, #0]
90011934:	680a      	ldr	r2, [r1, #0]
90011936:	3201      	adds	r2, #1
90011938:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001193a:	681a      	ldr	r2, [r3, #0]
9001193c:	6812      	ldr	r2, [r2, #0]
9001193e:	b932      	cbnz	r2, 9001194e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90011940:	f8df b044 	ldr.w	fp, [pc, #68]	; 90011988 <xTaskIncrementTick.part.0+0x140>
90011944:	f04f 33ff 	mov.w	r3, #4294967295
90011948:	f8cb 3000 	str.w	r3, [fp]
9001194c:	e787      	b.n	9001185e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001194e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011950:	f8df b034 	ldr.w	fp, [pc, #52]	; 90011988 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011954:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011956:	68db      	ldr	r3, [r3, #12]
90011958:	685b      	ldr	r3, [r3, #4]
9001195a:	f8cb 3000 	str.w	r3, [fp]
	}
}
9001195e:	e77e      	b.n	9001185e <xTaskIncrementTick.part.0+0x16>
90011960:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9001198c <xTaskIncrementTick.part.0+0x144>
90011964:	f8df a028 	ldr.w	sl, [pc, #40]	; 90011990 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011968:	f04f 33ff 	mov.w	r3, #4294967295
9001196c:	f8cb 3000 	str.w	r3, [fp]
					break;
90011970:	e7c6      	b.n	90011900 <xTaskIncrementTick.part.0+0xb8>
90011972:	bf00      	nop
90011974:	2403998c 	.word	0x2403998c
90011978:	2403949c 	.word	0x2403949c
9001197c:	24039990 	.word	0x24039990
90011980:	240394a0 	.word	0x240394a0
90011984:	24039944 	.word	0x24039944
90011988:	24039940 	.word	0x24039940
9001198c:	240394a4 	.word	0x240394a4
90011990:	24039498 	.word	0x24039498
90011994:	24039914 	.word	0x24039914

90011998 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90011998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9001199c:	4d41      	ldr	r5, [pc, #260]	; (90011aa4 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9001199e:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
900119a0:	f7fe fc40 	bl	90010224 <vPortEnterCritical>
		--uxSchedulerSuspended;
900119a4:	682b      	ldr	r3, [r5, #0]
900119a6:	3b01      	subs	r3, #1
900119a8:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900119aa:	682b      	ldr	r3, [r5, #0]
900119ac:	2b00      	cmp	r3, #0
900119ae:	d161      	bne.n	90011a74 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900119b0:	4b3d      	ldr	r3, [pc, #244]	; (90011aa8 <xTaskResumeAll.part.0+0x110>)
900119b2:	681b      	ldr	r3, [r3, #0]
900119b4:	2b00      	cmp	r3, #0
900119b6:	d05d      	beq.n	90011a74 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900119b8:	4e3c      	ldr	r6, [pc, #240]	; (90011aac <xTaskResumeAll.part.0+0x114>)
900119ba:	6833      	ldr	r3, [r6, #0]
900119bc:	2b00      	cmp	r3, #0
900119be:	d06e      	beq.n	90011a9e <xTaskResumeAll.part.0+0x106>
900119c0:	4f3b      	ldr	r7, [pc, #236]	; (90011ab0 <xTaskResumeAll.part.0+0x118>)
900119c2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 90011ac0 <xTaskResumeAll.part.0+0x128>
900119c6:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 90011ac4 <xTaskResumeAll.part.0+0x12c>
900119ca:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 90011ac8 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900119ce:	68f3      	ldr	r3, [r6, #12]
900119d0:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900119d2:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900119d6:	f104 0018 	add.w	r0, r4, #24
900119da:	f7fe fba7 	bl	9001012c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900119de:	4658      	mov	r0, fp
900119e0:	f7fe fba4 	bl	9001012c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900119e4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900119e6:	683a      	ldr	r2, [r7, #0]
900119e8:	4659      	mov	r1, fp
900119ea:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900119ee:	4293      	cmp	r3, r2
900119f0:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900119f4:	d900      	bls.n	900119f8 <xTaskResumeAll.part.0+0x60>
900119f6:	603b      	str	r3, [r7, #0]
900119f8:	f7fe fb70 	bl	900100dc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900119fc:	f8d8 3000 	ldr.w	r3, [r8]
90011a00:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90011a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011a04:	429a      	cmp	r2, r3
90011a06:	d33d      	bcc.n	90011a84 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90011a08:	2301      	movs	r3, #1
90011a0a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011a0e:	6833      	ldr	r3, [r6, #0]
90011a10:	2b00      	cmp	r3, #0
90011a12:	d1dc      	bne.n	900119ce <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011a14:	4b27      	ldr	r3, [pc, #156]	; (90011ab4 <xTaskResumeAll.part.0+0x11c>)
90011a16:	681a      	ldr	r2, [r3, #0]
90011a18:	6812      	ldr	r2, [r2, #0]
90011a1a:	2a00      	cmp	r2, #0
90011a1c:	d03a      	beq.n	90011a94 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011a1e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011a20:	4b25      	ldr	r3, [pc, #148]	; (90011ab8 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011a22:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011a24:	68d2      	ldr	r2, [r2, #12]
90011a26:	6852      	ldr	r2, [r2, #4]
90011a28:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
90011a2a:	4e24      	ldr	r6, [pc, #144]	; (90011abc <xTaskResumeAll.part.0+0x124>)
90011a2c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
90011a2e:	b194      	cbz	r4, 90011a56 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90011a30:	2701      	movs	r7, #1
90011a32:	e006      	b.n	90011a42 <xTaskResumeAll.part.0+0xaa>
90011a34:	f7ff ff08 	bl	90011848 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90011a38:	b108      	cbz	r0, 90011a3e <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
90011a3a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011a3e:	3c01      	subs	r4, #1
90011a40:	d008      	beq.n	90011a54 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011a42:	682b      	ldr	r3, [r5, #0]
90011a44:	2b00      	cmp	r3, #0
90011a46:	d0f5      	beq.n	90011a34 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90011a48:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011a4a:	3c01      	subs	r4, #1
		++xPendedTicks;
90011a4c:	f103 0301 	add.w	r3, r3, #1
90011a50:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011a52:	d1f6      	bne.n	90011a42 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90011a54:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90011a56:	f8da 3000 	ldr.w	r3, [sl]
90011a5a:	b15b      	cbz	r3, 90011a74 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
90011a5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011a60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011a64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011a68:	f3bf 8f4f 	dsb	sy
90011a6c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90011a70:	2001      	movs	r0, #1
90011a72:	e000      	b.n	90011a76 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90011a74:	2000      	movs	r0, #0
90011a76:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90011a78:	f7fe fbf6 	bl	90010268 <vPortExitCritical>
}
90011a7c:	9801      	ldr	r0, [sp, #4]
90011a7e:	b003      	add	sp, #12
90011a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011a84:	6833      	ldr	r3, [r6, #0]
90011a86:	2b00      	cmp	r3, #0
90011a88:	d1a1      	bne.n	900119ce <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011a8a:	4b0a      	ldr	r3, [pc, #40]	; (90011ab4 <xTaskResumeAll.part.0+0x11c>)
90011a8c:	681a      	ldr	r2, [r3, #0]
90011a8e:	6812      	ldr	r2, [r2, #0]
90011a90:	2a00      	cmp	r2, #0
90011a92:	d1c4      	bne.n	90011a1e <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
90011a94:	4b08      	ldr	r3, [pc, #32]	; (90011ab8 <xTaskResumeAll.part.0+0x120>)
90011a96:	f04f 32ff 	mov.w	r2, #4294967295
90011a9a:	601a      	str	r2, [r3, #0]
90011a9c:	e7c5      	b.n	90011a2a <xTaskResumeAll.part.0+0x92>
90011a9e:	f8df a028 	ldr.w	sl, [pc, #40]	; 90011ac8 <xTaskResumeAll.part.0+0x130>
90011aa2:	e7c2      	b.n	90011a2a <xTaskResumeAll.part.0+0x92>
90011aa4:	2403990c 	.word	0x2403990c
90011aa8:	24039904 	.word	0x24039904
90011aac:	2403994c 	.word	0x2403994c
90011ab0:	24039914 	.word	0x24039914
90011ab4:	2403949c 	.word	0x2403949c
90011ab8:	24039940 	.word	0x24039940
90011abc:	24039948 	.word	0x24039948
90011ac0:	240394a4 	.word	0x240394a4
90011ac4:	24039498 	.word	0x24039498
90011ac8:	24039990 	.word	0x24039990

90011acc <xTaskCreateStatic>:
	{
90011acc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011ad0:	b083      	sub	sp, #12
90011ad2:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
90011ad4:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
90011ad8:	b1bb      	cbz	r3, 90011b0a <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
90011ada:	b16c      	cbz	r4, 90011af8 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90011adc:	2360      	movs	r3, #96	; 0x60
90011ade:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90011ae0:	9b01      	ldr	r3, [sp, #4]
90011ae2:	2b60      	cmp	r3, #96	; 0x60
90011ae4:	d01a      	beq.n	90011b1c <xTaskCreateStatic+0x50>
90011ae6:	f04f 0350 	mov.w	r3, #80	; 0x50
90011aea:	f383 8811 	msr	BASEPRI, r3
90011aee:	f3bf 8f6f 	isb	sy
90011af2:	f3bf 8f4f 	dsb	sy
90011af6:	e7fe      	b.n	90011af6 <xTaskCreateStatic+0x2a>
90011af8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011afc:	f383 8811 	msr	BASEPRI, r3
90011b00:	f3bf 8f6f 	isb	sy
90011b04:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011b08:	e7fe      	b.n	90011b08 <xTaskCreateStatic+0x3c>
90011b0a:	f04f 0350 	mov.w	r3, #80	; 0x50
90011b0e:	f383 8811 	msr	BASEPRI, r3
90011b12:	f3bf 8f6f 	isb	sy
90011b16:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011b1a:	e7fe      	b.n	90011b1a <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011b1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011b1e:	0096      	lsls	r6, r2, #2
90011b20:	4607      	mov	r7, r0
90011b22:	460d      	mov	r5, r1
90011b24:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011b26:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011b28:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011b2a:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011b2c:	4632      	mov	r2, r6
90011b2e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011b30:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011b34:	f017 ff4c 	bl	900299d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011b38:	1f32      	subs	r2, r6, #4
90011b3a:	6b23      	ldr	r3, [r4, #48]	; 0x30
90011b3c:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011b3e:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
90011b42:	2d00      	cmp	r5, #0
90011b44:	d069      	beq.n	90011c1a <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b46:	782b      	ldrb	r3, [r5, #0]
90011b48:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011b4c:	2b00      	cmp	r3, #0
90011b4e:	d03b      	beq.n	90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b50:	786b      	ldrb	r3, [r5, #1]
90011b52:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011b56:	2b00      	cmp	r3, #0
90011b58:	d036      	beq.n	90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b5a:	78ab      	ldrb	r3, [r5, #2]
90011b5c:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011b60:	b393      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b62:	78eb      	ldrb	r3, [r5, #3]
90011b64:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011b68:	b373      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b6a:	792b      	ldrb	r3, [r5, #4]
90011b6c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011b70:	b353      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b72:	796b      	ldrb	r3, [r5, #5]
90011b74:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011b78:	b333      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b7a:	79ab      	ldrb	r3, [r5, #6]
90011b7c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011b80:	b313      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b82:	79eb      	ldrb	r3, [r5, #7]
90011b84:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011b88:	b1f3      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b8a:	7a2b      	ldrb	r3, [r5, #8]
90011b8c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011b90:	b1d3      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b92:	7a6b      	ldrb	r3, [r5, #9]
90011b94:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011b98:	b1b3      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011b9a:	7aab      	ldrb	r3, [r5, #10]
90011b9c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011ba0:	b193      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ba2:	7aeb      	ldrb	r3, [r5, #11]
90011ba4:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011ba8:	b173      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011baa:	7b2b      	ldrb	r3, [r5, #12]
90011bac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011bb0:	b153      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bb2:	7b6b      	ldrb	r3, [r5, #13]
90011bb4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011bb8:	b133      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bba:	7bab      	ldrb	r3, [r5, #14]
90011bbc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011bc0:	b113      	cbz	r3, 90011bc8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011bc2:	7beb      	ldrb	r3, [r5, #15]
90011bc4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011bc8:	2300      	movs	r3, #0
90011bca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011bce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
90011bd0:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011bd2:	1d20      	adds	r0, r4, #4
90011bd4:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011bd6:	6526      	str	r6, [r4, #80]	; 0x50
90011bd8:	bf28      	it	cs
90011bda:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011bdc:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011bde:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011be0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011be4:	f7fe fa76 	bl	900100d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011be8:	f104 0018 	add.w	r0, r4, #24
90011bec:	f7fe fa72 	bl	900100d4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011bf0:	4642      	mov	r2, r8
90011bf2:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90011bf4:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011bf6:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011bf8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011bfa:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011bfc:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011bfe:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011c00:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011c04:	f7fe fae4 	bl	900101d0 <pxPortInitialiseStack>
90011c08:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90011c0a:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011c0c:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011c0e:	f7ff fd45 	bl	9001169c <prvAddNewTaskToReadyList>
	}
90011c12:	4620      	mov	r0, r4
90011c14:	b003      	add	sp, #12
90011c16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011c1a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011c1e:	e7d6      	b.n	90011bce <xTaskCreateStatic+0x102>

90011c20 <xTaskCreate>:
	{
90011c20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011c24:	0096      	lsls	r6, r2, #2
	{
90011c26:	4680      	mov	r8, r0
90011c28:	460d      	mov	r5, r1
90011c2a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011c2c:	4630      	mov	r0, r6
90011c2e:	f7fe f923 	bl	9000fe78 <pvPortMalloc>
			if( pxStack != NULL )
90011c32:	2800      	cmp	r0, #0
90011c34:	f000 8083 	beq.w	90011d3e <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90011c38:	4607      	mov	r7, r0
90011c3a:	2060      	movs	r0, #96	; 0x60
90011c3c:	f7fe f91c 	bl	9000fe78 <pvPortMalloc>
				if( pxNewTCB != NULL )
90011c40:	4604      	mov	r4, r0
90011c42:	2800      	cmp	r0, #0
90011c44:	d07f      	beq.n	90011d46 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011c46:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90011c48:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011c4a:	4632      	mov	r2, r6
90011c4c:	4638      	mov	r0, r7
90011c4e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011c50:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011c54:	f017 febc 	bl	900299d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011c58:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
90011c5c:	2d00      	cmp	r5, #0
90011c5e:	d078      	beq.n	90011d52 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c60:	782b      	ldrb	r3, [r5, #0]
90011c62:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011c66:	2b00      	cmp	r3, #0
90011c68:	d03b      	beq.n	90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c6a:	786b      	ldrb	r3, [r5, #1]
90011c6c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011c70:	2b00      	cmp	r3, #0
90011c72:	d036      	beq.n	90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c74:	78ab      	ldrb	r3, [r5, #2]
90011c76:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011c7a:	b393      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c7c:	78eb      	ldrb	r3, [r5, #3]
90011c7e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011c82:	b373      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c84:	792b      	ldrb	r3, [r5, #4]
90011c86:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011c8a:	b353      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c8c:	796b      	ldrb	r3, [r5, #5]
90011c8e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011c92:	b333      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c94:	79ab      	ldrb	r3, [r5, #6]
90011c96:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011c9a:	b313      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011c9c:	79eb      	ldrb	r3, [r5, #7]
90011c9e:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011ca2:	b1f3      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ca4:	7a2b      	ldrb	r3, [r5, #8]
90011ca6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011caa:	b1d3      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cac:	7a6b      	ldrb	r3, [r5, #9]
90011cae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
90011cb2:	b1b3      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cb4:	7aab      	ldrb	r3, [r5, #10]
90011cb6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011cba:	b193      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cbc:	7aeb      	ldrb	r3, [r5, #11]
90011cbe:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
90011cc2:	b173      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cc4:	7b2b      	ldrb	r3, [r5, #12]
90011cc6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011cca:	b153      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011ccc:	7b6b      	ldrb	r3, [r5, #13]
90011cce:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011cd2:	b133      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cd4:	7bab      	ldrb	r3, [r5, #14]
90011cd6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
90011cda:	b113      	cbz	r3, 90011ce2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011cdc:	7beb      	ldrb	r3, [r5, #15]
90011cde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011ce2:	2300      	movs	r3, #0
90011ce4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011ce8:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90011cea:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011cec:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011cee:	3e04      	subs	r6, #4
90011cf0:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011cf2:	6527      	str	r7, [r4, #80]	; 0x50
90011cf4:	bf28      	it	cs
90011cf6:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90011cf8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011cfa:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011cfc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011d00:	f7fe f9e8 	bl	900100d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011d04:	f104 0018 	add.w	r0, r4, #24
90011d08:	f7fe f9e4 	bl	900100d4 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011d0c:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
90011d10:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d12:	464a      	mov	r2, r9
90011d14:	4641      	mov	r1, r8
90011d16:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011d1a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011d1c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011d1e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011d20:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011d22:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d26:	f7fe fa53 	bl	900101d0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011d2c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011d2e:	b103      	cbz	r3, 90011d32 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011d30:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011d32:	4620      	mov	r0, r4
90011d34:	f7ff fcb2 	bl	9001169c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90011d38:	2001      	movs	r0, #1
	}
90011d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011d3e:	f04f 30ff 	mov.w	r0, #4294967295
	}
90011d42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90011d46:	4638      	mov	r0, r7
90011d48:	f7fe f954 	bl	9000fff4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
90011d4c:	f04f 30ff 	mov.w	r0, #4294967295
90011d50:	e7f3      	b.n	90011d3a <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011d52:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90011d56:	e7c7      	b.n	90011ce8 <xTaskCreate+0xc8>

90011d58 <vTaskDelay>:
	{
90011d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
90011d5a:	b950      	cbnz	r0, 90011d72 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
90011d5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90011d60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90011d64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90011d68:	f3bf 8f4f 	dsb	sy
90011d6c:	f3bf 8f6f 	isb	sy
	}
90011d70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011d72:	4d1e      	ldr	r5, [pc, #120]	; (90011dec <vTaskDelay+0x94>)
90011d74:	682b      	ldr	r3, [r5, #0]
90011d76:	b143      	cbz	r3, 90011d8a <vTaskDelay+0x32>
90011d78:	f04f 0350 	mov.w	r3, #80	; 0x50
90011d7c:	f383 8811 	msr	BASEPRI, r3
90011d80:	f3bf 8f6f 	isb	sy
90011d84:	f3bf 8f4f 	dsb	sy
90011d88:	e7fe      	b.n	90011d88 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
90011d8a:	682b      	ldr	r3, [r5, #0]
90011d8c:	4604      	mov	r4, r0
90011d8e:	3301      	adds	r3, #1
90011d90:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011d92:	4b17      	ldr	r3, [pc, #92]	; (90011df0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011d94:	4e17      	ldr	r6, [pc, #92]	; (90011df4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90011d96:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011d98:	6830      	ldr	r0, [r6, #0]
90011d9a:	3004      	adds	r0, #4
90011d9c:	f7fe f9c6 	bl	9001012c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011da0:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011da2:	6833      	ldr	r3, [r6, #0]
90011da4:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011da6:	d315      	bcc.n	90011dd4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011da8:	4b13      	ldr	r3, [pc, #76]	; (90011df8 <vTaskDelay+0xa0>)
90011daa:	6818      	ldr	r0, [r3, #0]
90011dac:	6831      	ldr	r1, [r6, #0]
90011dae:	3104      	adds	r1, #4
90011db0:	f7fe f9a4 	bl	900100fc <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011db4:	682b      	ldr	r3, [r5, #0]
90011db6:	b943      	cbnz	r3, 90011dca <vTaskDelay+0x72>
90011db8:	f04f 0350 	mov.w	r3, #80	; 0x50
90011dbc:	f383 8811 	msr	BASEPRI, r3
90011dc0:	f3bf 8f6f 	isb	sy
90011dc4:	f3bf 8f4f 	dsb	sy
90011dc8:	e7fe      	b.n	90011dc8 <vTaskDelay+0x70>
90011dca:	f7ff fde5 	bl	90011998 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
90011dce:	2800      	cmp	r0, #0
90011dd0:	d0c4      	beq.n	90011d5c <vTaskDelay+0x4>
	}
90011dd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011dd4:	4b09      	ldr	r3, [pc, #36]	; (90011dfc <vTaskDelay+0xa4>)
90011dd6:	6818      	ldr	r0, [r3, #0]
90011dd8:	6831      	ldr	r1, [r6, #0]
90011dda:	3104      	adds	r1, #4
90011ddc:	f7fe f98e 	bl	900100fc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011de0:	4b07      	ldr	r3, [pc, #28]	; (90011e00 <vTaskDelay+0xa8>)
90011de2:	681a      	ldr	r2, [r3, #0]
90011de4:	4294      	cmp	r4, r2
90011de6:	d2e5      	bcs.n	90011db4 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011de8:	601c      	str	r4, [r3, #0]
90011dea:	e7e3      	b.n	90011db4 <vTaskDelay+0x5c>
90011dec:	2403990c 	.word	0x2403990c
90011df0:	2403998c 	.word	0x2403998c
90011df4:	24039498 	.word	0x24039498
90011df8:	240394a0 	.word	0x240394a0
90011dfc:	2403949c 	.word	0x2403949c
90011e00:	24039940 	.word	0x24039940

90011e04 <vTaskStartScheduler>:
{
90011e04:	b570      	push	{r4, r5, r6, lr}
90011e06:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90011e08:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011e0a:	4668      	mov	r0, sp
90011e0c:	aa02      	add	r2, sp, #8
90011e0e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90011e10:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011e14:	f7fe f812 	bl	9000fe3c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90011e18:	9d00      	ldr	r5, [sp, #0]
90011e1a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
90011e1e:	b1b8      	cbz	r0, 90011e50 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011e20:	b16d      	cbz	r5, 90011e3e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011e22:	2260      	movs	r2, #96	; 0x60
90011e24:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011e26:	9a03      	ldr	r2, [sp, #12]
90011e28:	2a60      	cmp	r2, #96	; 0x60
90011e2a:	d01a      	beq.n	90011e62 <vTaskStartScheduler+0x5e>
90011e2c:	f04f 0350 	mov.w	r3, #80	; 0x50
90011e30:	f383 8811 	msr	BASEPRI, r3
90011e34:	f3bf 8f6f 	isb	sy
90011e38:	f3bf 8f4f 	dsb	sy
90011e3c:	e7fe      	b.n	90011e3c <vTaskStartScheduler+0x38>
90011e3e:	f04f 0350 	mov.w	r3, #80	; 0x50
90011e42:	f383 8811 	msr	BASEPRI, r3
90011e46:	f3bf 8f6f 	isb	sy
90011e4a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90011e4e:	e7fe      	b.n	90011e4e <vTaskStartScheduler+0x4a>
90011e50:	f04f 0350 	mov.w	r3, #80	; 0x50
90011e54:	f383 8811 	msr	BASEPRI, r3
90011e58:	f3bf 8f6f 	isb	sy
90011e5c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011e60:	e7fe      	b.n	90011e60 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011e62:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011e64:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011e66:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011e68:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011e6a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011e6c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011e70:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011e72:	f017 fdad 	bl	900299d0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011e76:	1f33      	subs	r3, r6, #4
90011e78:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e7a:	492a      	ldr	r1, [pc, #168]	; (90011f24 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011e7c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011e7e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011e80:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90011e84:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011e86:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011e8a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
90011e8e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90011e90:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011e94:	f7fe f91e 	bl	900100d4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011e98:	f105 0018 	add.w	r0, r5, #24
90011e9c:	f7fe f91a 	bl	900100d4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ea0:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011ea2:	4622      	mov	r2, r4
90011ea4:	4920      	ldr	r1, [pc, #128]	; (90011f28 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90011ea6:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011ea8:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011eaa:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011eac:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011eae:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90011eb0:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011eb2:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011eb6:	f7fe f98b 	bl	900101d0 <pxPortInitialiseStack>
90011eba:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
90011ebc:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011ebe:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011ec0:	f7ff fbec 	bl	9001169c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
90011ec4:	f000 fca4 	bl	90012810 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
90011ec8:	2801      	cmp	r0, #1
90011eca:	d00c      	beq.n	90011ee6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011ecc:	3001      	adds	r0, #1
90011ece:	d001      	beq.n	90011ed4 <vTaskStartScheduler+0xd0>
}
90011ed0:	b004      	add	sp, #16
90011ed2:	bd70      	pop	{r4, r5, r6, pc}
90011ed4:	f04f 0350 	mov.w	r3, #80	; 0x50
90011ed8:	f383 8811 	msr	BASEPRI, r3
90011edc:	f3bf 8f6f 	isb	sy
90011ee0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011ee4:	e7fe      	b.n	90011ee4 <vTaskStartScheduler+0xe0>
90011ee6:	f04f 0350 	mov.w	r3, #80	; 0x50
90011eea:	f383 8811 	msr	BASEPRI, r3
90011eee:	f3bf 8f6f 	isb	sy
90011ef2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90011ef6:	4b0d      	ldr	r3, [pc, #52]	; (90011f2c <vTaskStartScheduler+0x128>)
90011ef8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90011efc:	490c      	ldr	r1, [pc, #48]	; (90011f30 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90011efe:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011f00:	4b0c      	ldr	r3, [pc, #48]	; (90011f34 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90011f02:	4a0d      	ldr	r2, [pc, #52]	; (90011f38 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90011f04:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011f06:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90011f08:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90011f0a:	b143      	cbz	r3, 90011f1e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90011f0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011f0e:	b10b      	cbz	r3, 90011f14 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011f10:	2000      	movs	r0, #0
90011f12:	4798      	blx	r3
}
90011f14:	b004      	add	sp, #16
90011f16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90011f1a:	f7fe ba15 	b.w	90010348 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90011f1e:	6813      	ldr	r3, [r2, #0]
90011f20:	e7f4      	b.n	90011f0c <vTaskStartScheduler+0x108>
90011f22:	bf00      	nop
90011f24:	454c4449 	.word	0x454c4449
90011f28:	900117ad 	.word	0x900117ad
90011f2c:	24039940 	.word	0x24039940
90011f30:	24039960 	.word	0x24039960
90011f34:	2403998c 	.word	0x2403998c
90011f38:	24039498 	.word	0x24039498

90011f3c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011f3c:	4a02      	ldr	r2, [pc, #8]	; (90011f48 <vTaskSuspendAll+0xc>)
90011f3e:	6813      	ldr	r3, [r2, #0]
90011f40:	3301      	adds	r3, #1
90011f42:	6013      	str	r3, [r2, #0]
}
90011f44:	4770      	bx	lr
90011f46:	bf00      	nop
90011f48:	2403990c 	.word	0x2403990c

90011f4c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011f4c:	4b06      	ldr	r3, [pc, #24]	; (90011f68 <xTaskResumeAll+0x1c>)
90011f4e:	681b      	ldr	r3, [r3, #0]
90011f50:	b943      	cbnz	r3, 90011f64 <xTaskResumeAll+0x18>
90011f52:	f04f 0350 	mov.w	r3, #80	; 0x50
90011f56:	f383 8811 	msr	BASEPRI, r3
90011f5a:	f3bf 8f6f 	isb	sy
90011f5e:	f3bf 8f4f 	dsb	sy
90011f62:	e7fe      	b.n	90011f62 <xTaskResumeAll+0x16>
90011f64:	f7ff bd18 	b.w	90011998 <xTaskResumeAll.part.0>
90011f68:	2403990c 	.word	0x2403990c

90011f6c <xTaskGetTickCount>:
		xTicks = xTickCount;
90011f6c:	4b01      	ldr	r3, [pc, #4]	; (90011f74 <xTaskGetTickCount+0x8>)
90011f6e:	6818      	ldr	r0, [r3, #0]
}
90011f70:	4770      	bx	lr
90011f72:	bf00      	nop
90011f74:	2403998c 	.word	0x2403998c

90011f78 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011f78:	4b05      	ldr	r3, [pc, #20]	; (90011f90 <xTaskIncrementTick+0x18>)
90011f7a:	681b      	ldr	r3, [r3, #0]
90011f7c:	b90b      	cbnz	r3, 90011f82 <xTaskIncrementTick+0xa>
90011f7e:	f7ff bc63 	b.w	90011848 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011f82:	4a04      	ldr	r2, [pc, #16]	; (90011f94 <xTaskIncrementTick+0x1c>)
}
90011f84:	2000      	movs	r0, #0
		++xPendedTicks;
90011f86:	6813      	ldr	r3, [r2, #0]
90011f88:	3301      	adds	r3, #1
90011f8a:	6013      	str	r3, [r2, #0]
}
90011f8c:	4770      	bx	lr
90011f8e:	bf00      	nop
90011f90:	2403990c 	.word	0x2403990c
90011f94:	24039948 	.word	0x24039948

90011f98 <vTaskSetApplicationTaskTag>:
	{
90011f98:	b538      	push	{r3, r4, r5, lr}
90011f9a:	460d      	mov	r5, r1
		if( xTask == NULL )
90011f9c:	b138      	cbz	r0, 90011fae <vTaskSetApplicationTaskTag+0x16>
90011f9e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011fa0:	f7fe f940 	bl	90010224 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011fa4:	6565      	str	r5, [r4, #84]	; 0x54
	}
90011fa6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011faa:	f7fe b95d 	b.w	90010268 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011fae:	4b04      	ldr	r3, [pc, #16]	; (90011fc0 <vTaskSetApplicationTaskTag+0x28>)
90011fb0:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011fb2:	f7fe f937 	bl	90010224 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011fb6:	6565      	str	r5, [r4, #84]	; 0x54
	}
90011fb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011fbc:	f7fe b954 	b.w	90010268 <vPortExitCritical>
90011fc0:	24039498 	.word	0x24039498

90011fc4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90011fc4:	4b27      	ldr	r3, [pc, #156]	; (90012064 <vTaskSwitchContext+0xa0>)
90011fc6:	681b      	ldr	r3, [r3, #0]
90011fc8:	b11b      	cbz	r3, 90011fd2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90011fca:	4b27      	ldr	r3, [pc, #156]	; (90012068 <vTaskSwitchContext+0xa4>)
90011fcc:	2201      	movs	r2, #1
90011fce:	601a      	str	r2, [r3, #0]
90011fd0:	4770      	bx	lr
{
90011fd2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90011fd4:	4a24      	ldr	r2, [pc, #144]	; (90012068 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90011fd6:	4c25      	ldr	r4, [pc, #148]	; (9001206c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90011fd8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90011fda:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011fdc:	2b00      	cmp	r3, #0
90011fde:	d036      	beq.n	9001204e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90011fe0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90011fe2:	b10b      	cbz	r3, 90011fe8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011fe4:	2001      	movs	r0, #1
90011fe6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011fe8:	4d21      	ldr	r5, [pc, #132]	; (90012070 <vTaskSwitchContext+0xac>)
90011fea:	4922      	ldr	r1, [pc, #136]	; (90012074 <vTaskSwitchContext+0xb0>)
90011fec:	682b      	ldr	r3, [r5, #0]
90011fee:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011ff2:	0098      	lsls	r0, r3, #2
90011ff4:	0092      	lsls	r2, r2, #2
90011ff6:	588a      	ldr	r2, [r1, r2]
90011ff8:	b942      	cbnz	r2, 9001200c <vTaskSwitchContext+0x48>
90011ffa:	b1fb      	cbz	r3, 9001203c <vTaskSwitchContext+0x78>
90011ffc:	3b01      	subs	r3, #1
90011ffe:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90012002:	0098      	lsls	r0, r3, #2
90012004:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90012008:	2a00      	cmp	r2, #0
9001200a:	d0f6      	beq.n	90011ffa <vTaskSwitchContext+0x36>
9001200c:	4418      	add	r0, r3
9001200e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90012012:	f8dc 1004 	ldr.w	r1, [ip, #4]
90012016:	4662      	mov	r2, ip
90012018:	6849      	ldr	r1, [r1, #4]
9001201a:	3208      	adds	r2, #8
9001201c:	4291      	cmp	r1, r2
9001201e:	f8cc 1004 	str.w	r1, [ip, #4]
90012022:	d01b      	beq.n	9001205c <vTaskSwitchContext+0x98>
90012024:	68ca      	ldr	r2, [r1, #12]
90012026:	6022      	str	r2, [r4, #0]
90012028:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001202a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001202c:	b1a3      	cbz	r3, 90012058 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9001202e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012030:	b11b      	cbz	r3, 9001203a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90012032:	2000      	movs	r0, #0
}
90012034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90012038:	4718      	bx	r3
}
9001203a:	bd70      	pop	{r4, r5, r6, pc}
9001203c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012040:	f383 8811 	msr	BASEPRI, r3
90012044:	f3bf 8f6f 	isb	sy
90012048:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001204c:	e7fe      	b.n	9001204c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9001204e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90012050:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90012052:	2b00      	cmp	r3, #0
90012054:	d1c6      	bne.n	90011fe4 <vTaskSwitchContext+0x20>
90012056:	e7c7      	b.n	90011fe8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90012058:	6823      	ldr	r3, [r4, #0]
9001205a:	e7e8      	b.n	9001202e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001205c:	6849      	ldr	r1, [r1, #4]
9001205e:	f8cc 1004 	str.w	r1, [ip, #4]
90012062:	e7df      	b.n	90012024 <vTaskSwitchContext+0x60>
90012064:	2403990c 	.word	0x2403990c
90012068:	24039990 	.word	0x24039990
9001206c:	24039498 	.word	0x24039498
90012070:	24039914 	.word	0x24039914
90012074:	240394a4 	.word	0x240394a4

90012078 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90012078:	b1f0      	cbz	r0, 900120b8 <vTaskPlaceOnEventList+0x40>
{
9001207a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9001207c:	4d1a      	ldr	r5, [pc, #104]	; (900120e8 <vTaskPlaceOnEventList+0x70>)
9001207e:	460c      	mov	r4, r1
90012080:	6829      	ldr	r1, [r5, #0]
90012082:	3118      	adds	r1, #24
90012084:	f7fe f83a 	bl	900100fc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90012088:	4b18      	ldr	r3, [pc, #96]	; (900120ec <vTaskPlaceOnEventList+0x74>)
9001208a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001208c:	6828      	ldr	r0, [r5, #0]
9001208e:	3004      	adds	r0, #4
90012090:	f7fe f84c 	bl	9001012c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90012094:	1c63      	adds	r3, r4, #1
90012096:	d020      	beq.n	900120da <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90012098:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001209a:	682b      	ldr	r3, [r5, #0]
9001209c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9001209e:	d214      	bcs.n	900120ca <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900120a0:	4b13      	ldr	r3, [pc, #76]	; (900120f0 <vTaskPlaceOnEventList+0x78>)
900120a2:	6818      	ldr	r0, [r3, #0]
900120a4:	6829      	ldr	r1, [r5, #0]
900120a6:	3104      	adds	r1, #4
900120a8:	f7fe f828 	bl	900100fc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900120ac:	4b11      	ldr	r3, [pc, #68]	; (900120f4 <vTaskPlaceOnEventList+0x7c>)
900120ae:	681a      	ldr	r2, [r3, #0]
900120b0:	4294      	cmp	r4, r2
900120b2:	d200      	bcs.n	900120b6 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900120b4:	601c      	str	r4, [r3, #0]
}
900120b6:	bd70      	pop	{r4, r5, r6, pc}
900120b8:	f04f 0350 	mov.w	r3, #80	; 0x50
900120bc:	f383 8811 	msr	BASEPRI, r3
900120c0:	f3bf 8f6f 	isb	sy
900120c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900120c8:	e7fe      	b.n	900120c8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900120ca:	4b0b      	ldr	r3, [pc, #44]	; (900120f8 <vTaskPlaceOnEventList+0x80>)
900120cc:	6818      	ldr	r0, [r3, #0]
900120ce:	6829      	ldr	r1, [r5, #0]
}
900120d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900120d4:	3104      	adds	r1, #4
900120d6:	f7fe b811 	b.w	900100fc <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900120da:	6829      	ldr	r1, [r5, #0]
900120dc:	4807      	ldr	r0, [pc, #28]	; (900120fc <vTaskPlaceOnEventList+0x84>)
900120de:	3104      	adds	r1, #4
}
900120e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900120e4:	f7fd bffa 	b.w	900100dc <vListInsertEnd>
900120e8:	24039498 	.word	0x24039498
900120ec:	2403998c 	.word	0x2403998c
900120f0:	2403949c 	.word	0x2403949c
900120f4:	24039940 	.word	0x24039940
900120f8:	240394a0 	.word	0x240394a0
900120fc:	24039964 	.word	0x24039964

90012100 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90012100:	b358      	cbz	r0, 9001215a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90012102:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90012104:	4e1d      	ldr	r6, [pc, #116]	; (9001217c <vTaskPlaceOnEventListRestricted+0x7c>)
90012106:	460c      	mov	r4, r1
90012108:	4615      	mov	r5, r2
9001210a:	6831      	ldr	r1, [r6, #0]
9001210c:	3118      	adds	r1, #24
9001210e:	f7fd ffe5 	bl	900100dc <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90012112:	b165      	cbz	r5, 9001212e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90012114:	4b1a      	ldr	r3, [pc, #104]	; (90012180 <vTaskPlaceOnEventListRestricted+0x80>)
90012116:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012118:	6830      	ldr	r0, [r6, #0]
9001211a:	3004      	adds	r0, #4
9001211c:	f7fe f806 	bl	9001012c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012120:	6831      	ldr	r1, [r6, #0]
90012122:	4818      	ldr	r0, [pc, #96]	; (90012184 <vTaskPlaceOnEventListRestricted+0x84>)
90012124:	3104      	adds	r1, #4
	}
90012126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001212a:	f7fd bfd7 	b.w	900100dc <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001212e:	4b14      	ldr	r3, [pc, #80]	; (90012180 <vTaskPlaceOnEventListRestricted+0x80>)
90012130:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90012132:	6830      	ldr	r0, [r6, #0]
90012134:	3004      	adds	r0, #4
90012136:	f7fd fff9 	bl	9001012c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001213a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001213c:	6833      	ldr	r3, [r6, #0]
9001213e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90012140:	d214      	bcs.n	9001216c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012142:	4b11      	ldr	r3, [pc, #68]	; (90012188 <vTaskPlaceOnEventListRestricted+0x88>)
90012144:	6818      	ldr	r0, [r3, #0]
90012146:	6831      	ldr	r1, [r6, #0]
90012148:	3104      	adds	r1, #4
9001214a:	f7fd ffd7 	bl	900100fc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001214e:	4b0f      	ldr	r3, [pc, #60]	; (9001218c <vTaskPlaceOnEventListRestricted+0x8c>)
90012150:	681a      	ldr	r2, [r3, #0]
90012152:	4294      	cmp	r4, r2
90012154:	d200      	bcs.n	90012158 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90012156:	601c      	str	r4, [r3, #0]
	}
90012158:	bd70      	pop	{r4, r5, r6, pc}
9001215a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001215e:	f383 8811 	msr	BASEPRI, r3
90012162:	f3bf 8f6f 	isb	sy
90012166:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001216a:	e7fe      	b.n	9001216a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001216c:	4b08      	ldr	r3, [pc, #32]	; (90012190 <vTaskPlaceOnEventListRestricted+0x90>)
9001216e:	6818      	ldr	r0, [r3, #0]
90012170:	6831      	ldr	r1, [r6, #0]
	}
90012172:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90012176:	3104      	adds	r1, #4
90012178:	f7fd bfc0 	b.w	900100fc <vListInsert>
9001217c:	24039498 	.word	0x24039498
90012180:	2403998c 	.word	0x2403998c
90012184:	24039964 	.word	0x24039964
90012188:	2403949c 	.word	0x2403949c
9001218c:	24039940 	.word	0x24039940
90012190:	240394a0 	.word	0x240394a0

90012194 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012194:	68c3      	ldr	r3, [r0, #12]
{
90012196:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90012198:	68dc      	ldr	r4, [r3, #12]
{
9001219a:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9001219c:	b35c      	cbz	r4, 900121f6 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9001219e:	f104 0518 	add.w	r5, r4, #24
900121a2:	4628      	mov	r0, r5
900121a4:	f7fd ffc2 	bl	9001012c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900121a8:	4b19      	ldr	r3, [pc, #100]	; (90012210 <xTaskRemoveFromEventList+0x7c>)
900121aa:	681b      	ldr	r3, [r3, #0]
900121ac:	b17b      	cbz	r3, 900121ce <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900121ae:	4629      	mov	r1, r5
900121b0:	4818      	ldr	r0, [pc, #96]	; (90012214 <xTaskRemoveFromEventList+0x80>)
900121b2:	f7fd ff93 	bl	900100dc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900121b6:	4b18      	ldr	r3, [pc, #96]	; (90012218 <xTaskRemoveFromEventList+0x84>)
900121b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900121ba:	681b      	ldr	r3, [r3, #0]
900121bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900121be:	429a      	cmp	r2, r3
900121c0:	d922      	bls.n	90012208 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900121c2:	2301      	movs	r3, #1
900121c4:	4a15      	ldr	r2, [pc, #84]	; (9001221c <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900121c6:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900121c8:	6013      	str	r3, [r2, #0]
}
900121ca:	b003      	add	sp, #12
900121cc:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900121ce:	1d21      	adds	r1, r4, #4
900121d0:	4608      	mov	r0, r1
900121d2:	9101      	str	r1, [sp, #4]
900121d4:	f7fd ffaa 	bl	9001012c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900121d8:	4a11      	ldr	r2, [pc, #68]	; (90012220 <xTaskRemoveFromEventList+0x8c>)
900121da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900121dc:	6810      	ldr	r0, [r2, #0]
900121de:	9901      	ldr	r1, [sp, #4]
900121e0:	4283      	cmp	r3, r0
900121e2:	d900      	bls.n	900121e6 <xTaskRemoveFromEventList+0x52>
900121e4:	6013      	str	r3, [r2, #0]
900121e6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900121ea:	480e      	ldr	r0, [pc, #56]	; (90012224 <xTaskRemoveFromEventList+0x90>)
900121ec:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900121f0:	f7fd ff74 	bl	900100dc <vListInsertEnd>
900121f4:	e7df      	b.n	900121b6 <xTaskRemoveFromEventList+0x22>
900121f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900121fa:	f383 8811 	msr	BASEPRI, r3
900121fe:	f3bf 8f6f 	isb	sy
90012202:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90012206:	e7fe      	b.n	90012206 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90012208:	2000      	movs	r0, #0
}
9001220a:	b003      	add	sp, #12
9001220c:	bd30      	pop	{r4, r5, pc}
9001220e:	bf00      	nop
90012210:	2403990c 	.word	0x2403990c
90012214:	2403994c 	.word	0x2403994c
90012218:	24039498 	.word	0x24039498
9001221c:	24039990 	.word	0x24039990
90012220:	24039914 	.word	0x24039914
90012224:	240394a4 	.word	0x240394a4

90012228 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90012228:	4a03      	ldr	r2, [pc, #12]	; (90012238 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9001222a:	4b04      	ldr	r3, [pc, #16]	; (9001223c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9001222c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9001222e:	681b      	ldr	r3, [r3, #0]
90012230:	e9c0 2300 	strd	r2, r3, [r0]
}
90012234:	4770      	bx	lr
90012236:	bf00      	nop
90012238:	24039944 	.word	0x24039944
9001223c:	2403998c 	.word	0x2403998c

90012240 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90012240:	b328      	cbz	r0, 9001228e <xTaskCheckForTimeOut+0x4e>
{
90012242:	b5f0      	push	{r4, r5, r6, r7, lr}
90012244:	460d      	mov	r5, r1
90012246:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90012248:	b1c1      	cbz	r1, 9001227c <xTaskCheckForTimeOut+0x3c>
9001224a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9001224c:	f7fd ffea 	bl	90010224 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90012250:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90012252:	4a1d      	ldr	r2, [pc, #116]	; (900122c8 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90012254:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90012256:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90012258:	d030      	beq.n	900122bc <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9001225a:	f8df c070 	ldr.w	ip, [pc, #112]	; 900122cc <xTaskCheckForTimeOut+0x8c>
9001225e:	6826      	ldr	r6, [r4, #0]
90012260:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90012264:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90012266:	42be      	cmp	r6, r7
90012268:	d01a      	beq.n	900122a0 <xTaskCheckForTimeOut+0x60>
9001226a:	4288      	cmp	r0, r1
9001226c:	d818      	bhi.n	900122a0 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9001226e:	2001      	movs	r0, #1
90012270:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90012272:	f7fd fff9 	bl	90010268 <vPortExitCritical>
}
90012276:	9801      	ldr	r0, [sp, #4]
90012278:	b003      	add	sp, #12
9001227a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001227c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012280:	f383 8811 	msr	BASEPRI, r3
90012284:	f3bf 8f6f 	isb	sy
90012288:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9001228c:	e7fe      	b.n	9001228c <xTaskCheckForTimeOut+0x4c>
9001228e:	f04f 0350 	mov.w	r3, #80	; 0x50
90012292:	f383 8811 	msr	BASEPRI, r3
90012296:	f3bf 8f6f 	isb	sy
9001229a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9001229e:	e7fe      	b.n	9001229e <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
900122a0:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
900122a4:	4573      	cmp	r3, lr
900122a6:	d90b      	bls.n	900122c0 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
900122a8:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
900122aa:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
900122ae:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
900122b0:	4403      	add	r3, r0
			xReturn = pdFALSE;
900122b2:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
900122b4:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
900122b6:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
900122ba:	e7d9      	b.n	90012270 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
900122bc:	2000      	movs	r0, #0
900122be:	e7d7      	b.n	90012270 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
900122c0:	2300      	movs	r3, #0
			xReturn = pdTRUE;
900122c2:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
900122c4:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
900122c6:	e7d3      	b.n	90012270 <xTaskCheckForTimeOut+0x30>
900122c8:	2403998c 	.word	0x2403998c
900122cc:	24039944 	.word	0x24039944

900122d0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
900122d0:	4b01      	ldr	r3, [pc, #4]	; (900122d8 <vTaskMissedYield+0x8>)
900122d2:	2201      	movs	r2, #1
900122d4:	601a      	str	r2, [r3, #0]
}
900122d6:	4770      	bx	lr
900122d8:	24039990 	.word	0x24039990

900122dc <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
900122dc:	4b01      	ldr	r3, [pc, #4]	; (900122e4 <xTaskGetCurrentTaskHandle+0x8>)
900122de:	6818      	ldr	r0, [r3, #0]
	}
900122e0:	4770      	bx	lr
900122e2:	bf00      	nop
900122e4:	24039498 	.word	0x24039498

900122e8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
900122e8:	4b05      	ldr	r3, [pc, #20]	; (90012300 <xTaskGetSchedulerState+0x18>)
900122ea:	681b      	ldr	r3, [r3, #0]
900122ec:	b133      	cbz	r3, 900122fc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900122ee:	4b05      	ldr	r3, [pc, #20]	; (90012304 <xTaskGetSchedulerState+0x1c>)
900122f0:	6818      	ldr	r0, [r3, #0]
900122f2:	fab0 f080 	clz	r0, r0
900122f6:	0940      	lsrs	r0, r0, #5
900122f8:	0040      	lsls	r0, r0, #1
900122fa:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
900122fc:	2001      	movs	r0, #1
	}
900122fe:	4770      	bx	lr
90012300:	24039960 	.word	0x24039960
90012304:	2403990c 	.word	0x2403990c

90012308 <xTaskPriorityInherit>:
	{
90012308:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9001230a:	4604      	mov	r4, r0
	{
9001230c:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9001230e:	b1c8      	cbz	r0, 90012344 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90012310:	4d1d      	ldr	r5, [pc, #116]	; (90012388 <xTaskPriorityInherit+0x80>)
90012312:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012314:	682a      	ldr	r2, [r5, #0]
90012316:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012318:	4293      	cmp	r3, r2
9001231a:	d215      	bcs.n	90012348 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001231c:	6982      	ldr	r2, [r0, #24]
9001231e:	2a00      	cmp	r2, #0
90012320:	db04      	blt.n	9001232c <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012322:	682a      	ldr	r2, [r5, #0]
90012324:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90012326:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9001232a:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9001232c:	4e17      	ldr	r6, [pc, #92]	; (9001238c <xTaskPriorityInherit+0x84>)
9001232e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012332:	6962      	ldr	r2, [r4, #20]
90012334:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90012338:	429a      	cmp	r2, r3
9001233a:	d00e      	beq.n	9001235a <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9001233c:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9001233e:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012342:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90012344:	b002      	add	sp, #8
90012346:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90012348:	682b      	ldr	r3, [r5, #0]
9001234a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001234c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001234e:	4298      	cmp	r0, r3
90012350:	bf2c      	ite	cs
90012352:	2000      	movcs	r0, #0
90012354:	2001      	movcc	r0, #1
	}
90012356:	b002      	add	sp, #8
90012358:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001235a:	1d21      	adds	r1, r4, #4
9001235c:	4608      	mov	r0, r1
9001235e:	9101      	str	r1, [sp, #4]
90012360:	f7fd fee4 	bl	9001012c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012364:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90012366:	4b0a      	ldr	r3, [pc, #40]	; (90012390 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012368:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9001236a:	681a      	ldr	r2, [r3, #0]
9001236c:	9901      	ldr	r1, [sp, #4]
9001236e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90012370:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90012372:	d900      	bls.n	90012376 <xTaskPriorityInherit+0x6e>
90012374:	6018      	str	r0, [r3, #0]
90012376:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001237a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9001237e:	f7fd fead 	bl	900100dc <vListInsertEnd>
				xReturn = pdTRUE;
90012382:	2001      	movs	r0, #1
90012384:	e7de      	b.n	90012344 <xTaskPriorityInherit+0x3c>
90012386:	bf00      	nop
90012388:	24039498 	.word	0x24039498
9001238c:	240394a4 	.word	0x240394a4
90012390:	24039914 	.word	0x24039914

90012394 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90012394:	b318      	cbz	r0, 900123de <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90012396:	4b1f      	ldr	r3, [pc, #124]	; (90012414 <xTaskPriorityDisinherit+0x80>)
	{
90012398:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9001239a:	681c      	ldr	r4, [r3, #0]
	{
9001239c:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9001239e:	4284      	cmp	r4, r0
900123a0:	d008      	beq.n	900123b4 <xTaskPriorityDisinherit+0x20>
900123a2:	f04f 0350 	mov.w	r3, #80	; 0x50
900123a6:	f383 8811 	msr	BASEPRI, r3
900123aa:	f3bf 8f6f 	isb	sy
900123ae:	f3bf 8f4f 	dsb	sy
900123b2:	e7fe      	b.n	900123b2 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
900123b4:	6d23      	ldr	r3, [r4, #80]	; 0x50
900123b6:	b14b      	cbz	r3, 900123cc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900123b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
900123ba:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
900123bc:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
900123be:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
900123c0:	4291      	cmp	r1, r2
900123c2:	d000      	beq.n	900123c6 <xTaskPriorityDisinherit+0x32>
900123c4:	b16b      	cbz	r3, 900123e2 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
900123c6:	2000      	movs	r0, #0
	}
900123c8:	b002      	add	sp, #8
900123ca:	bd10      	pop	{r4, pc}
900123cc:	f04f 0350 	mov.w	r3, #80	; 0x50
900123d0:	f383 8811 	msr	BASEPRI, r3
900123d4:	f3bf 8f6f 	isb	sy
900123d8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
900123dc:	e7fe      	b.n	900123dc <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
900123de:	2000      	movs	r0, #0
	}
900123e0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900123e2:	1d21      	adds	r1, r4, #4
900123e4:	4608      	mov	r0, r1
900123e6:	9101      	str	r1, [sp, #4]
900123e8:	f7fd fea0 	bl	9001012c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900123ec:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
900123ee:	4b0a      	ldr	r3, [pc, #40]	; (90012418 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900123f0:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
900123f4:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
900123f6:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900123f8:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
900123fa:	681a      	ldr	r2, [r3, #0]
900123fc:	4290      	cmp	r0, r2
900123fe:	d900      	bls.n	90012402 <xTaskPriorityDisinherit+0x6e>
90012400:	6018      	str	r0, [r3, #0]
90012402:	4b06      	ldr	r3, [pc, #24]	; (9001241c <xTaskPriorityDisinherit+0x88>)
90012404:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012408:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9001240c:	f7fd fe66 	bl	900100dc <vListInsertEnd>
					xReturn = pdTRUE;
90012410:	2001      	movs	r0, #1
		return xReturn;
90012412:	e7d9      	b.n	900123c8 <xTaskPriorityDisinherit+0x34>
90012414:	24039498 	.word	0x24039498
90012418:	24039914 	.word	0x24039914
9001241c:	240394a4 	.word	0x240394a4

90012420 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90012420:	2800      	cmp	r0, #0
90012422:	d040      	beq.n	900124a6 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90012424:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90012426:	b530      	push	{r4, r5, lr}
90012428:	4604      	mov	r4, r0
9001242a:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9001242c:	b153      	cbz	r3, 90012444 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9001242e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90012430:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012432:	4281      	cmp	r1, r0
90012434:	bf38      	it	cc
90012436:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90012438:	2b01      	cmp	r3, #1
9001243a:	d101      	bne.n	90012440 <vTaskPriorityDisinheritAfterTimeout+0x20>
9001243c:	428a      	cmp	r2, r1
9001243e:	d10a      	bne.n	90012456 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90012440:	b003      	add	sp, #12
90012442:	bd30      	pop	{r4, r5, pc}
90012444:	f04f 0350 	mov.w	r3, #80	; 0x50
90012448:	f383 8811 	msr	BASEPRI, r3
9001244c:	f3bf 8f6f 	isb	sy
90012450:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90012454:	e7fe      	b.n	90012454 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90012456:	4b19      	ldr	r3, [pc, #100]	; (900124bc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90012458:	681b      	ldr	r3, [r3, #0]
9001245a:	42a3      	cmp	r3, r4
9001245c:	d024      	beq.n	900124a8 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9001245e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90012460:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90012462:	2b00      	cmp	r3, #0
90012464:	db02      	blt.n	9001246c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012466:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9001246a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9001246c:	4d14      	ldr	r5, [pc, #80]	; (900124c0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9001246e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90012472:	6961      	ldr	r1, [r4, #20]
90012474:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90012478:	4299      	cmp	r1, r3
9001247a:	d1e1      	bne.n	90012440 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001247c:	1d21      	adds	r1, r4, #4
9001247e:	4608      	mov	r0, r1
90012480:	9101      	str	r1, [sp, #4]
90012482:	f7fd fe53 	bl	9001012c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90012486:	4b0f      	ldr	r3, [pc, #60]	; (900124c4 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90012488:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9001248a:	681a      	ldr	r2, [r3, #0]
9001248c:	9901      	ldr	r1, [sp, #4]
9001248e:	4290      	cmp	r0, r2
90012490:	d900      	bls.n	90012494 <vTaskPriorityDisinheritAfterTimeout+0x74>
90012492:	6018      	str	r0, [r3, #0]
90012494:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90012498:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9001249c:	b003      	add	sp, #12
9001249e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
900124a2:	f7fd be1b 	b.w	900100dc <vListInsertEnd>
900124a6:	4770      	bx	lr
900124a8:	f04f 0350 	mov.w	r3, #80	; 0x50
900124ac:	f383 8811 	msr	BASEPRI, r3
900124b0:	f3bf 8f6f 	isb	sy
900124b4:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
900124b8:	e7fe      	b.n	900124b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
900124ba:	bf00      	nop
900124bc:	24039498 	.word	0x24039498
900124c0:	240394a4 	.word	0x240394a4
900124c4:	24039914 	.word	0x24039914

900124c8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
900124c8:	4b04      	ldr	r3, [pc, #16]	; (900124dc <pvTaskIncrementMutexHeldCount+0x14>)
900124ca:	681a      	ldr	r2, [r3, #0]
900124cc:	b11a      	cbz	r2, 900124d6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
900124ce:	6819      	ldr	r1, [r3, #0]
900124d0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
900124d2:	3201      	adds	r2, #1
900124d4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
900124d6:	6818      	ldr	r0, [r3, #0]
	}
900124d8:	4770      	bx	lr
900124da:	bf00      	nop
900124dc:	24039498 	.word	0x24039498

900124e0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
900124e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900124e4:	4e22      	ldr	r6, [pc, #136]	; (90012570 <prvSwitchTimerLists+0x90>)
900124e6:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
900124e8:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90012578 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
900124ec:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
900124f0:	e00d      	b.n	9001250e <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900124f2:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900124f4:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
900124f6:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900124f8:	1d25      	adds	r5, r4, #4
900124fa:	4628      	mov	r0, r5
900124fc:	f7fd fe16 	bl	9001012c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012500:	6a23      	ldr	r3, [r4, #32]
90012502:	4620      	mov	r0, r4
90012504:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012506:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9001250a:	075b      	lsls	r3, r3, #29
9001250c:	d40a      	bmi.n	90012524 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9001250e:	6833      	ldr	r3, [r6, #0]
90012510:	681a      	ldr	r2, [r3, #0]
90012512:	2a00      	cmp	r2, #0
90012514:	d1ed      	bne.n	900124f2 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90012516:	4a17      	ldr	r2, [pc, #92]	; (90012574 <prvSwitchTimerLists+0x94>)
90012518:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9001251a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9001251c:	6031      	str	r1, [r6, #0]
}
9001251e:	b005      	add	sp, #20
90012520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012524:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012526:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012528:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001252a:	429f      	cmp	r7, r3
9001252c:	d205      	bcs.n	9001253a <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001252e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90012530:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012532:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012534:	f7fd fde2 	bl	900100fc <vListInsert>
90012538:	e7e9      	b.n	9001250e <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9001253a:	f8d9 3000 	ldr.w	r3, [r9]
9001253e:	b16b      	cbz	r3, 9001255c <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012540:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012542:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90012546:	f7ff fecf 	bl	900122e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001254a:	2300      	movs	r3, #0
9001254c:	4669      	mov	r1, sp
9001254e:	f8d9 0000 	ldr.w	r0, [r9]
90012552:	461a      	mov	r2, r3
90012554:	f7fe f95e 	bl	90010814 <xQueueGenericSend>
				configASSERT( xResult );
90012558:	2800      	cmp	r0, #0
9001255a:	d1d8      	bne.n	9001250e <prvSwitchTimerLists+0x2e>
9001255c:	f04f 0350 	mov.w	r3, #80	; 0x50
90012560:	f383 8811 	msr	BASEPRI, r3
90012564:	f3bf 8f6f 	isb	sy
90012568:	f3bf 8f4f 	dsb	sy
9001256c:	e7fe      	b.n	9001256c <prvSwitchTimerLists+0x8c>
9001256e:	bf00      	nop
90012570:	24039994 	.word	0x24039994
90012574:	24039998 	.word	0x24039998
90012578:	24039ab8 	.word	0x24039ab8

9001257c <prvTimerTask>:
{
9001257c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012580:	4e9f      	ldr	r6, [pc, #636]	; (90012800 <prvTimerTask+0x284>)
90012582:	b089      	sub	sp, #36	; 0x24
90012584:	4d9f      	ldr	r5, [pc, #636]	; (90012804 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90012586:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9001258a:	4c9f      	ldr	r4, [pc, #636]	; (90012808 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9001258c:	6833      	ldr	r3, [r6, #0]
9001258e:	681f      	ldr	r7, [r3, #0]
90012590:	2f00      	cmp	r7, #0
90012592:	f000 80b2 	beq.w	900126fa <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90012596:	68db      	ldr	r3, [r3, #12]
90012598:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001259a:	f7ff fccf 	bl	90011f3c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9001259e:	f7ff fce5 	bl	90011f6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900125a2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900125a4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900125a6:	4290      	cmp	r0, r2
900125a8:	f0c0 80af 	bcc.w	9001270a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900125ac:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
900125ae:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
900125b0:	f200 80d0 	bhi.w	90012754 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
900125b4:	f7ff fcca 	bl	90011f4c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900125b8:	6832      	ldr	r2, [r6, #0]
900125ba:	68d2      	ldr	r2, [r2, #12]
900125bc:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900125c0:	f10b 0804 	add.w	r8, fp, #4
900125c4:	4640      	mov	r0, r8
900125c6:	f7fd fdb1 	bl	9001012c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900125ca:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
900125ce:	0741      	lsls	r1, r0, #29
900125d0:	f100 80d0 	bmi.w	90012774 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900125d4:	f020 0001 	bic.w	r0, r0, #1
900125d8:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900125dc:	f8db 3020 	ldr.w	r3, [fp, #32]
900125e0:	4658      	mov	r0, fp
900125e2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900125e4:	2200      	movs	r2, #0
900125e6:	4669      	mov	r1, sp
900125e8:	6820      	ldr	r0, [r4, #0]
900125ea:	f7fe fbff 	bl	90010dec <xQueueReceive>
900125ee:	2800      	cmp	r0, #0
900125f0:	d0cc      	beq.n	9001258c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900125f2:	9b00      	ldr	r3, [sp, #0]
900125f4:	2b00      	cmp	r3, #0
900125f6:	db77      	blt.n	900126e8 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900125f8:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900125fa:	697b      	ldr	r3, [r7, #20]
900125fc:	b113      	cbz	r3, 90012604 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900125fe:	1d38      	adds	r0, r7, #4
90012600:	f7fd fd94 	bl	9001012c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90012604:	f7ff fcb2 	bl	90011f6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012608:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9001260a:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9001260c:	4298      	cmp	r0, r3
9001260e:	f0c0 8083 	bcc.w	90012718 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90012612:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90012614:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90012618:	2b09      	cmp	r3, #9
9001261a:	d8e3      	bhi.n	900125e4 <prvTimerTask+0x68>
9001261c:	e8df f003 	tbb	[pc, r3]
90012620:	54050505 	.word	0x54050505
90012624:	05055b3e 	.word	0x05055b3e
90012628:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001262a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001262e:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012630:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012634:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012636:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9001263a:	9b01      	ldr	r3, [sp, #4]
9001263c:	1899      	adds	r1, r3, r2
9001263e:	bf2c      	ite	cs
90012640:	2001      	movcs	r0, #1
90012642:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90012644:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012646:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90012648:	f200 8086 	bhi.w	90012758 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001264c:	eba8 0303 	sub.w	r3, r8, r3
90012650:	429a      	cmp	r2, r3
90012652:	f200 80c0 	bhi.w	900127d6 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012656:	6a3b      	ldr	r3, [r7, #32]
90012658:	4638      	mov	r0, r7
9001265a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001265c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90012660:	075b      	lsls	r3, r3, #29
90012662:	d5bf      	bpl.n	900125e4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90012664:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90012666:	9901      	ldr	r1, [sp, #4]
90012668:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9001266a:	b172      	cbz	r2, 9001268a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001266c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9001266e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90012672:	2300      	movs	r3, #0
90012674:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90012676:	f7ff fe37 	bl	900122e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9001267a:	2300      	movs	r3, #0
9001267c:	a904      	add	r1, sp, #16
9001267e:	6820      	ldr	r0, [r4, #0]
90012680:	461a      	mov	r2, r3
90012682:	f7fe f8c7 	bl	90010814 <xQueueGenericSend>
							configASSERT( xResult );
90012686:	2800      	cmp	r0, #0
90012688:	d1ac      	bne.n	900125e4 <prvTimerTask+0x68>
9001268a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001268e:	f383 8811 	msr	BASEPRI, r3
90012692:	f3bf 8f6f 	isb	sy
90012696:	f3bf 8f4f 	dsb	sy
9001269a:	e7fe      	b.n	9001269a <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001269c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900126a0:	f043 0301 	orr.w	r3, r3, #1
900126a4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
900126a8:	9b01      	ldr	r3, [sp, #4]
900126aa:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900126ac:	2b00      	cmp	r3, #0
900126ae:	f000 809e 	beq.w	900127ee <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
900126b2:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900126b4:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900126b6:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
900126b8:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900126ba:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900126bc:	d856      	bhi.n	9001276c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900126be:	4b53      	ldr	r3, [pc, #332]	; (9001280c <prvTimerTask+0x290>)
900126c0:	6818      	ldr	r0, [r3, #0]
900126c2:	f7fd fd1b 	bl	900100fc <vListInsert>
	return xProcessTimerNow;
900126c6:	e78d      	b.n	900125e4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900126c8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900126cc:	f023 0301 	bic.w	r3, r3, #1
900126d0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
900126d4:	e786      	b.n	900125e4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900126d6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
900126da:	079a      	lsls	r2, r3, #30
900126dc:	d572      	bpl.n	900127c4 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900126de:	f023 0301 	bic.w	r3, r3, #1
900126e2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
900126e6:	e77d      	b.n	900125e4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900126e8:	9b01      	ldr	r3, [sp, #4]
900126ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
900126ee:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900126f0:	9b00      	ldr	r3, [sp, #0]
900126f2:	2b00      	cmp	r3, #0
900126f4:	f6ff af76 	blt.w	900125e4 <prvTimerTask+0x68>
900126f8:	e77e      	b.n	900125f8 <prvTimerTask+0x7c>
	vTaskSuspendAll();
900126fa:	f7ff fc1f 	bl	90011f3c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900126fe:	f7ff fc35 	bl	90011f6c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012702:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012704:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90012706:	4282      	cmp	r2, r0
90012708:	d909      	bls.n	9001271e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9001270a:	f7ff fee9 	bl	900124e0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9001270e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90012712:	f7ff fc1b 	bl	90011f4c <xTaskResumeAll>
90012716:	e765      	b.n	900125e4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90012718:	f7ff fee2 	bl	900124e0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9001271c:	e779      	b.n	90012612 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9001271e:	4b3b      	ldr	r3, [pc, #236]	; (9001280c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90012720:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90012724:	681a      	ldr	r2, [r3, #0]
90012726:	6812      	ldr	r2, [r2, #0]
90012728:	fab2 f282 	clz	r2, r2
9001272c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9001272e:	eba7 010a 	sub.w	r1, r7, sl
90012732:	6820      	ldr	r0, [r4, #0]
90012734:	f7fe ff4e 	bl	900115d4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90012738:	f7ff fc08 	bl	90011f4c <xTaskResumeAll>
9001273c:	2800      	cmp	r0, #0
9001273e:	f47f af51 	bne.w	900125e4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90012742:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90012746:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9001274a:	f3bf 8f4f 	dsb	sy
9001274e:	f3bf 8f6f 	isb	sy
90012752:	e747      	b.n	900125e4 <prvTimerTask+0x68>
90012754:	2200      	movs	r2, #0
90012756:	e7ea      	b.n	9001272e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90012758:	4543      	cmp	r3, r8
9001275a:	d902      	bls.n	90012762 <prvTimerTask+0x1e6>
9001275c:	2800      	cmp	r0, #0
9001275e:	f43f af7a 	beq.w	90012656 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012762:	1d39      	adds	r1, r7, #4
90012764:	6830      	ldr	r0, [r6, #0]
90012766:	f7fd fcc9 	bl	900100fc <vListInsert>
	return xProcessTimerNow;
9001276a:	e73b      	b.n	900125e4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001276c:	6830      	ldr	r0, [r6, #0]
9001276e:	f7fd fcc5 	bl	900100fc <vListInsert>
90012772:	e737      	b.n	900125e4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012774:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012778:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9001277c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9001277e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012780:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90012784:	d322      	bcc.n	900127cc <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012786:	ebaa 0307 	sub.w	r3, sl, r7
9001278a:	429a      	cmp	r2, r3
9001278c:	d829      	bhi.n	900127e2 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9001278e:	6823      	ldr	r3, [r4, #0]
90012790:	b17b      	cbz	r3, 900127b2 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90012792:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012794:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012796:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9001279a:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001279c:	f7ff fda4 	bl	900122e8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
900127a0:	2300      	movs	r3, #0
900127a2:	a904      	add	r1, sp, #16
900127a4:	6820      	ldr	r0, [r4, #0]
900127a6:	461a      	mov	r2, r3
900127a8:	f7fe f834 	bl	90010814 <xQueueGenericSend>
			configASSERT( xResult );
900127ac:	2800      	cmp	r0, #0
900127ae:	f47f af15 	bne.w	900125dc <prvTimerTask+0x60>
900127b2:	f04f 0350 	mov.w	r3, #80	; 0x50
900127b6:	f383 8811 	msr	BASEPRI, r3
900127ba:	f3bf 8f6f 	isb	sy
900127be:	f3bf 8f4f 	dsb	sy
900127c2:	e7fe      	b.n	900127c2 <prvTimerTask+0x246>
							vPortFree( pxTimer );
900127c4:	4638      	mov	r0, r7
900127c6:	f7fd fc15 	bl	9000fff4 <vPortFree>
900127ca:	e70b      	b.n	900125e4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900127cc:	4641      	mov	r1, r8
900127ce:	6830      	ldr	r0, [r6, #0]
900127d0:	f7fd fc94 	bl	900100fc <vListInsert>
	return xProcessTimerNow;
900127d4:	e702      	b.n	900125dc <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900127d6:	4b0d      	ldr	r3, [pc, #52]	; (9001280c <prvTimerTask+0x290>)
900127d8:	1d39      	adds	r1, r7, #4
900127da:	6818      	ldr	r0, [r3, #0]
900127dc:	f7fd fc8e 	bl	900100fc <vListInsert>
	return xProcessTimerNow;
900127e0:	e700      	b.n	900125e4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900127e2:	4b0a      	ldr	r3, [pc, #40]	; (9001280c <prvTimerTask+0x290>)
900127e4:	4641      	mov	r1, r8
900127e6:	6818      	ldr	r0, [r3, #0]
900127e8:	f7fd fc88 	bl	900100fc <vListInsert>
	return xProcessTimerNow;
900127ec:	e6f6      	b.n	900125dc <prvTimerTask+0x60>
900127ee:	f04f 0350 	mov.w	r3, #80	; 0x50
900127f2:	f383 8811 	msr	BASEPRI, r3
900127f6:	f3bf 8f6f 	isb	sy
900127fa:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900127fe:	e7fe      	b.n	900127fe <prvTimerTask+0x282>
90012800:	24039994 	.word	0x24039994
90012804:	24039a64 	.word	0x24039a64
90012808:	24039ab8 	.word	0x24039ab8
9001280c:	24039998 	.word	0x24039998

90012810 <xTimerCreateTimerTask>:
{
90012810:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90012812:	4c23      	ldr	r4, [pc, #140]	; (900128a0 <xTimerCreateTimerTask+0x90>)
{
90012814:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90012816:	f7fd fd05 	bl	90010224 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001281a:	6825      	ldr	r5, [r4, #0]
9001281c:	b335      	cbz	r5, 9001286c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9001281e:	f7fd fd23 	bl	90010268 <vPortExitCritical>
	if( xTimerQueue != NULL )
90012822:	6823      	ldr	r3, [r4, #0]
90012824:	b1cb      	cbz	r3, 9001285a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90012826:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012828:	aa07      	add	r2, sp, #28
9001282a:	a906      	add	r1, sp, #24
9001282c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001282e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90012830:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012834:	f7fd fb10 	bl	9000fe58 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90012838:	4623      	mov	r3, r4
9001283a:	9a07      	ldr	r2, [sp, #28]
9001283c:	9500      	str	r5, [sp, #0]
9001283e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90012842:	e9cd 1001 	strd	r1, r0, [sp, #4]
90012846:	4917      	ldr	r1, [pc, #92]	; (900128a4 <xTimerCreateTimerTask+0x94>)
90012848:	4817      	ldr	r0, [pc, #92]	; (900128a8 <xTimerCreateTimerTask+0x98>)
9001284a:	f7ff f93f 	bl	90011acc <xTaskCreateStatic>
9001284e:	4b17      	ldr	r3, [pc, #92]	; (900128ac <xTimerCreateTimerTask+0x9c>)
90012850:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90012852:	b110      	cbz	r0, 9001285a <xTimerCreateTimerTask+0x4a>
}
90012854:	2001      	movs	r0, #1
90012856:	b009      	add	sp, #36	; 0x24
90012858:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001285a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001285e:	f383 8811 	msr	BASEPRI, r3
90012862:	f3bf 8f6f 	isb	sy
90012866:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001286a:	e7fe      	b.n	9001286a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9001286c:	4f10      	ldr	r7, [pc, #64]	; (900128b0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9001286e:	4e11      	ldr	r6, [pc, #68]	; (900128b4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90012870:	4638      	mov	r0, r7
90012872:	f7fd fc23 	bl	900100bc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90012876:	4630      	mov	r0, r6
90012878:	f7fd fc20 	bl	900100bc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9001287c:	4a0e      	ldr	r2, [pc, #56]	; (900128b8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001287e:	9500      	str	r5, [sp, #0]
90012880:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90012882:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012884:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90012886:	4a0d      	ldr	r2, [pc, #52]	; (900128bc <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012888:	4b0d      	ldr	r3, [pc, #52]	; (900128c0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001288a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001288c:	4a0d      	ldr	r2, [pc, #52]	; (900128c4 <xTimerCreateTimerTask+0xb4>)
9001288e:	f7fd fe6b 	bl	90010568 <xQueueGenericCreateStatic>
90012892:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90012894:	2800      	cmp	r0, #0
90012896:	d0c2      	beq.n	9001281e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
90012898:	490b      	ldr	r1, [pc, #44]	; (900128c8 <xTimerCreateTimerTask+0xb8>)
9001289a:	f7fe fe73 	bl	90011584 <vQueueAddToRegistry>
9001289e:	e7be      	b.n	9001281e <xTimerCreateTimerTask+0xe>
900128a0:	24039ab8 	.word	0x24039ab8
900128a4:	9002d4ec 	.word	0x9002d4ec
900128a8:	9001257d 	.word	0x9001257d
900128ac:	24039abc 	.word	0x24039abc
900128b0:	24039a3c 	.word	0x24039a3c
900128b4:	24039a50 	.word	0x24039a50
900128b8:	24039994 	.word	0x24039994
900128bc:	24039998 	.word	0x24039998
900128c0:	24039a68 	.word	0x24039a68
900128c4:	2403999c 	.word	0x2403999c
900128c8:	9002d4e4 	.word	0x9002d4e4

900128cc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900128cc:	8880      	ldrh	r0, [r0, #4]
900128ce:	4770      	bx	lr

900128d0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900128d0:	b570      	push	{r4, r5, r6, lr}
900128d2:	6803      	ldr	r3, [r0, #0]
900128d4:	460c      	mov	r4, r1
900128d6:	2100      	movs	r1, #0
900128d8:	4605      	mov	r5, r0
900128da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900128dc:	4798      	blx	r3
900128de:	4606      	mov	r6, r0
900128e0:	682b      	ldr	r3, [r5, #0]
900128e2:	4628      	mov	r0, r5
900128e4:	1ba4      	subs	r4, r4, r6
900128e6:	6a1b      	ldr	r3, [r3, #32]
900128e8:	b2a4      	uxth	r4, r4
900128ea:	4798      	blx	r3
900128ec:	fbb4 f0f0 	udiv	r0, r4, r0
900128f0:	bd70      	pop	{r4, r5, r6, pc}

900128f2 <_ZN8touchgfx17AbstractPartition5clearEv>:
900128f2:	2300      	movs	r3, #0
900128f4:	8083      	strh	r3, [r0, #4]
900128f6:	4770      	bx	lr

900128f8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
900128f8:	b510      	push	{r4, lr}
900128fa:	6803      	ldr	r3, [r0, #0]
900128fc:	4604      	mov	r4, r0
900128fe:	8881      	ldrh	r1, [r0, #4]
90012900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012902:	4798      	blx	r3
90012904:	88a3      	ldrh	r3, [r4, #4]
90012906:	3301      	adds	r3, #1
90012908:	80a3      	strh	r3, [r4, #4]
9001290a:	bd10      	pop	{r4, pc}

9001290c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9001290c:	6803      	ldr	r3, [r0, #0]
9001290e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90012910:	4718      	bx	r3

90012912 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90012912:	4770      	bx	lr

90012914 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90012914:	4a02      	ldr	r2, [pc, #8]	; (90012920 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90012916:	6002      	str	r2, [r0, #0]
90012918:	2200      	movs	r2, #0
9001291a:	8082      	strh	r2, [r0, #4]
9001291c:	4770      	bx	lr
9001291e:	bf00      	nop
90012920:	9002d4fc 	.word	0x9002d4fc

90012924 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90012924:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012926:	2000      	movs	r0, #0
90012928:	b12b      	cbz	r3, 90012936 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001292a:	b920      	cbnz	r0, 90012936 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001292c:	1a5a      	subs	r2, r3, r1
9001292e:	699b      	ldr	r3, [r3, #24]
90012930:	4250      	negs	r0, r2
90012932:	4150      	adcs	r0, r2
90012934:	e7f8      	b.n	90012928 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90012936:	4770      	bx	lr

90012938 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90012938:	2300      	movs	r3, #0
9001293a:	6148      	str	r0, [r1, #20]
9001293c:	618b      	str	r3, [r1, #24]
9001293e:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012940:	b913      	cbnz	r3, 90012948 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90012942:	6281      	str	r1, [r0, #40]	; 0x28
90012944:	4770      	bx	lr
90012946:	4613      	mov	r3, r2
90012948:	699a      	ldr	r2, [r3, #24]
9001294a:	2a00      	cmp	r2, #0
9001294c:	d1fb      	bne.n	90012946 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001294e:	6199      	str	r1, [r3, #24]
90012950:	4770      	bx	lr

90012952 <_ZN8touchgfx9Container9removeAllEv>:
90012952:	2200      	movs	r2, #0
90012954:	6a83      	ldr	r3, [r0, #40]	; 0x28
90012956:	b123      	cbz	r3, 90012962 <_ZN8touchgfx9Container9removeAllEv+0x10>
90012958:	6999      	ldr	r1, [r3, #24]
9001295a:	6281      	str	r1, [r0, #40]	; 0x28
9001295c:	e9c3 2205 	strd	r2, r2, [r3, #20]
90012960:	e7f8      	b.n	90012954 <_ZN8touchgfx9Container9removeAllEv+0x2>
90012962:	4770      	bx	lr

90012964 <_ZN8touchgfx9Container6unlinkEv>:
90012964:	2300      	movs	r3, #0
90012966:	6283      	str	r3, [r0, #40]	; 0x28
90012968:	4770      	bx	lr

9001296a <_ZNK8touchgfx9Container12getSolidRectEv>:
9001296a:	2200      	movs	r2, #0
9001296c:	8002      	strh	r2, [r0, #0]
9001296e:	8042      	strh	r2, [r0, #2]
90012970:	8082      	strh	r2, [r0, #4]
90012972:	80c2      	strh	r2, [r0, #6]
90012974:	4770      	bx	lr

90012976 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90012976:	b570      	push	{r4, r5, r6, lr}
90012978:	460d      	mov	r5, r1
9001297a:	4616      	mov	r6, r2
9001297c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001297e:	b13c      	cbz	r4, 90012990 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90012980:	6823      	ldr	r3, [r4, #0]
90012982:	4620      	mov	r0, r4
90012984:	4632      	mov	r2, r6
90012986:	4629      	mov	r1, r5
90012988:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001298a:	4798      	blx	r3
9001298c:	69a4      	ldr	r4, [r4, #24]
9001298e:	e7f6      	b.n	9001297e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90012990:	bd70      	pop	{r4, r5, r6, pc}

90012992 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90012992:	b538      	push	{r3, r4, r5, lr}
90012994:	460d      	mov	r5, r1
90012996:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012998:	b134      	cbz	r4, 900129a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001299a:	682b      	ldr	r3, [r5, #0]
9001299c:	4621      	mov	r1, r4
9001299e:	4628      	mov	r0, r5
900129a0:	689b      	ldr	r3, [r3, #8]
900129a2:	4798      	blx	r3
900129a4:	69a4      	ldr	r4, [r4, #24]
900129a6:	e7f7      	b.n	90012998 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900129a8:	bd38      	pop	{r3, r4, r5, pc}

900129aa <_ZN8touchgfx9ContainerD1Ev>:
900129aa:	4770      	bx	lr

900129ac <_ZN8touchgfx9ContainerD0Ev>:
900129ac:	b510      	push	{r4, lr}
900129ae:	4604      	mov	r4, r0
900129b0:	212c      	movs	r1, #44	; 0x2c
900129b2:	f016 fd57 	bl	90029464 <_ZdlPvj>
900129b6:	4620      	mov	r0, r4
900129b8:	bd10      	pop	{r4, pc}

900129ba <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900129ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
900129bc:	b19b      	cbz	r3, 900129e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900129be:	428b      	cmp	r3, r1
900129c0:	d109      	bne.n	900129d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900129c2:	699a      	ldr	r2, [r3, #24]
900129c4:	2100      	movs	r1, #0
900129c6:	6159      	str	r1, [r3, #20]
900129c8:	6282      	str	r2, [r0, #40]	; 0x28
900129ca:	b902      	cbnz	r2, 900129ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900129cc:	4770      	bx	lr
900129ce:	6199      	str	r1, [r3, #24]
900129d0:	4770      	bx	lr
900129d2:	4613      	mov	r3, r2
900129d4:	b13a      	cbz	r2, 900129e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900129d6:	699a      	ldr	r2, [r3, #24]
900129d8:	428a      	cmp	r2, r1
900129da:	d1fa      	bne.n	900129d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900129dc:	698a      	ldr	r2, [r1, #24]
900129de:	619a      	str	r2, [r3, #24]
900129e0:	2300      	movs	r3, #0
900129e2:	e9c1 3305 	strd	r3, r3, [r1, #20]
900129e6:	4770      	bx	lr

900129e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900129e8:	b410      	push	{r4}
900129ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
900129ec:	4604      	mov	r4, r0
900129ee:	b92b      	cbnz	r3, 900129fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
900129f0:	6803      	ldr	r3, [r0, #0]
900129f2:	4611      	mov	r1, r2
900129f4:	f85d 4b04 	ldr.w	r4, [sp], #4
900129f8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900129fa:	4718      	bx	r3
900129fc:	b941      	cbnz	r1, 90012a10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
900129fe:	6193      	str	r3, [r2, #24]
90012a00:	6282      	str	r2, [r0, #40]	; 0x28
90012a02:	6154      	str	r4, [r2, #20]
90012a04:	f85d 4b04 	ldr.w	r4, [sp], #4
90012a08:	4770      	bx	lr
90012a0a:	4603      	mov	r3, r0
90012a0c:	2800      	cmp	r0, #0
90012a0e:	d0f9      	beq.n	90012a04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90012a10:	4299      	cmp	r1, r3
90012a12:	6998      	ldr	r0, [r3, #24]
90012a14:	d1f9      	bne.n	90012a0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90012a16:	6190      	str	r0, [r2, #24]
90012a18:	618a      	str	r2, [r1, #24]
90012a1a:	e7f2      	b.n	90012a02 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90012a1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90012a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012a20:	461f      	mov	r7, r3
90012a22:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90012a26:	460d      	mov	r5, r1
90012a28:	4616      	mov	r6, r2
90012a2a:	b103      	cbz	r3, 90012a2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90012a2c:	6038      	str	r0, [r7, #0]
90012a2e:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012a30:	b314      	cbz	r4, 90012a78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90012a32:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012a36:	b1eb      	cbz	r3, 90012a74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012a38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90012a3c:	428d      	cmp	r5, r1
90012a3e:	db19      	blt.n	90012a74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012a40:	b289      	uxth	r1, r1
90012a42:	8923      	ldrh	r3, [r4, #8]
90012a44:	440b      	add	r3, r1
90012a46:	b21b      	sxth	r3, r3
90012a48:	429d      	cmp	r5, r3
90012a4a:	da13      	bge.n	90012a74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012a4c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90012a50:	4296      	cmp	r6, r2
90012a52:	db0f      	blt.n	90012a74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012a54:	b292      	uxth	r2, r2
90012a56:	8963      	ldrh	r3, [r4, #10]
90012a58:	4413      	add	r3, r2
90012a5a:	b21b      	sxth	r3, r3
90012a5c:	429e      	cmp	r6, r3
90012a5e:	da09      	bge.n	90012a74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90012a60:	6823      	ldr	r3, [r4, #0]
90012a62:	1ab2      	subs	r2, r6, r2
90012a64:	1a69      	subs	r1, r5, r1
90012a66:	4620      	mov	r0, r4
90012a68:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
90012a6c:	b212      	sxth	r2, r2
90012a6e:	463b      	mov	r3, r7
90012a70:	b209      	sxth	r1, r1
90012a72:	47c0      	blx	r8
90012a74:	69a4      	ldr	r4, [r4, #24]
90012a76:	e7db      	b.n	90012a30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90012a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012a7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90012a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012a80:	4c6d      	ldr	r4, [pc, #436]	; (90012c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90012a82:	b0a1      	sub	sp, #132	; 0x84
90012a84:	4606      	mov	r6, r0
90012a86:	6824      	ldr	r4, [r4, #0]
90012a88:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90012a8a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
90012a8e:	2400      	movs	r4, #0
90012a90:	9303      	str	r3, [sp, #12]
90012a92:	802c      	strh	r4, [r5, #0]
90012a94:	9d2b      	ldr	r5, [sp, #172]	; 0xac
90012a96:	802c      	strh	r4, [r5, #0]
90012a98:	601c      	str	r4, [r3, #0]
90012a9a:	e9cd 1201 	strd	r1, r2, [sp, #4]
90012a9e:	f7ff ffbd 	bl	90012a1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90012aa2:	f1b9 0f03 	cmp.w	r9, #3
90012aa6:	f340 80c1 	ble.w	90012c2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90012aaa:	4631      	mov	r1, r6
90012aac:	a80c      	add	r0, sp, #48	; 0x30
90012aae:	f006 fcd7 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012ab2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
90012ab6:	9306      	str	r3, [sp, #24]
90012ab8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90012abc:	9307      	str	r3, [sp, #28]
90012abe:	9b03      	ldr	r3, [sp, #12]
90012ac0:	f8d3 a000 	ldr.w	sl, [r3]
90012ac4:	f1ba 0f00 	cmp.w	sl, #0
90012ac8:	f000 80b3 	beq.w	90012c32 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90012acc:	4651      	mov	r1, sl
90012ace:	a810      	add	r0, sp, #64	; 0x40
90012ad0:	f006 fcc6 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012ad4:	2002      	movs	r0, #2
90012ad6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
90012ada:	9b01      	ldr	r3, [sp, #4]
90012adc:	9a06      	ldr	r2, [sp, #24]
90012ade:	fb91 f1f0 	sdiv	r1, r1, r0
90012ae2:	189d      	adds	r5, r3, r2
90012ae4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
90012ae8:	9a07      	ldr	r2, [sp, #28]
90012aea:	4419      	add	r1, r3
90012aec:	9b02      	ldr	r3, [sp, #8]
90012aee:	4413      	add	r3, r2
90012af0:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90012af4:	1a6d      	subs	r5, r5, r1
90012af6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
90012afa:	fb92 f2f0 	sdiv	r2, r2, r0
90012afe:	440a      	add	r2, r1
90012b00:	1a9b      	subs	r3, r3, r2
90012b02:	435b      	muls	r3, r3
90012b04:	fb05 3505 	mla	r5, r5, r5, r3
90012b08:	4f4c      	ldr	r7, [pc, #304]	; (90012c3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90012b0a:	ac10      	add	r4, sp, #64	; 0x40
90012b0c:	f1b9 0f0c 	cmp.w	r9, #12
90012b10:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012b12:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012b14:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012b16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012b18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90012b1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90012b1c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90012b20:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012b24:	f04f 0303 	mov.w	r3, #3
90012b28:	bfd8      	it	le
90012b2a:	f109 32ff 	addle.w	r2, r9, #4294967295
90012b2e:	f04f 0400 	mov.w	r4, #0
90012b32:	f8cd 9000 	str.w	r9, [sp]
90012b36:	bfcc      	ite	gt
90012b38:	4698      	movgt	r8, r3
90012b3a:	fb92 f8f3 	sdivle	r8, r2, r3
90012b3e:	1c63      	adds	r3, r4, #1
90012b40:	aa10      	add	r2, sp, #64	; 0x40
90012b42:	f004 0401 	and.w	r4, r4, #1
90012b46:	f04f 0b00 	mov.w	fp, #0
90012b4a:	9308      	str	r3, [sp, #32]
90012b4c:	9b00      	ldr	r3, [sp, #0]
90012b4e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90012b52:	fb93 f3f8 	sdiv	r3, r3, r8
90012b56:	3404      	adds	r4, #4
90012b58:	b29b      	uxth	r3, r3
90012b5a:	9304      	str	r3, [sp, #16]
90012b5c:	9a04      	ldr	r2, [sp, #16]
90012b5e:	f854 3c04 	ldr.w	r3, [r4, #-4]
90012b62:	fb13 f302 	smulbb	r3, r3, r2
90012b66:	9a01      	ldr	r2, [sp, #4]
90012b68:	b29b      	uxth	r3, r3
90012b6a:	1899      	adds	r1, r3, r2
90012b6c:	9305      	str	r3, [sp, #20]
90012b6e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90012b72:	b209      	sxth	r1, r1
90012b74:	4299      	cmp	r1, r3
90012b76:	db4d      	blt.n	90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012b78:	8932      	ldrh	r2, [r6, #8]
90012b7a:	4413      	add	r3, r2
90012b7c:	b21b      	sxth	r3, r3
90012b7e:	4299      	cmp	r1, r3
90012b80:	da48      	bge.n	90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012b82:	9b04      	ldr	r3, [sp, #16]
90012b84:	6827      	ldr	r7, [r4, #0]
90012b86:	fb17 f703 	smulbb	r7, r7, r3
90012b8a:	9b02      	ldr	r3, [sp, #8]
90012b8c:	b2bf      	uxth	r7, r7
90012b8e:	18fa      	adds	r2, r7, r3
90012b90:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90012b94:	b212      	sxth	r2, r2
90012b96:	429a      	cmp	r2, r3
90012b98:	db3c      	blt.n	90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012b9a:	8970      	ldrh	r0, [r6, #10]
90012b9c:	4403      	add	r3, r0
90012b9e:	b21b      	sxth	r3, r3
90012ba0:	429a      	cmp	r2, r3
90012ba2:	da37      	bge.n	90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012ba4:	2300      	movs	r3, #0
90012ba6:	4630      	mov	r0, r6
90012ba8:	930b      	str	r3, [sp, #44]	; 0x2c
90012baa:	ab0b      	add	r3, sp, #44	; 0x2c
90012bac:	f7ff ff36 	bl	90012a1c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90012bb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90012bb2:	b37a      	cbz	r2, 90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012bb4:	4552      	cmp	r2, sl
90012bb6:	d02d      	beq.n	90012c14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90012bb8:	4611      	mov	r1, r2
90012bba:	a80e      	add	r0, sp, #56	; 0x38
90012bbc:	9209      	str	r2, [sp, #36]	; 0x24
90012bbe:	f006 fc4f 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012bc2:	f04f 0e02 	mov.w	lr, #2
90012bc6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90012bca:	9a06      	ldr	r2, [sp, #24]
90012bcc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90012bd0:	9b01      	ldr	r3, [sp, #4]
90012bd2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
90012bd6:	4413      	add	r3, r2
90012bd8:	9a07      	ldr	r2, [sp, #28]
90012bda:	fb91 f1fe 	sdiv	r1, r1, lr
90012bde:	fb9c fcfe 	sdiv	ip, ip, lr
90012be2:	4401      	add	r1, r0
90012be4:	1a58      	subs	r0, r3, r1
90012be6:	9b02      	ldr	r3, [sp, #8]
90012be8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90012bec:	4413      	add	r3, r2
90012bee:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012bf0:	448c      	add	ip, r1
90012bf2:	eba3 030c 	sub.w	r3, r3, ip
90012bf6:	435b      	muls	r3, r3
90012bf8:	fb00 3300 	mla	r3, r0, r0, r3
90012bfc:	42ab      	cmp	r3, r5
90012bfe:	d208      	bcs.n	90012c12 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90012c00:	990b      	ldr	r1, [sp, #44]	; 0x2c
90012c02:	461d      	mov	r5, r3
90012c04:	9803      	ldr	r0, [sp, #12]
90012c06:	6001      	str	r1, [r0, #0]
90012c08:	992a      	ldr	r1, [sp, #168]	; 0xa8
90012c0a:	9805      	ldr	r0, [sp, #20]
90012c0c:	8008      	strh	r0, [r1, #0]
90012c0e:	992b      	ldr	r1, [sp, #172]	; 0xac
90012c10:	800f      	strh	r7, [r1, #0]
90012c12:	4692      	mov	sl, r2
90012c14:	f10b 0b01 	add.w	fp, fp, #1
90012c18:	3408      	adds	r4, #8
90012c1a:	f1bb 0f04 	cmp.w	fp, #4
90012c1e:	d19d      	bne.n	90012b5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90012c20:	9b00      	ldr	r3, [sp, #0]
90012c22:	9c08      	ldr	r4, [sp, #32]
90012c24:	444b      	add	r3, r9
90012c26:	4544      	cmp	r4, r8
90012c28:	9300      	str	r3, [sp, #0]
90012c2a:	d188      	bne.n	90012b3e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90012c2c:	b021      	add	sp, #132	; 0x84
90012c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012c32:	f04f 35ff 	mov.w	r5, #4294967295
90012c36:	e767      	b.n	90012b08 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90012c38:	24039acc 	.word	0x24039acc
90012c3c:	9002a540 	.word	0x9002a540

90012c40 <_ZN8touchgfx4RectaNERKS0_>:
90012c40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90012c44:	f9b1 7000 	ldrsh.w	r7, [r1]
90012c48:	888c      	ldrh	r4, [r1, #4]
90012c4a:	f9b0 9000 	ldrsh.w	r9, [r0]
90012c4e:	443c      	add	r4, r7
90012c50:	b2a4      	uxth	r4, r4
90012c52:	fa0f f884 	sxth.w	r8, r4
90012c56:	45c1      	cmp	r9, r8
90012c58:	da2f      	bge.n	90012cba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012c5a:	8882      	ldrh	r2, [r0, #4]
90012c5c:	444a      	add	r2, r9
90012c5e:	b292      	uxth	r2, r2
90012c60:	fa0f fe82 	sxth.w	lr, r2
90012c64:	4577      	cmp	r7, lr
90012c66:	da28      	bge.n	90012cba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012c68:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90012c6c:	88cb      	ldrh	r3, [r1, #6]
90012c6e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90012c72:	442b      	add	r3, r5
90012c74:	b21b      	sxth	r3, r3
90012c76:	429e      	cmp	r6, r3
90012c78:	da1f      	bge.n	90012cba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012c7a:	88c3      	ldrh	r3, [r0, #6]
90012c7c:	4433      	add	r3, r6
90012c7e:	b29b      	uxth	r3, r3
90012c80:	fa0f fc83 	sxth.w	ip, r3
90012c84:	4565      	cmp	r5, ip
90012c86:	da18      	bge.n	90012cba <_ZN8touchgfx4RectaNERKS0_+0x7a>
90012c88:	454f      	cmp	r7, r9
90012c8a:	bfb8      	it	lt
90012c8c:	464f      	movlt	r7, r9
90012c8e:	42b5      	cmp	r5, r6
90012c90:	bfb8      	it	lt
90012c92:	4635      	movlt	r5, r6
90012c94:	45f0      	cmp	r8, lr
90012c96:	bfd8      	it	le
90012c98:	4622      	movle	r2, r4
90012c9a:	1bd2      	subs	r2, r2, r7
90012c9c:	8082      	strh	r2, [r0, #4]
90012c9e:	884a      	ldrh	r2, [r1, #2]
90012ca0:	88c9      	ldrh	r1, [r1, #6]
90012ca2:	8007      	strh	r7, [r0, #0]
90012ca4:	440a      	add	r2, r1
90012ca6:	8045      	strh	r5, [r0, #2]
90012ca8:	b292      	uxth	r2, r2
90012caa:	b211      	sxth	r1, r2
90012cac:	458c      	cmp	ip, r1
90012cae:	bfa8      	it	ge
90012cb0:	4613      	movge	r3, r2
90012cb2:	1b5b      	subs	r3, r3, r5
90012cb4:	80c3      	strh	r3, [r0, #6]
90012cb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012cba:	2300      	movs	r3, #0
90012cbc:	8003      	strh	r3, [r0, #0]
90012cbe:	8043      	strh	r3, [r0, #2]
90012cc0:	8083      	strh	r3, [r0, #4]
90012cc2:	80c3      	strh	r3, [r0, #6]
90012cc4:	e7f7      	b.n	90012cb6 <_ZN8touchgfx4RectaNERKS0_+0x76>

90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>:
90012cc6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90012cca:	2b00      	cmp	r3, #0
90012ccc:	dd06      	ble.n	90012cdc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90012cce:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90012cd2:	2800      	cmp	r0, #0
90012cd4:	bfcc      	ite	gt
90012cd6:	2000      	movgt	r0, #0
90012cd8:	2001      	movle	r0, #1
90012cda:	4770      	bx	lr
90012cdc:	2001      	movs	r0, #1
90012cde:	4770      	bx	lr

90012ce0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90012ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012ce4:	2300      	movs	r3, #0
90012ce6:	4604      	mov	r4, r0
90012ce8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90012cea:	8003      	strh	r3, [r0, #0]
90012cec:	8043      	strh	r3, [r0, #2]
90012cee:	8083      	strh	r3, [r0, #4]
90012cf0:	80c3      	strh	r3, [r0, #6]
90012cf2:	2d00      	cmp	r5, #0
90012cf4:	d040      	beq.n	90012d78 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90012cf6:	1d28      	adds	r0, r5, #4
90012cf8:	f7ff ffe5 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012cfc:	b988      	cbnz	r0, 90012d22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012cfe:	4620      	mov	r0, r4
90012d00:	f7ff ffe1 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012d04:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90012d08:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90012d0c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90012d10:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90012d14:	b138      	cbz	r0, 90012d26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90012d16:	8022      	strh	r2, [r4, #0]
90012d18:	8063      	strh	r3, [r4, #2]
90012d1a:	f8a4 e004 	strh.w	lr, [r4, #4]
90012d1e:	f8a4 c006 	strh.w	ip, [r4, #6]
90012d22:	69ad      	ldr	r5, [r5, #24]
90012d24:	e7e5      	b.n	90012cf2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90012d26:	f9b4 0000 	ldrsh.w	r0, [r4]
90012d2a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90012d2e:	4290      	cmp	r0, r2
90012d30:	4607      	mov	r7, r0
90012d32:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90012d36:	460e      	mov	r6, r1
90012d38:	bfa8      	it	ge
90012d3a:	4617      	movge	r7, r2
90012d3c:	4299      	cmp	r1, r3
90012d3e:	4472      	add	r2, lr
90012d40:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90012d44:	bfa8      	it	ge
90012d46:	461e      	movge	r6, r3
90012d48:	4440      	add	r0, r8
90012d4a:	4471      	add	r1, lr
90012d4c:	4463      	add	r3, ip
90012d4e:	b200      	sxth	r0, r0
90012d50:	8027      	strh	r7, [r4, #0]
90012d52:	b212      	sxth	r2, r2
90012d54:	8066      	strh	r6, [r4, #2]
90012d56:	b209      	sxth	r1, r1
90012d58:	b21b      	sxth	r3, r3
90012d5a:	4290      	cmp	r0, r2
90012d5c:	bfac      	ite	ge
90012d5e:	ebc7 0200 	rsbge	r2, r7, r0
90012d62:	ebc7 0202 	rsblt	r2, r7, r2
90012d66:	4299      	cmp	r1, r3
90012d68:	bfac      	ite	ge
90012d6a:	ebc6 0301 	rsbge	r3, r6, r1
90012d6e:	ebc6 0303 	rsblt	r3, r6, r3
90012d72:	80a2      	strh	r2, [r4, #4]
90012d74:	80e3      	strh	r3, [r4, #6]
90012d76:	e7d4      	b.n	90012d22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90012d78:	4620      	mov	r0, r4
90012d7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012d7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90012d7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90012d82:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012d86:	b383      	cbz	r3, 90012dea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012d88:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012d8a:	b374      	cbz	r4, 90012dea <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90012d8c:	f9b1 5000 	ldrsh.w	r5, [r1]
90012d90:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90012d94:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90012d98:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90012d9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012da0:	b303      	cbz	r3, 90012de4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012da2:	4668      	mov	r0, sp
90012da4:	1d21      	adds	r1, r4, #4
90012da6:	f8ad 5000 	strh.w	r5, [sp]
90012daa:	f8ad 6002 	strh.w	r6, [sp, #2]
90012dae:	f8ad 7004 	strh.w	r7, [sp, #4]
90012db2:	f8ad 8006 	strh.w	r8, [sp, #6]
90012db6:	f7ff ff43 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90012dba:	4668      	mov	r0, sp
90012dbc:	f7ff ff83 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012dc0:	b980      	cbnz	r0, 90012de4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90012dc2:	f8bd 3000 	ldrh.w	r3, [sp]
90012dc6:	4669      	mov	r1, sp
90012dc8:	88a2      	ldrh	r2, [r4, #4]
90012dca:	4620      	mov	r0, r4
90012dcc:	1a9b      	subs	r3, r3, r2
90012dce:	88e2      	ldrh	r2, [r4, #6]
90012dd0:	f8ad 3000 	strh.w	r3, [sp]
90012dd4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012dd8:	1a9b      	subs	r3, r3, r2
90012dda:	f8ad 3002 	strh.w	r3, [sp, #2]
90012dde:	6823      	ldr	r3, [r4, #0]
90012de0:	689b      	ldr	r3, [r3, #8]
90012de2:	4798      	blx	r3
90012de4:	69a4      	ldr	r4, [r4, #24]
90012de6:	2c00      	cmp	r4, #0
90012de8:	d1d8      	bne.n	90012d9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90012dea:	b002      	add	sp, #8
90012dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012df0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90012df0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012df2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90012df6:	460d      	mov	r5, r1
90012df8:	4616      	mov	r6, r2
90012dfa:	b323      	cbz	r3, 90012e46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012dfc:	6a84      	ldr	r4, [r0, #40]	; 0x28
90012dfe:	b314      	cbz	r4, 90012e46 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90012e00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90012e04:	b1eb      	cbz	r3, 90012e42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012e06:	6828      	ldr	r0, [r5, #0]
90012e08:	466b      	mov	r3, sp
90012e0a:	6869      	ldr	r1, [r5, #4]
90012e0c:	c303      	stmia	r3!, {r0, r1}
90012e0e:	4668      	mov	r0, sp
90012e10:	1d21      	adds	r1, r4, #4
90012e12:	f7ff ff15 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90012e16:	4668      	mov	r0, sp
90012e18:	f7ff ff55 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90012e1c:	b988      	cbnz	r0, 90012e42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90012e1e:	f8bd 3000 	ldrh.w	r3, [sp]
90012e22:	4669      	mov	r1, sp
90012e24:	88a2      	ldrh	r2, [r4, #4]
90012e26:	4620      	mov	r0, r4
90012e28:	1a9b      	subs	r3, r3, r2
90012e2a:	88e2      	ldrh	r2, [r4, #6]
90012e2c:	f8ad 3000 	strh.w	r3, [sp]
90012e30:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012e34:	1a9b      	subs	r3, r3, r2
90012e36:	4632      	mov	r2, r6
90012e38:	f8ad 3002 	strh.w	r3, [sp, #2]
90012e3c:	6823      	ldr	r3, [r4, #0]
90012e3e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90012e40:	4798      	blx	r3
90012e42:	69a4      	ldr	r4, [r4, #24]
90012e44:	e7db      	b.n	90012dfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90012e46:	b002      	add	sp, #8
90012e48:	bd70      	pop	{r4, r5, r6, pc}

90012e4a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90012e4a:	6803      	ldr	r3, [r0, #0]
90012e4c:	b513      	push	{r0, r1, r4, lr}
90012e4e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90012e52:	2300      	movs	r3, #0
90012e54:	e9cd 3300 	strd	r3, r3, [sp]
90012e58:	466b      	mov	r3, sp
90012e5a:	47a0      	blx	r4
90012e5c:	b002      	add	sp, #8
90012e5e:	bd10      	pop	{r4, pc}

90012e60 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90012e60:	2301      	movs	r3, #1
90012e62:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012e66:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012e6a:	4770      	bx	lr

90012e6c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90012e6c:	2301      	movs	r3, #1
90012e6e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90012e72:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90012e76:	4770      	bx	lr

90012e78 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90012e78:	6843      	ldr	r3, [r0, #4]
90012e7a:	2201      	movs	r2, #1
90012e7c:	725a      	strb	r2, [r3, #9]
90012e7e:	6840      	ldr	r0, [r0, #4]
90012e80:	6803      	ldr	r3, [r0, #0]
90012e82:	691b      	ldr	r3, [r3, #16]
90012e84:	4718      	bx	r3

90012e86 <_ZN8touchgfx3HAL8flushDMAEv>:
90012e86:	6840      	ldr	r0, [r0, #4]
90012e88:	6803      	ldr	r3, [r0, #0]
90012e8a:	689b      	ldr	r3, [r3, #8]
90012e8c:	4718      	bx	r3

90012e8e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90012e8e:	b530      	push	{r4, r5, lr}
90012e90:	b08b      	sub	sp, #44	; 0x2c
90012e92:	6804      	ldr	r4, [r0, #0]
90012e94:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90012e98:	9509      	str	r5, [sp, #36]	; 0x24
90012e9a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90012e9e:	9508      	str	r5, [sp, #32]
90012ea0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
90012ea4:	9507      	str	r5, [sp, #28]
90012ea6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90012eaa:	9506      	str	r5, [sp, #24]
90012eac:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90012eb0:	9505      	str	r5, [sp, #20]
90012eb2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
90012eb6:	9504      	str	r5, [sp, #16]
90012eb8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90012ebc:	9503      	str	r5, [sp, #12]
90012ebe:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
90012ec2:	9502      	str	r5, [sp, #8]
90012ec4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90012ec8:	e9cd 3500 	strd	r3, r5, [sp]
90012ecc:	4613      	mov	r3, r2
90012ece:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90012ed0:	2200      	movs	r2, #0
90012ed2:	47a0      	blx	r4
90012ed4:	b00b      	add	sp, #44	; 0x2c
90012ed6:	bd30      	pop	{r4, r5, pc}

90012ed8 <_ZN8touchgfx3HAL10beginFrameEv>:
90012ed8:	4b04      	ldr	r3, [pc, #16]	; (90012eec <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90012eda:	781b      	ldrb	r3, [r3, #0]
90012edc:	b123      	cbz	r3, 90012ee8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90012ede:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
90012ee2:	f080 0001 	eor.w	r0, r0, #1
90012ee6:	4770      	bx	lr
90012ee8:	2001      	movs	r0, #1
90012eea:	4770      	bx	lr
90012eec:	24039aca 	.word	0x24039aca

90012ef0 <_ZN8touchgfx3HAL8endFrameEv>:
90012ef0:	b510      	push	{r4, lr}
90012ef2:	4604      	mov	r4, r0
90012ef4:	6840      	ldr	r0, [r0, #4]
90012ef6:	6803      	ldr	r3, [r0, #0]
90012ef8:	689b      	ldr	r3, [r3, #8]
90012efa:	4798      	blx	r3
90012efc:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90012f00:	b113      	cbz	r3, 90012f08 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90012f02:	2301      	movs	r3, #1
90012f04:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90012f08:	bd10      	pop	{r4, pc}

90012f0a <_ZN8touchgfx3HAL10initializeEv>:
90012f0a:	b510      	push	{r4, lr}
90012f0c:	4604      	mov	r4, r0
90012f0e:	f7ee fc91 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90012f12:	f7ed faf5 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90012f16:	6860      	ldr	r0, [r4, #4]
90012f18:	6803      	ldr	r3, [r0, #0]
90012f1a:	68db      	ldr	r3, [r3, #12]
90012f1c:	4798      	blx	r3
90012f1e:	68e0      	ldr	r0, [r4, #12]
90012f20:	6803      	ldr	r3, [r0, #0]
90012f22:	689b      	ldr	r3, [r3, #8]
90012f24:	4798      	blx	r3
90012f26:	6823      	ldr	r3, [r4, #0]
90012f28:	4620      	mov	r0, r4
90012f2a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90012f2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012f30:	4718      	bx	r3
	...

90012f34 <_ZN8touchgfx3HAL4tickEv>:
90012f34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012f36:	6803      	ldr	r3, [r0, #0]
90012f38:	4604      	mov	r4, r0
90012f3a:	4d5b      	ldr	r5, [pc, #364]	; (900130a8 <_ZN8touchgfx3HAL4tickEv+0x174>)
90012f3c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90012f40:	4798      	blx	r3
90012f42:	2800      	cmp	r0, #0
90012f44:	f000 8095 	beq.w	90013072 <_ZN8touchgfx3HAL4tickEv+0x13e>
90012f48:	2001      	movs	r0, #1
90012f4a:	2600      	movs	r6, #0
90012f4c:	f7ed fb02 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90012f50:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90012f54:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90012f58:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90012f5c:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90012f60:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90012f64:	b133      	cbz	r3, 90012f74 <_ZN8touchgfx3HAL4tickEv+0x40>
90012f66:	6823      	ldr	r3, [r4, #0]
90012f68:	4620      	mov	r0, r4
90012f6a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90012f6e:	4798      	blx	r3
90012f70:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90012f74:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90012f78:	2601      	movs	r6, #1
90012f7a:	6862      	ldr	r2, [r4, #4]
90012f7c:	f083 0301 	eor.w	r3, r3, #1
90012f80:	702e      	strb	r6, [r5, #0]
90012f82:	7253      	strb	r3, [r2, #9]
90012f84:	f005 f930 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90012f88:	6803      	ldr	r3, [r0, #0]
90012f8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90012f8c:	4798      	blx	r3
90012f8e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90012f92:	b90b      	cbnz	r3, 90012f98 <_ZN8touchgfx3HAL4tickEv+0x64>
90012f94:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90012f98:	f005 f926 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90012f9c:	6803      	ldr	r3, [r0, #0]
90012f9e:	695b      	ldr	r3, [r3, #20]
90012fa0:	4798      	blx	r3
90012fa2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90012fa4:	6803      	ldr	r3, [r0, #0]
90012fa6:	691b      	ldr	r3, [r3, #16]
90012fa8:	4798      	blx	r3
90012faa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90012fae:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
90012fb2:	3b01      	subs	r3, #1
90012fb4:	b2db      	uxtb	r3, r3
90012fb6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90012fba:	b10a      	cbz	r2, 90012fc0 <_ZN8touchgfx3HAL4tickEv+0x8c>
90012fbc:	2b00      	cmp	r3, #0
90012fbe:	d1eb      	bne.n	90012f98 <_ZN8touchgfx3HAL4tickEv+0x64>
90012fc0:	4a3a      	ldr	r2, [pc, #232]	; (900130ac <_ZN8touchgfx3HAL4tickEv+0x178>)
90012fc2:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
90012fc6:	7813      	ldrb	r3, [r2, #0]
90012fc8:	3301      	adds	r3, #1
90012fca:	b25b      	sxtb	r3, r3
90012fcc:	4299      	cmp	r1, r3
90012fce:	7013      	strb	r3, [r2, #0]
90012fd0:	dc10      	bgt.n	90012ff4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90012fd2:	2300      	movs	r3, #0
90012fd4:	68e0      	ldr	r0, [r4, #12]
90012fd6:	a902      	add	r1, sp, #8
90012fd8:	7013      	strb	r3, [r2, #0]
90012fda:	aa03      	add	r2, sp, #12
90012fdc:	6803      	ldr	r3, [r0, #0]
90012fde:	68db      	ldr	r3, [r3, #12]
90012fe0:	4798      	blx	r3
90012fe2:	6823      	ldr	r3, [r4, #0]
90012fe4:	2800      	cmp	r0, #0
90012fe6:	d050      	beq.n	9001308a <_ZN8touchgfx3HAL4tickEv+0x156>
90012fe8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90012fec:	4620      	mov	r0, r4
90012fee:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90012ff2:	4798      	blx	r3
90012ff4:	2300      	movs	r3, #0
90012ff6:	6960      	ldr	r0, [r4, #20]
90012ff8:	f88d 3007 	strb.w	r3, [sp, #7]
90012ffc:	b158      	cbz	r0, 90013016 <_ZN8touchgfx3HAL4tickEv+0xe2>
90012ffe:	6803      	ldr	r3, [r0, #0]
90013000:	f10d 0107 	add.w	r1, sp, #7
90013004:	68db      	ldr	r3, [r3, #12]
90013006:	4798      	blx	r3
90013008:	b128      	cbz	r0, 90013016 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001300a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001300c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90013010:	6803      	ldr	r3, [r0, #0]
90013012:	68db      	ldr	r3, [r3, #12]
90013014:	4798      	blx	r3
90013016:	f104 001c 	add.w	r0, r4, #28
9001301a:	f015 fe27 	bl	90028c6c <_ZN8touchgfx8Gestures4tickEv>
9001301e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90013022:	b30b      	cbz	r3, 90013068 <_ZN8touchgfx3HAL4tickEv+0x134>
90013024:	6920      	ldr	r0, [r4, #16]
90013026:	6803      	ldr	r3, [r0, #0]
90013028:	691b      	ldr	r3, [r3, #16]
9001302a:	4798      	blx	r3
9001302c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001302e:	4606      	mov	r6, r0
90013030:	b903      	cbnz	r3, 90013034 <_ZN8touchgfx3HAL4tickEv+0x100>
90013032:	6760      	str	r0, [r4, #116]	; 0x74
90013034:	6f63      	ldr	r3, [r4, #116]	; 0x74
90013036:	4a1e      	ldr	r2, [pc, #120]	; (900130b0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90013038:	1af3      	subs	r3, r6, r3
9001303a:	4293      	cmp	r3, r2
9001303c:	d914      	bls.n	90013068 <_ZN8touchgfx3HAL4tickEv+0x134>
9001303e:	6920      	ldr	r0, [r4, #16]
90013040:	6803      	ldr	r3, [r0, #0]
90013042:	699b      	ldr	r3, [r3, #24]
90013044:	4798      	blx	r3
90013046:	6f63      	ldr	r3, [r4, #116]	; 0x74
90013048:	2264      	movs	r2, #100	; 0x64
9001304a:	1af3      	subs	r3, r6, r3
9001304c:	fbb3 f3f2 	udiv	r3, r3, r2
90013050:	fbb0 f0f3 	udiv	r0, r0, r3
90013054:	2800      	cmp	r0, #0
90013056:	dc1d      	bgt.n	90013094 <_ZN8touchgfx3HAL4tickEv+0x160>
90013058:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
9001305c:	6920      	ldr	r0, [r4, #16]
9001305e:	2100      	movs	r1, #0
90013060:	6803      	ldr	r3, [r0, #0]
90013062:	69db      	ldr	r3, [r3, #28]
90013064:	4798      	blx	r3
90013066:	6766      	str	r6, [r4, #116]	; 0x74
90013068:	f005 f8be 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
9001306c:	6803      	ldr	r3, [r0, #0]
9001306e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013070:	4798      	blx	r3
90013072:	6823      	ldr	r3, [r4, #0]
90013074:	4620      	mov	r0, r4
90013076:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
9001307a:	4798      	blx	r3
9001307c:	2001      	movs	r0, #1
9001307e:	f7ed fa9d 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013082:	2300      	movs	r3, #0
90013084:	702b      	strb	r3, [r5, #0]
90013086:	b004      	add	sp, #16
90013088:	bd70      	pop	{r4, r5, r6, pc}
9001308a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001308e:	4620      	mov	r0, r4
90013090:	4798      	blx	r3
90013092:	e7af      	b.n	90012ff4 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013094:	2863      	cmp	r0, #99	; 0x63
90013096:	bfcb      	itete	gt
90013098:	2300      	movgt	r3, #0
9001309a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
9001309e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
900130a2:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
900130a6:	e7d9      	b.n	9001305c <_ZN8touchgfx3HAL4tickEv+0x128>
900130a8:	24039ad0 	.word	0x24039ad0
900130ac:	24039ad1 	.word	0x24039ad1
900130b0:	05f5e100 	.word	0x05f5e100

900130b4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900130b4:	b510      	push	{r4, lr}
900130b6:	4604      	mov	r4, r0
900130b8:	f7ee fbee 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900130bc:	2200      	movs	r2, #0
900130be:	6863      	ldr	r3, [r4, #4]
900130c0:	729a      	strb	r2, [r3, #10]
900130c2:	bd10      	pop	{r4, pc}

900130c4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900130c4:	65c1      	str	r1, [r0, #92]	; 0x5c
900130c6:	301c      	adds	r0, #28
900130c8:	f015 bdce 	b.w	90028c68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900130cc <_ZN8touchgfx3HAL5touchEll>:
900130cc:	b530      	push	{r4, r5, lr}
900130ce:	b087      	sub	sp, #28
900130d0:	4604      	mov	r4, r0
900130d2:	a804      	add	r0, sp, #16
900130d4:	e9cd 1204 	strd	r1, r2, [sp, #16]
900130d8:	f004 fe50 	bl	90017d7c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900130dc:	9b04      	ldr	r3, [sp, #16]
900130de:	a906      	add	r1, sp, #24
900130e0:	a803      	add	r0, sp, #12
900130e2:	f8ad 300c 	strh.w	r3, [sp, #12]
900130e6:	9b05      	ldr	r3, [sp, #20]
900130e8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900130ec:	f004 fe98 	bl	90017e20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900130f0:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
900130f4:	f104 001c 	add.w	r0, r4, #28
900130f8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900130fc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90013100:	b189      	cbz	r1, 90013126 <_ZN8touchgfx3HAL5touchEll+0x5a>
90013102:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90013106:	9300      	str	r3, [sp, #0]
90013108:	4613      	mov	r3, r2
9001310a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
9001310e:	462a      	mov	r2, r5
90013110:	f015 fdba 	bl	90028c88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90013114:	b128      	cbz	r0, 90013122 <_ZN8touchgfx3HAL5touchEll+0x56>
90013116:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001311a:	6623      	str	r3, [r4, #96]	; 0x60
9001311c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013120:	6663      	str	r3, [r4, #100]	; 0x64
90013122:	b007      	add	sp, #28
90013124:	bd30      	pop	{r4, r5, pc}
90013126:	f015 fdef 	bl	90028d08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001312a:	2301      	movs	r3, #1
9001312c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90013130:	e7f1      	b.n	90013116 <_ZN8touchgfx3HAL5touchEll+0x4a>

90013132 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90013132:	b510      	push	{r4, lr}
90013134:	2b00      	cmp	r3, #0
90013136:	d046      	beq.n	900131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013138:	ea81 0002 	eor.w	r0, r1, r2
9001313c:	07c4      	lsls	r4, r0, #31
9001313e:	d508      	bpl.n	90013152 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90013140:	440b      	add	r3, r1
90013142:	3a01      	subs	r2, #1
90013144:	428b      	cmp	r3, r1
90013146:	d93e      	bls.n	900131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013148:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001314c:	f801 0b01 	strb.w	r0, [r1], #1
90013150:	e7f8      	b.n	90013144 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90013152:	07d0      	lsls	r0, r2, #31
90013154:	bf42      	ittt	mi
90013156:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001315a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001315e:	f801 0b01 	strbmi.w	r0, [r1], #1
90013162:	2b01      	cmp	r3, #1
90013164:	d911      	bls.n	9001318a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013166:	ea81 0402 	eor.w	r4, r1, r2
9001316a:	4610      	mov	r0, r2
9001316c:	07a4      	lsls	r4, r4, #30
9001316e:	d022      	beq.n	900131b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90013170:	f023 0401 	bic.w	r4, r3, #1
90013174:	440c      	add	r4, r1
90013176:	428c      	cmp	r4, r1
90013178:	4602      	mov	r2, r0
9001317a:	d904      	bls.n	90013186 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001317c:	8812      	ldrh	r2, [r2, #0]
9001317e:	3002      	adds	r0, #2
90013180:	f821 2b02 	strh.w	r2, [r1], #2
90013184:	e7f7      	b.n	90013176 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90013186:	f003 0301 	and.w	r3, r3, #1
9001318a:	f023 0003 	bic.w	r0, r3, #3
9001318e:	4408      	add	r0, r1
90013190:	4288      	cmp	r0, r1
90013192:	4614      	mov	r4, r2
90013194:	d904      	bls.n	900131a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90013196:	6824      	ldr	r4, [r4, #0]
90013198:	3204      	adds	r2, #4
9001319a:	f841 4b04 	str.w	r4, [r1], #4
9001319e:	e7f7      	b.n	90013190 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900131a0:	f003 0303 	and.w	r3, r3, #3
900131a4:	3a01      	subs	r2, #1
900131a6:	440b      	add	r3, r1
900131a8:	428b      	cmp	r3, r1
900131aa:	d90c      	bls.n	900131c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900131ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900131b0:	f801 0b01 	strb.w	r0, [r1], #1
900131b4:	e7f8      	b.n	900131a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900131b6:	0790      	lsls	r0, r2, #30
900131b8:	d0e7      	beq.n	9001318a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900131ba:	f832 0b02 	ldrh.w	r0, [r2], #2
900131be:	3b02      	subs	r3, #2
900131c0:	f821 0b02 	strh.w	r0, [r1], #2
900131c4:	e7e1      	b.n	9001318a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900131c6:	2001      	movs	r0, #1
900131c8:	bd10      	pop	{r4, pc}

900131ca <_ZN8touchgfx3HAL7noTouchEv>:
900131ca:	b510      	push	{r4, lr}
900131cc:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900131d0:	4604      	mov	r4, r0
900131d2:	b153      	cbz	r3, 900131ea <_ZN8touchgfx3HAL7noTouchEv+0x20>
900131d4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900131d8:	2101      	movs	r1, #1
900131da:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900131de:	301c      	adds	r0, #28
900131e0:	f015 fd92 	bl	90028d08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900131e4:	2300      	movs	r3, #0
900131e6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900131ea:	bd10      	pop	{r4, pc}

900131ec <_ZN8touchgfx8Drawable5setXYEss>:
900131ec:	b570      	push	{r4, r5, r6, lr}
900131ee:	6803      	ldr	r3, [r0, #0]
900131f0:	4604      	mov	r4, r0
900131f2:	4615      	mov	r5, r2
900131f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900131f6:	4798      	blx	r3
900131f8:	6823      	ldr	r3, [r4, #0]
900131fa:	4629      	mov	r1, r5
900131fc:	4620      	mov	r0, r4
900131fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013204:	4718      	bx	r3
	...

90013208 <_ZN8touchgfx3HAL3lcdEv>:
90013208:	4b04      	ldr	r3, [pc, #16]	; (9001321c <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001320a:	681b      	ldr	r3, [r3, #0]
9001320c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013210:	b10a      	cbz	r2, 90013216 <_ZN8touchgfx3HAL3lcdEv+0xe>
90013212:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013214:	b900      	cbnz	r0, 90013218 <_ZN8touchgfx3HAL3lcdEv+0x10>
90013216:	6898      	ldr	r0, [r3, #8]
90013218:	4770      	bx	lr
9001321a:	bf00      	nop
9001321c:	24039acc 	.word	0x24039acc

90013220 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90013220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013224:	b085      	sub	sp, #20
90013226:	4604      	mov	r4, r0
90013228:	2000      	movs	r0, #0
9001322a:	4699      	mov	r9, r3
9001322c:	ad04      	add	r5, sp, #16
9001322e:	460f      	mov	r7, r1
90013230:	4690      	mov	r8, r2
90013232:	f845 0d04 	str.w	r0, [r5, #-4]!
90013236:	69a0      	ldr	r0, [r4, #24]
90013238:	6806      	ldr	r6, [r0, #0]
9001323a:	9501      	str	r5, [sp, #4]
9001323c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90013240:	9500      	str	r5, [sp, #0]
90013242:	6835      	ldr	r5, [r6, #0]
90013244:	47a8      	blx	r5
90013246:	4d10      	ldr	r5, [pc, #64]	; (90013288 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90013248:	4606      	mov	r6, r0
9001324a:	f8a5 9000 	strh.w	r9, [r5]
9001324e:	f7ff ffdb 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90013252:	6803      	ldr	r3, [r0, #0]
90013254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013256:	4798      	blx	r3
90013258:	b128      	cbz	r0, 90013266 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
9001325a:	2801      	cmp	r0, #1
9001325c:	d00b      	beq.n	90013276 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
9001325e:	4630      	mov	r0, r6
90013260:	b005      	add	sp, #20
90013262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013266:	882b      	ldrh	r3, [r5, #0]
90013268:	fb08 7203 	mla	r2, r8, r3, r7
9001326c:	9b03      	ldr	r3, [sp, #12]
9001326e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90013272:	63e3      	str	r3, [r4, #60]	; 0x3c
90013274:	e7f3      	b.n	9001325e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013276:	882a      	ldrh	r2, [r5, #0]
90013278:	9b03      	ldr	r3, [sp, #12]
9001327a:	fb08 7202 	mla	r2, r8, r2, r7
9001327e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90013282:	1a9a      	subs	r2, r3, r2
90013284:	63e2      	str	r2, [r4, #60]	; 0x3c
90013286:	e7ea      	b.n	9001325e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013288:	24039ac6 	.word	0x24039ac6

9001328c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
9001328c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001328e:	b08b      	sub	sp, #44	; 0x2c
90013290:	4617      	mov	r7, r2
90013292:	4604      	mov	r4, r0
90013294:	460e      	mov	r6, r1
90013296:	461d      	mov	r5, r3
90013298:	f7ff ffb6 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001329c:	6803      	ldr	r3, [r0, #0]
9001329e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900132a0:	4798      	blx	r3
900132a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900132a6:	9007      	str	r0, [sp, #28]
900132a8:	4631      	mov	r1, r6
900132aa:	6822      	ldr	r2, [r4, #0]
900132ac:	e9cd 0308 	strd	r0, r3, [sp, #32]
900132b0:	4b0c      	ldr	r3, [pc, #48]	; (900132e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900132b2:	4620      	mov	r0, r4
900132b4:	881b      	ldrh	r3, [r3, #0]
900132b6:	9306      	str	r3, [sp, #24]
900132b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900132bc:	9305      	str	r3, [sp, #20]
900132be:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900132c2:	9304      	str	r3, [sp, #16]
900132c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900132c8:	9303      	str	r3, [sp, #12]
900132ca:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900132ce:	9302      	str	r3, [sp, #8]
900132d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900132d4:	e9cd 5300 	strd	r5, r3, [sp]
900132d8:	463b      	mov	r3, r7
900132da:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
900132dc:	2200      	movs	r2, #0
900132de:	47a8      	blx	r5
900132e0:	b00b      	add	sp, #44	; 0x2c
900132e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
900132e4:	24039ac6 	.word	0x24039ac6

900132e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900132e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900132ec:	4698      	mov	r8, r3
900132ee:	6803      	ldr	r3, [r0, #0]
900132f0:	b08b      	sub	sp, #44	; 0x2c
900132f2:	4617      	mov	r7, r2
900132f4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
900132f6:	460e      	mov	r6, r1
900132f8:	4b13      	ldr	r3, [pc, #76]	; (90013348 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900132fa:	4604      	mov	r4, r0
900132fc:	f8b3 9000 	ldrh.w	r9, [r3]
90013300:	f7ff ff82 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90013304:	6803      	ldr	r3, [r0, #0]
90013306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013308:	4798      	blx	r3
9001330a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
9001330e:	2200      	movs	r2, #0
90013310:	4631      	mov	r1, r6
90013312:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013316:	2302      	movs	r3, #2
90013318:	4620      	mov	r0, r4
9001331a:	e9cd 9306 	strd	r9, r3, [sp, #24]
9001331e:	2301      	movs	r3, #1
90013320:	9305      	str	r3, [sp, #20]
90013322:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90013326:	9304      	str	r3, [sp, #16]
90013328:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001332c:	9303      	str	r3, [sp, #12]
9001332e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90013332:	9302      	str	r3, [sp, #8]
90013334:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013338:	e9cd 8300 	strd	r8, r3, [sp]
9001333c:	463b      	mov	r3, r7
9001333e:	47a8      	blx	r5
90013340:	b00b      	add	sp, #44	; 0x2c
90013342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013346:	bf00      	nop
90013348:	24039ac6 	.word	0x24039ac6

9001334c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
9001334c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013350:	4698      	mov	r8, r3
90013352:	6803      	ldr	r3, [r0, #0]
90013354:	b087      	sub	sp, #28
90013356:	460e      	mov	r6, r1
90013358:	6d9d      	ldr	r5, [r3, #88]	; 0x58
9001335a:	4617      	mov	r7, r2
9001335c:	4b0f      	ldr	r3, [pc, #60]	; (9001339c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
9001335e:	4604      	mov	r4, r0
90013360:	f8b3 9000 	ldrh.w	r9, [r3]
90013364:	f7ff ff50 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90013368:	6803      	ldr	r3, [r0, #0]
9001336a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001336c:	4798      	blx	r3
9001336e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90013372:	463a      	mov	r2, r7
90013374:	4631      	mov	r1, r6
90013376:	f8cd 900c 	str.w	r9, [sp, #12]
9001337a:	e9cd 0304 	strd	r0, r3, [sp, #16]
9001337e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90013382:	4620      	mov	r0, r4
90013384:	9302      	str	r3, [sp, #8]
90013386:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
9001338a:	9301      	str	r3, [sp, #4]
9001338c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013390:	9300      	str	r3, [sp, #0]
90013392:	4643      	mov	r3, r8
90013394:	47a8      	blx	r5
90013396:	b007      	add	sp, #28
90013398:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001339c:	24039ac6 	.word	0x24039ac6

900133a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900133a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900133a4:	4604      	mov	r4, r0
900133a6:	b08f      	sub	sp, #60	; 0x3c
900133a8:	4610      	mov	r0, r2
900133aa:	460d      	mov	r5, r1
900133ac:	4691      	mov	r9, r2
900133ae:	461e      	mov	r6, r3
900133b0:	f008 f830 	bl	9001b414 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900133b4:	2800      	cmp	r0, #0
900133b6:	f000 809d 	beq.w	900134f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900133ba:	6823      	ldr	r3, [r4, #0]
900133bc:	4620      	mov	r0, r4
900133be:	f8df b198 	ldr.w	fp, [pc, #408]	; 90013558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900133c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900133c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900133c8:	4798      	blx	r3
900133ca:	6823      	ldr	r3, [r4, #0]
900133cc:	4620      	mov	r0, r4
900133ce:	f8df a18c 	ldr.w	sl, [pc, #396]	; 9001355c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900133d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900133d4:	4798      	blx	r3
900133d6:	f8bb 3000 	ldrh.w	r3, [fp]
900133da:	4f5c      	ldr	r7, [pc, #368]	; (9001354c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900133dc:	9301      	str	r3, [sp, #4]
900133de:	f8ba 3000 	ldrh.w	r3, [sl]
900133e2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900133e6:	4640      	mov	r0, r8
900133e8:	9302      	str	r3, [sp, #8]
900133ea:	883b      	ldrh	r3, [r7, #0]
900133ec:	9303      	str	r3, [sp, #12]
900133ee:	4b58      	ldr	r3, [pc, #352]	; (90013550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900133f0:	881a      	ldrh	r2, [r3, #0]
900133f2:	9305      	str	r3, [sp, #20]
900133f4:	9204      	str	r2, [sp, #16]
900133f6:	f008 f8a1 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
900133fa:	8038      	strh	r0, [r7, #0]
900133fc:	4640      	mov	r0, r8
900133fe:	f008 f8d1 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013402:	9b05      	ldr	r3, [sp, #20]
90013404:	b280      	uxth	r0, r0
90013406:	8018      	strh	r0, [r3, #0]
90013408:	4b52      	ldr	r3, [pc, #328]	; (90013554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
9001340a:	781b      	ldrb	r3, [r3, #0]
9001340c:	2b00      	cmp	r3, #0
9001340e:	d174      	bne.n	900134fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90013410:	883b      	ldrh	r3, [r7, #0]
90013412:	f8aa 0000 	strh.w	r0, [sl]
90013416:	f8ab 3000 	strh.w	r3, [fp]
9001341a:	4648      	mov	r0, r9
9001341c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90013420:	f007 fff8 	bl	9001b414 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013424:	2200      	movs	r2, #0
90013426:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
9001342a:	4611      	mov	r1, r2
9001342c:	4628      	mov	r0, r5
9001342e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90013432:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90013436:	f7ff fed9 	bl	900131ec <_ZN8touchgfx8Drawable5setXYEss>
9001343a:	2301      	movs	r3, #1
9001343c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90013440:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90013444:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013448:	2b00      	cmp	r3, #0
9001344a:	dd5c      	ble.n	90013506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001344c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013450:	2b00      	cmp	r3, #0
90013452:	dd58      	ble.n	90013506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013454:	462a      	mov	r2, r5
90013456:	ab0a      	add	r3, sp, #40	; 0x28
90013458:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001345c:	6851      	ldr	r1, [r2, #4]
9001345e:	c303      	stmia	r3!, {r0, r1}
90013460:	4631      	mov	r1, r6
90013462:	a80a      	add	r0, sp, #40	; 0x28
90013464:	f7ff fbec 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90013468:	4b38      	ldr	r3, [pc, #224]	; (9001354c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
9001346a:	2100      	movs	r1, #0
9001346c:	f9b3 2000 	ldrsh.w	r2, [r3]
90013470:	4b37      	ldr	r3, [pc, #220]	; (90013550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013472:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90013476:	aa0a      	add	r2, sp, #40	; 0x28
90013478:	f9b3 3000 	ldrsh.w	r3, [r3]
9001347c:	910c      	str	r1, [sp, #48]	; 0x30
9001347e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013482:	ab08      	add	r3, sp, #32
90013484:	e892 0003 	ldmia.w	r2, {r0, r1}
90013488:	e883 0003 	stmia.w	r3, {r0, r1}
9001348c:	4618      	mov	r0, r3
9001348e:	a90c      	add	r1, sp, #48	; 0x30
90013490:	f7ff fbd6 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90013494:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90013496:	2b00      	cmp	r3, #0
90013498:	d13c      	bne.n	90013514 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
9001349a:	2000      	movs	r0, #0
9001349c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900134a0:	2600      	movs	r6, #0
900134a2:	696b      	ldr	r3, [r5, #20]
900134a4:	a908      	add	r1, sp, #32
900134a6:	682a      	ldr	r2, [r5, #0]
900134a8:	4628      	mov	r0, r5
900134aa:	9305      	str	r3, [sp, #20]
900134ac:	616e      	str	r6, [r5, #20]
900134ae:	6892      	ldr	r2, [r2, #8]
900134b0:	4790      	blx	r2
900134b2:	9b05      	ldr	r3, [sp, #20]
900134b4:	4652      	mov	r2, sl
900134b6:	4649      	mov	r1, r9
900134b8:	616b      	str	r3, [r5, #20]
900134ba:	4628      	mov	r0, r5
900134bc:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
900134c0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900134c4:	f7ff fe92 	bl	900131ec <_ZN8touchgfx8Drawable5setXYEss>
900134c8:	9a01      	ldr	r2, [sp, #4]
900134ca:	4b23      	ldr	r3, [pc, #140]	; (90013558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900134cc:	4620      	mov	r0, r4
900134ce:	801a      	strh	r2, [r3, #0]
900134d0:	9a02      	ldr	r2, [sp, #8]
900134d2:	4b22      	ldr	r3, [pc, #136]	; (9001355c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900134d4:	801a      	strh	r2, [r3, #0]
900134d6:	9a03      	ldr	r2, [sp, #12]
900134d8:	4b1c      	ldr	r3, [pc, #112]	; (9001354c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900134da:	801a      	strh	r2, [r3, #0]
900134dc:	4b1c      	ldr	r3, [pc, #112]	; (90013550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900134de:	9a04      	ldr	r2, [sp, #16]
900134e0:	801a      	strh	r2, [r3, #0]
900134e2:	6823      	ldr	r3, [r4, #0]
900134e4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
900134e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900134ea:	4798      	blx	r3
900134ec:	6823      	ldr	r3, [r4, #0]
900134ee:	4620      	mov	r0, r4
900134f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900134f2:	4798      	blx	r3
900134f4:	b00f      	add	sp, #60	; 0x3c
900134f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900134fa:	883b      	ldrh	r3, [r7, #0]
900134fc:	f8ab 0000 	strh.w	r0, [fp]
90013500:	f8aa 3000 	strh.w	r3, [sl]
90013504:	e789      	b.n	9001341a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90013506:	462a      	mov	r2, r5
90013508:	ab0a      	add	r3, sp, #40	; 0x28
9001350a:	f852 0f04 	ldr.w	r0, [r2, #4]!
9001350e:	6851      	ldr	r1, [r2, #4]
90013510:	c303      	stmia	r3!, {r0, r1}
90013512:	e7a9      	b.n	90013468 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90013514:	a807      	add	r0, sp, #28
90013516:	f008 f981 	bl	9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001351a:	4606      	mov	r6, r0
9001351c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9001351e:	6803      	ldr	r3, [r0, #0]
90013520:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013522:	4798      	blx	r3
90013524:	4286      	cmp	r6, r0
90013526:	d1b8      	bne.n	9001349a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90013528:	f7ff fe6e 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001352c:	6803      	ldr	r3, [r0, #0]
9001352e:	4606      	mov	r6, r0
90013530:	a807      	add	r0, sp, #28
90013532:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013534:	9305      	str	r3, [sp, #20]
90013536:	f008 f971 	bl	9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001353a:	9b05      	ldr	r3, [sp, #20]
9001353c:	4601      	mov	r1, r0
9001353e:	4630      	mov	r0, r6
90013540:	4798      	blx	r3
90013542:	f080 0001 	eor.w	r0, r0, #1
90013546:	b2c0      	uxtb	r0, r0
90013548:	e7a8      	b.n	9001349c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
9001354a:	bf00      	nop
9001354c:	24039ac0 	.word	0x24039ac0
90013550:	24039ac2 	.word	0x24039ac2
90013554:	24039ac4 	.word	0x24039ac4
90013558:	24039ac6 	.word	0x24039ac6
9001355c:	24039ac8 	.word	0x24039ac8

90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90013560:	4b07      	ldr	r3, [pc, #28]	; (90013580 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90013562:	b510      	push	{r4, lr}
90013564:	781b      	ldrb	r3, [r3, #0]
90013566:	4604      	mov	r4, r0
90013568:	b13b      	cbz	r3, 9001357a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001356a:	6803      	ldr	r3, [r0, #0]
9001356c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001356e:	4798      	blx	r3
90013570:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90013572:	4283      	cmp	r3, r0
90013574:	d101      	bne.n	9001357a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013576:	6c20      	ldr	r0, [r4, #64]	; 0x40
90013578:	bd10      	pop	{r4, pc}
9001357a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001357c:	e7fc      	b.n	90013578 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
9001357e:	bf00      	nop
90013580:	24039aca 	.word	0x24039aca

90013584 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90013584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013588:	461d      	mov	r5, r3
9001358a:	b08a      	sub	sp, #40	; 0x28
9001358c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90013590:	4690      	mov	r8, r2
90013592:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90013596:	2400      	movs	r4, #0
90013598:	4607      	mov	r7, r0
9001359a:	fb06 8505 	mla	r5, r6, r5, r8
9001359e:	9404      	str	r4, [sp, #16]
900135a0:	f88d 4020 	strb.w	r4, [sp, #32]
900135a4:	e9cd 3101 	strd	r3, r1, [sp, #4]
900135a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900135ac:	f8ad 3018 	strh.w	r3, [sp, #24]
900135b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900135b4:	f8ad 301a 	strh.w	r3, [sp, #26]
900135b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900135bc:	f8ad 301c 	strh.w	r3, [sp, #28]
900135c0:	f7ff ffce 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900135c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900135c8:	6878      	ldr	r0, [r7, #4]
900135ca:	f8ad 601e 	strh.w	r6, [sp, #30]
900135ce:	a901      	add	r1, sp, #4
900135d0:	9505      	str	r5, [sp, #20]
900135d2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900135d6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
900135da:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
900135de:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
900135e2:	6803      	ldr	r3, [r0, #0]
900135e4:	685b      	ldr	r3, [r3, #4]
900135e6:	4798      	blx	r3
900135e8:	b00a      	add	sp, #40	; 0x28
900135ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900135ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
900135ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900135f2:	b08b      	sub	sp, #44	; 0x2c
900135f4:	2400      	movs	r4, #0
900135f6:	4691      	mov	r9, r2
900135f8:	461d      	mov	r5, r3
900135fa:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
900135fe:	f44f 6300 	mov.w	r3, #2048	; 0x800
90013602:	4688      	mov	r8, r1
90013604:	4607      	mov	r7, r0
90013606:	9404      	str	r4, [sp, #16]
90013608:	fb06 9505 	mla	r5, r6, r5, r9
9001360c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013610:	f7ff ffa6 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013614:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013618:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001361c:	6878      	ldr	r0, [r7, #4]
9001361e:	f8ad 3018 	strh.w	r3, [sp, #24]
90013622:	a901      	add	r1, sp, #4
90013624:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90013628:	9505      	str	r5, [sp, #20]
9001362a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001362e:	f8ad 401c 	strh.w	r4, [sp, #28]
90013632:	f8ad 601e 	strh.w	r6, [sp, #30]
90013636:	f8cd 8010 	str.w	r8, [sp, #16]
9001363a:	f8ad 4020 	strh.w	r4, [sp, #32]
9001363e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90013642:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90013646:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001364a:	6803      	ldr	r3, [r0, #0]
9001364c:	685b      	ldr	r3, [r3, #4]
9001364e:	4798      	blx	r3
90013650:	b00b      	add	sp, #44	; 0x2c
90013652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90013658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90013658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001365c:	b08a      	sub	sp, #40	; 0x28
9001365e:	4698      	mov	r8, r3
90013660:	2300      	movs	r3, #0
90013662:	4606      	mov	r6, r0
90013664:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90013668:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001366c:	2d0b      	cmp	r5, #11
9001366e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90013672:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90013676:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
9001367a:	9304      	str	r3, [sp, #16]
9001367c:	d137      	bne.n	900136ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
9001367e:	2380      	movs	r3, #128	; 0x80
90013680:	f88d 0020 	strb.w	r0, [sp, #32]
90013684:	4630      	mov	r0, r6
90013686:	9203      	str	r2, [sp, #12]
90013688:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001368c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90013690:	f8ad 3018 	strh.w	r3, [sp, #24]
90013694:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013698:	f8ad 301a 	strh.w	r3, [sp, #26]
9001369c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900136a0:	f8ad 301c 	strh.w	r3, [sp, #28]
900136a4:	f7ff ff5c 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900136a8:	2c0b      	cmp	r4, #11
900136aa:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900136ae:	f8ad 701e 	strh.w	r7, [sp, #30]
900136b2:	bf94      	ite	ls
900136b4:	4b19      	ldrls	r3, [pc, #100]	; (9001371c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900136b6:	2100      	movhi	r1, #0
900136b8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900136bc:	bf98      	it	ls
900136be:	5d19      	ldrbls	r1, [r3, r4]
900136c0:	fb02 8307 	mla	r3, r2, r7, r8
900136c4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900136c8:	10c9      	asrs	r1, r1, #3
900136ca:	fb01 0003 	mla	r0, r1, r3, r0
900136ce:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900136d2:	a901      	add	r1, sp, #4
900136d4:	9005      	str	r0, [sp, #20]
900136d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
900136da:	2300      	movs	r3, #0
900136dc:	6870      	ldr	r0, [r6, #4]
900136de:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
900136e2:	6803      	ldr	r3, [r0, #0]
900136e4:	685b      	ldr	r3, [r3, #4]
900136e6:	4798      	blx	r3
900136e8:	b00a      	add	sp, #40	; 0x28
900136ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900136ee:	2d02      	cmp	r5, #2
900136f0:	d109      	bne.n	90013706 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
900136f2:	28ff      	cmp	r0, #255	; 0xff
900136f4:	d105      	bne.n	90013702 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
900136f6:	f1bc 0f00 	cmp.w	ip, #0
900136fa:	bf14      	ite	ne
900136fc:	2340      	movne	r3, #64	; 0x40
900136fe:	2320      	moveq	r3, #32
90013700:	e7be      	b.n	90013680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013702:	2340      	movs	r3, #64	; 0x40
90013704:	e7bc      	b.n	90013680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013706:	28ff      	cmp	r0, #255	; 0xff
90013708:	d105      	bne.n	90013716 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
9001370a:	f1bc 0f00 	cmp.w	ip, #0
9001370e:	bf14      	ite	ne
90013710:	2304      	movne	r3, #4
90013712:	2301      	moveq	r3, #1
90013714:	e7b4      	b.n	90013680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013716:	2304      	movs	r3, #4
90013718:	e7b2      	b.n	90013680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
9001371a:	bf00      	nop
9001371c:	9002d5b8 	.word	0x9002d5b8

90013720 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90013720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013724:	b08b      	sub	sp, #44	; 0x2c
90013726:	461d      	mov	r5, r3
90013728:	2400      	movs	r4, #0
9001372a:	4688      	mov	r8, r1
9001372c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90013730:	4693      	mov	fp, r2
90013732:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90013736:	4607      	mov	r7, r0
90013738:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001373c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90013740:	9404      	str	r4, [sp, #16]
90013742:	bf14      	ite	ne
90013744:	2308      	movne	r3, #8
90013746:	2302      	moveq	r3, #2
90013748:	fb05 b50a 	mla	r5, r5, sl, fp
9001374c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013750:	f7ff ff06 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013754:	2e0b      	cmp	r6, #11
90013756:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001375a:	a901      	add	r1, sp, #4
9001375c:	bf98      	it	ls
9001375e:	4b13      	ldrls	r3, [pc, #76]	; (900137ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90013760:	f8ad a01e 	strh.w	sl, [sp, #30]
90013764:	bf98      	it	ls
90013766:	5d9c      	ldrbls	r4, [r3, r6]
90013768:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
9001376c:	10e4      	asrs	r4, r4, #3
9001376e:	f8cd 8010 	str.w	r8, [sp, #16]
90013772:	f8ad 3018 	strh.w	r3, [sp, #24]
90013776:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001377a:	fb04 0405 	mla	r4, r4, r5, r0
9001377e:	6878      	ldr	r0, [r7, #4]
90013780:	f8ad 301a 	strh.w	r3, [sp, #26]
90013784:	2300      	movs	r3, #0
90013786:	9405      	str	r4, [sp, #20]
90013788:	f8ad 301c 	strh.w	r3, [sp, #28]
9001378c:	f88d 9020 	strb.w	r9, [sp, #32]
90013790:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90013794:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90013798:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
9001379c:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
900137a0:	6803      	ldr	r3, [r0, #0]
900137a2:	685b      	ldr	r3, [r3, #4]
900137a4:	4798      	blx	r3
900137a6:	b00b      	add	sp, #44	; 0x2c
900137a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900137ac:	9002d5b8 	.word	0x9002d5b8

900137b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
900137b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900137b4:	461e      	mov	r6, r3
900137b6:	4b0a      	ldr	r3, [pc, #40]	; (900137e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
900137b8:	460f      	mov	r7, r1
900137ba:	4690      	mov	r8, r2
900137bc:	881d      	ldrh	r5, [r3, #0]
900137be:	f7ff fd23 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
900137c2:	6803      	ldr	r3, [r0, #0]
900137c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900137c6:	4798      	blx	r3
900137c8:	280b      	cmp	r0, #11
900137ca:	bf96      	itet	ls
900137cc:	4b05      	ldrls	r3, [pc, #20]	; (900137e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900137ce:	2400      	movhi	r4, #0
900137d0:	5c1c      	ldrbls	r4, [r3, r0]
900137d2:	fb08 7005 	mla	r0, r8, r5, r7
900137d6:	10e4      	asrs	r4, r4, #3
900137d8:	fb04 6000 	mla	r0, r4, r0, r6
900137dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900137e0:	24039ac6 	.word	0x24039ac6
900137e4:	9002d5b8 	.word	0x9002d5b8

900137e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900137e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900137ea:	b08b      	sub	sp, #44	; 0x2c
900137ec:	461f      	mov	r7, r3
900137ee:	4604      	mov	r4, r0
900137f0:	4616      	mov	r6, r2
900137f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
900137f6:	2500      	movs	r5, #0
900137f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
900137fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90013800:	9504      	str	r5, [sp, #16]
90013802:	f8ad 3018 	strh.w	r3, [sp, #24]
90013806:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001380a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001380e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90013812:	f8ad 301c 	strh.w	r3, [sp, #28]
90013816:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001381a:	f88d 3020 	strb.w	r3, [sp, #32]
9001381e:	f7ff fe9f 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013822:	463a      	mov	r2, r7
90013824:	4631      	mov	r1, r6
90013826:	4603      	mov	r3, r0
90013828:	4620      	mov	r0, r4
9001382a:	f7ff ffc1 	bl	900137b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001382e:	4b0e      	ldr	r3, [pc, #56]	; (90013868 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90013830:	9005      	str	r0, [sp, #20]
90013832:	881b      	ldrh	r3, [r3, #0]
90013834:	f8ad 301e 	strh.w	r3, [sp, #30]
90013838:	f7ff fce6 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001383c:	6803      	ldr	r3, [r0, #0]
9001383e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013840:	4798      	blx	r3
90013842:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013844:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90013848:	a901      	add	r1, sp, #4
9001384a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
9001384e:	9304      	str	r3, [sp, #16]
90013850:	6860      	ldr	r0, [r4, #4]
90013852:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90013856:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001385a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
9001385e:	6803      	ldr	r3, [r0, #0]
90013860:	685b      	ldr	r3, [r3, #4]
90013862:	4798      	blx	r3
90013864:	b00b      	add	sp, #44	; 0x2c
90013866:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013868:	24039ac6 	.word	0x24039ac6

9001386c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9001386c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001386e:	b08d      	sub	sp, #52	; 0x34
90013870:	2501      	movs	r5, #1
90013872:	4604      	mov	r4, r0
90013874:	466b      	mov	r3, sp
90013876:	9503      	str	r5, [sp, #12]
90013878:	e883 0006 	stmia.w	r3, {r1, r2}
9001387c:	2300      	movs	r3, #0
9001387e:	f8bd 6000 	ldrh.w	r6, [sp]
90013882:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90013886:	9306      	str	r3, [sp, #24]
90013888:	6803      	ldr	r3, [r0, #0]
9001388a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001388c:	4798      	blx	r3
9001388e:	463a      	mov	r2, r7
90013890:	4631      	mov	r1, r6
90013892:	4603      	mov	r3, r0
90013894:	4620      	mov	r0, r4
90013896:	f7ff ff8b 	bl	900137b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001389a:	6c63      	ldr	r3, [r4, #68]	; 0x44
9001389c:	9004      	str	r0, [sp, #16]
9001389e:	9307      	str	r3, [sp, #28]
900138a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900138a4:	f8ad 3020 	strh.w	r3, [sp, #32]
900138a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900138ac:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900138b0:	4b0e      	ldr	r3, [pc, #56]	; (900138ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900138b2:	881b      	ldrh	r3, [r3, #0]
900138b4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
900138b8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
900138bc:	f7ff fca4 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
900138c0:	6803      	ldr	r3, [r0, #0]
900138c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900138c4:	4798      	blx	r3
900138c6:	23ff      	movs	r3, #255	; 0xff
900138c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
900138cc:	a903      	add	r1, sp, #12
900138ce:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900138d2:	6860      	ldr	r0, [r4, #4]
900138d4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900138d8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
900138dc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
900138e0:	6803      	ldr	r3, [r0, #0]
900138e2:	685b      	ldr	r3, [r3, #4]
900138e4:	4798      	blx	r3
900138e6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900138e8:	b00d      	add	sp, #52	; 0x34
900138ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
900138ec:	24039ac6 	.word	0x24039ac6

900138f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900138f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900138f4:	b08c      	sub	sp, #48	; 0x30
900138f6:	461e      	mov	r6, r3
900138f8:	2300      	movs	r3, #0
900138fa:	4604      	mov	r4, r0
900138fc:	466d      	mov	r5, sp
900138fe:	9306      	str	r3, [sp, #24]
90013900:	6803      	ldr	r3, [r0, #0]
90013902:	e885 0006 	stmia.w	r5, {r1, r2}
90013906:	2501      	movs	r5, #1
90013908:	f8bd 7000 	ldrh.w	r7, [sp]
9001390c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90013910:	9503      	str	r5, [sp, #12]
90013912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013914:	4798      	blx	r3
90013916:	4642      	mov	r2, r8
90013918:	4639      	mov	r1, r7
9001391a:	4603      	mov	r3, r0
9001391c:	4620      	mov	r0, r4
9001391e:	f7ff ff47 	bl	900137b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90013922:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90013926:	9004      	str	r0, [sp, #16]
90013928:	f8ad 3020 	strh.w	r3, [sp, #32]
9001392c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90013930:	9607      	str	r6, [sp, #28]
90013932:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90013936:	4b10      	ldr	r3, [pc, #64]	; (90013978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90013938:	881b      	ldrh	r3, [r3, #0]
9001393a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
9001393e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90013940:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90013944:	f7ff fc60 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90013948:	6803      	ldr	r3, [r0, #0]
9001394a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001394c:	4798      	blx	r3
9001394e:	23ff      	movs	r3, #255	; 0xff
90013950:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90013954:	a903      	add	r1, sp, #12
90013956:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001395a:	6860      	ldr	r0, [r4, #4]
9001395c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90013960:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90013964:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90013968:	6803      	ldr	r3, [r0, #0]
9001396a:	685b      	ldr	r3, [r3, #4]
9001396c:	4798      	blx	r3
9001396e:	4630      	mov	r0, r6
90013970:	b00c      	add	sp, #48	; 0x30
90013972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013976:	bf00      	nop
90013978:	24039ac6 	.word	0x24039ac6

9001397c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001397c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001397e:	b085      	sub	sp, #20
90013980:	4605      	mov	r5, r0
90013982:	ac02      	add	r4, sp, #8
90013984:	e884 0006 	stmia.w	r4, {r1, r2}
90013988:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001398c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90013990:	f7ff fde6 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013994:	4631      	mov	r1, r6
90013996:	4603      	mov	r3, r0
90013998:	463a      	mov	r2, r7
9001399a:	4628      	mov	r0, r5
9001399c:	f7ff ff08 	bl	900137b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900139a0:	4a05      	ldr	r2, [pc, #20]	; (900139b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900139a2:	682b      	ldr	r3, [r5, #0]
900139a4:	8812      	ldrh	r2, [r2, #0]
900139a6:	9200      	str	r2, [sp, #0]
900139a8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
900139aa:	4603      	mov	r3, r0
900139ac:	4628      	mov	r0, r5
900139ae:	e894 0006 	ldmia.w	r4, {r1, r2}
900139b2:	47b0      	blx	r6
900139b4:	b005      	add	sp, #20
900139b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900139b8:	24039ac6 	.word	0x24039ac6

900139bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900139bc:	b570      	push	{r4, r5, r6, lr}
900139be:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
900139c2:	4604      	mov	r4, r0
900139c4:	b19b      	cbz	r3, 900139ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900139c6:	2002      	movs	r0, #2
900139c8:	f7ec fe2c 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900139cc:	2300      	movs	r3, #0
900139ce:	4620      	mov	r0, r4
900139d0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900139d4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
900139d8:	6823      	ldr	r3, [r4, #0]
900139da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
900139de:	f7ff fdbf 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900139e2:	4601      	mov	r1, r0
900139e4:	4620      	mov	r0, r4
900139e6:	462b      	mov	r3, r5
900139e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900139ec:	4718      	bx	r3
900139ee:	bd70      	pop	{r4, r5, r6, pc}

900139f0 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900139f0:	b570      	push	{r4, r5, r6, lr}
900139f2:	4605      	mov	r5, r0
900139f4:	460c      	mov	r4, r1
900139f6:	2003      	movs	r0, #3
900139f8:	b149      	cbz	r1, 90013a0e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900139fa:	f7ec fdab 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900139fe:	6928      	ldr	r0, [r5, #16]
90013a00:	b168      	cbz	r0, 90013a1e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013a02:	6803      	ldr	r3, [r0, #0]
90013a04:	2101      	movs	r1, #1
90013a06:	695b      	ldr	r3, [r3, #20]
90013a08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013a0c:	4718      	bx	r3
90013a0e:	f7ec fdd5 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013a12:	6928      	ldr	r0, [r5, #16]
90013a14:	b118      	cbz	r0, 90013a1e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90013a16:	6803      	ldr	r3, [r0, #0]
90013a18:	4621      	mov	r1, r4
90013a1a:	695b      	ldr	r3, [r3, #20]
90013a1c:	e7f4      	b.n	90013a08 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90013a1e:	bd70      	pop	{r4, r5, r6, pc}

90013a20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90013a20:	b538      	push	{r3, r4, r5, lr}
90013a22:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90013a26:	4604      	mov	r4, r0
90013a28:	460d      	mov	r5, r1
90013a2a:	428b      	cmp	r3, r1
90013a2c:	d006      	beq.n	90013a3c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90013a2e:	6803      	ldr	r3, [r0, #0]
90013a30:	b929      	cbnz	r1, 90013a3e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90013a32:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90013a36:	4798      	blx	r3
90013a38:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90013a3c:	bd38      	pop	{r3, r4, r5, pc}
90013a3e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90013a42:	e7f8      	b.n	90013a36 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90013a44 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90013a44:	4b0d      	ldr	r3, [pc, #52]	; (90013a7c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90013a46:	b510      	push	{r4, lr}
90013a48:	781b      	ldrb	r3, [r3, #0]
90013a4a:	4604      	mov	r4, r0
90013a4c:	b95b      	cbnz	r3, 90013a66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013a4e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90013a52:	2b02      	cmp	r3, #2
90013a54:	d007      	beq.n	90013a66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013a56:	6840      	ldr	r0, [r0, #4]
90013a58:	f000 f91a 	bl	90013c90 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90013a5c:	b118      	cbz	r0, 90013a66 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90013a5e:	6862      	ldr	r2, [r4, #4]
90013a60:	7a53      	ldrb	r3, [r2, #9]
90013a62:	2b00      	cmp	r3, #0
90013a64:	d0fc      	beq.n	90013a60 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90013a66:	f7ed ff0f 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013a6a:	4620      	mov	r0, r4
90013a6c:	2100      	movs	r1, #0
90013a6e:	f7ff ffd7 	bl	90013a20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013a72:	4620      	mov	r0, r4
90013a74:	f7ff fd74 	bl	90013560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013a78:	bd10      	pop	{r4, pc}
90013a7a:	bf00      	nop
90013a7c:	24039aca 	.word	0x24039aca

90013a80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90013a80:	b570      	push	{r4, r5, r6, lr}
90013a82:	4604      	mov	r4, r0
90013a84:	6803      	ldr	r3, [r0, #0]
90013a86:	b919      	cbnz	r1, 90013a90 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90013a88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013a8e:	4718      	bx	r3
90013a90:	2200      	movs	r2, #0
90013a92:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90013a96:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90013a9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013a9c:	4798      	blx	r3
90013a9e:	6863      	ldr	r3, [r4, #4]
90013aa0:	2101      	movs	r1, #1
90013aa2:	4605      	mov	r5, r0
90013aa4:	4620      	mov	r0, r4
90013aa6:	7299      	strb	r1, [r3, #10]
90013aa8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90013aac:	f7ff ffb8 	bl	90013a20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013ab0:	4628      	mov	r0, r5
90013ab2:	bd70      	pop	{r4, r5, r6, pc}

90013ab4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90013ab4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90013ab8:	1a13      	subs	r3, r2, r0
90013aba:	4258      	negs	r0, r3
90013abc:	4158      	adcs	r0, r3
90013abe:	4770      	bx	lr

90013ac0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90013ac0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90013ac4:	1a9b      	subs	r3, r3, r2
90013ac6:	2b00      	cmp	r3, #0
90013ac8:	bfdc      	itt	le
90013aca:	6882      	ldrle	r2, [r0, #8]
90013acc:	189b      	addle	r3, r3, r2
90013ace:	2b01      	cmp	r3, #1
90013ad0:	bfcc      	ite	gt
90013ad2:	2000      	movgt	r0, #0
90013ad4:	2001      	movle	r0, #1
90013ad6:	4770      	bx	lr

90013ad8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90013ad8:	6902      	ldr	r2, [r0, #16]
90013ada:	6843      	ldr	r3, [r0, #4]
90013adc:	2024      	movs	r0, #36	; 0x24
90013ade:	fb00 3002 	mla	r0, r0, r2, r3
90013ae2:	4770      	bx	lr

90013ae4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90013ae4:	6803      	ldr	r3, [r0, #0]
90013ae6:	691b      	ldr	r3, [r3, #16]
90013ae8:	4718      	bx	r3

90013aea <_ZN8touchgfx13DMA_Interface7executeEv>:
90013aea:	2301      	movs	r3, #1
90013aec:	b570      	push	{r4, r5, r6, lr}
90013aee:	7203      	strb	r3, [r0, #8]
90013af0:	4604      	mov	r4, r0
90013af2:	6840      	ldr	r0, [r0, #4]
90013af4:	6803      	ldr	r3, [r0, #0]
90013af6:	699b      	ldr	r3, [r3, #24]
90013af8:	4798      	blx	r3
90013afa:	6803      	ldr	r3, [r0, #0]
90013afc:	4605      	mov	r5, r0
90013afe:	2b40      	cmp	r3, #64	; 0x40
90013b00:	d00c      	beq.n	90013b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013b02:	d810      	bhi.n	90013b26 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90013b04:	2b04      	cmp	r3, #4
90013b06:	d01d      	beq.n	90013b44 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90013b08:	d804      	bhi.n	90013b14 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90013b0a:	2b01      	cmp	r3, #1
90013b0c:	d006      	beq.n	90013b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013b0e:	2b02      	cmp	r3, #2
90013b10:	d02c      	beq.n	90013b6c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90013b12:	bd70      	pop	{r4, r5, r6, pc}
90013b14:	2b08      	cmp	r3, #8
90013b16:	d01d      	beq.n	90013b54 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90013b18:	2b20      	cmp	r3, #32
90013b1a:	d1fa      	bne.n	90013b12 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90013b1c:	6823      	ldr	r3, [r4, #0]
90013b1e:	4620      	mov	r0, r4
90013b20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013b22:	4798      	blx	r3
90013b24:	e013      	b.n	90013b4e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90013b26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90013b2a:	d0f7      	beq.n	90013b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013b2c:	d804      	bhi.n	90013b38 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90013b2e:	2b80      	cmp	r3, #128	; 0x80
90013b30:	d0f4      	beq.n	90013b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013b32:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90013b36:	e7f0      	b.n	90013b1a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90013b38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90013b3c:	d0ee      	beq.n	90013b1c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90013b3e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90013b42:	e7e5      	b.n	90013b10 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90013b44:	6823      	ldr	r3, [r4, #0]
90013b46:	7f01      	ldrb	r1, [r0, #28]
90013b48:	4620      	mov	r0, r4
90013b4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013b4c:	4798      	blx	r3
90013b4e:	6823      	ldr	r3, [r4, #0]
90013b50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90013b52:	e006      	b.n	90013b62 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90013b54:	6823      	ldr	r3, [r4, #0]
90013b56:	7f01      	ldrb	r1, [r0, #28]
90013b58:	4620      	mov	r0, r4
90013b5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013b5c:	4798      	blx	r3
90013b5e:	6823      	ldr	r3, [r4, #0]
90013b60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90013b62:	4629      	mov	r1, r5
90013b64:	4620      	mov	r0, r4
90013b66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013b6a:	4718      	bx	r3
90013b6c:	6823      	ldr	r3, [r4, #0]
90013b6e:	4620      	mov	r0, r4
90013b70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013b72:	4798      	blx	r3
90013b74:	e7f3      	b.n	90013b5e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90013b76 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90013b76:	4770      	bx	lr

90013b78 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90013b78:	4770      	bx	lr

90013b7a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90013b7a:	4770      	bx	lr

90013b7c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90013b7c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90013b80:	b510      	push	{r4, lr}
90013b82:	1ad2      	subs	r2, r2, r3
90013b84:	2a00      	cmp	r2, #0
90013b86:	bfdc      	itt	le
90013b88:	6884      	ldrle	r4, [r0, #8]
90013b8a:	1912      	addle	r2, r2, r4
90013b8c:	2a01      	cmp	r2, #1
90013b8e:	dd16      	ble.n	90013bbe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90013b90:	6842      	ldr	r2, [r0, #4]
90013b92:	2424      	movs	r4, #36	; 0x24
90013b94:	fb04 2303 	mla	r3, r4, r3, r2
90013b98:	f101 0220 	add.w	r2, r1, #32
90013b9c:	f851 4b04 	ldr.w	r4, [r1], #4
90013ba0:	4291      	cmp	r1, r2
90013ba2:	f843 4b04 	str.w	r4, [r3], #4
90013ba6:	d1f9      	bne.n	90013b9c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90013ba8:	780a      	ldrb	r2, [r1, #0]
90013baa:	701a      	strb	r2, [r3, #0]
90013bac:	68c3      	ldr	r3, [r0, #12]
90013bae:	6882      	ldr	r2, [r0, #8]
90013bb0:	f3bf 8f5b 	dmb	ish
90013bb4:	3301      	adds	r3, #1
90013bb6:	429a      	cmp	r2, r3
90013bb8:	bfd8      	it	le
90013bba:	1a9b      	suble	r3, r3, r2
90013bbc:	60c3      	str	r3, [r0, #12]
90013bbe:	bd10      	pop	{r4, pc}

90013bc0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90013bc0:	6903      	ldr	r3, [r0, #16]
90013bc2:	6882      	ldr	r2, [r0, #8]
90013bc4:	f3bf 8f5b 	dmb	ish
90013bc8:	3301      	adds	r3, #1
90013bca:	429a      	cmp	r2, r3
90013bcc:	bfd8      	it	le
90013bce:	1a9b      	suble	r3, r3, r2
90013bd0:	6103      	str	r3, [r0, #16]
90013bd2:	4770      	bx	lr

90013bd4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90013bd4:	b570      	push	{r4, r5, r6, lr}
90013bd6:	4604      	mov	r4, r0
90013bd8:	460e      	mov	r6, r1
90013bda:	6860      	ldr	r0, [r4, #4]
90013bdc:	6803      	ldr	r3, [r0, #0]
90013bde:	685b      	ldr	r3, [r3, #4]
90013be0:	4798      	blx	r3
90013be2:	2800      	cmp	r0, #0
90013be4:	d1f9      	bne.n	90013bda <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90013be6:	4d0d      	ldr	r5, [pc, #52]	; (90013c1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90013be8:	6828      	ldr	r0, [r5, #0]
90013bea:	6803      	ldr	r3, [r0, #0]
90013bec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013bee:	4798      	blx	r3
90013bf0:	f7ed fe58 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90013bf4:	6828      	ldr	r0, [r5, #0]
90013bf6:	2101      	movs	r1, #1
90013bf8:	f7ff ff12 	bl	90013a20 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90013bfc:	6860      	ldr	r0, [r4, #4]
90013bfe:	4631      	mov	r1, r6
90013c00:	6803      	ldr	r3, [r0, #0]
90013c02:	689b      	ldr	r3, [r3, #8]
90013c04:	4798      	blx	r3
90013c06:	6823      	ldr	r3, [r4, #0]
90013c08:	4620      	mov	r0, r4
90013c0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013c0c:	4798      	blx	r3
90013c0e:	6828      	ldr	r0, [r5, #0]
90013c10:	6803      	ldr	r3, [r0, #0]
90013c12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013c16:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90013c18:	4718      	bx	r3
90013c1a:	bf00      	nop
90013c1c:	24039acc 	.word	0x24039acc

90013c20 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90013c20:	b508      	push	{r3, lr}
90013c22:	f7ed fe31 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90013c26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90013c2a:	f7ed be35 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90013c2e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90013c2e:	b510      	push	{r4, lr}
90013c30:	4604      	mov	r4, r0
90013c32:	2114      	movs	r1, #20
90013c34:	f015 fc16 	bl	90029464 <_ZdlPvj>
90013c38:	4620      	mov	r0, r4
90013c3a:	bd10      	pop	{r4, pc}

90013c3c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90013c3c:	b570      	push	{r4, r5, r6, lr}
90013c3e:	4604      	mov	r4, r0
90013c40:	6840      	ldr	r0, [r0, #4]
90013c42:	6803      	ldr	r3, [r0, #0]
90013c44:	681b      	ldr	r3, [r3, #0]
90013c46:	4798      	blx	r3
90013c48:	4605      	mov	r5, r0
90013c4a:	b930      	cbnz	r0, 90013c5a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013c4c:	7a23      	ldrb	r3, [r4, #8]
90013c4e:	b123      	cbz	r3, 90013c5a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90013c50:	6860      	ldr	r0, [r4, #4]
90013c52:	6803      	ldr	r3, [r0, #0]
90013c54:	695b      	ldr	r3, [r3, #20]
90013c56:	4798      	blx	r3
90013c58:	7225      	strb	r5, [r4, #8]
90013c5a:	6860      	ldr	r0, [r4, #4]
90013c5c:	6803      	ldr	r3, [r0, #0]
90013c5e:	681b      	ldr	r3, [r3, #0]
90013c60:	4798      	blx	r3
90013c62:	b928      	cbnz	r0, 90013c70 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90013c64:	6823      	ldr	r3, [r4, #0]
90013c66:	4620      	mov	r0, r4
90013c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90013c6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013c6e:	4718      	bx	r3
90013c70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013c74:	f7ed be1e 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90013c78 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90013c78:	b510      	push	{r4, lr}
90013c7a:	6082      	str	r2, [r0, #8]
90013c7c:	2200      	movs	r2, #0
90013c7e:	4c03      	ldr	r4, [pc, #12]	; (90013c8c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90013c80:	e9c0 2203 	strd	r2, r2, [r0, #12]
90013c84:	e9c0 4100 	strd	r4, r1, [r0]
90013c88:	bd10      	pop	{r4, pc}
90013c8a:	bf00      	nop
90013c8c:	9002d5cc 	.word	0x9002d5cc

90013c90 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90013c90:	6840      	ldr	r0, [r0, #4]
90013c92:	6803      	ldr	r3, [r0, #0]
90013c94:	681b      	ldr	r3, [r3, #0]
90013c96:	4718      	bx	r3

90013c98 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013c98:	094a      	lsrs	r2, r1, #5
90013c9a:	4b06      	ldr	r3, [pc, #24]	; (90013cb4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90013c9c:	60c1      	str	r1, [r0, #12]
90013c9e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90013ca2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90013ca6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90013caa:	4313      	orrs	r3, r2
90013cac:	4319      	orrs	r1, r3
90013cae:	8201      	strh	r1, [r0, #16]
90013cb0:	4770      	bx	lr
90013cb2:	bf00      	nop
90013cb4:	fffff800 	.word	0xfffff800

90013cb8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90013cb8:	f1a0 0008 	sub.w	r0, r0, #8
90013cbc:	e7ec      	b.n	90013c98 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90013cbe:	bf00      	nop

90013cc0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90013cc0:	b508      	push	{r3, lr}
90013cc2:	4b05      	ldr	r3, [pc, #20]	; (90013cd8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90013cc4:	6818      	ldr	r0, [r3, #0]
90013cc6:	6803      	ldr	r3, [r0, #0]
90013cc8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90013ccc:	4798      	blx	r3
90013cce:	1e43      	subs	r3, r0, #1
90013cd0:	4258      	negs	r0, r3
90013cd2:	4158      	adcs	r0, r3
90013cd4:	bd08      	pop	{r3, pc}
90013cd6:	bf00      	nop
90013cd8:	24039acc 	.word	0x24039acc

90013cdc <_ZN8touchgfx13PainterRGB565D1Ev>:
90013cdc:	4770      	bx	lr

90013cde <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90013cde:	3808      	subs	r0, #8
90013ce0:	4770      	bx	lr

90013ce2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90013ce2:	b430      	push	{r4, r5}
90013ce4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90013ce8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90013cec:	8a02      	ldrh	r2, [r0, #16]
90013cee:	f89d 3010 	ldrb.w	r3, [sp, #16]
90013cf2:	4629      	mov	r1, r5
90013cf4:	9202      	str	r2, [sp, #8]
90013cf6:	68c2      	ldr	r2, [r0, #12]
90013cf8:	4620      	mov	r0, r4
90013cfa:	bc30      	pop	{r4, r5}
90013cfc:	f7ee b8b0 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90013d00 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90013d00:	f7ee b8a4 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

90013d04 <_ZN8touchgfx13PainterRGB565D0Ev>:
90013d04:	b510      	push	{r4, lr}
90013d06:	4604      	mov	r4, r0
90013d08:	2114      	movs	r1, #20
90013d0a:	f015 fbab 	bl	90029464 <_ZdlPvj>
90013d0e:	4620      	mov	r0, r4
90013d10:	bd10      	pop	{r4, pc}

90013d12 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90013d12:	f1a0 0008 	sub.w	r0, r0, #8
90013d16:	e7f5      	b.n	90013d04 <_ZN8touchgfx13PainterRGB565D0Ev>

90013d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90013d18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90013d1a:	6803      	ldr	r3, [r0, #0]
90013d1c:	460d      	mov	r5, r1
90013d1e:	4604      	mov	r4, r0
90013d20:	4601      	mov	r1, r0
90013d22:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013d24:	a802      	add	r0, sp, #8
90013d26:	4798      	blx	r3
90013d28:	6828      	ldr	r0, [r5, #0]
90013d2a:	6869      	ldr	r1, [r5, #4]
90013d2c:	466b      	mov	r3, sp
90013d2e:	c303      	stmia	r3!, {r0, r1}
90013d30:	4668      	mov	r0, sp
90013d32:	4619      	mov	r1, r3
90013d34:	f7fe ff84 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90013d38:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90013d3a:	b188      	cbz	r0, 90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d3c:	6803      	ldr	r3, [r0, #0]
90013d3e:	1d21      	adds	r1, r4, #4
90013d40:	68db      	ldr	r3, [r3, #12]
90013d42:	4798      	blx	r3
90013d44:	b160      	cbz	r0, 90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d46:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013d4a:	2b00      	cmp	r3, #0
90013d4c:	dd08      	ble.n	90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d4e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90013d52:	2d00      	cmp	r5, #0
90013d54:	dd04      	ble.n	90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d56:	4a2b      	ldr	r2, [pc, #172]	; (90013e04 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90013d58:	7812      	ldrb	r2, [r2, #0]
90013d5a:	b11a      	cbz	r2, 90013d64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90013d5c:	2a01      	cmp	r2, #1
90013d5e:	d029      	beq.n	90013db4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90013d60:	b004      	add	sp, #16
90013d62:	bd70      	pop	{r4, r5, r6, pc}
90013d64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013d68:	441d      	add	r5, r3
90013d6a:	b2ad      	uxth	r5, r5
90013d6c:	b22e      	sxth	r6, r5
90013d6e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90013d72:	42b3      	cmp	r3, r6
90013d74:	daf4      	bge.n	90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013d76:	6823      	ldr	r3, [r4, #0]
90013d78:	4669      	mov	r1, sp
90013d7a:	4620      	mov	r0, r4
90013d7c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013d7e:	4798      	blx	r3
90013d80:	b940      	cbnz	r0, 90013d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013d82:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90013d86:	2b01      	cmp	r3, #1
90013d88:	d004      	beq.n	90013d94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90013d8a:	3301      	adds	r3, #1
90013d8c:	105b      	asrs	r3, r3, #1
90013d8e:	f8ad 3006 	strh.w	r3, [sp, #6]
90013d92:	e7f0      	b.n	90013d76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90013d94:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90013d98:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013d9c:	4413      	add	r3, r2
90013d9e:	b29b      	uxth	r3, r3
90013da0:	441a      	add	r2, r3
90013da2:	f8ad 3002 	strh.w	r3, [sp, #2]
90013da6:	b212      	sxth	r2, r2
90013da8:	4296      	cmp	r6, r2
90013daa:	dae0      	bge.n	90013d6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013dac:	1aeb      	subs	r3, r5, r3
90013dae:	f8ad 3006 	strh.w	r3, [sp, #6]
90013db2:	e7dc      	b.n	90013d6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90013db4:	f8bd 5000 	ldrh.w	r5, [sp]
90013db8:	441d      	add	r5, r3
90013dba:	b2ad      	uxth	r5, r5
90013dbc:	b22e      	sxth	r6, r5
90013dbe:	f9bd 3000 	ldrsh.w	r3, [sp]
90013dc2:	42b3      	cmp	r3, r6
90013dc4:	dacc      	bge.n	90013d60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90013dc6:	6823      	ldr	r3, [r4, #0]
90013dc8:	4669      	mov	r1, sp
90013dca:	4620      	mov	r0, r4
90013dcc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90013dce:	4798      	blx	r3
90013dd0:	b940      	cbnz	r0, 90013de4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013dd2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90013dd6:	2b01      	cmp	r3, #1
90013dd8:	d004      	beq.n	90013de4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90013dda:	3301      	adds	r3, #1
90013ddc:	105b      	asrs	r3, r3, #1
90013dde:	f8ad 3004 	strh.w	r3, [sp, #4]
90013de2:	e7f0      	b.n	90013dc6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90013de4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90013de8:	f8bd 3000 	ldrh.w	r3, [sp]
90013dec:	4413      	add	r3, r2
90013dee:	b29b      	uxth	r3, r3
90013df0:	441a      	add	r2, r3
90013df2:	f8ad 3000 	strh.w	r3, [sp]
90013df6:	b212      	sxth	r2, r2
90013df8:	4296      	cmp	r6, r2
90013dfa:	dae0      	bge.n	90013dbe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013dfc:	1aeb      	subs	r3, r5, r3
90013dfe:	f8ad 3004 	strh.w	r3, [sp, #4]
90013e02:	e7dc      	b.n	90013dbe <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90013e04:	24039ac4 	.word	0x24039ac4

90013e08 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90013e08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90013e0a:	6803      	ldr	r3, [r0, #0]
90013e0c:	4604      	mov	r4, r0
90013e0e:	4601      	mov	r1, r0
90013e10:	4668      	mov	r0, sp
90013e12:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013e14:	4798      	blx	r3
90013e16:	2100      	movs	r1, #0
90013e18:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013e1c:	4668      	mov	r0, sp
90013e1e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013e22:	9102      	str	r1, [sp, #8]
90013e24:	a902      	add	r1, sp, #8
90013e26:	f8ad 200c 	strh.w	r2, [sp, #12]
90013e2a:	f8ad 300e 	strh.w	r3, [sp, #14]
90013e2e:	f7fe ff07 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90013e32:	6823      	ldr	r3, [r4, #0]
90013e34:	4669      	mov	r1, sp
90013e36:	4620      	mov	r0, r4
90013e38:	691b      	ldr	r3, [r3, #16]
90013e3a:	4798      	blx	r3
90013e3c:	b004      	add	sp, #16
90013e3e:	bd10      	pop	{r4, pc}

90013e40 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90013e40:	2101      	movs	r1, #1
90013e42:	2200      	movs	r2, #0
90013e44:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013e48:	490a      	ldr	r1, [pc, #40]	; (90013e74 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90013e4a:	8082      	strh	r2, [r0, #4]
90013e4c:	6001      	str	r1, [r0, #0]
90013e4e:	21ff      	movs	r1, #255	; 0xff
90013e50:	80c2      	strh	r2, [r0, #6]
90013e52:	8102      	strh	r2, [r0, #8]
90013e54:	8142      	strh	r2, [r0, #10]
90013e56:	8182      	strh	r2, [r0, #12]
90013e58:	81c2      	strh	r2, [r0, #14]
90013e5a:	8202      	strh	r2, [r0, #16]
90013e5c:	8242      	strh	r2, [r0, #18]
90013e5e:	61c2      	str	r2, [r0, #28]
90013e60:	8402      	strh	r2, [r0, #32]
90013e62:	8442      	strh	r2, [r0, #34]	; 0x22
90013e64:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90013e68:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90013e6c:	6282      	str	r2, [r0, #40]	; 0x28
90013e6e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013e72:	4770      	bx	lr
90013e74:	9002d628 	.word	0x9002d628

90013e78 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90013e78:	f101 0364 	add.w	r3, r1, #100	; 0x64
90013e7c:	4602      	mov	r2, r0
90013e7e:	cb03      	ldmia	r3!, {r0, r1}
90013e80:	6010      	str	r0, [r2, #0]
90013e82:	4610      	mov	r0, r2
90013e84:	6051      	str	r1, [r2, #4]
90013e86:	4770      	bx	lr

90013e88 <_ZN8touchgfx4LineD1Ev>:
90013e88:	4770      	bx	lr

90013e8a <_ZN8touchgfx4LineD0Ev>:
90013e8a:	b510      	push	{r4, lr}
90013e8c:	4604      	mov	r4, r0
90013e8e:	2170      	movs	r1, #112	; 0x70
90013e90:	f015 fae8 	bl	90029464 <_ZdlPvj>
90013e94:	4620      	mov	r0, r4
90013e96:	bd10      	pop	{r4, pc}

90013e98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90013e98:	b507      	push	{r0, r1, r2, lr}
90013e9a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90013e9e:	ab01      	add	r3, sp, #4
90013ea0:	6809      	ldr	r1, [r1, #0]
90013ea2:	6800      	ldr	r0, [r0, #0]
90013ea4:	f005 fc0e 	bl	900196c4 <_ZN8touchgfx6muldivElllRl>
90013ea8:	b003      	add	sp, #12
90013eaa:	f85d fb04 	ldr.w	pc, [sp], #4

90013eae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
90013eae:	6800      	ldr	r0, [r0, #0]
90013eb0:	2800      	cmp	r0, #0
90013eb2:	bfb9      	ittee	lt
90013eb4:	2320      	movlt	r3, #32
90013eb6:	fb90 f0f3 	sdivlt	r0, r0, r3
90013eba:	301f      	addge	r0, #31
90013ebc:	1140      	asrge	r0, r0, #5
90013ebe:	4770      	bx	lr

90013ec0 <_ZNK8touchgfx4Line17invalidateContentEv>:
90013ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013ec4:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
90013ec8:	b089      	sub	sp, #36	; 0x24
90013eca:	4604      	mov	r4, r0
90013ecc:	b353      	cbz	r3, 90013f24 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
90013ece:	6803      	ldr	r3, [r0, #0]
90013ed0:	4601      	mov	r1, r0
90013ed2:	a802      	add	r0, sp, #8
90013ed4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90013ed6:	4798      	blx	r3
90013ed8:	2220      	movs	r2, #32
90013eda:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
90013ede:	6b61      	ldr	r1, [r4, #52]	; 0x34
90013ee0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90013ee2:	f8d4 b000 	ldr.w	fp, [r4]
90013ee6:	fb9a f0f2 	sdiv	r0, sl, r2
90013eea:	fb91 f5f2 	sdiv	r5, r1, r2
90013eee:	fb93 f6f2 	sdiv	r6, r3, r2
90013ef2:	1b40      	subs	r0, r0, r5
90013ef4:	0076      	lsls	r6, r6, #1
90013ef6:	2800      	cmp	r0, #0
90013ef8:	bfb8      	it	lt
90013efa:	4240      	neglt	r0, r0
90013efc:	4286      	cmp	r6, r0
90013efe:	dc0c      	bgt.n	90013f1a <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90013f00:	6b25      	ldr	r5, [r4, #48]	; 0x30
90013f02:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90013f06:	fb95 f0f2 	sdiv	r0, r5, r2
90013f0a:	fb98 f7f2 	sdiv	r7, r8, r2
90013f0e:	1bc0      	subs	r0, r0, r7
90013f10:	2800      	cmp	r0, #0
90013f12:	bfb8      	it	lt
90013f14:	4240      	neglt	r0, r0
90013f16:	4286      	cmp	r6, r0
90013f18:	dd07      	ble.n	90013f2a <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
90013f1a:	f8db 3010 	ldr.w	r3, [fp, #16]
90013f1e:	a902      	add	r1, sp, #8
90013f20:	4620      	mov	r0, r4
90013f22:	4798      	blx	r3
90013f24:	b009      	add	sp, #36	; 0x24
90013f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013f2a:	eb01 060a 	add.w	r6, r1, sl
90013f2e:	2002      	movs	r0, #2
90013f30:	eb08 0705 	add.w	r7, r8, r5
90013f34:	3301      	adds	r3, #1
90013f36:	f10d 0920 	add.w	r9, sp, #32
90013f3a:	9101      	str	r1, [sp, #4]
90013f3c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90013f40:	fb96 f6f0 	sdiv	r6, r6, r0
90013f44:	fb97 f7f0 	sdiv	r7, r7, r0
90013f48:	4103      	asrs	r3, r0
90013f4a:	b236      	sxth	r6, r6
90013f4c:	b23f      	sxth	r7, r7
90013f4e:	f849 3d08 	str.w	r3, [r9, #-8]!
90013f52:	4648      	mov	r0, r9
90013f54:	fb96 f6f2 	sdiv	r6, r6, r2
90013f58:	fb97 f7f2 	sdiv	r7, r7, r2
90013f5c:	f7ff ffa7 	bl	90013eae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90013f60:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90013f64:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90013f68:	fa1f fe87 	uxth.w	lr, r7
90013f6c:	9901      	ldr	r1, [sp, #4]
90013f6e:	fa1f fc86 	uxth.w	ip, r6
90013f72:	4293      	cmp	r3, r2
90013f74:	b280      	uxth	r0, r0
90013f76:	eba1 0a0a 	sub.w	sl, r1, sl
90013f7a:	da54      	bge.n	90014026 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
90013f7c:	ebac 0100 	sub.w	r1, ip, r0
90013f80:	f1ba 0f00 	cmp.w	sl, #0
90013f84:	4460      	add	r0, ip
90013f86:	f9bd a008 	ldrsh.w	sl, [sp, #8]
90013f8a:	b289      	uxth	r1, r1
90013f8c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
90013f90:	b280      	uxth	r0, r0
90013f92:	b20e      	sxth	r6, r1
90013f94:	da29      	bge.n	90013fea <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
90013f96:	eba8 0505 	sub.w	r5, r8, r5
90013f9a:	2d00      	cmp	r5, #0
90013f9c:	da2a      	bge.n	90013ff4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90013f9e:	fa1f f88a 	uxth.w	r8, sl
90013fa2:	f8ad a010 	strh.w	sl, [sp, #16]
90013fa6:	fa1f f58c 	uxth.w	r5, ip
90013faa:	f8ad c012 	strh.w	ip, [sp, #18]
90013fae:	eba0 0008 	sub.w	r0, r0, r8
90013fb2:	4443      	add	r3, r8
90013fb4:	f8ad 6018 	strh.w	r6, [sp, #24]
90013fb8:	f8ad 0014 	strh.w	r0, [sp, #20]
90013fbc:	1a59      	subs	r1, r3, r1
90013fbe:	ebae 0005 	sub.w	r0, lr, r5
90013fc2:	f8ad 701a 	strh.w	r7, [sp, #26]
90013fc6:	f8ad 101c 	strh.w	r1, [sp, #28]
90013fca:	f8ad 0016 	strh.w	r0, [sp, #22]
90013fce:	442a      	add	r2, r5
90013fd0:	eba2 0e0e 	sub.w	lr, r2, lr
90013fd4:	f8ad e01e 	strh.w	lr, [sp, #30]
90013fd8:	f8db 3010 	ldr.w	r3, [fp, #16]
90013fdc:	a904      	add	r1, sp, #16
90013fde:	4620      	mov	r0, r4
90013fe0:	4798      	blx	r3
90013fe2:	6823      	ldr	r3, [r4, #0]
90013fe4:	4649      	mov	r1, r9
90013fe6:	691b      	ldr	r3, [r3, #16]
90013fe8:	e79a      	b.n	90013f20 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
90013fea:	d003      	beq.n	90013ff4 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
90013fec:	eba8 0505 	sub.w	r5, r8, r5
90013ff0:	2d00      	cmp	r5, #0
90013ff2:	dcd4      	bgt.n	90013f9e <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90013ff4:	fa1f f88a 	uxth.w	r8, sl
90013ff8:	f8ad 6010 	strh.w	r6, [sp, #16]
90013ffc:	fa1f f58c 	uxth.w	r5, ip
90014000:	f8ad c012 	strh.w	ip, [sp, #18]
90014004:	4443      	add	r3, r8
90014006:	eba0 0008 	sub.w	r0, r0, r8
9001400a:	f8ad a018 	strh.w	sl, [sp, #24]
9001400e:	1a59      	subs	r1, r3, r1
90014010:	ebae 0305 	sub.w	r3, lr, r5
90014014:	f8ad 701a 	strh.w	r7, [sp, #26]
90014018:	f8ad 1014 	strh.w	r1, [sp, #20]
9001401c:	f8ad 3016 	strh.w	r3, [sp, #22]
90014020:	f8ad 001c 	strh.w	r0, [sp, #28]
90014024:	e7d3      	b.n	90013fce <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90014026:	ebae 0100 	sub.w	r1, lr, r0
9001402a:	f1ba 0f00 	cmp.w	sl, #0
9001402e:	4470      	add	r0, lr
90014030:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90014034:	b289      	uxth	r1, r1
90014036:	f9bd e008 	ldrsh.w	lr, [sp, #8]
9001403a:	b280      	uxth	r0, r0
9001403c:	b20f      	sxth	r7, r1
9001403e:	da20      	bge.n	90014082 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90014040:	eba8 0505 	sub.w	r5, r8, r5
90014044:	2d00      	cmp	r5, #0
90014046:	da21      	bge.n	9001408c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90014048:	fa1f f88e 	uxth.w	r8, lr
9001404c:	f8ad e010 	strh.w	lr, [sp, #16]
90014050:	fa1f f58a 	uxth.w	r5, sl
90014054:	f8ad a012 	strh.w	sl, [sp, #18]
90014058:	4443      	add	r3, r8
9001405a:	ebac 0e08 	sub.w	lr, ip, r8
9001405e:	442a      	add	r2, r5
90014060:	1b40      	subs	r0, r0, r5
90014062:	eba3 0c0c 	sub.w	ip, r3, ip
90014066:	f8ad e014 	strh.w	lr, [sp, #20]
9001406a:	1a51      	subs	r1, r2, r1
9001406c:	f8ad 0016 	strh.w	r0, [sp, #22]
90014070:	f8ad 6018 	strh.w	r6, [sp, #24]
90014074:	f8ad 701a 	strh.w	r7, [sp, #26]
90014078:	f8ad c01c 	strh.w	ip, [sp, #28]
9001407c:	f8ad 101e 	strh.w	r1, [sp, #30]
90014080:	e7aa      	b.n	90013fd8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90014082:	d003      	beq.n	9001408c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90014084:	eba8 0505 	sub.w	r5, r8, r5
90014088:	2d00      	cmp	r5, #0
9001408a:	dcdd      	bgt.n	90014048 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
9001408c:	fa1f f58e 	uxth.w	r5, lr
90014090:	f8ad 7012 	strh.w	r7, [sp, #18]
90014094:	fa1f f88a 	uxth.w	r8, sl
90014098:	f8ad e010 	strh.w	lr, [sp, #16]
9001409c:	442b      	add	r3, r5
9001409e:	ebac 0705 	sub.w	r7, ip, r5
900140a2:	4442      	add	r2, r8
900140a4:	eba0 0008 	sub.w	r0, r0, r8
900140a8:	eba3 0c0c 	sub.w	ip, r3, ip
900140ac:	f8ad 7014 	strh.w	r7, [sp, #20]
900140b0:	1a51      	subs	r1, r2, r1
900140b2:	f8ad 6018 	strh.w	r6, [sp, #24]
900140b6:	f8ad a01a 	strh.w	sl, [sp, #26]
900140ba:	f8ad 1016 	strh.w	r1, [sp, #22]
900140be:	f8ad c01c 	strh.w	ip, [sp, #28]
900140c2:	f8ad 001e 	strh.w	r0, [sp, #30]
900140c6:	e787      	b.n	90013fd8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

900140c8 <_ZN8touchgfx7CWRUtil4sineEi>:
900140c8:	f44f 73b4 	mov.w	r3, #360	; 0x168
900140cc:	fb90 f2f3 	sdiv	r2, r0, r3
900140d0:	fb02 0013 	mls	r0, r2, r3, r0
900140d4:	2800      	cmp	r0, #0
900140d6:	bfb8      	it	lt
900140d8:	18c0      	addlt	r0, r0, r3
900140da:	4b0a      	ldr	r3, [pc, #40]	; (90014104 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
900140dc:	285a      	cmp	r0, #90	; 0x5a
900140de:	dc02      	bgt.n	900140e6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
900140e0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900140e4:	4770      	bx	lr
900140e6:	28b4      	cmp	r0, #180	; 0xb4
900140e8:	dc02      	bgt.n	900140f0 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
900140ea:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
900140ee:	e7f7      	b.n	900140e0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
900140f0:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
900140f4:	bfd4      	ite	le
900140f6:	38b4      	suble	r0, #180	; 0xb4
900140f8:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
900140fc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90014100:	4240      	negs	r0, r0
90014102:	4770      	bx	lr
90014104:	9002d6f4 	.word	0x9002d6f4

90014108 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90014108:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
9001410c:	f04f 0300 	mov.w	r3, #0
90014110:	bf2c      	ite	cs
90014112:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90014116:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
9001411a:	1899      	adds	r1, r3, r2
9001411c:	4288      	cmp	r0, r1
9001411e:	bf24      	itt	cs
90014120:	1853      	addcs	r3, r2, r1
90014122:	1a40      	subcs	r0, r0, r1
90014124:	0892      	lsrs	r2, r2, #2
90014126:	ea4f 0353 	mov.w	r3, r3, lsr #1
9001412a:	d1f6      	bne.n	9001411a <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
9001412c:	4618      	mov	r0, r3
9001412e:	4770      	bx	lr

90014130 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90014130:	b510      	push	{r4, lr}
90014132:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90014136:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
9001413a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
9001413e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90014142:	139b      	asrs	r3, r3, #14
90014144:	13a4      	asrs	r4, r4, #14
90014146:	429c      	cmp	r4, r3
90014148:	bfb8      	it	lt
9001414a:	461c      	movlt	r4, r3
9001414c:	2c01      	cmp	r4, #1
9001414e:	dd07      	ble.n	90014160 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90014150:	fb91 f1f4 	sdiv	r1, r1, r4
90014154:	fb90 f0f4 	sdiv	r0, r0, r4
90014158:	f7ff ffea 	bl	90014130 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001415c:	4360      	muls	r0, r4
9001415e:	bd10      	pop	{r4, pc}
90014160:	4340      	muls	r0, r0
90014162:	fb01 0001 	mla	r0, r1, r1, r0
90014166:	f7ff ffcf 	bl	90014108 <_ZN8touchgfx7CWRUtil5isqrtEm>
9001416a:	e7f8      	b.n	9001415e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

9001416c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
9001416c:	2800      	cmp	r0, #0
9001416e:	b508      	push	{r3, lr}
90014170:	da05      	bge.n	9001417e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90014172:	4240      	negs	r0, r0
90014174:	f7ff fffa 	bl	9001416c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014178:	4240      	negs	r0, r0
9001417a:	b240      	sxtb	r0, r0
9001417c:	bd08      	pop	{r3, pc}
9001417e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90014182:	dc11      	bgt.n	900141a8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90014184:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90014188:	dd09      	ble.n	9001419e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001418a:	4340      	muls	r0, r0
9001418c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
90014190:	f7ff ffba 	bl	90014108 <_ZN8touchgfx7CWRUtil5isqrtEm>
90014194:	f7ff ffea 	bl	9001416c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90014198:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
9001419c:	e7ed      	b.n	9001417a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
9001419e:	3003      	adds	r0, #3
900141a0:	4b02      	ldr	r3, [pc, #8]	; (900141ac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
900141a2:	10c0      	asrs	r0, r0, #3
900141a4:	5618      	ldrsb	r0, [r3, r0]
900141a6:	e7e9      	b.n	9001417c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900141a8:	2000      	movs	r0, #0
900141aa:	e7e7      	b.n	9001417c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900141ac:	9002d698 	.word	0x9002d698

900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
900141b0:	4281      	cmp	r1, r0
900141b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
900141b4:	460c      	mov	r4, r1
900141b6:	4615      	mov	r5, r2
900141b8:	dd07      	ble.n	900141ca <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
900141ba:	4601      	mov	r1, r0
900141bc:	4620      	mov	r0, r4
900141be:	f7ff fff7 	bl	900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900141c2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900141c6:	b003      	add	sp, #12
900141c8:	bd30      	pop	{r4, r5, pc}
900141ca:	f7ff ffb1 	bl	90014130 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900141ce:	6028      	str	r0, [r5, #0]
900141d0:	2800      	cmp	r0, #0
900141d2:	d0f8      	beq.n	900141c6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
900141d4:	4602      	mov	r2, r0
900141d6:	ab01      	add	r3, sp, #4
900141d8:	f44f 6180 	mov.w	r1, #1024	; 0x400
900141dc:	4620      	mov	r0, r4
900141de:	f005 fa71 	bl	900196c4 <_ZN8touchgfx6muldivElllRl>
900141e2:	f7ff ffc3 	bl	9001416c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900141e6:	e7ee      	b.n	900141c6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

900141e8 <_ZN8touchgfx4LineC1Ev>:
900141e8:	b510      	push	{r4, lr}
900141ea:	4604      	mov	r4, r0
900141ec:	f7ff fe28 	bl	90013e40 <_ZN8touchgfx12CanvasWidgetC1Ev>
900141f0:	4b0c      	ldr	r3, [pc, #48]	; (90014224 <_ZN8touchgfx4LineC1Ev+0x3c>)
900141f2:	2220      	movs	r2, #32
900141f4:	4620      	mov	r0, r4
900141f6:	6023      	str	r3, [r4, #0]
900141f8:	2300      	movs	r3, #0
900141fa:	63e2      	str	r2, [r4, #60]	; 0x3c
900141fc:	2212      	movs	r2, #18
900141fe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90014202:	66e2      	str	r2, [r4, #108]	; 0x6c
90014204:	60a3      	str	r3, [r4, #8]
90014206:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
9001420a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
9001420e:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90014212:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90014216:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
9001421a:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
9001421e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90014222:	bd10      	pop	{r4, pc}
90014224:	9002d7b4 	.word	0x9002d7b4

90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90014228:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001422c:	6b47      	ldr	r7, [r0, #52]	; 0x34
9001422e:	4604      	mov	r4, r0
90014230:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014232:	6b85      	ldr	r5, [r0, #56]	; 0x38
90014234:	6b02      	ldr	r2, [r0, #48]	; 0x30
90014236:	1aff      	subs	r7, r7, r3
90014238:	eba5 0502 	sub.w	r5, r5, r2
9001423c:	d142      	bne.n	900142c4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
9001423e:	b955      	cbnz	r5, 90014256 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90014240:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
90014244:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
90014248:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001424c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
90014250:	b002      	add	sp, #8
90014252:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90014256:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
9001425a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
9001425e:	4629      	mov	r1, r5
90014260:	2502      	movs	r5, #2
90014262:	4642      	mov	r2, r8
90014264:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90014266:	f005 fa4c 	bl	90019702 <_ZN8touchgfx6muldivElll>
9001426a:	4642      	mov	r2, r8
9001426c:	4639      	mov	r1, r7
9001426e:	fb90 f6f5 	sdiv	r6, r0, r5
90014272:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90014274:	f005 fa45 	bl	90019702 <_ZN8touchgfx6muldivElll>
90014278:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
9001427c:	fb90 f5f5 	sdiv	r5, r0, r5
90014280:	f1b9 0f00 	cmp.w	r9, #0
90014284:	d067      	beq.n	90014356 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90014286:	f1b9 0f02 	cmp.w	r9, #2
9001428a:	d878      	bhi.n	9001437e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
9001428c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001428e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90014290:	1b93      	subs	r3, r2, r6
90014292:	4432      	add	r2, r6
90014294:	1b5b      	subs	r3, r3, r5
90014296:	1b52      	subs	r2, r2, r5
90014298:	6463      	str	r3, [r4, #68]	; 0x44
9001429a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001429c:	6522      	str	r2, [r4, #80]	; 0x50
9001429e:	18e9      	adds	r1, r5, r3
900142a0:	1b5b      	subs	r3, r3, r5
900142a2:	1b89      	subs	r1, r1, r6
900142a4:	1b9b      	subs	r3, r3, r6
900142a6:	6561      	str	r1, [r4, #84]	; 0x54
900142a8:	1b81      	subs	r1, r0, r6
900142aa:	4430      	add	r0, r6
900142ac:	4429      	add	r1, r5
900142ae:	4428      	add	r0, r5
900142b0:	64a1      	str	r1, [r4, #72]	; 0x48
900142b2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
900142b4:	64e0      	str	r0, [r4, #76]	; 0x4c
900142b6:	186f      	adds	r7, r5, r1
900142b8:	1b49      	subs	r1, r1, r5
900142ba:	4437      	add	r7, r6
900142bc:	4431      	add	r1, r6
900142be:	65a7      	str	r7, [r4, #88]	; 0x58
900142c0:	65e1      	str	r1, [r4, #92]	; 0x5c
900142c2:	e05b      	b.n	9001437c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
900142c4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
900142c8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
900142cc:	2d00      	cmp	r5, #0
900142ce:	d0c6      	beq.n	9001425e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
900142d0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
900142d4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
900142d8:	fb93 f2f8 	sdiv	r2, r3, r8
900142dc:	fb08 3312 	mls	r3, r8, r2, r3
900142e0:	b353      	cbz	r3, 90014338 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
900142e2:	fb98 f2f3 	sdiv	r2, r8, r3
900142e6:	fb03 8812 	mls	r8, r3, r2, r8
900142ea:	f1b8 0f00 	cmp.w	r8, #0
900142ee:	d1f3      	bne.n	900142d8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
900142f0:	2b01      	cmp	r3, #1
900142f2:	f24b 5104 	movw	r1, #46340	; 0xb504
900142f6:	bf1c      	itt	ne
900142f8:	fb97 f7f3 	sdivne	r7, r7, r3
900142fc:	fb95 f5f3 	sdivne	r5, r5, r3
90014300:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90014304:	4608      	mov	r0, r1
90014306:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
9001430a:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
9001430e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90014312:	428b      	cmp	r3, r1
90014314:	dd01      	ble.n	9001431a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90014316:	428a      	cmp	r2, r1
90014318:	dc10      	bgt.n	9001433c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
9001431a:	fb90 f3f3 	sdiv	r3, r0, r3
9001431e:	fb90 f2f2 	sdiv	r2, r0, r2
90014322:	4293      	cmp	r3, r2
90014324:	bfa8      	it	ge
90014326:	4613      	movge	r3, r2
90014328:	435f      	muls	r7, r3
9001432a:	435d      	muls	r5, r3
9001432c:	4629      	mov	r1, r5
9001432e:	4638      	mov	r0, r7
90014330:	f7ff fefe 	bl	90014130 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90014334:	4680      	mov	r8, r0
90014336:	e792      	b.n	9001425e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90014338:	4643      	mov	r3, r8
9001433a:	e7d9      	b.n	900142f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
9001433c:	fb93 f3f1 	sdiv	r3, r3, r1
90014340:	fb92 f2f1 	sdiv	r2, r2, r1
90014344:	4293      	cmp	r3, r2
90014346:	bfcc      	ite	gt
90014348:	3301      	addgt	r3, #1
9001434a:	1c53      	addle	r3, r2, #1
9001434c:	fb97 f7f3 	sdiv	r7, r7, r3
90014350:	fb95 f5f3 	sdiv	r5, r5, r3
90014354:	e7ea      	b.n	9001432c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90014356:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90014358:	6b60      	ldr	r0, [r4, #52]	; 0x34
9001435a:	1b93      	subs	r3, r2, r6
9001435c:	4432      	add	r2, r6
9001435e:	6463      	str	r3, [r4, #68]	; 0x44
90014360:	6b23      	ldr	r3, [r4, #48]	; 0x30
90014362:	6522      	str	r2, [r4, #80]	; 0x50
90014364:	18e9      	adds	r1, r5, r3
90014366:	1b5b      	subs	r3, r3, r5
90014368:	6561      	str	r1, [r4, #84]	; 0x54
9001436a:	1b81      	subs	r1, r0, r6
9001436c:	4430      	add	r0, r6
9001436e:	64a1      	str	r1, [r4, #72]	; 0x48
90014370:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90014372:	64e0      	str	r0, [r4, #76]	; 0x4c
90014374:	186f      	adds	r7, r5, r1
90014376:	1b49      	subs	r1, r1, r5
90014378:	65a7      	str	r7, [r4, #88]	; 0x58
9001437a:	65e1      	str	r1, [r4, #92]	; 0x5c
9001437c:	6623      	str	r3, [r4, #96]	; 0x60
9001437e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90014380:	f104 0148 	add.w	r1, r4, #72	; 0x48
90014384:	6d63      	ldr	r3, [r4, #84]	; 0x54
90014386:	f104 0c54 	add.w	ip, r4, #84	; 0x54
9001438a:	9200      	str	r2, [sp, #0]
9001438c:	9301      	str	r3, [sp, #4]
9001438e:	680f      	ldr	r7, [r1, #0]
90014390:	3104      	adds	r1, #4
90014392:	9800      	ldr	r0, [sp, #0]
90014394:	42ba      	cmp	r2, r7
90014396:	bfa8      	it	ge
90014398:	463a      	movge	r2, r7
9001439a:	4287      	cmp	r7, r0
9001439c:	9801      	ldr	r0, [sp, #4]
9001439e:	bfc8      	it	gt
900143a0:	9700      	strgt	r7, [sp, #0]
900143a2:	68cf      	ldr	r7, [r1, #12]
900143a4:	42bb      	cmp	r3, r7
900143a6:	bfa8      	it	ge
900143a8:	463b      	movge	r3, r7
900143aa:	4287      	cmp	r7, r0
900143ac:	bfc8      	it	gt
900143ae:	9701      	strgt	r7, [sp, #4]
900143b0:	458c      	cmp	ip, r1
900143b2:	d1ec      	bne.n	9001438e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
900143b4:	2720      	movs	r7, #32
900143b6:	4668      	mov	r0, sp
900143b8:	fb92 f8f7 	sdiv	r8, r2, r7
900143bc:	fb93 f7f7 	sdiv	r7, r3, r7
900143c0:	f7ff fd75 	bl	90013eae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900143c4:	4682      	mov	sl, r0
900143c6:	a801      	add	r0, sp, #4
900143c8:	f7ff fd71 	bl	90013eae <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
900143cc:	ebaa 0208 	sub.w	r2, sl, r8
900143d0:	1bc0      	subs	r0, r0, r7
900143d2:	f1b9 0f01 	cmp.w	r9, #1
900143d6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
900143da:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
900143de:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
900143e2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
900143e6:	f47f af33 	bne.w	90014250 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
900143ea:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
900143ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
900143ee:	1b83      	subs	r3, r0, r6
900143f0:	6463      	str	r3, [r4, #68]	; 0x44
900143f2:	6b23      	ldr	r3, [r4, #48]	; 0x30
900143f4:	18ea      	adds	r2, r5, r3
900143f6:	6562      	str	r2, [r4, #84]	; 0x54
900143f8:	1b8a      	subs	r2, r1, r6
900143fa:	4431      	add	r1, r6
900143fc:	4406      	add	r6, r0
900143fe:	64a2      	str	r2, [r4, #72]	; 0x48
90014400:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90014402:	64e1      	str	r1, [r4, #76]	; 0x4c
90014404:	18af      	adds	r7, r5, r2
90014406:	1b52      	subs	r2, r2, r5
90014408:	1b5d      	subs	r5, r3, r5
9001440a:	6526      	str	r6, [r4, #80]	; 0x50
9001440c:	65a7      	str	r7, [r4, #88]	; 0x58
9001440e:	65e2      	str	r2, [r4, #92]	; 0x5c
90014410:	6625      	str	r5, [r4, #96]	; 0x60
90014412:	e71d      	b.n	90014250 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90014414 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90014414:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90014416:	428b      	cmp	r3, r1
90014418:	d102      	bne.n	90014420 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
9001441a:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001441c:	4293      	cmp	r3, r2
9001441e:	d003      	beq.n	90014428 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90014420:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
90014424:	f7ff bf00 	b.w	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
90014428:	4770      	bx	lr

9001442a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
9001442a:	6b43      	ldr	r3, [r0, #52]	; 0x34
9001442c:	428b      	cmp	r3, r1
9001442e:	d102      	bne.n	90014436 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90014430:	6b83      	ldr	r3, [r0, #56]	; 0x38
90014432:	4293      	cmp	r3, r2
90014434:	d003      	beq.n	9001443e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90014436:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
9001443a:	f7ff bef5 	b.w	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>
9001443e:	4770      	bx	lr

90014440 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90014440:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
90014444:	f7ff bef0 	b.w	90014228 <_ZN8touchgfx4Line17updateCachedShapeEv>

90014448 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90014448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001444c:	b0a0      	sub	sp, #128	; 0x80
9001444e:	4604      	mov	r4, r0
90014450:	460a      	mov	r2, r1
90014452:	4601      	mov	r1, r0
90014454:	a804      	add	r0, sp, #16
90014456:	f014 fda5 	bl	90028fa4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
9001445a:	2300      	movs	r3, #0
9001445c:	9301      	str	r3, [sp, #4]
9001445e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90014462:	2b01      	cmp	r3, #1
90014464:	d17c      	bne.n	90014560 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90014466:	6c60      	ldr	r0, [r4, #68]	; 0x44
90014468:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001446a:	6d61      	ldr	r1, [r4, #84]	; 0x54
9001446c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9001446e:	1ac0      	subs	r0, r0, r3
90014470:	eba1 0102 	sub.w	r1, r1, r2
90014474:	d437      	bmi.n	900144e6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90014476:	2900      	cmp	r1, #0
90014478:	aa01      	add	r2, sp, #4
9001447a:	db2e      	blt.n	900144da <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
9001447c:	f7ff fe98 	bl	900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014480:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90014484:	6d62      	ldr	r2, [r4, #84]	; 0x54
90014486:	a804      	add	r0, sp, #16
90014488:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001448a:	f014 ff0b 	bl	900292a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001448e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90014490:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90014492:	a804      	add	r0, sp, #16
90014494:	f014 ff53 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014498:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001449a:	2db3      	cmp	r5, #179	; 0xb3
9001449c:	dc33      	bgt.n	90014506 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
9001449e:	eba6 0805 	sub.w	r8, r6, r5
900144a2:	4640      	mov	r0, r8
900144a4:	f7ff fe10 	bl	900140c8 <_ZN8touchgfx7CWRUtil4sineEi>
900144a8:	a902      	add	r1, sp, #8
900144aa:	9002      	str	r0, [sp, #8]
900144ac:	a801      	add	r0, sp, #4
900144ae:	f7ff fcf3 	bl	90013e98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900144b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
900144b4:	1847      	adds	r7, r0, r1
900144b6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
900144ba:	f7ff fe05 	bl	900140c8 <_ZN8touchgfx7CWRUtil4sineEi>
900144be:	a903      	add	r1, sp, #12
900144c0:	9003      	str	r0, [sp, #12]
900144c2:	a801      	add	r0, sp, #4
900144c4:	f7ff fce8 	bl	90013e98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900144c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
900144ca:	4639      	mov	r1, r7
900144cc:	1a12      	subs	r2, r2, r0
900144ce:	a804      	add	r0, sp, #16
900144d0:	f014 ff35 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900144d4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
900144d6:	441d      	add	r5, r3
900144d8:	e7df      	b.n	9001449a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
900144da:	4249      	negs	r1, r1
900144dc:	f7ff fe68 	bl	900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900144e0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
900144e4:	e7ce      	b.n	90014484 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900144e6:	2900      	cmp	r1, #0
900144e8:	f1c0 0000 	rsb	r0, r0, #0
900144ec:	aa01      	add	r2, sp, #4
900144ee:	db04      	blt.n	900144fa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
900144f0:	f7ff fe5e 	bl	900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900144f4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
900144f8:	e7c4      	b.n	90014484 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
900144fa:	4249      	negs	r1, r1
900144fc:	f7ff fe58 	bl	900141b0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90014500:	f500 7687 	add.w	r6, r0, #270	; 0x10e
90014504:	e7be      	b.n	90014484 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90014506:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90014508:	a804      	add	r0, sp, #16
9001450a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9001450c:	f014 ff17 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014510:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014512:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014514:	a804      	add	r0, sp, #16
90014516:	f014 ff12 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001451a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9001451c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
90014520:	2d00      	cmp	r5, #0
90014522:	dd31      	ble.n	90014588 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
90014524:	eb05 0806 	add.w	r8, r5, r6
90014528:	4640      	mov	r0, r8
9001452a:	f7ff fdcd 	bl	900140c8 <_ZN8touchgfx7CWRUtil4sineEi>
9001452e:	a902      	add	r1, sp, #8
90014530:	9002      	str	r0, [sp, #8]
90014532:	a801      	add	r0, sp, #4
90014534:	f7ff fcb0 	bl	90013e98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90014538:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001453a:	1847      	adds	r7, r0, r1
9001453c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90014540:	f7ff fdc2 	bl	900140c8 <_ZN8touchgfx7CWRUtil4sineEi>
90014544:	a903      	add	r1, sp, #12
90014546:	9003      	str	r0, [sp, #12]
90014548:	a801      	add	r0, sp, #4
9001454a:	f7ff fca5 	bl	90013e98 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001454e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90014550:	4639      	mov	r1, r7
90014552:	1a12      	subs	r2, r2, r0
90014554:	a804      	add	r0, sp, #16
90014556:	f014 fef2 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001455a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
9001455c:	1aed      	subs	r5, r5, r3
9001455e:	e7df      	b.n	90014520 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90014560:	6d62      	ldr	r2, [r4, #84]	; 0x54
90014562:	a804      	add	r0, sp, #16
90014564:	6c61      	ldr	r1, [r4, #68]	; 0x44
90014566:	f014 fe9d 	bl	900292a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001456a:	6da2      	ldr	r2, [r4, #88]	; 0x58
9001456c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9001456e:	a804      	add	r0, sp, #16
90014570:	f014 fee5 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014574:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90014576:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90014578:	a804      	add	r0, sp, #16
9001457a:	f014 fee0 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001457e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90014580:	6d21      	ldr	r1, [r4, #80]	; 0x50
90014582:	a804      	add	r0, sp, #16
90014584:	f014 fedb 	bl	9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90014588:	21ff      	movs	r1, #255	; 0xff
9001458a:	a804      	add	r0, sp, #16
9001458c:	f014 fdc6 	bl	9002911c <_ZN8touchgfx6Canvas6renderEh>
90014590:	4b04      	ldr	r3, [pc, #16]	; (900145a4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90014592:	4604      	mov	r4, r0
90014594:	a80c      	add	r0, sp, #48	; 0x30
90014596:	9304      	str	r3, [sp, #16]
90014598:	f001 fa9c 	bl	90015ad4 <_ZN8touchgfx7OutlineD1Ev>
9001459c:	4620      	mov	r0, r4
9001459e:	b020      	add	sp, #128	; 0x80
900145a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900145a4:	9002dfd8 	.word	0x9002dfd8

900145a8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900145a8:	b508      	push	{r3, lr}
900145aa:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900145ae:	b10b      	cbz	r3, 900145b4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900145b0:	f7ed fe62 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900145b4:	bd08      	pop	{r3, pc}

900145b6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
900145b6:	6803      	ldr	r3, [r0, #0]
900145b8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
900145bc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900145be:	4718      	bx	r3

900145c0 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
900145c0:	4770      	bx	lr

900145c2 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
900145c2:	b510      	push	{r4, lr}
900145c4:	4604      	mov	r4, r0
900145c6:	212c      	movs	r1, #44	; 0x2c
900145c8:	f014 ff4c 	bl	90029464 <_ZdlPvj>
900145cc:	4620      	mov	r0, r4
900145ce:	bd10      	pop	{r4, pc}

900145d0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
900145d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900145d4:	2bff      	cmp	r3, #255	; 0xff
900145d6:	b510      	push	{r4, lr}
900145d8:	d104      	bne.n	900145e4 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
900145da:	8cca      	ldrh	r2, [r1, #38]	; 0x26
900145dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
900145e0:	429a      	cmp	r2, r3
900145e2:	d105      	bne.n	900145f0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
900145e4:	2300      	movs	r3, #0
900145e6:	8003      	strh	r3, [r0, #0]
900145e8:	8043      	strh	r3, [r0, #2]
900145ea:	8083      	strh	r3, [r0, #4]
900145ec:	80c3      	strh	r3, [r0, #6]
900145ee:	bd10      	pop	{r4, pc}
900145f0:	2300      	movs	r3, #0
900145f2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900145f6:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900145fa:	8003      	strh	r3, [r0, #0]
900145fc:	8043      	strh	r3, [r0, #2]
900145fe:	8084      	strh	r4, [r0, #4]
90014600:	80c2      	strh	r2, [r0, #6]
90014602:	e7f4      	b.n	900145ee <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

90014604 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
90014604:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014608:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001460c:	b087      	sub	sp, #28
9001460e:	4604      	mov	r4, r0
90014610:	4689      	mov	r9, r1
90014612:	b363      	cbz	r3, 9001466e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90014614:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
90014616:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001461a:	429a      	cmp	r2, r3
9001461c:	d027      	beq.n	9001466e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001461e:	ad06      	add	r5, sp, #24
90014620:	2700      	movs	r7, #0
90014622:	f825 2d0c 	strh.w	r2, [r5, #-12]!
90014626:	4628      	mov	r0, r5
90014628:	f006 ff88 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001462c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014630:	a904      	add	r1, sp, #16
90014632:	f8ad 0014 	strh.w	r0, [sp, #20]
90014636:	f8ad 3016 	strh.w	r3, [sp, #22]
9001463a:	4620      	mov	r0, r4
9001463c:	6823      	ldr	r3, [r4, #0]
9001463e:	9704      	str	r7, [sp, #16]
90014640:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014642:	4798      	blx	r3
90014644:	f7fe fde0 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90014648:	6803      	ldr	r3, [r0, #0]
9001464a:	4606      	mov	r6, r0
9001464c:	4628      	mov	r0, r5
9001464e:	f8d3 800c 	ldr.w	r8, [r3, #12]
90014652:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90014654:	f8ad 300c 	strh.w	r3, [sp, #12]
90014658:	f007 f85c 	bl	9001b714 <_ZNK8touchgfx6Bitmap7getDataEv>
9001465c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90014660:	4601      	mov	r1, r0
90014662:	9701      	str	r7, [sp, #4]
90014664:	aa04      	add	r2, sp, #16
90014666:	9300      	str	r3, [sp, #0]
90014668:	4630      	mov	r0, r6
9001466a:	464b      	mov	r3, r9
9001466c:	47c0      	blx	r8
9001466e:	b007      	add	sp, #28
90014670:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90014674 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
90014674:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90014676:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001467a:	460d      	mov	r5, r1
9001467c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90014680:	2100      	movs	r1, #0
90014682:	f8ad 3006 	strh.w	r3, [sp, #6]
90014686:	4604      	mov	r4, r0
90014688:	6803      	ldr	r3, [r0, #0]
9001468a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001468e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014690:	9100      	str	r1, [sp, #0]
90014692:	4669      	mov	r1, sp
90014694:	4798      	blx	r3
90014696:	4621      	mov	r1, r4
90014698:	a802      	add	r0, sp, #8
9001469a:	f004 fee1 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001469e:	f7fe fdb3 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
900146a2:	6803      	ldr	r3, [r0, #0]
900146a4:	aa02      	add	r2, sp, #8
900146a6:	4669      	mov	r1, sp
900146a8:	695e      	ldr	r6, [r3, #20]
900146aa:	462b      	mov	r3, r5
900146ac:	47b0      	blx	r6
900146ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
900146b2:	2800      	cmp	r0, #0
900146b4:	bf08      	it	eq
900146b6:	461d      	moveq	r5, r3
900146b8:	84e5      	strh	r5, [r4, #38]	; 0x26
900146ba:	b004      	add	sp, #16
900146bc:	bd70      	pop	{r4, r5, r6, pc}
	...

900146c0 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
900146c0:	2200      	movs	r2, #0
900146c2:	8082      	strh	r2, [r0, #4]
900146c4:	80c2      	strh	r2, [r0, #6]
900146c6:	8102      	strh	r2, [r0, #8]
900146c8:	8142      	strh	r2, [r0, #10]
900146ca:	8182      	strh	r2, [r0, #12]
900146cc:	81c2      	strh	r2, [r0, #14]
900146ce:	8202      	strh	r2, [r0, #16]
900146d0:	8242      	strh	r2, [r0, #18]
900146d2:	61c2      	str	r2, [r0, #28]
900146d4:	8402      	strh	r2, [r0, #32]
900146d6:	8442      	strh	r2, [r0, #34]	; 0x22
900146d8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900146dc:	e9c0 2205 	strd	r2, r2, [r0, #20]
900146e0:	2201      	movs	r2, #1
900146e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
900146e6:	4a04      	ldr	r2, [pc, #16]	; (900146f8 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
900146e8:	6002      	str	r2, [r0, #0]
900146ea:	f64f 72ff 	movw	r2, #65535	; 0xffff
900146ee:	84c2      	strh	r2, [r0, #38]	; 0x26
900146f0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900146f4:	4770      	bx	lr
900146f6:	bf00      	nop
900146f8:	9002d82c 	.word	0x9002d82c

900146fc <_ZNK8touchgfx5Image17invalidateContentEv>:
900146fc:	b508      	push	{r3, lr}
900146fe:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014702:	b10b      	cbz	r3, 90014708 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90014704:	f7ed fdb8 	bl	90002278 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90014708:	bd08      	pop	{r3, pc}

9001470a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
9001470a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
9001470e:	4770      	bx	lr

90014710 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90014710:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90014714:	4770      	bx	lr

90014716 <_ZN8touchgfx13ScalableImageD1Ev>:
90014716:	4770      	bx	lr

90014718 <_ZN8touchgfx13ScalableImageD0Ev>:
90014718:	b510      	push	{r4, lr}
9001471a:	4604      	mov	r4, r0
9001471c:	212c      	movs	r1, #44	; 0x2c
9001471e:	f014 fea1 	bl	90029464 <_ZdlPvj>
90014722:	4620      	mov	r0, r4
90014724:	bd10      	pop	{r4, pc}

90014726 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90014726:	b5f0      	push	{r4, r5, r6, r7, lr}
90014728:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001472c:	b085      	sub	sp, #20
9001472e:	4604      	mov	r4, r0
90014730:	460d      	mov	r5, r1
90014732:	2bff      	cmp	r3, #255	; 0xff
90014734:	d128      	bne.n	90014788 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014736:	f101 0626 	add.w	r6, r1, #38	; 0x26
9001473a:	4668      	mov	r0, sp
9001473c:	4631      	mov	r1, r6
9001473e:	f006 ff65 	bl	9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90014742:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90014746:	4630      	mov	r0, r6
90014748:	f006 fef8 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001474c:	4287      	cmp	r7, r0
9001474e:	d11b      	bne.n	90014788 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90014750:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90014754:	4630      	mov	r0, r6
90014756:	f006 ff25 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001475a:	4287      	cmp	r7, r0
9001475c:	d114      	bne.n	90014788 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001475e:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90014762:	2100      	movs	r1, #0
90014764:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90014768:	f8ad 300e 	strh.w	r3, [sp, #14]
9001476c:	466b      	mov	r3, sp
9001476e:	9102      	str	r1, [sp, #8]
90014770:	f8ad 200c 	strh.w	r2, [sp, #12]
90014774:	cb03      	ldmia	r3!, {r0, r1}
90014776:	6020      	str	r0, [r4, #0]
90014778:	4620      	mov	r0, r4
9001477a:	6061      	str	r1, [r4, #4]
9001477c:	4619      	mov	r1, r3
9001477e:	f7fe fa5f 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90014782:	4620      	mov	r0, r4
90014784:	b005      	add	sp, #20
90014786:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014788:	2300      	movs	r3, #0
9001478a:	8023      	strh	r3, [r4, #0]
9001478c:	8063      	strh	r3, [r4, #2]
9001478e:	80a3      	strh	r3, [r4, #4]
90014790:	80e3      	strh	r3, [r4, #6]
90014792:	e7f6      	b.n	90014782 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90014794 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90014794:	b538      	push	{r3, r4, r5, lr}
90014796:	2300      	movs	r3, #0
90014798:	2501      	movs	r5, #1
9001479a:	4604      	mov	r4, r0
9001479c:	8083      	strh	r3, [r0, #4]
9001479e:	80c3      	strh	r3, [r0, #6]
900147a0:	8103      	strh	r3, [r0, #8]
900147a2:	8143      	strh	r3, [r0, #10]
900147a4:	8183      	strh	r3, [r0, #12]
900147a6:	81c3      	strh	r3, [r0, #14]
900147a8:	8203      	strh	r3, [r0, #16]
900147aa:	8243      	strh	r3, [r0, #18]
900147ac:	61c3      	str	r3, [r0, #28]
900147ae:	8403      	strh	r3, [r0, #32]
900147b0:	8443      	strh	r3, [r0, #34]	; 0x22
900147b2:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
900147b6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
900147ba:	e9c0 3305 	strd	r3, r3, [r0, #20]
900147be:	4b07      	ldr	r3, [pc, #28]	; (900147dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
900147c0:	6003      	str	r3, [r0, #0]
900147c2:	880b      	ldrh	r3, [r1, #0]
900147c4:	84c3      	strh	r3, [r0, #38]	; 0x26
900147c6:	23ff      	movs	r3, #255	; 0xff
900147c8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
900147cc:	f001 f81d 	bl	9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900147d0:	4b03      	ldr	r3, [pc, #12]	; (900147e0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900147d2:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
900147d6:	4620      	mov	r0, r4
900147d8:	6023      	str	r3, [r4, #0]
900147da:	bd38      	pop	{r3, r4, r5, pc}
900147dc:	9002dae8 	.word	0x9002dae8
900147e0:	9002d89c 	.word	0x9002d89c

900147e4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900147e4:	4603      	mov	r3, r0
900147e6:	3026      	adds	r0, #38	; 0x26
900147e8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900147ec:	b90b      	cbnz	r3, 900147f2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900147ee:	f004 bedb 	b.w	900195a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900147f2:	f004 bee9 	b.w	900195c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900147f8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900147f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900147fc:	4604      	mov	r4, r0
900147fe:	b0b3      	sub	sp, #204	; 0xcc
90014800:	469b      	mov	fp, r3
90014802:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90014806:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001480a:	2500      	movs	r5, #0
9001480c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90014810:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
90014814:	ab11      	add	r3, sp, #68	; 0x44
90014816:	9206      	str	r2, [sp, #24]
90014818:	4618      	mov	r0, r3
9001481a:	9511      	str	r5, [sp, #68]	; 0x44
9001481c:	9307      	str	r3, [sp, #28]
9001481e:	ad13      	add	r5, sp, #76	; 0x4c
90014820:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
90014824:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90014828:	f7fe fa0a 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
9001482c:	9b07      	ldr	r3, [sp, #28]
9001482e:	e893 0003 	ldmia.w	r3, {r0, r1}
90014832:	e885 0003 	stmia.w	r5, {r0, r1}
90014836:	6821      	ldr	r1, [r4, #0]
90014838:	4620      	mov	r0, r4
9001483a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001483c:	4629      	mov	r1, r5
9001483e:	47b0      	blx	r6
90014840:	4621      	mov	r1, r4
90014842:	a815      	add	r0, sp, #84	; 0x54
90014844:	1d26      	adds	r6, r4, #4
90014846:	f004 fe0b 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001484a:	a815      	add	r0, sp, #84	; 0x54
9001484c:	f003 fb16 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014850:	9b07      	ldr	r3, [sp, #28]
90014852:	4631      	mov	r1, r6
90014854:	4618      	mov	r0, r3
90014856:	f003 fb55 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001485a:	4628      	mov	r0, r5
9001485c:	f104 0526 	add.w	r5, r4, #38	; 0x26
90014860:	f003 fb0c 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90014864:	4628      	mov	r0, r5
90014866:	f006 ff55 	bl	9001b714 <_ZNK8touchgfx6Bitmap7getDataEv>
9001486a:	9007      	str	r0, [sp, #28]
9001486c:	2800      	cmp	r0, #0
9001486e:	f000 80ce 	beq.w	90014a0e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90014872:	f8db 200c 	ldr.w	r2, [fp, #12]
90014876:	a809      	add	r0, sp, #36	; 0x24
90014878:	f8db 1000 	ldr.w	r1, [fp]
9001487c:	920c      	str	r2, [sp, #48]	; 0x30
9001487e:	f8da 2000 	ldr.w	r2, [sl]
90014882:	9109      	str	r1, [sp, #36]	; 0x24
90014884:	920d      	str	r2, [sp, #52]	; 0x34
90014886:	f8da 2004 	ldr.w	r2, [sl, #4]
9001488a:	f8db 1004 	ldr.w	r1, [fp, #4]
9001488e:	920e      	str	r2, [sp, #56]	; 0x38
90014890:	f8da 2008 	ldr.w	r2, [sl, #8]
90014894:	910a      	str	r1, [sp, #40]	; 0x28
90014896:	920f      	str	r2, [sp, #60]	; 0x3c
90014898:	f8db 1008 	ldr.w	r1, [fp, #8]
9001489c:	f8da 200c 	ldr.w	r2, [sl, #12]
900148a0:	910b      	str	r1, [sp, #44]	; 0x2c
900148a2:	a90d      	add	r1, sp, #52	; 0x34
900148a4:	9210      	str	r2, [sp, #64]	; 0x40
900148a6:	4632      	mov	r2, r6
900148a8:	f003 fb10 	bl	90017ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900148ac:	4632      	mov	r2, r6
900148ae:	a90e      	add	r1, sp, #56	; 0x38
900148b0:	a80a      	add	r0, sp, #40	; 0x28
900148b2:	f003 fb0b 	bl	90017ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900148b6:	4632      	mov	r2, r6
900148b8:	a90f      	add	r1, sp, #60	; 0x3c
900148ba:	a80b      	add	r0, sp, #44	; 0x2c
900148bc:	f003 fb06 	bl	90017ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900148c0:	4632      	mov	r2, r6
900148c2:	a910      	add	r1, sp, #64	; 0x40
900148c4:	a80c      	add	r0, sp, #48	; 0x30
900148c6:	f003 fb01 	bl	90017ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900148ca:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
900148ce:	ed97 3a00 	vldr	s6, [r7]
900148d2:	eef0 6a67 	vmov.f32	s13, s15
900148d6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
900148da:	edd7 4a01 	vldr	s9, [r7, #4]
900148de:	eeb0 7a67 	vmov.f32	s14, s15
900148e2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900148e6:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900148ea:	ed99 2a00 	vldr	s4, [r9]
900148ee:	eeb0 6a67 	vmov.f32	s12, s15
900148f2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900148f6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900148fa:	edd8 2a00 	vldr	s5, [r8]
900148fe:	edd9 3a01 	vldr	s7, [r9, #4]
90014902:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014906:	ed98 4a01 	vldr	s8, [r8, #4]
9001490a:	ed99 5a02 	vldr	s10, [r9, #8]
9001490e:	edd8 5a02 	vldr	s11, [r8, #8]
90014912:	ee16 6a10 	vmov	r6, s12
90014916:	eeb0 6a67 	vmov.f32	s12, s15
9001491a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
9001491e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90014922:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014926:	f8d8 c00c 	ldr.w	ip, [r8, #12]
9001492a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001492e:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90014932:	ee16 0a10 	vmov	r0, s12
90014936:	eeb0 6a67 	vmov.f32	s12, s15
9001493a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9001493e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90014942:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014946:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
9001494a:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
9001494e:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
90014952:	ee16 1a10 	vmov	r1, s12
90014956:	eeb0 6a67 	vmov.f32	s12, s15
9001495a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9001495e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
90014962:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014966:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
9001496a:	f8d7 a008 	ldr.w	sl, [r7, #8]
9001496e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
90014972:	68ff      	ldr	r7, [r7, #12]
90014974:	ee16 2a10 	vmov	r2, s12
90014978:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
9001497c:	9624      	str	r6, [sp, #144]	; 0x90
9001497e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90014982:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90014986:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
9001498a:	4628      	mov	r0, r5
9001498c:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90014990:	9b06      	ldr	r3, [sp, #24]
90014992:	922d      	str	r2, [sp, #180]	; 0xb4
90014994:	4a1f      	ldr	r2, [pc, #124]	; (90014a14 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90014996:	9317      	str	r3, [sp, #92]	; 0x5c
90014998:	8812      	ldrh	r2, [r2, #0]
9001499a:	9b07      	ldr	r3, [sp, #28]
9001499c:	9218      	str	r2, [sp, #96]	; 0x60
9001499e:	9319      	str	r3, [sp, #100]	; 0x64
900149a0:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
900149a4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
900149a8:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
900149ac:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
900149b0:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
900149b4:	9731      	str	r7, [sp, #196]	; 0xc4
900149b6:	f006 fedd 	bl	9001b774 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900149ba:	901a      	str	r0, [sp, #104]	; 0x68
900149bc:	4628      	mov	r0, r5
900149be:	f006 fdbd 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
900149c2:	901b      	str	r0, [sp, #108]	; 0x6c
900149c4:	4628      	mov	r0, r5
900149c6:	f006 fded 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900149ca:	901c      	str	r0, [sp, #112]	; 0x70
900149cc:	4628      	mov	r0, r5
900149ce:	f006 fdb5 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
900149d2:	4b11      	ldr	r3, [pc, #68]	; (90014a18 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
900149d4:	901d      	str	r0, [sp, #116]	; 0x74
900149d6:	681b      	ldr	r3, [r3, #0]
900149d8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900149dc:	b10a      	cbz	r2, 900149e2 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
900149de:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
900149e0:	b905      	cbnz	r5, 900149e4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
900149e2:	689d      	ldr	r5, [r3, #8]
900149e4:	682b      	ldr	r3, [r5, #0]
900149e6:	4620      	mov	r0, r4
900149e8:	6c1e      	ldr	r6, [r3, #64]	; 0x40
900149ea:	f7ff fefb 	bl	900147e4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900149ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
900149f2:	aa1e      	add	r2, sp, #120	; 0x78
900149f4:	a917      	add	r1, sp, #92	; 0x5c
900149f6:	9304      	str	r3, [sp, #16]
900149f8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900149fc:	e9cd 0302 	strd	r0, r3, [sp, #8]
90014a00:	ab13      	add	r3, sp, #76	; 0x4c
90014a02:	4628      	mov	r0, r5
90014a04:	9301      	str	r3, [sp, #4]
90014a06:	ab15      	add	r3, sp, #84	; 0x54
90014a08:	9300      	str	r3, [sp, #0]
90014a0a:	ab19      	add	r3, sp, #100	; 0x64
90014a0c:	47b0      	blx	r6
90014a0e:	b033      	add	sp, #204	; 0xcc
90014a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a14:	24039ac6 	.word	0x24039ac6
90014a18:	24039acc 	.word	0x24039acc

90014a1c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90014a1c:	b570      	push	{r4, r5, r6, lr}
90014a1e:	ed2d 8b04 	vpush	{d8-d9}
90014a22:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90014a26:	b098      	sub	sp, #96	; 0x60
90014a28:	4604      	mov	r4, r0
90014a2a:	460e      	mov	r6, r1
90014a2c:	2b00      	cmp	r3, #0
90014a2e:	d065      	beq.n	90014afc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90014a30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90014a34:	f100 0526 	add.w	r5, r0, #38	; 0x26
90014a38:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90014b18 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90014a3c:	ee09 3a10 	vmov	s18, r3
90014a40:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90014a44:	4628      	mov	r0, r5
90014a46:	ee08 3a90 	vmov	s17, r3
90014a4a:	4b34      	ldr	r3, [pc, #208]	; (90014b1c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90014a4c:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90014a50:	930c      	str	r3, [sp, #48]	; 0x30
90014a52:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90014a56:	930d      	str	r3, [sp, #52]	; 0x34
90014a58:	930e      	str	r3, [sp, #56]	; 0x38
90014a5a:	ee39 9a08 	vadd.f32	s18, s18, s16
90014a5e:	930f      	str	r3, [sp, #60]	; 0x3c
90014a60:	f006 fd6c 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
90014a64:	ee07 0a90 	vmov	s15, r0
90014a68:	4628      	mov	r0, r5
90014a6a:	ee78 8a88 	vadd.f32	s17, s17, s16
90014a6e:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90014a72:	f006 fd97 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90014a76:	4b2a      	ldr	r3, [pc, #168]	; (90014b20 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90014a78:	ee07 0a90 	vmov	s15, r0
90014a7c:	781b      	ldrb	r3, [r3, #0]
90014a7e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90014a82:	eef0 7a48 	vmov.f32	s15, s16
90014a86:	2b01      	cmp	r3, #1
90014a88:	d13c      	bne.n	90014b04 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90014a8a:	eef0 6a69 	vmov.f32	s13, s19
90014a8e:	ee19 3a90 	vmov	r3, s19
90014a92:	eeb0 6a47 	vmov.f32	s12, s14
90014a96:	eef0 5a47 	vmov.f32	s11, s14
90014a9a:	eef0 9a48 	vmov.f32	s19, s16
90014a9e:	eeb0 7a48 	vmov.f32	s14, s16
90014aa2:	9314      	str	r3, [sp, #80]	; 0x50
90014aa4:	ab14      	add	r3, sp, #80	; 0x50
90014aa6:	2200      	movs	r2, #0
90014aa8:	4631      	mov	r1, r6
90014aaa:	9303      	str	r3, [sp, #12]
90014aac:	ab10      	add	r3, sp, #64	; 0x40
90014aae:	4620      	mov	r0, r4
90014ab0:	edcd 7a04 	vstr	s15, [sp, #16]
90014ab4:	9302      	str	r3, [sp, #8]
90014ab6:	ab0c      	add	r3, sp, #48	; 0x30
90014ab8:	ed8d 9a05 	vstr	s18, [sp, #20]
90014abc:	9301      	str	r3, [sp, #4]
90014abe:	ab08      	add	r3, sp, #32
90014ac0:	ed8d 9a06 	vstr	s18, [sp, #24]
90014ac4:	9300      	str	r3, [sp, #0]
90014ac6:	ab04      	add	r3, sp, #16
90014ac8:	edcd 7a07 	vstr	s15, [sp, #28]
90014acc:	edcd 7a08 	vstr	s15, [sp, #32]
90014ad0:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90014ad4:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90014ad8:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90014adc:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90014ae0:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90014ae4:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90014ae8:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90014aec:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90014af0:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90014af4:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90014af8:	f7ff fe7e 	bl	900147f8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90014afc:	b018      	add	sp, #96	; 0x60
90014afe:	ecbd 8b04 	vpop	{d8-d9}
90014b02:	bd70      	pop	{r4, r5, r6, pc}
90014b04:	eef0 6a47 	vmov.f32	s13, s14
90014b08:	ee18 3a10 	vmov	r3, s16
90014b0c:	eef0 5a69 	vmov.f32	s11, s19
90014b10:	eeb0 6a48 	vmov.f32	s12, s16
90014b14:	e7c5      	b.n	90014aa2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90014b16:	bf00      	nop
90014b18:	00000000 	.word	0x00000000
90014b1c:	42c80000 	.word	0x42c80000
90014b20:	24039ac4 	.word	0x24039ac4

90014b24 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90014b24:	2000      	movs	r0, #0
90014b26:	4770      	bx	lr

90014b28 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90014b28:	4b07      	ldr	r3, [pc, #28]	; (90014b48 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90014b2a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90014b2c:	881b      	ldrh	r3, [r3, #0]
90014b2e:	4293      	cmp	r3, r2
90014b30:	bf81      	itttt	hi
90014b32:	4b06      	ldrhi	r3, [pc, #24]	; (90014b4c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90014b34:	681b      	ldrhi	r3, [r3, #0]
90014b36:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90014b3a:	7858      	ldrbhi	r0, [r3, #1]
90014b3c:	bf8c      	ite	hi
90014b3e:	f000 0003 	andhi.w	r0, r0, #3
90014b42:	2000      	movls	r0, #0
90014b44:	4770      	bx	lr
90014b46:	bf00      	nop
90014b48:	24039b28 	.word	0x24039b28
90014b4c:	24039b24 	.word	0x24039b24

90014b50 <_ZN8touchgfx8TextAreaD1Ev>:
90014b50:	4770      	bx	lr
	...

90014b54 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90014b54:	4b11      	ldr	r3, [pc, #68]	; (90014b9c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90014b56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014b5a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014b5c:	4604      	mov	r4, r0
90014b5e:	881b      	ldrh	r3, [r3, #0]
90014b60:	428b      	cmp	r3, r1
90014b62:	d918      	bls.n	90014b96 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90014b64:	6803      	ldr	r3, [r0, #0]
90014b66:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90014b68:	4b0d      	ldr	r3, [pc, #52]	; (90014ba0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90014b6a:	6818      	ldr	r0, [r3, #0]
90014b6c:	f7ef fd6c 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014b70:	6823      	ldr	r3, [r4, #0]
90014b72:	4606      	mov	r6, r0
90014b74:	4620      	mov	r0, r4
90014b76:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014b78:	4798      	blx	r3
90014b7a:	6823      	ldr	r3, [r4, #0]
90014b7c:	4607      	mov	r7, r0
90014b7e:	4620      	mov	r0, r4
90014b80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014b84:	4798      	blx	r3
90014b86:	463a      	mov	r2, r7
90014b88:	4603      	mov	r3, r0
90014b8a:	4631      	mov	r1, r6
90014b8c:	4620      	mov	r0, r4
90014b8e:	46ac      	mov	ip, r5
90014b90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014b94:	4760      	bx	ip
90014b96:	2000      	movs	r0, #0
90014b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014b9c:	24039b28 	.word	0x24039b28
90014ba0:	24039b30 	.word	0x24039b30

90014ba4 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90014ba4:	4b18      	ldr	r3, [pc, #96]	; (90014c08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90014ba6:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90014baa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90014bac:	4604      	mov	r4, r0
90014bae:	881b      	ldrh	r3, [r3, #0]
90014bb0:	428b      	cmp	r3, r1
90014bb2:	d926      	bls.n	90014c02 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90014bb4:	4b15      	ldr	r3, [pc, #84]	; (90014c0c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90014bb6:	681b      	ldr	r3, [r3, #0]
90014bb8:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90014bbc:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90014bc0:	4b13      	ldr	r3, [pc, #76]	; (90014c10 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90014bc2:	7855      	ldrb	r5, [r2, #1]
90014bc4:	681b      	ldr	r3, [r3, #0]
90014bc6:	f3c5 0581 	ubfx	r5, r5, #2, #2
90014bca:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90014bce:	6833      	ldr	r3, [r6, #0]
90014bd0:	69df      	ldr	r7, [r3, #28]
90014bd2:	4b10      	ldr	r3, [pc, #64]	; (90014c14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90014bd4:	6818      	ldr	r0, [r3, #0]
90014bd6:	f7ef fd37 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014bda:	6823      	ldr	r3, [r4, #0]
90014bdc:	4680      	mov	r8, r0
90014bde:	4620      	mov	r0, r4
90014be0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014be2:	4798      	blx	r3
90014be4:	6823      	ldr	r3, [r4, #0]
90014be6:	4681      	mov	r9, r0
90014be8:	4620      	mov	r0, r4
90014bea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014bee:	4798      	blx	r3
90014bf0:	464b      	mov	r3, r9
90014bf2:	9000      	str	r0, [sp, #0]
90014bf4:	4642      	mov	r2, r8
90014bf6:	4629      	mov	r1, r5
90014bf8:	4630      	mov	r0, r6
90014bfa:	47b8      	blx	r7
90014bfc:	b003      	add	sp, #12
90014bfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014c02:	2000      	movs	r0, #0
90014c04:	e7fa      	b.n	90014bfc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90014c06:	bf00      	nop
90014c08:	24039b28 	.word	0x24039b28
90014c0c:	24039b24 	.word	0x24039b24
90014c10:	24039b2c 	.word	0x24039b2c
90014c14:	24039b30 	.word	0x24039b30

90014c18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90014c18:	b40e      	push	{r1, r2, r3}
90014c1a:	4b30      	ldr	r3, [pc, #192]	; (90014cdc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90014c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014c20:	881a      	ldrh	r2, [r3, #0]
90014c22:	b09d      	sub	sp, #116	; 0x74
90014c24:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90014c26:	4604      	mov	r4, r0
90014c28:	429a      	cmp	r2, r3
90014c2a:	d954      	bls.n	90014cd6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90014c2c:	aa26      	add	r2, sp, #152	; 0x98
90014c2e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90014ce0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90014c32:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90014ce4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90014c36:	9202      	str	r2, [sp, #8]
90014c38:	f8d9 2000 	ldr.w	r2, [r9]
90014c3c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90014c40:	f8d8 3000 	ldr.w	r3, [r8]
90014c44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014c48:	682b      	ldr	r3, [r5, #0]
90014c4a:	4628      	mov	r0, r5
90014c4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014c4e:	4798      	blx	r3
90014c50:	4606      	mov	r6, r0
90014c52:	b207      	sxth	r7, r0
90014c54:	a803      	add	r0, sp, #12
90014c56:	f005 f8e4 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90014c5a:	682b      	ldr	r3, [r5, #0]
90014c5c:	4628      	mov	r0, r5
90014c5e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014c60:	4798      	blx	r3
90014c62:	682b      	ldr	r3, [r5, #0]
90014c64:	4682      	mov	sl, r0
90014c66:	4628      	mov	r0, r5
90014c68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014c6a:	4798      	blx	r3
90014c6c:	4653      	mov	r3, sl
90014c6e:	9000      	str	r0, [sp, #0]
90014c70:	a803      	add	r0, sp, #12
90014c72:	9a02      	ldr	r2, [sp, #8]
90014c74:	9925      	ldr	r1, [sp, #148]	; 0x94
90014c76:	f005 f92f 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014c7a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014c7c:	f8d9 3000 	ldr.w	r3, [r9]
90014c80:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90014c84:	8925      	ldrh	r5, [r4, #8]
90014c86:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90014c8a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90014c8e:	eba5 050c 	sub.w	r5, r5, ip
90014c92:	784a      	ldrb	r2, [r1, #1]
90014c94:	f8d8 3000 	ldr.w	r3, [r8]
90014c98:	b22d      	sxth	r5, r5
90014c9a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90014c9e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90014ca2:	9500      	str	r5, [sp, #0]
90014ca4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90014ca8:	a803      	add	r0, sp, #12
90014caa:	f002 fded 	bl	90017888 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90014cae:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90014cb2:	b203      	sxth	r3, r0
90014cb4:	18b9      	adds	r1, r7, r2
90014cb6:	2900      	cmp	r1, #0
90014cb8:	dd0b      	ble.n	90014cd2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90014cba:	3b01      	subs	r3, #1
90014cbc:	fb13 f302 	smulbb	r3, r3, r2
90014cc0:	fb16 3300 	smlabb	r3, r6, r0, r3
90014cc4:	b21f      	sxth	r7, r3
90014cc6:	4638      	mov	r0, r7
90014cc8:	b01d      	add	sp, #116	; 0x74
90014cca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014cce:	b003      	add	sp, #12
90014cd0:	4770      	bx	lr
90014cd2:	2b00      	cmp	r3, #0
90014cd4:	dcf7      	bgt.n	90014cc6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014cd6:	2700      	movs	r7, #0
90014cd8:	e7f5      	b.n	90014cc6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90014cda:	bf00      	nop
90014cdc:	24039b28 	.word	0x24039b28
90014ce0:	24039b24 	.word	0x24039b24
90014ce4:	24039b2c 	.word	0x24039b2c

90014ce8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90014ce8:	4bbd      	ldr	r3, [pc, #756]	; (90014fe0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90014cea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014cee:	460c      	mov	r4, r1
90014cf0:	881b      	ldrh	r3, [r3, #0]
90014cf2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90014cf4:	b0a9      	sub	sp, #164	; 0xa4
90014cf6:	4680      	mov	r8, r0
90014cf8:	428b      	cmp	r3, r1
90014cfa:	d809      	bhi.n	90014d10 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90014cfc:	2300      	movs	r3, #0
90014cfe:	f04f 32ff 	mov.w	r2, #4294967295
90014d02:	6083      	str	r3, [r0, #8]
90014d04:	e9c0 3200 	strd	r3, r2, [r0]
90014d08:	4640      	mov	r0, r8
90014d0a:	b029      	add	sp, #164	; 0xa4
90014d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014d10:	4eb4      	ldr	r6, [pc, #720]	; (90014fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90014d12:	6833      	ldr	r3, [r6, #0]
90014d14:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90014d18:	4bb3      	ldr	r3, [pc, #716]	; (90014fe8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90014d1a:	681b      	ldr	r3, [r3, #0]
90014d1c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90014d20:	4bb2      	ldr	r3, [pc, #712]	; (90014fec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014d22:	6818      	ldr	r0, [r3, #0]
90014d24:	f7ef fc90 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014d28:	682b      	ldr	r3, [r5, #0]
90014d2a:	4681      	mov	r9, r0
90014d2c:	4628      	mov	r0, r5
90014d2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014d30:	4798      	blx	r3
90014d32:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90014d34:	b203      	sxth	r3, r0
90014d36:	4682      	mov	sl, r0
90014d38:	4407      	add	r7, r0
90014d3a:	a80f      	add	r0, sp, #60	; 0x3c
90014d3c:	9304      	str	r3, [sp, #16]
90014d3e:	b2bb      	uxth	r3, r7
90014d40:	9303      	str	r3, [sp, #12]
90014d42:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90014d46:	2b00      	cmp	r3, #0
90014d48:	f040 80a5 	bne.w	90014e96 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90014d4c:	f005 f869 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90014d50:	682b      	ldr	r3, [r5, #0]
90014d52:	4628      	mov	r0, r5
90014d54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014d56:	4798      	blx	r3
90014d58:	682b      	ldr	r3, [r5, #0]
90014d5a:	4606      	mov	r6, r0
90014d5c:	4628      	mov	r0, r5
90014d5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014d60:	4798      	blx	r3
90014d62:	6823      	ldr	r3, [r4, #0]
90014d64:	4607      	mov	r7, r0
90014d66:	4620      	mov	r0, r4
90014d68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014d6a:	4798      	blx	r3
90014d6c:	6823      	ldr	r3, [r4, #0]
90014d6e:	4683      	mov	fp, r0
90014d70:	4620      	mov	r0, r4
90014d72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90014d76:	4798      	blx	r3
90014d78:	463b      	mov	r3, r7
90014d7a:	4649      	mov	r1, r9
90014d7c:	4632      	mov	r2, r6
90014d7e:	2600      	movs	r6, #0
90014d80:	e9cd b000 	strd	fp, r0, [sp]
90014d84:	a80f      	add	r0, sp, #60	; 0x3c
90014d86:	4637      	mov	r7, r6
90014d88:	f005 f8bb 	bl	90019f02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014d8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014d90:	f8df b250 	ldr.w	fp, [pc, #592]	; 90014fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90014d94:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014d98:	bf0c      	ite	eq
90014d9a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90014d9e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90014da2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90014da4:	4629      	mov	r1, r5
90014da6:	f8db 3000 	ldr.w	r3, [fp]
90014daa:	a80f      	add	r0, sp, #60	; 0x3c
90014dac:	3701      	adds	r7, #1
90014dae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90014db2:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014db6:	b2bf      	uxth	r7, r7
90014db8:	785b      	ldrb	r3, [r3, #1]
90014dba:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014dbe:	f002 fa7e 	bl	900172be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014dc2:	9b03      	ldr	r3, [sp, #12]
90014dc4:	4286      	cmp	r6, r0
90014dc6:	eba9 0903 	sub.w	r9, r9, r3
90014dca:	bfb8      	it	lt
90014dcc:	4606      	movlt	r6, r0
90014dce:	a80f      	add	r0, sp, #60	; 0x3c
90014dd0:	fa0f f989 	sxth.w	r9, r9
90014dd4:	b236      	sxth	r6, r6
90014dd6:	f005 f84b 	bl	90019e70 <_ZN8touchgfx12TextProvider11endOfStringEv>
90014dda:	b918      	cbnz	r0, 90014de4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014ddc:	7a2b      	ldrb	r3, [r5, #8]
90014dde:	444b      	add	r3, r9
90014de0:	2b00      	cmp	r3, #0
90014de2:	dcde      	bgt.n	90014da2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90014de4:	9b03      	ldr	r3, [sp, #12]
90014de6:	4620      	mov	r0, r4
90014de8:	9a04      	ldr	r2, [sp, #16]
90014dea:	fb13 f707 	smulbb	r7, r3, r7
90014dee:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90014df0:	f895 9009 	ldrb.w	r9, [r5, #9]
90014df4:	1aff      	subs	r7, r7, r3
90014df6:	b2bf      	uxth	r7, r7
90014df8:	b23b      	sxth	r3, r7
90014dfa:	429a      	cmp	r2, r3
90014dfc:	bfa8      	it	ge
90014dfe:	4657      	movge	r7, sl
90014e00:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014e04:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014e08:	6823      	ldr	r3, [r4, #0]
90014e0a:	444f      	add	r7, r9
90014e0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90014e0e:	bf08      	it	eq
90014e10:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90014e14:	fa1f f987 	uxth.w	r9, r7
90014e18:	bf18      	it	ne
90014e1a:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90014e1e:	4798      	blx	r3
90014e20:	2801      	cmp	r0, #1
90014e22:	fa0f f789 	sxth.w	r7, r9
90014e26:	b2b3      	uxth	r3, r6
90014e28:	f000 80e2 	beq.w	90014ff0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90014e2c:	2802      	cmp	r0, #2
90014e2e:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90014e32:	f000 80e3 	beq.w	90014ffc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90014e36:	7aea      	ldrb	r2, [r5, #11]
90014e38:	b236      	sxth	r6, r6
90014e3a:	7b2d      	ldrb	r5, [r5, #12]
90014e3c:	1ab6      	subs	r6, r6, r2
90014e3e:	442a      	add	r2, r5
90014e40:	fa1f fa86 	uxth.w	sl, r6
90014e44:	4413      	add	r3, r2
90014e46:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90014e4a:	fa0f fb8a 	sxth.w	fp, sl
90014e4e:	b29b      	uxth	r3, r3
90014e50:	2a02      	cmp	r2, #2
90014e52:	b21e      	sxth	r6, r3
90014e54:	f000 80d6 	beq.w	90015004 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90014e58:	2a03      	cmp	r2, #3
90014e5a:	f000 80de 	beq.w	9001501a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90014e5e:	2a01      	cmp	r2, #1
90014e60:	f040 80e6 	bne.w	90015030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90014e64:	8925      	ldrh	r5, [r4, #8]
90014e66:	4633      	mov	r3, r6
90014e68:	463e      	mov	r6, r7
90014e6a:	eba5 0909 	sub.w	r9, r5, r9
90014e6e:	461f      	mov	r7, r3
90014e70:	465d      	mov	r5, fp
90014e72:	fa0f fb89 	sxth.w	fp, r9
90014e76:	4b5d      	ldr	r3, [pc, #372]	; (90014fec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90014e78:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90014e7a:	6818      	ldr	r0, [r3, #0]
90014e7c:	f7ef fbe4 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90014e80:	f8a8 b000 	strh.w	fp, [r8]
90014e84:	f8a8 5002 	strh.w	r5, [r8, #2]
90014e88:	f8a8 6004 	strh.w	r6, [r8, #4]
90014e8c:	f8a8 7006 	strh.w	r7, [r8, #6]
90014e90:	f8c8 0008 	str.w	r0, [r8, #8]
90014e94:	e738      	b.n	90014d08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90014e96:	f004 ffc4 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90014e9a:	682b      	ldr	r3, [r5, #0]
90014e9c:	4628      	mov	r0, r5
90014e9e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90014ea0:	4798      	blx	r3
90014ea2:	682b      	ldr	r3, [r5, #0]
90014ea4:	4607      	mov	r7, r0
90014ea6:	4628      	mov	r0, r5
90014ea8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014eaa:	4798      	blx	r3
90014eac:	6823      	ldr	r3, [r4, #0]
90014eae:	4683      	mov	fp, r0
90014eb0:	4620      	mov	r0, r4
90014eb2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90014eb4:	4798      	blx	r3
90014eb6:	6822      	ldr	r2, [r4, #0]
90014eb8:	9005      	str	r0, [sp, #20]
90014eba:	4620      	mov	r0, r4
90014ebc:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90014ec0:	4790      	blx	r2
90014ec2:	9b05      	ldr	r3, [sp, #20]
90014ec4:	463a      	mov	r2, r7
90014ec6:	4649      	mov	r1, r9
90014ec8:	9001      	str	r0, [sp, #4]
90014eca:	a80f      	add	r0, sp, #60	; 0x3c
90014ecc:	9300      	str	r3, [sp, #0]
90014ece:	465b      	mov	r3, fp
90014ed0:	f005 f817 	bl	90019f02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90014ed4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90014ed8:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90014edc:	af0f      	add	r7, sp, #60	; 0x3c
90014ede:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90014ee2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90014ee6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90014ee8:	bf0a      	itet	eq
90014eea:	464a      	moveq	r2, r9
90014eec:	461a      	movne	r2, r3
90014eee:	4699      	moveq	r9, r3
90014ef0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90014ef4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90014ef8:	1ad2      	subs	r2, r2, r3
90014efa:	6833      	ldr	r3, [r6, #0]
90014efc:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90014f00:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014f04:	7859      	ldrb	r1, [r3, #1]
90014f06:	2300      	movs	r3, #0
90014f08:	9707      	str	r7, [sp, #28]
90014f0a:	f3c1 0181 	ubfx	r1, r1, #2, #2
90014f0e:	f8ad 3018 	strh.w	r3, [sp, #24]
90014f12:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90014f16:	f88d 1020 	strb.w	r1, [sp, #32]
90014f1a:	9509      	str	r5, [sp, #36]	; 0x24
90014f1c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90014f20:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90014f24:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90014f28:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90014f2c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90014f30:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90014f34:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90014f38:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014f3c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90014f40:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90014f44:	b350      	cbz	r0, 90014f9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014f46:	682b      	ldr	r3, [r5, #0]
90014f48:	4628      	mov	r0, r5
90014f4a:	695b      	ldr	r3, [r3, #20]
90014f4c:	4798      	blx	r3
90014f4e:	4607      	mov	r7, r0
90014f50:	b320      	cbz	r0, 90014f9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014f52:	9809      	ldr	r0, [sp, #36]	; 0x24
90014f54:	4639      	mov	r1, r7
90014f56:	6803      	ldr	r3, [r0, #0]
90014f58:	68db      	ldr	r3, [r3, #12]
90014f5a:	4798      	blx	r3
90014f5c:	4606      	mov	r6, r0
90014f5e:	b1e8      	cbz	r0, 90014f9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014f60:	7b43      	ldrb	r3, [r0, #13]
90014f62:	7a82      	ldrb	r2, [r0, #10]
90014f64:	005b      	lsls	r3, r3, #1
90014f66:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014f6a:	4313      	orrs	r3, r2
90014f6c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90014f70:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90014f74:	2b06      	cmp	r3, #6
90014f76:	d111      	bne.n	90014f9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90014f78:	9809      	ldr	r0, [sp, #36]	; 0x24
90014f7a:	4632      	mov	r2, r6
90014f7c:	4639      	mov	r1, r7
90014f7e:	6803      	ldr	r3, [r0, #0]
90014f80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014f82:	4798      	blx	r3
90014f84:	7b73      	ldrb	r3, [r6, #13]
90014f86:	005b      	lsls	r3, r3, #1
90014f88:	f403 7280 	and.w	r2, r3, #256	; 0x100
90014f8c:	7ab3      	ldrb	r3, [r6, #10]
90014f8e:	4313      	orrs	r3, r2
90014f90:	4418      	add	r0, r3
90014f92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90014f96:	4418      	add	r0, r3
90014f98:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90014f9c:	2600      	movs	r6, #0
90014f9e:	4637      	mov	r7, r6
90014fa0:	a806      	add	r0, sp, #24
90014fa2:	3701      	adds	r7, #1
90014fa4:	f002 fb6d 	bl	90017682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014fa8:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90014fac:	9b03      	ldr	r3, [sp, #12]
90014fae:	b2bf      	uxth	r7, r7
90014fb0:	4286      	cmp	r6, r0
90014fb2:	eba9 0903 	sub.w	r9, r9, r3
90014fb6:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90014fba:	bfb8      	it	lt
90014fbc:	4606      	movlt	r6, r0
90014fbe:	fa0f f989 	sxth.w	r9, r9
90014fc2:	b236      	sxth	r6, r6
90014fc4:	2b00      	cmp	r3, #0
90014fc6:	f43f af0d 	beq.w	90014de4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014fca:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90014fce:	2b00      	cmp	r3, #0
90014fd0:	f47f af08 	bne.w	90014de4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014fd4:	7a2b      	ldrb	r3, [r5, #8]
90014fd6:	444b      	add	r3, r9
90014fd8:	2b00      	cmp	r3, #0
90014fda:	dce1      	bgt.n	90014fa0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90014fdc:	e702      	b.n	90014de4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90014fde:	bf00      	nop
90014fe0:	24039b28 	.word	0x24039b28
90014fe4:	24039b24 	.word	0x24039b24
90014fe8:	24039b2c 	.word	0x24039b2c
90014fec:	24039b30 	.word	0x24039b30
90014ff0:	ebaa 0606 	sub.w	r6, sl, r6
90014ff4:	2002      	movs	r0, #2
90014ff6:	fb96 f6f0 	sdiv	r6, r6, r0
90014ffa:	e71c      	b.n	90014e36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90014ffc:	441e      	add	r6, r3
90014ffe:	ebaa 0606 	sub.w	r6, sl, r6
90015002:	e718      	b.n	90014e36 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90015004:	8925      	ldrh	r5, [r4, #8]
90015006:	1aed      	subs	r5, r5, r3
90015008:	eba5 050a 	sub.w	r5, r5, sl
9001500c:	fa0f fb85 	sxth.w	fp, r5
90015010:	8965      	ldrh	r5, [r4, #10]
90015012:	eba5 0509 	sub.w	r5, r5, r9
90015016:	b22d      	sxth	r5, r5
90015018:	e72d      	b.n	90014e76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
9001501a:	8965      	ldrh	r5, [r4, #10]
9001501c:	f04f 0b00 	mov.w	fp, #0
90015020:	1aed      	subs	r5, r5, r3
90015022:	4633      	mov	r3, r6
90015024:	463e      	mov	r6, r7
90015026:	eba5 050a 	sub.w	r5, r5, sl
9001502a:	461f      	mov	r7, r3
9001502c:	b22d      	sxth	r5, r5
9001502e:	e722      	b.n	90014e76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90015030:	2500      	movs	r5, #0
90015032:	e720      	b.n	90014e76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90015034 <_ZN8touchgfx8TextAreaD0Ev>:
90015034:	b510      	push	{r4, lr}
90015036:	4604      	mov	r4, r0
90015038:	2148      	movs	r1, #72	; 0x48
9001503a:	f014 fa13 	bl	90029464 <_ZdlPvj>
9001503e:	4620      	mov	r0, r4
90015040:	bd10      	pop	{r4, pc}
	...

90015044 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90015044:	b513      	push	{r0, r1, r4, lr}
90015046:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
9001504a:	4604      	mov	r4, r0
9001504c:	b1fb      	cbz	r3, 9001508e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001504e:	4b16      	ldr	r3, [pc, #88]	; (900150a8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90015050:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90015052:	881b      	ldrh	r3, [r3, #0]
90015054:	428b      	cmp	r3, r1
90015056:	d91a      	bls.n	9001508e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015058:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001505c:	2b00      	cmp	r3, #0
9001505e:	dd16      	ble.n	9001508e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015060:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90015064:	2b00      	cmp	r3, #0
90015066:	dd12      	ble.n	9001508e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90015068:	4b10      	ldr	r3, [pc, #64]	; (900150ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
9001506a:	6818      	ldr	r0, [r3, #0]
9001506c:	f7ef faec 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015070:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90015074:	6822      	ldr	r2, [r4, #0]
90015076:	2b00      	cmp	r3, #0
90015078:	db06      	blt.n	90015088 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
9001507a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001507e:	2b00      	cmp	r3, #0
90015080:	db02      	blt.n	90015088 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90015082:	6c63      	ldr	r3, [r4, #68]	; 0x44
90015084:	4298      	cmp	r0, r3
90015086:	d004      	beq.n	90015092 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90015088:	6953      	ldr	r3, [r2, #20]
9001508a:	4620      	mov	r0, r4
9001508c:	4798      	blx	r3
9001508e:	b002      	add	sp, #8
90015090:	bd10      	pop	{r4, pc}
90015092:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90015096:	466b      	mov	r3, sp
90015098:	6912      	ldr	r2, [r2, #16]
9001509a:	c903      	ldmia	r1, {r0, r1}
9001509c:	e883 0003 	stmia.w	r3, {r0, r1}
900150a0:	4619      	mov	r1, r3
900150a2:	4620      	mov	r0, r4
900150a4:	4790      	blx	r2
900150a6:	e7f2      	b.n	9001508e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900150a8:	24039b28 	.word	0x24039b28
900150ac:	24039b30 	.word	0x24039b30

900150b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900150b0:	4b45      	ldr	r3, [pc, #276]	; (900151c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900150b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900150b6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900150b8:	b08e      	sub	sp, #56	; 0x38
900150ba:	881b      	ldrh	r3, [r3, #0]
900150bc:	4604      	mov	r4, r0
900150be:	4293      	cmp	r3, r2
900150c0:	d97e      	bls.n	900151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900150c2:	6808      	ldr	r0, [r1, #0]
900150c4:	ab05      	add	r3, sp, #20
900150c6:	6849      	ldr	r1, [r1, #4]
900150c8:	4d40      	ldr	r5, [pc, #256]	; (900151cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
900150ca:	c303      	stmia	r3!, {r0, r1}
900150cc:	4611      	mov	r1, r2
900150ce:	6828      	ldr	r0, [r5, #0]
900150d0:	f7ef faba 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
900150d4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
900150d8:	2b00      	cmp	r3, #0
900150da:	db11      	blt.n	90015100 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900150dc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
900150e0:	2b00      	cmp	r3, #0
900150e2:	db0d      	blt.n	90015100 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900150e4:	6c63      	ldr	r3, [r4, #68]	; 0x44
900150e6:	4298      	cmp	r0, r3
900150e8:	d10a      	bne.n	90015100 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900150ea:	f104 023c 	add.w	r2, r4, #60	; 0x3c
900150ee:	ab09      	add	r3, sp, #36	; 0x24
900150f0:	e892 0003 	ldmia.w	r2, {r0, r1}
900150f4:	e883 0003 	stmia.w	r3, {r0, r1}
900150f8:	4619      	mov	r1, r3
900150fa:	a805      	add	r0, sp, #20
900150fc:	f7fd fda0 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90015100:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015104:	2b00      	cmp	r3, #0
90015106:	dd5b      	ble.n	900151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015108:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
9001510c:	2b00      	cmp	r3, #0
9001510e:	dd57      	ble.n	900151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015110:	4f2f      	ldr	r7, [pc, #188]	; (900151d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90015112:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015114:	683b      	ldr	r3, [r7, #0]
90015116:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9001511a:	4b2e      	ldr	r3, [pc, #184]	; (900151d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
9001511c:	681b      	ldr	r3, [r3, #0]
9001511e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90015122:	2e00      	cmp	r6, #0
90015124:	d04c      	beq.n	900151c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90015126:	6823      	ldr	r3, [r4, #0]
90015128:	4620      	mov	r0, r4
9001512a:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
9001512e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90015130:	4798      	blx	r3
90015132:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90015134:	683b      	ldr	r3, [r7, #0]
90015136:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
9001513a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001513e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
90015142:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90015146:	785b      	ldrb	r3, [r3, #1]
90015148:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
9001514c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90015150:	6b21      	ldr	r1, [r4, #48]	; 0x30
90015152:	9609      	str	r6, [sp, #36]	; 0x24
90015154:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90015158:	4b1f      	ldr	r3, [pc, #124]	; (900151d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
9001515a:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
9001515e:	681b      	ldr	r3, [r3, #0]
90015160:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90015164:	910b      	str	r1, [sp, #44]	; 0x2c
90015166:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
9001516a:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
9001516e:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
90015172:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90015176:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001517a:	b10a      	cbz	r2, 90015180 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
9001517c:	6cde      	ldr	r6, [r3, #76]	; 0x4c
9001517e:	b906      	cbnz	r6, 90015182 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90015180:	689e      	ldr	r6, [r3, #8]
90015182:	af07      	add	r7, sp, #28
90015184:	4621      	mov	r1, r4
90015186:	4638      	mov	r0, r7
90015188:	f004 f96a 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001518c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001518e:	6828      	ldr	r0, [r5, #0]
90015190:	f7ef fa5a 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015194:	6823      	ldr	r3, [r4, #0]
90015196:	4605      	mov	r5, r0
90015198:	4620      	mov	r0, r4
9001519a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001519c:	4798      	blx	r3
9001519e:	6823      	ldr	r3, [r4, #0]
900151a0:	4680      	mov	r8, r0
900151a2:	4620      	mov	r0, r4
900151a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900151a8:	4798      	blx	r3
900151aa:	ab09      	add	r3, sp, #36	; 0x24
900151ac:	9501      	str	r5, [sp, #4]
900151ae:	9300      	str	r3, [sp, #0]
900151b0:	ab05      	add	r3, sp, #20
900151b2:	e9cd 8002 	strd	r8, r0, [sp, #8]
900151b6:	4630      	mov	r0, r6
900151b8:	e897 0006 	ldmia.w	r7, {r1, r2}
900151bc:	f7ef f9f4 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900151c0:	b00e      	add	sp, #56	; 0x38
900151c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900151c6:	bf00      	nop
900151c8:	24039b28 	.word	0x24039b28
900151cc:	24039b30 	.word	0x24039b30
900151d0:	24039b24 	.word	0x24039b24
900151d4:	24039b2c 	.word	0x24039b2c
900151d8:	24039acc 	.word	0x24039acc

900151dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900151dc:	b570      	push	{r4, r5, r6, lr}
900151de:	6803      	ldr	r3, [r0, #0]
900151e0:	4604      	mov	r4, r0
900151e2:	4615      	mov	r5, r2
900151e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900151e6:	4798      	blx	r3
900151e8:	6823      	ldr	r3, [r4, #0]
900151ea:	4629      	mov	r1, r5
900151ec:	4620      	mov	r0, r4
900151ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900151f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900151f4:	4718      	bx	r3
	...

900151f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900151f8:	b538      	push	{r3, r4, r5, lr}
900151fa:	4b0e      	ldr	r3, [pc, #56]	; (90015234 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900151fc:	4604      	mov	r4, r0
900151fe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015200:	881b      	ldrh	r3, [r3, #0]
90015202:	429a      	cmp	r2, r3
90015204:	d214      	bcs.n	90015230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
90015206:	6803      	ldr	r3, [r0, #0]
90015208:	6f5b      	ldr	r3, [r3, #116]	; 0x74
9001520a:	4798      	blx	r3
9001520c:	6823      	ldr	r3, [r4, #0]
9001520e:	4605      	mov	r5, r0
90015210:	4620      	mov	r0, r4
90015212:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90015214:	4798      	blx	r3
90015216:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001521a:	b22d      	sxth	r5, r5
9001521c:	4601      	mov	r1, r0
9001521e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90015222:	bf06      	itte	eq
90015224:	4602      	moveq	r2, r0
90015226:	4629      	moveq	r1, r5
90015228:	462a      	movne	r2, r5
9001522a:	4620      	mov	r0, r4
9001522c:	f7ff ffd6 	bl	900151dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
90015230:	bd38      	pop	{r3, r4, r5, pc}
90015232:	bf00      	nop
90015234:	24039b28 	.word	0x24039b28

90015238 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90015238:	b530      	push	{r4, r5, lr}
9001523a:	888b      	ldrh	r3, [r1, #4]
9001523c:	b085      	sub	sp, #20
9001523e:	4604      	mov	r4, r0
90015240:	8583      	strh	r3, [r0, #44]	; 0x2c
90015242:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90015246:	b923      	cbnz	r3, 90015252 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90015248:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001524c:	b90b      	cbnz	r3, 90015252 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001524e:	f7ff ffd3 	bl	900151f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90015252:	6823      	ldr	r3, [r4, #0]
90015254:	466d      	mov	r5, sp
90015256:	4621      	mov	r1, r4
90015258:	343c      	adds	r4, #60	; 0x3c
9001525a:	4628      	mov	r0, r5
9001525c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90015260:	4798      	blx	r3
90015262:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90015266:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001526a:	b005      	add	sp, #20
9001526c:	bd30      	pop	{r4, r5, pc}

9001526e <_ZNK8touchgfx3Box12getSolidRectEv>:
9001526e:	2300      	movs	r3, #0
90015270:	8083      	strh	r3, [r0, #4]
90015272:	80c3      	strh	r3, [r0, #6]
90015274:	8003      	strh	r3, [r0, #0]
90015276:	8043      	strh	r3, [r0, #2]
90015278:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
9001527c:	2bff      	cmp	r3, #255	; 0xff
9001527e:	bf01      	itttt	eq
90015280:	890b      	ldrheq	r3, [r1, #8]
90015282:	8083      	strheq	r3, [r0, #4]
90015284:	894b      	ldrheq	r3, [r1, #10]
90015286:	80c3      	strheq	r3, [r0, #6]
90015288:	4770      	bx	lr
	...

9001528c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9001528c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001528e:	4604      	mov	r4, r0
90015290:	466b      	mov	r3, sp
90015292:	6808      	ldr	r0, [r1, #0]
90015294:	6849      	ldr	r1, [r1, #4]
90015296:	c303      	stmia	r3!, {r0, r1}
90015298:	6823      	ldr	r3, [r4, #0]
9001529a:	4669      	mov	r1, sp
9001529c:	4620      	mov	r0, r4
9001529e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900152a0:	4798      	blx	r3
900152a2:	4b08      	ldr	r3, [pc, #32]	; (900152c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900152a4:	681b      	ldr	r3, [r3, #0]
900152a6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900152aa:	b10a      	cbz	r2, 900152b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900152ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900152ae:	b900      	cbnz	r0, 900152b2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900152b0:	6898      	ldr	r0, [r3, #8]
900152b2:	6803      	ldr	r3, [r0, #0]
900152b4:	4669      	mov	r1, sp
900152b6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900152b8:	6a1d      	ldr	r5, [r3, #32]
900152ba:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900152be:	47a8      	blx	r5
900152c0:	b003      	add	sp, #12
900152c2:	bd30      	pop	{r4, r5, pc}
900152c4:	24039acc 	.word	0x24039acc

900152c8 <_ZN8touchgfx3BoxD1Ev>:
900152c8:	4770      	bx	lr

900152ca <_ZN8touchgfx3BoxD0Ev>:
900152ca:	b510      	push	{r4, lr}
900152cc:	4604      	mov	r4, r0
900152ce:	212c      	movs	r1, #44	; 0x2c
900152d0:	f014 f8c8 	bl	90029464 <_ZdlPvj>
900152d4:	4620      	mov	r0, r4
900152d6:	bd10      	pop	{r4, pc}

900152d8 <_ZNK8touchgfx3Box17invalidateContentEv>:
900152d8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
900152dc:	b12a      	cbz	r2, 900152ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900152de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900152e2:	b112      	cbz	r2, 900152ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900152e4:	6803      	ldr	r3, [r0, #0]
900152e6:	695b      	ldr	r3, [r3, #20]
900152e8:	4718      	bx	r3
900152ea:	4770      	bx	lr

900152ec <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900152ec:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900152f0:	4770      	bx	lr

900152f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900152f2:	b570      	push	{r4, r5, r6, lr}
900152f4:	880b      	ldrh	r3, [r1, #0]
900152f6:	4605      	mov	r5, r0
900152f8:	4604      	mov	r4, r0
900152fa:	85c3      	strh	r3, [r0, #46]	; 0x2e
900152fc:	8813      	ldrh	r3, [r2, #0]
900152fe:	f825 3f30 	strh.w	r3, [r5, #48]!
90015302:	4628      	mov	r0, r5
90015304:	f006 f91a 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
90015308:	4606      	mov	r6, r0
9001530a:	4628      	mov	r0, r5
9001530c:	f006 f94a 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015310:	6823      	ldr	r3, [r4, #0]
90015312:	4605      	mov	r5, r0
90015314:	4631      	mov	r1, r6
90015316:	4620      	mov	r0, r4
90015318:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001531a:	4798      	blx	r3
9001531c:	6823      	ldr	r3, [r4, #0]
9001531e:	4629      	mov	r1, r5
90015320:	4620      	mov	r0, r4
90015322:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015324:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015328:	4718      	bx	r3

9001532a <_ZN8touchgfx14AbstractButton13executeActionEv>:
9001532a:	b510      	push	{r4, lr}
9001532c:	4604      	mov	r4, r0
9001532e:	6a80      	ldr	r0, [r0, #40]	; 0x28
90015330:	b150      	cbz	r0, 90015348 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90015332:	6803      	ldr	r3, [r0, #0]
90015334:	68db      	ldr	r3, [r3, #12]
90015336:	4798      	blx	r3
90015338:	b130      	cbz	r0, 90015348 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001533a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001533c:	4621      	mov	r1, r4
9001533e:	6803      	ldr	r3, [r0, #0]
90015340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90015344:	689b      	ldr	r3, [r3, #8]
90015346:	4718      	bx	r3
90015348:	bd10      	pop	{r4, pc}

9001534a <_ZNK8touchgfx6Button12getSolidRectEv>:
9001534a:	b510      	push	{r4, lr}
9001534c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90015350:	4604      	mov	r4, r0
90015352:	2bff      	cmp	r3, #255	; 0xff
90015354:	d006      	beq.n	90015364 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90015356:	2300      	movs	r3, #0
90015358:	8003      	strh	r3, [r0, #0]
9001535a:	8043      	strh	r3, [r0, #2]
9001535c:	8083      	strh	r3, [r0, #4]
9001535e:	80c3      	strh	r3, [r0, #6]
90015360:	4620      	mov	r0, r4
90015362:	bd10      	pop	{r4, pc}
90015364:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90015368:	b11b      	cbz	r3, 90015372 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001536a:	3130      	adds	r1, #48	; 0x30
9001536c:	f006 f94e 	bl	9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90015370:	e7f6      	b.n	90015360 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90015372:	312e      	adds	r1, #46	; 0x2e
90015374:	e7fa      	b.n	9001536c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90015378 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90015378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001537c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90015380:	b08a      	sub	sp, #40	; 0x28
90015382:	4604      	mov	r4, r0
90015384:	4688      	mov	r8, r1
90015386:	2b00      	cmp	r3, #0
90015388:	d066      	beq.n	90015458 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001538a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001538c:	a805      	add	r0, sp, #20
9001538e:	f8ad 3014 	strh.w	r3, [sp, #20]
90015392:	f006 f8d3 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
90015396:	4607      	mov	r7, r0
90015398:	a805      	add	r0, sp, #20
9001539a:	f006 f903 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001539e:	f9b8 6000 	ldrsh.w	r6, [r8]
900153a2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900153a6:	2300      	movs	r3, #0
900153a8:	4432      	add	r2, r6
900153aa:	9306      	str	r3, [sp, #24]
900153ac:	b292      	uxth	r2, r2
900153ae:	fa0f fc82 	sxth.w	ip, r2
900153b2:	459c      	cmp	ip, r3
900153b4:	dd52      	ble.n	9001545c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900153b6:	42b7      	cmp	r7, r6
900153b8:	dd50      	ble.n	9001545c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900153ba:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900153be:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900153c2:	442b      	add	r3, r5
900153c4:	b29b      	uxth	r3, r3
900153c6:	b219      	sxth	r1, r3
900153c8:	2900      	cmp	r1, #0
900153ca:	dd47      	ble.n	9001545c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900153cc:	42a8      	cmp	r0, r5
900153ce:	dd45      	ble.n	9001545c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900153d0:	4567      	cmp	r7, ip
900153d2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
900153d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900153da:	bfb8      	it	lt
900153dc:	b2ba      	uxthlt	r2, r7
900153de:	4288      	cmp	r0, r1
900153e0:	f8ad 6018 	strh.w	r6, [sp, #24]
900153e4:	bfb8      	it	lt
900153e6:	b283      	uxthlt	r3, r0
900153e8:	1b92      	subs	r2, r2, r6
900153ea:	f8ad 501a 	strh.w	r5, [sp, #26]
900153ee:	1b5b      	subs	r3, r3, r5
900153f0:	f8ad 201c 	strh.w	r2, [sp, #28]
900153f4:	f8ad 301e 	strh.w	r3, [sp, #30]
900153f8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900153fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015400:	429a      	cmp	r2, r3
90015402:	d026      	beq.n	90015452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015404:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90015408:	2b00      	cmp	r3, #0
9001540a:	dd22      	ble.n	90015452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9001540c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90015410:	2b00      	cmp	r3, #0
90015412:	dd1e      	ble.n	90015452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90015414:	2300      	movs	r3, #0
90015416:	a908      	add	r1, sp, #32
90015418:	4620      	mov	r0, r4
9001541a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9001541e:	6823      	ldr	r3, [r4, #0]
90015420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015422:	4798      	blx	r3
90015424:	4b0f      	ldr	r3, [pc, #60]	; (90015464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90015426:	681b      	ldr	r3, [r3, #0]
90015428:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001542c:	b10a      	cbz	r2, 90015432 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9001542e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90015430:	b900      	cbnz	r0, 90015434 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90015432:	6898      	ldr	r0, [r3, #8]
90015434:	2501      	movs	r5, #1
90015436:	6801      	ldr	r1, [r0, #0]
90015438:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001543c:	9502      	str	r5, [sp, #8]
9001543e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90015442:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90015446:	9401      	str	r4, [sp, #4]
90015448:	ac06      	add	r4, sp, #24
9001544a:	9400      	str	r4, [sp, #0]
9001544c:	688c      	ldr	r4, [r1, #8]
9001544e:	a905      	add	r1, sp, #20
90015450:	47a0      	blx	r4
90015452:	b00a      	add	sp, #40	; 0x28
90015454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015458:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9001545a:	e797      	b.n	9001538c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9001545c:	2300      	movs	r3, #0
9001545e:	9307      	str	r3, [sp, #28]
90015460:	e7ca      	b.n	900153f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90015462:	bf00      	nop
90015464:	24039acc 	.word	0x24039acc

90015468 <_ZNK8touchgfx6Button17invalidateContentEv>:
90015468:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
9001546c:	b12a      	cbz	r2, 9001547a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001546e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90015472:	b112      	cbz	r2, 9001547a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90015474:	6803      	ldr	r3, [r0, #0]
90015476:	695b      	ldr	r3, [r3, #20]
90015478:	4718      	bx	r3
9001547a:	4770      	bx	lr

9001547c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9001547c:	4b30      	ldr	r3, [pc, #192]	; (90015540 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001547e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015482:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90015484:	b08d      	sub	sp, #52	; 0x34
90015486:	881b      	ldrh	r3, [r3, #0]
90015488:	4604      	mov	r4, r0
9001548a:	460f      	mov	r7, r1
9001548c:	4293      	cmp	r3, r2
9001548e:	d954      	bls.n	9001553a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90015490:	4b2c      	ldr	r3, [pc, #176]	; (90015544 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90015492:	6819      	ldr	r1, [r3, #0]
90015494:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90015498:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001549c:	4a2a      	ldr	r2, [pc, #168]	; (90015548 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001549e:	6812      	ldr	r2, [r2, #0]
900154a0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900154a4:	2900      	cmp	r1, #0
900154a6:	d048      	beq.n	9001553a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900154a8:	785a      	ldrb	r2, [r3, #1]
900154aa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900154ae:	f3c2 0801 	ubfx	r8, r2, #0, #2
900154b2:	f3c2 0281 	ubfx	r2, r2, #2, #2
900154b6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900154ba:	4b24      	ldr	r3, [pc, #144]	; (9001554c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
900154bc:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
900154c0:	681a      	ldr	r2, [r3, #0]
900154c2:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
900154c6:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
900154ca:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
900154ce:	6b26      	ldr	r6, [r4, #48]	; 0x30
900154d0:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
900154d4:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
900154d8:	9107      	str	r1, [sp, #28]
900154da:	f88d 8020 	strb.w	r8, [sp, #32]
900154de:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
900154e2:	9609      	str	r6, [sp, #36]	; 0x24
900154e4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900154e8:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900154ec:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900154f0:	b10b      	cbz	r3, 900154f6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900154f2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900154f4:	b905      	cbnz	r5, 900154f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900154f6:	6895      	ldr	r5, [r2, #8]
900154f8:	ae05      	add	r6, sp, #20
900154fa:	4621      	mov	r1, r4
900154fc:	4630      	mov	r0, r6
900154fe:	f003 ffaf 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90015502:	4b13      	ldr	r3, [pc, #76]	; (90015550 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90015504:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90015506:	6818      	ldr	r0, [r3, #0]
90015508:	f7ef f89e 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
9001550c:	6823      	ldr	r3, [r4, #0]
9001550e:	4680      	mov	r8, r0
90015510:	4620      	mov	r0, r4
90015512:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90015514:	4798      	blx	r3
90015516:	6823      	ldr	r3, [r4, #0]
90015518:	4681      	mov	r9, r0
9001551a:	4620      	mov	r0, r4
9001551c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90015520:	4798      	blx	r3
90015522:	ab07      	add	r3, sp, #28
90015524:	f8cd 8004 	str.w	r8, [sp, #4]
90015528:	9300      	str	r3, [sp, #0]
9001552a:	463b      	mov	r3, r7
9001552c:	e9cd 9002 	strd	r9, r0, [sp, #8]
90015530:	4628      	mov	r0, r5
90015532:	e896 0006 	ldmia.w	r6, {r1, r2}
90015536:	f7ef f837 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001553a:	b00d      	add	sp, #52	; 0x34
9001553c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015540:	24039b28 	.word	0x24039b28
90015544:	24039b24 	.word	0x24039b24
90015548:	24039b2c 	.word	0x24039b2c
9001554c:	24039acc 	.word	0x24039acc
90015550:	24039b30 	.word	0x24039b30

90015554 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90015554:	4770      	bx	lr

90015556 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90015556:	b510      	push	{r4, lr}
90015558:	4604      	mov	r4, r0
9001555a:	2134      	movs	r1, #52	; 0x34
9001555c:	f013 ff82 	bl	90029464 <_ZdlPvj>
90015560:	4620      	mov	r0, r4
90015562:	bd10      	pop	{r4, pc}

90015564 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90015564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015568:	8e03      	ldrh	r3, [r0, #48]	; 0x30
9001556a:	4604      	mov	r4, r0
9001556c:	460e      	mov	r6, r1
9001556e:	b08e      	sub	sp, #56	; 0x38
90015570:	b218      	sxth	r0, r3
90015572:	8921      	ldrh	r1, [r4, #8]
90015574:	005b      	lsls	r3, r3, #1
90015576:	8962      	ldrh	r2, [r4, #10]
90015578:	f8ad 0000 	strh.w	r0, [sp]
9001557c:	b29b      	uxth	r3, r3
9001557e:	f8ad 0002 	strh.w	r0, [sp, #2]
90015582:	1ac9      	subs	r1, r1, r3
90015584:	1ad3      	subs	r3, r2, r3
90015586:	b209      	sxth	r1, r1
90015588:	b21b      	sxth	r3, r3
9001558a:	2900      	cmp	r1, #0
9001558c:	f8ad 1004 	strh.w	r1, [sp, #4]
90015590:	f8ad 3006 	strh.w	r3, [sp, #6]
90015594:	dd5e      	ble.n	90015654 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90015596:	2b00      	cmp	r3, #0
90015598:	dd5c      	ble.n	90015654 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001559a:	6830      	ldr	r0, [r6, #0]
9001559c:	ab02      	add	r3, sp, #8
9001559e:	6871      	ldr	r1, [r6, #4]
900155a0:	c303      	stmia	r3!, {r0, r1}
900155a2:	4669      	mov	r1, sp
900155a4:	a802      	add	r0, sp, #8
900155a6:	f7fd fb4b 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
900155aa:	4620      	mov	r0, r4
900155ac:	a902      	add	r1, sp, #8
900155ae:	f7ff fe6d 	bl	9001528c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900155b2:	8e20      	ldrh	r0, [r4, #48]	; 0x30
900155b4:	2800      	cmp	r0, #0
900155b6:	d05f      	beq.n	90015678 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
900155b8:	8963      	ldrh	r3, [r4, #10]
900155ba:	b202      	sxth	r2, r0
900155bc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900155c0:	2500      	movs	r5, #0
900155c2:	1a1f      	subs	r7, r3, r0
900155c4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
900155c8:	f8ad 101c 	strh.w	r1, [sp, #28]
900155cc:	b21b      	sxth	r3, r3
900155ce:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900155d2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
900155d6:	af04      	add	r7, sp, #16
900155d8:	1a09      	subs	r1, r1, r0
900155da:	9506      	str	r5, [sp, #24]
900155dc:	f8ad 201e 	strh.w	r2, [sp, #30]
900155e0:	f8ad 5020 	strh.w	r5, [sp, #32]
900155e4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900155e8:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900155ec:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900155f0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900155f4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900155f8:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900155fc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90015600:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015604:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015608:	ab06      	add	r3, sp, #24
9001560a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001560e:	e893 0003 	ldmia.w	r3, {r0, r1}
90015612:	e887 0003 	stmia.w	r7, {r0, r1}
90015616:	4631      	mov	r1, r6
90015618:	4638      	mov	r0, r7
9001561a:	f7fd fb11 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
9001561e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90015622:	2b00      	cmp	r3, #0
90015624:	dd12      	ble.n	9001564c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90015626:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001562a:	2b00      	cmp	r3, #0
9001562c:	dd0e      	ble.n	9001564c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001562e:	6823      	ldr	r3, [r4, #0]
90015630:	4639      	mov	r1, r7
90015632:	4620      	mov	r0, r4
90015634:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015636:	4798      	blx	r3
90015638:	f7fd fde6 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001563c:	6803      	ldr	r3, [r0, #0]
9001563e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90015640:	4639      	mov	r1, r7
90015642:	f8d3 8020 	ldr.w	r8, [r3, #32]
90015646:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001564a:	47c0      	blx	r8
9001564c:	3501      	adds	r5, #1
9001564e:	2d04      	cmp	r5, #4
90015650:	d1da      	bne.n	90015608 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90015652:	e011      	b.n	90015678 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90015654:	6830      	ldr	r0, [r6, #0]
90015656:	ab06      	add	r3, sp, #24
90015658:	6871      	ldr	r1, [r6, #4]
9001565a:	c303      	stmia	r3!, {r0, r1}
9001565c:	6823      	ldr	r3, [r4, #0]
9001565e:	a906      	add	r1, sp, #24
90015660:	4620      	mov	r0, r4
90015662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015664:	4798      	blx	r3
90015666:	f7fd fdcf 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001566a:	6803      	ldr	r3, [r0, #0]
9001566c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9001566e:	a906      	add	r1, sp, #24
90015670:	6a1d      	ldr	r5, [r3, #32]
90015672:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90015676:	47a8      	blx	r5
90015678:	b00e      	add	sp, #56	; 0x38
9001567a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001567e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001567e:	4770      	bx	lr

90015680 <_ZN8touchgfx14ButtonWithIconD1Ev>:
90015680:	4770      	bx	lr

90015682 <_ZN8touchgfx14ButtonWithIconD0Ev>:
90015682:	b510      	push	{r4, lr}
90015684:	4604      	mov	r4, r0
90015686:	213c      	movs	r1, #60	; 0x3c
90015688:	f013 feec 	bl	90029464 <_ZdlPvj>
9001568c:	4620      	mov	r0, r4
9001568e:	bd10      	pop	{r4, pc}

90015690 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90015690:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015694:	461c      	mov	r4, r3
90015696:	4606      	mov	r6, r0
90015698:	9f06      	ldr	r7, [sp, #24]
9001569a:	f7ff fe2a 	bl	900152f2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001569e:	8823      	ldrh	r3, [r4, #0]
900156a0:	f04f 0802 	mov.w	r8, #2
900156a4:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
900156a8:	4638      	mov	r0, r7
900156aa:	86b3      	strh	r3, [r6, #52]	; 0x34
900156ac:	883b      	ldrh	r3, [r7, #0]
900156ae:	fb95 f5f8 	sdiv	r5, r5, r8
900156b2:	86f3      	strh	r3, [r6, #54]	; 0x36
900156b4:	b2ad      	uxth	r5, r5
900156b6:	f005 ff41 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
900156ba:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
900156be:	fb90 f0f8 	sdiv	r0, r0, r8
900156c2:	1a2d      	subs	r5, r5, r0
900156c4:	4638      	mov	r0, r7
900156c6:	fb94 f4f8 	sdiv	r4, r4, r8
900156ca:	8735      	strh	r5, [r6, #56]	; 0x38
900156cc:	b2a4      	uxth	r4, r4
900156ce:	f005 ff69 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900156d2:	fb90 f0f8 	sdiv	r0, r0, r8
900156d6:	1a24      	subs	r4, r4, r0
900156d8:	8774      	strh	r4, [r6, #58]	; 0x3a
900156da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

900156e0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
900156e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900156e4:	4604      	mov	r4, r0
900156e6:	b08c      	sub	sp, #48	; 0x30
900156e8:	460d      	mov	r5, r1
900156ea:	f7ff fe45 	bl	90015378 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900156ee:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900156f2:	2b00      	cmp	r3, #0
900156f4:	d05d      	beq.n	900157b2 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
900156f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900156f8:	a805      	add	r0, sp, #20
900156fa:	f8ad 3014 	strh.w	r3, [sp, #20]
900156fe:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
90015702:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90015706:	f005 ff19 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001570a:	4606      	mov	r6, r0
9001570c:	a805      	add	r0, sp, #20
9001570e:	f005 ff49 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015712:	6869      	ldr	r1, [r5, #4]
90015714:	f8ad 001e 	strh.w	r0, [sp, #30]
90015718:	ab08      	add	r3, sp, #32
9001571a:	6828      	ldr	r0, [r5, #0]
9001571c:	ad08      	add	r5, sp, #32
9001571e:	f8ad 8018 	strh.w	r8, [sp, #24]
90015722:	f8ad 701a 	strh.w	r7, [sp, #26]
90015726:	f8ad 601c 	strh.w	r6, [sp, #28]
9001572a:	c303      	stmia	r3!, {r0, r1}
9001572c:	a906      	add	r1, sp, #24
9001572e:	4628      	mov	r0, r5
90015730:	f7fd fa86 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90015734:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90015738:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001573c:	429a      	cmp	r2, r3
9001573e:	d035      	beq.n	900157ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015740:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90015744:	2b00      	cmp	r3, #0
90015746:	dd31      	ble.n	900157ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015748:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
9001574c:	2b00      	cmp	r3, #0
9001574e:	dd2d      	ble.n	900157ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90015750:	2300      	movs	r3, #0
90015752:	a90a      	add	r1, sp, #40	; 0x28
90015754:	4620      	mov	r0, r4
90015756:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
9001575a:	6823      	ldr	r3, [r4, #0]
9001575c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001575e:	4798      	blx	r3
90015760:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015764:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90015766:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001576a:	1a9b      	subs	r3, r3, r2
9001576c:	f8ad 3020 	strh.w	r3, [sp, #32]
90015770:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
90015772:	1ac9      	subs	r1, r1, r3
90015774:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90015778:	490f      	ldr	r1, [pc, #60]	; (900157b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
9001577a:	6809      	ldr	r1, [r1, #0]
9001577c:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
90015780:	b108      	cbz	r0, 90015786 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90015782:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90015784:	b900      	cbnz	r0, 90015788 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90015786:	6888      	ldr	r0, [r1, #8]
90015788:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
9001578c:	2601      	movs	r6, #1
9001578e:	440b      	add	r3, r1
90015790:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90015794:	440a      	add	r2, r1
90015796:	6801      	ldr	r1, [r0, #0]
90015798:	9602      	str	r6, [sp, #8]
9001579a:	b21b      	sxth	r3, r3
9001579c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
900157a0:	b212      	sxth	r2, r2
900157a2:	e9cd 5400 	strd	r5, r4, [sp]
900157a6:	688c      	ldr	r4, [r1, #8]
900157a8:	a905      	add	r1, sp, #20
900157aa:	47a0      	blx	r4
900157ac:	b00c      	add	sp, #48	; 0x30
900157ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900157b2:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900157b4:	e7a0      	b.n	900156f8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
900157b6:	bf00      	nop
900157b8:	24039acc 	.word	0x24039acc

900157bc <_ZN8touchgfx14ButtonWithIconC1Ev>:
900157bc:	2101      	movs	r1, #1
900157be:	2200      	movs	r2, #0
900157c0:	b510      	push	{r4, lr}
900157c2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900157c6:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
900157ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
900157ce:	4c0d      	ldr	r4, [pc, #52]	; (90015804 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
900157d0:	8082      	strh	r2, [r0, #4]
900157d2:	80c2      	strh	r2, [r0, #6]
900157d4:	8102      	strh	r2, [r0, #8]
900157d6:	8142      	strh	r2, [r0, #10]
900157d8:	8182      	strh	r2, [r0, #12]
900157da:	81c2      	strh	r2, [r0, #14]
900157dc:	8202      	strh	r2, [r0, #16]
900157de:	8242      	strh	r2, [r0, #18]
900157e0:	61c2      	str	r2, [r0, #28]
900157e2:	8402      	strh	r2, [r0, #32]
900157e4:	8442      	strh	r2, [r0, #34]	; 0x22
900157e6:	6282      	str	r2, [r0, #40]	; 0x28
900157e8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900157ec:	85c1      	strh	r1, [r0, #46]	; 0x2e
900157ee:	8601      	strh	r1, [r0, #48]	; 0x30
900157f0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900157f4:	6004      	str	r4, [r0, #0]
900157f6:	8681      	strh	r1, [r0, #52]	; 0x34
900157f8:	86c1      	strh	r1, [r0, #54]	; 0x36
900157fa:	8702      	strh	r2, [r0, #56]	; 0x38
900157fc:	8742      	strh	r2, [r0, #58]	; 0x3a
900157fe:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015802:	bd10      	pop	{r4, pc}
90015804:	9002da70 	.word	0x9002da70

90015808 <_ZN8touchgfx5ImageD1Ev>:
90015808:	4770      	bx	lr

9001580a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001580a:	b570      	push	{r4, r5, r6, lr}
9001580c:	880b      	ldrh	r3, [r1, #0]
9001580e:	460d      	mov	r5, r1
90015810:	4604      	mov	r4, r0
90015812:	84c3      	strh	r3, [r0, #38]	; 0x26
90015814:	4608      	mov	r0, r1
90015816:	f005 fe91 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001581a:	4606      	mov	r6, r0
9001581c:	4628      	mov	r0, r5
9001581e:	f005 fec1 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015822:	6823      	ldr	r3, [r4, #0]
90015824:	4605      	mov	r5, r0
90015826:	4631      	mov	r1, r6
90015828:	4620      	mov	r0, r4
9001582a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001582c:	4798      	blx	r3
9001582e:	6823      	ldr	r3, [r4, #0]
90015830:	4629      	mov	r1, r5
90015832:	4620      	mov	r0, r4
90015834:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90015836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001583a:	4718      	bx	r3

9001583c <_ZN8touchgfx5ImageD0Ev>:
9001583c:	b510      	push	{r4, lr}
9001583e:	4604      	mov	r4, r0
90015840:	212c      	movs	r1, #44	; 0x2c
90015842:	f013 fe0f 	bl	90029464 <_ZdlPvj>
90015846:	4620      	mov	r0, r4
90015848:	bd10      	pop	{r4, pc}

9001584a <_ZNK8touchgfx5Image12getSolidRectEv>:
9001584a:	b510      	push	{r4, lr}
9001584c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90015850:	4604      	mov	r4, r0
90015852:	2bff      	cmp	r3, #255	; 0xff
90015854:	d006      	beq.n	90015864 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90015856:	2300      	movs	r3, #0
90015858:	8003      	strh	r3, [r0, #0]
9001585a:	8043      	strh	r3, [r0, #2]
9001585c:	8083      	strh	r3, [r0, #4]
9001585e:	80c3      	strh	r3, [r0, #6]
90015860:	4620      	mov	r0, r4
90015862:	bd10      	pop	{r4, pc}
90015864:	3126      	adds	r1, #38	; 0x26
90015866:	f005 fed1 	bl	9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001586a:	e7f9      	b.n	90015860 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9001586c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
9001586c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90015870:	4604      	mov	r4, r0
90015872:	b088      	sub	sp, #32
90015874:	2500      	movs	r5, #0
90015876:	460f      	mov	r7, r1
90015878:	f854 3b26 	ldr.w	r3, [r4], #38
9001587c:	a904      	add	r1, sp, #16
9001587e:	4606      	mov	r6, r0
90015880:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015882:	e9cd 5504 	strd	r5, r5, [sp, #16]
90015886:	4798      	blx	r3
90015888:	4620      	mov	r0, r4
9001588a:	f005 fe57 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001588e:	4680      	mov	r8, r0
90015890:	4620      	mov	r0, r4
90015892:	f005 fe87 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
90015896:	9506      	str	r5, [sp, #24]
90015898:	ad06      	add	r5, sp, #24
9001589a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001589e:	4639      	mov	r1, r7
900158a0:	f8ad 801c 	strh.w	r8, [sp, #28]
900158a4:	4628      	mov	r0, r5
900158a6:	f7fd f9cb 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
900158aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900158ae:	2b00      	cmp	r3, #0
900158b0:	dd19      	ble.n	900158e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900158b2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900158b6:	2b00      	cmp	r3, #0
900158b8:	dd15      	ble.n	900158e6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900158ba:	4b0c      	ldr	r3, [pc, #48]	; (900158ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900158bc:	681b      	ldr	r3, [r3, #0]
900158be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900158c2:	b10a      	cbz	r2, 900158c8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900158c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900158c6:	b900      	cbnz	r0, 900158ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900158c8:	6898      	ldr	r0, [r3, #8]
900158ca:	2701      	movs	r7, #1
900158cc:	6801      	ldr	r1, [r0, #0]
900158ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900158d2:	9702      	str	r7, [sp, #8]
900158d4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
900158d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900158dc:	e9cd 5600 	strd	r5, r6, [sp]
900158e0:	688d      	ldr	r5, [r1, #8]
900158e2:	4621      	mov	r1, r4
900158e4:	47a8      	blx	r5
900158e6:	b008      	add	sp, #32
900158e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900158ec:	24039acc 	.word	0x24039acc

900158f0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900158f0:	4770      	bx	lr

900158f2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900158f2:	b510      	push	{r4, lr}
900158f4:	4604      	mov	r4, r0
900158f6:	2148      	movs	r1, #72	; 0x48
900158f8:	f013 fdb4 	bl	90029464 <_ZdlPvj>
900158fc:	4620      	mov	r0, r4
900158fe:	bd10      	pop	{r4, pc}

90015900 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90015900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015904:	b08d      	sub	sp, #52	; 0x34
90015906:	4604      	mov	r4, r0
90015908:	460f      	mov	r7, r1
9001590a:	f7ff fd35 	bl	90015378 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001590e:	4a55      	ldr	r2, [pc, #340]	; (90015a64 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90015910:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90015912:	8812      	ldrh	r2, [r2, #0]
90015914:	429a      	cmp	r2, r3
90015916:	f240 8082 	bls.w	90015a1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001591a:	4d53      	ldr	r5, [pc, #332]	; (90015a68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
9001591c:	682a      	ldr	r2, [r5, #0]
9001591e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90015922:	4b52      	ldr	r3, [pc, #328]	; (90015a6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90015924:	681b      	ldr	r3, [r3, #0]
90015926:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001592a:	2200      	movs	r2, #0
9001592c:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90015930:	e9cd 2203 	strd	r2, r2, [sp, #12]
90015934:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90015938:	2a03      	cmp	r2, #3
9001593a:	d811      	bhi.n	90015960 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001593c:	e8df f002 	tbb	[pc, r2]
90015940:	89727902 	.word	0x89727902
90015944:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015948:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001594c:	1ad2      	subs	r2, r2, r3
9001594e:	2002      	movs	r0, #2
90015950:	f8ad 1010 	strh.w	r1, [sp, #16]
90015954:	f8ad 3012 	strh.w	r3, [sp, #18]
90015958:	fb92 f2f0 	sdiv	r2, r2, r0
9001595c:	f8ad 200e 	strh.w	r2, [sp, #14]
90015960:	f10d 080c 	add.w	r8, sp, #12
90015964:	f10d 0914 	add.w	r9, sp, #20
90015968:	e898 0003 	ldmia.w	r8, {r0, r1}
9001596c:	e889 0003 	stmia.w	r9, {r0, r1}
90015970:	4639      	mov	r1, r7
90015972:	4648      	mov	r0, r9
90015974:	f7fd f964 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90015978:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001597c:	2b00      	cmp	r3, #0
9001597e:	dd4e      	ble.n	90015a1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015980:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90015984:	2b00      	cmp	r3, #0
90015986:	dd4a      	ble.n	90015a1e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90015988:	f8bd 3014 	ldrh.w	r3, [sp, #20]
9001598c:	4641      	mov	r1, r8
9001598e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90015992:	4620      	mov	r0, r4
90015994:	1a9b      	subs	r3, r3, r2
90015996:	f8bd 200e 	ldrh.w	r2, [sp, #14]
9001599a:	f8ad 3014 	strh.w	r3, [sp, #20]
9001599e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
900159a2:	1a9b      	subs	r3, r3, r2
900159a4:	f8ad 3016 	strh.w	r3, [sp, #22]
900159a8:	6823      	ldr	r3, [r4, #0]
900159aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900159ac:	4798      	blx	r3
900159ae:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900159b2:	2b00      	cmp	r3, #0
900159b4:	d053      	beq.n	90015a5e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
900159b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
900159b8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
900159ba:	682b      	ldr	r3, [r5, #0]
900159bc:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
900159c0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900159c4:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
900159c8:	785b      	ldrb	r3, [r3, #1]
900159ca:	9209      	str	r2, [sp, #36]	; 0x24
900159cc:	f3c3 0501 	ubfx	r5, r3, #0, #2
900159d0:	f3c3 0381 	ubfx	r3, r3, #2, #2
900159d4:	9607      	str	r6, [sp, #28]
900159d6:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
900159da:	2300      	movs	r3, #0
900159dc:	f88d 5020 	strb.w	r5, [sp, #32]
900159e0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
900159e4:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
900159e8:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900159ec:	4b20      	ldr	r3, [pc, #128]	; (90015a70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900159ee:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900159f2:	681b      	ldr	r3, [r3, #0]
900159f4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900159f8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900159fc:	b10a      	cbz	r2, 90015a02 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900159fe:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
90015a00:	b904      	cbnz	r4, 90015a04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
90015a02:	689c      	ldr	r4, [r3, #8]
90015a04:	4b1b      	ldr	r3, [pc, #108]	; (90015a74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
90015a06:	6818      	ldr	r0, [r3, #0]
90015a08:	f7ee fe1e 	bl	90004648 <_ZNK8touchgfx5Texts7getTextEt>
90015a0c:	ab07      	add	r3, sp, #28
90015a0e:	9001      	str	r0, [sp, #4]
90015a10:	4620      	mov	r0, r4
90015a12:	9300      	str	r3, [sp, #0]
90015a14:	464b      	mov	r3, r9
90015a16:	e898 0006 	ldmia.w	r8, {r1, r2}
90015a1a:	f7ee fdc5 	bl	900045a8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90015a1e:	b00d      	add	sp, #52	; 0x34
90015a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015a24:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90015a28:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90015a2c:	1ad2      	subs	r2, r2, r3
90015a2e:	3201      	adds	r2, #1
90015a30:	e78d      	b.n	9001594e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90015a32:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015a36:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015a3a:	1ad2      	subs	r2, r2, r3
90015a3c:	3201      	adds	r2, #1
90015a3e:	2002      	movs	r0, #2
90015a40:	f8ad 3010 	strh.w	r3, [sp, #16]
90015a44:	f8ad 1012 	strh.w	r1, [sp, #18]
90015a48:	fb92 f2f0 	sdiv	r2, r2, r0
90015a4c:	f8ad 200c 	strh.w	r2, [sp, #12]
90015a50:	e786      	b.n	90015960 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90015a52:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90015a56:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90015a5a:	1ad2      	subs	r2, r2, r3
90015a5c:	e7ef      	b.n	90015a3e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90015a5e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90015a60:	e7aa      	b.n	900159b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90015a62:	bf00      	nop
90015a64:	24039b28 	.word	0x24039b28
90015a68:	24039b24 	.word	0x24039b24
90015a6c:	24039b2c 	.word	0x24039b2c
90015a70:	24039acc 	.word	0x24039acc
90015a74:	24039b30 	.word	0x24039b30

90015a78 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90015a78:	2101      	movs	r1, #1
90015a7a:	2200      	movs	r2, #0
90015a7c:	b510      	push	{r4, lr}
90015a7e:	4c13      	ldr	r4, [pc, #76]	; (90015acc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90015a80:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90015a84:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90015a88:	f64f 71ff 	movw	r1, #65535	; 0xffff
90015a8c:	6004      	str	r4, [r0, #0]
90015a8e:	4c10      	ldr	r4, [pc, #64]	; (90015ad0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90015a90:	8082      	strh	r2, [r0, #4]
90015a92:	80c2      	strh	r2, [r0, #6]
90015a94:	8102      	strh	r2, [r0, #8]
90015a96:	8142      	strh	r2, [r0, #10]
90015a98:	8182      	strh	r2, [r0, #12]
90015a9a:	81c2      	strh	r2, [r0, #14]
90015a9c:	8202      	strh	r2, [r0, #16]
90015a9e:	8242      	strh	r2, [r0, #18]
90015aa0:	61c2      	str	r2, [r0, #28]
90015aa2:	8402      	strh	r2, [r0, #32]
90015aa4:	8442      	strh	r2, [r0, #34]	; 0x22
90015aa6:	6282      	str	r2, [r0, #40]	; 0x28
90015aa8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90015aac:	85c1      	strh	r1, [r0, #46]	; 0x2e
90015aae:	8601      	strh	r1, [r0, #48]	; 0x30
90015ab0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90015ab4:	6344      	str	r4, [r0, #52]	; 0x34
90015ab6:	8701      	strh	r1, [r0, #56]	; 0x38
90015ab8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
90015abc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
90015ac0:	e9c0 2205 	strd	r2, r2, [r0, #20]
90015ac4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90015ac8:	bd10      	pop	{r4, pc}
90015aca:	bf00      	nop
90015acc:	9002db54 	.word	0x9002db54
90015ad0:	9002c0c0 	.word	0x9002c0c0

90015ad4 <_ZN8touchgfx7OutlineD1Ev>:
90015ad4:	4770      	bx	lr

90015ad6 <_ZN8touchgfx7OutlineD0Ev>:
90015ad6:	b510      	push	{r4, lr}
90015ad8:	4604      	mov	r4, r0
90015ada:	2130      	movs	r1, #48	; 0x30
90015adc:	f013 fcc2 	bl	90029464 <_ZdlPvj>
90015ae0:	4620      	mov	r0, r4
90015ae2:	bd10      	pop	{r4, pc}

90015ae4 <_ZN8touchgfx7Outline5resetEv>:
90015ae4:	b510      	push	{r4, lr}
90015ae6:	4604      	mov	r4, r0
90015ae8:	f000 fe86 	bl	900167f8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90015aec:	60e0      	str	r0, [r4, #12]
90015aee:	f000 fe89 	bl	90016804 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90015af2:	68e3      	ldr	r3, [r4, #12]
90015af4:	08c0      	lsrs	r0, r0, #3
90015af6:	2200      	movs	r2, #0
90015af8:	f647 71ff 	movw	r1, #32767	; 0x7fff
90015afc:	6123      	str	r3, [r4, #16]
90015afe:	3801      	subs	r0, #1
90015b00:	60a2      	str	r2, [r4, #8]
90015b02:	6060      	str	r0, [r4, #4]
90015b04:	8019      	strh	r1, [r3, #0]
90015b06:	8059      	strh	r1, [r3, #2]
90015b08:	809a      	strh	r2, [r3, #4]
90015b0a:	80da      	strh	r2, [r3, #6]
90015b0c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90015b0e:	f023 0301 	bic.w	r3, r3, #1
90015b12:	f043 0302 	orr.w	r3, r3, #2
90015b16:	6263      	str	r3, [r4, #36]	; 0x24
90015b18:	bd10      	pop	{r4, pc}
	...

90015b1c <_ZN8touchgfx7OutlineC1Ev>:
90015b1c:	4b0a      	ldr	r3, [pc, #40]	; (90015b48 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90015b1e:	b510      	push	{r4, lr}
90015b20:	6003      	str	r3, [r0, #0]
90015b22:	2300      	movs	r3, #0
90015b24:	4604      	mov	r4, r0
90015b26:	6243      	str	r3, [r0, #36]	; 0x24
90015b28:	e9c0 3301 	strd	r3, r3, [r0, #4]
90015b2c:	e9c0 3303 	strd	r3, r3, [r0, #12]
90015b30:	e9c0 3305 	strd	r3, r3, [r0, #20]
90015b34:	e9c0 3307 	strd	r3, r3, [r0, #28]
90015b38:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90015b3c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90015b40:	f7ff ffd0 	bl	90015ae4 <_ZN8touchgfx7Outline5resetEv>
90015b44:	4620      	mov	r0, r4
90015b46:	bd10      	pop	{r4, pc}
90015b48:	9002dbc8 	.word	0x9002dbc8

90015b4c <_ZN8touchgfx7Outline10renderLineEiiii>:
90015b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015b50:	b093      	sub	sp, #76	; 0x4c
90015b52:	1156      	asrs	r6, r2, #5
90015b54:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90015b56:	9305      	str	r3, [sp, #20]
90015b58:	1153      	asrs	r3, r2, #5
90015b5a:	f004 051f 	and.w	r5, r4, #31
90015b5e:	9303      	str	r3, [sp, #12]
90015b60:	1163      	asrs	r3, r4, #5
90015b62:	9504      	str	r5, [sp, #16]
90015b64:	1165      	asrs	r5, r4, #5
90015b66:	9306      	str	r3, [sp, #24]
90015b68:	f002 031f 	and.w	r3, r2, #31
90015b6c:	42ae      	cmp	r6, r5
90015b6e:	f040 80f4 	bne.w	90015d5a <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90015b72:	9c04      	ldr	r4, [sp, #16]
90015b74:	9a05      	ldr	r2, [sp, #20]
90015b76:	42a3      	cmp	r3, r4
90015b78:	ea4f 1e62 	mov.w	lr, r2, asr #5
90015b7c:	6902      	ldr	r2, [r0, #16]
90015b7e:	d125      	bne.n	90015bcc <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90015b80:	f9b2 3000 	ldrsh.w	r3, [r2]
90015b84:	459e      	cmp	lr, r3
90015b86:	d103      	bne.n	90015b90 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90015b88:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015b8c:	429e      	cmp	r6, r3
90015b8e:	d035      	beq.n	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015b90:	88d1      	ldrh	r1, [r2, #6]
90015b92:	8893      	ldrh	r3, [r2, #4]
90015b94:	430b      	orrs	r3, r1
90015b96:	d010      	beq.n	90015bba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015b98:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90015b9c:	2b00      	cmp	r3, #0
90015b9e:	db0c      	blt.n	90015bba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015ba0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90015ba2:	428b      	cmp	r3, r1
90015ba4:	da09      	bge.n	90015bba <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90015ba6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015baa:	428b      	cmp	r3, r1
90015bac:	f103 0301 	add.w	r3, r3, #1
90015bb0:	bf38      	it	cc
90015bb2:	3208      	addcc	r2, #8
90015bb4:	6083      	str	r3, [r0, #8]
90015bb6:	bf38      	it	cc
90015bb8:	6102      	strcc	r2, [r0, #16]
90015bba:	6903      	ldr	r3, [r0, #16]
90015bbc:	9a03      	ldr	r2, [sp, #12]
90015bbe:	f8a3 e000 	strh.w	lr, [r3]
90015bc2:	805a      	strh	r2, [r3, #2]
90015bc4:	2200      	movs	r2, #0
90015bc6:	809a      	strh	r2, [r3, #4]
90015bc8:	80da      	strh	r2, [r3, #6]
90015bca:	e017      	b.n	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015bcc:	9c05      	ldr	r4, [sp, #20]
90015bce:	114e      	asrs	r6, r1, #5
90015bd0:	f001 0c1f 	and.w	ip, r1, #31
90015bd4:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90015bd8:	f004 041f 	and.w	r4, r4, #31
90015bdc:	4576      	cmp	r6, lr
90015bde:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90015be2:	9402      	str	r4, [sp, #8]
90015be4:	9c04      	ldr	r4, [sp, #16]
90015be6:	eba4 0403 	sub.w	r4, r4, r3
90015bea:	d10a      	bne.n	90015c02 <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90015bec:	9b02      	ldr	r3, [sp, #8]
90015bee:	44a0      	add	r8, r4
90015bf0:	449c      	add	ip, r3
90015bf2:	f8a2 8004 	strh.w	r8, [r2, #4]
90015bf6:	fb04 a40c 	mla	r4, r4, ip, sl
90015bfa:	80d4      	strh	r4, [r2, #6]
90015bfc:	b013      	add	sp, #76	; 0x4c
90015bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015c02:	9d05      	ldr	r5, [sp, #20]
90015c04:	1a69      	subs	r1, r5, r1
90015c06:	bf51      	iteee	pl
90015c08:	f1cc 0520 	rsbpl	r5, ip, #32
90015c0c:	fb04 f40c 	mulmi.w	r4, r4, ip
90015c10:	4249      	negmi	r1, r1
90015c12:	2500      	movmi	r5, #0
90015c14:	bf5d      	ittte	pl
90015c16:	436c      	mulpl	r4, r5
90015c18:	2520      	movpl	r5, #32
90015c1a:	f04f 0901 	movpl.w	r9, #1
90015c1e:	f04f 39ff 	movmi.w	r9, #4294967295
90015c22:	9501      	str	r5, [sp, #4]
90015c24:	9f01      	ldr	r7, [sp, #4]
90015c26:	444e      	add	r6, r9
90015c28:	fb94 f5f1 	sdiv	r5, r4, r1
90015c2c:	fb01 4415 	mls	r4, r1, r5, r4
90015c30:	44bc      	add	ip, r7
90015c32:	2c00      	cmp	r4, #0
90015c34:	bfbc      	itt	lt
90015c36:	f105 35ff 	addlt.w	r5, r5, #4294967295
90015c3a:	1864      	addlt	r4, r4, r1
90015c3c:	44a8      	add	r8, r5
90015c3e:	fb05 ac0c 	mla	ip, r5, ip, sl
90015c42:	f8a2 8004 	strh.w	r8, [r2, #4]
90015c46:	f8a2 c006 	strh.w	ip, [r2, #6]
90015c4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015c4e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90015c52:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90015c56:	ea58 0202 	orrs.w	r2, r8, r2
90015c5a:	d011      	beq.n	90015c80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015c5c:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90015c60:	f1b8 0f00 	cmp.w	r8, #0
90015c64:	db0c      	blt.n	90015c80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015c66:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90015c68:	4590      	cmp	r8, r2
90015c6a:	da09      	bge.n	90015c80 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90015c6c:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90015c70:	4590      	cmp	r8, r2
90015c72:	bf3c      	itt	cc
90015c74:	f10c 0208 	addcc.w	r2, ip, #8
90015c78:	6102      	strcc	r2, [r0, #16]
90015c7a:	f108 0201 	add.w	r2, r8, #1
90015c7e:	6082      	str	r2, [r0, #8]
90015c80:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015c84:	2700      	movs	r7, #0
90015c86:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90015c8a:	45b6      	cmp	lr, r6
90015c8c:	f8ac 6000 	strh.w	r6, [ip]
90015c90:	442b      	add	r3, r5
90015c92:	f8ac 2002 	strh.w	r2, [ip, #2]
90015c96:	f8ac 7004 	strh.w	r7, [ip, #4]
90015c9a:	f8ac 7006 	strh.w	r7, [ip, #6]
90015c9e:	d04b      	beq.n	90015d38 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90015ca0:	9f04      	ldr	r7, [sp, #16]
90015ca2:	1a64      	subs	r4, r4, r1
90015ca4:	f04f 0a00 	mov.w	sl, #0
90015ca8:	1aff      	subs	r7, r7, r3
90015caa:	443d      	add	r5, r7
90015cac:	016d      	lsls	r5, r5, #5
90015cae:	fb95 f8f1 	sdiv	r8, r5, r1
90015cb2:	fb01 5518 	mls	r5, r1, r8, r5
90015cb6:	2d00      	cmp	r5, #0
90015cb8:	bfbc      	itt	lt
90015cba:	f108 38ff 	addlt.w	r8, r8, #4294967295
90015cbe:	186d      	addlt	r5, r5, r1
90015cc0:	f108 0701 	add.w	r7, r8, #1
90015cc4:	9703      	str	r7, [sp, #12]
90015cc6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015cca:	1964      	adds	r4, r4, r5
90015ccc:	444e      	add	r6, r9
90015cce:	bf54      	ite	pl
90015cd0:	9f03      	ldrpl	r7, [sp, #12]
90015cd2:	4647      	movmi	r7, r8
90015cd4:	f8bc b004 	ldrh.w	fp, [ip, #4]
90015cd8:	bf58      	it	pl
90015cda:	1a64      	subpl	r4, r4, r1
90015cdc:	443b      	add	r3, r7
90015cde:	44bb      	add	fp, r7
90015ce0:	f8ac b004 	strh.w	fp, [ip, #4]
90015ce4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015ce8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90015cec:	f8ac b006 	strh.w	fp, [ip, #6]
90015cf0:	f8d0 c010 	ldr.w	ip, [r0, #16]
90015cf4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90015cf8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90015cfc:	ea5b 0707 	orrs.w	r7, fp, r7
90015d00:	d011      	beq.n	90015d26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015d02:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90015d06:	f1bb 0f00 	cmp.w	fp, #0
90015d0a:	db0c      	blt.n	90015d26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015d0c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90015d0e:	45bb      	cmp	fp, r7
90015d10:	da09      	bge.n	90015d26 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90015d12:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90015d16:	45bb      	cmp	fp, r7
90015d18:	bf3c      	itt	cc
90015d1a:	f10c 0708 	addcc.w	r7, ip, #8
90015d1e:	6107      	strcc	r7, [r0, #16]
90015d20:	f10b 0701 	add.w	r7, fp, #1
90015d24:	6087      	str	r7, [r0, #8]
90015d26:	6907      	ldr	r7, [r0, #16]
90015d28:	45b6      	cmp	lr, r6
90015d2a:	803e      	strh	r6, [r7, #0]
90015d2c:	807a      	strh	r2, [r7, #2]
90015d2e:	f8a7 a004 	strh.w	sl, [r7, #4]
90015d32:	f8a7 a006 	strh.w	sl, [r7, #6]
90015d36:	d1c6      	bne.n	90015cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90015d38:	9a04      	ldr	r2, [sp, #16]
90015d3a:	1ad3      	subs	r3, r2, r3
90015d3c:	6902      	ldr	r2, [r0, #16]
90015d3e:	8891      	ldrh	r1, [r2, #4]
90015d40:	88d6      	ldrh	r6, [r2, #6]
90015d42:	4419      	add	r1, r3
90015d44:	8091      	strh	r1, [r2, #4]
90015d46:	9902      	ldr	r1, [sp, #8]
90015d48:	f101 0c20 	add.w	ip, r1, #32
90015d4c:	9901      	ldr	r1, [sp, #4]
90015d4e:	ebac 0c01 	sub.w	ip, ip, r1
90015d52:	fb03 630c 	mla	r3, r3, ip, r6
90015d56:	80d3      	strh	r3, [r2, #6]
90015d58:	e750      	b.n	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015d5a:	9d05      	ldr	r5, [sp, #20]
90015d5c:	1aa2      	subs	r2, r4, r2
90015d5e:	eba5 0501 	sub.w	r5, r5, r1
90015d62:	9202      	str	r2, [sp, #8]
90015d64:	9508      	str	r5, [sp, #32]
90015d66:	f140 8128 	bpl.w	90015fba <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90015d6a:	9a03      	ldr	r2, [sp, #12]
90015d6c:	2a00      	cmp	r2, #0
90015d6e:	f6ff af45 	blt.w	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015d72:	9a02      	ldr	r2, [sp, #8]
90015d74:	f04f 34ff 	mov.w	r4, #4294967295
90015d78:	4252      	negs	r2, r2
90015d7a:	940b      	str	r4, [sp, #44]	; 0x2c
90015d7c:	2400      	movs	r4, #0
90015d7e:	9202      	str	r2, [sp, #8]
90015d80:	9a06      	ldr	r2, [sp, #24]
90015d82:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90015d86:	9206      	str	r2, [sp, #24]
90015d88:	462a      	mov	r2, r5
90015d8a:	435a      	muls	r2, r3
90015d8c:	9401      	str	r4, [sp, #4]
90015d8e:	9c02      	ldr	r4, [sp, #8]
90015d90:	9d02      	ldr	r5, [sp, #8]
90015d92:	fb92 f4f4 	sdiv	r4, r2, r4
90015d96:	fb05 2214 	mls	r2, r5, r4, r2
90015d9a:	2a00      	cmp	r2, #0
90015d9c:	9207      	str	r2, [sp, #28]
90015d9e:	bfbc      	itt	lt
90015da0:	1952      	addlt	r2, r2, r5
90015da2:	f104 34ff 	addlt.w	r4, r4, #4294967295
90015da6:	6905      	ldr	r5, [r0, #16]
90015da8:	bfb8      	it	lt
90015daa:	9207      	strlt	r2, [sp, #28]
90015dac:	eb04 0901 	add.w	r9, r4, r1
90015db0:	9a01      	ldr	r2, [sp, #4]
90015db2:	ea4f 1669 	mov.w	r6, r9, asr #5
90015db6:	429a      	cmp	r2, r3
90015db8:	f040 8111 	bne.w	90015fde <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90015dbc:	f9b5 3000 	ldrsh.w	r3, [r5]
90015dc0:	429e      	cmp	r6, r3
90015dc2:	d104      	bne.n	90015dce <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90015dc4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90015dc8:	9a03      	ldr	r2, [sp, #12]
90015dca:	429a      	cmp	r2, r3
90015dcc:	d01b      	beq.n	90015e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90015dce:	88ea      	ldrh	r2, [r5, #6]
90015dd0:	88ab      	ldrh	r3, [r5, #4]
90015dd2:	4313      	orrs	r3, r2
90015dd4:	d010      	beq.n	90015df8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015dd6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015dda:	2a00      	cmp	r2, #0
90015ddc:	db0c      	blt.n	90015df8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015dde:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015de0:	429a      	cmp	r2, r3
90015de2:	da09      	bge.n	90015df8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90015de4:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90015de8:	429a      	cmp	r2, r3
90015dea:	f102 0201 	add.w	r2, r2, #1
90015dee:	bf38      	it	cc
90015df0:	3508      	addcc	r5, #8
90015df2:	6082      	str	r2, [r0, #8]
90015df4:	bf38      	it	cc
90015df6:	6105      	strcc	r5, [r0, #16]
90015df8:	6903      	ldr	r3, [r0, #16]
90015dfa:	9a03      	ldr	r2, [sp, #12]
90015dfc:	801e      	strh	r6, [r3, #0]
90015dfe:	805a      	strh	r2, [r3, #2]
90015e00:	2200      	movs	r2, #0
90015e02:	809a      	strh	r2, [r3, #4]
90015e04:	80da      	strh	r2, [r3, #6]
90015e06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90015e08:	9a03      	ldr	r2, [sp, #12]
90015e0a:	6901      	ldr	r1, [r0, #16]
90015e0c:	441a      	add	r2, r3
90015e0e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015e12:	42b3      	cmp	r3, r6
90015e14:	d103      	bne.n	90015e1e <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90015e16:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90015e1a:	429a      	cmp	r2, r3
90015e1c:	d01a      	beq.n	90015e54 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90015e1e:	88cc      	ldrh	r4, [r1, #6]
90015e20:	888b      	ldrh	r3, [r1, #4]
90015e22:	4323      	orrs	r3, r4
90015e24:	d010      	beq.n	90015e48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015e26:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015e2a:	2c00      	cmp	r4, #0
90015e2c:	db0c      	blt.n	90015e48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015e2e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015e30:	429c      	cmp	r4, r3
90015e32:	da09      	bge.n	90015e48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90015e34:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015e38:	429c      	cmp	r4, r3
90015e3a:	f104 0401 	add.w	r4, r4, #1
90015e3e:	bf38      	it	cc
90015e40:	3108      	addcc	r1, #8
90015e42:	6084      	str	r4, [r0, #8]
90015e44:	bf38      	it	cc
90015e46:	6101      	strcc	r1, [r0, #16]
90015e48:	6903      	ldr	r3, [r0, #16]
90015e4a:	2100      	movs	r1, #0
90015e4c:	801e      	strh	r6, [r3, #0]
90015e4e:	805a      	strh	r2, [r3, #2]
90015e50:	8099      	strh	r1, [r3, #4]
90015e52:	80d9      	strh	r1, [r3, #6]
90015e54:	9b06      	ldr	r3, [sp, #24]
90015e56:	4293      	cmp	r3, r2
90015e58:	f000 8082 	beq.w	90015f60 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90015e5c:	9b08      	ldr	r3, [sp, #32]
90015e5e:	9902      	ldr	r1, [sp, #8]
90015e60:	015b      	lsls	r3, r3, #5
90015e62:	9c02      	ldr	r4, [sp, #8]
90015e64:	fb93 f1f1 	sdiv	r1, r3, r1
90015e68:	fb04 3311 	mls	r3, r4, r1, r3
90015e6c:	9103      	str	r1, [sp, #12]
90015e6e:	2b00      	cmp	r3, #0
90015e70:	9308      	str	r3, [sp, #32]
90015e72:	da04      	bge.n	90015e7e <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90015e74:	1e4b      	subs	r3, r1, #1
90015e76:	9303      	str	r3, [sp, #12]
90015e78:	9b08      	ldr	r3, [sp, #32]
90015e7a:	4423      	add	r3, r4
90015e7c:	9308      	str	r3, [sp, #32]
90015e7e:	9b07      	ldr	r3, [sp, #28]
90015e80:	464f      	mov	r7, r9
90015e82:	9902      	ldr	r1, [sp, #8]
90015e84:	2600      	movs	r6, #0
90015e86:	1a5b      	subs	r3, r3, r1
90015e88:	9307      	str	r3, [sp, #28]
90015e8a:	9b01      	ldr	r3, [sp, #4]
90015e8c:	f1c3 0320 	rsb	r3, r3, #32
90015e90:	930e      	str	r3, [sp, #56]	; 0x38
90015e92:	990e      	ldr	r1, [sp, #56]	; 0x38
90015e94:	9b01      	ldr	r3, [sp, #4]
90015e96:	1a5b      	subs	r3, r3, r1
90015e98:	930a      	str	r3, [sp, #40]	; 0x28
90015e9a:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90015e9e:	185b      	adds	r3, r3, r1
90015ea0:	bf58      	it	pl
90015ea2:	9902      	ldrpl	r1, [sp, #8]
90015ea4:	9307      	str	r3, [sp, #28]
90015ea6:	bf57      	itett	pl
90015ea8:	1a5b      	subpl	r3, r3, r1
90015eaa:	9903      	ldrmi	r1, [sp, #12]
90015eac:	9307      	strpl	r3, [sp, #28]
90015eae:	9b03      	ldrpl	r3, [sp, #12]
90015eb0:	bf58      	it	pl
90015eb2:	1c59      	addpl	r1, r3, #1
90015eb4:	2a00      	cmp	r2, #0
90015eb6:	4489      	add	r9, r1
90015eb8:	ea4f 1a69 	mov.w	sl, r9, asr #5
90015ebc:	db2e      	blt.n	90015f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015ebe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015ec0:	4293      	cmp	r3, r2
90015ec2:	dd2b      	ble.n	90015f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015ec4:	9c01      	ldr	r4, [sp, #4]
90015ec6:	6905      	ldr	r5, [r0, #16]
90015ec8:	46a0      	mov	r8, r4
90015eca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90015ecc:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90015ed0:	45a0      	cmp	r8, r4
90015ed2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90015ed6:	f040 814c 	bne.w	90016172 <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90015eda:	f9b5 1000 	ldrsh.w	r1, [r5]
90015ede:	4551      	cmp	r1, sl
90015ee0:	d103      	bne.n	90015eea <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90015ee2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015ee6:	4291      	cmp	r1, r2
90015ee8:	d018      	beq.n	90015f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90015eea:	ea5c 010e 	orrs.w	r1, ip, lr
90015eee:	d00f      	beq.n	90015f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015ef0:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90015ef4:	2900      	cmp	r1, #0
90015ef6:	db0b      	blt.n	90015f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015ef8:	428b      	cmp	r3, r1
90015efa:	dd09      	ble.n	90015f10 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90015efc:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90015f00:	4299      	cmp	r1, r3
90015f02:	f101 0101 	add.w	r1, r1, #1
90015f06:	bf38      	it	cc
90015f08:	3508      	addcc	r5, #8
90015f0a:	6081      	str	r1, [r0, #8]
90015f0c:	bf38      	it	cc
90015f0e:	6105      	strcc	r5, [r0, #16]
90015f10:	6903      	ldr	r3, [r0, #16]
90015f12:	f8a3 a000 	strh.w	sl, [r3]
90015f16:	805a      	strh	r2, [r3, #2]
90015f18:	809e      	strh	r6, [r3, #4]
90015f1a:	80de      	strh	r6, [r3, #6]
90015f1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90015f1e:	6901      	ldr	r1, [r0, #16]
90015f20:	441a      	add	r2, r3
90015f22:	88cc      	ldrh	r4, [r1, #6]
90015f24:	888b      	ldrh	r3, [r1, #4]
90015f26:	4323      	orrs	r3, r4
90015f28:	d010      	beq.n	90015f4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015f2a:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90015f2e:	2c00      	cmp	r4, #0
90015f30:	db0c      	blt.n	90015f4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015f32:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90015f34:	429c      	cmp	r4, r3
90015f36:	da09      	bge.n	90015f4c <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90015f38:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90015f3c:	429c      	cmp	r4, r3
90015f3e:	f104 0401 	add.w	r4, r4, #1
90015f42:	bf38      	it	cc
90015f44:	3108      	addcc	r1, #8
90015f46:	6084      	str	r4, [r0, #8]
90015f48:	bf38      	it	cc
90015f4a:	6101      	strcc	r1, [r0, #16]
90015f4c:	6903      	ldr	r3, [r0, #16]
90015f4e:	464f      	mov	r7, r9
90015f50:	f8a3 a000 	strh.w	sl, [r3]
90015f54:	805a      	strh	r2, [r3, #2]
90015f56:	809e      	strh	r6, [r3, #4]
90015f58:	80de      	strh	r6, [r3, #6]
90015f5a:	9b06      	ldr	r3, [sp, #24]
90015f5c:	4293      	cmp	r3, r2
90015f5e:	d19c      	bne.n	90015e9a <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90015f60:	9b01      	ldr	r3, [sp, #4]
90015f62:	6907      	ldr	r7, [r0, #16]
90015f64:	f1c3 0620 	rsb	r6, r3, #32
90015f68:	9b05      	ldr	r3, [sp, #20]
90015f6a:	ea4f 1e63 	mov.w	lr, r3, asr #5
90015f6e:	9b04      	ldr	r3, [sp, #16]
90015f70:	429e      	cmp	r6, r3
90015f72:	f040 81c7 	bne.w	90016304 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90015f76:	f9b7 3000 	ldrsh.w	r3, [r7]
90015f7a:	459e      	cmp	lr, r3
90015f7c:	d104      	bne.n	90015f88 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90015f7e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015f82:	429a      	cmp	r2, r3
90015f84:	f43f ae3a 	beq.w	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015f88:	88f9      	ldrh	r1, [r7, #6]
90015f8a:	88bb      	ldrh	r3, [r7, #4]
90015f8c:	430b      	orrs	r3, r1
90015f8e:	d010      	beq.n	90015fb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f90:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90015f94:	2b00      	cmp	r3, #0
90015f96:	db0c      	blt.n	90015fb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f98:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90015f9a:	428b      	cmp	r3, r1
90015f9c:	da09      	bge.n	90015fb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90015f9e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90015fa2:	428b      	cmp	r3, r1
90015fa4:	f103 0301 	add.w	r3, r3, #1
90015fa8:	bf38      	it	cc
90015faa:	3708      	addcc	r7, #8
90015fac:	6083      	str	r3, [r0, #8]
90015fae:	bf38      	it	cc
90015fb0:	6107      	strcc	r7, [r0, #16]
90015fb2:	6903      	ldr	r3, [r0, #16]
90015fb4:	f8a3 e000 	strh.w	lr, [r3]
90015fb8:	e603      	b.n	90015bc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90015fba:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90015fbc:	9c03      	ldr	r4, [sp, #12]
90015fbe:	42a2      	cmp	r2, r4
90015fc0:	f6ff ae1c 	blt.w	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90015fc4:	9c06      	ldr	r4, [sp, #24]
90015fc6:	42a2      	cmp	r2, r4
90015fc8:	9c08      	ldr	r4, [sp, #32]
90015fca:	bfbc      	itt	lt
90015fcc:	3201      	addlt	r2, #1
90015fce:	9206      	strlt	r2, [sp, #24]
90015fd0:	f1c3 0220 	rsb	r2, r3, #32
90015fd4:	4362      	muls	r2, r4
90015fd6:	2401      	movs	r4, #1
90015fd8:	940b      	str	r4, [sp, #44]	; 0x2c
90015fda:	2420      	movs	r4, #32
90015fdc:	e6d6      	b.n	90015d8c <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90015fde:	ea4f 1861 	mov.w	r8, r1, asr #5
90015fe2:	f009 021f 	and.w	r2, r9, #31
90015fe6:	f001 011f 	and.w	r1, r1, #31
90015fea:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90015fee:	920c      	str	r2, [sp, #48]	; 0x30
90015ff0:	45b0      	cmp	r8, r6
90015ff2:	9a01      	ldr	r2, [sp, #4]
90015ff4:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90015ff8:	eba2 0203 	sub.w	r2, r2, r3
90015ffc:	d108      	bne.n	90016010 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90015ffe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016000:	4496      	add	lr, r2
90016002:	4419      	add	r1, r3
90016004:	f8a5 e004 	strh.w	lr, [r5, #4]
90016008:	fb02 a101 	mla	r1, r2, r1, sl
9001600c:	80e9      	strh	r1, [r5, #6]
9001600e:	e6fa      	b.n	90015e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016010:	2c00      	cmp	r4, #0
90016012:	f2c0 80a7 	blt.w	90016164 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90016016:	2701      	movs	r7, #1
90016018:	f1c1 0c20 	rsb	ip, r1, #32
9001601c:	970a      	str	r7, [sp, #40]	; 0x28
9001601e:	2720      	movs	r7, #32
90016020:	fb02 f20c 	mul.w	r2, r2, ip
90016024:	9709      	str	r7, [sp, #36]	; 0x24
90016026:	9f09      	ldr	r7, [sp, #36]	; 0x24
90016028:	fb92 fcf4 	sdiv	ip, r2, r4
9001602c:	fb04 221c 	mls	r2, r4, ip, r2
90016030:	4439      	add	r1, r7
90016032:	2a00      	cmp	r2, #0
90016034:	bfbc      	itt	lt
90016036:	f10c 3cff 	addlt.w	ip, ip, #4294967295
9001603a:	1912      	addlt	r2, r2, r4
9001603c:	fb0c a101 	mla	r1, ip, r1, sl
90016040:	44e6      	add	lr, ip
90016042:	80e9      	strh	r1, [r5, #6]
90016044:	990a      	ldr	r1, [sp, #40]	; 0x28
90016046:	f8a5 e004 	strh.w	lr, [r5, #4]
9001604a:	eb08 0501 	add.w	r5, r8, r1
9001604e:	6901      	ldr	r1, [r0, #16]
90016050:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90016054:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90016058:	ea58 070e 	orrs.w	r7, r8, lr
9001605c:	d010      	beq.n	90016080 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001605e:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90016062:	f1be 0f00 	cmp.w	lr, #0
90016066:	db0b      	blt.n	90016080 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90016068:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001606a:	45be      	cmp	lr, r7
9001606c:	da08      	bge.n	90016080 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001606e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016072:	45be      	cmp	lr, r7
90016074:	bf3c      	itt	cc
90016076:	3108      	addcc	r1, #8
90016078:	6101      	strcc	r1, [r0, #16]
9001607a:	f10e 0101 	add.w	r1, lr, #1
9001607e:	6081      	str	r1, [r0, #8]
90016080:	6901      	ldr	r1, [r0, #16]
90016082:	f04f 0e00 	mov.w	lr, #0
90016086:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001608a:	42ae      	cmp	r6, r5
9001608c:	800d      	strh	r5, [r1, #0]
9001608e:	4463      	add	r3, ip
90016090:	f8a1 8002 	strh.w	r8, [r1, #2]
90016094:	f8a1 e004 	strh.w	lr, [r1, #4]
90016098:	f8a1 e006 	strh.w	lr, [r1, #6]
9001609c:	d053      	beq.n	90016146 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001609e:	9901      	ldr	r1, [sp, #4]
900160a0:	1b12      	subs	r2, r2, r4
900160a2:	1ac9      	subs	r1, r1, r3
900160a4:	4461      	add	r1, ip
900160a6:	0149      	lsls	r1, r1, #5
900160a8:	fb91 fef4 	sdiv	lr, r1, r4
900160ac:	fb04 111e 	mls	r1, r4, lr, r1
900160b0:	2900      	cmp	r1, #0
900160b2:	bfbc      	itt	lt
900160b4:	f10e 3eff 	addlt.w	lr, lr, #4294967295
900160b8:	1909      	addlt	r1, r1, r4
900160ba:	f10e 0701 	add.w	r7, lr, #1
900160be:	970d      	str	r7, [sp, #52]	; 0x34
900160c0:	f8d0 a010 	ldr.w	sl, [r0, #16]
900160c4:	1852      	adds	r2, r2, r1
900160c6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900160c8:	bf54      	ite	pl
900160ca:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
900160ce:	46f4      	movmi	ip, lr
900160d0:	f8ba b004 	ldrh.w	fp, [sl, #4]
900160d4:	bf58      	it	pl
900160d6:	1b12      	subpl	r2, r2, r4
900160d8:	4463      	add	r3, ip
900160da:	443d      	add	r5, r7
900160dc:	44e3      	add	fp, ip
900160de:	f8aa b004 	strh.w	fp, [sl, #4]
900160e2:	f8ba b006 	ldrh.w	fp, [sl, #6]
900160e6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900160ea:	f8aa b006 	strh.w	fp, [sl, #6]
900160ee:	f8d0 c010 	ldr.w	ip, [r0, #16]
900160f2:	f8bc b006 	ldrh.w	fp, [ip, #6]
900160f6:	f8bc a004 	ldrh.w	sl, [ip, #4]
900160fa:	ea5b 070a 	orrs.w	r7, fp, sl
900160fe:	d014      	beq.n	9001612a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016100:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90016104:	f1ba 0f00 	cmp.w	sl, #0
90016108:	db0f      	blt.n	9001612a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
9001610a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001610c:	45ba      	cmp	sl, r7
9001610e:	da0c      	bge.n	9001612a <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90016110:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90016114:	45ba      	cmp	sl, r7
90016116:	f10a 0a01 	add.w	sl, sl, #1
9001611a:	bf38      	it	cc
9001611c:	f10c 0c08 	addcc.w	ip, ip, #8
90016120:	f8c0 a008 	str.w	sl, [r0, #8]
90016124:	bf38      	it	cc
90016126:	f8c0 c010 	strcc.w	ip, [r0, #16]
9001612a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001612e:	f04f 0700 	mov.w	r7, #0
90016132:	42ae      	cmp	r6, r5
90016134:	f8ac 5000 	strh.w	r5, [ip]
90016138:	f8ac 8002 	strh.w	r8, [ip, #2]
9001613c:	f8ac 7004 	strh.w	r7, [ip, #4]
90016140:	f8ac 7006 	strh.w	r7, [ip, #6]
90016144:	d1bc      	bne.n	900160c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90016146:	6904      	ldr	r4, [r0, #16]
90016148:	9a01      	ldr	r2, [sp, #4]
9001614a:	990c      	ldr	r1, [sp, #48]	; 0x30
9001614c:	1ad3      	subs	r3, r2, r3
9001614e:	88a2      	ldrh	r2, [r4, #4]
90016150:	3120      	adds	r1, #32
90016152:	441a      	add	r2, r3
90016154:	80a2      	strh	r2, [r4, #4]
90016156:	9a09      	ldr	r2, [sp, #36]	; 0x24
90016158:	1a89      	subs	r1, r1, r2
9001615a:	88e2      	ldrh	r2, [r4, #6]
9001615c:	fb03 2301 	mla	r3, r3, r1, r2
90016160:	80e3      	strh	r3, [r4, #6]
90016162:	e650      	b.n	90015e06 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90016164:	f04f 37ff 	mov.w	r7, #4294967295
90016168:	434a      	muls	r2, r1
9001616a:	4264      	negs	r4, r4
9001616c:	970a      	str	r7, [sp, #40]	; 0x28
9001616e:	2700      	movs	r7, #0
90016170:	e758      	b.n	90016024 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90016172:	ea4f 1867 	mov.w	r8, r7, asr #5
90016176:	f009 031f 	and.w	r3, r9, #31
9001617a:	f007 071f 	and.w	r7, r7, #31
9001617e:	fa1f fc8c 	uxth.w	ip, ip
90016182:	45d0      	cmp	r8, sl
90016184:	930f      	str	r3, [sp, #60]	; 0x3c
90016186:	fa1f fe8e 	uxth.w	lr, lr
9001618a:	d10a      	bne.n	900161a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
9001618c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001618e:	449c      	add	ip, r3
90016190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016192:	441f      	add	r7, r3
90016194:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90016196:	f8a5 c004 	strh.w	ip, [r5, #4]
9001619a:	fb03 e707 	mla	r7, r3, r7, lr
9001619e:	80ef      	strh	r7, [r5, #6]
900161a0:	e6bc      	b.n	90015f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900161a2:	2900      	cmp	r1, #0
900161a4:	f2c0 80a6 	blt.w	900162f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900161a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900161aa:	f1c7 0320 	rsb	r3, r7, #32
900161ae:	4363      	muls	r3, r4
900161b0:	2401      	movs	r4, #1
900161b2:	940d      	str	r4, [sp, #52]	; 0x34
900161b4:	2420      	movs	r4, #32
900161b6:	940c      	str	r4, [sp, #48]	; 0x30
900161b8:	fb93 f4f1 	sdiv	r4, r3, r1
900161bc:	fb01 3b14 	mls	fp, r1, r4, r3
900161c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900161c2:	f1bb 0f00 	cmp.w	fp, #0
900161c6:	441f      	add	r7, r3
900161c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900161ca:	bfbc      	itt	lt
900161cc:	f104 34ff 	addlt.w	r4, r4, #4294967295
900161d0:	448b      	addlt	fp, r1
900161d2:	fb04 e707 	mla	r7, r4, r7, lr
900161d6:	44a4      	add	ip, r4
900161d8:	80ef      	strh	r7, [r5, #6]
900161da:	f8a5 c004 	strh.w	ip, [r5, #4]
900161de:	eb08 0503 	add.w	r5, r8, r3
900161e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900161e6:	f8bc e006 	ldrh.w	lr, [ip, #6]
900161ea:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900161ee:	ea5e 0307 	orrs.w	r3, lr, r7
900161f2:	d011      	beq.n	90016218 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900161f4:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900161f8:	f1be 0f00 	cmp.w	lr, #0
900161fc:	db0c      	blt.n	90016218 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900161fe:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016200:	45be      	cmp	lr, r7
90016202:	da09      	bge.n	90016218 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90016204:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90016208:	45be      	cmp	lr, r7
9001620a:	bf3c      	itt	cc
9001620c:	f10c 0708 	addcc.w	r7, ip, #8
90016210:	6107      	strcc	r7, [r0, #16]
90016212:	f10e 0701 	add.w	r7, lr, #1
90016216:	6087      	str	r7, [r0, #8]
90016218:	6907      	ldr	r7, [r0, #16]
9001621a:	b213      	sxth	r3, r2
9001621c:	4555      	cmp	r5, sl
9001621e:	9310      	str	r3, [sp, #64]	; 0x40
90016220:	807b      	strh	r3, [r7, #2]
90016222:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90016224:	803d      	strh	r5, [r7, #0]
90016226:	80be      	strh	r6, [r7, #4]
90016228:	eb04 0c03 	add.w	ip, r4, r3
9001622c:	80fe      	strh	r6, [r7, #6]
9001622e:	d050      	beq.n	900162d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90016230:	9b01      	ldr	r3, [sp, #4]
90016232:	eba3 070c 	sub.w	r7, r3, ip
90016236:	ebab 0301 	sub.w	r3, fp, r1
9001623a:	443c      	add	r4, r7
9001623c:	9309      	str	r3, [sp, #36]	; 0x24
9001623e:	0164      	lsls	r4, r4, #5
90016240:	fb94 f8f1 	sdiv	r8, r4, r1
90016244:	fb01 4418 	mls	r4, r1, r8, r4
90016248:	2c00      	cmp	r4, #0
9001624a:	bfbc      	itt	lt
9001624c:	f108 38ff 	addlt.w	r8, r8, #4294967295
90016250:	1864      	addlt	r4, r4, r1
90016252:	f108 0701 	add.w	r7, r8, #1
90016256:	9711      	str	r7, [sp, #68]	; 0x44
90016258:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001625a:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001625e:	191b      	adds	r3, r3, r4
90016260:	f8be b004 	ldrh.w	fp, [lr, #4]
90016264:	bf54      	ite	pl
90016266:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90016268:	4647      	movmi	r7, r8
9001626a:	9309      	str	r3, [sp, #36]	; 0x24
9001626c:	bf58      	it	pl
9001626e:	1a5b      	subpl	r3, r3, r1
90016270:	44bb      	add	fp, r7
90016272:	44bc      	add	ip, r7
90016274:	bf58      	it	pl
90016276:	9309      	strpl	r3, [sp, #36]	; 0x24
90016278:	f8ae b004 	strh.w	fp, [lr, #4]
9001627c:	f8be b006 	ldrh.w	fp, [lr, #6]
90016280:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016284:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90016286:	f8ae b006 	strh.w	fp, [lr, #6]
9001628a:	443d      	add	r5, r7
9001628c:	f8d0 e010 	ldr.w	lr, [r0, #16]
90016290:	f8be b006 	ldrh.w	fp, [lr, #6]
90016294:	f8be 7004 	ldrh.w	r7, [lr, #4]
90016298:	ea5b 0307 	orrs.w	r3, fp, r7
9001629c:	d011      	beq.n	900162c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001629e:	f9be b002 	ldrsh.w	fp, [lr, #2]
900162a2:	f1bb 0f00 	cmp.w	fp, #0
900162a6:	db0c      	blt.n	900162c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900162a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900162aa:	45bb      	cmp	fp, r7
900162ac:	da09      	bge.n	900162c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900162ae:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900162b2:	45bb      	cmp	fp, r7
900162b4:	bf3c      	itt	cc
900162b6:	f10e 0708 	addcc.w	r7, lr, #8
900162ba:	6107      	strcc	r7, [r0, #16]
900162bc:	f10b 0701 	add.w	r7, fp, #1
900162c0:	6087      	str	r7, [r0, #8]
900162c2:	6907      	ldr	r7, [r0, #16]
900162c4:	4555      	cmp	r5, sl
900162c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900162c8:	803d      	strh	r5, [r7, #0]
900162ca:	807b      	strh	r3, [r7, #2]
900162cc:	80be      	strh	r6, [r7, #4]
900162ce:	80fe      	strh	r6, [r7, #6]
900162d0:	d1c2      	bne.n	90016258 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900162d2:	9b01      	ldr	r3, [sp, #4]
900162d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900162d6:	eba3 0c0c 	sub.w	ip, r3, ip
900162da:	6903      	ldr	r3, [r0, #16]
900162dc:	3720      	adds	r7, #32
900162de:	8899      	ldrh	r1, [r3, #4]
900162e0:	4461      	add	r1, ip
900162e2:	8099      	strh	r1, [r3, #4]
900162e4:	990c      	ldr	r1, [sp, #48]	; 0x30
900162e6:	1a7f      	subs	r7, r7, r1
900162e8:	88d9      	ldrh	r1, [r3, #6]
900162ea:	fb0c 1c07 	mla	ip, ip, r7, r1
900162ee:	f8a3 c006 	strh.w	ip, [r3, #6]
900162f2:	e613      	b.n	90015f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900162f4:	f04f 34ff 	mov.w	r4, #4294967295
900162f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900162fa:	4249      	negs	r1, r1
900162fc:	940d      	str	r4, [sp, #52]	; 0x34
900162fe:	2400      	movs	r4, #0
90016300:	437b      	muls	r3, r7
90016302:	e758      	b.n	900161b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90016304:	9905      	ldr	r1, [sp, #20]
90016306:	ea4f 1b69 	mov.w	fp, r9, asr #5
9001630a:	f009 0c1f 	and.w	ip, r9, #31
9001630e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90016312:	f001 011f 	and.w	r1, r1, #31
90016316:	45f3      	cmp	fp, lr
90016318:	f8b7 a006 	ldrh.w	sl, [r7, #6]
9001631c:	9102      	str	r1, [sp, #8]
9001631e:	9904      	ldr	r1, [sp, #16]
90016320:	eba1 0406 	sub.w	r4, r1, r6
90016324:	d108      	bne.n	90016338 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90016326:	9b02      	ldr	r3, [sp, #8]
90016328:	44a0      	add	r8, r4
9001632a:	449c      	add	ip, r3
9001632c:	f8a7 8004 	strh.w	r8, [r7, #4]
90016330:	fb04 a40c 	mla	r4, r4, ip, sl
90016334:	80fc      	strh	r4, [r7, #6]
90016336:	e461      	b.n	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90016338:	9905      	ldr	r1, [sp, #20]
9001633a:	ebb1 0109 	subs.w	r1, r1, r9
9001633e:	bf51      	iteee	pl
90016340:	f1cc 0520 	rsbpl	r5, ip, #32
90016344:	fb04 f40c 	mulmi.w	r4, r4, ip
90016348:	4249      	negmi	r1, r1
9001634a:	2500      	movmi	r5, #0
9001634c:	bf5d      	ittte	pl
9001634e:	436c      	mulpl	r4, r5
90016350:	2520      	movpl	r5, #32
90016352:	f04f 0901 	movpl.w	r9, #1
90016356:	f04f 39ff 	movmi.w	r9, #4294967295
9001635a:	9501      	str	r5, [sp, #4]
9001635c:	9b01      	ldr	r3, [sp, #4]
9001635e:	fb94 f5f1 	sdiv	r5, r4, r1
90016362:	fb01 4415 	mls	r4, r1, r5, r4
90016366:	449c      	add	ip, r3
90016368:	eb0b 0309 	add.w	r3, fp, r9
9001636c:	2c00      	cmp	r4, #0
9001636e:	bfbc      	itt	lt
90016370:	f105 35ff 	addlt.w	r5, r5, #4294967295
90016374:	1864      	addlt	r4, r4, r1
90016376:	44a8      	add	r8, r5
90016378:	fb05 ac0c 	mla	ip, r5, ip, sl
9001637c:	f8a7 8004 	strh.w	r8, [r7, #4]
90016380:	f8a7 c006 	strh.w	ip, [r7, #6]
90016384:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016388:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001638c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016390:	ea58 0707 	orrs.w	r7, r8, r7
90016394:	d011      	beq.n	900163ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90016396:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001639a:	f1b8 0f00 	cmp.w	r8, #0
9001639e:	db0c      	blt.n	900163ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900163a0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900163a2:	45b8      	cmp	r8, r7
900163a4:	da09      	bge.n	900163ba <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900163a6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900163aa:	45b8      	cmp	r8, r7
900163ac:	bf3c      	itt	cc
900163ae:	f10c 0708 	addcc.w	r7, ip, #8
900163b2:	6107      	strcc	r7, [r0, #16]
900163b4:	f108 0701 	add.w	r7, r8, #1
900163b8:	6087      	str	r7, [r0, #8]
900163ba:	6907      	ldr	r7, [r0, #16]
900163bc:	f04f 0c00 	mov.w	ip, #0
900163c0:	b212      	sxth	r2, r2
900163c2:	459e      	cmp	lr, r3
900163c4:	803b      	strh	r3, [r7, #0]
900163c6:	442e      	add	r6, r5
900163c8:	807a      	strh	r2, [r7, #2]
900163ca:	f8a7 c004 	strh.w	ip, [r7, #4]
900163ce:	f8a7 c006 	strh.w	ip, [r7, #6]
900163d2:	d04b      	beq.n	9001646c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900163d4:	9f04      	ldr	r7, [sp, #16]
900163d6:	1a64      	subs	r4, r4, r1
900163d8:	f04f 0a00 	mov.w	sl, #0
900163dc:	1bbf      	subs	r7, r7, r6
900163de:	443d      	add	r5, r7
900163e0:	016d      	lsls	r5, r5, #5
900163e2:	fb95 f8f1 	sdiv	r8, r5, r1
900163e6:	fb01 5518 	mls	r5, r1, r8, r5
900163ea:	4565      	cmp	r5, ip
900163ec:	bfbc      	itt	lt
900163ee:	f108 38ff 	addlt.w	r8, r8, #4294967295
900163f2:	186d      	addlt	r5, r5, r1
900163f4:	f108 0701 	add.w	r7, r8, #1
900163f8:	9703      	str	r7, [sp, #12]
900163fa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900163fe:	1964      	adds	r4, r4, r5
90016400:	444b      	add	r3, r9
90016402:	bf54      	ite	pl
90016404:	9f03      	ldrpl	r7, [sp, #12]
90016406:	4647      	movmi	r7, r8
90016408:	f8bc b004 	ldrh.w	fp, [ip, #4]
9001640c:	bf58      	it	pl
9001640e:	1a64      	subpl	r4, r4, r1
90016410:	443e      	add	r6, r7
90016412:	44bb      	add	fp, r7
90016414:	f8ac b004 	strh.w	fp, [ip, #4]
90016418:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001641c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90016420:	f8ac b006 	strh.w	fp, [ip, #6]
90016424:	f8d0 c010 	ldr.w	ip, [r0, #16]
90016428:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001642c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90016430:	ea5b 0707 	orrs.w	r7, fp, r7
90016434:	d011      	beq.n	9001645a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016436:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001643a:	f1bb 0f00 	cmp.w	fp, #0
9001643e:	db0c      	blt.n	9001645a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016440:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90016442:	45bb      	cmp	fp, r7
90016444:	da09      	bge.n	9001645a <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90016446:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001644a:	45bb      	cmp	fp, r7
9001644c:	bf3c      	itt	cc
9001644e:	f10c 0708 	addcc.w	r7, ip, #8
90016452:	6107      	strcc	r7, [r0, #16]
90016454:	f10b 0701 	add.w	r7, fp, #1
90016458:	6087      	str	r7, [r0, #8]
9001645a:	6907      	ldr	r7, [r0, #16]
9001645c:	459e      	cmp	lr, r3
9001645e:	803b      	strh	r3, [r7, #0]
90016460:	807a      	strh	r2, [r7, #2]
90016462:	f8a7 a004 	strh.w	sl, [r7, #4]
90016466:	f8a7 a006 	strh.w	sl, [r7, #6]
9001646a:	d1c6      	bne.n	900163fa <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
9001646c:	9b04      	ldr	r3, [sp, #16]
9001646e:	1b9e      	subs	r6, r3, r6
90016470:	6903      	ldr	r3, [r0, #16]
90016472:	889a      	ldrh	r2, [r3, #4]
90016474:	4432      	add	r2, r6
90016476:	809a      	strh	r2, [r3, #4]
90016478:	9a02      	ldr	r2, [sp, #8]
9001647a:	f102 0c20 	add.w	ip, r2, #32
9001647e:	9a01      	ldr	r2, [sp, #4]
90016480:	ebac 0c02 	sub.w	ip, ip, r2
90016484:	88da      	ldrh	r2, [r3, #6]
90016486:	fb06 260c 	mla	r6, r6, ip, r2
9001648a:	80de      	strh	r6, [r3, #6]
9001648c:	f7ff bbb6 	b.w	90015bfc <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90016490 <_ZN8touchgfx7Outline6lineToEii>:
90016490:	6a43      	ldr	r3, [r0, #36]	; 0x24
90016492:	079b      	lsls	r3, r3, #30
90016494:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90016496:	460e      	mov	r6, r1
90016498:	4615      	mov	r5, r2
9001649a:	d511      	bpl.n	900164c0 <_ZN8touchgfx7Outline6lineToEii+0x30>
9001649c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900164a0:	ea86 0701 	eor.w	r7, r6, r1
900164a4:	ea85 0302 	eor.w	r3, r5, r2
900164a8:	433b      	orrs	r3, r7
900164aa:	d009      	beq.n	900164c0 <_ZN8touchgfx7Outline6lineToEii+0x30>
900164ac:	4633      	mov	r3, r6
900164ae:	9500      	str	r5, [sp, #0]
900164b0:	f7ff fb4c 	bl	90015b4c <_ZN8touchgfx7Outline10renderLineEiiii>
900164b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
900164b6:	f043 0301 	orr.w	r3, r3, #1
900164ba:	e9c0 6505 	strd	r6, r5, [r0, #20]
900164be:	6243      	str	r3, [r0, #36]	; 0x24
900164c0:	b003      	add	sp, #12
900164c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900164c4 <_ZN8touchgfx7Outline6moveToEii>:
900164c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900164c6:	6a43      	ldr	r3, [r0, #36]	; 0x24
900164c8:	4615      	mov	r5, r2
900164ca:	4604      	mov	r4, r0
900164cc:	460e      	mov	r6, r1
900164ce:	079a      	lsls	r2, r3, #30
900164d0:	d401      	bmi.n	900164d6 <_ZN8touchgfx7Outline6moveToEii+0x12>
900164d2:	f7ff fb07 	bl	90015ae4 <_ZN8touchgfx7Outline5resetEv>
900164d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
900164d8:	07db      	lsls	r3, r3, #31
900164da:	d504      	bpl.n	900164e6 <_ZN8touchgfx7Outline6moveToEii+0x22>
900164dc:	4620      	mov	r0, r4
900164de:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900164e2:	f7ff ffd5 	bl	90016490 <_ZN8touchgfx7Outline6lineToEii>
900164e6:	6923      	ldr	r3, [r4, #16]
900164e8:	1170      	asrs	r0, r6, #5
900164ea:	1169      	asrs	r1, r5, #5
900164ec:	f9b3 2000 	ldrsh.w	r2, [r3]
900164f0:	4290      	cmp	r0, r2
900164f2:	d103      	bne.n	900164fc <_ZN8touchgfx7Outline6moveToEii+0x38>
900164f4:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900164f8:	4291      	cmp	r1, r2
900164fa:	d01a      	beq.n	90016532 <_ZN8touchgfx7Outline6moveToEii+0x6e>
900164fc:	88df      	ldrh	r7, [r3, #6]
900164fe:	889a      	ldrh	r2, [r3, #4]
90016500:	433a      	orrs	r2, r7
90016502:	d010      	beq.n	90016526 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016504:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016508:	2a00      	cmp	r2, #0
9001650a:	db0c      	blt.n	90016526 <_ZN8touchgfx7Outline6moveToEii+0x62>
9001650c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9001650e:	42ba      	cmp	r2, r7
90016510:	da09      	bge.n	90016526 <_ZN8touchgfx7Outline6moveToEii+0x62>
90016512:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90016516:	42ba      	cmp	r2, r7
90016518:	f102 0201 	add.w	r2, r2, #1
9001651c:	bf38      	it	cc
9001651e:	3308      	addcc	r3, #8
90016520:	60a2      	str	r2, [r4, #8]
90016522:	bf38      	it	cc
90016524:	6123      	strcc	r3, [r4, #16]
90016526:	6923      	ldr	r3, [r4, #16]
90016528:	2200      	movs	r2, #0
9001652a:	8018      	strh	r0, [r3, #0]
9001652c:	8059      	strh	r1, [r3, #2]
9001652e:	809a      	strh	r2, [r3, #4]
90016530:	80da      	strh	r2, [r3, #6]
90016532:	6166      	str	r6, [r4, #20]
90016534:	6225      	str	r5, [r4, #32]
90016536:	e9c4 5606 	strd	r5, r6, [r4, #24]
9001653a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001653c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
9001653c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016540:	b0d0      	sub	sp, #320	; 0x140
90016542:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90016546:	466c      	mov	r4, sp
90016548:	4627      	mov	r7, r4
9001654a:	1a0d      	subs	r5, r1, r0
9001654c:	f100 0308 	add.w	r3, r0, #8
90016550:	2d48      	cmp	r5, #72	; 0x48
90016552:	f340 80d5 	ble.w	90016700 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016556:	112d      	asrs	r5, r5, #4
90016558:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001655c:	f9b0 9000 	ldrsh.w	r9, [r0]
90016560:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90016564:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90016568:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
9001656c:	6816      	ldr	r6, [r2, #0]
9001656e:	6006      	str	r6, [r0, #0]
90016570:	6856      	ldr	r6, [r2, #4]
90016572:	6046      	str	r6, [r0, #4]
90016574:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016578:	f8a2 8002 	strh.w	r8, [r2, #2]
9001657c:	f8a2 e004 	strh.w	lr, [r2, #4]
90016580:	f8a2 c006 	strh.w	ip, [r2, #6]
90016584:	f1a1 0208 	sub.w	r2, r1, #8
90016588:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001658c:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90016590:	4565      	cmp	r5, ip
90016592:	db06      	blt.n	900165a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90016594:	d119      	bne.n	900165ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90016596:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
9001659a:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001659e:	42ae      	cmp	r6, r5
900165a0:	dd13      	ble.n	900165ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900165a2:	460e      	mov	r6, r1
900165a4:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900165a8:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900165ac:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900165b0:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900165b4:	601d      	str	r5, [r3, #0]
900165b6:	6875      	ldr	r5, [r6, #4]
900165b8:	605d      	str	r5, [r3, #4]
900165ba:	f821 9c08 	strh.w	r9, [r1, #-8]
900165be:	f821 cc06 	strh.w	ip, [r1, #-6]
900165c2:	f821 8c04 	strh.w	r8, [r1, #-4]
900165c6:	f821 ec02 	strh.w	lr, [r1, #-2]
900165ca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900165ce:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900165d2:	42ae      	cmp	r6, r5
900165d4:	db06      	blt.n	900165e4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900165d6:	d116      	bne.n	90016606 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900165d8:	f9b0 c000 	ldrsh.w	ip, [r0]
900165dc:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900165e0:	45ac      	cmp	ip, r5
900165e2:	da10      	bge.n	90016606 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900165e4:	681d      	ldr	r5, [r3, #0]
900165e6:	f9b0 8000 	ldrsh.w	r8, [r0]
900165ea:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900165ee:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900165f2:	6005      	str	r5, [r0, #0]
900165f4:	685d      	ldr	r5, [r3, #4]
900165f6:	f8a0 8008 	strh.w	r8, [r0, #8]
900165fa:	6045      	str	r5, [r0, #4]
900165fc:	8146      	strh	r6, [r0, #10]
900165fe:	f8a0 e00c 	strh.w	lr, [r0, #12]
90016602:	f8a0 c00e 	strh.w	ip, [r0, #14]
90016606:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
9001660a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001660e:	4565      	cmp	r5, ip
90016610:	db06      	blt.n	90016620 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90016612:	d119      	bne.n	90016648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016614:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90016618:	f9b0 5000 	ldrsh.w	r5, [r0]
9001661c:	42ae      	cmp	r6, r5
9001661e:	da13      	bge.n	90016648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016620:	460e      	mov	r6, r1
90016622:	f9b0 9000 	ldrsh.w	r9, [r0]
90016626:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
9001662a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001662e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90016632:	6005      	str	r5, [r0, #0]
90016634:	6875      	ldr	r5, [r6, #4]
90016636:	6045      	str	r5, [r0, #4]
90016638:	f821 9c08 	strh.w	r9, [r1, #-8]
9001663c:	f821 cc06 	strh.w	ip, [r1, #-6]
90016640:	f821 8c04 	strh.w	r8, [r1, #-4]
90016644:	f821 ec02 	strh.w	lr, [r1, #-2]
90016648:	3308      	adds	r3, #8
9001664a:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001664e:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90016652:	45e6      	cmp	lr, ip
90016654:	dbf8      	blt.n	90016648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016656:	d105      	bne.n	90016664 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016658:	f9b3 6000 	ldrsh.w	r6, [r3]
9001665c:	f9b0 5000 	ldrsh.w	r5, [r0]
90016660:	42ae      	cmp	r6, r5
90016662:	dbf1      	blt.n	90016648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90016664:	4615      	mov	r5, r2
90016666:	3a08      	subs	r2, #8
90016668:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
9001666c:	45b4      	cmp	ip, r6
9001666e:	dbf9      	blt.n	90016664 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90016670:	d105      	bne.n	9001667e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90016672:	f9b0 8000 	ldrsh.w	r8, [r0]
90016676:	f9b2 6000 	ldrsh.w	r6, [r2]
9001667a:	45b0      	cmp	r8, r6
9001667c:	dbf2      	blt.n	90016664 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001667e:	4293      	cmp	r3, r2
90016680:	f1a5 0608 	sub.w	r6, r5, #8
90016684:	d816      	bhi.n	900166b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90016686:	f8d6 c000 	ldr.w	ip, [r6]
9001668a:	f9b3 a000 	ldrsh.w	sl, [r3]
9001668e:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90016692:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90016696:	f8c3 c000 	str.w	ip, [r3]
9001669a:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001669e:	f8c3 c004 	str.w	ip, [r3, #4]
900166a2:	f825 ac08 	strh.w	sl, [r5, #-8]
900166a6:	f825 ec06 	strh.w	lr, [r5, #-6]
900166aa:	f825 9c04 	strh.w	r9, [r5, #-4]
900166ae:	f825 8c02 	strh.w	r8, [r5, #-2]
900166b2:	e7c9      	b.n	90016648 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900166b4:	f8d6 e000 	ldr.w	lr, [r6]
900166b8:	f9b0 a000 	ldrsh.w	sl, [r0]
900166bc:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900166c0:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900166c4:	f8c0 e000 	str.w	lr, [r0]
900166c8:	f8d6 e004 	ldr.w	lr, [r6, #4]
900166cc:	1a16      	subs	r6, r2, r0
900166ce:	f8c0 e004 	str.w	lr, [r0, #4]
900166d2:	f825 ac08 	strh.w	sl, [r5, #-8]
900166d6:	f825 cc06 	strh.w	ip, [r5, #-6]
900166da:	f825 9c04 	strh.w	r9, [r5, #-4]
900166de:	f825 8c02 	strh.w	r8, [r5, #-2]
900166e2:	1acd      	subs	r5, r1, r3
900166e4:	10ed      	asrs	r5, r5, #3
900166e6:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900166ea:	bfb5      	itete	lt
900166ec:	e9c4 0200 	strdlt	r0, r2, [r4]
900166f0:	e9c4 3100 	strdge	r3, r1, [r4]
900166f4:	460a      	movlt	r2, r1
900166f6:	4603      	movge	r3, r0
900166f8:	3408      	adds	r4, #8
900166fa:	4618      	mov	r0, r3
900166fc:	4611      	mov	r1, r2
900166fe:	e724      	b.n	9001654a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016700:	4299      	cmp	r1, r3
90016702:	d927      	bls.n	90016754 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90016704:	f1a3 0210 	sub.w	r2, r3, #16
90016708:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
9001670c:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90016710:	45ac      	cmp	ip, r5
90016712:	db06      	blt.n	90016722 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90016714:	d11c      	bne.n	90016750 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016716:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
9001671a:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001671e:	42ae      	cmp	r6, r5
90016720:	da16      	bge.n	90016750 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90016722:	4615      	mov	r5, r2
90016724:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90016728:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
9001672c:	3a08      	subs	r2, #8
9001672e:	f855 6f08 	ldr.w	r6, [r5, #8]!
90016732:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90016736:	6196      	str	r6, [r2, #24]
90016738:	42a8      	cmp	r0, r5
9001673a:	686e      	ldr	r6, [r5, #4]
9001673c:	f8a2 9010 	strh.w	r9, [r2, #16]
90016740:	61d6      	str	r6, [r2, #28]
90016742:	f8a2 c012 	strh.w	ip, [r2, #18]
90016746:	f8a2 8014 	strh.w	r8, [r2, #20]
9001674a:	f8a2 e016 	strh.w	lr, [r2, #22]
9001674e:	d1db      	bne.n	90016708 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90016750:	3308      	adds	r3, #8
90016752:	e7d5      	b.n	90016700 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90016754:	42bc      	cmp	r4, r7
90016756:	d903      	bls.n	90016760 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90016758:	e954 0102 	ldrd	r0, r1, [r4, #-8]
9001675c:	3c08      	subs	r4, #8
9001675e:	e6f4      	b.n	9001654a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90016760:	b050      	add	sp, #320	; 0x140
90016762:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90016766 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90016766:	b510      	push	{r4, lr}
90016768:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001676a:	4604      	mov	r4, r0
9001676c:	07da      	lsls	r2, r3, #31
9001676e:	d507      	bpl.n	90016780 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90016770:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90016774:	f7ff fe8c 	bl	90016490 <_ZN8touchgfx7Outline6lineToEii>
90016778:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001677a:	f023 0301 	bic.w	r3, r3, #1
9001677e:	6243      	str	r3, [r0, #36]	; 0x24
90016780:	6a63      	ldr	r3, [r4, #36]	; 0x24
90016782:	079b      	lsls	r3, r3, #30
90016784:	d521      	bpl.n	900167ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90016786:	6923      	ldr	r3, [r4, #16]
90016788:	88d9      	ldrh	r1, [r3, #6]
9001678a:	889a      	ldrh	r2, [r3, #4]
9001678c:	430a      	orrs	r2, r1
9001678e:	d010      	beq.n	900167b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016790:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90016794:	2a00      	cmp	r2, #0
90016796:	db0c      	blt.n	900167b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90016798:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001679a:	428a      	cmp	r2, r1
9001679c:	da09      	bge.n	900167b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001679e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900167a2:	4291      	cmp	r1, r2
900167a4:	f102 0201 	add.w	r2, r2, #1
900167a8:	bf88      	it	hi
900167aa:	3308      	addhi	r3, #8
900167ac:	60a2      	str	r2, [r4, #8]
900167ae:	bf88      	it	hi
900167b0:	6123      	strhi	r3, [r4, #16]
900167b2:	68a1      	ldr	r1, [r4, #8]
900167b4:	b129      	cbz	r1, 900167c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900167b6:	6863      	ldr	r3, [r4, #4]
900167b8:	4299      	cmp	r1, r3
900167ba:	d802      	bhi.n	900167c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900167bc:	68e0      	ldr	r0, [r4, #12]
900167be:	f7ff febd 	bl	9001653c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900167c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900167c4:	f023 0302 	bic.w	r3, r3, #2
900167c8:	6263      	str	r3, [r4, #36]	; 0x24
900167ca:	68e0      	ldr	r0, [r4, #12]
900167cc:	bd10      	pop	{r4, pc}
	...

900167d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
900167d0:	4b02      	ldr	r3, [pc, #8]	; (900167dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
900167d2:	6018      	str	r0, [r3, #0]
900167d4:	4b02      	ldr	r3, [pc, #8]	; (900167e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900167d6:	6019      	str	r1, [r3, #0]
900167d8:	4770      	bx	lr
900167da:	bf00      	nop
900167dc:	24039ad4 	.word	0x24039ad4
900167e0:	24039ad8 	.word	0x24039ad8

900167e4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900167e4:	2300      	movs	r3, #0
900167e6:	4a02      	ldr	r2, [pc, #8]	; (900167f0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900167e8:	6013      	str	r3, [r2, #0]
900167ea:	4a02      	ldr	r2, [pc, #8]	; (900167f4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900167ec:	6013      	str	r3, [r2, #0]
900167ee:	4770      	bx	lr
900167f0:	24039ad4 	.word	0x24039ad4
900167f4:	24039ad8 	.word	0x24039ad8

900167f8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900167f8:	4b01      	ldr	r3, [pc, #4]	; (90016800 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900167fa:	6818      	ldr	r0, [r3, #0]
900167fc:	4770      	bx	lr
900167fe:	bf00      	nop
90016800:	24039ad4 	.word	0x24039ad4

90016804 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90016804:	4b01      	ldr	r3, [pc, #4]	; (9001680c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90016806:	6818      	ldr	r0, [r3, #0]
90016808:	4770      	bx	lr
9001680a:	bf00      	nop
9001680c:	24039ad8 	.word	0x24039ad8

90016810 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90016810:	b510      	push	{r4, lr}
90016812:	6803      	ldr	r3, [r0, #0]
90016814:	460c      	mov	r4, r1
90016816:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016818:	4798      	blx	r3
9001681a:	1b03      	subs	r3, r0, r4
9001681c:	4258      	negs	r0, r3
9001681e:	4158      	adcs	r0, r3
90016820:	bd10      	pop	{r4, pc}
	...

90016824 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90016824:	4b01      	ldr	r3, [pc, #4]	; (9001682c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90016826:	6019      	str	r1, [r3, #0]
90016828:	4770      	bx	lr
9001682a:	bf00      	nop
9001682c:	24039adc 	.word	0x24039adc

90016830 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016834:	4696      	mov	lr, r2
90016836:	b097      	sub	sp, #92	; 0x5c
90016838:	4605      	mov	r5, r0
9001683a:	4614      	mov	r4, r2
9001683c:	460e      	mov	r6, r1
9001683e:	461f      	mov	r7, r3
90016840:	f10d 0c1c 	add.w	ip, sp, #28
90016844:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90016848:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
9001684c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90016850:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016854:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016858:	f8de 3000 	ldr.w	r3, [lr]
9001685c:	f104 0e14 	add.w	lr, r4, #20
90016860:	f8cc 3000 	str.w	r3, [ip]
90016864:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90016868:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001686c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016870:	f8de 3000 	ldr.w	r3, [lr]
90016874:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90016878:	f8cc 3000 	str.w	r3, [ip]
9001687c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90016880:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90016884:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90016888:	f8de 3000 	ldr.w	r3, [lr]
9001688c:	4631      	mov	r1, r6
9001688e:	9a21      	ldr	r2, [sp, #132]	; 0x84
90016890:	4628      	mov	r0, r5
90016892:	f8cc 3000 	str.w	r3, [ip]
90016896:	682b      	ldr	r3, [r5, #0]
90016898:	9201      	str	r2, [sp, #4]
9001689a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001689c:	f8cd 8008 	str.w	r8, [sp, #8]
900168a0:	9200      	str	r2, [sp, #0]
900168a2:	aa07      	add	r2, sp, #28
900168a4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900168a8:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
900168ac:	463b      	mov	r3, r7
900168ae:	47d8      	blx	fp
900168b0:	46a6      	mov	lr, r4
900168b2:	f10d 0c1c 	add.w	ip, sp, #28
900168b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900168ba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900168be:	f8de 3000 	ldr.w	r3, [lr]
900168c2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900168c6:	343c      	adds	r4, #60	; 0x3c
900168c8:	f8cc 3000 	str.w	r3, [ip]
900168cc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900168d0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900168d4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900168d8:	f8de 3000 	ldr.w	r3, [lr]
900168dc:	f8cc 3000 	str.w	r3, [ip]
900168e0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900168e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900168e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900168ea:	6823      	ldr	r3, [r4, #0]
900168ec:	4631      	mov	r1, r6
900168ee:	4628      	mov	r0, r5
900168f0:	f8cc 3000 	str.w	r3, [ip]
900168f4:	682b      	ldr	r3, [r5, #0]
900168f6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900168fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
900168fc:	f8cd 8008 	str.w	r8, [sp, #8]
90016900:	9201      	str	r2, [sp, #4]
90016902:	9a20      	ldr	r2, [sp, #128]	; 0x80
90016904:	9200      	str	r2, [sp, #0]
90016906:	aa07      	add	r2, sp, #28
90016908:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
9001690a:	463b      	mov	r3, r7
9001690c:	47a0      	blx	r4
9001690e:	b017      	add	sp, #92	; 0x5c
90016910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016914 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90016914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016918:	b08d      	sub	sp, #52	; 0x34
9001691a:	4688      	mov	r8, r1
9001691c:	f8d3 c000 	ldr.w	ip, [r3]
90016920:	9916      	ldr	r1, [sp, #88]	; 0x58
90016922:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90016926:	680f      	ldr	r7, [r1, #0]
90016928:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
9001692c:	eba7 070c 	sub.w	r7, r7, ip
90016930:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90016934:	edd3 6a07 	vldr	s13, [r3, #28]
90016938:	42bc      	cmp	r4, r7
9001693a:	9918      	ldr	r1, [sp, #96]	; 0x60
9001693c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90016940:	bfa8      	it	ge
90016942:	463c      	movge	r4, r7
90016944:	f9b1 9000 	ldrsh.w	r9, [r1]
90016948:	f9ba 1000 	ldrsh.w	r1, [sl]
9001694c:	ee07 4a90 	vmov	s15, r4
90016950:	eb09 0e0c 	add.w	lr, r9, ip
90016954:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90016958:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001695c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90016960:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90016964:	4571      	cmp	r1, lr
90016966:	ee25 4a04 	vmul.f32	s8, s10, s8
9001696a:	ee65 4a24 	vmul.f32	s9, s10, s9
9001696e:	ee25 5a27 	vmul.f32	s10, s10, s15
90016972:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90016976:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001697a:	ee32 1a05 	vadd.f32	s2, s4, s10
9001697e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90016982:	ee36 0a84 	vadd.f32	s0, s13, s8
90016986:	ee61 1a87 	vmul.f32	s3, s3, s14
9001698a:	ee22 2a07 	vmul.f32	s4, s4, s14
9001698e:	f340 808c 	ble.w	90016aaa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90016992:	eba1 060e 	sub.w	r6, r1, lr
90016996:	fb96 f5f4 	sdiv	r5, r6, r4
9001699a:	ee07 5a10 	vmov	s14, r5
9001699e:	2d00      	cmp	r5, #0
900169a0:	fb04 6615 	mls	r6, r4, r5, r6
900169a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900169a8:	eea7 0a04 	vfma.f32	s0, s14, s8
900169ac:	eee7 0a24 	vfma.f32	s1, s14, s9
900169b0:	eea7 1a05 	vfma.f32	s2, s14, s10
900169b4:	dd12      	ble.n	900169dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900169b6:	ee70 6a44 	vsub.f32	s13, s0, s8
900169ba:	ee70 1ae4 	vsub.f32	s3, s1, s9
900169be:	ee31 2a45 	vsub.f32	s4, s2, s10
900169c2:	eef5 6a40 	vcmp.f32	s13, #0.0
900169c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900169ca:	bf14      	ite	ne
900169cc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900169d0:	eeb0 7a67 	vmoveq.f32	s14, s15
900169d4:	ee61 1a87 	vmul.f32	s3, s3, s14
900169d8:	ee22 2a07 	vmul.f32	s4, s4, s14
900169dc:	fb05 f204 	mul.w	r2, r5, r4
900169e0:	1abf      	subs	r7, r7, r2
900169e2:	4494      	add	ip, r2
900169e4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900169e8:	4411      	add	r1, r2
900169ea:	eb09 020c 	add.w	r2, r9, ip
900169ee:	b209      	sxth	r1, r1
900169f0:	443a      	add	r2, r7
900169f2:	428a      	cmp	r2, r1
900169f4:	bfc4      	itt	gt
900169f6:	eba1 0209 	subgt.w	r2, r1, r9
900169fa:	eba2 070c 	subgt.w	r7, r2, ip
900169fe:	2f00      	cmp	r7, #0
90016a00:	dd50      	ble.n	90016aa4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90016a02:	fb97 f1f4 	sdiv	r1, r7, r4
90016a06:	fb04 7211 	mls	r2, r4, r1, r7
90016a0a:	b90a      	cbnz	r2, 90016a10 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90016a0c:	3901      	subs	r1, #1
90016a0e:	4622      	mov	r2, r4
90016a10:	eec7 3a80 	vdiv.f32	s7, s15, s0
90016a14:	6840      	ldr	r0, [r0, #4]
90016a16:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90016a1a:	44b6      	add	lr, r6
90016a1c:	f8d0 a000 	ldr.w	sl, [r0]
90016a20:	2900      	cmp	r1, #0
90016a22:	bfcc      	ite	gt
90016a24:	46a1      	movgt	r9, r4
90016a26:	4691      	movle	r9, r2
90016a28:	900b      	str	r0, [sp, #44]	; 0x2c
90016a2a:	9817      	ldr	r0, [sp, #92]	; 0x5c
90016a2c:	fb04 e505 	mla	r5, r4, r5, lr
90016a30:	eef0 6a42 	vmov.f32	s13, s4
90016a34:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90016a38:	9008      	str	r0, [sp, #32]
90016a3a:	eeb0 7a61 	vmov.f32	s14, s3
90016a3e:	9818      	ldr	r0, [sp, #96]	; 0x60
90016a40:	695b      	ldr	r3, [r3, #20]
90016a42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90016a46:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90016a4a:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90016a4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90016a50:	445b      	add	r3, fp
90016a52:	9307      	str	r3, [sp, #28]
90016a54:	ee16 3a90 	vmov	r3, s13
90016a58:	e9cd 8505 	strd	r8, r5, [sp, #20]
90016a5c:	ee60 2aa3 	vmul.f32	s5, s1, s7
90016a60:	ee21 3a23 	vmul.f32	s6, s2, s7
90016a64:	ee72 7ae1 	vsub.f32	s15, s5, s3
90016a68:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016a6c:	ee17 7a90 	vmov	r7, s15
90016a70:	ee73 7a42 	vsub.f32	s15, s6, s4
90016a74:	fb97 f7f4 	sdiv	r7, r7, r4
90016a78:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90016a7c:	ee17 ca90 	vmov	ip, s15
90016a80:	fb9c fcf4 	sdiv	ip, ip, r4
90016a84:	fb0c 3306 	mla	r3, ip, r6, r3
90016a88:	9302      	str	r3, [sp, #8]
90016a8a:	ee17 3a10 	vmov	r3, s14
90016a8e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90016a92:	fb07 3706 	mla	r7, r7, r6, r3
90016a96:	eba9 0306 	sub.w	r3, r9, r6
90016a9a:	e9cd 4700 	strd	r4, r7, [sp]
90016a9e:	f8da 4008 	ldr.w	r4, [sl, #8]
90016aa2:	47a0      	blx	r4
90016aa4:	b00d      	add	sp, #52	; 0x34
90016aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016aaa:	2500      	movs	r5, #0
90016aac:	462e      	mov	r6, r5
90016aae:	e799      	b.n	900169e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90016ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90016ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016ab4:	b0db      	sub	sp, #364	; 0x16c
90016ab6:	461d      	mov	r5, r3
90016ab8:	4614      	mov	r4, r2
90016aba:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90016abe:	910f      	str	r1, [sp, #60]	; 0x3c
90016ac0:	4629      	mov	r1, r5
90016ac2:	930a      	str	r3, [sp, #40]	; 0x28
90016ac4:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90016ac8:	9009      	str	r0, [sp, #36]	; 0x24
90016aca:	930b      	str	r3, [sp, #44]	; 0x2c
90016acc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90016ad0:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90016ad4:	9310      	str	r3, [sp, #64]	; 0x40
90016ad6:	6803      	ldr	r3, [r0, #0]
90016ad8:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90016ada:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90016ade:	47b8      	blx	r7
90016ae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016ae2:	6058      	str	r0, [r3, #4]
90016ae4:	2800      	cmp	r0, #0
90016ae6:	f000 83a1 	beq.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016aea:	682b      	ldr	r3, [r5, #0]
90016aec:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90016af0:	ed94 7a02 	vldr	s14, [r4, #8]
90016af4:	9314      	str	r3, [sp, #80]	; 0x50
90016af6:	686b      	ldr	r3, [r5, #4]
90016af8:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016afc:	9315      	str	r3, [sp, #84]	; 0x54
90016afe:	4bc1      	ldr	r3, [pc, #772]	; (90016e04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90016b00:	7819      	ldrb	r1, [r3, #0]
90016b02:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90016b06:	2900      	cmp	r1, #0
90016b08:	bf16      	itet	ne
90016b0a:	4619      	movne	r1, r3
90016b0c:	4611      	moveq	r1, r2
90016b0e:	4613      	movne	r3, r2
90016b10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016b14:	9116      	str	r1, [sp, #88]	; 0x58
90016b16:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90016b1a:	f240 8387 	bls.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b1e:	ed94 7a07 	vldr	s14, [r4, #28]
90016b22:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016b2a:	f240 837f 	bls.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b2e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
90016b32:	eeb4 7ae7 	vcmpe.f32	s14, s15
90016b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016b3a:	f240 8377 	bls.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b3e:	6822      	ldr	r2, [r4, #0]
90016b40:	4bb1      	ldr	r3, [pc, #708]	; (90016e08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90016b42:	429a      	cmp	r2, r3
90016b44:	f2c0 8372 	blt.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b48:	49b0      	ldr	r1, [pc, #704]	; (90016e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90016b4a:	6963      	ldr	r3, [r4, #20]
90016b4c:	428a      	cmp	r2, r1
90016b4e:	f300 836d 	bgt.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b52:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016b56:	48ae      	ldr	r0, [pc, #696]	; (90016e10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90016b58:	33ff      	adds	r3, #255	; 0xff
90016b5a:	4283      	cmp	r3, r0
90016b5c:	f200 8366 	bhi.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b60:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016b62:	4dac      	ldr	r5, [pc, #688]	; (90016e14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90016b64:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90016b68:	33ff      	adds	r3, #255	; 0xff
90016b6a:	42ab      	cmp	r3, r5
90016b6c:	f200 835e 	bhi.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b70:	6862      	ldr	r2, [r4, #4]
90016b72:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90016b76:	33ff      	adds	r3, #255	; 0xff
90016b78:	4283      	cmp	r3, r0
90016b7a:	f200 8357 	bhi.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b7e:	69a1      	ldr	r1, [r4, #24]
90016b80:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90016b84:	33ff      	adds	r3, #255	; 0xff
90016b86:	4283      	cmp	r3, r0
90016b88:	f200 8350 	bhi.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90016b8e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
90016b92:	30ff      	adds	r0, #255	; 0xff
90016b94:	42a8      	cmp	r0, r5
90016b96:	f200 8349 	bhi.w	9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90016b9a:	428a      	cmp	r2, r1
90016b9c:	f280 8110 	bge.w	90016dc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90016ba0:	429a      	cmp	r2, r3
90016ba2:	f300 8119 	bgt.w	90016dd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90016ba6:	4299      	cmp	r1, r3
90016ba8:	f280 811d 	bge.w	90016de6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90016bac:	2502      	movs	r5, #2
90016bae:	2701      	movs	r7, #1
90016bb0:	46a9      	mov	r9, r5
90016bb2:	46b8      	mov	r8, r7
90016bb4:	f04f 0a00 	mov.w	sl, #0
90016bb8:	4621      	mov	r1, r4
90016bba:	a849      	add	r0, sp, #292	; 0x124
90016bbc:	f003 fe7c 	bl	9001a8b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90016bc0:	4622      	mov	r2, r4
90016bc2:	4653      	mov	r3, sl
90016bc4:	a949      	add	r1, sp, #292	; 0x124
90016bc6:	f8cd 9000 	str.w	r9, [sp]
90016bca:	a819      	add	r0, sp, #100	; 0x64
90016bcc:	f003 ffa4 	bl	9001ab18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016bd0:	4622      	mov	r2, r4
90016bd2:	4653      	mov	r3, sl
90016bd4:	a949      	add	r1, sp, #292	; 0x124
90016bd6:	f8cd 8000 	str.w	r8, [sp]
90016bda:	a829      	add	r0, sp, #164	; 0xa4
90016bdc:	f003 ff9c 	bl	9001ab18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016be0:	4643      	mov	r3, r8
90016be2:	4622      	mov	r2, r4
90016be4:	a949      	add	r1, sp, #292	; 0x124
90016be6:	f8cd 9000 	str.w	r9, [sp]
90016bea:	a839      	add	r0, sp, #228	; 0xe4
90016bec:	f003 ff94 	bl	9001ab18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90016bf0:	42af      	cmp	r7, r5
90016bf2:	af12      	add	r7, sp, #72	; 0x48
90016bf4:	bfb7      	itett	lt
90016bf6:	2300      	movlt	r3, #0
90016bf8:	2301      	movge	r3, #1
90016bfa:	ad29      	addlt	r5, sp, #164	; 0xa4
90016bfc:	ac19      	addlt	r4, sp, #100	; 0x64
90016bfe:	bfb1      	iteee	lt
90016c00:	930e      	strlt	r3, [sp, #56]	; 0x38
90016c02:	ad19      	addge	r5, sp, #100	; 0x64
90016c04:	930e      	strge	r3, [sp, #56]	; 0x38
90016c06:	ac29      	addge	r4, sp, #164	; 0xa4
90016c08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90016c0a:	e893 0003 	ldmia.w	r3, {r0, r1}
90016c0e:	e887 0003 	stmia.w	r7, {r0, r1}
90016c12:	b928      	cbnz	r0, 90016c20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90016c14:	4b80      	ldr	r3, [pc, #512]	; (90016e18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90016c16:	6818      	ldr	r0, [r3, #0]
90016c18:	6803      	ldr	r3, [r0, #0]
90016c1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016c1c:	4798      	blx	r3
90016c1e:	6038      	str	r0, [r7, #0]
90016c20:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016c22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016c26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016c2a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90016c2c:	930c      	str	r3, [sp, #48]	; 0x30
90016c2e:	990c      	ldr	r1, [sp, #48]	; 0x30
90016c30:	6963      	ldr	r3, [r4, #20]
90016c32:	440b      	add	r3, r1
90016c34:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016c38:	4408      	add	r0, r1
90016c3a:	b200      	sxth	r0, r0
90016c3c:	4283      	cmp	r3, r0
90016c3e:	900d      	str	r0, [sp, #52]	; 0x34
90016c40:	f280 80dd 	bge.w	90016dfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90016c44:	428b      	cmp	r3, r1
90016c46:	da08      	bge.n	90016c5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016c48:	2a00      	cmp	r2, #0
90016c4a:	dd06      	ble.n	90016c5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016c4c:	1acb      	subs	r3, r1, r3
90016c4e:	429a      	cmp	r2, r3
90016c50:	f2c0 80e4 	blt.w	90016e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90016c54:	2b00      	cmp	r3, #0
90016c56:	f300 80e2 	bgt.w	90016e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90016c5a:	6967      	ldr	r7, [r4, #20]
90016c5c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90016c60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016c62:	443b      	add	r3, r7
90016c64:	461f      	mov	r7, r3
90016c66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016c68:	1bdf      	subs	r7, r3, r7
90016c6a:	4297      	cmp	r7, r2
90016c6c:	bfa8      	it	ge
90016c6e:	4617      	movge	r7, r2
90016c70:	2f00      	cmp	r7, #0
90016c72:	f340 8166 	ble.w	90016f42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90016c76:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016c78:	6829      	ldr	r1, [r5, #0]
90016c7a:	f9b3 2000 	ldrsh.w	r2, [r3]
90016c7e:	f9bb 3000 	ldrsh.w	r3, [fp]
90016c82:	4411      	add	r1, r2
90016c84:	6820      	ldr	r0, [r4, #0]
90016c86:	4299      	cmp	r1, r3
90016c88:	dd1a      	ble.n	90016cc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016c8a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016c8e:	4402      	add	r2, r0
90016c90:	440b      	add	r3, r1
90016c92:	b21b      	sxth	r3, r3
90016c94:	429a      	cmp	r2, r3
90016c96:	dc13      	bgt.n	90016cc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90016c98:	9a10      	ldr	r2, [sp, #64]	; 0x40
90016c9a:	a912      	add	r1, sp, #72	; 0x48
90016c9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016c9e:	9809      	ldr	r0, [sp, #36]	; 0x24
90016ca0:	681b      	ldr	r3, [r3, #0]
90016ca2:	9206      	str	r2, [sp, #24]
90016ca4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016ca6:	9500      	str	r5, [sp, #0]
90016ca8:	9205      	str	r2, [sp, #20]
90016caa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90016cac:	e9cd b203 	strd	fp, r2, [sp, #12]
90016cb0:	9a64      	ldr	r2, [sp, #400]	; 0x190
90016cb2:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016cb6:	aa49      	add	r2, sp, #292	; 0x124
90016cb8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90016cbc:	4623      	mov	r3, r4
90016cbe:	47c8      	blx	r9
90016cc0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90016cc4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90016cc8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90016ccc:	ee37 7a27 	vadd.f32	s14, s14, s15
90016cd0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90016cd4:	68a1      	ldr	r1, [r4, #8]
90016cd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016cda:	ed94 6a08 	vldr	s12, [r4, #32]
90016cde:	edd4 6a07 	vldr	s13, [r4, #28]
90016ce2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016ce6:	ee76 6a86 	vadd.f32	s13, s13, s12
90016cea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016cee:	e9d4 2300 	ldrd	r2, r3, [r4]
90016cf2:	edc4 6a07 	vstr	s13, [r4, #28]
90016cf6:	441a      	add	r2, r3
90016cf8:	6963      	ldr	r3, [r4, #20]
90016cfa:	3301      	adds	r3, #1
90016cfc:	6022      	str	r2, [r4, #0]
90016cfe:	6163      	str	r3, [r4, #20]
90016d00:	69a3      	ldr	r3, [r4, #24]
90016d02:	3b01      	subs	r3, #1
90016d04:	61a3      	str	r3, [r4, #24]
90016d06:	6923      	ldr	r3, [r4, #16]
90016d08:	440b      	add	r3, r1
90016d0a:	68e1      	ldr	r1, [r4, #12]
90016d0c:	428b      	cmp	r3, r1
90016d0e:	6123      	str	r3, [r4, #16]
90016d10:	db15      	blt.n	90016d3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90016d12:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90016d16:	3201      	adds	r2, #1
90016d18:	1a5b      	subs	r3, r3, r1
90016d1a:	ee76 6a26 	vadd.f32	s13, s12, s13
90016d1e:	6022      	str	r2, [r4, #0]
90016d20:	6123      	str	r3, [r4, #16]
90016d22:	edc4 6a07 	vstr	s13, [r4, #28]
90016d26:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90016d2a:	ee36 7a87 	vadd.f32	s14, s13, s14
90016d2e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90016d32:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90016d36:	ee77 7a27 	vadd.f32	s15, s14, s15
90016d3a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90016d3e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90016d42:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90016d46:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90016d4a:	ee37 7a27 	vadd.f32	s14, s14, s15
90016d4e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90016d52:	68a9      	ldr	r1, [r5, #8]
90016d54:	ee77 7aa6 	vadd.f32	s15, s15, s13
90016d58:	ed95 6a08 	vldr	s12, [r5, #32]
90016d5c:	edd5 6a07 	vldr	s13, [r5, #28]
90016d60:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016d64:	ee76 6a86 	vadd.f32	s13, s13, s12
90016d68:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016d6c:	e9d5 2300 	ldrd	r2, r3, [r5]
90016d70:	edc5 6a07 	vstr	s13, [r5, #28]
90016d74:	441a      	add	r2, r3
90016d76:	696b      	ldr	r3, [r5, #20]
90016d78:	3301      	adds	r3, #1
90016d7a:	602a      	str	r2, [r5, #0]
90016d7c:	616b      	str	r3, [r5, #20]
90016d7e:	69ab      	ldr	r3, [r5, #24]
90016d80:	3b01      	subs	r3, #1
90016d82:	61ab      	str	r3, [r5, #24]
90016d84:	692b      	ldr	r3, [r5, #16]
90016d86:	440b      	add	r3, r1
90016d88:	68e9      	ldr	r1, [r5, #12]
90016d8a:	428b      	cmp	r3, r1
90016d8c:	612b      	str	r3, [r5, #16]
90016d8e:	db15      	blt.n	90016dbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90016d90:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90016d94:	3201      	adds	r2, #1
90016d96:	1a5b      	subs	r3, r3, r1
90016d98:	ee76 6a26 	vadd.f32	s13, s12, s13
90016d9c:	602a      	str	r2, [r5, #0]
90016d9e:	612b      	str	r3, [r5, #16]
90016da0:	edc5 6a07 	vstr	s13, [r5, #28]
90016da4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90016da8:	ee36 7a87 	vadd.f32	s14, s13, s14
90016dac:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90016db0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90016db4:	ee77 7a27 	vadd.f32	s15, s14, s15
90016db8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90016dbc:	3f01      	subs	r7, #1
90016dbe:	e757      	b.n	90016c70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90016dc0:	4299      	cmp	r1, r3
90016dc2:	dc13      	bgt.n	90016dec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90016dc4:	429a      	cmp	r2, r3
90016dc6:	da14      	bge.n	90016df2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90016dc8:	2502      	movs	r5, #2
90016dca:	2703      	movs	r7, #3
90016dcc:	f04f 0800 	mov.w	r8, #0
90016dd0:	46a9      	mov	r9, r5
90016dd2:	f04f 0a01 	mov.w	sl, #1
90016dd6:	e6ef      	b.n	90016bb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016dd8:	2501      	movs	r5, #1
90016dda:	2700      	movs	r7, #0
90016ddc:	46a9      	mov	r9, r5
90016dde:	46b8      	mov	r8, r7
90016de0:	f04f 0a02 	mov.w	sl, #2
90016de4:	e6e8      	b.n	90016bb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90016de6:	2501      	movs	r5, #1
90016de8:	2702      	movs	r7, #2
90016dea:	e6e1      	b.n	90016bb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90016dec:	2500      	movs	r5, #0
90016dee:	2701      	movs	r7, #1
90016df0:	e7f4      	b.n	90016ddc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90016df2:	2702      	movs	r7, #2
90016df4:	2503      	movs	r5, #3
90016df6:	f04f 0900 	mov.w	r9, #0
90016dfa:	46b8      	mov	r8, r7
90016dfc:	e7e9      	b.n	90016dd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90016dfe:	4613      	mov	r3, r2
90016e00:	e728      	b.n	90016c54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90016e02:	bf00      	nop
90016e04:	24039ac4 	.word	0x24039ac4
90016e08:	fffd8f01 	.word	0xfffd8f01
90016e0c:	00027100 	.word	0x00027100
90016e10:	0004e1ff 	.word	0x0004e1ff
90016e14:	0004e1fe 	.word	0x0004e1fe
90016e18:	24039acc 	.word	0x24039acc
90016e1c:	4613      	mov	r3, r2
90016e1e:	992b      	ldr	r1, [sp, #172]	; 0xac
90016e20:	469e      	mov	lr, r3
90016e22:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90016e24:	469c      	mov	ip, r3
90016e26:	9111      	str	r1, [sp, #68]	; 0x44
90016e28:	f04f 0900 	mov.w	r9, #0
90016e2c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90016e30:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90016e34:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90016e38:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90016e3c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90016e40:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90016e44:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90016e48:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90016e4c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90016e50:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90016e54:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90016e58:	f1bc 0f00 	cmp.w	ip, #0
90016e5c:	d147      	bne.n	90016eee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90016e5e:	eb03 0c07 	add.w	ip, r3, r7
90016e62:	1ad7      	subs	r7, r2, r3
90016e64:	f1b9 0f00 	cmp.w	r9, #0
90016e68:	d009      	beq.n	90016e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90016e6a:	9029      	str	r0, [sp, #164]	; 0xa4
90016e6c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90016e70:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90016e74:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90016e78:	912d      	str	r1, [sp, #180]	; 0xb4
90016e7a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90016e7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
90016e80:	f04f 0800 	mov.w	r8, #0
90016e84:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90016e88:	9111      	str	r1, [sp, #68]	; 0x44
90016e8a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90016e8e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90016e92:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90016e96:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90016e9a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90016e9e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90016ea2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90016ea6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90016eaa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90016eae:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90016eb2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90016eb6:	f1be 0f00 	cmp.w	lr, #0
90016eba:	d031      	beq.n	90016f20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90016ebc:	9e11      	ldr	r6, [sp, #68]	; 0x44
90016ebe:	4450      	add	r0, sl
90016ec0:	ee76 6aa4 	vadd.f32	s13, s13, s9
90016ec4:	4431      	add	r1, r6
90016ec6:	ee37 7a04 	vadd.f32	s14, s14, s8
90016eca:	ee77 7aa3 	vadd.f32	s15, s15, s7
90016ece:	4549      	cmp	r1, r9
90016ed0:	db08      	blt.n	90016ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90016ed2:	ee77 7a85 	vadd.f32	s15, s15, s10
90016ed6:	3001      	adds	r0, #1
90016ed8:	ee76 6aa5 	vadd.f32	s13, s13, s11
90016edc:	eba1 0109 	sub.w	r1, r1, r9
90016ee0:	ee37 7a06 	vadd.f32	s14, s14, s12
90016ee4:	f10e 3eff 	add.w	lr, lr, #4294967295
90016ee8:	f04f 0801 	mov.w	r8, #1
90016eec:	e7e3      	b.n	90016eb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90016eee:	9e11      	ldr	r6, [sp, #68]	; 0x44
90016ef0:	4450      	add	r0, sl
90016ef2:	ee37 7a24 	vadd.f32	s14, s14, s9
90016ef6:	4431      	add	r1, r6
90016ef8:	ee77 7a84 	vadd.f32	s15, s15, s8
90016efc:	ee76 6aa3 	vadd.f32	s13, s13, s7
90016f00:	4541      	cmp	r1, r8
90016f02:	db08      	blt.n	90016f16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90016f04:	ee76 6a85 	vadd.f32	s13, s13, s10
90016f08:	3001      	adds	r0, #1
90016f0a:	ee37 7a25 	vadd.f32	s14, s14, s11
90016f0e:	eba1 0108 	sub.w	r1, r1, r8
90016f12:	ee77 7a86 	vadd.f32	s15, s15, s12
90016f16:	f10c 3cff 	add.w	ip, ip, #4294967295
90016f1a:	f04f 0901 	mov.w	r9, #1
90016f1e:	e79b      	b.n	90016e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90016f20:	449c      	add	ip, r3
90016f22:	1aff      	subs	r7, r7, r3
90016f24:	f1b8 0f00 	cmp.w	r8, #0
90016f28:	d009      	beq.n	90016f3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90016f2a:	9019      	str	r0, [sp, #100]	; 0x64
90016f2c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90016f30:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90016f34:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90016f38:	911d      	str	r1, [sp, #116]	; 0x74
90016f3a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90016f3e:	1ad2      	subs	r2, r2, r3
90016f40:	e68b      	b.n	90016c5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90016f42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90016f44:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90016f46:	2b00      	cmp	r3, #0
90016f48:	f000 80d1 	beq.w	900170ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90016f4c:	ad19      	add	r5, sp, #100	; 0x64
90016f4e:	ac39      	add	r4, sp, #228	; 0xe4
90016f50:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016f52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90016f56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90016f5a:	930c      	str	r3, [sp, #48]	; 0x30
90016f5c:	990c      	ldr	r1, [sp, #48]	; 0x30
90016f5e:	6963      	ldr	r3, [r4, #20]
90016f60:	440b      	add	r3, r1
90016f62:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90016f66:	4408      	add	r0, r1
90016f68:	b200      	sxth	r0, r0
90016f6a:	4283      	cmp	r3, r0
90016f6c:	900d      	str	r0, [sp, #52]	; 0x34
90016f6e:	f280 80c1 	bge.w	900170f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90016f72:	428b      	cmp	r3, r1
90016f74:	da08      	bge.n	90016f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016f76:	2a00      	cmp	r2, #0
90016f78:	dd06      	ble.n	90016f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90016f7a:	1acb      	subs	r3, r1, r3
90016f7c:	429a      	cmp	r2, r3
90016f7e:	f2c0 80bb 	blt.w	900170f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90016f82:	2b00      	cmp	r3, #0
90016f84:	f300 80b9 	bgt.w	900170fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90016f88:	6967      	ldr	r7, [r4, #20]
90016f8a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90016f8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90016f90:	443b      	add	r3, r7
90016f92:	461f      	mov	r7, r3
90016f94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90016f96:	1bdf      	subs	r7, r3, r7
90016f98:	4297      	cmp	r7, r2
90016f9a:	bfa8      	it	ge
90016f9c:	4617      	movge	r7, r2
90016f9e:	2f00      	cmp	r7, #0
90016fa0:	f340 813c 	ble.w	9001721c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90016fa4:	9b64      	ldr	r3, [sp, #400]	; 0x190
90016fa6:	6829      	ldr	r1, [r5, #0]
90016fa8:	f9b3 2000 	ldrsh.w	r2, [r3]
90016fac:	f9bb 3000 	ldrsh.w	r3, [fp]
90016fb0:	4411      	add	r1, r2
90016fb2:	6820      	ldr	r0, [r4, #0]
90016fb4:	4299      	cmp	r1, r3
90016fb6:	dd1a      	ble.n	90016fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016fb8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90016fbc:	4402      	add	r2, r0
90016fbe:	440b      	add	r3, r1
90016fc0:	b21b      	sxth	r3, r3
90016fc2:	429a      	cmp	r2, r3
90016fc4:	dc13      	bgt.n	90016fee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90016fc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90016fc8:	a912      	add	r1, sp, #72	; 0x48
90016fca:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016fcc:	9809      	ldr	r0, [sp, #36]	; 0x24
90016fce:	681b      	ldr	r3, [r3, #0]
90016fd0:	9206      	str	r2, [sp, #24]
90016fd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90016fd4:	9500      	str	r5, [sp, #0]
90016fd6:	9205      	str	r2, [sp, #20]
90016fd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90016fda:	e9cd b203 	strd	fp, r2, [sp, #12]
90016fde:	9a64      	ldr	r2, [sp, #400]	; 0x190
90016fe0:	e9cd 8201 	strd	r8, r2, [sp, #4]
90016fe4:	aa49      	add	r2, sp, #292	; 0x124
90016fe6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90016fea:	4623      	mov	r3, r4
90016fec:	47c8      	blx	r9
90016fee:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90016ff2:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90016ff6:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90016ffa:	ee37 7a27 	vadd.f32	s14, s14, s15
90016ffe:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90017002:	68a1      	ldr	r1, [r4, #8]
90017004:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017008:	ed94 6a08 	vldr	s12, [r4, #32]
9001700c:	edd4 6a07 	vldr	s13, [r4, #28]
90017010:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90017014:	ee76 6a86 	vadd.f32	s13, s13, s12
90017018:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001701c:	e9d4 2300 	ldrd	r2, r3, [r4]
90017020:	edc4 6a07 	vstr	s13, [r4, #28]
90017024:	441a      	add	r2, r3
90017026:	6963      	ldr	r3, [r4, #20]
90017028:	3301      	adds	r3, #1
9001702a:	6022      	str	r2, [r4, #0]
9001702c:	6163      	str	r3, [r4, #20]
9001702e:	69a3      	ldr	r3, [r4, #24]
90017030:	3b01      	subs	r3, #1
90017032:	61a3      	str	r3, [r4, #24]
90017034:	6923      	ldr	r3, [r4, #16]
90017036:	440b      	add	r3, r1
90017038:	68e1      	ldr	r1, [r4, #12]
9001703a:	428b      	cmp	r3, r1
9001703c:	6123      	str	r3, [r4, #16]
9001703e:	db15      	blt.n	9001706c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90017040:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90017044:	3201      	adds	r2, #1
90017046:	1a5b      	subs	r3, r3, r1
90017048:	ee76 6a26 	vadd.f32	s13, s12, s13
9001704c:	6022      	str	r2, [r4, #0]
9001704e:	6123      	str	r3, [r4, #16]
90017050:	edc4 6a07 	vstr	s13, [r4, #28]
90017054:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90017058:	ee36 7a87 	vadd.f32	s14, s13, s14
9001705c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90017060:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90017064:	ee77 7a27 	vadd.f32	s15, s14, s15
90017068:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9001706c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90017070:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90017074:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90017078:	ee37 7a27 	vadd.f32	s14, s14, s15
9001707c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90017080:	68a9      	ldr	r1, [r5, #8]
90017082:	ee77 7aa6 	vadd.f32	s15, s15, s13
90017086:	ed95 6a08 	vldr	s12, [r5, #32]
9001708a:	edd5 6a07 	vldr	s13, [r5, #28]
9001708e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90017092:	ee76 6a86 	vadd.f32	s13, s13, s12
90017096:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
9001709a:	e9d5 2300 	ldrd	r2, r3, [r5]
9001709e:	edc5 6a07 	vstr	s13, [r5, #28]
900170a2:	441a      	add	r2, r3
900170a4:	696b      	ldr	r3, [r5, #20]
900170a6:	3301      	adds	r3, #1
900170a8:	602a      	str	r2, [r5, #0]
900170aa:	616b      	str	r3, [r5, #20]
900170ac:	69ab      	ldr	r3, [r5, #24]
900170ae:	3b01      	subs	r3, #1
900170b0:	61ab      	str	r3, [r5, #24]
900170b2:	692b      	ldr	r3, [r5, #16]
900170b4:	440b      	add	r3, r1
900170b6:	68e9      	ldr	r1, [r5, #12]
900170b8:	428b      	cmp	r3, r1
900170ba:	612b      	str	r3, [r5, #16]
900170bc:	db15      	blt.n	900170ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
900170be:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
900170c2:	3201      	adds	r2, #1
900170c4:	1a5b      	subs	r3, r3, r1
900170c6:	ee76 6a26 	vadd.f32	s13, s12, s13
900170ca:	602a      	str	r2, [r5, #0]
900170cc:	612b      	str	r3, [r5, #16]
900170ce:	edc5 6a07 	vstr	s13, [r5, #28]
900170d2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
900170d6:	ee36 7a87 	vadd.f32	s14, s13, s14
900170da:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900170de:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
900170e2:	ee77 7a27 	vadd.f32	s15, s14, s15
900170e6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900170ea:	3f01      	subs	r7, #1
900170ec:	e757      	b.n	90016f9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900170ee:	ad39      	add	r5, sp, #228	; 0xe4
900170f0:	ac19      	add	r4, sp, #100	; 0x64
900170f2:	e72d      	b.n	90016f50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
900170f4:	4613      	mov	r3, r2
900170f6:	e744      	b.n	90016f82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
900170f8:	4613      	mov	r3, r2
900170fa:	9e3b      	ldr	r6, [sp, #236]	; 0xec
900170fc:	469e      	mov	lr, r3
900170fe:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90017102:	461f      	mov	r7, r3
90017104:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90017108:	f04f 0900 	mov.w	r9, #0
9001710c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90017110:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90017114:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90017118:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
9001711c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90017120:	993d      	ldr	r1, [sp, #244]	; 0xf4
90017122:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90017126:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
9001712a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
9001712e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90017132:	960e      	str	r6, [sp, #56]	; 0x38
90017134:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90017138:	2f00      	cmp	r7, #0
9001713a:	d146      	bne.n	900171ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
9001713c:	449c      	add	ip, r3
9001713e:	1ad7      	subs	r7, r2, r3
90017140:	f1b9 0f00 	cmp.w	r9, #0
90017144:	d009      	beq.n	9001715a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90017146:	9039      	str	r0, [sp, #228]	; 0xe4
90017148:	913d      	str	r1, [sp, #244]	; 0xf4
9001714a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9001714e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90017152:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90017156:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
9001715a:	991b      	ldr	r1, [sp, #108]	; 0x6c
9001715c:	f04f 0800 	mov.w	r8, #0
90017160:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90017164:	910e      	str	r1, [sp, #56]	; 0x38
90017166:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9001716a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9001716e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90017172:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90017176:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9001717a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9001717e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90017182:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90017186:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9001718a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001718e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90017192:	f1be 0f00 	cmp.w	lr, #0
90017196:	d030      	beq.n	900171fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90017198:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9001719a:	4450      	add	r0, sl
9001719c:	ee76 6aa4 	vadd.f32	s13, s13, s9
900171a0:	4431      	add	r1, r6
900171a2:	ee37 7a04 	vadd.f32	s14, s14, s8
900171a6:	ee77 7aa3 	vadd.f32	s15, s15, s7
900171aa:	4549      	cmp	r1, r9
900171ac:	db08      	blt.n	900171c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900171ae:	ee77 7a85 	vadd.f32	s15, s15, s10
900171b2:	3001      	adds	r0, #1
900171b4:	ee76 6aa5 	vadd.f32	s13, s13, s11
900171b8:	eba1 0109 	sub.w	r1, r1, r9
900171bc:	ee37 7a06 	vadd.f32	s14, s14, s12
900171c0:	f10e 3eff 	add.w	lr, lr, #4294967295
900171c4:	f04f 0801 	mov.w	r8, #1
900171c8:	e7e3      	b.n	90017192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
900171ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
900171cc:	4450      	add	r0, sl
900171ce:	ee37 7a24 	vadd.f32	s14, s14, s9
900171d2:	4431      	add	r1, r6
900171d4:	ee77 7a84 	vadd.f32	s15, s15, s8
900171d8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900171dc:	4541      	cmp	r1, r8
900171de:	db08      	blt.n	900171f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900171e0:	ee76 6a85 	vadd.f32	s13, s13, s10
900171e4:	3001      	adds	r0, #1
900171e6:	ee37 7a25 	vadd.f32	s14, s14, s11
900171ea:	eba1 0108 	sub.w	r1, r1, r8
900171ee:	ee77 7a86 	vadd.f32	s15, s15, s12
900171f2:	3f01      	subs	r7, #1
900171f4:	f04f 0901 	mov.w	r9, #1
900171f8:	e79e      	b.n	90017138 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900171fa:	449c      	add	ip, r3
900171fc:	1aff      	subs	r7, r7, r3
900171fe:	f1b8 0f00 	cmp.w	r8, #0
90017202:	d009      	beq.n	90017218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90017204:	9019      	str	r0, [sp, #100]	; 0x64
90017206:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
9001720a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
9001720e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90017212:	911d      	str	r1, [sp, #116]	; 0x74
90017214:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90017218:	1ad2      	subs	r2, r2, r3
9001721a:	e6b5      	b.n	90016f88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
9001721c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001721e:	681b      	ldr	r3, [r3, #0]
90017220:	b923      	cbnz	r3, 9001722c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90017222:	4b04      	ldr	r3, [pc, #16]	; (90017234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90017224:	6818      	ldr	r0, [r3, #0]
90017226:	6803      	ldr	r3, [r0, #0]
90017228:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001722a:	4798      	blx	r3
9001722c:	b05b      	add	sp, #364	; 0x16c
9001722e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017232:	bf00      	nop
90017234:	24039acc 	.word	0x24039acc

90017238 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90017238:	b570      	push	{r4, r5, r6, lr}
9001723a:	4604      	mov	r4, r0
9001723c:	2500      	movs	r5, #0
9001723e:	9805      	ldr	r0, [sp, #20]
90017240:	f89d 601c 	ldrb.w	r6, [sp, #28]
90017244:	6061      	str	r1, [r4, #4]
90017246:	8263      	strh	r3, [r4, #18]
90017248:	f89d 1010 	ldrb.w	r1, [sp, #16]
9001724c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90017250:	8025      	strh	r5, [r4, #0]
90017252:	7221      	strb	r1, [r4, #8]
90017254:	7266      	strb	r6, [r4, #9]
90017256:	60e0      	str	r0, [r4, #12]
90017258:	8222      	strh	r2, [r4, #16]
9001725a:	82a3      	strh	r3, [r4, #20]
9001725c:	82e5      	strh	r5, [r4, #22]
9001725e:	8325      	strh	r5, [r4, #24]
90017260:	8365      	strh	r5, [r4, #26]
90017262:	83a5      	strh	r5, [r4, #28]
90017264:	83e5      	strh	r5, [r4, #30]
90017266:	8425      	strh	r5, [r4, #32]
90017268:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
9001726c:	b32e      	cbz	r6, 900172ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001726e:	6803      	ldr	r3, [r0, #0]
90017270:	695b      	ldr	r3, [r3, #20]
90017272:	4798      	blx	r3
90017274:	4606      	mov	r6, r0
90017276:	b300      	cbz	r0, 900172ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017278:	68e0      	ldr	r0, [r4, #12]
9001727a:	4631      	mov	r1, r6
9001727c:	6803      	ldr	r3, [r0, #0]
9001727e:	68db      	ldr	r3, [r3, #12]
90017280:	4798      	blx	r3
90017282:	4605      	mov	r5, r0
90017284:	b1c8      	cbz	r0, 900172ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90017286:	7b43      	ldrb	r3, [r0, #13]
90017288:	7a82      	ldrb	r2, [r0, #10]
9001728a:	005b      	lsls	r3, r3, #1
9001728c:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017290:	4313      	orrs	r3, r2
90017292:	8423      	strh	r3, [r4, #32]
90017294:	7a63      	ldrb	r3, [r4, #9]
90017296:	2b06      	cmp	r3, #6
90017298:	d10f      	bne.n	900172ba <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001729a:	68e0      	ldr	r0, [r4, #12]
9001729c:	462a      	mov	r2, r5
9001729e:	4631      	mov	r1, r6
900172a0:	6803      	ldr	r3, [r0, #0]
900172a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900172a4:	4798      	blx	r3
900172a6:	7b6b      	ldrb	r3, [r5, #13]
900172a8:	005b      	lsls	r3, r3, #1
900172aa:	f403 7280 	and.w	r2, r3, #256	; 0x100
900172ae:	7aab      	ldrb	r3, [r5, #10]
900172b0:	4313      	orrs	r3, r2
900172b2:	4418      	add	r0, r3
900172b4:	8c23      	ldrh	r3, [r4, #32]
900172b6:	4418      	add	r0, r3
900172b8:	8420      	strh	r0, [r4, #32]
900172ba:	4620      	mov	r0, r4
900172bc:	bd70      	pop	{r4, r5, r6, pc}

900172be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900172be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900172c2:	2400      	movs	r4, #0
900172c4:	b085      	sub	sp, #20
900172c6:	4681      	mov	r9, r0
900172c8:	4688      	mov	r8, r1
900172ca:	4692      	mov	sl, r2
900172cc:	469b      	mov	fp, r3
900172ce:	4627      	mov	r7, r4
900172d0:	4625      	mov	r5, r4
900172d2:	4626      	mov	r6, r4
900172d4:	4554      	cmp	r4, sl
900172d6:	da2a      	bge.n	9001732e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900172d8:	2300      	movs	r3, #0
900172da:	9303      	str	r3, [sp, #12]
900172dc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900172e0:	429d      	cmp	r5, r3
900172e2:	d004      	beq.n	900172ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900172e4:	f242 030b 	movw	r3, #8203	; 0x200b
900172e8:	429d      	cmp	r5, r3
900172ea:	bf18      	it	ne
900172ec:	462f      	movne	r7, r5
900172ee:	ab03      	add	r3, sp, #12
900172f0:	4642      	mov	r2, r8
900172f2:	4659      	mov	r1, fp
900172f4:	4648      	mov	r0, r9
900172f6:	f003 f8f5 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900172fa:	4605      	mov	r5, r0
900172fc:	b1b8      	cbz	r0, 9001732e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900172fe:	280a      	cmp	r0, #10
90017300:	d015      	beq.n	9001732e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90017302:	9a03      	ldr	r2, [sp, #12]
90017304:	b18a      	cbz	r2, 9001732a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90017306:	7b50      	ldrb	r0, [r2, #13]
90017308:	4639      	mov	r1, r7
9001730a:	7a93      	ldrb	r3, [r2, #10]
9001730c:	0040      	lsls	r0, r0, #1
9001730e:	8895      	ldrh	r5, [r2, #4]
90017310:	f400 7080 	and.w	r0, r0, #256	; 0x100
90017314:	4303      	orrs	r3, r0
90017316:	4640      	mov	r0, r8
90017318:	9301      	str	r3, [sp, #4]
9001731a:	f8d8 3000 	ldr.w	r3, [r8]
9001731e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017320:	4798      	blx	r3
90017322:	9b01      	ldr	r3, [sp, #4]
90017324:	4418      	add	r0, r3
90017326:	4406      	add	r6, r0
90017328:	b2b6      	uxth	r6, r6
9001732a:	3401      	adds	r4, #1
9001732c:	e7d2      	b.n	900172d4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
9001732e:	4630      	mov	r0, r6
90017330:	b005      	add	sp, #20
90017332:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017336 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90017336:	2a02      	cmp	r2, #2
90017338:	b530      	push	{r4, r5, lr}
9001733a:	d011      	beq.n	90017360 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
9001733c:	2a03      	cmp	r2, #3
9001733e:	d01c      	beq.n	9001737a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90017340:	2a01      	cmp	r2, #1
90017342:	d10c      	bne.n	9001735e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90017344:	888b      	ldrh	r3, [r1, #4]
90017346:	8801      	ldrh	r1, [r0, #0]
90017348:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
9001734c:	1a5b      	subs	r3, r3, r1
9001734e:	8844      	ldrh	r4, [r0, #2]
90017350:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017354:	1a9b      	subs	r3, r3, r2
90017356:	8004      	strh	r4, [r0, #0]
90017358:	8081      	strh	r1, [r0, #4]
9001735a:	8043      	strh	r3, [r0, #2]
9001735c:	80c2      	strh	r2, [r0, #6]
9001735e:	bd30      	pop	{r4, r5, pc}
90017360:	88cb      	ldrh	r3, [r1, #6]
90017362:	8842      	ldrh	r2, [r0, #2]
90017364:	1a9b      	subs	r3, r3, r2
90017366:	88c2      	ldrh	r2, [r0, #6]
90017368:	1a9b      	subs	r3, r3, r2
9001736a:	888a      	ldrh	r2, [r1, #4]
9001736c:	8801      	ldrh	r1, [r0, #0]
9001736e:	8043      	strh	r3, [r0, #2]
90017370:	1a52      	subs	r2, r2, r1
90017372:	8881      	ldrh	r1, [r0, #4]
90017374:	1a52      	subs	r2, r2, r1
90017376:	8002      	strh	r2, [r0, #0]
90017378:	e7f1      	b.n	9001735e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001737a:	88cb      	ldrh	r3, [r1, #6]
9001737c:	8841      	ldrh	r1, [r0, #2]
9001737e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90017382:	1a5b      	subs	r3, r3, r1
90017384:	f9b0 5000 	ldrsh.w	r5, [r0]
90017388:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
9001738c:	1a9b      	subs	r3, r3, r2
9001738e:	8045      	strh	r5, [r0, #2]
90017390:	8082      	strh	r2, [r0, #4]
90017392:	8003      	strh	r3, [r0, #0]
90017394:	80c4      	strh	r4, [r0, #6]
90017396:	e7e2      	b.n	9001735e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90017398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90017398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001739c:	b09f      	sub	sp, #124	; 0x7c
9001739e:	9116      	str	r1, [sp, #88]	; 0x58
900173a0:	9317      	str	r3, [sp, #92]	; 0x5c
900173a2:	9929      	ldr	r1, [sp, #164]	; 0xa4
900173a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900173a6:	8809      	ldrh	r1, [r1, #0]
900173a8:	889b      	ldrh	r3, [r3, #4]
900173aa:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
900173ae:	440b      	add	r3, r1
900173b0:	9212      	str	r2, [sp, #72]	; 0x48
900173b2:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
900173b6:	b21b      	sxth	r3, r3
900173b8:	9011      	str	r0, [sp, #68]	; 0x44
900173ba:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
900173be:	9310      	str	r3, [sp, #64]	; 0x40
900173c0:	f8d8 3000 	ldr.w	r3, [r8]
900173c4:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
900173c8:	7b19      	ldrb	r1, [r3, #12]
900173ca:	7adb      	ldrb	r3, [r3, #11]
900173cc:	9114      	str	r1, [sp, #80]	; 0x50
900173ce:	9315      	str	r3, [sp, #84]	; 0x54
900173d0:	2a00      	cmp	r2, #0
900173d2:	d06a      	beq.n	900174aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
900173d4:	f898 3010 	ldrb.w	r3, [r8, #16]
900173d8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900173da:	2b06      	cmp	r3, #6
900173dc:	bf14      	ite	ne
900173de:	2301      	movne	r3, #1
900173e0:	2302      	moveq	r3, #2
900173e2:	4413      	add	r3, r2
900173e4:	f04f 0900 	mov.w	r9, #0
900173e8:	930f      	str	r3, [sp, #60]	; 0x3c
900173ea:	464c      	mov	r4, r9
900173ec:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
900173f0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
900173f4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
900173f8:	4293      	cmp	r3, r2
900173fa:	f280 808f 	bge.w	9001751c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900173fe:	2300      	movs	r3, #0
90017400:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90017404:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90017408:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001740c:	429c      	cmp	r4, r3
9001740e:	d006      	beq.n	9001741e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90017410:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017412:	f242 020b 	movw	r2, #8203	; 0x200b
90017416:	4294      	cmp	r4, r2
90017418:	bf18      	it	ne
9001741a:	4623      	movne	r3, r4
9001741c:	930d      	str	r3, [sp, #52]	; 0x34
9001741e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017420:	992d      	ldr	r1, [sp, #180]	; 0xb4
90017422:	f8d8 2000 	ldr.w	r2, [r8]
90017426:	428b      	cmp	r3, r1
90017428:	db41      	blt.n	900174ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
9001742a:	6813      	ldr	r3, [r2, #0]
9001742c:	4610      	mov	r0, r2
9001742e:	695b      	ldr	r3, [r3, #20]
90017430:	4798      	blx	r3
90017432:	4604      	mov	r4, r0
90017434:	f8d8 0000 	ldr.w	r0, [r8]
90017438:	aa1d      	add	r2, sp, #116	; 0x74
9001743a:	4621      	mov	r1, r4
9001743c:	6803      	ldr	r3, [r0, #0]
9001743e:	689d      	ldr	r5, [r3, #8]
90017440:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90017444:	47a8      	blx	r5
90017446:	901c      	str	r0, [sp, #112]	; 0x70
90017448:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001744c:	429c      	cmp	r4, r3
9001744e:	f000 80ec 	beq.w	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017452:	f242 030b 	movw	r3, #8203	; 0x200b
90017456:	429c      	cmp	r4, r3
90017458:	f000 80e7 	beq.w	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001745c:	2c00      	cmp	r4, #0
9001745e:	f000 80f9 	beq.w	90017654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90017462:	2c0a      	cmp	r4, #10
90017464:	d060      	beq.n	90017528 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90017466:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90017468:	b36a      	cbz	r2, 900174c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001746a:	8894      	ldrh	r4, [r2, #4]
9001746c:	f1bb 0f00 	cmp.w	fp, #0
90017470:	d03b      	beq.n	900174ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90017472:	f892 900d 	ldrb.w	r9, [r2, #13]
90017476:	f1bb 0f01 	cmp.w	fp, #1
9001747a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001747e:	f409 7380 	and.w	r3, r9, #256	; 0x100
90017482:	f892 900a 	ldrb.w	r9, [r2, #10]
90017486:	ea49 0903 	orr.w	r9, r9, r3
9001748a:	d134      	bne.n	900174f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
9001748c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001748e:	eba6 0609 	sub.w	r6, r6, r9
90017492:	2b00      	cmp	r3, #0
90017494:	d14f      	bne.n	90017536 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017496:	9a14      	ldr	r2, [sp, #80]	; 0x50
90017498:	eb09 0306 	add.w	r3, r9, r6
9001749c:	4413      	add	r3, r2
9001749e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900174a0:	f9b2 2000 	ldrsh.w	r2, [r2]
900174a4:	4293      	cmp	r3, r2
900174a6:	da51      	bge.n	9001754c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
900174a8:	e038      	b.n	9001751c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
900174aa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900174ac:	e79a      	b.n	900173e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
900174ae:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900174b2:	4659      	mov	r1, fp
900174b4:	982c      	ldr	r0, [sp, #176]	; 0xb0
900174b6:	9301      	str	r3, [sp, #4]
900174b8:	ab1d      	add	r3, sp, #116	; 0x74
900174ba:	9300      	str	r3, [sp, #0]
900174bc:	ab1c      	add	r3, sp, #112	; 0x70
900174be:	f003 f85a 	bl	9001a576 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900174c2:	4604      	mov	r4, r0
900174c4:	e7c0      	b.n	90017448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900174c6:	f8d8 0000 	ldr.w	r0, [r8]
900174ca:	6803      	ldr	r3, [r0, #0]
900174cc:	691b      	ldr	r3, [r3, #16]
900174ce:	4798      	blx	r3
900174d0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900174d4:	4298      	cmp	r0, r3
900174d6:	f000 80a8 	beq.w	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900174da:	f242 030b 	movw	r3, #8203	; 0x200b
900174de:	4298      	cmp	r0, r3
900174e0:	f000 80a3 	beq.w	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900174e4:	f1bb 0f00 	cmp.w	fp, #0
900174e8:	d100      	bne.n	900174ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
900174ea:	444e      	add	r6, r9
900174ec:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900174ee:	2a00      	cmp	r2, #0
900174f0:	d1bf      	bne.n	90017472 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900174f2:	4691      	mov	r9, r2
900174f4:	e099      	b.n	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900174f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900174f8:	2b00      	cmp	r3, #0
900174fa:	f000 80ad 	beq.w	90017658 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
900174fe:	f1bb 0f00 	cmp.w	fp, #0
90017502:	d118      	bne.n	90017536 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90017504:	f8d8 0000 	ldr.w	r0, [r8]
90017508:	990d      	ldr	r1, [sp, #52]	; 0x34
9001750a:	6803      	ldr	r3, [r0, #0]
9001750c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001750e:	4798      	blx	r3
90017510:	4406      	add	r6, r0
90017512:	9b15      	ldr	r3, [sp, #84]	; 0x54
90017514:	9a10      	ldr	r2, [sp, #64]	; 0x40
90017516:	1af3      	subs	r3, r6, r3
90017518:	4293      	cmp	r3, r2
9001751a:	dd17      	ble.n	9001754c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
9001751c:	2c00      	cmp	r4, #0
9001751e:	f000 8099 	beq.w	90017654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90017522:	2c0a      	cmp	r4, #10
90017524:	f040 8087 	bne.w	90017636 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
90017528:	240a      	movs	r4, #10
9001752a:	fab4 f084 	clz	r0, r4
9001752e:	0940      	lsrs	r0, r0, #5
90017530:	b01f      	add	sp, #124	; 0x7c
90017532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017536:	f8d8 0000 	ldr.w	r0, [r8]
9001753a:	990d      	ldr	r1, [sp, #52]	; 0x34
9001753c:	6803      	ldr	r3, [r0, #0]
9001753e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017540:	4798      	blx	r3
90017542:	f1bb 0f01 	cmp.w	fp, #1
90017546:	eba6 0600 	sub.w	r6, r6, r0
9001754a:	d0a4      	beq.n	90017496 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001754c:	981c      	ldr	r0, [sp, #112]	; 0x70
9001754e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017550:	f990 1009 	ldrsb.w	r1, [r0, #9]
90017554:	f9b3 7000 	ldrsh.w	r7, [r3]
90017558:	7b43      	ldrb	r3, [r0, #13]
9001755a:	4431      	add	r1, r6
9001755c:	015b      	lsls	r3, r3, #5
9001755e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017562:	7983      	ldrb	r3, [r0, #6]
90017564:	4313      	orrs	r3, r2
90017566:	440b      	add	r3, r1
90017568:	42bb      	cmp	r3, r7
9001756a:	db5e      	blt.n	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
9001756c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001756e:	4299      	cmp	r1, r3
90017570:	da5b      	bge.n	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90017572:	f8d8 0000 	ldr.w	r0, [r8]
90017576:	42b7      	cmp	r7, r6
90017578:	6803      	ldr	r3, [r0, #0]
9001757a:	bfcc      	ite	gt
9001757c:	1bbf      	subgt	r7, r7, r6
9001757e:	2700      	movle	r7, #0
90017580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90017582:	bfc8      	it	gt
90017584:	b2bf      	uxthgt	r7, r7
90017586:	4798      	blx	r3
90017588:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001758a:	7b5a      	ldrb	r2, [r3, #13]
9001758c:	00d1      	lsls	r1, r2, #3
9001758e:	f401 7580 	and.w	r5, r1, #256	; 0x100
90017592:	7a19      	ldrb	r1, [r3, #8]
90017594:	4329      	orrs	r1, r5
90017596:	0655      	lsls	r5, r2, #25
90017598:	9d17      	ldr	r5, [sp, #92]	; 0x5c
9001759a:	bf48      	it	mi
9001759c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
900175a0:	4405      	add	r5, r0
900175a2:	bf48      	it	mi
900175a4:	b209      	sxthmi	r1, r1
900175a6:	1a6d      	subs	r5, r5, r1
900175a8:	9929      	ldr	r1, [sp, #164]	; 0xa4
900175aa:	b2ad      	uxth	r5, r5
900175ac:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900175b0:	fa0f fa85 	sxth.w	sl, r5
900175b4:	4551      	cmp	r1, sl
900175b6:	dd3c      	ble.n	90017632 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
900175b8:	0112      	lsls	r2, r2, #4
900175ba:	79d8      	ldrb	r0, [r3, #7]
900175bc:	f402 7280 	and.w	r2, r2, #256	; 0x100
900175c0:	4302      	orrs	r2, r0
900175c2:	4492      	add	sl, r2
900175c4:	4551      	cmp	r1, sl
900175c6:	dc30      	bgt.n	9001762a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
900175c8:	1b4d      	subs	r5, r1, r5
900175ca:	468a      	mov	sl, r1
900175cc:	b22d      	sxth	r5, r5
900175ce:	9319      	str	r3, [sp, #100]	; 0x64
900175d0:	b2ad      	uxth	r5, r5
900175d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
900175d4:	f8d8 0000 	ldr.w	r0, [r8]
900175d8:	681a      	ldr	r2, [r3, #0]
900175da:	6801      	ldr	r1, [r0, #0]
900175dc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
900175de:	9a1d      	ldr	r2, [sp, #116]	; 0x74
900175e0:	9313      	str	r3, [sp, #76]	; 0x4c
900175e2:	9218      	str	r2, [sp, #96]	; 0x60
900175e4:	6c09      	ldr	r1, [r1, #64]	; 0x40
900175e6:	4788      	blx	r1
900175e8:	f898 1006 	ldrb.w	r1, [r8, #6]
900175ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
900175ee:	910b      	str	r1, [sp, #44]	; 0x2c
900175f0:	f898 100e 	ldrb.w	r1, [r8, #14]
900175f4:	9a18      	ldr	r2, [sp, #96]	; 0x60
900175f6:	910a      	str	r1, [sp, #40]	; 0x28
900175f8:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
900175fc:	9109      	str	r1, [sp, #36]	; 0x24
900175fe:	f8d8 1008 	ldr.w	r1, [r8, #8]
90017602:	9305      	str	r3, [sp, #20]
90017604:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90017606:	9206      	str	r2, [sp, #24]
90017608:	9304      	str	r3, [sp, #16]
9001760a:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001760c:	f8cd a004 	str.w	sl, [sp, #4]
90017610:	e9cd 7502 	strd	r7, r5, [sp, #8]
90017614:	4437      	add	r7, r6
90017616:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90017618:	b23f      	sxth	r7, r7
9001761a:	e9cd 0107 	strd	r0, r1, [sp, #28]
9001761e:	9700      	str	r7, [sp, #0]
90017620:	9916      	ldr	r1, [sp, #88]	; 0x58
90017622:	681a      	ldr	r2, [r3, #0]
90017624:	9811      	ldr	r0, [sp, #68]	; 0x44
90017626:	685b      	ldr	r3, [r3, #4]
90017628:	47a8      	blx	r5
9001762a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001762c:	3301      	adds	r3, #1
9001762e:	930e      	str	r3, [sp, #56]	; 0x38
90017630:	e6e0      	b.n	900173f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
90017632:	2500      	movs	r5, #0
90017634:	e7cb      	b.n	900175ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
90017636:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90017638:	3501      	adds	r5, #1
9001763a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001763c:	429d      	cmp	r5, r3
9001763e:	f6bf af74 	bge.w	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90017642:	4659      	mov	r1, fp
90017644:	982c      	ldr	r0, [sp, #176]	; 0xb0
90017646:	f7ec ff5d 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001764a:	4604      	mov	r4, r0
9001764c:	b110      	cbz	r0, 90017654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
9001764e:	280a      	cmp	r0, #10
90017650:	d1f2      	bne.n	90017638 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
90017652:	e769      	b.n	90017528 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90017654:	2400      	movs	r4, #0
90017656:	e768      	b.n	9001752a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90017658:	f1bb 0f00 	cmp.w	fp, #0
9001765c:	f43f af59 	beq.w	90017512 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
90017660:	e774      	b.n	9001754c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90017662:	b530      	push	{r4, r5, lr}
90017664:	8ac4      	ldrh	r4, [r0, #22]
90017666:	8b45      	ldrh	r5, [r0, #26]
90017668:	8343      	strh	r3, [r0, #26]
9001766a:	442c      	add	r4, r5
9001766c:	1ae4      	subs	r4, r4, r3
9001766e:	8b83      	ldrh	r3, [r0, #28]
90017670:	82c4      	strh	r4, [r0, #22]
90017672:	8b04      	ldrh	r4, [r0, #24]
90017674:	4422      	add	r2, r4
90017676:	440c      	add	r4, r1
90017678:	1a59      	subs	r1, r3, r1
9001767a:	83c2      	strh	r2, [r0, #30]
9001767c:	8304      	strh	r4, [r0, #24]
9001767e:	8381      	strh	r1, [r0, #28]
90017680:	bd30      	pop	{r4, r5, pc}

90017682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90017682:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017686:	4604      	mov	r4, r0
90017688:	8a47      	ldrh	r7, [r0, #18]
9001768a:	68c0      	ldr	r0, [r0, #12]
9001768c:	b085      	sub	sp, #20
9001768e:	6803      	ldr	r3, [r0, #0]
90017690:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017692:	4798      	blx	r3
90017694:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90017698:	7a63      	ldrb	r3, [r4, #9]
9001769a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001769e:	3b01      	subs	r3, #1
900176a0:	42b7      	cmp	r7, r6
900176a2:	bfac      	ite	ge
900176a4:	f04f 0900 	movge.w	r9, #0
900176a8:	f04f 0901 	movlt.w	r9, #1
900176ac:	2b05      	cmp	r3, #5
900176ae:	d804      	bhi.n	900176ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900176b0:	e8df f003 	tbb	[pc, r3]
900176b4:	470f0854 	.word	0x470f0854
900176b8:	4c4c      	.short	0x4c4c
900176ba:	2500      	movs	r5, #0
900176bc:	46a9      	mov	r9, r5
900176be:	462e      	mov	r6, r5
900176c0:	462f      	mov	r7, r5
900176c2:	e00e      	b.n	900176e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900176c4:	42b7      	cmp	r7, r6
900176c6:	f04f 0500 	mov.w	r5, #0
900176ca:	bfb4      	ite	lt
900176cc:	2600      	movlt	r6, #0
900176ce:	2601      	movge	r6, #1
900176d0:	e7f6      	b.n	900176c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900176d2:	42b7      	cmp	r7, r6
900176d4:	464d      	mov	r5, r9
900176d6:	f04f 0900 	mov.w	r9, #0
900176da:	bfb4      	ite	lt
900176dc:	2600      	movlt	r6, #0
900176de:	2601      	movge	r6, #1
900176e0:	464f      	mov	r7, r9
900176e2:	f04f 0800 	mov.w	r8, #0
900176e6:	f8a4 8016 	strh.w	r8, [r4, #22]
900176ea:	f8a4 8018 	strh.w	r8, [r4, #24]
900176ee:	f8cd 8004 	str.w	r8, [sp, #4]
900176f2:	2300      	movs	r3, #0
900176f4:	9303      	str	r3, [sp, #12]
900176f6:	8823      	ldrh	r3, [r4, #0]
900176f8:	2b20      	cmp	r3, #32
900176fa:	d033      	beq.n	90017764 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900176fc:	f242 010b 	movw	r1, #8203	; 0x200b
90017700:	1a5a      	subs	r2, r3, r1
90017702:	f1d2 0a00 	rsbs	sl, r2, #0
90017706:	eb4a 0a02 	adc.w	sl, sl, r2
9001770a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001770e:	4293      	cmp	r3, r2
90017710:	d008      	beq.n	90017724 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90017712:	428b      	cmp	r3, r1
90017714:	9a01      	ldr	r2, [sp, #4]
90017716:	bf0e      	itee	eq
90017718:	f04f 0a01 	moveq.w	sl, #1
9001771c:	461a      	movne	r2, r3
9001771e:	f04f 0a00 	movne.w	sl, #0
90017722:	9201      	str	r2, [sp, #4]
90017724:	ab03      	add	r3, sp, #12
90017726:	68e2      	ldr	r2, [r4, #12]
90017728:	7a21      	ldrb	r1, [r4, #8]
9001772a:	6860      	ldr	r0, [r4, #4]
9001772c:	f002 feda 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017730:	8020      	strh	r0, [r4, #0]
90017732:	b9d8      	cbnz	r0, 9001776c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90017734:	8ba2      	ldrh	r2, [r4, #28]
90017736:	2300      	movs	r3, #0
90017738:	4611      	mov	r1, r2
9001773a:	4620      	mov	r0, r4
9001773c:	f7ff ff91 	bl	90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017740:	e06e      	b.n	90017820 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017742:	2500      	movs	r5, #0
90017744:	2701      	movs	r7, #1
90017746:	46a9      	mov	r9, r5
90017748:	462e      	mov	r6, r5
9001774a:	e7ca      	b.n	900176e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001774c:	42b7      	cmp	r7, r6
9001774e:	f04f 0500 	mov.w	r5, #0
90017752:	bfb4      	ite	lt
90017754:	2700      	movlt	r7, #0
90017756:	2701      	movge	r7, #1
90017758:	462e      	mov	r6, r5
9001775a:	e7c2      	b.n	900176e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001775c:	2500      	movs	r5, #0
9001775e:	2601      	movs	r6, #1
90017760:	46a9      	mov	r9, r5
90017762:	e7ad      	b.n	900176c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90017764:	9301      	str	r3, [sp, #4]
90017766:	f04f 0a01 	mov.w	sl, #1
9001776a:	e7db      	b.n	90017724 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001776c:	8b63      	ldrh	r3, [r4, #26]
9001776e:	280a      	cmp	r0, #10
90017770:	f103 0301 	add.w	r3, r3, #1
90017774:	8363      	strh	r3, [r4, #26]
90017776:	d0dd      	beq.n	90017734 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90017778:	9a03      	ldr	r2, [sp, #12]
9001777a:	bb62      	cbnz	r2, 900177d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001777c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90017780:	4298      	cmp	r0, r3
90017782:	d003      	beq.n	9001778c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017784:	f242 030b 	movw	r3, #8203	; 0x200b
90017788:	4298      	cmp	r0, r3
9001778a:	d1b2      	bne.n	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001778c:	8823      	ldrh	r3, [r4, #0]
9001778e:	8ba1      	ldrh	r1, [r4, #28]
90017790:	2b20      	cmp	r3, #32
90017792:	d003      	beq.n	9001779c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90017794:	f242 000b 	movw	r0, #8203	; 0x200b
90017798:	4283      	cmp	r3, r0
9001779a:	d131      	bne.n	90017800 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001779c:	f1ba 0f00 	cmp.w	sl, #0
900177a0:	bf0a      	itet	eq
900177a2:	4688      	moveq	r8, r1
900177a4:	4650      	movne	r0, sl
900177a6:	2001      	moveq	r0, #1
900177a8:	440a      	add	r2, r1
900177aa:	8b23      	ldrh	r3, [r4, #24]
900177ac:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900177b0:	b292      	uxth	r2, r2
900177b2:	83a2      	strh	r2, [r4, #28]
900177b4:	4413      	add	r3, r2
900177b6:	f1b9 0f00 	cmp.w	r9, #0
900177ba:	d102      	bne.n	900177c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900177bc:	2d00      	cmp	r5, #0
900177be:	d042      	beq.n	90017846 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900177c0:	b300      	cbz	r0, 90017804 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900177c2:	8c21      	ldrh	r1, [r4, #32]
900177c4:	4419      	add	r1, r3
900177c6:	458c      	cmp	ip, r1
900177c8:	da37      	bge.n	9001783a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900177ca:	8ae1      	ldrh	r1, [r4, #22]
900177cc:	2900      	cmp	r1, #0
900177ce:	d034      	beq.n	9001783a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900177d0:	4563      	cmp	r3, ip
900177d2:	dd8e      	ble.n	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900177d4:	e01d      	b.n	90017812 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900177d6:	8893      	ldrh	r3, [r2, #4]
900177d8:	9901      	ldr	r1, [sp, #4]
900177da:	8023      	strh	r3, [r4, #0]
900177dc:	f892 b00d 	ldrb.w	fp, [r2, #13]
900177e0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900177e4:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900177e8:	f892 b00a 	ldrb.w	fp, [r2, #10]
900177ec:	ea4b 0b00 	orr.w	fp, fp, r0
900177f0:	68e0      	ldr	r0, [r4, #12]
900177f2:	6803      	ldr	r3, [r0, #0]
900177f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900177f6:	4798      	blx	r3
900177f8:	eb0b 0200 	add.w	r2, fp, r0
900177fc:	b292      	uxth	r2, r2
900177fe:	e7c5      	b.n	9001778c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90017800:	2000      	movs	r0, #0
90017802:	e7d1      	b.n	900177a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90017804:	4563      	cmp	r3, ip
90017806:	f77f af74 	ble.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001780a:	8ae3      	ldrh	r3, [r4, #22]
9001780c:	2b00      	cmp	r3, #0
9001780e:	f43f af70 	beq.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017812:	2301      	movs	r3, #1
90017814:	8c22      	ldrh	r2, [r4, #32]
90017816:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001781a:	8be3      	ldrh	r3, [r4, #30]
9001781c:	4413      	add	r3, r2
9001781e:	83e3      	strh	r3, [r4, #30]
90017820:	68e0      	ldr	r0, [r4, #12]
90017822:	6803      	ldr	r3, [r0, #0]
90017824:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90017826:	4798      	blx	r3
90017828:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001782c:	4418      	add	r0, r3
9001782e:	8a63      	ldrh	r3, [r4, #18]
90017830:	1a18      	subs	r0, r3, r0
90017832:	8260      	strh	r0, [r4, #18]
90017834:	b005      	add	sp, #20
90017836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001783a:	2300      	movs	r3, #0
9001783c:	4611      	mov	r1, r2
9001783e:	4620      	mov	r0, r4
90017840:	f7ff ff0f 	bl	90017662 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90017844:	e755      	b.n	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017846:	4563      	cmp	r3, ip
90017848:	dd14      	ble.n	90017874 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001784a:	b117      	cbz	r7, 90017852 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001784c:	2301      	movs	r3, #1
9001784e:	460a      	mov	r2, r1
90017850:	e772      	b.n	90017738 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90017852:	2e00      	cmp	r6, #0
90017854:	f43f af4d 	beq.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017858:	2800      	cmp	r0, #0
9001785a:	f47f af4a 	bne.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001785e:	f1ba 0f00 	cmp.w	sl, #0
90017862:	d002      	beq.n	9001786a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90017864:	2301      	movs	r3, #1
90017866:	4642      	mov	r2, r8
90017868:	e767      	b.n	9001773a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001786a:	8ae3      	ldrh	r3, [r4, #22]
9001786c:	2b00      	cmp	r3, #0
9001786e:	f43f af40 	beq.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017872:	e7d5      	b.n	90017820 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90017874:	2800      	cmp	r0, #0
90017876:	f47f af3c 	bne.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001787a:	f1ba 0f00 	cmp.w	sl, #0
9001787e:	f43f af38 	beq.w	900176f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90017882:	2301      	movs	r3, #1
90017884:	4642      	mov	r2, r8
90017886:	e7da      	b.n	9001783e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90017888 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90017888:	b5f0      	push	{r4, r5, r6, r7, lr}
9001788a:	4605      	mov	r5, r0
9001788c:	b08f      	sub	sp, #60	; 0x3c
9001788e:	4617      	mov	r7, r2
90017890:	461c      	mov	r4, r3
90017892:	460e      	mov	r6, r1
90017894:	b1d1      	cbz	r1, 900178cc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90017896:	681b      	ldr	r3, [r3, #0]
90017898:	4620      	mov	r0, r4
9001789a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001789c:	4798      	blx	r3
9001789e:	4240      	negs	r0, r0
900178a0:	9603      	str	r6, [sp, #12]
900178a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
900178a6:	b200      	sxth	r0, r0
900178a8:	9700      	str	r7, [sp, #0]
900178aa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900178ae:	4629      	mov	r1, r5
900178b0:	e9cd 4001 	strd	r4, r0, [sp, #4]
900178b4:	2401      	movs	r4, #1
900178b6:	a805      	add	r0, sp, #20
900178b8:	f7ff fcbe 	bl	90017238 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900178bc:	a805      	add	r0, sp, #20
900178be:	f7ff fee0 	bl	90017682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900178c2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900178c6:	b163      	cbz	r3, 900178e2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900178c8:	3401      	adds	r4, #1
900178ca:	e7f7      	b.n	900178bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900178cc:	2401      	movs	r4, #1
900178ce:	f002 fed5 	bl	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
900178d2:	280a      	cmp	r0, #10
900178d4:	4628      	mov	r0, r5
900178d6:	bf08      	it	eq
900178d8:	3401      	addeq	r4, #1
900178da:	f002 fecf 	bl	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
900178de:	2800      	cmp	r0, #0
900178e0:	d1f7      	bne.n	900178d2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900178e2:	b2a0      	uxth	r0, r4
900178e4:	b00f      	add	sp, #60	; 0x3c
900178e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900178e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900178e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900178ec:	b0e3      	sub	sp, #396	; 0x18c
900178ee:	461c      	mov	r4, r3
900178f0:	4683      	mov	fp, r0
900178f2:	4688      	mov	r8, r1
900178f4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900178f6:	2b00      	cmp	r3, #0
900178f8:	f000 8112 	beq.w	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900178fc:	6823      	ldr	r3, [r4, #0]
900178fe:	2b00      	cmp	r3, #0
90017900:	f000 810e 	beq.w	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017904:	7ba3      	ldrb	r3, [r4, #14]
90017906:	2b00      	cmp	r3, #0
90017908:	f000 810a 	beq.w	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001790c:	ad0a      	add	r5, sp, #40	; 0x28
9001790e:	6810      	ldr	r0, [r2, #0]
90017910:	6851      	ldr	r1, [r2, #4]
90017912:	462b      	mov	r3, r5
90017914:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90017918:	c303      	stmia	r3!, {r0, r1}
9001791a:	2100      	movs	r1, #0
9001791c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017920:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90017924:	4628      	mov	r0, r5
90017926:	910c      	str	r1, [sp, #48]	; 0x30
90017928:	a90c      	add	r1, sp, #48	; 0x30
9001792a:	79a2      	ldrb	r2, [r4, #6]
9001792c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017930:	f7ff fd01 	bl	90017336 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90017934:	a90c      	add	r1, sp, #48	; 0x30
90017936:	79a2      	ldrb	r2, [r4, #6]
90017938:	4608      	mov	r0, r1
9001793a:	f7ff fcfc 	bl	90017336 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001793e:	a817      	add	r0, sp, #92	; 0x5c
90017940:	f002 fa6f 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90017944:	6820      	ldr	r0, [r4, #0]
90017946:	6803      	ldr	r3, [r0, #0]
90017948:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001794a:	4798      	blx	r3
9001794c:	4606      	mov	r6, r0
9001794e:	6820      	ldr	r0, [r4, #0]
90017950:	6803      	ldr	r3, [r0, #0]
90017952:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017954:	4798      	blx	r3
90017956:	4633      	mov	r3, r6
90017958:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001795a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001795c:	9000      	str	r0, [sp, #0]
9001795e:	a817      	add	r0, sp, #92	; 0x5c
90017960:	f002 faba 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017964:	6820      	ldr	r0, [r4, #0]
90017966:	f894 a004 	ldrb.w	sl, [r4, #4]
9001796a:	6803      	ldr	r3, [r0, #0]
9001796c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001796e:	4798      	blx	r3
90017970:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90017974:	6823      	ldr	r3, [r4, #0]
90017976:	4607      	mov	r7, r0
90017978:	4406      	add	r6, r0
9001797a:	a830      	add	r0, sp, #192	; 0xc0
9001797c:	f893 9009 	ldrb.w	r9, [r3, #9]
90017980:	f002 fa4f 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90017984:	7c23      	ldrb	r3, [r4, #16]
90017986:	b17b      	cbz	r3, 900179a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90017988:	6820      	ldr	r0, [r4, #0]
9001798a:	6803      	ldr	r3, [r0, #0]
9001798c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001798e:	4798      	blx	r3
90017990:	9009      	str	r0, [sp, #36]	; 0x24
90017992:	6820      	ldr	r0, [r4, #0]
90017994:	6802      	ldr	r2, [r0, #0]
90017996:	6d12      	ldr	r2, [r2, #80]	; 0x50
90017998:	4790      	blx	r2
9001799a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001799c:	9000      	str	r0, [sp, #0]
9001799e:	a830      	add	r0, sp, #192	; 0xc0
900179a0:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
900179a2:	996c      	ldr	r1, [sp, #432]	; 0x1b0
900179a4:	f002 fa98 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900179a8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
900179ac:	a80e      	add	r0, sp, #56	; 0x38
900179ae:	7be2      	ldrb	r2, [r4, #15]
900179b0:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900179b4:	1a8a      	subs	r2, r1, r2
900179b6:	7c21      	ldrb	r1, [r4, #16]
900179b8:	9103      	str	r1, [sp, #12]
900179ba:	b292      	uxth	r2, r2
900179bc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900179c0:	9102      	str	r1, [sp, #8]
900179c2:	6821      	ldr	r1, [r4, #0]
900179c4:	9101      	str	r1, [sp, #4]
900179c6:	7961      	ldrb	r1, [r4, #5]
900179c8:	9100      	str	r1, [sp, #0]
900179ca:	a930      	add	r1, sp, #192	; 0xc0
900179cc:	f7ff fc34 	bl	90017238 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900179d0:	2e00      	cmp	r6, #0
900179d2:	dc5b      	bgt.n	90017a8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900179d4:	af17      	add	r7, sp, #92	; 0x5c
900179d6:	f04f 0900 	mov.w	r9, #0
900179da:	7c23      	ldrb	r3, [r4, #16]
900179dc:	2b00      	cmp	r3, #0
900179de:	f000 80b1 	beq.w	90017b44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900179e2:	a80e      	add	r0, sp, #56	; 0x38
900179e4:	f7ff fe4d 	bl	90017682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900179e8:	f1ba 0f00 	cmp.w	sl, #0
900179ec:	f000 80a5 	beq.w	90017b3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900179f0:	7c23      	ldrb	r3, [r4, #16]
900179f2:	2264      	movs	r2, #100	; 0x64
900179f4:	4639      	mov	r1, r7
900179f6:	a849      	add	r0, sp, #292	; 0x124
900179f8:	9309      	str	r3, [sp, #36]	; 0x24
900179fa:	f012 f8c9 	bl	90029b90 <memcpy>
900179fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017a00:	2b00      	cmp	r3, #0
90017a02:	f000 80a7 	beq.w	90017b54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90017a06:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
90017a0a:	7922      	ldrb	r2, [r4, #4]
90017a0c:	2a01      	cmp	r2, #1
90017a0e:	f040 808a 	bne.w	90017b26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90017a12:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90017a16:	1ac0      	subs	r0, r0, r3
90017a18:	2302      	movs	r3, #2
90017a1a:	fb90 f0f3 	sdiv	r0, r0, r3
90017a1e:	b200      	sxth	r0, r0
90017a20:	7c23      	ldrb	r3, [r4, #16]
90017a22:	2b00      	cmp	r3, #0
90017a24:	f000 808b 	beq.w	90017b3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90017a28:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
90017a2c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90017a30:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017a34:	e9cd 2105 	strd	r2, r1, [sp, #20]
90017a38:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
90017a3c:	2100      	movs	r1, #0
90017a3e:	4410      	add	r0, r2
90017a40:	4642      	mov	r2, r8
90017a42:	b200      	sxth	r0, r0
90017a44:	e9cd 9703 	strd	r9, r7, [sp, #12]
90017a48:	9000      	str	r0, [sp, #0]
90017a4a:	4658      	mov	r0, fp
90017a4c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90017a50:	f7ff fca2 	bl	90017398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90017a54:	2800      	cmp	r0, #0
90017a56:	d163      	bne.n	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a58:	b2b2      	uxth	r2, r6
90017a5a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90017a5e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90017a62:	4413      	add	r3, r2
90017a64:	1a8a      	subs	r2, r1, r2
90017a66:	b21b      	sxth	r3, r3
90017a68:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90017a6c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90017a70:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017a74:	2a00      	cmp	r2, #0
90017a76:	d153      	bne.n	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a78:	6822      	ldr	r2, [r4, #0]
90017a7a:	8869      	ldrh	r1, [r5, #2]
90017a7c:	7a12      	ldrb	r2, [r2, #8]
90017a7e:	1a9b      	subs	r3, r3, r2
90017a80:	88ea      	ldrh	r2, [r5, #6]
90017a82:	440a      	add	r2, r1
90017a84:	b212      	sxth	r2, r2
90017a86:	4293      	cmp	r3, r2
90017a88:	dda7      	ble.n	900179da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90017a8a:	e049      	b.n	90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017a8c:	7c23      	ldrb	r3, [r4, #16]
90017a8e:	444f      	add	r7, r9
90017a90:	b1c3      	cbz	r3, 90017ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90017a92:	f64f 79ff 	movw	r9, #65535	; 0xffff
90017a96:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017a9a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017a9e:	443b      	add	r3, r7
90017aa0:	4293      	cmp	r3, r2
90017aa2:	da97      	bge.n	900179d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017aa4:	a80e      	add	r0, sp, #56	; 0x38
90017aa6:	f7ff fdec 	bl	90017682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90017aaa:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
90017aae:	3b01      	subs	r3, #1
90017ab0:	b29b      	uxth	r3, r3
90017ab2:	454b      	cmp	r3, r9
90017ab4:	9309      	str	r3, [sp, #36]	; 0x24
90017ab6:	d021      	beq.n	90017afc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90017ab8:	7961      	ldrb	r1, [r4, #5]
90017aba:	a817      	add	r0, sp, #92	; 0x5c
90017abc:	f7ec fd22 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017ac2:	e7f4      	b.n	90017aae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90017ac4:	fa1f f986 	uxth.w	r9, r6
90017ac8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90017acc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017ad0:	443b      	add	r3, r7
90017ad2:	4293      	cmp	r3, r2
90017ad4:	f6bf af7e 	bge.w	900179d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90017ad8:	a817      	add	r0, sp, #92	; 0x5c
90017ada:	f002 fdcf 	bl	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
90017ade:	b1f8      	cbz	r0, 90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017ae0:	280a      	cmp	r0, #10
90017ae2:	d1f1      	bne.n	90017ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017ae4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90017ae8:	444b      	add	r3, r9
90017aea:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017aee:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90017af2:	eba3 0309 	sub.w	r3, r3, r9
90017af6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017afa:	e7e5      	b.n	90017ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90017afc:	b2b3      	uxth	r3, r6
90017afe:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90017b02:	441a      	add	r2, r3
90017b04:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90017b08:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
90017b0c:	1ad3      	subs	r3, r2, r3
90017b0e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90017b12:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90017b16:	b11b      	cbz	r3, 90017b20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90017b18:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
90017b1c:	2b00      	cmp	r3, #0
90017b1e:	d0ba      	beq.n	90017a96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90017b20:	b063      	add	sp, #396	; 0x18c
90017b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017b26:	2a02      	cmp	r2, #2
90017b28:	d105      	bne.n	90017b36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90017b2a:	7be2      	ldrb	r2, [r4, #15]
90017b2c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90017b30:	1a80      	subs	r0, r0, r2
90017b32:	1ac0      	subs	r0, r0, r3
90017b34:	e773      	b.n	90017a1e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90017b36:	2000      	movs	r0, #0
90017b38:	e772      	b.n	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017b3a:	7be0      	ldrb	r0, [r4, #15]
90017b3c:	e770      	b.n	90017a20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90017b3e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017b42:	e773      	b.n	90017a2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90017b44:	f1ba 0f00 	cmp.w	sl, #0
90017b48:	d0f7      	beq.n	90017b3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90017b4a:	2264      	movs	r2, #100	; 0x64
90017b4c:	4639      	mov	r1, r7
90017b4e:	a849      	add	r0, sp, #292	; 0x124
90017b50:	f012 f81e 	bl	90029b90 <memcpy>
90017b54:	2300      	movs	r3, #0
90017b56:	f647 72ff 	movw	r2, #32767	; 0x7fff
90017b5a:	6821      	ldr	r1, [r4, #0]
90017b5c:	a849      	add	r0, sp, #292	; 0x124
90017b5e:	f7ff fbae 	bl	900172be <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90017b62:	b203      	sxth	r3, r0
90017b64:	e751      	b.n	90017a0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90017b66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90017b66:	2b03      	cmp	r3, #3
90017b68:	d818      	bhi.n	90017b9c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90017b6a:	e8df f003 	tbb	[pc, r3]
90017b6e:	0602      	.short	0x0602
90017b70:	130d      	.short	0x130d
90017b72:	f9b0 2000 	ldrsh.w	r2, [r0]
90017b76:	1850      	adds	r0, r2, r1
90017b78:	4770      	bx	lr
90017b7a:	8803      	ldrh	r3, [r0, #0]
90017b7c:	8880      	ldrh	r0, [r0, #4]
90017b7e:	4418      	add	r0, r3
90017b80:	b200      	sxth	r0, r0
90017b82:	1a80      	subs	r0, r0, r2
90017b84:	3801      	subs	r0, #1
90017b86:	4770      	bx	lr
90017b88:	8803      	ldrh	r3, [r0, #0]
90017b8a:	8880      	ldrh	r0, [r0, #4]
90017b8c:	4418      	add	r0, r3
90017b8e:	b200      	sxth	r0, r0
90017b90:	1a40      	subs	r0, r0, r1
90017b92:	e7f7      	b.n	90017b84 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90017b94:	f9b0 0000 	ldrsh.w	r0, [r0]
90017b98:	4410      	add	r0, r2
90017b9a:	4770      	bx	lr
90017b9c:	2000      	movs	r0, #0
90017b9e:	4770      	bx	lr

90017ba0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90017ba0:	2b03      	cmp	r3, #3
90017ba2:	d817      	bhi.n	90017bd4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90017ba4:	e8df f003 	tbb	[pc, r3]
90017ba8:	10090602 	.word	0x10090602
90017bac:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90017bb0:	1850      	adds	r0, r2, r1
90017bb2:	4770      	bx	lr
90017bb4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90017bb8:	e7fa      	b.n	90017bb0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90017bba:	8843      	ldrh	r3, [r0, #2]
90017bbc:	88c0      	ldrh	r0, [r0, #6]
90017bbe:	4418      	add	r0, r3
90017bc0:	b200      	sxth	r0, r0
90017bc2:	1a80      	subs	r0, r0, r2
90017bc4:	3801      	subs	r0, #1
90017bc6:	4770      	bx	lr
90017bc8:	8843      	ldrh	r3, [r0, #2]
90017bca:	88c0      	ldrh	r0, [r0, #6]
90017bcc:	4418      	add	r0, r3
90017bce:	b200      	sxth	r0, r0
90017bd0:	1a40      	subs	r0, r0, r1
90017bd2:	e7f7      	b.n	90017bc4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90017bd4:	2000      	movs	r0, #0
90017bd6:	4770      	bx	lr

90017bd8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90017bd8:	4b01      	ldr	r3, [pc, #4]	; (90017be0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90017bda:	2200      	movs	r2, #0
90017bdc:	601a      	str	r2, [r3, #0]
90017bde:	4770      	bx	lr
90017be0:	24039adc 	.word	0x24039adc

90017be4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90017be4:	4603      	mov	r3, r0
90017be6:	b1c8      	cbz	r0, 90017c1c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90017be8:	0c02      	lsrs	r2, r0, #16
90017bea:	0412      	lsls	r2, r2, #16
90017bec:	b9a2      	cbnz	r2, 90017c18 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90017bee:	0403      	lsls	r3, r0, #16
90017bf0:	2010      	movs	r0, #16
90017bf2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90017bf6:	bf04      	itt	eq
90017bf8:	021b      	lsleq	r3, r3, #8
90017bfa:	3008      	addeq	r0, #8
90017bfc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90017c00:	bf04      	itt	eq
90017c02:	011b      	lsleq	r3, r3, #4
90017c04:	3004      	addeq	r0, #4
90017c06:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90017c0a:	bf04      	itt	eq
90017c0c:	009b      	lsleq	r3, r3, #2
90017c0e:	3002      	addeq	r0, #2
90017c10:	2b00      	cmp	r3, #0
90017c12:	db04      	blt.n	90017c1e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90017c14:	3001      	adds	r0, #1
90017c16:	4770      	bx	lr
90017c18:	2000      	movs	r0, #0
90017c1a:	e7ea      	b.n	90017bf2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90017c1c:	2020      	movs	r0, #32
90017c1e:	4770      	bx	lr

90017c20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90017c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017c24:	b087      	sub	sp, #28
90017c26:	460d      	mov	r5, r1
90017c28:	4616      	mov	r6, r2
90017c2a:	4698      	mov	r8, r3
90017c2c:	4601      	mov	r1, r0
90017c2e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90017c32:	b120      	cbz	r0, 90017c3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017c34:	b11a      	cbz	r2, 90017c3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017c36:	2d1f      	cmp	r5, #31
90017c38:	d801      	bhi.n	90017c3e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90017c3a:	2b1f      	cmp	r3, #31
90017c3c:	d904      	bls.n	90017c48 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90017c3e:	2000      	movs	r0, #0
90017c40:	6038      	str	r0, [r7, #0]
90017c42:	b007      	add	sp, #28
90017c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017c48:	b97d      	cbnz	r5, 90017c6a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90017c4a:	b143      	cbz	r3, 90017c5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90017c4c:	4602      	mov	r2, r0
90017c4e:	462b      	mov	r3, r5
90017c50:	4641      	mov	r1, r8
90017c52:	4630      	mov	r0, r6
90017c54:	e9cd 4700 	strd	r4, r7, [sp]
90017c58:	f7ff ffe2 	bl	90017c20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017c5c:	e7f1      	b.n	90017c42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017c5e:	f04f 33ff 	mov.w	r3, #4294967295
90017c62:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90017c66:	603b      	str	r3, [r7, #0]
90017c68:	e7eb      	b.n	90017c42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017c6a:	fa32 fa05 	lsrs.w	sl, r2, r5
90017c6e:	d106      	bne.n	90017c7e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90017c70:	4346      	muls	r6, r0
90017c72:	fbb6 f0f4 	udiv	r0, r6, r4
90017c76:	fb04 6610 	mls	r6, r4, r0, r6
90017c7a:	603e      	str	r6, [r7, #0]
90017c7c:	e7e1      	b.n	90017c42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90017c7e:	2201      	movs	r2, #1
90017c80:	fa00 fb05 	lsl.w	fp, r0, r5
90017c84:	40aa      	lsls	r2, r5
90017c86:	fbbb f9f4 	udiv	r9, fp, r4
90017c8a:	3a01      	subs	r2, #1
90017c8c:	fb0a f309 	mul.w	r3, sl, r9
90017c90:	fb04 b919 	mls	r9, r4, r9, fp
90017c94:	4016      	ands	r6, r2
90017c96:	9303      	str	r3, [sp, #12]
90017c98:	4630      	mov	r0, r6
90017c9a:	f7ff ffa3 	bl	90017be4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017c9e:	462b      	mov	r3, r5
90017ca0:	460a      	mov	r2, r1
90017ca2:	4601      	mov	r1, r0
90017ca4:	4630      	mov	r0, r6
90017ca6:	e9cd 4700 	strd	r4, r7, [sp]
90017caa:	f7ff ffb9 	bl	90017c20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017cae:	4606      	mov	r6, r0
90017cb0:	4648      	mov	r0, r9
90017cb2:	eb05 0108 	add.w	r1, r5, r8
90017cb6:	f7ff ff95 	bl	90017be4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017cba:	ab05      	add	r3, sp, #20
90017cbc:	464a      	mov	r2, r9
90017cbe:	e9cd 4300 	strd	r4, r3, [sp]
90017cc2:	4603      	mov	r3, r0
90017cc4:	4650      	mov	r0, sl
90017cc6:	f7ff ffab 	bl	90017c20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017cca:	6839      	ldr	r1, [r7, #0]
90017ccc:	9a05      	ldr	r2, [sp, #20]
90017cce:	9b03      	ldr	r3, [sp, #12]
90017cd0:	4411      	add	r1, r2
90017cd2:	fbb1 f2f4 	udiv	r2, r1, r4
90017cd6:	18d3      	adds	r3, r2, r3
90017cd8:	fb04 1412 	mls	r4, r4, r2, r1
90017cdc:	441e      	add	r6, r3
90017cde:	603c      	str	r4, [r7, #0]
90017ce0:	4430      	add	r0, r6
90017ce2:	e7ae      	b.n	90017c42 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90017ce4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90017ce4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017ce8:	b085      	sub	sp, #20
90017cea:	f1b0 0900 	subs.w	r9, r0, #0
90017cee:	461d      	mov	r5, r3
90017cf0:	4617      	mov	r7, r2
90017cf2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90017cf4:	bfbb      	ittet	lt
90017cf6:	f1c9 0900 	rsblt	r9, r9, #0
90017cfa:	f04f 36ff 	movlt.w	r6, #4294967295
90017cfe:	2601      	movge	r6, #1
90017d00:	6823      	ldrlt	r3, [r4, #0]
90017d02:	bfbc      	itt	lt
90017d04:	425b      	neglt	r3, r3
90017d06:	6023      	strlt	r3, [r4, #0]
90017d08:	2a00      	cmp	r2, #0
90017d0a:	da04      	bge.n	90017d16 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90017d0c:	6823      	ldr	r3, [r4, #0]
90017d0e:	4257      	negs	r7, r2
90017d10:	4276      	negs	r6, r6
90017d12:	425b      	negs	r3, r3
90017d14:	6023      	str	r3, [r4, #0]
90017d16:	2d00      	cmp	r5, #0
90017d18:	4638      	mov	r0, r7
90017d1a:	bfba      	itte	lt
90017d1c:	426d      	neglt	r5, r5
90017d1e:	f04f 38ff 	movlt.w	r8, #4294967295
90017d22:	f04f 0801 	movge.w	r8, #1
90017d26:	f7ff ff5d 	bl	90017be4 <_ZN8touchgfx16TouchCalibration4clzuEm>
90017d2a:	ab03      	add	r3, sp, #12
90017d2c:	463a      	mov	r2, r7
90017d2e:	e9cd 5300 	strd	r5, r3, [sp]
90017d32:	4603      	mov	r3, r0
90017d34:	4648      	mov	r0, r9
90017d36:	f7ff ff73 	bl	90017c20 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90017d3a:	6823      	ldr	r3, [r4, #0]
90017d3c:	9a03      	ldr	r2, [sp, #12]
90017d3e:	4546      	cmp	r6, r8
90017d40:	441a      	add	r2, r3
90017d42:	fb92 f3f5 	sdiv	r3, r2, r5
90017d46:	4418      	add	r0, r3
90017d48:	fb05 2313 	mls	r3, r5, r3, r2
90017d4c:	bf18      	it	ne
90017d4e:	4240      	negne	r0, r0
90017d50:	1c72      	adds	r2, r6, #1
90017d52:	6023      	str	r3, [r4, #0]
90017d54:	d105      	bne.n	90017d62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90017d56:	2b00      	cmp	r3, #0
90017d58:	f1c3 0200 	rsb	r2, r3, #0
90017d5c:	db0b      	blt.n	90017d76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90017d5e:	6022      	str	r2, [r4, #0]
90017d60:	e006      	b.n	90017d70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017d62:	2e01      	cmp	r6, #1
90017d64:	d104      	bne.n	90017d70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017d66:	2b00      	cmp	r3, #0
90017d68:	da02      	bge.n	90017d70 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90017d6a:	442b      	add	r3, r5
90017d6c:	3801      	subs	r0, #1
90017d6e:	6023      	str	r3, [r4, #0]
90017d70:	b005      	add	sp, #20
90017d72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017d76:	3801      	subs	r0, #1
90017d78:	1b52      	subs	r2, r2, r5
90017d7a:	e7f0      	b.n	90017d5e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90017d7c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90017d7c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90017d80:	4c1c      	ldr	r4, [pc, #112]	; (90017df4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90017d82:	4605      	mov	r5, r0
90017d84:	6807      	ldr	r7, [r0, #0]
90017d86:	69a3      	ldr	r3, [r4, #24]
90017d88:	b92b      	cbnz	r3, 90017d96 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90017d8a:	6840      	ldr	r0, [r0, #4]
90017d8c:	e9c5 7000 	strd	r7, r0, [r5]
90017d90:	b004      	add	sp, #16
90017d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017d96:	f04f 0802 	mov.w	r8, #2
90017d9a:	68a2      	ldr	r2, [r4, #8]
90017d9c:	ae04      	add	r6, sp, #16
90017d9e:	6820      	ldr	r0, [r4, #0]
90017da0:	fb93 f1f8 	sdiv	r1, r3, r8
90017da4:	440a      	add	r2, r1
90017da6:	69e1      	ldr	r1, [r4, #28]
90017da8:	f846 2d04 	str.w	r2, [r6, #-4]!
90017dac:	463a      	mov	r2, r7
90017dae:	9600      	str	r6, [sp, #0]
90017db0:	f7ff ff98 	bl	90017ce4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017db4:	69a3      	ldr	r3, [r4, #24]
90017db6:	4607      	mov	r7, r0
90017db8:	686a      	ldr	r2, [r5, #4]
90017dba:	6a21      	ldr	r1, [r4, #32]
90017dbc:	9600      	str	r6, [sp, #0]
90017dbe:	6860      	ldr	r0, [r4, #4]
90017dc0:	f7ff ff90 	bl	90017ce4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017dc4:	69a3      	ldr	r3, [r4, #24]
90017dc6:	6962      	ldr	r2, [r4, #20]
90017dc8:	4407      	add	r7, r0
90017dca:	6a61      	ldr	r1, [r4, #36]	; 0x24
90017dcc:	9600      	str	r6, [sp, #0]
90017dce:	68e0      	ldr	r0, [r4, #12]
90017dd0:	fb93 f8f8 	sdiv	r8, r3, r8
90017dd4:	4442      	add	r2, r8
90017dd6:	9203      	str	r2, [sp, #12]
90017dd8:	682a      	ldr	r2, [r5, #0]
90017dda:	f7ff ff83 	bl	90017ce4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017dde:	4680      	mov	r8, r0
90017de0:	9600      	str	r6, [sp, #0]
90017de2:	69a3      	ldr	r3, [r4, #24]
90017de4:	686a      	ldr	r2, [r5, #4]
90017de6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90017de8:	6920      	ldr	r0, [r4, #16]
90017dea:	f7ff ff7b 	bl	90017ce4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90017dee:	4440      	add	r0, r8
90017df0:	e7cc      	b.n	90017d8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90017df2:	bf00      	nop
90017df4:	24039ae0 	.word	0x24039ae0

90017df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90017df8:	4b07      	ldr	r3, [pc, #28]	; (90017e18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90017dfa:	781b      	ldrb	r3, [r3, #0]
90017dfc:	2b01      	cmp	r3, #1
90017dfe:	d109      	bne.n	90017e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90017e00:	f9b1 3000 	ldrsh.w	r3, [r1]
90017e04:	f9b0 2000 	ldrsh.w	r2, [r0]
90017e08:	8003      	strh	r3, [r0, #0]
90017e0a:	4b04      	ldr	r3, [pc, #16]	; (90017e1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90017e0c:	881b      	ldrh	r3, [r3, #0]
90017e0e:	3b01      	subs	r3, #1
90017e10:	1a9b      	subs	r3, r3, r2
90017e12:	800b      	strh	r3, [r1, #0]
90017e14:	4770      	bx	lr
90017e16:	bf00      	nop
90017e18:	24039ac4 	.word	0x24039ac4
90017e1c:	24039ac0 	.word	0x24039ac0

90017e20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90017e20:	4b07      	ldr	r3, [pc, #28]	; (90017e40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90017e22:	b510      	push	{r4, lr}
90017e24:	781b      	ldrb	r3, [r3, #0]
90017e26:	2b01      	cmp	r3, #1
90017e28:	d108      	bne.n	90017e3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90017e2a:	4b06      	ldr	r3, [pc, #24]	; (90017e44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90017e2c:	880c      	ldrh	r4, [r1, #0]
90017e2e:	881b      	ldrh	r3, [r3, #0]
90017e30:	f9b0 2000 	ldrsh.w	r2, [r0]
90017e34:	3b01      	subs	r3, #1
90017e36:	1b1b      	subs	r3, r3, r4
90017e38:	8003      	strh	r3, [r0, #0]
90017e3a:	800a      	strh	r2, [r1, #0]
90017e3c:	bd10      	pop	{r4, pc}
90017e3e:	bf00      	nop
90017e40:	24039ac4 	.word	0x24039ac4
90017e44:	24039ac0 	.word	0x24039ac0

90017e48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90017e48:	4b0a      	ldr	r3, [pc, #40]	; (90017e74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90017e4a:	b510      	push	{r4, lr}
90017e4c:	781b      	ldrb	r3, [r3, #0]
90017e4e:	2b01      	cmp	r3, #1
90017e50:	d10e      	bne.n	90017e70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90017e52:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90017e56:	8843      	ldrh	r3, [r0, #2]
90017e58:	f9b0 4000 	ldrsh.w	r4, [r0]
90017e5c:	18ca      	adds	r2, r1, r3
90017e5e:	4b06      	ldr	r3, [pc, #24]	; (90017e78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90017e60:	8044      	strh	r4, [r0, #2]
90017e62:	881b      	ldrh	r3, [r3, #0]
90017e64:	1a9b      	subs	r3, r3, r2
90017e66:	8003      	strh	r3, [r0, #0]
90017e68:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017e6c:	8081      	strh	r1, [r0, #4]
90017e6e:	80c3      	strh	r3, [r0, #6]
90017e70:	bd10      	pop	{r4, pc}
90017e72:	bf00      	nop
90017e74:	24039ac4 	.word	0x24039ac4
90017e78:	24039ac0 	.word	0x24039ac0

90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90017e7c:	4b08      	ldr	r3, [pc, #32]	; (90017ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90017e7e:	781b      	ldrb	r3, [r3, #0]
90017e80:	2b01      	cmp	r3, #1
90017e82:	d10c      	bne.n	90017e9e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90017e84:	8803      	ldrh	r3, [r0, #0]
90017e86:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90017e8a:	8842      	ldrh	r2, [r0, #2]
90017e8c:	8002      	strh	r2, [r0, #0]
90017e8e:	185a      	adds	r2, r3, r1
90017e90:	4b04      	ldr	r3, [pc, #16]	; (90017ea4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90017e92:	881b      	ldrh	r3, [r3, #0]
90017e94:	1a9b      	subs	r3, r3, r2
90017e96:	8043      	strh	r3, [r0, #2]
90017e98:	88c3      	ldrh	r3, [r0, #6]
90017e9a:	80c1      	strh	r1, [r0, #6]
90017e9c:	8083      	strh	r3, [r0, #4]
90017e9e:	4770      	bx	lr
90017ea0:	24039ac4 	.word	0x24039ac4
90017ea4:	24039ac0 	.word	0x24039ac0

90017ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90017ea8:	4b07      	ldr	r3, [pc, #28]	; (90017ec8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90017eaa:	b510      	push	{r4, lr}
90017eac:	781b      	ldrb	r3, [r3, #0]
90017eae:	2b01      	cmp	r3, #1
90017eb0:	d108      	bne.n	90017ec4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90017eb2:	f9b1 3000 	ldrsh.w	r3, [r1]
90017eb6:	f9b0 4000 	ldrsh.w	r4, [r0]
90017eba:	8003      	strh	r3, [r0, #0]
90017ebc:	8893      	ldrh	r3, [r2, #4]
90017ebe:	3b01      	subs	r3, #1
90017ec0:	1b1b      	subs	r3, r3, r4
90017ec2:	800b      	strh	r3, [r1, #0]
90017ec4:	bd10      	pop	{r4, pc}
90017ec6:	bf00      	nop
90017ec8:	24039ac4 	.word	0x24039ac4

90017ecc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90017ecc:	4b0b      	ldr	r3, [pc, #44]	; (90017efc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90017ece:	781b      	ldrb	r3, [r3, #0]
90017ed0:	2b01      	cmp	r3, #1
90017ed2:	d111      	bne.n	90017ef8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90017ed4:	680b      	ldr	r3, [r1, #0]
90017ed6:	ed90 7a00 	vldr	s14, [r0]
90017eda:	6003      	str	r3, [r0, #0]
90017edc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90017ee0:	eddf 6a07 	vldr	s13, [pc, #28]	; 90017f00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90017ee4:	ee07 3a90 	vmov	s15, r3
90017ee8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017eec:	ee77 7ae6 	vsub.f32	s15, s15, s13
90017ef0:	ee77 7ac7 	vsub.f32	s15, s15, s14
90017ef4:	edc1 7a00 	vstr	s15, [r1]
90017ef8:	4770      	bx	lr
90017efa:	bf00      	nop
90017efc:	24039ac4 	.word	0x24039ac4
90017f00:	38d1b717 	.word	0x38d1b717

90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90017f04:	4b0a      	ldr	r3, [pc, #40]	; (90017f30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90017f06:	460a      	mov	r2, r1
90017f08:	b510      	push	{r4, lr}
90017f0a:	781b      	ldrb	r3, [r3, #0]
90017f0c:	2b01      	cmp	r3, #1
90017f0e:	d10d      	bne.n	90017f2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90017f10:	8881      	ldrh	r1, [r0, #4]
90017f12:	8803      	ldrh	r3, [r0, #0]
90017f14:	440b      	add	r3, r1
90017f16:	4601      	mov	r1, r0
90017f18:	3b01      	subs	r3, #1
90017f1a:	f821 3b02 	strh.w	r3, [r1], #2
90017f1e:	f7ff ffc3 	bl	90017ea8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90017f22:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90017f26:	88c2      	ldrh	r2, [r0, #6]
90017f28:	80c3      	strh	r3, [r0, #6]
90017f2a:	8082      	strh	r2, [r0, #4]
90017f2c:	bd10      	pop	{r4, pc}
90017f2e:	bf00      	nop
90017f30:	24039ac4 	.word	0x24039ac4

90017f34 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90017f34:	4770      	bx	lr
	...

90017f38 <_ZN8touchgfx11Application13requestRedrawEv>:
90017f38:	4b06      	ldr	r3, [pc, #24]	; (90017f54 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90017f3a:	2100      	movs	r1, #0
90017f3c:	f9b3 2000 	ldrsh.w	r2, [r3]
90017f40:	4b05      	ldr	r3, [pc, #20]	; (90017f58 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90017f42:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90017f46:	f9b3 3000 	ldrsh.w	r3, [r3]
90017f4a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90017f4e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90017f52:	4770      	bx	lr
90017f54:	24039ac0 	.word	0x24039ac0
90017f58:	24039ac2 	.word	0x24039ac2

90017f5c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90017f5c:	4b03      	ldr	r3, [pc, #12]	; (90017f6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90017f5e:	6818      	ldr	r0, [r3, #0]
90017f60:	b110      	cbz	r0, 90017f68 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90017f62:	6803      	ldr	r3, [r0, #0]
90017f64:	699b      	ldr	r3, [r3, #24]
90017f66:	4718      	bx	r3
90017f68:	4770      	bx	lr
90017f6a:	bf00      	nop
90017f6c:	24039b10 	.word	0x24039b10

90017f70 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90017f70:	4770      	bx	lr
	...

90017f74 <_ZN8touchgfx11Application4drawEv>:
90017f74:	4b09      	ldr	r3, [pc, #36]	; (90017f9c <_ZN8touchgfx11Application4drawEv+0x28>)
90017f76:	b507      	push	{r0, r1, r2, lr}
90017f78:	f9b3 2000 	ldrsh.w	r2, [r3]
90017f7c:	2100      	movs	r1, #0
90017f7e:	4b08      	ldr	r3, [pc, #32]	; (90017fa0 <_ZN8touchgfx11Application4drawEv+0x2c>)
90017f80:	9100      	str	r1, [sp, #0]
90017f82:	4669      	mov	r1, sp
90017f84:	f9b3 3000 	ldrsh.w	r3, [r3]
90017f88:	f8ad 2004 	strh.w	r2, [sp, #4]
90017f8c:	f8ad 3006 	strh.w	r3, [sp, #6]
90017f90:	6803      	ldr	r3, [r0, #0]
90017f92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017f94:	4798      	blx	r3
90017f96:	b003      	add	sp, #12
90017f98:	f85d fb04 	ldr.w	pc, [sp], #4
90017f9c:	24039ac0 	.word	0x24039ac0
90017fa0:	24039ac2 	.word	0x24039ac2

90017fa4 <_ZN8touchgfx11Application10invalidateEv>:
90017fa4:	4b09      	ldr	r3, [pc, #36]	; (90017fcc <_ZN8touchgfx11Application10invalidateEv+0x28>)
90017fa6:	b082      	sub	sp, #8
90017fa8:	2100      	movs	r1, #0
90017faa:	f9b3 2000 	ldrsh.w	r2, [r3]
90017fae:	4b08      	ldr	r3, [pc, #32]	; (90017fd0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90017fb0:	f8ad 2004 	strh.w	r2, [sp, #4]
90017fb4:	aa02      	add	r2, sp, #8
90017fb6:	f9b3 3000 	ldrsh.w	r3, [r3]
90017fba:	9100      	str	r1, [sp, #0]
90017fbc:	f8ad 3006 	strh.w	r3, [sp, #6]
90017fc0:	6803      	ldr	r3, [r0, #0]
90017fc2:	e912 0006 	ldmdb	r2, {r1, r2}
90017fc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017fc8:	b002      	add	sp, #8
90017fca:	4718      	bx	r3
90017fcc:	24039ac0 	.word	0x24039ac0
90017fd0:	24039ac2 	.word	0x24039ac2

90017fd4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90017fd4:	4b03      	ldr	r3, [pc, #12]	; (90017fe4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90017fd6:	6818      	ldr	r0, [r3, #0]
90017fd8:	b110      	cbz	r0, 90017fe0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90017fda:	6803      	ldr	r3, [r0, #0]
90017fdc:	69db      	ldr	r3, [r3, #28]
90017fde:	4718      	bx	r3
90017fe0:	4770      	bx	lr
90017fe2:	bf00      	nop
90017fe4:	24039b10 	.word	0x24039b10

90017fe8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90017fe8:	4b03      	ldr	r3, [pc, #12]	; (90017ff8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90017fea:	6818      	ldr	r0, [r3, #0]
90017fec:	b110      	cbz	r0, 90017ff4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90017fee:	6803      	ldr	r3, [r0, #0]
90017ff0:	6a1b      	ldr	r3, [r3, #32]
90017ff2:	4718      	bx	r3
90017ff4:	4770      	bx	lr
90017ff6:	bf00      	nop
90017ff8:	24039b10 	.word	0x24039b10

90017ffc <_ZN8touchgfx11Application16clearCachedAreasEv>:
90017ffc:	2300      	movs	r3, #0
90017ffe:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90018002:	4770      	bx	lr

90018004 <_ZN8touchgfx11Application14handleKeyEventEh>:
90018004:	4b03      	ldr	r3, [pc, #12]	; (90018014 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90018006:	6818      	ldr	r0, [r3, #0]
90018008:	b110      	cbz	r0, 90018010 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
9001800a:	6803      	ldr	r3, [r0, #0]
9001800c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001800e:	4718      	bx	r3
90018010:	4770      	bx	lr
90018012:	bf00      	nop
90018014:	24039b10 	.word	0x24039b10

90018018 <_ZN8touchgfx11ApplicationD1Ev>:
90018018:	4770      	bx	lr

9001801a <_ZN8touchgfx11ApplicationD0Ev>:
9001801a:	b510      	push	{r4, lr}
9001801c:	4604      	mov	r4, r0
9001801e:	f44f 719e 	mov.w	r1, #316	; 0x13c
90018022:	f011 fa1f 	bl	90029464 <_ZdlPvj>
90018026:	4620      	mov	r0, r4
90018028:	bd10      	pop	{r4, pc}

9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>:
9001802a:	b510      	push	{r4, lr}
9001802c:	f9b1 4000 	ldrsh.w	r4, [r1]
90018030:	888a      	ldrh	r2, [r1, #4]
90018032:	f9b0 3000 	ldrsh.w	r3, [r0]
90018036:	4422      	add	r2, r4
90018038:	b212      	sxth	r2, r2
9001803a:	4293      	cmp	r3, r2
9001803c:	da15      	bge.n	9001806a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001803e:	8882      	ldrh	r2, [r0, #4]
90018040:	4413      	add	r3, r2
90018042:	b21b      	sxth	r3, r3
90018044:	429c      	cmp	r4, r3
90018046:	da10      	bge.n	9001806a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90018048:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
9001804c:	88c9      	ldrh	r1, [r1, #6]
9001804e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90018052:	4419      	add	r1, r3
90018054:	b209      	sxth	r1, r1
90018056:	428a      	cmp	r2, r1
90018058:	da07      	bge.n	9001806a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001805a:	88c0      	ldrh	r0, [r0, #6]
9001805c:	4410      	add	r0, r2
9001805e:	b200      	sxth	r0, r0
90018060:	4283      	cmp	r3, r0
90018062:	bfac      	ite	ge
90018064:	2000      	movge	r0, #0
90018066:	2001      	movlt	r0, #1
90018068:	bd10      	pop	{r4, pc}
9001806a:	2000      	movs	r0, #0
9001806c:	e7fc      	b.n	90018068 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001806e <_ZN8touchgfx4Rect10restrictToEss>:
9001806e:	f9b0 3000 	ldrsh.w	r3, [r0]
90018072:	2b00      	cmp	r3, #0
90018074:	b510      	push	{r4, lr}
90018076:	da04      	bge.n	90018082 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90018078:	8884      	ldrh	r4, [r0, #4]
9001807a:	4423      	add	r3, r4
9001807c:	8083      	strh	r3, [r0, #4]
9001807e:	2300      	movs	r3, #0
90018080:	8003      	strh	r3, [r0, #0]
90018082:	f9b0 4000 	ldrsh.w	r4, [r0]
90018086:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001808a:	1b09      	subs	r1, r1, r4
9001808c:	428b      	cmp	r3, r1
9001808e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90018092:	bfc8      	it	gt
90018094:	8081      	strhgt	r1, [r0, #4]
90018096:	2b00      	cmp	r3, #0
90018098:	da04      	bge.n	900180a4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001809a:	88c1      	ldrh	r1, [r0, #6]
9001809c:	440b      	add	r3, r1
9001809e:	80c3      	strh	r3, [r0, #6]
900180a0:	2300      	movs	r3, #0
900180a2:	8043      	strh	r3, [r0, #2]
900180a4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900180a8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
900180ac:	1a52      	subs	r2, r2, r1
900180ae:	4293      	cmp	r3, r2
900180b0:	bfc8      	it	gt
900180b2:	80c2      	strhgt	r2, [r0, #6]
900180b4:	bd10      	pop	{r4, pc}
	...

900180b8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
900180b8:	4b10      	ldr	r3, [pc, #64]	; (900180fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
900180ba:	b510      	push	{r4, lr}
900180bc:	460c      	mov	r4, r1
900180be:	f9b3 2000 	ldrsh.w	r2, [r3]
900180c2:	4b0f      	ldr	r3, [pc, #60]	; (90018100 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
900180c4:	4620      	mov	r0, r4
900180c6:	f9b3 1000 	ldrsh.w	r1, [r3]
900180ca:	f7ff ffd0 	bl	9001806e <_ZN8touchgfx4Rect10restrictToEss>
900180ce:	4b0d      	ldr	r3, [pc, #52]	; (90018104 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
900180d0:	6818      	ldr	r0, [r3, #0]
900180d2:	b190      	cbz	r0, 900180fa <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
900180d4:	6803      	ldr	r3, [r0, #0]
900180d6:	4621      	mov	r1, r4
900180d8:	689b      	ldr	r3, [r3, #8]
900180da:	4798      	blx	r3
900180dc:	4b0a      	ldr	r3, [pc, #40]	; (90018108 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
900180de:	6818      	ldr	r0, [r3, #0]
900180e0:	b118      	cbz	r0, 900180ea <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
900180e2:	6803      	ldr	r3, [r0, #0]
900180e4:	4621      	mov	r1, r4
900180e6:	689b      	ldr	r3, [r3, #8]
900180e8:	4798      	blx	r3
900180ea:	4b08      	ldr	r3, [pc, #32]	; (9001810c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900180ec:	4621      	mov	r1, r4
900180ee:	6818      	ldr	r0, [r3, #0]
900180f0:	6803      	ldr	r3, [r0, #0]
900180f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900180f6:	69db      	ldr	r3, [r3, #28]
900180f8:	4718      	bx	r3
900180fa:	bd10      	pop	{r4, pc}
900180fc:	24039ac2 	.word	0x24039ac2
90018100:	24039ac0 	.word	0x24039ac0
90018104:	24039b10 	.word	0x24039b10
90018108:	24039b0c 	.word	0x24039b0c
9001810c:	24039acc 	.word	0x24039acc

90018110 <_ZNK8touchgfx4Rect8includesERKS0_>:
90018110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018112:	4606      	mov	r6, r0
90018114:	4608      	mov	r0, r1
90018116:	460f      	mov	r7, r1
90018118:	f7fa fdd5 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001811c:	b9e8      	cbnz	r0, 9001815a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001811e:	f9b7 5000 	ldrsh.w	r5, [r7]
90018122:	f9b6 4000 	ldrsh.w	r4, [r6]
90018126:	42a5      	cmp	r5, r4
90018128:	db17      	blt.n	9001815a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001812a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
9001812e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90018132:	429a      	cmp	r2, r3
90018134:	db11      	blt.n	9001815a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018136:	88b9      	ldrh	r1, [r7, #4]
90018138:	440d      	add	r5, r1
9001813a:	88b1      	ldrh	r1, [r6, #4]
9001813c:	440c      	add	r4, r1
9001813e:	b22d      	sxth	r5, r5
90018140:	b224      	sxth	r4, r4
90018142:	42a5      	cmp	r5, r4
90018144:	dc09      	bgt.n	9001815a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90018146:	88f8      	ldrh	r0, [r7, #6]
90018148:	4410      	add	r0, r2
9001814a:	88f2      	ldrh	r2, [r6, #6]
9001814c:	4413      	add	r3, r2
9001814e:	b200      	sxth	r0, r0
90018150:	b21b      	sxth	r3, r3
90018152:	4298      	cmp	r0, r3
90018154:	bfcc      	ite	gt
90018156:	2000      	movgt	r0, #0
90018158:	2001      	movle	r0, #1
9001815a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001815c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
9001815c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001815e:	4604      	mov	r4, r0
90018160:	4608      	mov	r0, r1
90018162:	460d      	mov	r5, r1
90018164:	f7fa fdaf 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018168:	b978      	cbnz	r0, 9001818a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001816a:	4620      	mov	r0, r4
9001816c:	f7fa fdab 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018170:	f9b5 6000 	ldrsh.w	r6, [r5]
90018174:	b150      	cbz	r0, 9001818c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90018176:	8026      	strh	r6, [r4, #0]
90018178:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001817c:	8063      	strh	r3, [r4, #2]
9001817e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90018182:	80a3      	strh	r3, [r4, #4]
90018184:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90018188:	80e3      	strh	r3, [r4, #6]
9001818a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001818c:	f9b4 1000 	ldrsh.w	r1, [r4]
90018190:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018194:	42b1      	cmp	r1, r6
90018196:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001819a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001819e:	460f      	mov	r7, r1
900181a0:	88ed      	ldrh	r5, [r5, #6]
900181a2:	bfa8      	it	ge
900181a4:	4637      	movge	r7, r6
900181a6:	4293      	cmp	r3, r2
900181a8:	4618      	mov	r0, r3
900181aa:	4466      	add	r6, ip
900181ac:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900181b0:	bfa8      	it	ge
900181b2:	4610      	movge	r0, r2
900181b4:	442a      	add	r2, r5
900181b6:	88e5      	ldrh	r5, [r4, #6]
900181b8:	4461      	add	r1, ip
900181ba:	b236      	sxth	r6, r6
900181bc:	8027      	strh	r7, [r4, #0]
900181be:	442b      	add	r3, r5
900181c0:	b209      	sxth	r1, r1
900181c2:	b212      	sxth	r2, r2
900181c4:	8060      	strh	r0, [r4, #2]
900181c6:	b21b      	sxth	r3, r3
900181c8:	428e      	cmp	r6, r1
900181ca:	bfac      	ite	ge
900181cc:	ebc7 0106 	rsbge	r1, r7, r6
900181d0:	ebc7 0101 	rsblt	r1, r7, r1
900181d4:	429a      	cmp	r2, r3
900181d6:	bfac      	ite	ge
900181d8:	ebc0 0202 	rsbge	r2, r0, r2
900181dc:	ebc0 0203 	rsblt	r2, r0, r3
900181e0:	80a1      	strh	r1, [r4, #4]
900181e2:	80e2      	strh	r2, [r4, #6]
900181e4:	e7d1      	b.n	9001818a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900181e8 <_ZN8touchgfx11Application11getInstanceEv>:
900181e8:	4b01      	ldr	r3, [pc, #4]	; (900181f0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900181ea:	6818      	ldr	r0, [r3, #0]
900181ec:	4770      	bx	lr
900181ee:	bf00      	nop
900181f0:	24039b20 	.word	0x24039b20

900181f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
900181f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900181f6:	4b10      	ldr	r3, [pc, #64]	; (90018238 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
900181f8:	4605      	mov	r5, r0
900181fa:	781b      	ldrb	r3, [r3, #0]
900181fc:	b1d3      	cbz	r3, 90018234 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
900181fe:	4b0f      	ldr	r3, [pc, #60]	; (9001823c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
90018200:	f100 06ee 	add.w	r6, r0, #238	; 0xee
90018204:	4f0e      	ldr	r7, [pc, #56]	; (90018240 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
90018206:	881c      	ldrh	r4, [r3, #0]
90018208:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
9001820c:	42a3      	cmp	r3, r4
9001820e:	d90e      	bls.n	9001822e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
90018210:	683b      	ldr	r3, [r7, #0]
90018212:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90018216:	b10a      	cbz	r2, 9001821c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
90018218:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001821a:	b900      	cbnz	r0, 9001821e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
9001821c:	6898      	ldr	r0, [r3, #8]
9001821e:	6803      	ldr	r3, [r0, #0]
90018220:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
90018224:	3401      	adds	r4, #1
90018226:	69db      	ldr	r3, [r3, #28]
90018228:	4798      	blx	r3
9001822a:	b2a4      	uxth	r4, r4
9001822c:	e7ec      	b.n	90018208 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
9001822e:	2300      	movs	r3, #0
90018230:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
90018234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90018236:	bf00      	nop
90018238:	24039aca 	.word	0x24039aca
9001823c:	24000084 	.word	0x24000084
90018240:	24039acc 	.word	0x24039acc

90018244 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90018244:	2300      	movs	r3, #0
90018246:	b510      	push	{r4, lr}
90018248:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
9001824c:	4604      	mov	r4, r0
9001824e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90018252:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90018256:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
9001825a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
9001825e:	429a      	cmp	r2, r3
90018260:	d90e      	bls.n	90018280 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90018262:	18e2      	adds	r2, r4, r3
90018264:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90018268:	b122      	cbz	r2, 90018274 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001826a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001826e:	6803      	ldr	r3, [r0, #0]
90018270:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90018272:	4798      	blx	r3
90018274:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90018278:	3301      	adds	r3, #1
9001827a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001827e:	e7ea      	b.n	90018256 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90018280:	bd10      	pop	{r4, pc}

90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90018282:	2300      	movs	r3, #0
90018284:	f100 0284 	add.w	r2, r0, #132	; 0x84
90018288:	30a4      	adds	r0, #164	; 0xa4
9001828a:	f820 3c24 	strh.w	r3, [r0, #-36]
9001828e:	f802 3b01 	strb.w	r3, [r2], #1
90018292:	4282      	cmp	r2, r0
90018294:	d1fb      	bne.n	9001828e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90018296:	4770      	bx	lr

90018298 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90018298:	b570      	push	{r4, r5, r6, lr}
9001829a:	4c0b      	ldr	r4, [pc, #44]	; (900182c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
9001829c:	4605      	mov	r5, r0
9001829e:	460e      	mov	r6, r1
900182a0:	6820      	ldr	r0, [r4, #0]
900182a2:	b110      	cbz	r0, 900182aa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
900182a4:	6803      	ldr	r3, [r0, #0]
900182a6:	695b      	ldr	r3, [r3, #20]
900182a8:	4798      	blx	r3
900182aa:	1d28      	adds	r0, r5, #4
900182ac:	f7ff ffe9 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900182b0:	6026      	str	r6, [r4, #0]
900182b2:	6833      	ldr	r3, [r6, #0]
900182b4:	4630      	mov	r0, r6
900182b6:	68db      	ldr	r3, [r3, #12]
900182b8:	4798      	blx	r3
900182ba:	682b      	ldr	r3, [r5, #0]
900182bc:	4628      	mov	r0, r5
900182be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900182c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900182c4:	4718      	bx	r3
900182c6:	bf00      	nop
900182c8:	24039b10 	.word	0x24039b10

900182cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900182cc:	2300      	movs	r3, #0
900182ce:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
900182d2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
900182d6:	461a      	mov	r2, r3
900182d8:	b5f0      	push	{r4, r5, r6, r7, lr}
900182da:	461c      	mov	r4, r3
900182dc:	461d      	mov	r5, r3
900182de:	459c      	cmp	ip, r3
900182e0:	dd1a      	ble.n	90018318 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900182e2:	18c6      	adds	r6, r0, r3
900182e4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
900182e8:	b16e      	cbz	r6, 90018306 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900182ea:	429a      	cmp	r2, r3
900182ec:	d008      	beq.n	90018300 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900182ee:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900182f2:	fa1f fe82 	uxth.w	lr, r2
900182f6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900182fa:	1887      	adds	r7, r0, r2
900182fc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90018300:	3201      	adds	r2, #1
90018302:	3301      	adds	r3, #1
90018304:	e7eb      	b.n	900182de <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90018306:	4299      	cmp	r1, r3
90018308:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
9001830c:	bfa8      	it	ge
9001830e:	3501      	addge	r5, #1
90018310:	429e      	cmp	r6, r3
90018312:	bfc8      	it	gt
90018314:	3401      	addgt	r4, #1
90018316:	e7f4      	b.n	90018302 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90018318:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
9001831c:	1b49      	subs	r1, r1, r5
9001831e:	1b1b      	subs	r3, r3, r4
90018320:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90018324:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90018328:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001832c:	4293      	cmp	r3, r2
9001832e:	dd03      	ble.n	90018338 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90018330:	3b01      	subs	r3, #1
90018332:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90018336:	e7f7      	b.n	90018328 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90018338:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001833c <_ZN8touchgfx11Application15handleTickEventEv>:
9001833c:	b570      	push	{r4, r5, r6, lr}
9001833e:	4d16      	ldr	r5, [pc, #88]	; (90018398 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90018340:	4604      	mov	r4, r0
90018342:	6828      	ldr	r0, [r5, #0]
90018344:	b140      	cbz	r0, 90018358 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90018346:	7a03      	ldrb	r3, [r0, #8]
90018348:	b933      	cbnz	r3, 90018358 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001834a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001834e:	6803      	ldr	r3, [r0, #0]
90018350:	689b      	ldr	r3, [r3, #8]
90018352:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90018356:	4718      	bx	r3
90018358:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
9001835c:	4e0f      	ldr	r6, [pc, #60]	; (9001839c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001835e:	b973      	cbnz	r3, 9001837e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018360:	b168      	cbz	r0, 9001837e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018362:	7a03      	ldrb	r3, [r0, #8]
90018364:	b15b      	cbz	r3, 9001837e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90018366:	6830      	ldr	r0, [r6, #0]
90018368:	b110      	cbz	r0, 90018370 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001836a:	6803      	ldr	r3, [r0, #0]
9001836c:	691b      	ldr	r3, [r3, #16]
9001836e:	4798      	blx	r3
90018370:	6828      	ldr	r0, [r5, #0]
90018372:	6803      	ldr	r3, [r0, #0]
90018374:	68db      	ldr	r3, [r3, #12]
90018376:	4798      	blx	r3
90018378:	2301      	movs	r3, #1
9001837a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001837e:	3404      	adds	r4, #4
90018380:	4620      	mov	r0, r4
90018382:	f7ff ff5f 	bl	90018244 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90018386:	4620      	mov	r0, r4
90018388:	f7ff ffa0 	bl	900182cc <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001838c:	6830      	ldr	r0, [r6, #0]
9001838e:	b110      	cbz	r0, 90018396 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90018390:	6803      	ldr	r3, [r0, #0]
90018392:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018394:	e7dd      	b.n	90018352 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90018396:	bd70      	pop	{r4, r5, r6, pc}
90018398:	24039b14 	.word	0x24039b14
9001839c:	24039b10 	.word	0x24039b10

900183a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
900183a0:	4603      	mov	r3, r0
900183a2:	f100 0140 	add.w	r1, r0, #64	; 0x40
900183a6:	2200      	movs	r2, #0
900183a8:	801a      	strh	r2, [r3, #0]
900183aa:	3308      	adds	r3, #8
900183ac:	f823 2c06 	strh.w	r2, [r3, #-6]
900183b0:	f823 2c04 	strh.w	r2, [r3, #-4]
900183b4:	f823 2c02 	strh.w	r2, [r3, #-2]
900183b8:	428b      	cmp	r3, r1
900183ba:	d1f5      	bne.n	900183a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900183bc:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
900183c0:	4770      	bx	lr
	...

900183c4 <_ZN8touchgfx11ApplicationC1Ev>:
900183c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900183c6:	4b1d      	ldr	r3, [pc, #116]	; (9001843c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900183c8:	4606      	mov	r6, r0
900183ca:	4604      	mov	r4, r0
900183cc:	2500      	movs	r5, #0
900183ce:	f846 3b04 	str.w	r3, [r6], #4
900183d2:	22a8      	movs	r2, #168	; 0xa8
900183d4:	2100      	movs	r1, #0
900183d6:	4630      	mov	r0, r6
900183d8:	f011 fafa 	bl	900299d0 <memset>
900183dc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
900183e0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900183e4:	4f16      	ldr	r7, [pc, #88]	; (90018440 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900183e6:	f7ff ffdb 	bl	900183a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900183ea:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900183ee:	f7ff ffd7 	bl	900183a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900183f2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
900183f6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
900183fa:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
900183fe:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90018402:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90018406:	490f      	ldr	r1, [pc, #60]	; (90018444 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90018408:	480f      	ldr	r0, [pc, #60]	; (90018448 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001840a:	f010 fbdb 	bl	90028bc4 <CRC_Lock>
9001840e:	4b0f      	ldr	r3, [pc, #60]	; (9001844c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90018410:	b158      	cbz	r0, 9001842a <_ZN8touchgfx11ApplicationC1Ev+0x66>
90018412:	801d      	strh	r5, [r3, #0]
90018414:	2300      	movs	r3, #0
90018416:	4a0e      	ldr	r2, [pc, #56]	; (90018450 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90018418:	4630      	mov	r0, r6
9001841a:	6013      	str	r3, [r2, #0]
9001841c:	4a0d      	ldr	r2, [pc, #52]	; (90018454 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
9001841e:	603b      	str	r3, [r7, #0]
90018420:	6013      	str	r3, [r2, #0]
90018422:	f7ff ff2e 	bl	90018282 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90018426:	4620      	mov	r0, r4
90018428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001842a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001842e:	2002      	movs	r0, #2
90018430:	801a      	strh	r2, [r3, #0]
90018432:	6038      	str	r0, [r7, #0]
90018434:	f001 fb48 	bl	90019ac8 <_ZN8touchgfx6Screen4drawEv>
90018438:	e7ec      	b.n	90018414 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001843a:	bf00      	nop
9001843c:	9002dbd8 	.word	0x9002dbd8
90018440:	24039b10 	.word	0x24039b10
90018444:	b5e8b5cd 	.word	0xb5e8b5cd
90018448:	f407a5c2 	.word	0xf407a5c2
9001844c:	24000084 	.word	0x24000084
90018450:	24039b20 	.word	0x24039b20
90018454:	24039b14 	.word	0x24039b14

90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90018458:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
9001845c:	3b01      	subs	r3, #1
9001845e:	b29b      	uxth	r3, r3
90018460:	428b      	cmp	r3, r1
90018462:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90018466:	b510      	push	{r4, lr}
90018468:	d908      	bls.n	9001847c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001846a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001846e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90018472:	681a      	ldr	r2, [r3, #0]
90018474:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90018478:	685a      	ldr	r2, [r3, #4]
9001847a:	6062      	str	r2, [r4, #4]
9001847c:	bd10      	pop	{r4, pc}
	...

90018480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90018480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018484:	b08f      	sub	sp, #60	; 0x3c
90018486:	4b8f      	ldr	r3, [pc, #572]	; (900186c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90018488:	4683      	mov	fp, r0
9001848a:	ac0a      	add	r4, sp, #40	; 0x28
9001848c:	e884 0006 	stmia.w	r4, {r1, r2}
90018490:	f9b3 2000 	ldrsh.w	r2, [r3]
90018494:	4620      	mov	r0, r4
90018496:	4b8c      	ldr	r3, [pc, #560]	; (900186c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90018498:	f9b3 1000 	ldrsh.w	r1, [r3]
9001849c:	f7ff fde7 	bl	9001806e <_ZN8touchgfx4Rect10restrictToEss>
900184a0:	4620      	mov	r0, r4
900184a2:	f7fa fc10 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
900184a6:	2800      	cmp	r0, #0
900184a8:	d16a      	bne.n	90018580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900184aa:	9403      	str	r4, [sp, #12]
900184ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900184b0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
900184b4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900184b8:	9301      	str	r3, [sp, #4]
900184ba:	35a4      	adds	r5, #164	; 0xa4
900184bc:	b15c      	cbz	r4, 900184d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
900184be:	4629      	mov	r1, r5
900184c0:	9803      	ldr	r0, [sp, #12]
900184c2:	f7ff fe25 	bl	90018110 <_ZNK8touchgfx4Rect8includesERKS0_>
900184c6:	3c01      	subs	r4, #1
900184c8:	b118      	cbz	r0, 900184d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
900184ca:	b2a1      	uxth	r1, r4
900184cc:	9801      	ldr	r0, [sp, #4]
900184ce:	f7ff ffc3 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900184d2:	3d08      	subs	r5, #8
900184d4:	e7f2      	b.n	900184bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900184d6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
900184da:	f10a 33ff 	add.w	r3, sl, #4294967295
900184de:	f8cd a010 	str.w	sl, [sp, #16]
900184e2:	9302      	str	r3, [sp, #8]
900184e4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900184e8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
900184ec:	9306      	str	r3, [sp, #24]
900184ee:	445c      	add	r4, fp
900184f0:	2500      	movs	r5, #0
900184f2:	4626      	mov	r6, r4
900184f4:	f8cd a014 	str.w	sl, [sp, #20]
900184f8:	462f      	mov	r7, r5
900184fa:	9b05      	ldr	r3, [sp, #20]
900184fc:	2b00      	cmp	r3, #0
900184fe:	d073      	beq.n	900185e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90018500:	9903      	ldr	r1, [sp, #12]
90018502:	4630      	mov	r0, r6
90018504:	f7ff fd91 	bl	9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018508:	b350      	cbz	r0, 90018560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001850a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001850e:	f9b6 c000 	ldrsh.w	ip, [r6]
90018512:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90018516:	45e6      	cmp	lr, ip
90018518:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001851c:	db33      	blt.n	90018586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001851e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90018522:	88b3      	ldrh	r3, [r6, #4]
90018524:	4472      	add	r2, lr
90018526:	4463      	add	r3, ip
90018528:	b212      	sxth	r2, r2
9001852a:	b21b      	sxth	r3, r3
9001852c:	429a      	cmp	r2, r3
9001852e:	dc2a      	bgt.n	90018586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90018530:	fa1f f289 	uxth.w	r2, r9
90018534:	88f3      	ldrh	r3, [r6, #6]
90018536:	45c8      	cmp	r8, r9
90018538:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001853c:	4413      	add	r3, r2
9001853e:	fa1f fc88 	uxth.w	ip, r8
90018542:	b29b      	uxth	r3, r3
90018544:	fa0f fe83 	sxth.w	lr, r3
90018548:	db0f      	blt.n	9001856a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001854a:	eba3 030c 	sub.w	r3, r3, ip
9001854e:	1ac9      	subs	r1, r1, r3
90018550:	b209      	sxth	r1, r1
90018552:	2900      	cmp	r1, #0
90018554:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018558:	dd12      	ble.n	90018580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001855a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001855e:	4605      	mov	r5, r0
90018560:	9b05      	ldr	r3, [sp, #20]
90018562:	3e08      	subs	r6, #8
90018564:	3b01      	subs	r3, #1
90018566:	9305      	str	r3, [sp, #20]
90018568:	e7c7      	b.n	900184fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001856a:	4461      	add	r1, ip
9001856c:	b209      	sxth	r1, r1
9001856e:	4571      	cmp	r1, lr
90018570:	dc38      	bgt.n	900185e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90018572:	eba2 020c 	sub.w	r2, r2, ip
90018576:	b212      	sxth	r2, r2
90018578:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001857c:	2a00      	cmp	r2, #0
9001857e:	dcee      	bgt.n	9001855e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90018580:	b00f      	add	sp, #60	; 0x3c
90018582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018586:	45c8      	cmp	r8, r9
90018588:	db2c      	blt.n	900185e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001858a:	88f3      	ldrh	r3, [r6, #6]
9001858c:	4499      	add	r9, r3
9001858e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90018592:	4498      	add	r8, r3
90018594:	fa0f f989 	sxth.w	r9, r9
90018598:	fa0f f888 	sxth.w	r8, r8
9001859c:	45c1      	cmp	r9, r8
9001859e:	db21      	blt.n	900185e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900185a0:	fa1f f28c 	uxth.w	r2, ip
900185a4:	88b3      	ldrh	r3, [r6, #4]
900185a6:	45e6      	cmp	lr, ip
900185a8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
900185ac:	4413      	add	r3, r2
900185ae:	fa1f f88e 	uxth.w	r8, lr
900185b2:	b29b      	uxth	r3, r3
900185b4:	fa0f f983 	sxth.w	r9, r3
900185b8:	db0a      	blt.n	900185d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
900185ba:	eba3 0308 	sub.w	r3, r3, r8
900185be:	1ac9      	subs	r1, r1, r3
900185c0:	b209      	sxth	r1, r1
900185c2:	2900      	cmp	r1, #0
900185c4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
900185c8:	ddda      	ble.n	90018580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900185ca:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900185ce:	e7c6      	b.n	9001855e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900185d0:	4441      	add	r1, r8
900185d2:	b209      	sxth	r1, r1
900185d4:	4549      	cmp	r1, r9
900185d6:	dc05      	bgt.n	900185e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900185d8:	eba2 0208 	sub.w	r2, r2, r8
900185dc:	b212      	sxth	r2, r2
900185de:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900185e2:	e7cb      	b.n	9001857c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900185e4:	4607      	mov	r7, r0
900185e6:	e7bb      	b.n	90018560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900185e8:	2d00      	cmp	r5, #0
900185ea:	d181      	bne.n	900184f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900185ec:	2f00      	cmp	r7, #0
900185ee:	f000 81dd 	beq.w	900189ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900185f2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
900185f6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
900185fa:	b2b3      	uxth	r3, r6
900185fc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90018600:	9305      	str	r3, [sp, #20]
90018602:	9a05      	ldr	r2, [sp, #20]
90018604:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90018608:	4413      	add	r3, r2
9001860a:	b2ba      	uxth	r2, r7
9001860c:	4492      	add	sl, r2
9001860e:	b29b      	uxth	r3, r3
90018610:	fa1f fa8a 	uxth.w	sl, sl
90018614:	fa0f f883 	sxth.w	r8, r3
90018618:	fa0f f98a 	sxth.w	r9, sl
9001861c:	e9cd 2307 	strd	r2, r3, [sp, #28]
90018620:	9b04      	ldr	r3, [sp, #16]
90018622:	2b00      	cmp	r3, #0
90018624:	d052      	beq.n	900186cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90018626:	9903      	ldr	r1, [sp, #12]
90018628:	4620      	mov	r0, r4
9001862a:	f7ff fcfe 	bl	9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001862e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90018632:	b1c0      	cbz	r0, 90018666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018634:	f9b4 e000 	ldrsh.w	lr, [r4]
90018638:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001863c:	4576      	cmp	r6, lr
9001863e:	dc22      	bgt.n	90018686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90018640:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90018644:	44f4      	add	ip, lr
90018646:	fa0f fc8c 	sxth.w	ip, ip
9001864a:	45e0      	cmp	r8, ip
9001864c:	db1b      	blt.n	90018686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001864e:	428f      	cmp	r7, r1
90018650:	fa1f fc81 	uxth.w	ip, r1
90018654:	88e1      	ldrh	r1, [r4, #6]
90018656:	dc0d      	bgt.n	90018674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90018658:	ebaa 0c0c 	sub.w	ip, sl, ip
9001865c:	f8a4 9002 	strh.w	r9, [r4, #2]
90018660:	eba1 010c 	sub.w	r1, r1, ip
90018664:	80e1      	strh	r1, [r4, #6]
90018666:	4628      	mov	r0, r5
90018668:	9904      	ldr	r1, [sp, #16]
9001866a:	3c08      	subs	r4, #8
9001866c:	4605      	mov	r5, r0
9001866e:	3901      	subs	r1, #1
90018670:	9104      	str	r1, [sp, #16]
90018672:	e7d3      	b.n	9001861c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90018674:	4461      	add	r1, ip
90018676:	b209      	sxth	r1, r1
90018678:	4549      	cmp	r1, r9
9001867a:	dcf5      	bgt.n	90018668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001867c:	eba2 0c0c 	sub.w	ip, r2, ip
90018680:	f8a4 c006 	strh.w	ip, [r4, #6]
90018684:	e7ef      	b.n	90018666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90018686:	428f      	cmp	r7, r1
90018688:	dcee      	bgt.n	90018668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001868a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001868e:	4461      	add	r1, ip
90018690:	b209      	sxth	r1, r1
90018692:	4589      	cmp	r9, r1
90018694:	dbe8      	blt.n	90018668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90018696:	4576      	cmp	r6, lr
90018698:	fa1f fc8e 	uxth.w	ip, lr
9001869c:	88a1      	ldrh	r1, [r4, #4]
9001869e:	dc07      	bgt.n	900186b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
900186a0:	eba3 0c0c 	sub.w	ip, r3, ip
900186a4:	f8a4 8000 	strh.w	r8, [r4]
900186a8:	eba1 010c 	sub.w	r1, r1, ip
900186ac:	80a1      	strh	r1, [r4, #4]
900186ae:	e7da      	b.n	90018666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900186b0:	4461      	add	r1, ip
900186b2:	b209      	sxth	r1, r1
900186b4:	4588      	cmp	r8, r1
900186b6:	dbd7      	blt.n	90018668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900186b8:	9905      	ldr	r1, [sp, #20]
900186ba:	eba1 0c0c 	sub.w	ip, r1, ip
900186be:	f8a4 c004 	strh.w	ip, [r4, #4]
900186c2:	e7d0      	b.n	90018666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900186c4:	24039ac2 	.word	0x24039ac2
900186c8:	24039ac0 	.word	0x24039ac0
900186cc:	2d00      	cmp	r5, #0
900186ce:	f000 816d 	beq.w	900189ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900186d2:	9b06      	ldr	r3, [sp, #24]
900186d4:	445b      	add	r3, fp
900186d6:	461c      	mov	r4, r3
900186d8:	9b02      	ldr	r3, [sp, #8]
900186da:	3301      	adds	r3, #1
900186dc:	f000 8166 	beq.w	900189ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900186e0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
900186e4:	9803      	ldr	r0, [sp, #12]
900186e6:	4629      	mov	r1, r5
900186e8:	f7ff fd12 	bl	90018110 <_ZNK8touchgfx4Rect8includesERKS0_>
900186ec:	b120      	cbz	r0, 900186f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900186ee:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900186f2:	9801      	ldr	r0, [sp, #4]
900186f4:	f7ff feb0 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900186f8:	9903      	ldr	r1, [sp, #12]
900186fa:	4628      	mov	r0, r5
900186fc:	f7ff fc95 	bl	9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018700:	2800      	cmp	r0, #0
90018702:	f000 809c 	beq.w	9001883e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90018706:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001870a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001870e:	fa1f f189 	uxth.w	r1, r9
90018712:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018716:	9309      	str	r3, [sp, #36]	; 0x24
90018718:	eb01 0c03 	add.w	ip, r1, r3
9001871c:	b283      	uxth	r3, r0
9001871e:	4548      	cmp	r0, r9
90018720:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90018724:	fa1f fa8c 	uxth.w	sl, ip
90018728:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001872c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90018730:	eb03 050c 	add.w	r5, r3, ip
90018734:	b2ad      	uxth	r5, r5
90018736:	9505      	str	r5, [sp, #20]
90018738:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001873c:	9504      	str	r5, [sp, #16]
9001873e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90018742:	f340 8099 	ble.w	90018878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90018746:	1a5b      	subs	r3, r3, r1
90018748:	4596      	cmp	lr, r2
9001874a:	fa0f f08a 	sxth.w	r0, sl
9001874e:	b29b      	uxth	r3, r3
90018750:	b21e      	sxth	r6, r3
90018752:	dd2e      	ble.n	900187b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90018754:	9f02      	ldr	r7, [sp, #8]
90018756:	fa1f fe8e 	uxth.w	lr, lr
9001875a:	b292      	uxth	r2, r2
9001875c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90018760:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90018764:	9f04      	ldr	r7, [sp, #16]
90018766:	ebae 0102 	sub.w	r1, lr, r2
9001876a:	44a6      	add	lr, r4
9001876c:	1a3f      	subs	r7, r7, r0
9001876e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90018772:	b289      	uxth	r1, r1
90018774:	4402      	add	r2, r0
90018776:	fa0f fe8e 	sxth.w	lr, lr
9001877a:	b20d      	sxth	r5, r1
9001877c:	b212      	sxth	r2, r2
9001877e:	436f      	muls	r7, r5
90018780:	ebae 0202 	sub.w	r2, lr, r2
90018784:	4372      	muls	r2, r6
90018786:	4297      	cmp	r7, r2
90018788:	db09      	blt.n	9001879e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001878a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001878e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90018792:	449c      	add	ip, r3
90018794:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90018798:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001879c:	e686      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001879e:	4421      	add	r1, r4
900187a0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
900187a4:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
900187a8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900187ac:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900187b0:	e67c      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900187b2:	9f04      	ldr	r7, [sp, #16]
900187b4:	42b8      	cmp	r0, r7
900187b6:	da27      	bge.n	90018808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
900187b8:	9902      	ldr	r1, [sp, #8]
900187ba:	1a3f      	subs	r7, r7, r0
900187bc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
900187c0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900187c4:	eb05 010e 	add.w	r1, r5, lr
900187c8:	fa1f f881 	uxth.w	r8, r1
900187cc:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
900187d0:	4411      	add	r1, r2
900187d2:	fa0f f988 	sxth.w	r9, r8
900187d6:	eba2 020e 	sub.w	r2, r2, lr
900187da:	eba1 0108 	sub.w	r1, r1, r8
900187de:	4372      	muls	r2, r6
900187e0:	b289      	uxth	r1, r1
900187e2:	fa0f f881 	sxth.w	r8, r1
900187e6:	fb08 f707 	mul.w	r7, r8, r7
900187ea:	42ba      	cmp	r2, r7
900187ec:	dc06      	bgt.n	900187fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900187ee:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
900187f2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
900187f6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
900187fa:	e7ca      	b.n	90018792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900187fc:	4429      	add	r1, r5
900187fe:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90018802:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90018806:	e651      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018808:	9805      	ldr	r0, [sp, #20]
9001880a:	2d06      	cmp	r5, #6
9001880c:	ebaa 0000 	sub.w	r0, sl, r0
90018810:	b280      	uxth	r0, r0
90018812:	fa0f fe80 	sxth.w	lr, r0
90018816:	d817      	bhi.n	90018848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90018818:	9b04      	ldr	r3, [sp, #16]
9001881a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001881e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90018822:	1c6b      	adds	r3, r5, #1
90018824:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90018828:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001882c:	9b01      	ldr	r3, [sp, #4]
9001882e:	9801      	ldr	r0, [sp, #4]
90018830:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018834:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90018838:	805a      	strh	r2, [r3, #2]
9001883a:	809e      	strh	r6, [r3, #4]
9001883c:	80d9      	strh	r1, [r3, #6]
9001883e:	9b02      	ldr	r3, [sp, #8]
90018840:	3c08      	subs	r4, #8
90018842:	3b01      	subs	r3, #1
90018844:	9302      	str	r3, [sp, #8]
90018846:	e747      	b.n	900186d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90018848:	9a02      	ldr	r2, [sp, #8]
9001884a:	45b6      	cmp	lr, r6
9001884c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90018850:	db0d      	blt.n	9001886e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90018852:	449c      	add	ip, r3
90018854:	445a      	add	r2, fp
90018856:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001885a:	fa1f fc8c 	uxth.w	ip, ip
9001885e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90018862:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90018866:	448c      	add	ip, r1
90018868:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001886c:	e61e      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001886e:	445a      	add	r2, fp
90018870:	4484      	add	ip, r0
90018872:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90018876:	e78f      	b.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018878:	fa1f f18e 	uxth.w	r1, lr
9001887c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90018880:	b293      	uxth	r3, r2
90018882:	4596      	cmp	lr, r2
90018884:	eb01 0806 	add.w	r8, r1, r6
90018888:	9306      	str	r3, [sp, #24]
9001888a:	fa1f f888 	uxth.w	r8, r8
9001888e:	9f06      	ldr	r7, [sp, #24]
90018890:	fa0f f388 	sxth.w	r3, r8
90018894:	9307      	str	r3, [sp, #28]
90018896:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001889a:	443b      	add	r3, r7
9001889c:	b29b      	uxth	r3, r3
9001889e:	9308      	str	r3, [sp, #32]
900188a0:	da24      	bge.n	900188ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
900188a2:	9905      	ldr	r1, [sp, #20]
900188a4:	eba3 0308 	sub.w	r3, r3, r8
900188a8:	eba2 020e 	sub.w	r2, r2, lr
900188ac:	eba9 0000 	sub.w	r0, r9, r0
900188b0:	ebaa 0401 	sub.w	r4, sl, r1
900188b4:	b29b      	uxth	r3, r3
900188b6:	b2a4      	uxth	r4, r4
900188b8:	b219      	sxth	r1, r3
900188ba:	b225      	sxth	r5, r4
900188bc:	4348      	muls	r0, r1
900188be:	436a      	muls	r2, r5
900188c0:	4282      	cmp	r2, r0
900188c2:	9a02      	ldr	r2, [sp, #8]
900188c4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900188c8:	445a      	add	r2, fp
900188ca:	dc06      	bgt.n	900188da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
900188cc:	9b07      	ldr	r3, [sp, #28]
900188ce:	44a4      	add	ip, r4
900188d0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
900188d4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
900188d8:	e75e      	b.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900188da:	9904      	ldr	r1, [sp, #16]
900188dc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
900188e0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
900188e4:	4433      	add	r3, r6
900188e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900188ea:	e5df      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900188ec:	9f06      	ldr	r7, [sp, #24]
900188ee:	9b04      	ldr	r3, [sp, #16]
900188f0:	1bc9      	subs	r1, r1, r7
900188f2:	fa0f f78a 	sxth.w	r7, sl
900188f6:	b289      	uxth	r1, r1
900188f8:	429f      	cmp	r7, r3
900188fa:	fa0f fe81 	sxth.w	lr, r1
900188fe:	dd23      	ble.n	90018948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90018900:	9a05      	ldr	r2, [sp, #20]
90018902:	eba9 0000 	sub.w	r0, r9, r0
90018906:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001890a:	ebaa 0202 	sub.w	r2, sl, r2
9001890e:	9d07      	ldr	r5, [sp, #28]
90018910:	fb0e f000 	mul.w	r0, lr, r0
90018914:	b292      	uxth	r2, r2
90018916:	eba5 0a03 	sub.w	sl, r5, r3
9001891a:	9b02      	ldr	r3, [sp, #8]
9001891c:	b214      	sxth	r4, r2
9001891e:	00db      	lsls	r3, r3, #3
90018920:	fb04 fa0a 	mul.w	sl, r4, sl
90018924:	445b      	add	r3, fp
90018926:	4550      	cmp	r0, sl
90018928:	db03      	blt.n	90018932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001892a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001892e:	4494      	add	ip, r2
90018930:	e732      	b.n	90018798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90018932:	9a04      	ldr	r2, [sp, #16]
90018934:	4431      	add	r1, r6
90018936:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001893a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001893e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90018942:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90018946:	e75c      	b.n	90018802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90018948:	9b08      	ldr	r3, [sp, #32]
9001894a:	2d06      	cmp	r5, #6
9001894c:	eba3 0308 	sub.w	r3, r3, r8
90018950:	b29b      	uxth	r3, r3
90018952:	b218      	sxth	r0, r3
90018954:	d813      	bhi.n	9001897e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90018956:	9b07      	ldr	r3, [sp, #28]
90018958:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001895c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90018960:	1c6b      	adds	r3, r5, #1
90018962:	9901      	ldr	r1, [sp, #4]
90018964:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90018968:	9b01      	ldr	r3, [sp, #4]
9001896a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001896e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90018972:	805a      	strh	r2, [r3, #2]
90018974:	9a09      	ldr	r2, [sp, #36]	; 0x24
90018976:	f8a3 e006 	strh.w	lr, [r3, #6]
9001897a:	809a      	strh	r2, [r3, #4]
9001897c:	e75f      	b.n	9001883e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001897e:	9c02      	ldr	r4, [sp, #8]
90018980:	4570      	cmp	r0, lr
90018982:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90018986:	db0d      	blt.n	900189a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90018988:	4431      	add	r1, r6
9001898a:	9b06      	ldr	r3, [sp, #24]
9001898c:	445c      	add	r4, fp
9001898e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90018992:	b289      	uxth	r1, r1
90018994:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90018998:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001899c:	4419      	add	r1, r3
9001899e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
900189a2:	e583      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900189a4:	445c      	add	r4, fp
900189a6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
900189aa:	e79b      	b.n	900188e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
900189ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
900189b0:	f64f 76ff 	movw	r6, #65535	; 0xffff
900189b4:	1e65      	subs	r5, r4, #1
900189b6:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900189ba:	b2ad      	uxth	r5, r5
900189bc:	42b5      	cmp	r5, r6
900189be:	d044      	beq.n	90018a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
900189c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
900189c4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
900189c8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
900189cc:	4282      	cmp	r2, r0
900189ce:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
900189d2:	d11f      	bne.n	90018a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900189d4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
900189d8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900189dc:	459c      	cmp	ip, r3
900189de:	d119      	bne.n	90018a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900189e0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
900189e4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900189e8:	19d8      	adds	r0, r3, r7
900189ea:	b200      	sxth	r0, r0
900189ec:	4288      	cmp	r0, r1
900189ee:	d109      	bne.n	90018a04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900189f0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
900189f4:	4413      	add	r3, r2
900189f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900189fa:	4629      	mov	r1, r5
900189fc:	9801      	ldr	r0, [sp, #4]
900189fe:	f7ff fd2b 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018a02:	e003      	b.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018a04:	4411      	add	r1, r2
90018a06:	b209      	sxth	r1, r1
90018a08:	42b9      	cmp	r1, r7
90018a0a:	d0f3      	beq.n	900189f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90018a0c:	3d01      	subs	r5, #1
90018a0e:	3c08      	subs	r4, #8
90018a10:	b2ad      	uxth	r5, r5
90018a12:	e7d3      	b.n	900189bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90018a14:	42b9      	cmp	r1, r7
90018a16:	d1f9      	bne.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018a18:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
90018a1c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018a20:	4299      	cmp	r1, r3
90018a22:	d1f3      	bne.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018a24:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90018a28:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90018a2c:	181f      	adds	r7, r3, r0
90018a2e:	b23f      	sxth	r7, r7
90018a30:	42ba      	cmp	r2, r7
90018a32:	d105      	bne.n	90018a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90018a34:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90018a38:	440b      	add	r3, r1
90018a3a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90018a3e:	e7dc      	b.n	900189fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90018a40:	440a      	add	r2, r1
90018a42:	b212      	sxth	r2, r2
90018a44:	4290      	cmp	r0, r2
90018a46:	d1e1      	bne.n	90018a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90018a48:	e7f6      	b.n	90018a38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90018a4a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
90018a4e:	2e07      	cmp	r6, #7
90018a50:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90018a54:	d812      	bhi.n	90018a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90018a56:	1c75      	adds	r5, r6, #1
90018a58:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90018a5c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90018a60:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90018a64:	9d01      	ldr	r5, [sp, #4]
90018a66:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90018a6a:	442c      	add	r4, r5
90018a6c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90018a70:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90018a74:	8061      	strh	r1, [r4, #2]
90018a76:	80a2      	strh	r2, [r4, #4]
90018a78:	80e3      	strh	r3, [r4, #6]
90018a7a:	e581      	b.n	90018580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90018a7c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90018a80:	3e01      	subs	r6, #1
90018a82:	445c      	add	r4, fp
90018a84:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90018a88:	f04f 37ff 	mov.w	r7, #4294967295
90018a8c:	2500      	movs	r5, #0
90018a8e:	9305      	str	r3, [sp, #20]
90018a90:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90018a94:	1e72      	subs	r2, r6, #1
90018a96:	9302      	str	r3, [sp, #8]
90018a98:	4691      	mov	r9, r2
90018a9a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90018a9e:	9304      	str	r3, [sp, #16]
90018aa0:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90018aa4:	f1b9 3fff 	cmp.w	r9, #4294967295
90018aa8:	6818      	ldr	r0, [r3, #0]
90018aaa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90018aae:	9207      	str	r2, [sp, #28]
90018ab0:	bf16      	itet	ne
90018ab2:	9905      	ldrne	r1, [sp, #20]
90018ab4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90018ab8:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90018abc:	9306      	str	r3, [sp, #24]
90018abe:	f8be 1006 	ldrh.w	r1, [lr, #6]
90018ac2:	f8be 8004 	ldrh.w	r8, [lr, #4]
90018ac6:	fb18 f801 	smulbb	r8, r8, r1
90018aca:	6859      	ldr	r1, [r3, #4]
90018acc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018ad0:	4671      	mov	r1, lr
90018ad2:	a80c      	add	r0, sp, #48	; 0x30
90018ad4:	f7ff fb42 	bl	9001815c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018ad8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90018adc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90018ae0:	f04f 0c08 	mov.w	ip, #8
90018ae4:	9b04      	ldr	r3, [sp, #16]
90018ae6:	9a02      	ldr	r2, [sp, #8]
90018ae8:	fb10 f001 	smulbb	r0, r0, r1
90018aec:	fb02 8803 	mla	r8, r2, r3, r8
90018af0:	eba0 0108 	sub.w	r1, r0, r8
90018af4:	fb90 f0fc 	sdiv	r0, r0, ip
90018af8:	4288      	cmp	r0, r1
90018afa:	dc20      	bgt.n	90018b3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018afc:	4551      	cmp	r1, sl
90018afe:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90018b02:	da03      	bge.n	90018b0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90018b04:	b1d9      	cbz	r1, 90018b3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90018b06:	468a      	mov	sl, r1
90018b08:	464f      	mov	r7, r9
90018b0a:	4635      	mov	r5, r6
90018b0c:	f109 39ff 	add.w	r9, r9, #4294967295
90018b10:	f119 0f02 	cmn.w	r9, #2
90018b14:	d1c6      	bne.n	90018aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90018b16:	4616      	mov	r6, r2
90018b18:	3201      	adds	r2, #1
90018b1a:	f1a4 0408 	sub.w	r4, r4, #8
90018b1e:	d1b7      	bne.n	90018a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90018b20:	9b01      	ldr	r3, [sp, #4]
90018b22:	b2ac      	uxth	r4, r5
90018b24:	00ed      	lsls	r5, r5, #3
90018b26:	1958      	adds	r0, r3, r5
90018b28:	1c7b      	adds	r3, r7, #1
90018b2a:	d10b      	bne.n	90018b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90018b2c:	4601      	mov	r1, r0
90018b2e:	9803      	ldr	r0, [sp, #12]
90018b30:	f7ff fb14 	bl	9001815c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018b34:	4621      	mov	r1, r4
90018b36:	9801      	ldr	r0, [sp, #4]
90018b38:	f7ff fc8e 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018b3c:	e4b6      	b.n	900184ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90018b3e:	464f      	mov	r7, r9
90018b40:	4635      	mov	r5, r6
90018b42:	e7ed      	b.n	90018b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90018b44:	9b01      	ldr	r3, [sp, #4]
90018b46:	00ff      	lsls	r7, r7, #3
90018b48:	445d      	add	r5, fp
90018b4a:	19d9      	adds	r1, r3, r7
90018b4c:	445f      	add	r7, fp
90018b4e:	f7ff fb05 	bl	9001815c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90018b52:	9b03      	ldr	r3, [sp, #12]
90018b54:	cb03      	ldmia	r3!, {r0, r1}
90018b56:	9b03      	ldr	r3, [sp, #12]
90018b58:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90018b5c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90018b60:	f855 0fac 	ldr.w	r0, [r5, #172]!
90018b64:	6869      	ldr	r1, [r5, #4]
90018b66:	c303      	stmia	r3!, {r0, r1}
90018b68:	e7e4      	b.n	90018b34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90018b6a:	bf00      	nop

90018b6c <_ZN8touchgfx11Application15drawCachedAreasEv>:
90018b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b70:	f500 7698 	add.w	r6, r0, #304	; 0x130
90018b74:	b09b      	sub	sp, #108	; 0x6c
90018b76:	4604      	mov	r4, r0
90018b78:	4630      	mov	r0, r6
90018b7a:	f7fa f8a4 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018b7e:	4605      	mov	r5, r0
90018b80:	b948      	cbnz	r0, 90018b96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90018b82:	6823      	ldr	r3, [r4, #0]
90018b84:	4620      	mov	r0, r4
90018b86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018b88:	e896 0006 	ldmia.w	r6, {r1, r2}
90018b8c:	4798      	blx	r3
90018b8e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90018b92:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90018b96:	4bc5      	ldr	r3, [pc, #788]	; (90018eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90018b98:	681b      	ldr	r3, [r3, #0]
90018b9a:	2b00      	cmp	r3, #0
90018b9c:	d03f      	beq.n	90018c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018b9e:	4dc4      	ldr	r5, [pc, #784]	; (90018eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90018ba0:	4628      	mov	r0, r5
90018ba2:	f7fa f890 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018ba6:	4606      	mov	r6, r0
90018ba8:	2800      	cmp	r0, #0
90018baa:	d138      	bne.n	90018c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90018bac:	4628      	mov	r0, r5
90018bae:	f7ff f94b 	bl	90017e48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018bb2:	6823      	ldr	r3, [r4, #0]
90018bb4:	6829      	ldr	r1, [r5, #0]
90018bb6:	4620      	mov	r0, r4
90018bb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90018bba:	686a      	ldr	r2, [r5, #4]
90018bbc:	4798      	blx	r3
90018bbe:	802e      	strh	r6, [r5, #0]
90018bc0:	806e      	strh	r6, [r5, #2]
90018bc2:	80ae      	strh	r6, [r5, #4]
90018bc4:	80ee      	strh	r6, [r5, #6]
90018bc6:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90018bca:	4dba      	ldr	r5, [pc, #744]	; (90018eb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90018bcc:	4640      	mov	r0, r8
90018bce:	f7ff fbe7 	bl	900183a0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90018bd2:	882e      	ldrh	r6, [r5, #0]
90018bd4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018bd8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90018bdc:	4633      	mov	r3, r6
90018bde:	42bb      	cmp	r3, r7
90018be0:	d224      	bcs.n	90018c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018be2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90018be6:	2907      	cmp	r1, #7
90018be8:	d816      	bhi.n	90018c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
90018bea:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90018bee:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90018bf2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90018bf6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
90018bfa:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90018bfe:	1c4a      	adds	r2, r1, #1
90018c00:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90018c04:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90018c08:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
90018c0c:	f8a2 a002 	strh.w	sl, [r2, #2]
90018c10:	f8a2 e004 	strh.w	lr, [r2, #4]
90018c14:	f8a2 c006 	strh.w	ip, [r2, #6]
90018c18:	3301      	adds	r3, #1
90018c1a:	b29b      	uxth	r3, r3
90018c1c:	e7df      	b.n	90018bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
90018c1e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018c22:	2b00      	cmp	r3, #0
90018c24:	d1cf      	bne.n	90018bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90018c26:	b01b      	add	sp, #108	; 0x6c
90018c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018c2c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90018c30:	42b3      	cmp	r3, r6
90018c32:	d90c      	bls.n	90018c4e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90018c34:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90018c38:	6822      	ldr	r2, [r4, #0]
90018c3a:	3601      	adds	r6, #1
90018c3c:	4620      	mov	r0, r4
90018c3e:	6c17      	ldr	r7, [r2, #64]	; 0x40
90018c40:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90018c44:	b2b6      	uxth	r6, r6
90018c46:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90018c4a:	47b8      	blx	r7
90018c4c:	e7ee      	b.n	90018c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90018c4e:	4a9a      	ldr	r2, [pc, #616]	; (90018eb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018c50:	6813      	ldr	r3, [r2, #0]
90018c52:	4691      	mov	r9, r2
90018c54:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90018c58:	2b01      	cmp	r3, #1
90018c5a:	f040 80e0 	bne.w	90018e1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
90018c5e:	8829      	ldrh	r1, [r5, #0]
90018c60:	2600      	movs	r6, #0
90018c62:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90018c66:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90018c6a:	33ae      	adds	r3, #174	; 0xae
90018c6c:	428f      	cmp	r7, r1
90018c6e:	f103 0308 	add.w	r3, r3, #8
90018c72:	dd0a      	ble.n	90018c8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90018c74:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90018c78:	3101      	adds	r1, #1
90018c7a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
90018c7e:	4402      	add	r2, r0
90018c80:	b212      	sxth	r2, r2
90018c82:	4296      	cmp	r6, r2
90018c84:	bfb8      	it	lt
90018c86:	4616      	movlt	r6, r2
90018c88:	e7f0      	b.n	90018c6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90018c8a:	4b8c      	ldr	r3, [pc, #560]	; (90018ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90018c8c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90018eb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90018c90:	881b      	ldrh	r3, [r3, #0]
90018c92:	2b0f      	cmp	r3, #15
90018c94:	bf8c      	ite	hi
90018c96:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90018c9a:	f04f 0b01 	movls.w	fp, #1
90018c9e:	2300      	movs	r3, #0
90018ca0:	e9cd 3305 	strd	r3, r3, [sp, #20]
90018ca4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90018ca8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90018cac:	4b82      	ldr	r3, [pc, #520]	; (90018eb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90018cae:	4438      	add	r0, r7
90018cb0:	b207      	sxth	r7, r0
90018cb2:	6818      	ldr	r0, [r3, #0]
90018cb4:	42b7      	cmp	r7, r6
90018cb6:	6803      	ldr	r3, [r0, #0]
90018cb8:	f280 8083 	bge.w	90018dc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90018cbc:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90018cc0:	4798      	blx	r3
90018cc2:	eb07 030b 	add.w	r3, r7, fp
90018cc6:	4298      	cmp	r0, r3
90018cc8:	da07      	bge.n	90018cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018cca:	42b0      	cmp	r0, r6
90018ccc:	da05      	bge.n	90018cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90018cce:	4287      	cmp	r7, r0
90018cd0:	dd6c      	ble.n	90018dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018cd2:	2f00      	cmp	r7, #0
90018cd4:	dd6a      	ble.n	90018dac <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90018cd6:	4630      	mov	r0, r6
90018cd8:	e004      	b.n	90018ce4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90018cda:	4287      	cmp	r7, r0
90018cdc:	dcfb      	bgt.n	90018cd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
90018cde:	42b0      	cmp	r0, r6
90018ce0:	bfa8      	it	ge
90018ce2:	4630      	movge	r0, r6
90018ce4:	4b76      	ldr	r3, [pc, #472]	; (90018ec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90018ce6:	1bc0      	subs	r0, r0, r7
90018ce8:	2200      	movs	r2, #0
90018cea:	f8ad 7016 	strh.w	r7, [sp, #22]
90018cee:	f9b3 3000 	ldrsh.w	r3, [r3]
90018cf2:	882f      	ldrh	r7, [r5, #0]
90018cf4:	f8ad 2014 	strh.w	r2, [sp, #20]
90018cf8:	f8ad 3018 	strh.w	r3, [sp, #24]
90018cfc:	f8ad 001a 	strh.w	r0, [sp, #26]
90018d00:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90018d04:	42bb      	cmp	r3, r7
90018d06:	d9cd      	bls.n	90018ca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018d08:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
90018d0c:	ab07      	add	r3, sp, #28
90018d0e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90018d12:	6851      	ldr	r1, [r2, #4]
90018d14:	c303      	stmia	r3!, {r0, r1}
90018d16:	a905      	add	r1, sp, #20
90018d18:	a807      	add	r0, sp, #28
90018d1a:	f7ff f986 	bl	9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>
90018d1e:	2800      	cmp	r0, #0
90018d20:	d04c      	beq.n	90018dbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90018d22:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90018d26:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90018d2a:	f8bd a020 	ldrh.w	sl, [sp, #32]
90018d2e:	4686      	mov	lr, r0
90018d30:	4290      	cmp	r0, r2
90018d32:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90018d36:	4450      	add	r0, sl
90018d38:	f8bd a018 	ldrh.w	sl, [sp, #24]
90018d3c:	bfb8      	it	lt
90018d3e:	4696      	movlt	lr, r2
90018d40:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018d44:	4452      	add	r2, sl
90018d46:	b280      	uxth	r0, r0
90018d48:	4299      	cmp	r1, r3
90018d4a:	468c      	mov	ip, r1
90018d4c:	b292      	uxth	r2, r2
90018d4e:	9302      	str	r3, [sp, #8]
90018d50:	bfb8      	it	lt
90018d52:	469c      	movlt	ip, r3
90018d54:	b203      	sxth	r3, r0
90018d56:	fa0f fa82 	sxth.w	sl, r2
90018d5a:	f8ad e01c 	strh.w	lr, [sp, #28]
90018d5e:	f8ad c01e 	strh.w	ip, [sp, #30]
90018d62:	4553      	cmp	r3, sl
90018d64:	bfb8      	it	lt
90018d66:	4602      	movlt	r2, r0
90018d68:	9b02      	ldr	r3, [sp, #8]
90018d6a:	eba2 020e 	sub.w	r2, r2, lr
90018d6e:	f8ad 2020 	strh.w	r2, [sp, #32]
90018d72:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90018d76:	4411      	add	r1, r2
90018d78:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90018d7c:	4413      	add	r3, r2
90018d7e:	b289      	uxth	r1, r1
90018d80:	b29b      	uxth	r3, r3
90018d82:	b208      	sxth	r0, r1
90018d84:	b21a      	sxth	r2, r3
90018d86:	4290      	cmp	r0, r2
90018d88:	bfb8      	it	lt
90018d8a:	460b      	movlt	r3, r1
90018d8c:	eba3 030c 	sub.w	r3, r3, ip
90018d90:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90018d94:	a807      	add	r0, sp, #28
90018d96:	f7f9 ff96 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018d9a:	b920      	cbnz	r0, 90018da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90018d9c:	6823      	ldr	r3, [r4, #0]
90018d9e:	a907      	add	r1, sp, #28
90018da0:	4620      	mov	r0, r4
90018da2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018da4:	4798      	blx	r3
90018da6:	3701      	adds	r7, #1
90018da8:	b2bf      	uxth	r7, r7
90018daa:	e7a9      	b.n	90018d00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90018dac:	f8d9 0000 	ldr.w	r0, [r9]
90018db0:	2101      	movs	r1, #1
90018db2:	6803      	ldr	r3, [r0, #0]
90018db4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90018db8:	4798      	blx	r3
90018dba:	e773      	b.n	90018ca4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90018dbc:	e9cd 0007 	strd	r0, r0, [sp, #28]
90018dc0:	e7e8      	b.n	90018d94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90018dc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90018dc4:	4798      	blx	r3
90018dc6:	4b3f      	ldr	r3, [pc, #252]	; (90018ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90018dc8:	781b      	ldrb	r3, [r3, #0]
90018dca:	2b00      	cmp	r3, #0
90018dcc:	f43f af2b 	beq.w	90018c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018dd0:	2300      	movs	r3, #0
90018dd2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90018dd6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90018dda:	882b      	ldrh	r3, [r5, #0]
90018ddc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90018de0:	42ab      	cmp	r3, r5
90018de2:	f4bf af20 	bcs.w	90018c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90018de6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90018dea:	2907      	cmp	r1, #7
90018dec:	d814      	bhi.n	90018e18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90018dee:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90018df2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90018df6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90018dfa:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90018dfe:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90018e02:	1c4a      	adds	r2, r1, #1
90018e04:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90018e08:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90018e0c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90018e10:	f8a2 c002 	strh.w	ip, [r2, #2]
90018e14:	8097      	strh	r7, [r2, #4]
90018e16:	80d6      	strh	r6, [r2, #6]
90018e18:	3301      	adds	r3, #1
90018e1a:	b29b      	uxth	r3, r3
90018e1c:	e7e0      	b.n	90018de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90018e1e:	2b02      	cmp	r3, #2
90018e20:	f040 8133 	bne.w	9001908a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90018e24:	4b28      	ldr	r3, [pc, #160]	; (90018ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90018e26:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90018e2a:	781b      	ldrb	r3, [r3, #0]
90018e2c:	2b01      	cmp	r3, #1
90018e2e:	f000 8098 	beq.w	90018f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018e32:	882a      	ldrh	r2, [r5, #0]
90018e34:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90018e38:	3201      	adds	r2, #1
90018e3a:	b292      	uxth	r2, r2
90018e3c:	2900      	cmp	r1, #0
90018e3e:	d0c2      	beq.n	90018dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018e40:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90018e44:	4694      	mov	ip, r2
90018e46:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90018e4a:	f04f 0900 	mov.w	r9, #0
90018e4e:	441e      	add	r6, r3
90018e50:	b236      	sxth	r6, r6
90018e52:	fa1f f38c 	uxth.w	r3, ip
90018e56:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90018e5a:	4299      	cmp	r1, r3
90018e5c:	f240 80be 	bls.w	90018fdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90018e60:	4427      	add	r7, r4
90018e62:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90018e66:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90018e6a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90018e6e:	4283      	cmp	r3, r0
90018e70:	f340 80a0 	ble.w	90018fb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90018e74:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90018e78:	46e1      	mov	r9, ip
90018e7a:	4406      	add	r6, r0
90018e7c:	b236      	sxth	r6, r6
90018e7e:	429e      	cmp	r6, r3
90018e80:	bfa8      	it	ge
90018e82:	461e      	movge	r6, r3
90018e84:	f10c 0c01 	add.w	ip, ip, #1
90018e88:	e7e3      	b.n	90018e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90018e8a:	d10a      	bne.n	90018ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90018e8c:	4562      	cmp	r2, ip
90018e8e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90018e92:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90018e96:	bfb8      	it	lt
90018e98:	4662      	movlt	r2, ip
90018e9a:	4288      	cmp	r0, r1
90018e9c:	bfb8      	it	lt
90018e9e:	461f      	movlt	r7, r3
90018ea0:	e086      	b.n	90018fb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90018ea2:	428a      	cmp	r2, r1
90018ea4:	bfb8      	it	lt
90018ea6:	460a      	movlt	r2, r1
90018ea8:	e082      	b.n	90018fb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90018eaa:	bf00      	nop
90018eac:	24039b0c 	.word	0x24039b0c
90018eb0:	24039b18 	.word	0x24039b18
90018eb4:	24000084 	.word	0x24000084
90018eb8:	24039acc 	.word	0x24039acc
90018ebc:	24039ac2 	.word	0x24039ac2
90018ec0:	24039ac0 	.word	0x24039ac0
90018ec4:	24039aca 	.word	0x24039aca
90018ec8:	24039ac4 	.word	0x24039ac4
90018ecc:	19a1      	adds	r1, r4, r6
90018ece:	ab07      	add	r3, sp, #28
90018ed0:	f851 0fac 	ldr.w	r0, [r1, #172]!
90018ed4:	6849      	ldr	r1, [r1, #4]
90018ed6:	c303      	stmia	r3!, {r0, r1}
90018ed8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90018edc:	a807      	add	r0, sp, #28
90018ede:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90018ee2:	2b13      	cmp	r3, #19
90018ee4:	440b      	add	r3, r1
90018ee6:	bfd8      	it	le
90018ee8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90018eec:	1a9b      	subs	r3, r3, r2
90018eee:	f8ad 201c 	strh.w	r2, [sp, #28]
90018ef2:	f8ad 3020 	strh.w	r3, [sp, #32]
90018ef6:	f7fe ffc1 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90018efa:	a807      	add	r0, sp, #28
90018efc:	f7f9 fee3 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018f00:	bb78      	cbnz	r0, 90018f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018f02:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90018f06:	4426      	add	r6, r4
90018f08:	f8d9 0000 	ldr.w	r0, [r9]
90018f0c:	f1bc 0f14 	cmp.w	ip, #20
90018f10:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90018f14:	f8d0 e000 	ldr.w	lr, [r0]
90018f18:	bfa8      	it	ge
90018f1a:	f04f 0c14 	movge.w	ip, #20
90018f1e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90018f22:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90018f26:	fa1f fc8c 	uxth.w	ip, ip
90018f2a:	f8cd c000 	str.w	ip, [sp]
90018f2e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90018f32:	47d8      	blx	fp
90018f34:	4683      	mov	fp, r0
90018f36:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90018f3a:	a807      	add	r0, sp, #28
90018f3c:	f7fe ff84 	bl	90017e48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90018f40:	6823      	ldr	r3, [r4, #0]
90018f42:	4620      	mov	r0, r4
90018f44:	a907      	add	r1, sp, #28
90018f46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90018f48:	4798      	blx	r3
90018f4a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90018f4e:	eba0 000b 	sub.w	r0, r0, fp
90018f52:	b200      	sxth	r0, r0
90018f54:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90018f58:	b918      	cbnz	r0, 90018f62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90018f5a:	b2b9      	uxth	r1, r7
90018f5c:	4650      	mov	r0, sl
90018f5e:	f7ff fa7b 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90018f62:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90018f66:	f1bb 0f00 	cmp.w	fp, #0
90018f6a:	f43f af2c 	beq.w	90018dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90018f6e:	882b      	ldrh	r3, [r5, #0]
90018f70:	2700      	movs	r7, #0
90018f72:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90018f76:	3301      	adds	r3, #1
90018f78:	b29b      	uxth	r3, r3
90018f7a:	b299      	uxth	r1, r3
90018f7c:	00fe      	lsls	r6, r7, #3
90018f7e:	458b      	cmp	fp, r1
90018f80:	d9a4      	bls.n	90018ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90018f82:	4426      	add	r6, r4
90018f84:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90018f88:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90018f8c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90018f90:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90018f94:	4408      	add	r0, r1
90018f96:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90018f9a:	4461      	add	r1, ip
90018f9c:	b200      	sxth	r0, r0
90018f9e:	b209      	sxth	r1, r1
90018fa0:	4288      	cmp	r0, r1
90018fa2:	f6bf af72 	bge.w	90018e8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90018fa6:	4584      	cmp	ip, r0
90018fa8:	4662      	mov	r2, ip
90018faa:	461f      	mov	r7, r3
90018fac:	bfb8      	it	lt
90018fae:	4602      	movlt	r2, r0
90018fb0:	3301      	adds	r3, #1
90018fb2:	e7e2      	b.n	90018f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90018fb4:	d10e      	bne.n	90018fd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90018fb6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90018fba:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90018fbe:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90018fc2:	4473      	add	r3, lr
90018fc4:	b21b      	sxth	r3, r3
90018fc6:	429e      	cmp	r6, r3
90018fc8:	bfa8      	it	ge
90018fca:	461e      	movge	r6, r3
90018fcc:	4287      	cmp	r7, r0
90018fce:	bfb8      	it	lt
90018fd0:	46e1      	movlt	r9, ip
90018fd2:	e757      	b.n	90018e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018fd4:	4286      	cmp	r6, r0
90018fd6:	bfa8      	it	ge
90018fd8:	4606      	movge	r6, r0
90018fda:	e753      	b.n	90018e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90018fdc:	eb0a 0007 	add.w	r0, sl, r7
90018fe0:	4427      	add	r7, r4
90018fe2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90018fe6:	f1bb 0f13 	cmp.w	fp, #19
90018fea:	bfdc      	itt	le
90018fec:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90018ff0:	445e      	addle	r6, fp
90018ff2:	e9cd 2102 	strd	r2, r1, [sp, #8]
90018ff6:	bfd8      	it	le
90018ff8:	b236      	sxthle	r6, r6
90018ffa:	f7f9 fe64 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90018ffe:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90019002:	2800      	cmp	r0, #0
90019004:	f47f af1a 	bne.w	90018e3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90019008:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
9001900c:	fa1f fb8b 	uxth.w	fp, fp
90019010:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90019014:	1ab6      	subs	r6, r6, r2
90019016:	4829      	ldr	r0, [pc, #164]	; (900190bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90019018:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
9001901c:	2e14      	cmp	r6, #20
9001901e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90019022:	6800      	ldr	r0, [r0, #0]
90019024:	bfa8      	it	ge
90019026:	2614      	movge	r6, #20
90019028:	f8ad 101c 	strh.w	r1, [sp, #28]
9001902c:	f8ad 201e 	strh.w	r2, [sp, #30]
90019030:	b289      	uxth	r1, r1
90019032:	f8ad 3020 	strh.w	r3, [sp, #32]
90019036:	b2b6      	uxth	r6, r6
90019038:	f8d0 c000 	ldr.w	ip, [r0]
9001903c:	b292      	uxth	r2, r2
9001903e:	455e      	cmp	r6, fp
90019040:	bf94      	ite	ls
90019042:	9600      	strls	r6, [sp, #0]
90019044:	f8cd b000 	strhi.w	fp, [sp]
90019048:	b29b      	uxth	r3, r3
9001904a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
9001904e:	47b0      	blx	r6
90019050:	6823      	ldr	r3, [r4, #0]
90019052:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90019056:	a907      	add	r1, sp, #28
90019058:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001905a:	4620      	mov	r0, r4
9001905c:	4798      	blx	r3
9001905e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90019062:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90019066:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
9001906a:	1a5b      	subs	r3, r3, r1
9001906c:	440a      	add	r2, r1
9001906e:	b21b      	sxth	r3, r3
90019070:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90019074:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90019078:	2b00      	cmp	r3, #0
9001907a:	f47f aeda 	bne.w	90018e32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001907e:	fa1f f189 	uxth.w	r1, r9
90019082:	4650      	mov	r0, sl
90019084:	f7ff f9e8 	bl	90018458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019088:	e6d3      	b.n	90018e32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001908a:	882e      	ldrh	r6, [r5, #0]
9001908c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90019090:	42b3      	cmp	r3, r6
90019092:	f67f ae98 	bls.w	90018dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90019096:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001909a:	ab07      	add	r3, sp, #28
9001909c:	f852 0fac 	ldr.w	r0, [r2, #172]!
900190a0:	6851      	ldr	r1, [r2, #4]
900190a2:	c303      	stmia	r3!, {r0, r1}
900190a4:	a807      	add	r0, sp, #28
900190a6:	f7f9 fe0e 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
900190aa:	b920      	cbnz	r0, 900190b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
900190ac:	6823      	ldr	r3, [r4, #0]
900190ae:	a907      	add	r1, sp, #28
900190b0:	4620      	mov	r0, r4
900190b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900190b4:	4798      	blx	r3
900190b6:	3601      	adds	r6, #1
900190b8:	b2b6      	uxth	r6, r6
900190ba:	e7e7      	b.n	9001908c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
900190bc:	24039acc 	.word	0x24039acc

900190c0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
900190c0:	4b03      	ldr	r3, [pc, #12]	; (900190d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
900190c2:	2200      	movs	r2, #0
900190c4:	801a      	strh	r2, [r3, #0]
900190c6:	805a      	strh	r2, [r3, #2]
900190c8:	809a      	strh	r2, [r3, #4]
900190ca:	80da      	strh	r2, [r3, #6]
900190cc:	4770      	bx	lr
900190ce:	bf00      	nop
900190d0:	24039b18 	.word	0x24039b18

900190d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
900190d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900190d8:	b09d      	sub	sp, #116	; 0x74
900190da:	4606      	mov	r6, r0
900190dc:	4614      	mov	r4, r2
900190de:	468a      	mov	sl, r1
900190e0:	a803      	add	r0, sp, #12
900190e2:	461d      	mov	r5, r3
900190e4:	f000 fe9d 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
900190e8:	6833      	ldr	r3, [r6, #0]
900190ea:	4630      	mov	r0, r6
900190ec:	f242 0b0b 	movw	fp, #8203	; 0x200b
900190f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900190f2:	4798      	blx	r3
900190f4:	6833      	ldr	r3, [r6, #0]
900190f6:	4607      	mov	r7, r0
900190f8:	4630      	mov	r0, r6
900190fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900190fc:	4798      	blx	r3
900190fe:	462a      	mov	r2, r5
90019100:	2500      	movs	r5, #0
90019102:	4621      	mov	r1, r4
90019104:	9000      	str	r0, [sp, #0]
90019106:	463b      	mov	r3, r7
90019108:	462c      	mov	r4, r5
9001910a:	46a9      	mov	r9, r5
9001910c:	46a8      	mov	r8, r5
9001910e:	a803      	add	r0, sp, #12
90019110:	f000 fee2 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019114:	2300      	movs	r3, #0
90019116:	9302      	str	r3, [sp, #8]
90019118:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001911c:	429c      	cmp	r4, r3
9001911e:	d002      	beq.n	90019126 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90019120:	455c      	cmp	r4, fp
90019122:	bf18      	it	ne
90019124:	4625      	movne	r5, r4
90019126:	ab02      	add	r3, sp, #8
90019128:	4632      	mov	r2, r6
9001912a:	4651      	mov	r1, sl
9001912c:	a803      	add	r0, sp, #12
9001912e:	f001 f9d9 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90019132:	4604      	mov	r4, r0
90019134:	b108      	cbz	r0, 9001913a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90019136:	280a      	cmp	r0, #10
90019138:	d10a      	bne.n	90019150 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001913a:	45c1      	cmp	r9, r8
9001913c:	bf38      	it	cc
9001913e:	46c1      	movcc	r9, r8
90019140:	f04f 0800 	mov.w	r8, #0
90019144:	2c00      	cmp	r4, #0
90019146:	d1e5      	bne.n	90019114 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019148:	4648      	mov	r0, r9
9001914a:	b01d      	add	sp, #116	; 0x74
9001914c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019150:	9a02      	ldr	r2, [sp, #8]
90019152:	2a00      	cmp	r2, #0
90019154:	d0de      	beq.n	90019114 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90019156:	7b57      	ldrb	r7, [r2, #13]
90019158:	4629      	mov	r1, r5
9001915a:	6833      	ldr	r3, [r6, #0]
9001915c:	007f      	lsls	r7, r7, #1
9001915e:	8894      	ldrh	r4, [r2, #4]
90019160:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019162:	f407 7080 	and.w	r0, r7, #256	; 0x100
90019166:	7a97      	ldrb	r7, [r2, #10]
90019168:	4307      	orrs	r7, r0
9001916a:	4630      	mov	r0, r6
9001916c:	4798      	blx	r3
9001916e:	4438      	add	r0, r7
90019170:	4480      	add	r8, r0
90019172:	fa1f f888 	uxth.w	r8, r8
90019176:	e7e5      	b.n	90019144 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90019178 <_ZNK8touchgfx4Font12getCharWidthEt>:
90019178:	b508      	push	{r3, lr}
9001917a:	6803      	ldr	r3, [r0, #0]
9001917c:	68db      	ldr	r3, [r3, #12]
9001917e:	4798      	blx	r3
90019180:	b128      	cbz	r0, 9001918e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90019182:	7b43      	ldrb	r3, [r0, #13]
90019184:	7a80      	ldrb	r0, [r0, #10]
90019186:	005b      	lsls	r3, r3, #1
90019188:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001918c:	4318      	orrs	r0, r3
9001918e:	bd08      	pop	{r3, pc}

90019190 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90019190:	b40e      	push	{r1, r2, r3}
90019192:	b5f0      	push	{r4, r5, r6, r7, lr}
90019194:	b09e      	sub	sp, #120	; 0x78
90019196:	4605      	mov	r5, r0
90019198:	ab23      	add	r3, sp, #140	; 0x8c
9001919a:	a805      	add	r0, sp, #20
9001919c:	f853 4b04 	ldr.w	r4, [r3], #4
900191a0:	9303      	str	r3, [sp, #12]
900191a2:	f000 fe3e 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
900191a6:	682b      	ldr	r3, [r5, #0]
900191a8:	4628      	mov	r0, r5
900191aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900191ac:	4798      	blx	r3
900191ae:	682b      	ldr	r3, [r5, #0]
900191b0:	4606      	mov	r6, r0
900191b2:	4628      	mov	r0, r5
900191b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900191b6:	4798      	blx	r3
900191b8:	4633      	mov	r3, r6
900191ba:	4621      	mov	r1, r4
900191bc:	ae1e      	add	r6, sp, #120	; 0x78
900191be:	2400      	movs	r4, #0
900191c0:	9000      	str	r0, [sp, #0]
900191c2:	9a03      	ldr	r2, [sp, #12]
900191c4:	a805      	add	r0, sp, #20
900191c6:	f000 fe87 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900191ca:	f846 4d68 	str.w	r4, [r6, #-104]!
900191ce:	462a      	mov	r2, r5
900191d0:	4633      	mov	r3, r6
900191d2:	4621      	mov	r1, r4
900191d4:	a805      	add	r0, sp, #20
900191d6:	f001 f985 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900191da:	b300      	cbz	r0, 9001921e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
900191dc:	280a      	cmp	r0, #10
900191de:	d01a      	beq.n	90019216 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900191e0:	9f04      	ldr	r7, [sp, #16]
900191e2:	b1c7      	cbz	r7, 90019216 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900191e4:	7b78      	ldrb	r0, [r7, #13]
900191e6:	7a3b      	ldrb	r3, [r7, #8]
900191e8:	00c1      	lsls	r1, r0, #3
900191ea:	88ea      	ldrh	r2, [r5, #6]
900191ec:	f401 7180 	and.w	r1, r1, #256	; 0x100
900191f0:	4319      	orrs	r1, r3
900191f2:	0643      	lsls	r3, r0, #25
900191f4:	ea4f 1000 	mov.w	r0, r0, lsl #4
900191f8:	bf48      	it	mi
900191fa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
900191fe:	f400 7080 	and.w	r0, r0, #256	; 0x100
90019202:	bf48      	it	mi
90019204:	b219      	sxthmi	r1, r3
90019206:	79fb      	ldrb	r3, [r7, #7]
90019208:	4303      	orrs	r3, r0
9001920a:	4413      	add	r3, r2
9001920c:	1a5b      	subs	r3, r3, r1
9001920e:	b21b      	sxth	r3, r3
90019210:	429c      	cmp	r4, r3
90019212:	bfb8      	it	lt
90019214:	461c      	movlt	r4, r3
90019216:	4633      	mov	r3, r6
90019218:	462a      	mov	r2, r5
9001921a:	2100      	movs	r1, #0
9001921c:	e7da      	b.n	900191d4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001921e:	b2a0      	uxth	r0, r4
90019220:	b01e      	add	sp, #120	; 0x78
90019222:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019226:	b003      	add	sp, #12
90019228:	4770      	bx	lr

9001922a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001922a:	7a43      	ldrb	r3, [r0, #9]
9001922c:	8880      	ldrh	r0, [r0, #4]
9001922e:	4418      	add	r0, r3
90019230:	b280      	uxth	r0, r0
90019232:	4770      	bx	lr

90019234 <_ZNK8touchgfx4Font13getFontHeightEv>:
90019234:	6803      	ldr	r3, [r0, #0]
90019236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90019238:	4718      	bx	r3

9001923a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001923a:	b40e      	push	{r1, r2, r3}
9001923c:	b570      	push	{r4, r5, r6, lr}
9001923e:	b09d      	sub	sp, #116	; 0x74
90019240:	4604      	mov	r4, r0
90019242:	ab21      	add	r3, sp, #132	; 0x84
90019244:	a803      	add	r0, sp, #12
90019246:	f853 5b04 	ldr.w	r5, [r3], #4
9001924a:	9302      	str	r3, [sp, #8]
9001924c:	f000 fde9 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
90019250:	6823      	ldr	r3, [r4, #0]
90019252:	4620      	mov	r0, r4
90019254:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90019256:	4798      	blx	r3
90019258:	6823      	ldr	r3, [r4, #0]
9001925a:	4606      	mov	r6, r0
9001925c:	4620      	mov	r0, r4
9001925e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90019260:	2401      	movs	r4, #1
90019262:	4798      	blx	r3
90019264:	4633      	mov	r3, r6
90019266:	9000      	str	r0, [sp, #0]
90019268:	4629      	mov	r1, r5
9001926a:	9a02      	ldr	r2, [sp, #8]
9001926c:	a803      	add	r0, sp, #12
9001926e:	f000 fe33 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019272:	a803      	add	r0, sp, #12
90019274:	f001 fa02 	bl	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
90019278:	b2a3      	uxth	r3, r4
9001927a:	b138      	cbz	r0, 9001928c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001927c:	280a      	cmp	r0, #10
9001927e:	a803      	add	r0, sp, #12
90019280:	bf04      	itt	eq
90019282:	3301      	addeq	r3, #1
90019284:	b21c      	sxtheq	r4, r3
90019286:	f001 f9f9 	bl	9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>
9001928a:	e7f5      	b.n	90019278 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001928c:	4618      	mov	r0, r3
9001928e:	b01d      	add	sp, #116	; 0x74
90019290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019294:	b003      	add	sp, #12
90019296:	4770      	bx	lr

90019298 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90019298:	b40e      	push	{r1, r2, r3}
9001929a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001929c:	b09e      	sub	sp, #120	; 0x78
9001929e:	4604      	mov	r4, r0
900192a0:	ab23      	add	r3, sp, #140	; 0x8c
900192a2:	a805      	add	r0, sp, #20
900192a4:	f853 5b04 	ldr.w	r5, [r3], #4
900192a8:	9303      	str	r3, [sp, #12]
900192aa:	f000 fdba 	bl	90019e22 <_ZN8touchgfx12TextProviderC1Ev>
900192ae:	6823      	ldr	r3, [r4, #0]
900192b0:	4620      	mov	r0, r4
900192b2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900192b4:	4798      	blx	r3
900192b6:	6823      	ldr	r3, [r4, #0]
900192b8:	4606      	mov	r6, r0
900192ba:	4620      	mov	r0, r4
900192bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900192be:	4798      	blx	r3
900192c0:	4633      	mov	r3, r6
900192c2:	4629      	mov	r1, r5
900192c4:	9000      	str	r0, [sp, #0]
900192c6:	9a03      	ldr	r2, [sp, #12]
900192c8:	a805      	add	r0, sp, #20
900192ca:	f000 fe05 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900192ce:	ad1e      	add	r5, sp, #120	; 0x78
900192d0:	2100      	movs	r1, #0
900192d2:	f647 76ff 	movw	r6, #32767	; 0x7fff
900192d6:	4622      	mov	r2, r4
900192d8:	a805      	add	r0, sp, #20
900192da:	f845 1d68 	str.w	r1, [r5, #-104]!
900192de:	462b      	mov	r3, r5
900192e0:	f001 f900 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900192e4:	b1d8      	cbz	r0, 9001931e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900192e6:	280a      	cmp	r0, #10
900192e8:	d012      	beq.n	90019310 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900192ea:	9804      	ldr	r0, [sp, #16]
900192ec:	b180      	cbz	r0, 90019310 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900192ee:	7b47      	ldrb	r7, [r0, #13]
900192f0:	88e2      	ldrh	r2, [r4, #6]
900192f2:	00fb      	lsls	r3, r7, #3
900192f4:	f403 7180 	and.w	r1, r3, #256	; 0x100
900192f8:	7a03      	ldrb	r3, [r0, #8]
900192fa:	430b      	orrs	r3, r1
900192fc:	0679      	lsls	r1, r7, #25
900192fe:	bf44      	itt	mi
90019300:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90019304:	b21b      	sxthmi	r3, r3
90019306:	1ad3      	subs	r3, r2, r3
90019308:	b21b      	sxth	r3, r3
9001930a:	429e      	cmp	r6, r3
9001930c:	bfa8      	it	ge
9001930e:	461e      	movge	r6, r3
90019310:	462b      	mov	r3, r5
90019312:	4622      	mov	r2, r4
90019314:	2100      	movs	r1, #0
90019316:	a805      	add	r0, sp, #20
90019318:	f001 f8e4 	bl	9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001931c:	e7e2      	b.n	900192e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001931e:	4630      	mov	r0, r6
90019320:	b01e      	add	sp, #120	; 0x78
90019322:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90019326:	b003      	add	sp, #12
90019328:	4770      	bx	lr

9001932a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001932a:	b513      	push	{r0, r1, r4, lr}
9001932c:	6803      	ldr	r3, [r0, #0]
9001932e:	2400      	movs	r4, #0
90019330:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90019334:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019338:	f8ad 1004 	strh.w	r1, [sp, #4]
9001933c:	4669      	mov	r1, sp
9001933e:	691b      	ldr	r3, [r3, #16]
90019340:	9400      	str	r4, [sp, #0]
90019342:	f8ad 2006 	strh.w	r2, [sp, #6]
90019346:	4798      	blx	r3
90019348:	b002      	add	sp, #8
9001934a:	bd10      	pop	{r4, pc}

9001934c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001934c:	b538      	push	{r3, r4, r5, lr}
9001934e:	680b      	ldr	r3, [r1, #0]
90019350:	460c      	mov	r4, r1
90019352:	4605      	mov	r5, r0
90019354:	68db      	ldr	r3, [r3, #12]
90019356:	4798      	blx	r3
90019358:	6823      	ldr	r3, [r4, #0]
9001935a:	4620      	mov	r0, r4
9001935c:	4629      	mov	r1, r5
9001935e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019360:	4798      	blx	r3
90019362:	4628      	mov	r0, r5
90019364:	bd38      	pop	{r3, r4, r5, pc}

90019366 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90019366:	b410      	push	{r4}
90019368:	880a      	ldrh	r2, [r1, #0]
9001936a:	8884      	ldrh	r4, [r0, #4]
9001936c:	4422      	add	r2, r4
9001936e:	800a      	strh	r2, [r1, #0]
90019370:	884a      	ldrh	r2, [r1, #2]
90019372:	88c4      	ldrh	r4, [r0, #6]
90019374:	4422      	add	r2, r4
90019376:	804a      	strh	r2, [r1, #2]
90019378:	6940      	ldr	r0, [r0, #20]
9001937a:	b120      	cbz	r0, 90019386 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001937c:	6803      	ldr	r3, [r0, #0]
9001937e:	f85d 4b04 	ldr.w	r4, [sp], #4
90019382:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019384:	4718      	bx	r3
90019386:	f85d 4b04 	ldr.w	r4, [sp], #4
9001938a:	4770      	bx	lr

9001938c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001938c:	b570      	push	{r4, r5, r6, lr}
9001938e:	8882      	ldrh	r2, [r0, #4]
90019390:	460c      	mov	r4, r1
90019392:	880b      	ldrh	r3, [r1, #0]
90019394:	4605      	mov	r5, r0
90019396:	4413      	add	r3, r2
90019398:	800b      	strh	r3, [r1, #0]
9001939a:	884b      	ldrh	r3, [r1, #2]
9001939c:	88c2      	ldrh	r2, [r0, #6]
9001939e:	4413      	add	r3, r2
900193a0:	804b      	strh	r3, [r1, #2]
900193a2:	1d01      	adds	r1, r0, #4
900193a4:	4620      	mov	r0, r4
900193a6:	f7f9 fc4b 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
900193aa:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900193ae:	2b00      	cmp	r3, #0
900193b0:	dd0b      	ble.n	900193ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900193b2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900193b6:	2b00      	cmp	r3, #0
900193b8:	dd07      	ble.n	900193ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900193ba:	6968      	ldr	r0, [r5, #20]
900193bc:	b128      	cbz	r0, 900193ca <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
900193be:	6803      	ldr	r3, [r0, #0]
900193c0:	4621      	mov	r1, r4
900193c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900193c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900193c8:	4718      	bx	r3
900193ca:	bd70      	pop	{r4, r5, r6, pc}

900193cc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900193cc:	b570      	push	{r4, r5, r6, lr}
900193ce:	8882      	ldrh	r2, [r0, #4]
900193d0:	460c      	mov	r4, r1
900193d2:	880b      	ldrh	r3, [r1, #0]
900193d4:	4605      	mov	r5, r0
900193d6:	4413      	add	r3, r2
900193d8:	800b      	strh	r3, [r1, #0]
900193da:	884b      	ldrh	r3, [r1, #2]
900193dc:	88c2      	ldrh	r2, [r0, #6]
900193de:	4413      	add	r3, r2
900193e0:	804b      	strh	r3, [r1, #2]
900193e2:	1d01      	adds	r1, r0, #4
900193e4:	4620      	mov	r0, r4
900193e6:	f7f9 fc2b 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
900193ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900193ee:	2b00      	cmp	r3, #0
900193f0:	dd19      	ble.n	90019426 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900193f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900193f6:	2b00      	cmp	r3, #0
900193f8:	dd15      	ble.n	90019426 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900193fa:	6968      	ldr	r0, [r5, #20]
900193fc:	b128      	cbz	r0, 9001940a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900193fe:	6803      	ldr	r3, [r0, #0]
90019400:	4621      	mov	r1, r4
90019402:	691b      	ldr	r3, [r3, #16]
90019404:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019408:	4718      	bx	r3
9001940a:	4b07      	ldr	r3, [pc, #28]	; (90019428 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001940c:	681b      	ldr	r3, [r3, #0]
9001940e:	3304      	adds	r3, #4
90019410:	429d      	cmp	r5, r3
90019412:	d108      	bne.n	90019426 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90019414:	f7fe fee8 	bl	900181e8 <_ZN8touchgfx11Application11getInstanceEv>
90019418:	6803      	ldr	r3, [r0, #0]
9001941a:	6821      	ldr	r1, [r4, #0]
9001941c:	6862      	ldr	r2, [r4, #4]
9001941e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90019420:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019424:	4718      	bx	r3
90019426:	bd70      	pop	{r4, r5, r6, pc}
90019428:	24039b10 	.word	0x24039b10

9001942c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001942c:	b570      	push	{r4, r5, r6, lr}
9001942e:	4604      	mov	r4, r0
90019430:	4616      	mov	r6, r2
90019432:	460d      	mov	r5, r1
90019434:	b901      	cbnz	r1, 90019438 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90019436:	b192      	cbz	r2, 9001945e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90019438:	6823      	ldr	r3, [r4, #0]
9001943a:	4620      	mov	r0, r4
9001943c:	699b      	ldr	r3, [r3, #24]
9001943e:	4798      	blx	r3
90019440:	88e2      	ldrh	r2, [r4, #6]
90019442:	88a1      	ldrh	r1, [r4, #4]
90019444:	4620      	mov	r0, r4
90019446:	4432      	add	r2, r6
90019448:	4429      	add	r1, r5
9001944a:	b212      	sxth	r2, r2
9001944c:	b209      	sxth	r1, r1
9001944e:	f7f9 fecd 	bl	900131ec <_ZN8touchgfx8Drawable5setXYEss>
90019452:	6823      	ldr	r3, [r4, #0]
90019454:	4620      	mov	r0, r4
90019456:	699b      	ldr	r3, [r3, #24]
90019458:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001945c:	4718      	bx	r3
9001945e:	bd70      	pop	{r4, r5, r6, pc}

90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90019460:	b510      	push	{r4, lr}
90019462:	2300      	movs	r3, #0
90019464:	4604      	mov	r4, r0
90019466:	4608      	mov	r0, r1
90019468:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001946c:	8023      	strh	r3, [r4, #0]
9001946e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90019472:	8063      	strh	r3, [r4, #2]
90019474:	6803      	ldr	r3, [r0, #0]
90019476:	80a1      	strh	r1, [r4, #4]
90019478:	4621      	mov	r1, r4
9001947a:	80e2      	strh	r2, [r4, #6]
9001947c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001947e:	4798      	blx	r3
90019480:	4620      	mov	r0, r4
90019482:	bd10      	pop	{r4, pc}

90019484 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90019484:	b530      	push	{r4, r5, lr}
90019486:	8083      	strh	r3, [r0, #4]
90019488:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001948c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90019490:	80c3      	strh	r3, [r0, #6]
90019492:	f89d 3010 	ldrb.w	r3, [sp, #16]
90019496:	6141      	str	r1, [r0, #20]
90019498:	7203      	strb	r3, [r0, #8]
9001949a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001949e:	8302      	strh	r2, [r0, #24]
900194a0:	7243      	strb	r3, [r0, #9]
900194a2:	7a83      	ldrb	r3, [r0, #10]
900194a4:	f365 0306 	bfi	r3, r5, #0, #7
900194a8:	f89d 501c 	ldrb.w	r5, [sp, #28]
900194ac:	f365 13c7 	bfi	r3, r5, #7, #1
900194b0:	7283      	strb	r3, [r0, #10]
900194b2:	f89d 3020 	ldrb.w	r3, [sp, #32]
900194b6:	72c3      	strb	r3, [r0, #11]
900194b8:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
900194bc:	7303      	strb	r3, [r0, #12]
900194be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900194c2:	81c3      	strh	r3, [r0, #14]
900194c4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900194c8:	8203      	strh	r3, [r0, #16]
900194ca:	4b01      	ldr	r3, [pc, #4]	; (900194d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
900194cc:	6003      	str	r3, [r0, #0]
900194ce:	bd30      	pop	{r4, r5, pc}
900194d0:	9002dc2c 	.word	0x9002dc2c

900194d4 <_ZNK8touchgfx9ConstFont4findEt>:
900194d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900194d6:	6944      	ldr	r4, [r0, #20]
900194d8:	b3bc      	cbz	r4, 9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900194da:	88a3      	ldrh	r3, [r4, #4]
900194dc:	8b02      	ldrh	r2, [r0, #24]
900194de:	1acb      	subs	r3, r1, r3
900194e0:	f102 32ff 	add.w	r2, r2, #4294967295
900194e4:	d431      	bmi.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900194e6:	4293      	cmp	r3, r2
900194e8:	dd0c      	ble.n	90019504 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900194ea:	230e      	movs	r3, #14
900194ec:	fb03 4302 	mla	r3, r3, r2, r4
900194f0:	889b      	ldrh	r3, [r3, #4]
900194f2:	1a5b      	subs	r3, r3, r1
900194f4:	1ad3      	subs	r3, r2, r3
900194f6:	429a      	cmp	r2, r3
900194f8:	db27      	blt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900194fa:	2b00      	cmp	r3, #0
900194fc:	bfbc      	itt	lt
900194fe:	2302      	movlt	r3, #2
90019500:	fb92 f3f3 	sdivlt	r3, r2, r3
90019504:	2500      	movs	r5, #0
90019506:	260e      	movs	r6, #14
90019508:	4295      	cmp	r5, r2
9001950a:	dc1e      	bgt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001950c:	fb06 4003 	mla	r0, r6, r3, r4
90019510:	8887      	ldrh	r7, [r0, #4]
90019512:	42b9      	cmp	r1, r7
90019514:	d01a      	beq.n	9001954c <_ZNK8touchgfx9ConstFont4findEt+0x78>
90019516:	d20d      	bcs.n	90019534 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90019518:	1e5a      	subs	r2, r3, #1
9001951a:	4295      	cmp	r5, r2
9001951c:	dc15      	bgt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001951e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90019522:	1a5b      	subs	r3, r3, r1
90019524:	1ad3      	subs	r3, r2, r3
90019526:	429a      	cmp	r2, r3
90019528:	db0f      	blt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001952a:	429d      	cmp	r5, r3
9001952c:	ddec      	ble.n	90019508 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001952e:	1953      	adds	r3, r2, r5
90019530:	105b      	asrs	r3, r3, #1
90019532:	e7e9      	b.n	90019508 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019534:	1c5d      	adds	r5, r3, #1
90019536:	42aa      	cmp	r2, r5
90019538:	db07      	blt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001953a:	8a43      	ldrh	r3, [r0, #18]
9001953c:	1acb      	subs	r3, r1, r3
9001953e:	442b      	add	r3, r5
90019540:	429d      	cmp	r5, r3
90019542:	dc02      	bgt.n	9001954a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90019544:	429a      	cmp	r2, r3
90019546:	dadf      	bge.n	90019508 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90019548:	e7f1      	b.n	9001952e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001954a:	2000      	movs	r0, #0
9001954c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001954e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001954e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019550:	4604      	mov	r4, r0
90019552:	4617      	mov	r7, r2
90019554:	461e      	mov	r6, r3
90019556:	b911      	cbnz	r1, 9001955e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90019558:	2500      	movs	r5, #0
9001955a:	4628      	mov	r0, r5
9001955c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001955e:	290a      	cmp	r1, #10
90019560:	d0fa      	beq.n	90019558 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019562:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90019566:	4291      	cmp	r1, r2
90019568:	d0f6      	beq.n	90019558 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001956a:	f242 020b 	movw	r2, #8203	; 0x200b
9001956e:	4291      	cmp	r1, r2
90019570:	d0f2      	beq.n	90019558 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019572:	f7ff ffaf 	bl	900194d4 <_ZNK8touchgfx9ConstFont4findEt>
90019576:	4605      	mov	r5, r0
90019578:	b950      	cbnz	r0, 90019590 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001957a:	6823      	ldr	r3, [r4, #0]
9001957c:	4620      	mov	r0, r4
9001957e:	691b      	ldr	r3, [r3, #16]
90019580:	4798      	blx	r3
90019582:	4601      	mov	r1, r0
90019584:	4620      	mov	r0, r4
90019586:	f7ff ffa5 	bl	900194d4 <_ZNK8touchgfx9ConstFont4findEt>
9001958a:	4605      	mov	r5, r0
9001958c:	2800      	cmp	r0, #0
9001958e:	d0e3      	beq.n	90019558 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90019590:	6823      	ldr	r3, [r4, #0]
90019592:	4629      	mov	r1, r5
90019594:	4620      	mov	r0, r4
90019596:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90019598:	4798      	blx	r3
9001959a:	6038      	str	r0, [r7, #0]
9001959c:	6823      	ldr	r3, [r4, #0]
9001959e:	4620      	mov	r0, r4
900195a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900195a2:	4798      	blx	r3
900195a4:	7030      	strb	r0, [r6, #0]
900195a6:	e7d8      	b.n	9001955a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

900195a8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
900195a8:	b538      	push	{r3, r4, r5, lr}
900195aa:	4605      	mov	r5, r0
900195ac:	f002 f936 	bl	9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>
900195b0:	4604      	mov	r4, r0
900195b2:	4628      	mov	r0, r5
900195b4:	f002 f876 	bl	9001b6a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900195b8:	2800      	cmp	r0, #0
900195ba:	bf14      	ite	ne
900195bc:	2002      	movne	r0, #2
900195be:	2000      	moveq	r0, #0
900195c0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900195c4:	b280      	uxth	r0, r0
900195c6:	bd38      	pop	{r3, r4, r5, pc}

900195c8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
900195c8:	b538      	push	{r3, r4, r5, lr}
900195ca:	4605      	mov	r5, r0
900195cc:	f002 f926 	bl	9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>
900195d0:	4604      	mov	r4, r0
900195d2:	4628      	mov	r0, r5
900195d4:	f002 f866 	bl	9001b6a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900195d8:	2800      	cmp	r0, #0
900195da:	bf14      	ite	ne
900195dc:	2002      	movne	r0, #2
900195de:	2000      	moveq	r0, #0
900195e0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900195e4:	f040 0001 	orr.w	r0, r0, #1
900195e8:	b280      	uxth	r0, r0
900195ea:	bd38      	pop	{r3, r4, r5, pc}

900195ec <_ZN8touchgfx4clzuEm>:
900195ec:	4603      	mov	r3, r0
900195ee:	b1c8      	cbz	r0, 90019624 <_ZN8touchgfx4clzuEm+0x38>
900195f0:	0c02      	lsrs	r2, r0, #16
900195f2:	0412      	lsls	r2, r2, #16
900195f4:	b9a2      	cbnz	r2, 90019620 <_ZN8touchgfx4clzuEm+0x34>
900195f6:	0403      	lsls	r3, r0, #16
900195f8:	2010      	movs	r0, #16
900195fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900195fe:	bf04      	itt	eq
90019600:	021b      	lsleq	r3, r3, #8
90019602:	3008      	addeq	r0, #8
90019604:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90019608:	bf04      	itt	eq
9001960a:	011b      	lsleq	r3, r3, #4
9001960c:	3004      	addeq	r0, #4
9001960e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90019612:	bf04      	itt	eq
90019614:	009b      	lsleq	r3, r3, #2
90019616:	3002      	addeq	r0, #2
90019618:	2b00      	cmp	r3, #0
9001961a:	db04      	blt.n	90019626 <_ZN8touchgfx4clzuEm+0x3a>
9001961c:	3001      	adds	r0, #1
9001961e:	4770      	bx	lr
90019620:	2000      	movs	r0, #0
90019622:	e7ea      	b.n	900195fa <_ZN8touchgfx4clzuEm+0xe>
90019624:	2020      	movs	r0, #32
90019626:	4770      	bx	lr

90019628 <_ZN8touchgfx7muldivuEmmmRm>:
90019628:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001962c:	460f      	mov	r7, r1
9001962e:	4615      	mov	r5, r2
90019630:	461e      	mov	r6, r3
90019632:	4601      	mov	r1, r0
90019634:	b100      	cbz	r0, 90019638 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90019636:	b927      	cbnz	r7, 90019642 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90019638:	2000      	movs	r0, #0
9001963a:	6030      	str	r0, [r6, #0]
9001963c:	b002      	add	sp, #8
9001963e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019642:	f7ff ffd3 	bl	900195ec <_ZN8touchgfx4clzuEm>
90019646:	b980      	cbnz	r0, 9001966a <_ZN8touchgfx7muldivuEmmmRm+0x42>
90019648:	4638      	mov	r0, r7
9001964a:	f7ff ffcf 	bl	900195ec <_ZN8touchgfx4clzuEm>
9001964e:	2800      	cmp	r0, #0
90019650:	dd05      	ble.n	9001965e <_ZN8touchgfx7muldivuEmmmRm+0x36>
90019652:	4633      	mov	r3, r6
90019654:	462a      	mov	r2, r5
90019656:	4638      	mov	r0, r7
90019658:	f7ff ffe6 	bl	90019628 <_ZN8touchgfx7muldivuEmmmRm>
9001965c:	e7ee      	b.n	9001963c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001965e:	f04f 33ff 	mov.w	r3, #4294967295
90019662:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90019666:	6033      	str	r3, [r6, #0]
90019668:	e7e8      	b.n	9001963c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001966a:	fa37 f800 	lsrs.w	r8, r7, r0
9001966e:	fb07 f301 	mul.w	r3, r7, r1
90019672:	d105      	bne.n	90019680 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90019674:	fbb3 f0f5 	udiv	r0, r3, r5
90019678:	fb05 3510 	mls	r5, r5, r0, r3
9001967c:	6035      	str	r5, [r6, #0]
9001967e:	e7dd      	b.n	9001963c <_ZN8touchgfx7muldivuEmmmRm+0x14>
90019680:	2301      	movs	r3, #1
90019682:	fa01 fa00 	lsl.w	sl, r1, r0
90019686:	462a      	mov	r2, r5
90019688:	fa03 f000 	lsl.w	r0, r3, r0
9001968c:	4633      	mov	r3, r6
9001968e:	fbba f9f5 	udiv	r9, sl, r5
90019692:	3801      	subs	r0, #1
90019694:	fb08 f409 	mul.w	r4, r8, r9
90019698:	4038      	ands	r0, r7
9001969a:	f7ff ffc5 	bl	90019628 <_ZN8touchgfx7muldivuEmmmRm>
9001969e:	462a      	mov	r2, r5
900196a0:	4607      	mov	r7, r0
900196a2:	ab01      	add	r3, sp, #4
900196a4:	fb05 a119 	mls	r1, r5, r9, sl
900196a8:	4640      	mov	r0, r8
900196aa:	f7ff ffbd 	bl	90019628 <_ZN8touchgfx7muldivuEmmmRm>
900196ae:	9b01      	ldr	r3, [sp, #4]
900196b0:	6832      	ldr	r2, [r6, #0]
900196b2:	441a      	add	r2, r3
900196b4:	fbb2 f3f5 	udiv	r3, r2, r5
900196b8:	441c      	add	r4, r3
900196ba:	fb05 2513 	mls	r5, r5, r3, r2
900196be:	443c      	add	r4, r7
900196c0:	4420      	add	r0, r4
900196c2:	e7db      	b.n	9001967c <_ZN8touchgfx7muldivuEmmmRm+0x54>

900196c4 <_ZN8touchgfx6muldivElllRl>:
900196c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900196c6:	2800      	cmp	r0, #0
900196c8:	461e      	mov	r6, r3
900196ca:	bfba      	itte	lt
900196cc:	4240      	neglt	r0, r0
900196ce:	f04f 34ff 	movlt.w	r4, #4294967295
900196d2:	2401      	movge	r4, #1
900196d4:	2900      	cmp	r1, #0
900196d6:	bfbc      	itt	lt
900196d8:	4249      	neglt	r1, r1
900196da:	4264      	neglt	r4, r4
900196dc:	2a00      	cmp	r2, #0
900196de:	bfb6      	itet	lt
900196e0:	4265      	neglt	r5, r4
900196e2:	4625      	movge	r5, r4
900196e4:	4252      	neglt	r2, r2
900196e6:	4288      	cmp	r0, r1
900196e8:	bfc2      	ittt	gt
900196ea:	4603      	movgt	r3, r0
900196ec:	4608      	movgt	r0, r1
900196ee:	4619      	movgt	r1, r3
900196f0:	ab01      	add	r3, sp, #4
900196f2:	f7ff ff99 	bl	90019628 <_ZN8touchgfx7muldivuEmmmRm>
900196f6:	9b01      	ldr	r3, [sp, #4]
900196f8:	4368      	muls	r0, r5
900196fa:	435c      	muls	r4, r3
900196fc:	6034      	str	r4, [r6, #0]
900196fe:	b002      	add	sp, #8
90019700:	bd70      	pop	{r4, r5, r6, pc}

90019702 <_ZN8touchgfx6muldivElll>:
90019702:	b573      	push	{r0, r1, r4, r5, r6, lr}
90019704:	4606      	mov	r6, r0
90019706:	ab01      	add	r3, sp, #4
90019708:	460d      	mov	r5, r1
9001970a:	4614      	mov	r4, r2
9001970c:	f7ff ffda 	bl	900196c4 <_ZN8touchgfx6muldivElllRl>
90019710:	2e00      	cmp	r6, #0
90019712:	db20      	blt.n	90019756 <_ZN8touchgfx6muldivElll+0x54>
90019714:	bf14      	ite	ne
90019716:	2301      	movne	r3, #1
90019718:	2300      	moveq	r3, #0
9001971a:	2d00      	cmp	r5, #0
9001971c:	db1e      	blt.n	9001975c <_ZN8touchgfx6muldivElll+0x5a>
9001971e:	bf14      	ite	ne
90019720:	2201      	movne	r2, #1
90019722:	2200      	moveq	r2, #0
90019724:	2c00      	cmp	r4, #0
90019726:	fb03 f202 	mul.w	r2, r3, r2
9001972a:	db1a      	blt.n	90019762 <_ZN8touchgfx6muldivElll+0x60>
9001972c:	bf14      	ite	ne
9001972e:	2301      	movne	r3, #1
90019730:	2300      	moveq	r3, #0
90019732:	4353      	muls	r3, r2
90019734:	2b01      	cmp	r3, #1
90019736:	d117      	bne.n	90019768 <_ZN8touchgfx6muldivElll+0x66>
90019738:	2c00      	cmp	r4, #0
9001973a:	9b01      	ldr	r3, [sp, #4]
9001973c:	bfb8      	it	lt
9001973e:	4264      	neglt	r4, r4
90019740:	2b00      	cmp	r3, #0
90019742:	f104 0401 	add.w	r4, r4, #1
90019746:	bfb8      	it	lt
90019748:	425b      	neglt	r3, r3
9001974a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001974e:	db00      	blt.n	90019752 <_ZN8touchgfx6muldivElll+0x50>
90019750:	3001      	adds	r0, #1
90019752:	b002      	add	sp, #8
90019754:	bd70      	pop	{r4, r5, r6, pc}
90019756:	f04f 33ff 	mov.w	r3, #4294967295
9001975a:	e7de      	b.n	9001971a <_ZN8touchgfx6muldivElll+0x18>
9001975c:	f04f 32ff 	mov.w	r2, #4294967295
90019760:	e7e0      	b.n	90019724 <_ZN8touchgfx6muldivElll+0x22>
90019762:	f04f 33ff 	mov.w	r3, #4294967295
90019766:	e7e4      	b.n	90019732 <_ZN8touchgfx6muldivElll+0x30>
90019768:	3301      	adds	r3, #1
9001976a:	d1f2      	bne.n	90019752 <_ZN8touchgfx6muldivElll+0x50>
9001976c:	9b01      	ldr	r3, [sp, #4]
9001976e:	2c00      	cmp	r4, #0
90019770:	bfb8      	it	lt
90019772:	4264      	neglt	r4, r4
90019774:	2b00      	cmp	r3, #0
90019776:	bfb8      	it	lt
90019778:	425b      	neglt	r3, r3
9001977a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
9001977e:	bfc8      	it	gt
90019780:	f100 30ff 	addgt.w	r0, r0, #4294967295
90019784:	e7e5      	b.n	90019752 <_ZN8touchgfx6muldivElll+0x50>

90019786 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90019786:	2000      	movs	r0, #0
90019788:	4770      	bx	lr

9001978a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001978a:	2001      	movs	r0, #1
9001978c:	4770      	bx	lr

9001978e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001978e:	2002      	movs	r0, #2
90019790:	4770      	bx	lr

90019792 <_ZN8touchgfx6ScreenD1Ev>:
90019792:	4770      	bx	lr

90019794 <_ZN8touchgfx6Screen11setupScreenEv>:
90019794:	4770      	bx	lr

90019796 <_ZN8touchgfx12GestureEventD1Ev>:
90019796:	4770      	bx	lr

90019798 <_ZN8touchgfx9DragEventD1Ev>:
90019798:	4770      	bx	lr

9001979a <_ZN8touchgfx10ClickEventD1Ev>:
9001979a:	4770      	bx	lr

9001979c <_ZN8touchgfx10ClickEventD0Ev>:
9001979c:	b510      	push	{r4, lr}
9001979e:	4604      	mov	r4, r0
900197a0:	210c      	movs	r1, #12
900197a2:	f00f fe5f 	bl	90029464 <_ZdlPvj>
900197a6:	4620      	mov	r0, r4
900197a8:	bd10      	pop	{r4, pc}

900197aa <_ZN8touchgfx9DragEventD0Ev>:
900197aa:	b510      	push	{r4, lr}
900197ac:	4604      	mov	r4, r0
900197ae:	2110      	movs	r1, #16
900197b0:	f00f fe58 	bl	90029464 <_ZdlPvj>
900197b4:	4620      	mov	r0, r4
900197b6:	bd10      	pop	{r4, pc}

900197b8 <_ZN8touchgfx12GestureEventD0Ev>:
900197b8:	b510      	push	{r4, lr}
900197ba:	4604      	mov	r4, r0
900197bc:	210c      	movs	r1, #12
900197be:	f00f fe51 	bl	90029464 <_ZdlPvj>
900197c2:	4620      	mov	r0, r4
900197c4:	bd10      	pop	{r4, pc}

900197c6 <_ZN8touchgfx6ScreenD0Ev>:
900197c6:	b510      	push	{r4, lr}
900197c8:	4604      	mov	r4, r0
900197ca:	213c      	movs	r1, #60	; 0x3c
900197cc:	f00f fe4a 	bl	90029464 <_ZdlPvj>
900197d0:	4620      	mov	r0, r4
900197d2:	bd10      	pop	{r4, pc}

900197d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900197d4:	b530      	push	{r4, r5, lr}
900197d6:	460d      	mov	r5, r1
900197d8:	6b01      	ldr	r1, [r0, #48]	; 0x30
900197da:	b087      	sub	sp, #28
900197dc:	4604      	mov	r4, r0
900197de:	b301      	cbz	r1, 90019822 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900197e0:	a801      	add	r0, sp, #4
900197e2:	f7ff fe3d 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900197e6:	892a      	ldrh	r2, [r5, #8]
900197e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900197ec:	7928      	ldrb	r0, [r5, #4]
900197ee:	1ad2      	subs	r2, r2, r3
900197f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900197f2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900197f6:	441a      	add	r2, r3
900197f8:	896b      	ldrh	r3, [r5, #10]
900197fa:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900197fe:	f88d 0010 	strb.w	r0, [sp, #16]
90019802:	1b5b      	subs	r3, r3, r5
90019804:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90019806:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019808:	442b      	add	r3, r5
9001980a:	4d07      	ldr	r5, [pc, #28]	; (90019828 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001980c:	f8ad 1012 	strh.w	r1, [sp, #18]
90019810:	a903      	add	r1, sp, #12
90019812:	9503      	str	r5, [sp, #12]
90019814:	f8ad 2014 	strh.w	r2, [sp, #20]
90019818:	f8ad 3016 	strh.w	r3, [sp, #22]
9001981c:	6803      	ldr	r3, [r0, #0]
9001981e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90019820:	4798      	blx	r3
90019822:	b007      	add	sp, #28
90019824:	bd30      	pop	{r4, r5, pc}
90019826:	bf00      	nop
90019828:	9002dcb4 	.word	0x9002dcb4

9001982c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001982c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019830:	6b03      	ldr	r3, [r0, #48]	; 0x30
90019832:	b08a      	sub	sp, #40	; 0x28
90019834:	4604      	mov	r4, r0
90019836:	460d      	mov	r5, r1
90019838:	b113      	cbz	r3, 90019840 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001983a:	790b      	ldrb	r3, [r1, #4]
9001983c:	2b00      	cmp	r3, #0
9001983e:	d044      	beq.n	900198ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90019840:	f104 0804 	add.w	r8, r4, #4
90019844:	a803      	add	r0, sp, #12
90019846:	4641      	mov	r1, r8
90019848:	f7ff fe0a 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001984c:	792b      	ldrb	r3, [r5, #4]
9001984e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90019852:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90019856:	b983      	cbnz	r3, 9001987a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90019858:	f104 0336 	add.w	r3, r4, #54	; 0x36
9001985c:	892a      	ldrh	r2, [r5, #8]
9001985e:	88e9      	ldrh	r1, [r5, #6]
90019860:	4640      	mov	r0, r8
90019862:	1b92      	subs	r2, r2, r6
90019864:	9301      	str	r3, [sp, #4]
90019866:	1bc9      	subs	r1, r1, r7
90019868:	f104 0334 	add.w	r3, r4, #52	; 0x34
9001986c:	b212      	sxth	r2, r2
9001986e:	9300      	str	r3, [sp, #0]
90019870:	b209      	sxth	r1, r1
90019872:	f104 0330 	add.w	r3, r4, #48	; 0x30
90019876:	f7f9 f901 	bl	90012a7c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001987a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001987c:	b329      	cbz	r1, 900198ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001987e:	a805      	add	r0, sp, #20
90019880:	f7ff fdee 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019884:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90019888:	792b      	ldrb	r3, [r5, #4]
9001988a:	a907      	add	r1, sp, #28
9001988c:	1abf      	subs	r7, r7, r2
9001988e:	88ea      	ldrh	r2, [r5, #6]
90019890:	6b20      	ldr	r0, [r4, #48]	; 0x30
90019892:	4417      	add	r7, r2
90019894:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90019896:	f88d 3020 	strb.w	r3, [sp, #32]
9001989a:	4417      	add	r7, r2
9001989c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
900198a0:	1ab6      	subs	r6, r6, r2
900198a2:	892a      	ldrh	r2, [r5, #8]
900198a4:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
900198a8:	4416      	add	r6, r2
900198aa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900198ac:	4416      	add	r6, r2
900198ae:	4a08      	ldr	r2, [pc, #32]	; (900198d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
900198b0:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
900198b4:	2600      	movs	r6, #0
900198b6:	9207      	str	r2, [sp, #28]
900198b8:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
900198bc:	6803      	ldr	r3, [r0, #0]
900198be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900198c0:	4798      	blx	r3
900198c2:	792b      	ldrb	r3, [r5, #4]
900198c4:	b10b      	cbz	r3, 900198ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900198c6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
900198ca:	b00a      	add	sp, #40	; 0x28
900198cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900198d0:	9002dc8c 	.word	0x9002dc8c

900198d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900198d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900198d8:	460c      	mov	r4, r1
900198da:	6b01      	ldr	r1, [r0, #48]	; 0x30
900198dc:	b088      	sub	sp, #32
900198de:	4605      	mov	r5, r0
900198e0:	2900      	cmp	r1, #0
900198e2:	d06d      	beq.n	900199c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900198e4:	4668      	mov	r0, sp
900198e6:	f7ff fdbb 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900198ea:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900198ec:	88e3      	ldrh	r3, [r4, #6]
900198ee:	f9bd 8000 	ldrsh.w	r8, [sp]
900198f2:	440b      	add	r3, r1
900198f4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900198f8:	b21b      	sxth	r3, r3
900198fa:	4543      	cmp	r3, r8
900198fc:	db31      	blt.n	90019962 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900198fe:	f8bd c004 	ldrh.w	ip, [sp, #4]
90019902:	44c4      	add	ip, r8
90019904:	fa0f fc8c 	sxth.w	ip, ip
90019908:	4563      	cmp	r3, ip
9001990a:	da2a      	bge.n	90019962 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001990c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
9001990e:	8926      	ldrh	r6, [r4, #8]
90019910:	4416      	add	r6, r2
90019912:	b236      	sxth	r6, r6
90019914:	42be      	cmp	r6, r7
90019916:	db24      	blt.n	90019962 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019918:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001991c:	4438      	add	r0, r7
9001991e:	b200      	sxth	r0, r0
90019920:	4286      	cmp	r6, r0
90019922:	da1e      	bge.n	90019962 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019924:	8963      	ldrh	r3, [r4, #10]
90019926:	4419      	add	r1, r3
90019928:	b209      	sxth	r1, r1
9001992a:	4541      	cmp	r1, r8
9001992c:	db08      	blt.n	90019940 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001992e:	4561      	cmp	r1, ip
90019930:	da06      	bge.n	90019940 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90019932:	89a3      	ldrh	r3, [r4, #12]
90019934:	441a      	add	r2, r3
90019936:	b212      	sxth	r2, r2
90019938:	42ba      	cmp	r2, r7
9001993a:	db01      	blt.n	90019940 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001993c:	4282      	cmp	r2, r0
9001993e:	db10      	blt.n	90019962 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90019940:	4b21      	ldr	r3, [pc, #132]	; (900199c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90019942:	a904      	add	r1, sp, #16
90019944:	6b28      	ldr	r0, [r5, #48]	; 0x30
90019946:	9304      	str	r3, [sp, #16]
90019948:	2302      	movs	r3, #2
9001994a:	f88d 3014 	strb.w	r3, [sp, #20]
9001994e:	2300      	movs	r3, #0
90019950:	f8ad 3016 	strh.w	r3, [sp, #22]
90019954:	f8ad 3018 	strh.w	r3, [sp, #24]
90019958:	f8ad 301a 	strh.w	r3, [sp, #26]
9001995c:	6803      	ldr	r3, [r0, #0]
9001995e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90019960:	4798      	blx	r3
90019962:	1d29      	adds	r1, r5, #4
90019964:	a802      	add	r0, sp, #8
90019966:	f7ff fd7b 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001996a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001996e:	88e0      	ldrh	r0, [r4, #6]
90019970:	eba3 0808 	sub.w	r8, r3, r8
90019974:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019978:	7921      	ldrb	r1, [r4, #4]
9001997a:	fa1f f888 	uxth.w	r8, r8
9001997e:	1bdf      	subs	r7, r3, r7
90019980:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90019984:	b2bb      	uxth	r3, r7
90019986:	4440      	add	r0, r8
90019988:	8922      	ldrh	r2, [r4, #8]
9001998a:	8967      	ldrh	r7, [r4, #10]
9001998c:	4460      	add	r0, ip
9001998e:	89a4      	ldrh	r4, [r4, #12]
90019990:	441a      	add	r2, r3
90019992:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90019994:	44b8      	add	r8, r7
90019996:	4423      	add	r3, r4
90019998:	f8ad 0016 	strh.w	r0, [sp, #22]
9001999c:	4432      	add	r2, r6
9001999e:	44e0      	add	r8, ip
900199a0:	4433      	add	r3, r6
900199a2:	4c0a      	ldr	r4, [pc, #40]	; (900199cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
900199a4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900199a6:	f88d 1014 	strb.w	r1, [sp, #20]
900199aa:	a904      	add	r1, sp, #16
900199ac:	9404      	str	r4, [sp, #16]
900199ae:	f8ad 2018 	strh.w	r2, [sp, #24]
900199b2:	f8ad 801a 	strh.w	r8, [sp, #26]
900199b6:	f8ad 301c 	strh.w	r3, [sp, #28]
900199ba:	6803      	ldr	r3, [r0, #0]
900199bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900199be:	4798      	blx	r3
900199c0:	b008      	add	sp, #32
900199c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900199c6:	bf00      	nop
900199c8:	9002dc8c 	.word	0x9002dc8c
900199cc:	9002dca0 	.word	0x9002dca0

900199d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900199d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900199d2:	4604      	mov	r4, r0
900199d4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900199d8:	3201      	adds	r2, #1
900199da:	d112      	bne.n	90019a02 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900199dc:	2500      	movs	r5, #0
900199de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900199e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900199e6:	6803      	ldr	r3, [r0, #0]
900199e8:	9500      	str	r5, [sp, #0]
900199ea:	466d      	mov	r5, sp
900199ec:	f8ad 1004 	strh.w	r1, [sp, #4]
900199f0:	f8ad 2006 	strh.w	r2, [sp, #6]
900199f4:	4629      	mov	r1, r5
900199f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900199f8:	4798      	blx	r3
900199fa:	e895 0003 	ldmia.w	r5, {r0, r1}
900199fe:	e884 0003 	stmia.w	r4, {r0, r1}
90019a02:	4620      	mov	r0, r4
90019a04:	b003      	add	sp, #12
90019a06:	bd30      	pop	{r4, r5, pc}

90019a08 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90019a08:	b513      	push	{r0, r1, r4, lr}
90019a0a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
90019a0e:	4604      	mov	r4, r0
90019a10:	3301      	adds	r3, #1
90019a12:	d109      	bne.n	90019a28 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90019a14:	4601      	mov	r1, r0
90019a16:	4668      	mov	r0, sp
90019a18:	f7ff fd22 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019a1c:	f8bd 3000 	ldrh.w	r3, [sp]
90019a20:	8423      	strh	r3, [r4, #32]
90019a22:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019a26:	8463      	strh	r3, [r4, #34]	; 0x22
90019a28:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90019a2c:	b002      	add	sp, #8
90019a2e:	bd10      	pop	{r4, pc}

90019a30 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90019a30:	b513      	push	{r0, r1, r4, lr}
90019a32:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90019a36:	4604      	mov	r4, r0
90019a38:	3301      	adds	r3, #1
90019a3a:	d109      	bne.n	90019a50 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90019a3c:	4601      	mov	r1, r0
90019a3e:	4668      	mov	r0, sp
90019a40:	f7ff fd0e 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019a44:	f8bd 3000 	ldrh.w	r3, [sp]
90019a48:	8423      	strh	r3, [r4, #32]
90019a4a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019a4e:	8463      	strh	r3, [r4, #34]	; 0x22
90019a50:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90019a54:	b002      	add	sp, #8
90019a56:	bd10      	pop	{r4, pc}

90019a58 <_ZN8touchgfx6ScreenC1Ev>:
90019a58:	b570      	push	{r4, r5, r6, lr}
90019a5a:	4b17      	ldr	r3, [pc, #92]	; (90019ab8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90019a5c:	4605      	mov	r5, r0
90019a5e:	4a17      	ldr	r2, [pc, #92]	; (90019abc <_ZN8touchgfx6ScreenC1Ev+0x64>)
90019a60:	2101      	movs	r1, #1
90019a62:	f845 3b04 	str.w	r3, [r5], #4
90019a66:	2300      	movs	r3, #0
90019a68:	6042      	str	r2, [r0, #4]
90019a6a:	4604      	mov	r4, r0
90019a6c:	8103      	strh	r3, [r0, #8]
90019a6e:	8143      	strh	r3, [r0, #10]
90019a70:	8183      	strh	r3, [r0, #12]
90019a72:	81c3      	strh	r3, [r0, #14]
90019a74:	8203      	strh	r3, [r0, #16]
90019a76:	8243      	strh	r3, [r0, #18]
90019a78:	8283      	strh	r3, [r0, #20]
90019a7a:	82c3      	strh	r3, [r0, #22]
90019a7c:	6203      	str	r3, [r0, #32]
90019a7e:	8483      	strh	r3, [r0, #36]	; 0x24
90019a80:	84c3      	strh	r3, [r0, #38]	; 0x26
90019a82:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90019a86:	6343      	str	r3, [r0, #52]	; 0x34
90019a88:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90019a8c:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
90019a90:	e9c0 3306 	strd	r3, r3, [r0, #24]
90019a94:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90019a98:	4b09      	ldr	r3, [pc, #36]	; (90019ac0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
90019a9a:	4628      	mov	r0, r5
90019a9c:	f9b3 6000 	ldrsh.w	r6, [r3]
90019aa0:	6b93      	ldr	r3, [r2, #56]	; 0x38
90019aa2:	4a08      	ldr	r2, [pc, #32]	; (90019ac4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90019aa4:	f9b2 1000 	ldrsh.w	r1, [r2]
90019aa8:	4798      	blx	r3
90019aaa:	6863      	ldr	r3, [r4, #4]
90019aac:	4628      	mov	r0, r5
90019aae:	4631      	mov	r1, r6
90019ab0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90019ab2:	4798      	blx	r3
90019ab4:	4620      	mov	r0, r4
90019ab6:	bd70      	pop	{r4, r5, r6, pc}
90019ab8:	9002dcc8 	.word	0x9002dcc8
90019abc:	9002d530 	.word	0x9002d530
90019ac0:	24039ac2 	.word	0x24039ac2
90019ac4:	24039ac0 	.word	0x24039ac0

90019ac8 <_ZN8touchgfx6Screen4drawEv>:
90019ac8:	4b09      	ldr	r3, [pc, #36]	; (90019af0 <_ZN8touchgfx6Screen4drawEv+0x28>)
90019aca:	b507      	push	{r0, r1, r2, lr}
90019acc:	f9b3 2000 	ldrsh.w	r2, [r3]
90019ad0:	2100      	movs	r1, #0
90019ad2:	4b08      	ldr	r3, [pc, #32]	; (90019af4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90019ad4:	9100      	str	r1, [sp, #0]
90019ad6:	4669      	mov	r1, sp
90019ad8:	f9b3 3000 	ldrsh.w	r3, [r3]
90019adc:	f8ad 2004 	strh.w	r2, [sp, #4]
90019ae0:	f8ad 3006 	strh.w	r3, [sp, #6]
90019ae4:	6803      	ldr	r3, [r0, #0]
90019ae6:	689b      	ldr	r3, [r3, #8]
90019ae8:	4798      	blx	r3
90019aea:	b003      	add	sp, #12
90019aec:	f85d fb04 	ldr.w	pc, [sp], #4
90019af0:	24039ac0 	.word	0x24039ac0
90019af4:	24039ac2 	.word	0x24039ac2

90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90019af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019afc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90019b00:	b089      	sub	sp, #36	; 0x24
90019b02:	4680      	mov	r8, r0
90019b04:	460c      	mov	r4, r1
90019b06:	2b00      	cmp	r3, #0
90019b08:	4615      	mov	r5, r2
90019b0a:	dd0e      	ble.n	90019b2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019b0c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90019b10:	2b00      	cmp	r3, #0
90019b12:	dd0a      	ble.n	90019b2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019b14:	4628      	mov	r0, r5
90019b16:	f7ff ff5b 	bl	900199d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019b1a:	4621      	mov	r1, r4
90019b1c:	f7fe fa85 	bl	9001802a <_ZNK8touchgfx4Rect9intersectERKS0_>
90019b20:	69eb      	ldr	r3, [r5, #28]
90019b22:	b928      	cbnz	r0, 90019b30 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90019b24:	461d      	mov	r5, r3
90019b26:	2b00      	cmp	r3, #0
90019b28:	d1f4      	bne.n	90019b14 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90019b2a:	b009      	add	sp, #36	; 0x24
90019b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019b30:	ae04      	add	r6, sp, #16
90019b32:	2b00      	cmp	r3, #0
90019b34:	f000 80b5 	beq.w	90019ca2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019b38:	682b      	ldr	r3, [r5, #0]
90019b3a:	4629      	mov	r1, r5
90019b3c:	a802      	add	r0, sp, #8
90019b3e:	68db      	ldr	r3, [r3, #12]
90019b40:	4798      	blx	r3
90019b42:	4628      	mov	r0, r5
90019b44:	f7ff ff60 	bl	90019a08 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019b48:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90019b4c:	4407      	add	r7, r0
90019b4e:	4628      	mov	r0, r5
90019b50:	f7ff ff6e 	bl	90019a30 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019b54:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90019b58:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90019b5c:	b23f      	sxth	r7, r7
90019b5e:	4418      	add	r0, r3
90019b60:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90019b64:	4621      	mov	r1, r4
90019b66:	f8ad 2014 	strh.w	r2, [sp, #20]
90019b6a:	f8ad 0012 	strh.w	r0, [sp, #18]
90019b6e:	4630      	mov	r0, r6
90019b70:	f8ad 3016 	strh.w	r3, [sp, #22]
90019b74:	f8ad 7010 	strh.w	r7, [sp, #16]
90019b78:	f7f9 f862 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90019b7c:	4628      	mov	r0, r5
90019b7e:	f7ff ff27 	bl	900199d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019b82:	ab06      	add	r3, sp, #24
90019b84:	4602      	mov	r2, r0
90019b86:	e896 0003 	ldmia.w	r6, {r0, r1}
90019b8a:	e883 0003 	stmia.w	r3, {r0, r1}
90019b8e:	4611      	mov	r1, r2
90019b90:	4618      	mov	r0, r3
90019b92:	f7f9 f855 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90019b96:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90019b9a:	f9b4 1000 	ldrsh.w	r1, [r4]
90019b9e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90019ba2:	4299      	cmp	r1, r3
90019ba4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90019ba8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90019bac:	d10b      	bne.n	90019bc6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019bae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019bb2:	4552      	cmp	r2, sl
90019bb4:	d107      	bne.n	90019bc6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019bb6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90019bba:	455a      	cmp	r2, fp
90019bbc:	d103      	bne.n	90019bc6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90019bbe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90019bc2:	454a      	cmp	r2, r9
90019bc4:	d06d      	beq.n	90019ca2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019bc6:	f1bb 0f00 	cmp.w	fp, #0
90019bca:	dd65      	ble.n	90019c98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019bcc:	f1b9 0f00 	cmp.w	r9, #0
90019bd0:	dd62      	ble.n	90019c98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90019bd2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90019bd6:	fa1f f08a 	uxth.w	r0, sl
90019bda:	4552      	cmp	r2, sl
90019bdc:	9000      	str	r0, [sp, #0]
90019bde:	da12      	bge.n	90019c06 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
90019be0:	9301      	str	r3, [sp, #4]
90019be2:	9b00      	ldr	r3, [sp, #0]
90019be4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019be8:	f8ad 2012 	strh.w	r2, [sp, #18]
90019bec:	1a9a      	subs	r2, r3, r2
90019bee:	f8ad 1010 	strh.w	r1, [sp, #16]
90019bf2:	4631      	mov	r1, r6
90019bf4:	f8ad 0014 	strh.w	r0, [sp, #20]
90019bf8:	4640      	mov	r0, r8
90019bfa:	f8ad 2016 	strh.w	r2, [sp, #22]
90019bfe:	69ea      	ldr	r2, [r5, #28]
90019c00:	f7ff ff7a 	bl	90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019c04:	9b01      	ldr	r3, [sp, #4]
90019c06:	f9b4 2000 	ldrsh.w	r2, [r4]
90019c0a:	b29f      	uxth	r7, r3
90019c0c:	429a      	cmp	r2, r3
90019c0e:	da0d      	bge.n	90019c2c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90019c10:	f8ad 2010 	strh.w	r2, [sp, #16]
90019c14:	1aba      	subs	r2, r7, r2
90019c16:	f8ad a012 	strh.w	sl, [sp, #18]
90019c1a:	4631      	mov	r1, r6
90019c1c:	f8ad 2014 	strh.w	r2, [sp, #20]
90019c20:	4640      	mov	r0, r8
90019c22:	f8ad 9016 	strh.w	r9, [sp, #22]
90019c26:	69ea      	ldr	r2, [r5, #28]
90019c28:	f7ff ff66 	bl	90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019c2c:	8822      	ldrh	r2, [r4, #0]
90019c2e:	445f      	add	r7, fp
90019c30:	88a3      	ldrh	r3, [r4, #4]
90019c32:	b2bf      	uxth	r7, r7
90019c34:	4413      	add	r3, r2
90019c36:	b23a      	sxth	r2, r7
90019c38:	b29b      	uxth	r3, r3
90019c3a:	b219      	sxth	r1, r3
90019c3c:	4291      	cmp	r1, r2
90019c3e:	dd0d      	ble.n	90019c5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90019c40:	1bdb      	subs	r3, r3, r7
90019c42:	f8ad 2010 	strh.w	r2, [sp, #16]
90019c46:	f8ad a012 	strh.w	sl, [sp, #18]
90019c4a:	4631      	mov	r1, r6
90019c4c:	f8ad 3014 	strh.w	r3, [sp, #20]
90019c50:	4640      	mov	r0, r8
90019c52:	f8ad 9016 	strh.w	r9, [sp, #22]
90019c56:	69ea      	ldr	r2, [r5, #28]
90019c58:	f7ff ff4e 	bl	90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019c5c:	88e2      	ldrh	r2, [r4, #6]
90019c5e:	8863      	ldrh	r3, [r4, #2]
90019c60:	4413      	add	r3, r2
90019c62:	9a00      	ldr	r2, [sp, #0]
90019c64:	444a      	add	r2, r9
90019c66:	b29b      	uxth	r3, r3
90019c68:	fa1f f982 	uxth.w	r9, r2
90019c6c:	b219      	sxth	r1, r3
90019c6e:	fa0f f289 	sxth.w	r2, r9
90019c72:	428a      	cmp	r2, r1
90019c74:	da15      	bge.n	90019ca2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90019c76:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90019c7a:	eba3 0309 	sub.w	r3, r3, r9
90019c7e:	f9b4 0000 	ldrsh.w	r0, [r4]
90019c82:	f8ad 1014 	strh.w	r1, [sp, #20]
90019c86:	4631      	mov	r1, r6
90019c88:	f8ad 0010 	strh.w	r0, [sp, #16]
90019c8c:	f8ad 2012 	strh.w	r2, [sp, #18]
90019c90:	f8ad 3016 	strh.w	r3, [sp, #22]
90019c94:	69ea      	ldr	r2, [r5, #28]
90019c96:	e001      	b.n	90019c9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90019c98:	69ea      	ldr	r2, [r5, #28]
90019c9a:	4621      	mov	r1, r4
90019c9c:	4640      	mov	r0, r8
90019c9e:	f7ff ff2b 	bl	90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019ca2:	4628      	mov	r0, r5
90019ca4:	f7ff fe94 	bl	900199d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90019ca8:	6861      	ldr	r1, [r4, #4]
90019caa:	4602      	mov	r2, r0
90019cac:	4633      	mov	r3, r6
90019cae:	6820      	ldr	r0, [r4, #0]
90019cb0:	c303      	stmia	r3!, {r0, r1}
90019cb2:	4611      	mov	r1, r2
90019cb4:	4630      	mov	r0, r6
90019cb6:	f7f8 ffc3 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90019cba:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90019cbe:	2b00      	cmp	r3, #0
90019cc0:	f77f af33 	ble.w	90019b2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019cc4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90019cc8:	2b00      	cmp	r3, #0
90019cca:	f77f af2e 	ble.w	90019b2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90019cce:	4628      	mov	r0, r5
90019cd0:	f7ff fe9a 	bl	90019a08 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90019cd4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90019cd8:	1a18      	subs	r0, r3, r0
90019cda:	f8ad 0010 	strh.w	r0, [sp, #16]
90019cde:	4628      	mov	r0, r5
90019ce0:	f7ff fea6 	bl	90019a30 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90019ce4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90019ce8:	4631      	mov	r1, r6
90019cea:	1a18      	subs	r0, r3, r0
90019cec:	f8ad 0012 	strh.w	r0, [sp, #18]
90019cf0:	4628      	mov	r0, r5
90019cf2:	682b      	ldr	r3, [r5, #0]
90019cf4:	689b      	ldr	r3, [r3, #8]
90019cf6:	4798      	blx	r3
90019cf8:	e717      	b.n	90019b2a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90019cfa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90019cfa:	b570      	push	{r4, r5, r6, lr}
90019cfc:	1d06      	adds	r6, r0, #4
90019cfe:	b086      	sub	sp, #24
90019d00:	460c      	mov	r4, r1
90019d02:	2300      	movs	r3, #0
90019d04:	4631      	mov	r1, r6
90019d06:	4605      	mov	r5, r0
90019d08:	a802      	add	r0, sp, #8
90019d0a:	9301      	str	r3, [sp, #4]
90019d0c:	f7ff fba8 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019d10:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90019d14:	8822      	ldrh	r2, [r4, #0]
90019d16:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90019d1a:	1ad2      	subs	r2, r2, r3
90019d1c:	8863      	ldrh	r3, [r4, #2]
90019d1e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90019d22:	1a5b      	subs	r3, r3, r1
90019d24:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90019d28:	f8ad 2010 	strh.w	r2, [sp, #16]
90019d2c:	aa01      	add	r2, sp, #4
90019d2e:	f8ad 0014 	strh.w	r0, [sp, #20]
90019d32:	4630      	mov	r0, r6
90019d34:	f8ad 1016 	strh.w	r1, [sp, #22]
90019d38:	a904      	add	r1, sp, #16
90019d3a:	f8ad 3012 	strh.w	r3, [sp, #18]
90019d3e:	f7f9 f857 	bl	90012df0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90019d42:	9a01      	ldr	r2, [sp, #4]
90019d44:	b11a      	cbz	r2, 90019d4e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90019d46:	4621      	mov	r1, r4
90019d48:	4628      	mov	r0, r5
90019d4a:	f7ff fed5 	bl	90019af8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90019d4e:	b006      	add	sp, #24
90019d50:	bd70      	pop	{r4, r5, r6, pc}

90019d52 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90019d52:	4602      	mov	r2, r0
90019d54:	b530      	push	{r4, r5, lr}
90019d56:	4604      	mov	r4, r0
90019d58:	b085      	sub	sp, #20
90019d5a:	f852 0f08 	ldr.w	r0, [r2, #8]!
90019d5e:	460d      	mov	r5, r1
90019d60:	466b      	mov	r3, sp
90019d62:	6851      	ldr	r1, [r2, #4]
90019d64:	c303      	stmia	r3!, {r0, r1}
90019d66:	4629      	mov	r1, r5
90019d68:	4668      	mov	r0, sp
90019d6a:	f7f8 ff69 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90019d6e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90019d72:	b12b      	cbz	r3, 90019d80 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90019d74:	4669      	mov	r1, sp
90019d76:	4620      	mov	r0, r4
90019d78:	f7ff ffbf 	bl	90019cfa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90019d7c:	b005      	add	sp, #20
90019d7e:	bd30      	pop	{r4, r5, pc}
90019d80:	3404      	adds	r4, #4
90019d82:	a802      	add	r0, sp, #8
90019d84:	4621      	mov	r1, r4
90019d86:	f7ff fb6b 	bl	90019460 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90019d8a:	f8bd 3000 	ldrh.w	r3, [sp]
90019d8e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90019d92:	4669      	mov	r1, sp
90019d94:	4620      	mov	r0, r4
90019d96:	1a9b      	subs	r3, r3, r2
90019d98:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90019d9c:	f8ad 3000 	strh.w	r3, [sp]
90019da0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90019da4:	1a9b      	subs	r3, r3, r2
90019da6:	f8ad 3002 	strh.w	r3, [sp, #2]
90019daa:	f7f8 ffe8 	bl	90012d7e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90019dae:	e7e5      	b.n	90019d7c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90019db0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90019db0:	460b      	mov	r3, r1
90019db2:	680a      	ldr	r2, [r1, #0]
90019db4:	1d01      	adds	r1, r0, #4
90019db6:	6992      	ldr	r2, [r2, #24]
90019db8:	4618      	mov	r0, r3
90019dba:	4710      	bx	r2

90019dbc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90019dbc:	4298      	cmp	r0, r3
90019dbe:	d200      	bcs.n	90019dc2 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90019dc0:	b913      	cbnz	r3, 90019dc8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90019dc2:	440a      	add	r2, r1
90019dc4:	b210      	sxth	r0, r2
90019dc6:	4770      	bx	lr
90019dc8:	ee07 0a90 	vmov	s15, r0
90019dcc:	eef8 6a67 	vcvt.f32.u32	s13, s15
90019dd0:	ee07 3a90 	vmov	s15, r3
90019dd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019dd8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90019ddc:	ee07 2a90 	vmov	s15, r2
90019de0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019de4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90019de8:	ee07 1a90 	vmov	s15, r1
90019dec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019df0:	ee37 7a66 	vsub.f32	s14, s14, s13
90019df4:	ee67 5a07 	vmul.f32	s11, s14, s14
90019df8:	eee5 6a87 	vfma.f32	s13, s11, s14
90019dfc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90019e00:	eee6 7a26 	vfma.f32	s15, s12, s13
90019e04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90019e08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019e0c:	bfcc      	ite	gt
90019e0e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90019e12:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90019e16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90019e1a:	ee17 3a90 	vmov	r3, s15
90019e1e:	b218      	sxth	r0, r3
90019e20:	4770      	bx	lr

90019e22 <_ZN8touchgfx12TextProviderC1Ev>:
90019e22:	b538      	push	{r3, r4, r5, lr}
90019e24:	2500      	movs	r5, #0
90019e26:	2302      	movs	r3, #2
90019e28:	4604      	mov	r4, r0
90019e2a:	220e      	movs	r2, #14
90019e2c:	7403      	strb	r3, [r0, #16]
90019e2e:	4629      	mov	r1, r5
90019e30:	6145      	str	r5, [r0, #20]
90019e32:	7605      	strb	r5, [r0, #24]
90019e34:	83c5      	strh	r5, [r0, #30]
90019e36:	8405      	strh	r5, [r0, #32]
90019e38:	86c5      	strh	r5, [r0, #54]	; 0x36
90019e3a:	8705      	strh	r5, [r0, #56]	; 0x38
90019e3c:	87c5      	strh	r5, [r0, #62]	; 0x3e
90019e3e:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90019e42:	e9c0 5500 	strd	r5, r5, [r0]
90019e46:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90019e4a:	304c      	adds	r0, #76	; 0x4c
90019e4c:	f00f fdc0 	bl	900299d0 <memset>
90019e50:	2301      	movs	r3, #1
90019e52:	4620      	mov	r0, r4
90019e54:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90019e58:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90019e5c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90019e60:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90019e64:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90019e68:	f7ea fb9c 	bl	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90019e6c:	4620      	mov	r0, r4
90019e6e:	bd38      	pop	{r3, r4, r5, pc}

90019e70 <_ZN8touchgfx12TextProvider11endOfStringEv>:
90019e70:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90019e72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019e76:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90019e78:	fab0 f080 	clz	r0, r0
90019e7c:	0940      	lsrs	r0, r0, #5
90019e7e:	4770      	bx	lr

90019e80 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90019e80:	b530      	push	{r4, r5, lr}
90019e82:	2500      	movs	r5, #0
90019e84:	2401      	movs	r4, #1
90019e86:	6843      	ldr	r3, [r0, #4]
90019e88:	b913      	cbnz	r3, 90019e90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90019e8a:	6803      	ldr	r3, [r0, #0]
90019e8c:	b313      	cbz	r3, 90019ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019e8e:	6043      	str	r3, [r0, #4]
90019e90:	7e03      	ldrb	r3, [r0, #24]
90019e92:	b143      	cbz	r3, 90019ea6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90019e94:	6943      	ldr	r3, [r0, #20]
90019e96:	b12b      	cbz	r3, 90019ea4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019e98:	881a      	ldrh	r2, [r3, #0]
90019e9a:	b11a      	cbz	r2, 90019ea4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90019e9c:	1c9a      	adds	r2, r3, #2
90019e9e:	6142      	str	r2, [r0, #20]
90019ea0:	8818      	ldrh	r0, [r3, #0]
90019ea2:	bd30      	pop	{r4, r5, pc}
90019ea4:	7605      	strb	r5, [r0, #24]
90019ea6:	6843      	ldr	r3, [r0, #4]
90019ea8:	8819      	ldrh	r1, [r3, #0]
90019eaa:	b199      	cbz	r1, 90019ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90019eac:	1c9a      	adds	r2, r3, #2
90019eae:	2902      	cmp	r1, #2
90019eb0:	6042      	str	r2, [r0, #4]
90019eb2:	d1f5      	bne.n	90019ea0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90019eb4:	7c03      	ldrb	r3, [r0, #16]
90019eb6:	2b01      	cmp	r3, #1
90019eb8:	d8e5      	bhi.n	90019e86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019eba:	1c5a      	adds	r2, r3, #1
90019ebc:	3302      	adds	r3, #2
90019ebe:	7402      	strb	r2, [r0, #16]
90019ec0:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90019ec4:	6143      	str	r3, [r0, #20]
90019ec6:	2b00      	cmp	r3, #0
90019ec8:	d0dd      	beq.n	90019e86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019eca:	881b      	ldrh	r3, [r3, #0]
90019ecc:	2b00      	cmp	r3, #0
90019ece:	d0da      	beq.n	90019e86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019ed0:	7604      	strb	r4, [r0, #24]
90019ed2:	e7d8      	b.n	90019e86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90019ed4:	2000      	movs	r0, #0
90019ed6:	e7e4      	b.n	90019ea2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90019ed8:	6001      	str	r1, [r0, #0]
90019eda:	2100      	movs	r1, #0
90019edc:	b430      	push	{r4, r5}
90019ede:	6041      	str	r1, [r0, #4]
90019ee0:	6815      	ldr	r5, [r2, #0]
90019ee2:	6085      	str	r5, [r0, #8]
90019ee4:	6852      	ldr	r2, [r2, #4]
90019ee6:	6443      	str	r3, [r0, #68]	; 0x44
90019ee8:	9b02      	ldr	r3, [sp, #8]
90019eea:	60c2      	str	r2, [r0, #12]
90019eec:	7401      	strb	r1, [r0, #16]
90019eee:	6141      	str	r1, [r0, #20]
90019ef0:	7601      	strb	r1, [r0, #24]
90019ef2:	8701      	strh	r1, [r0, #56]	; 0x38
90019ef4:	8401      	strh	r1, [r0, #32]
90019ef6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90019efa:	6483      	str	r3, [r0, #72]	; 0x48
90019efc:	bc30      	pop	{r4, r5}
90019efe:	f7ea bb51 	b.w	900045a4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90019f02 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90019f02:	b408      	push	{r3}
90019f04:	b510      	push	{r4, lr}
90019f06:	b085      	sub	sp, #20
90019f08:	ac07      	add	r4, sp, #28
90019f0a:	f854 3b04 	ldr.w	r3, [r4], #4
90019f0e:	9300      	str	r3, [sp, #0]
90019f10:	4613      	mov	r3, r2
90019f12:	4622      	mov	r2, r4
90019f14:	9403      	str	r4, [sp, #12]
90019f16:	f7ff ffdf 	bl	90019ed8 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90019f1a:	b005      	add	sp, #20
90019f1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019f20:	b001      	add	sp, #4
90019f22:	4770      	bx	lr

90019f24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90019f24:	b5f0      	push	{r4, r5, r6, r7, lr}
90019f26:	4605      	mov	r5, r0
90019f28:	4608      	mov	r0, r1
90019f2a:	b1f1      	cbz	r1, 90019f6a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90019f2c:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90019f30:	460b      	mov	r3, r1
90019f32:	f101 0708 	add.w	r7, r1, #8
90019f36:	4622      	mov	r2, r4
90019f38:	6818      	ldr	r0, [r3, #0]
90019f3a:	3308      	adds	r3, #8
90019f3c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019f40:	4626      	mov	r6, r4
90019f42:	42bb      	cmp	r3, r7
90019f44:	c603      	stmia	r6!, {r0, r1}
90019f46:	4634      	mov	r4, r6
90019f48:	d1f6      	bne.n	90019f38 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90019f4a:	6818      	ldr	r0, [r3, #0]
90019f4c:	6030      	str	r0, [r6, #0]
90019f4e:	4610      	mov	r0, r2
90019f50:	889b      	ldrh	r3, [r3, #4]
90019f52:	80b3      	strh	r3, [r6, #4]
90019f54:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90019f58:	015b      	lsls	r3, r3, #5
90019f5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
90019f5e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90019f62:	430b      	orrs	r3, r1
90019f64:	425b      	negs	r3, r3
90019f66:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90019f6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90019f6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90019f6c:	b538      	push	{r3, r4, r5, lr}
90019f6e:	460c      	mov	r4, r1
90019f70:	6811      	ldr	r1, [r2, #0]
90019f72:	4610      	mov	r0, r2
90019f74:	68cd      	ldr	r5, [r1, #12]
90019f76:	4619      	mov	r1, r3
90019f78:	47a8      	blx	r5
90019f7a:	2800      	cmp	r0, #0
90019f7c:	bf08      	it	eq
90019f7e:	4620      	moveq	r0, r4
90019f80:	bd38      	pop	{r3, r4, r5, pc}
	...

90019f84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90019f84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019f86:	4604      	mov	r4, r0
90019f88:	4615      	mov	r5, r2
90019f8a:	4608      	mov	r0, r1
90019f8c:	b93a      	cbnz	r2, 90019f9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90019f8e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90019f92:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90019f96:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90019f9a:	4628      	mov	r0, r5
90019f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019f9e:	f892 c00d 	ldrb.w	ip, [r2, #13]
90019fa2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90019fa6:	8893      	ldrh	r3, [r2, #4]
90019fa8:	ea4f 160c 	mov.w	r6, ip, lsl #4
90019fac:	f406 7280 	and.w	r2, r6, #256	; 0x100
90019fb0:	79ee      	ldrb	r6, [r5, #7]
90019fb2:	4316      	orrs	r6, r2
90019fb4:	19da      	adds	r2, r3, r7
90019fb6:	b291      	uxth	r1, r2
90019fb8:	b2b7      	uxth	r7, r6
90019fba:	291d      	cmp	r1, #29
90019fbc:	d87b      	bhi.n	9001a0b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90019fbe:	2201      	movs	r2, #1
90019fc0:	10f6      	asrs	r6, r6, #3
90019fc2:	408a      	lsls	r2, r1
90019fc4:	4974      	ldr	r1, [pc, #464]	; (9001a198 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90019fc6:	420a      	tst	r2, r1
90019fc8:	d12e      	bne.n	9001a028 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90019fca:	f412 7f60 	tst.w	r2, #896	; 0x380
90019fce:	d072      	beq.n	9001a0b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90019fd0:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90019fd4:	462b      	mov	r3, r5
90019fd6:	f105 0e08 	add.w	lr, r5, #8
90019fda:	4615      	mov	r5, r2
90019fdc:	6818      	ldr	r0, [r3, #0]
90019fde:	3308      	adds	r3, #8
90019fe0:	f853 1c04 	ldr.w	r1, [r3, #-4]
90019fe4:	4694      	mov	ip, r2
90019fe6:	4573      	cmp	r3, lr
90019fe8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019fec:	4662      	mov	r2, ip
90019fee:	d1f5      	bne.n	90019fdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90019ff0:	6818      	ldr	r0, [r3, #0]
90019ff2:	f8cc 0000 	str.w	r0, [ip]
90019ff6:	889b      	ldrh	r3, [r3, #4]
90019ff8:	f8ac 3004 	strh.w	r3, [ip, #4]
90019ffc:	b2b3      	uxth	r3, r6
90019ffe:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
9001a002:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
9001a006:	1aca      	subs	r2, r1, r3
9001a008:	1bcf      	subs	r7, r1, r7
9001a00a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
9001a00e:	b292      	uxth	r2, r2
9001a010:	1afb      	subs	r3, r7, r3
9001a012:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
9001a016:	10d2      	asrs	r2, r2, #3
9001a018:	f002 0260 	and.w	r2, r2, #96	; 0x60
9001a01c:	4302      	orrs	r2, r0
9001a01e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
9001a022:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a026:	e7b8      	b.n	90019f9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a028:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001a02a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a02e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
9001a030:	f640 6333 	movw	r3, #3635	; 0xe33
9001a034:	4299      	cmp	r1, r3
9001a036:	d110      	bne.n	9001a05a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
9001a038:	6803      	ldr	r3, [r0, #0]
9001a03a:	68db      	ldr	r3, [r3, #12]
9001a03c:	4798      	blx	r3
9001a03e:	7b41      	ldrb	r1, [r0, #13]
9001a040:	00cb      	lsls	r3, r1, #3
9001a042:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a046:	7a03      	ldrb	r3, [r0, #8]
9001a048:	0648      	lsls	r0, r1, #25
9001a04a:	ea43 0302 	orr.w	r3, r3, r2
9001a04e:	bf44      	itt	mi
9001a050:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a054:	b21b      	sxthmi	r3, r3
9001a056:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a05a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001a05e:	462a      	mov	r2, r5
9001a060:	f105 0c08 	add.w	ip, r5, #8
9001a064:	443b      	add	r3, r7
9001a066:	4433      	add	r3, r6
9001a068:	f104 064c 	add.w	r6, r4, #76	; 0x4c
9001a06c:	b29b      	uxth	r3, r3
9001a06e:	4635      	mov	r5, r6
9001a070:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a074:	6810      	ldr	r0, [r2, #0]
9001a076:	3208      	adds	r2, #8
9001a078:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001a07c:	4637      	mov	r7, r6
9001a07e:	4562      	cmp	r2, ip
9001a080:	c703      	stmia	r7!, {r0, r1}
9001a082:	463e      	mov	r6, r7
9001a084:	d1f6      	bne.n	9001a074 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
9001a086:	6810      	ldr	r0, [r2, #0]
9001a088:	6038      	str	r0, [r7, #0]
9001a08a:	8892      	ldrh	r2, [r2, #4]
9001a08c:	80ba      	strh	r2, [r7, #4]
9001a08e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a092:	10db      	asrs	r3, r3, #3
9001a094:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a098:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a09c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a0a0:	4313      	orrs	r3, r2
9001a0a2:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
9001a0a6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a0aa:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001a0ae:	1a9b      	subs	r3, r3, r2
9001a0b0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
9001a0b4:	e771      	b.n	90019f9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
9001a0b6:	f023 0204 	bic.w	r2, r3, #4
9001a0ba:	f640 611b 	movw	r1, #3611	; 0xe1b
9001a0be:	428a      	cmp	r2, r1
9001a0c0:	d003      	beq.n	9001a0ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001a0c2:	f640 621d 	movw	r2, #3613	; 0xe1d
9001a0c6:	4293      	cmp	r3, r2
9001a0c8:	d120      	bne.n	9001a10c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
9001a0ca:	3b01      	subs	r3, #1
9001a0cc:	4602      	mov	r2, r0
9001a0ce:	4629      	mov	r1, r5
9001a0d0:	4620      	mov	r0, r4
9001a0d2:	b29b      	uxth	r3, r3
9001a0d4:	f7ff ff4a 	bl	90019f6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a0d8:	7b41      	ldrb	r1, [r0, #13]
9001a0da:	00cb      	lsls	r3, r1, #3
9001a0dc:	0649      	lsls	r1, r1, #25
9001a0de:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a0e2:	7a03      	ldrb	r3, [r0, #8]
9001a0e4:	ea43 0302 	orr.w	r3, r3, r2
9001a0e8:	bf44      	itt	mi
9001a0ea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a0ee:	b21b      	sxthmi	r3, r3
9001a0f0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a0f4:	7b6b      	ldrb	r3, [r5, #13]
9001a0f6:	7aaa      	ldrb	r2, [r5, #10]
9001a0f8:	005b      	lsls	r3, r3, #1
9001a0fa:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a0fe:	4313      	orrs	r3, r2
9001a100:	115a      	asrs	r2, r3, #5
9001a102:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001a106:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a10a:	e035      	b.n	9001a178 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
9001a10c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
9001a110:	f01c 0f40 	tst.w	ip, #64	; 0x40
9001a114:	f402 7180 	and.w	r1, r2, #256	; 0x100
9001a118:	7a2a      	ldrb	r2, [r5, #8]
9001a11a:	ea42 0201 	orr.w	r2, r2, r1
9001a11e:	f640 6109 	movw	r1, #3593	; 0xe09
9001a122:	bf1c      	itt	ne
9001a124:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
9001a128:	b212      	sxthne	r2, r2
9001a12a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001a12e:	f023 0210 	bic.w	r2, r3, #16
9001a132:	428a      	cmp	r2, r1
9001a134:	d003      	beq.n	9001a13e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001a136:	f640 6213 	movw	r2, #3603	; 0xe13
9001a13a:	4293      	cmp	r3, r2
9001a13c:	d129      	bne.n	9001a192 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
9001a13e:	7b6e      	ldrb	r6, [r5, #13]
9001a140:	4629      	mov	r1, r5
9001a142:	0076      	lsls	r6, r6, #1
9001a144:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001a148:	7aae      	ldrb	r6, [r5, #10]
9001a14a:	4316      	orrs	r6, r2
9001a14c:	f640 6213 	movw	r2, #3603	; 0xe13
9001a150:	4293      	cmp	r3, r2
9001a152:	4602      	mov	r2, r0
9001a154:	4620      	mov	r0, r4
9001a156:	bf16      	itet	ne
9001a158:	f103 33ff 	addne.w	r3, r3, #4294967295
9001a15c:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001a160:	b29b      	uxthne	r3, r3
9001a162:	f7ff ff03 	bl	90019f6c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001a166:	7b43      	ldrb	r3, [r0, #13]
9001a168:	7a82      	ldrb	r2, [r0, #10]
9001a16a:	005b      	lsls	r3, r3, #1
9001a16c:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001a170:	4313      	orrs	r3, r2
9001a172:	1af6      	subs	r6, r6, r3
9001a174:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
9001a178:	7b69      	ldrb	r1, [r5, #13]
9001a17a:	00cb      	lsls	r3, r1, #3
9001a17c:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a180:	7a2b      	ldrb	r3, [r5, #8]
9001a182:	4313      	orrs	r3, r2
9001a184:	064a      	lsls	r2, r1, #25
9001a186:	bf44      	itt	mi
9001a188:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a18c:	b21b      	sxthmi	r3, r3
9001a18e:	1bdb      	subs	r3, r3, r7
9001a190:	e747      	b.n	9001a022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001a192:	2300      	movs	r3, #0
9001a194:	e7b7      	b.n	9001a106 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
9001a196:	bf00      	nop
9001a198:	3fc00079 	.word	0x3fc00079

9001a19c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001a19c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a1a0:	4604      	mov	r4, r0
9001a1a2:	b942      	cbnz	r2, 9001a1b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001a1a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001a1a8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
9001a1ac:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001a1b0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
9001a1b4:	e047      	b.n	9001a246 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a1b6:	7b51      	ldrb	r1, [r2, #13]
9001a1b8:	8893      	ldrh	r3, [r2, #4]
9001a1ba:	010d      	lsls	r5, r1, #4
9001a1bc:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001a1c0:	79d5      	ldrb	r5, [r2, #7]
9001a1c2:	4305      	orrs	r5, r0
9001a1c4:	2d04      	cmp	r5, #4
9001a1c6:	bfcc      	ite	gt
9001a1c8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001a1cc:	f04f 0e01 	movle.w	lr, #1
9001a1d0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
9001a1d4:	f200 80ab 	bhi.w	9001a32e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001a1d8:	f240 60e7 	movw	r0, #1767	; 0x6e7
9001a1dc:	4283      	cmp	r3, r0
9001a1de:	d216      	bcs.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1e0:	f240 605b 	movw	r0, #1627	; 0x65b
9001a1e4:	4283      	cmp	r3, r0
9001a1e6:	d859      	bhi.n	9001a29c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001a1e8:	f240 6057 	movw	r0, #1623	; 0x657
9001a1ec:	4283      	cmp	r3, r0
9001a1ee:	d20e      	bcs.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1f0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a1f4:	d24a      	bcs.n	9001a28c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001a1f6:	f240 604e 	movw	r0, #1614	; 0x64e
9001a1fa:	4283      	cmp	r3, r0
9001a1fc:	d207      	bcs.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a1fe:	f240 601a 	movw	r0, #1562	; 0x61a
9001a202:	4283      	cmp	r3, r0
9001a204:	d02a      	beq.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a206:	d821      	bhi.n	9001a24c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001a208:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
9001a20c:	d35b      	bcc.n	9001a2c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a20e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
9001a212:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a216:	f040 80d0 	bne.w	9001a3ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a21a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
9001a21e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a222:	f040 80ca 	bne.w	9001a3ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001a226:	00cb      	lsls	r3, r1, #3
9001a228:	0649      	lsls	r1, r1, #25
9001a22a:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a22e:	7a13      	ldrb	r3, [r2, #8]
9001a230:	ea43 0300 	orr.w	r3, r3, r0
9001a234:	bf44      	itt	mi
9001a236:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a23a:	b21b      	sxthmi	r3, r3
9001a23c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a240:	1b5d      	subs	r5, r3, r5
9001a242:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a246:	4610      	mov	r0, r2
9001a248:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a24c:	f240 604b 	movw	r0, #1611	; 0x64b
9001a250:	4283      	cmp	r3, r0
9001a252:	d338      	bcc.n	9001a2c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a254:	f240 604c 	movw	r0, #1612	; 0x64c
9001a258:	4283      	cmp	r3, r0
9001a25a:	d9d8      	bls.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a25c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001a260:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
9001a264:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a268:	f040 80f3 	bne.w	9001a452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a26c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a270:	f040 80ef 	bne.w	9001a452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001a274:	00cb      	lsls	r3, r1, #3
9001a276:	064e      	lsls	r6, r1, #25
9001a278:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a27c:	7a13      	ldrb	r3, [r2, #8]
9001a27e:	ea43 0300 	orr.w	r3, r3, r0
9001a282:	bf44      	itt	mi
9001a284:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a288:	b21b      	sxthmi	r3, r3
9001a28a:	e7d9      	b.n	9001a240 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001a28c:	f240 6054 	movw	r0, #1620	; 0x654
9001a290:	4283      	cmp	r3, r0
9001a292:	d8e3      	bhi.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a294:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
9001a298:	d9e0      	bls.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a29a:	e7b8      	b.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a29c:	f240 6074 	movw	r0, #1652	; 0x674
9001a2a0:	4283      	cmp	r3, r0
9001a2a2:	d0b4      	beq.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a2a4:	d82d      	bhi.n	9001a302 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001a2a6:	f240 605e 	movw	r0, #1630	; 0x65e
9001a2aa:	4283      	cmp	r3, r0
9001a2ac:	d804      	bhi.n	9001a2b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001a2ae:	f240 605d 	movw	r0, #1629	; 0x65d
9001a2b2:	4283      	cmp	r3, r0
9001a2b4:	d3d2      	bcc.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a2b6:	e7aa      	b.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a2b8:	f240 605f 	movw	r0, #1631	; 0x65f
9001a2bc:	4283      	cmp	r3, r0
9001a2be:	d0cd      	beq.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a2c0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
9001a2c4:	d0a3      	beq.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a2c6:	00cb      	lsls	r3, r1, #3
9001a2c8:	0649      	lsls	r1, r1, #25
9001a2ca:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001a2ce:	7a13      	ldrb	r3, [r2, #8]
9001a2d0:	ea43 0300 	orr.w	r3, r3, r0
9001a2d4:	bf44      	itt	mi
9001a2d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a2da:	b21b      	sxthmi	r3, r3
9001a2dc:	1b5d      	subs	r5, r3, r5
9001a2de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a2e2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a2e6:	7b53      	ldrb	r3, [r2, #13]
9001a2e8:	015b      	lsls	r3, r3, #5
9001a2ea:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001a2ee:	7993      	ldrb	r3, [r2, #6]
9001a2f0:	430b      	orrs	r3, r1
9001a2f2:	2105      	movs	r1, #5
9001a2f4:	005b      	lsls	r3, r3, #1
9001a2f6:	fb93 f3f1 	sdiv	r3, r3, r1
9001a2fa:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001a2fe:	440b      	add	r3, r1
9001a300:	e756      	b.n	9001a1b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001a302:	f240 60e2 	movw	r0, #1762	; 0x6e2
9001a306:	4283      	cmp	r3, r0
9001a308:	d809      	bhi.n	9001a31e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001a30a:	f240 60df 	movw	r0, #1759	; 0x6df
9001a30e:	4283      	cmp	r3, r0
9001a310:	f4bf af7d 	bcs.w	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a314:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
9001a318:	2b05      	cmp	r3, #5
9001a31a:	d8d4      	bhi.n	9001a2c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a31c:	e777      	b.n	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a31e:	f240 60e3 	movw	r0, #1763	; 0x6e3
9001a322:	4283      	cmp	r3, r0
9001a324:	d09a      	beq.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a326:	f240 60e4 	movw	r0, #1764	; 0x6e4
9001a32a:	4283      	cmp	r3, r0
9001a32c:	e7ca      	b.n	9001a2c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001a32e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
9001a332:	d22b      	bcs.n	9001a38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001a334:	f640 00ed 	movw	r0, #2285	; 0x8ed
9001a338:	4283      	cmp	r3, r0
9001a33a:	d28f      	bcs.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a33c:	f640 00e5 	movw	r0, #2277	; 0x8e5
9001a340:	4283      	cmp	r3, r0
9001a342:	d816      	bhi.n	9001a372 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001a344:	f640 00e4 	movw	r0, #2276	; 0x8e4
9001a348:	4283      	cmp	r3, r0
9001a34a:	f4bf af60 	bcs.w	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a34e:	f240 60ec 	movw	r0, #1772	; 0x6ec
9001a352:	4283      	cmp	r3, r0
9001a354:	d80a      	bhi.n	9001a36c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001a356:	f240 60eb 	movw	r0, #1771	; 0x6eb
9001a35a:	4283      	cmp	r3, r0
9001a35c:	f4bf af57 	bcs.w	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a360:	f240 60ea 	movw	r0, #1770	; 0x6ea
9001a364:	4283      	cmp	r3, r0
9001a366:	f43f af79 	beq.w	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a36a:	e7ac      	b.n	9001a2c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001a36c:	f240 60ed 	movw	r0, #1773	; 0x6ed
9001a370:	e7f8      	b.n	9001a364 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001a372:	f640 00e8 	movw	r0, #2280	; 0x8e8
9001a376:	4283      	cmp	r3, r0
9001a378:	d802      	bhi.n	9001a380 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001a37a:	f640 00e7 	movw	r0, #2279	; 0x8e7
9001a37e:	e798      	b.n	9001a2b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001a380:	f640 00e9 	movw	r0, #2281	; 0x8e9
9001a384:	4283      	cmp	r3, r0
9001a386:	f47f af42 	bne.w	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a38a:	e767      	b.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a38c:	f640 00f6 	movw	r0, #2294	; 0x8f6
9001a390:	4283      	cmp	r3, r0
9001a392:	f43f af63 	beq.w	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a396:	d802      	bhi.n	9001a39e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001a398:	f640 00f2 	movw	r0, #2290	; 0x8f2
9001a39c:	e7f2      	b.n	9001a384 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001a39e:	f640 00fa 	movw	r0, #2298	; 0x8fa
9001a3a2:	4283      	cmp	r3, r0
9001a3a4:	d805      	bhi.n	9001a3b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001a3a6:	f640 00f9 	movw	r0, #2297	; 0x8f9
9001a3aa:	4283      	cmp	r3, r0
9001a3ac:	f4ff af2f 	bcc.w	9001a20e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001a3b0:	e754      	b.n	9001a25c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001a3b2:	f640 00fe 	movw	r0, #2302	; 0x8fe
9001a3b6:	4283      	cmp	r3, r0
9001a3b8:	e7af      	b.n	9001a31a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001a3ba:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a3be:	4617      	mov	r7, r2
9001a3c0:	f102 0808 	add.w	r8, r2, #8
9001a3c4:	4666      	mov	r6, ip
9001a3c6:	6838      	ldr	r0, [r7, #0]
9001a3c8:	3708      	adds	r7, #8
9001a3ca:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a3ce:	46e6      	mov	lr, ip
9001a3d0:	4547      	cmp	r7, r8
9001a3d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001a3d6:	46f4      	mov	ip, lr
9001a3d8:	d1f5      	bne.n	9001a3c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001a3da:	6838      	ldr	r0, [r7, #0]
9001a3dc:	f8ce 0000 	str.w	r0, [lr]
9001a3e0:	88b9      	ldrh	r1, [r7, #4]
9001a3e2:	f8ae 1004 	strh.w	r1, [lr, #4]
9001a3e6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a3ea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a3ee:	d009      	beq.n	9001a404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001a3f0:	7b51      	ldrb	r1, [r2, #13]
9001a3f2:	7992      	ldrb	r2, [r2, #6]
9001a3f4:	0149      	lsls	r1, r1, #5
9001a3f6:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a3fa:	4311      	orrs	r1, r2
9001a3fc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a400:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a404:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a408:	b2ad      	uxth	r5, r5
9001a40a:	d00d      	beq.n	9001a428 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001a40c:	442b      	add	r3, r5
9001a40e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a412:	b29b      	uxth	r3, r3
9001a414:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a418:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a41c:	10db      	asrs	r3, r3, #3
9001a41e:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a422:	4313      	orrs	r3, r2
9001a424:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a428:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a42c:	00cb      	lsls	r3, r1, #3
9001a42e:	064f      	lsls	r7, r1, #25
9001a430:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a434:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a438:	ea43 0302 	orr.w	r3, r3, r2
9001a43c:	bf44      	itt	mi
9001a43e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a442:	b21b      	sxthmi	r3, r3
9001a444:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001a448:	1b5b      	subs	r3, r3, r5
9001a44a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
9001a44e:	4632      	mov	r2, r6
9001a450:	e6f9      	b.n	9001a246 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001a452:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001a456:	4617      	mov	r7, r2
9001a458:	f102 0908 	add.w	r9, r2, #8
9001a45c:	4666      	mov	r6, ip
9001a45e:	6838      	ldr	r0, [r7, #0]
9001a460:	3708      	adds	r7, #8
9001a462:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001a466:	46e0      	mov	r8, ip
9001a468:	454f      	cmp	r7, r9
9001a46a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001a46e:	46c4      	mov	ip, r8
9001a470:	d1f5      	bne.n	9001a45e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001a472:	6838      	ldr	r0, [r7, #0]
9001a474:	f8c8 0000 	str.w	r0, [r8]
9001a478:	88b9      	ldrh	r1, [r7, #4]
9001a47a:	f8a8 1004 	strh.w	r1, [r8, #4]
9001a47e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
9001a482:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001a486:	d009      	beq.n	9001a49c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001a488:	7b51      	ldrb	r1, [r2, #13]
9001a48a:	7992      	ldrb	r2, [r2, #6]
9001a48c:	0149      	lsls	r1, r1, #5
9001a48e:	f401 7180 	and.w	r1, r1, #256	; 0x100
9001a492:	4311      	orrs	r1, r2
9001a494:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001a498:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
9001a49c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001a4a0:	d00e      	beq.n	9001a4c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001a4a2:	eba3 030e 	sub.w	r3, r3, lr
9001a4a6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001a4aa:	b29b      	uxth	r3, r3
9001a4ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001a4b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001a4b4:	10db      	asrs	r3, r3, #3
9001a4b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001a4ba:	4313      	orrs	r3, r2
9001a4bc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001a4c0:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
9001a4c4:	00cb      	lsls	r3, r1, #3
9001a4c6:	0648      	lsls	r0, r1, #25
9001a4c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001a4cc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001a4d0:	ea43 0302 	orr.w	r3, r3, r2
9001a4d4:	bf44      	itt	mi
9001a4d6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001a4da:	b21b      	sxthmi	r3, r3
9001a4dc:	1b5d      	subs	r5, r3, r5
9001a4de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001a4e2:	e7b4      	b.n	9001a44e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001a4e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001a4e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a4e8:	461e      	mov	r6, r3
9001a4ea:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a4ec:	4604      	mov	r4, r0
9001a4ee:	4617      	mov	r7, r2
9001a4f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a4f4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a4f8:	f7ea f804 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a4fc:	4605      	mov	r5, r0
9001a4fe:	b918      	cbnz	r0, 9001a508 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001a500:	6030      	str	r0, [r6, #0]
9001a502:	4628      	mov	r0, r5
9001a504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001a508:	683b      	ldr	r3, [r7, #0]
9001a50a:	4601      	mov	r1, r0
9001a50c:	4638      	mov	r0, r7
9001a50e:	68db      	ldr	r3, [r3, #12]
9001a510:	4798      	blx	r3
9001a512:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a516:	4602      	mov	r2, r0
9001a518:	6030      	str	r0, [r6, #0]
9001a51a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a51e:	d213      	bcs.n	9001a548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001a520:	4643      	mov	r3, r8
9001a522:	4639      	mov	r1, r7
9001a524:	4620      	mov	r0, r4
9001a526:	f7ff fe39 	bl	9001a19c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a52a:	6030      	str	r0, [r6, #0]
9001a52c:	6833      	ldr	r3, [r6, #0]
9001a52e:	b143      	cbz	r3, 9001a542 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001a530:	7b5a      	ldrb	r2, [r3, #13]
9001a532:	7a9b      	ldrb	r3, [r3, #10]
9001a534:	0052      	lsls	r2, r2, #1
9001a536:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a53a:	4313      	orrs	r3, r2
9001a53c:	bf0c      	ite	eq
9001a53e:	2301      	moveq	r3, #1
9001a540:	2300      	movne	r3, #0
9001a542:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a546:	e7dc      	b.n	9001a502 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001a548:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a54c:	b29b      	uxth	r3, r3
9001a54e:	2b7f      	cmp	r3, #127	; 0x7f
9001a550:	d804      	bhi.n	9001a55c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001a552:	4639      	mov	r1, r7
9001a554:	4620      	mov	r0, r4
9001a556:	f7ff fd15 	bl	90019f84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a55a:	e7e6      	b.n	9001a52a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001a55c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a560:	2b00      	cmp	r3, #0
9001a562:	d0e3      	beq.n	9001a52c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a564:	f640 1302 	movw	r3, #2306	; 0x902
9001a568:	429d      	cmp	r5, r3
9001a56a:	d1df      	bne.n	9001a52c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001a56c:	4601      	mov	r1, r0
9001a56e:	4620      	mov	r0, r4
9001a570:	f7ff fcd8 	bl	90019f24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a574:	e7d9      	b.n	9001a52a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001a576 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001a576:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001a57a:	461e      	mov	r6, r3
9001a57c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a57e:	4604      	mov	r4, r0
9001a580:	4617      	mov	r7, r2
9001a582:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001a586:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a58a:	f7e9 ffbb 	bl	90004504 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001a58e:	4605      	mov	r5, r0
9001a590:	b918      	cbnz	r0, 9001a59a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001a592:	6030      	str	r0, [r6, #0]
9001a594:	4628      	mov	r0, r5
9001a596:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001a59a:	683b      	ldr	r3, [r7, #0]
9001a59c:	4601      	mov	r1, r0
9001a59e:	4638      	mov	r0, r7
9001a5a0:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001a5a4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001a5a8:	47c8      	blx	r9
9001a5aa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001a5ae:	4602      	mov	r2, r0
9001a5b0:	6030      	str	r0, [r6, #0]
9001a5b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001a5b6:	d213      	bcs.n	9001a5e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001a5b8:	4643      	mov	r3, r8
9001a5ba:	4639      	mov	r1, r7
9001a5bc:	4620      	mov	r0, r4
9001a5be:	f7ff fded 	bl	9001a19c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001a5c2:	6030      	str	r0, [r6, #0]
9001a5c4:	6833      	ldr	r3, [r6, #0]
9001a5c6:	b143      	cbz	r3, 9001a5da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001a5c8:	7b5a      	ldrb	r2, [r3, #13]
9001a5ca:	7a9b      	ldrb	r3, [r3, #10]
9001a5cc:	0052      	lsls	r2, r2, #1
9001a5ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001a5d2:	4313      	orrs	r3, r2
9001a5d4:	bf0c      	ite	eq
9001a5d6:	2301      	moveq	r3, #1
9001a5d8:	2300      	movne	r3, #0
9001a5da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001a5de:	e7d9      	b.n	9001a594 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001a5e0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
9001a5e4:	b29b      	uxth	r3, r3
9001a5e6:	2b7f      	cmp	r3, #127	; 0x7f
9001a5e8:	d804      	bhi.n	9001a5f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001a5ea:	4639      	mov	r1, r7
9001a5ec:	4620      	mov	r0, r4
9001a5ee:	f7ff fcc9 	bl	90019f84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001a5f2:	e7e6      	b.n	9001a5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001a5f4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001a5f8:	2b00      	cmp	r3, #0
9001a5fa:	d0e3      	beq.n	9001a5c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a5fc:	f640 1302 	movw	r3, #2306	; 0x902
9001a600:	429d      	cmp	r5, r3
9001a602:	d1df      	bne.n	9001a5c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001a604:	4601      	mov	r1, r0
9001a606:	4620      	mov	r0, r4
9001a608:	f7ff fc8c 	bl	90019f24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001a60c:	e7d9      	b.n	9001a5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001a60e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001a60e:	b510      	push	{r4, lr}
9001a610:	4604      	mov	r4, r0
9001a612:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
9001a616:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a618:	b1e1      	cbz	r1, 9001a654 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a61a:	2b0a      	cmp	r3, #10
9001a61c:	d02d      	beq.n	9001a67a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a61e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001a620:	3901      	subs	r1, #1
9001a622:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001a626:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
9001a628:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
9001a62c:	1c51      	adds	r1, r2, #1
9001a62e:	b289      	uxth	r1, r1
9001a630:	2901      	cmp	r1, #1
9001a632:	bf8a      	itet	hi
9001a634:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001a638:	87e1      	strhls	r1, [r4, #62]	; 0x3e
9001a63a:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
9001a63c:	1c5a      	adds	r2, r3, #1
9001a63e:	8722      	strh	r2, [r4, #56]	; 0x38
9001a640:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a642:	4413      	add	r3, r2
9001a644:	b29b      	uxth	r3, r3
9001a646:	2b09      	cmp	r3, #9
9001a648:	bf88      	it	hi
9001a64a:	3b0a      	subhi	r3, #10
9001a64c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a650:	8458      	strh	r0, [r3, #34]	; 0x22
9001a652:	e7de      	b.n	9001a612 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001a654:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a656:	2b0a      	cmp	r3, #10
9001a658:	d00f      	beq.n	9001a67a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001a65a:	4620      	mov	r0, r4
9001a65c:	f7ff fc10 	bl	90019e80 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001a660:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001a662:	1c5a      	adds	r2, r3, #1
9001a664:	8722      	strh	r2, [r4, #56]	; 0x38
9001a666:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001a668:	4413      	add	r3, r2
9001a66a:	b29b      	uxth	r3, r3
9001a66c:	2b09      	cmp	r3, #9
9001a66e:	bf88      	it	hi
9001a670:	3b0a      	subhi	r3, #10
9001a672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a676:	8458      	strh	r0, [r3, #34]	; 0x22
9001a678:	e7ec      	b.n	9001a654 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001a67a:	bd10      	pop	{r4, pc}

9001a67c <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001a67c:	b538      	push	{r3, r4, r5, lr}
9001a67e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001a680:	4604      	mov	r4, r0
9001a682:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001a686:	8c55      	ldrh	r5, [r2, #34]	; 0x22
9001a688:	8f02      	ldrh	r2, [r0, #56]	; 0x38
9001a68a:	3a01      	subs	r2, #1
9001a68c:	8702      	strh	r2, [r0, #56]	; 0x38
9001a68e:	1c5a      	adds	r2, r3, #1
9001a690:	b292      	uxth	r2, r2
9001a692:	2a09      	cmp	r2, #9
9001a694:	bf8a      	itet	hi
9001a696:	3b09      	subhi	r3, #9
9001a698:	86c2      	strhls	r2, [r0, #54]	; 0x36
9001a69a:	86c3      	strhhi	r3, [r0, #54]	; 0x36
9001a69c:	f7ff ffb7 	bl	9001a60e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001a6a0:	8c23      	ldrh	r3, [r4, #32]
9001a6a2:	2b01      	cmp	r3, #1
9001a6a4:	bf9c      	itt	ls
9001a6a6:	3301      	addls	r3, #1
9001a6a8:	8423      	strhls	r3, [r4, #32]
9001a6aa:	8be3      	ldrh	r3, [r4, #30]
9001a6ac:	b90b      	cbnz	r3, 9001a6b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001a6ae:	2302      	movs	r3, #2
9001a6b0:	83e3      	strh	r3, [r4, #30]
9001a6b2:	8be3      	ldrh	r3, [r4, #30]
9001a6b4:	4628      	mov	r0, r5
9001a6b6:	3b01      	subs	r3, #1
9001a6b8:	b29b      	uxth	r3, r3
9001a6ba:	83e3      	strh	r3, [r4, #30]
9001a6bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a6c0:	8365      	strh	r5, [r4, #26]
9001a6c2:	bd38      	pop	{r3, r4, r5, pc}

9001a6c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001a6c4:	428a      	cmp	r2, r1
9001a6c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a6ca:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
9001a6cc:	d932      	bls.n	9001a734 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001a6ce:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001a6d0:	1a54      	subs	r4, r2, r1
9001a6d2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
9001a6d6:	19ee      	adds	r6, r5, r7
9001a6d8:	fa1f fe84 	uxth.w	lr, r4
9001a6dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001a6e0:	3e01      	subs	r6, #1
9001a6e2:	b2b4      	uxth	r4, r6
9001a6e4:	eba4 090e 	sub.w	r9, r4, lr
9001a6e8:	fa1f f989 	uxth.w	r9, r9
9001a6ec:	2c09      	cmp	r4, #9
9001a6ee:	4626      	mov	r6, r4
9001a6f0:	bf88      	it	hi
9001a6f2:	f1a4 060a 	subhi.w	r6, r4, #10
9001a6f6:	f1bc 0f00 	cmp.w	ip, #0
9001a6fa:	f104 34ff 	add.w	r4, r4, #4294967295
9001a6fe:	bf08      	it	eq
9001a700:	f04f 0c02 	moveq.w	ip, #2
9001a704:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001a708:	b2a4      	uxth	r4, r4
9001a70a:	f10c 3cff 	add.w	ip, ip, #4294967295
9001a70e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001a712:	454c      	cmp	r4, r9
9001a714:	fa1f fc8c 	uxth.w	ip, ip
9001a718:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001a71c:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001a720:	d1e4      	bne.n	9001a6ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001a722:	eba5 050e 	sub.w	r5, r5, lr
9001a726:	eb0e 0408 	add.w	r4, lr, r8
9001a72a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001a72e:	8705      	strh	r5, [r0, #56]	; 0x38
9001a730:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
9001a734:	8f04      	ldrh	r4, [r0, #56]	; 0x38
9001a736:	250a      	movs	r5, #10
9001a738:	1a64      	subs	r4, r4, r1
9001a73a:	4439      	add	r1, r7
9001a73c:	b289      	uxth	r1, r1
9001a73e:	8704      	strh	r4, [r0, #56]	; 0x38
9001a740:	2909      	cmp	r1, #9
9001a742:	bf88      	it	hi
9001a744:	390a      	subhi	r1, #10
9001a746:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a748:	b18a      	cbz	r2, 9001a76e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001a74a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
9001a74c:	3a01      	subs	r2, #1
9001a74e:	3101      	adds	r1, #1
9001a750:	b292      	uxth	r2, r2
9001a752:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001a756:	8701      	strh	r1, [r0, #56]	; 0x38
9001a758:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a75a:	b901      	cbnz	r1, 9001a75e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001a75c:	86c5      	strh	r5, [r0, #54]	; 0x36
9001a75e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001a760:	3901      	subs	r1, #1
9001a762:	b289      	uxth	r1, r1
9001a764:	86c1      	strh	r1, [r0, #54]	; 0x36
9001a766:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001a76a:	844c      	strh	r4, [r1, #34]	; 0x22
9001a76c:	e7ec      	b.n	9001a748 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001a76e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a772:	f7ff bf4c 	b.w	9001a60e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001a776 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001a776:	b570      	push	{r4, r5, r6, lr}
9001a778:	2500      	movs	r5, #0
9001a77a:	4295      	cmp	r5, r2
9001a77c:	d011      	beq.n	9001a7a2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001a77e:	8bc4      	ldrh	r4, [r0, #30]
9001a780:	f831 6b02 	ldrh.w	r6, [r1], #2
9001a784:	4414      	add	r4, r2
9001a786:	3c01      	subs	r4, #1
9001a788:	1b64      	subs	r4, r4, r5
9001a78a:	b2a4      	uxth	r4, r4
9001a78c:	2c01      	cmp	r4, #1
9001a78e:	bf88      	it	hi
9001a790:	3c02      	subhi	r4, #2
9001a792:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001a796:	8b64      	ldrh	r4, [r4, #26]
9001a798:	42b4      	cmp	r4, r6
9001a79a:	d117      	bne.n	9001a7cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001a79c:	3501      	adds	r5, #1
9001a79e:	b2ad      	uxth	r5, r5
9001a7a0:	e7eb      	b.n	9001a77a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001a7a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001a7a6:	2400      	movs	r4, #0
9001a7a8:	4413      	add	r3, r2
9001a7aa:	b2a2      	uxth	r2, r4
9001a7ac:	429a      	cmp	r2, r3
9001a7ae:	da0f      	bge.n	9001a7d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001a7b0:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001a7b2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001a7b6:	3401      	adds	r4, #1
9001a7b8:	4432      	add	r2, r6
9001a7ba:	b292      	uxth	r2, r2
9001a7bc:	2a09      	cmp	r2, #9
9001a7be:	bf88      	it	hi
9001a7c0:	3a0a      	subhi	r2, #10
9001a7c2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001a7c6:	8c52      	ldrh	r2, [r2, #34]	; 0x22
9001a7c8:	42aa      	cmp	r2, r5
9001a7ca:	d0ee      	beq.n	9001a7aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001a7cc:	2000      	movs	r0, #0
9001a7ce:	bd70      	pop	{r4, r5, r6, pc}
9001a7d0:	2001      	movs	r0, #1
9001a7d2:	e7fc      	b.n	9001a7ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001a7d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001a7d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a7d8:	4605      	mov	r5, r0
9001a7da:	4616      	mov	r6, r2
9001a7dc:	1c8c      	adds	r4, r1, #2
9001a7de:	8809      	ldrh	r1, [r1, #0]
9001a7e0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001a7e4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001a7e8:	42b3      	cmp	r3, r6
9001a7ea:	d124      	bne.n	9001a836 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001a7ec:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001a7f0:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001a7f4:	f001 070f 	and.w	r7, r1, #15
9001a7f8:	4652      	mov	r2, sl
9001a7fa:	f8cd 8000 	str.w	r8, [sp]
9001a7fe:	464b      	mov	r3, r9
9001a800:	4621      	mov	r1, r4
9001a802:	4628      	mov	r0, r5
9001a804:	f7ff ffb7 	bl	9001a776 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001a808:	4683      	mov	fp, r0
9001a80a:	b168      	cbz	r0, 9001a828 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001a80c:	eb0a 0109 	add.w	r1, sl, r9
9001a810:	463a      	mov	r2, r7
9001a812:	4628      	mov	r0, r5
9001a814:	4441      	add	r1, r8
9001a816:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001a81a:	4649      	mov	r1, r9
9001a81c:	f7ff ff52 	bl	9001a6c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001a820:	4658      	mov	r0, fp
9001a822:	b003      	add	sp, #12
9001a824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a828:	eb07 010a 	add.w	r1, r7, sl
9001a82c:	4449      	add	r1, r9
9001a82e:	4441      	add	r1, r8
9001a830:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001a834:	e7d2      	b.n	9001a7dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001a836:	f04f 0b00 	mov.w	fp, #0
9001a83a:	e7f1      	b.n	9001a820 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001a83c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001a83c:	b570      	push	{r4, r5, r6, lr}
9001a83e:	8810      	ldrh	r0, [r2, #0]
9001a840:	4298      	cmp	r0, r3
9001a842:	d817      	bhi.n	9001a874 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a844:	1e48      	subs	r0, r1, #1
9001a846:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001a84a:	4298      	cmp	r0, r3
9001a84c:	d312      	bcc.n	9001a874 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a84e:	2400      	movs	r4, #0
9001a850:	428c      	cmp	r4, r1
9001a852:	d20f      	bcs.n	9001a874 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001a854:	1860      	adds	r0, r4, r1
9001a856:	1040      	asrs	r0, r0, #1
9001a858:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001a85c:	0085      	lsls	r5, r0, #2
9001a85e:	42b3      	cmp	r3, r6
9001a860:	d902      	bls.n	9001a868 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001a862:	3001      	adds	r0, #1
9001a864:	b284      	uxth	r4, r0
9001a866:	e7f3      	b.n	9001a850 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a868:	d201      	bcs.n	9001a86e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001a86a:	b281      	uxth	r1, r0
9001a86c:	e7f0      	b.n	9001a850 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001a86e:	442a      	add	r2, r5
9001a870:	8850      	ldrh	r0, [r2, #2]
9001a872:	bd70      	pop	{r4, r5, r6, pc}
9001a874:	2000      	movs	r0, #0
9001a876:	e7fc      	b.n	9001a872 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001a878 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001a878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001a87c:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001a87e:	4604      	mov	r4, r0
9001a880:	260b      	movs	r6, #11
9001a882:	886f      	ldrh	r7, [r5, #2]
9001a884:	087f      	lsrs	r7, r7, #1
9001a886:	3e01      	subs	r6, #1
9001a888:	d013      	beq.n	9001a8b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a88a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
9001a88c:	462a      	mov	r2, r5
9001a88e:	4639      	mov	r1, r7
9001a890:	4620      	mov	r0, r4
9001a892:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001a896:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
9001a89a:	4643      	mov	r3, r8
9001a89c:	f7ff ffce 	bl	9001a83c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001a8a0:	b138      	cbz	r0, 9001a8b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001a8a2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001a8a6:	4642      	mov	r2, r8
9001a8a8:	4620      	mov	r0, r4
9001a8aa:	f7ff ff93 	bl	9001a7d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001a8ae:	2800      	cmp	r0, #0
9001a8b0:	d1e9      	bne.n	9001a886 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001a8b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001a8b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001a8b8:	b570      	push	{r4, r5, r6, lr}
9001a8ba:	694a      	ldr	r2, [r1, #20]
9001a8bc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001a8be:	684b      	ldr	r3, [r1, #4]
9001a8c0:	1b54      	subs	r4, r2, r5
9001a8c2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
9001a8c4:	f000 8106 	beq.w	9001aad4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001a8c8:	1b9b      	subs	r3, r3, r6
9001a8ca:	d003      	beq.n	9001a8d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001a8cc:	4363      	muls	r3, r4
9001a8ce:	2210      	movs	r2, #16
9001a8d0:	fb93 f3f2 	sdiv	r3, r3, r2
9001a8d4:	680c      	ldr	r4, [r1, #0]
9001a8d6:	698a      	ldr	r2, [r1, #24]
9001a8d8:	1b65      	subs	r5, r4, r5
9001a8da:	f000 80fd 	beq.w	9001aad8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001a8de:	1b92      	subs	r2, r2, r6
9001a8e0:	d003      	beq.n	9001a8ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001a8e2:	436a      	muls	r2, r5
9001a8e4:	2410      	movs	r4, #16
9001a8e6:	fb92 f2f4 	sdiv	r2, r2, r4
9001a8ea:	1a9b      	subs	r3, r3, r2
9001a8ec:	ed9f 4a89 	vldr	s8, [pc, #548]	; 9001ab14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001a8f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a8f4:	460a      	mov	r2, r1
9001a8f6:	ee07 3a90 	vmov	s15, r3
9001a8fa:	f100 040c 	add.w	r4, r0, #12
9001a8fe:	4603      	mov	r3, r0
9001a900:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a904:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a908:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001a90c:	eeb1 6a43 	vneg.f32	s12, s6
9001a910:	edd2 7a02 	vldr	s15, [r2, #8]
9001a914:	3214      	adds	r2, #20
9001a916:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001a91a:	ece3 6a01 	vstmia	r3!, {s13}
9001a91e:	429c      	cmp	r4, r3
9001a920:	ed52 7a02 	vldr	s15, [r2, #-8]
9001a924:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a928:	edc3 7a02 	vstr	s15, [r3, #8]
9001a92c:	ed52 7a01 	vldr	s15, [r2, #-4]
9001a930:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001a934:	edc3 7a05 	vstr	s15, [r3, #20]
9001a938:	d1ea      	bne.n	9001a910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001a93a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001a93c:	698b      	ldr	r3, [r1, #24]
9001a93e:	edd0 4a02 	vldr	s9, [r0, #8]
9001a942:	1a9b      	subs	r3, r3, r2
9001a944:	edd0 3a00 	vldr	s7, [r0]
9001a948:	edd0 6a01 	vldr	s13, [r0, #4]
9001a94c:	ee07 3a90 	vmov	s15, r3
9001a950:	684b      	ldr	r3, [r1, #4]
9001a952:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001a956:	ed90 5a05 	vldr	s10, [r0, #20]
9001a95a:	1a9b      	subs	r3, r3, r2
9001a95c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a960:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001a964:	ed90 2a03 	vldr	s4, [r0, #12]
9001a968:	ee07 3a10 	vmov	s14, r3
9001a96c:	edd0 5a04 	vldr	s11, [r0, #16]
9001a970:	ee67 7a84 	vmul.f32	s15, s15, s8
9001a974:	ed90 1a07 	vldr	s2, [r0, #28]
9001a978:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a97c:	edd0 2a06 	vldr	s5, [r0, #24]
9001a980:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001a984:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001a988:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a98c:	ee32 5a45 	vsub.f32	s10, s4, s10
9001a990:	eee6 7a87 	vfma.f32	s15, s13, s14
9001a994:	ee67 7a83 	vmul.f32	s15, s15, s6
9001a998:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9001a99c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001a99e:	694a      	ldr	r2, [r1, #20]
9001a9a0:	1b13      	subs	r3, r2, r4
9001a9a2:	ee07 3a10 	vmov	s14, r3
9001a9a6:	680b      	ldr	r3, [r1, #0]
9001a9a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a9ac:	1b1b      	subs	r3, r3, r4
9001a9ae:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a9b2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001a9b6:	ee07 3a10 	vmov	s14, r3
9001a9ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a9be:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a9c2:	eee6 4a87 	vfma.f32	s9, s13, s14
9001a9c6:	ee64 4a86 	vmul.f32	s9, s9, s12
9001a9ca:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001a9ce:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001a9d0:	698b      	ldr	r3, [r1, #24]
9001a9d2:	1a9b      	subs	r3, r3, r2
9001a9d4:	ee06 3a90 	vmov	s13, r3
9001a9d8:	684b      	ldr	r3, [r1, #4]
9001a9da:	1a9b      	subs	r3, r3, r2
9001a9dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a9e0:	ee07 3a10 	vmov	s14, r3
9001a9e4:	ee66 6a84 	vmul.f32	s13, s13, s8
9001a9e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a9ec:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001a9f0:	ee27 7a04 	vmul.f32	s14, s14, s8
9001a9f4:	eee5 6a87 	vfma.f32	s13, s11, s14
9001a9f8:	ee66 6a83 	vmul.f32	s13, s13, s6
9001a9fc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001aa00:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001aa02:	694a      	ldr	r2, [r1, #20]
9001aa04:	1b13      	subs	r3, r2, r4
9001aa06:	ee07 3a10 	vmov	s14, r3
9001aa0a:	680b      	ldr	r3, [r1, #0]
9001aa0c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aa10:	1b1b      	subs	r3, r3, r4
9001aa12:	ee27 7a04 	vmul.f32	s14, s14, s8
9001aa16:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001aa1a:	ee07 3a10 	vmov	s14, r3
9001aa1e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aa22:	ee27 7a04 	vmul.f32	s14, s14, s8
9001aa26:	eea5 5a87 	vfma.f32	s10, s11, s14
9001aa2a:	edd0 5a08 	vldr	s11, [r0, #32]
9001aa2e:	ee31 1a65 	vsub.f32	s2, s2, s11
9001aa32:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001aa36:	ee25 5a06 	vmul.f32	s10, s10, s12
9001aa3a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001aa3e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001aa40:	698b      	ldr	r3, [r1, #24]
9001aa42:	1a9b      	subs	r3, r3, r2
9001aa44:	ee07 3a10 	vmov	s14, r3
9001aa48:	684b      	ldr	r3, [r1, #4]
9001aa4a:	1a9b      	subs	r3, r3, r2
9001aa4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001aa50:	ee01 3a90 	vmov	s3, r3
9001aa54:	ee27 7a04 	vmul.f32	s14, s14, s8
9001aa58:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001aa5c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001aa60:	ee61 1a84 	vmul.f32	s3, s3, s8
9001aa64:	eea1 7a21 	vfma.f32	s14, s2, s3
9001aa68:	ee27 7a03 	vmul.f32	s14, s14, s6
9001aa6c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001aa70:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001aa72:	694a      	ldr	r2, [r1, #20]
9001aa74:	1b13      	subs	r3, r2, r4
9001aa76:	ee03 3a10 	vmov	s6, r3
9001aa7a:	680b      	ldr	r3, [r1, #0]
9001aa7c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001aa80:	1b1b      	subs	r3, r3, r4
9001aa82:	ee23 3a04 	vmul.f32	s6, s6, s8
9001aa86:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001aa8a:	ee03 3a10 	vmov	s6, r3
9001aa8e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001aa92:	ee23 4a04 	vmul.f32	s8, s6, s8
9001aa96:	eee1 5a04 	vfma.f32	s11, s2, s8
9001aa9a:	ee25 6a86 	vmul.f32	s12, s11, s12
9001aa9e:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001aaa2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
9001aaa6:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001aaaa:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001aaae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001aab2:	dd13      	ble.n	9001aadc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001aab4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001aab8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001aabc:	63c3      	str	r3, [r0, #60]	; 0x3c
9001aabe:	eee3 7a87 	vfma.f32	s15, s7, s14
9001aac2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001aac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001aaca:	dd15      	ble.n	9001aaf8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001aacc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001aad0:	6403      	str	r3, [r0, #64]	; 0x40
9001aad2:	bd70      	pop	{r4, r5, r6, pc}
9001aad4:	4623      	mov	r3, r4
9001aad6:	e6fd      	b.n	9001a8d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001aad8:	462a      	mov	r2, r5
9001aada:	e706      	b.n	9001a8ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001aadc:	d502      	bpl.n	9001aae4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001aade:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001aae2:	e7e9      	b.n	9001aab8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001aae4:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001aae8:	eea3 2a85 	vfma.f32	s4, s7, s10
9001aaec:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001aaf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001aaf4:	dade      	bge.n	9001aab4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001aaf6:	e7f2      	b.n	9001aade <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001aaf8:	d502      	bpl.n	9001ab00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001aafa:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001aafe:	e7e7      	b.n	9001aad0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001ab00:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001ab04:	eee3 4a86 	vfma.f32	s9, s7, s12
9001ab08:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001ab0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ab10:	dadc      	bge.n	9001aacc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001ab12:	e7f2      	b.n	9001aafa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001ab14:	3d800000 	.word	0x3d800000

9001ab18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001ab18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ab1c:	2714      	movs	r7, #20
9001ab1e:	435f      	muls	r7, r3
9001ab20:	eb02 0c07 	add.w	ip, r2, r7
9001ab24:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001ab28:	f115 0e0f 	adds.w	lr, r5, #15
9001ab2c:	f100 80a2 	bmi.w	9001ac74 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001ab30:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001ab34:	9c08      	ldr	r4, [sp, #32]
9001ab36:	2614      	movs	r6, #20
9001ab38:	f8c0 e014 	str.w	lr, [r0, #20]
9001ab3c:	4366      	muls	r6, r4
9001ab3e:	eb02 0806 	add.w	r8, r2, r6
9001ab42:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001ab46:	f115 040f 	adds.w	r4, r5, #15
9001ab4a:	f100 809f 	bmi.w	9001ac8c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001ab4e:	1124      	asrs	r4, r4, #4
9001ab50:	eba4 040e 	sub.w	r4, r4, lr
9001ab54:	6184      	str	r4, [r0, #24]
9001ab56:	2c00      	cmp	r4, #0
9001ab58:	f000 808a 	beq.w	9001ac70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001ab5c:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001ab60:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001ab64:	5995      	ldr	r5, [r2, r6]
9001ab66:	eba4 0809 	sub.w	r8, r4, r9
9001ab6a:	59d4      	ldr	r4, [r2, r7]
9001ab6c:	eba5 0a04 	sub.w	sl, r5, r4
9001ab70:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001ab74:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001ab78:	fb0e fe05 	mul.w	lr, lr, r5
9001ab7c:	fb0a ee19 	mls	lr, sl, r9, lr
9001ab80:	fb08 e404 	mla	r4, r8, r4, lr
9001ab84:	3c01      	subs	r4, #1
9001ab86:	19a4      	adds	r4, r4, r6
9001ab88:	f100 808c 	bmi.w	9001aca4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001ab8c:	fb94 fef6 	sdiv	lr, r4, r6
9001ab90:	fb06 441e 	mls	r4, r6, lr, r4
9001ab94:	f8c0 e000 	str.w	lr, [r0]
9001ab98:	6104      	str	r4, [r0, #16]
9001ab9a:	2d00      	cmp	r5, #0
9001ab9c:	f2c0 8095 	blt.w	9001acca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001aba0:	fb95 f4f6 	sdiv	r4, r5, r6
9001aba4:	fb06 5514 	mls	r5, r6, r4, r5
9001aba8:	6044      	str	r4, [r0, #4]
9001abaa:	6085      	str	r5, [r0, #8]
9001abac:	60c6      	str	r6, [r0, #12]
9001abae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001abb2:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001abb6:	6945      	ldr	r5, [r0, #20]
9001abb8:	59d2      	ldr	r2, [r2, r7]
9001abba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001abbe:	eddf 6a4b 	vldr	s13, [pc, #300]	; 9001acec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001abc2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001abc6:	ee07 4a10 	vmov	s14, r4
9001abca:	6804      	ldr	r4, [r0, #0]
9001abcc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001abd0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001abd4:	ee07 2a90 	vmov	s15, r2
9001abd8:	ee27 7a26 	vmul.f32	s14, s14, s13
9001abdc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001abe0:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001abe4:	edd3 6a00 	vldr	s13, [r3]
9001abe8:	eee6 6a07 	vfma.f32	s13, s12, s14
9001abec:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001abf0:	eee6 6a27 	vfma.f32	s13, s12, s15
9001abf4:	edc0 6a07 	vstr	s13, [r0, #28]
9001abf8:	edd0 6a01 	vldr	s13, [r0, #4]
9001abfc:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001ac00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001ac04:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
9001ac08:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001ac0c:	ed80 6a08 	vstr	s12, [r0, #32]
9001ac10:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001ac12:	6242      	str	r2, [r0, #36]	; 0x24
9001ac14:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
9001ac18:	ed93 6a03 	vldr	s12, [r3, #12]
9001ac1c:	eea5 6a87 	vfma.f32	s12, s11, s14
9001ac20:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001ac24:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001ac28:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
9001ac2c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001ac30:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
9001ac34:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001ac38:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
9001ac3c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001ac3e:	6302      	str	r2, [r0, #48]	; 0x30
9001ac40:	ed93 6a06 	vldr	s12, [r3, #24]
9001ac44:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
9001ac48:	eea5 6a87 	vfma.f32	s12, s11, s14
9001ac4c:	eeb0 7a46 	vmov.f32	s14, s12
9001ac50:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
9001ac54:	eea6 7a27 	vfma.f32	s14, s12, s15
9001ac58:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001ac5c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001ac60:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
9001ac64:	eee6 7a87 	vfma.f32	s15, s13, s14
9001ac68:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9001ac6c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001ac6e:	63c3      	str	r3, [r0, #60]	; 0x3c
9001ac70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ac74:	2410      	movs	r4, #16
9001ac76:	f1c5 0501 	rsb	r5, r5, #1
9001ac7a:	fb9e fef4 	sdiv	lr, lr, r4
9001ac7e:	f015 050f 	ands.w	r5, r5, #15
9001ac82:	bf18      	it	ne
9001ac84:	2501      	movne	r5, #1
9001ac86:	ebae 0e05 	sub.w	lr, lr, r5
9001ac8a:	e753      	b.n	9001ab34 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001ac8c:	f04f 0910 	mov.w	r9, #16
9001ac90:	f1c5 0501 	rsb	r5, r5, #1
9001ac94:	fb94 f4f9 	sdiv	r4, r4, r9
9001ac98:	f015 050f 	ands.w	r5, r5, #15
9001ac9c:	bf18      	it	ne
9001ac9e:	2501      	movne	r5, #1
9001aca0:	1b64      	subs	r4, r4, r5
9001aca2:	e755      	b.n	9001ab50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001aca4:	4264      	negs	r4, r4
9001aca6:	fb94 fef6 	sdiv	lr, r4, r6
9001acaa:	f1ce 0800 	rsb	r8, lr, #0
9001acae:	fb06 441e 	mls	r4, r6, lr, r4
9001acb2:	f8c0 8000 	str.w	r8, [r0]
9001acb6:	6104      	str	r4, [r0, #16]
9001acb8:	2c00      	cmp	r4, #0
9001acba:	f43f af6e 	beq.w	9001ab9a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001acbe:	ea6f 0e0e 	mvn.w	lr, lr
9001acc2:	1b34      	subs	r4, r6, r4
9001acc4:	f8c0 e000 	str.w	lr, [r0]
9001acc8:	e766      	b.n	9001ab98 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001acca:	426d      	negs	r5, r5
9001accc:	fb95 f4f6 	sdiv	r4, r5, r6
9001acd0:	f1c4 0e00 	rsb	lr, r4, #0
9001acd4:	fb06 5514 	mls	r5, r6, r4, r5
9001acd8:	f8c0 e004 	str.w	lr, [r0, #4]
9001acdc:	6085      	str	r5, [r0, #8]
9001acde:	2d00      	cmp	r5, #0
9001ace0:	f43f af64 	beq.w	9001abac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001ace4:	43e4      	mvns	r4, r4
9001ace6:	1b75      	subs	r5, r6, r5
9001ace8:	6044      	str	r4, [r0, #4]
9001acea:	e75e      	b.n	9001abaa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001acec:	3d800000 	.word	0x3d800000

9001acf0 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001acf0:	4602      	mov	r2, r0
9001acf2:	b148      	cbz	r0, 9001ad08 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001acf4:	2300      	movs	r3, #0
9001acf6:	b298      	uxth	r0, r3
9001acf8:	3301      	adds	r3, #1
9001acfa:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001acfe:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001ad02:	2900      	cmp	r1, #0
9001ad04:	d1f7      	bne.n	9001acf6 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001ad06:	4770      	bx	lr
9001ad08:	4770      	bx	lr

9001ad0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
9001ad0a:	b530      	push	{r4, r5, lr}
9001ad0c:	4604      	mov	r4, r0
9001ad0e:	b159      	cbz	r1, 9001ad28 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001ad10:	b148      	cbz	r0, 9001ad26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ad12:	2300      	movs	r3, #0
9001ad14:	b298      	uxth	r0, r3
9001ad16:	4282      	cmp	r2, r0
9001ad18:	d905      	bls.n	9001ad26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001ad1a:	5ccd      	ldrb	r5, [r1, r3]
9001ad1c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001ad20:	3301      	adds	r3, #1
9001ad22:	2d00      	cmp	r5, #0
9001ad24:	d1f6      	bne.n	9001ad14 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001ad26:	bd30      	pop	{r4, r5, pc}
9001ad28:	4608      	mov	r0, r1
9001ad2a:	e7fc      	b.n	9001ad26 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

9001ad2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
9001ad2c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ad2e:	b08b      	sub	sp, #44	; 0x2c
9001ad30:	468c      	mov	ip, r1
9001ad32:	4604      	mov	r4, r0
9001ad34:	2100      	movs	r1, #0
9001ad36:	261f      	movs	r6, #31
9001ad38:	af01      	add	r7, sp, #4
9001ad3a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001ad3e:	1e71      	subs	r1, r6, #1
9001ad40:	fb94 fef3 	sdiv	lr, r4, r3
9001ad44:	fb03 441e 	mls	r4, r3, lr, r4
9001ad48:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
9001ad4c:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001ad50:	b2ec      	uxtb	r4, r5
9001ad52:	2d09      	cmp	r5, #9
9001ad54:	bfd4      	ite	le
9001ad56:	3430      	addle	r4, #48	; 0x30
9001ad58:	3457      	addgt	r4, #87	; 0x57
9001ad5a:	b2e4      	uxtb	r4, r4
9001ad5c:	55bc      	strb	r4, [r7, r6]
9001ad5e:	4674      	mov	r4, lr
9001ad60:	b974      	cbnz	r4, 9001ad80 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001ad62:	2800      	cmp	r0, #0
9001ad64:	da05      	bge.n	9001ad72 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001ad66:	ab0a      	add	r3, sp, #40	; 0x28
9001ad68:	4419      	add	r1, r3
9001ad6a:	232d      	movs	r3, #45	; 0x2d
9001ad6c:	f801 3c24 	strb.w	r3, [r1, #-36]
9001ad70:	1eb1      	subs	r1, r6, #2
9001ad72:	3101      	adds	r1, #1
9001ad74:	4660      	mov	r0, ip
9001ad76:	4439      	add	r1, r7
9001ad78:	f7ff ffc7 	bl	9001ad0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001ad7c:	b00b      	add	sp, #44	; 0x2c
9001ad7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ad80:	460e      	mov	r6, r1
9001ad82:	e7dc      	b.n	9001ad3e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

9001ad84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
9001ad84:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ad86:	468c      	mov	ip, r1
9001ad88:	b08b      	sub	sp, #44	; 0x2c
9001ad8a:	2100      	movs	r1, #0
9001ad8c:	ae01      	add	r6, sp, #4
9001ad8e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001ad92:	211f      	movs	r1, #31
9001ad94:	fbb0 f7f3 	udiv	r7, r0, r3
9001ad98:	fb03 0517 	mls	r5, r3, r7, r0
9001ad9c:	4638      	mov	r0, r7
9001ad9e:	b2ec      	uxtb	r4, r5
9001ada0:	2d09      	cmp	r5, #9
9001ada2:	bfd4      	ite	le
9001ada4:	3430      	addle	r4, #48	; 0x30
9001ada6:	3457      	addgt	r4, #87	; 0x57
9001ada8:	b2e4      	uxtb	r4, r4
9001adaa:	558c      	strb	r4, [r1, r6]
9001adac:	1e4c      	subs	r4, r1, #1
9001adae:	b92f      	cbnz	r7, 9001adbc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001adb0:	4431      	add	r1, r6
9001adb2:	4660      	mov	r0, ip
9001adb4:	f7ff ffa9 	bl	9001ad0a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001adb8:	b00b      	add	sp, #44	; 0x2c
9001adba:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001adbc:	4621      	mov	r1, r4
9001adbe:	e7e9      	b.n	9001ad94 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001adc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001adc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001adc4:	b085      	sub	sp, #20
9001adc6:	4691      	mov	r9, r2
9001adc8:	6802      	ldr	r2, [r0, #0]
9001adca:	4688      	mov	r8, r1
9001adcc:	461c      	mov	r4, r3
9001adce:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001add2:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
9001add6:	4683      	mov	fp, r0
9001add8:	4610      	mov	r0, r2
9001adda:	9103      	str	r1, [sp, #12]
9001addc:	9302      	str	r3, [sp, #8]
9001adde:	9201      	str	r2, [sp, #4]
9001ade0:	f7ff ff86 	bl	9001acf0 <_ZN8touchgfx7Unicode6strlenEPKt>
9001ade4:	f1b8 0f00 	cmp.w	r8, #0
9001ade8:	bf0c      	ite	eq
9001adea:	4684      	moveq	ip, r0
9001adec:	f100 0c01 	addne.w	ip, r0, #1
9001adf0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
9001adf4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
9001adf8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001adfa:	fa1f fc8c 	uxth.w	ip, ip
9001adfe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ae00:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
9001ae04:	9903      	ldr	r1, [sp, #12]
9001ae06:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
9001ae0a:	d041      	beq.n	9001ae90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001ae0c:	d834      	bhi.n	9001ae78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
9001ae0e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
9001ae12:	d059      	beq.n	9001aec8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
9001ae14:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
9001ae18:	d03a      	beq.n	9001ae90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
9001ae1a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001ae1e:	d034      	beq.n	9001ae8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001ae20:	2400      	movs	r4, #0
9001ae22:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001ae26:	3a01      	subs	r2, #1
9001ae28:	b169      	cbz	r1, 9001ae46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001ae2a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001ae2c:	458c      	cmp	ip, r1
9001ae2e:	da09      	bge.n	9001ae44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001ae30:	eba1 010c 	sub.w	r1, r1, ip
9001ae34:	b289      	uxth	r1, r1
9001ae36:	b933      	cbnz	r3, 9001ae46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001ae38:	2e00      	cmp	r6, #0
9001ae3a:	d051      	beq.n	9001aee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001ae3c:	2800      	cmp	r0, #0
9001ae3e:	d04f      	beq.n	9001aee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001ae40:	440c      	add	r4, r1
9001ae42:	b2a4      	uxth	r4, r4
9001ae44:	2100      	movs	r1, #0
9001ae46:	682b      	ldr	r3, [r5, #0]
9001ae48:	4293      	cmp	r3, r2
9001ae4a:	da07      	bge.n	9001ae5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001ae4c:	f1b8 0f00 	cmp.w	r8, #0
9001ae50:	d004      	beq.n	9001ae5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001ae52:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001ae56:	682b      	ldr	r3, [r5, #0]
9001ae58:	3301      	adds	r3, #1
9001ae5a:	602b      	str	r3, [r5, #0]
9001ae5c:	2730      	movs	r7, #48	; 0x30
9001ae5e:	2c00      	cmp	r4, #0
9001ae60:	d04e      	beq.n	9001af00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001ae62:	682e      	ldr	r6, [r5, #0]
9001ae64:	3c01      	subs	r4, #1
9001ae66:	42b2      	cmp	r2, r6
9001ae68:	b2a4      	uxth	r4, r4
9001ae6a:	dd49      	ble.n	9001af00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001ae6c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001ae70:	682b      	ldr	r3, [r5, #0]
9001ae72:	3301      	adds	r3, #1
9001ae74:	602b      	str	r3, [r5, #0]
9001ae76:	e7f2      	b.n	9001ae5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001ae78:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
9001ae7c:	d01d      	beq.n	9001aeba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001ae7e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001ae82:	d002      	beq.n	9001ae8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001ae84:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
9001ae88:	e7c9      	b.n	9001ae1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001ae8a:	4684      	mov	ip, r0
9001ae8c:	f04f 0800 	mov.w	r8, #0
9001ae90:	2c00      	cmp	r4, #0
9001ae92:	d0c6      	beq.n	9001ae22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001ae94:	b947      	cbnz	r7, 9001aea8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001ae96:	2801      	cmp	r0, #1
9001ae98:	d106      	bne.n	9001aea8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001ae9a:	8814      	ldrh	r4, [r2, #0]
9001ae9c:	2c30      	cmp	r4, #48	; 0x30
9001ae9e:	bf02      	ittt	eq
9001aea0:	3202      	addeq	r2, #2
9001aea2:	4638      	moveq	r0, r7
9001aea4:	f8cb 2000 	streq.w	r2, [fp]
9001aea8:	45bc      	cmp	ip, r7
9001aeaa:	da14      	bge.n	9001aed6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
9001aeac:	b2bf      	uxth	r7, r7
9001aeae:	eba7 040c 	sub.w	r4, r7, ip
9001aeb2:	46bc      	mov	ip, r7
9001aeb4:	b2a4      	uxth	r4, r4
9001aeb6:	2600      	movs	r6, #0
9001aeb8:	e7b3      	b.n	9001ae22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001aeba:	4684      	mov	ip, r0
9001aebc:	b16c      	cbz	r4, 9001aeda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001aebe:	42b8      	cmp	r0, r7
9001aec0:	dd00      	ble.n	9001aec4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001aec2:	b2b8      	uxth	r0, r7
9001aec4:	2400      	movs	r4, #0
9001aec6:	e003      	b.n	9001aed0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
9001aec8:	f04f 0c01 	mov.w	ip, #1
9001aecc:	2400      	movs	r4, #0
9001aece:	4660      	mov	r0, ip
9001aed0:	4626      	mov	r6, r4
9001aed2:	46a0      	mov	r8, r4
9001aed4:	e7a5      	b.n	9001ae22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001aed6:	2400      	movs	r4, #0
9001aed8:	e7ed      	b.n	9001aeb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
9001aeda:	4626      	mov	r6, r4
9001aedc:	46a0      	mov	r8, r4
9001aede:	e7a0      	b.n	9001ae22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001aee0:	2900      	cmp	r1, #0
9001aee2:	d0b0      	beq.n	9001ae46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001aee4:	2720      	movs	r7, #32
9001aee6:	682e      	ldr	r6, [r5, #0]
9001aee8:	2900      	cmp	r1, #0
9001aeea:	d0ac      	beq.n	9001ae46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001aeec:	3901      	subs	r1, #1
9001aeee:	4296      	cmp	r6, r2
9001aef0:	b289      	uxth	r1, r1
9001aef2:	daa7      	bge.n	9001ae44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001aef4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001aef8:	682b      	ldr	r3, [r5, #0]
9001aefa:	3301      	adds	r3, #1
9001aefc:	602b      	str	r3, [r5, #0]
9001aefe:	e7f2      	b.n	9001aee6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
9001af00:	b188      	cbz	r0, 9001af26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001af02:	682b      	ldr	r3, [r5, #0]
9001af04:	3801      	subs	r0, #1
9001af06:	429a      	cmp	r2, r3
9001af08:	b280      	uxth	r0, r0
9001af0a:	dd0c      	ble.n	9001af26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
9001af0c:	f8db 3000 	ldr.w	r3, [fp]
9001af10:	1c9c      	adds	r4, r3, #2
9001af12:	f8cb 4000 	str.w	r4, [fp]
9001af16:	881c      	ldrh	r4, [r3, #0]
9001af18:	682b      	ldr	r3, [r5, #0]
9001af1a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
9001af1e:	682b      	ldr	r3, [r5, #0]
9001af20:	3301      	adds	r3, #1
9001af22:	602b      	str	r3, [r5, #0]
9001af24:	e7ec      	b.n	9001af00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001af26:	2620      	movs	r6, #32
9001af28:	b151      	cbz	r1, 9001af40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001af2a:	6828      	ldr	r0, [r5, #0]
9001af2c:	3901      	subs	r1, #1
9001af2e:	4282      	cmp	r2, r0
9001af30:	b289      	uxth	r1, r1
9001af32:	dd05      	ble.n	9001af40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001af34:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001af38:	682b      	ldr	r3, [r5, #0]
9001af3a:	3301      	adds	r3, #1
9001af3c:	602b      	str	r3, [r5, #0]
9001af3e:	e7f3      	b.n	9001af28 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
9001af40:	b005      	add	sp, #20
9001af42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001af46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001af46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001af4a:	2400      	movs	r4, #0
9001af4c:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001af50:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
9001af54:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
9001af58:	8014      	strh	r4, [r2, #0]
9001af5a:	701c      	strb	r4, [r3, #0]
9001af5c:	f888 4000 	strb.w	r4, [r8]
9001af60:	f88c 4000 	strb.w	r4, [ip]
9001af64:	f88e 4000 	strb.w	r4, [lr]
9001af68:	703c      	strb	r4, [r7, #0]
9001af6a:	6804      	ldr	r4, [r0, #0]
9001af6c:	b1a4      	cbz	r4, 9001af98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001af6e:	8824      	ldrh	r4, [r4, #0]
9001af70:	f04f 0901 	mov.w	r9, #1
9001af74:	b314      	cbz	r4, 9001afbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001af76:	2c2b      	cmp	r4, #43	; 0x2b
9001af78:	d001      	beq.n	9001af7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001af7a:	2c20      	cmp	r4, #32
9001af7c:	d110      	bne.n	9001afa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001af7e:	8014      	strh	r4, [r2, #0]
9001af80:	6804      	ldr	r4, [r0, #0]
9001af82:	b10c      	cbz	r4, 9001af88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
9001af84:	3402      	adds	r4, #2
9001af86:	6004      	str	r4, [r0, #0]
9001af88:	680c      	ldr	r4, [r1, #0]
9001af8a:	b10c      	cbz	r4, 9001af90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
9001af8c:	3401      	adds	r4, #1
9001af8e:	600c      	str	r4, [r1, #0]
9001af90:	6804      	ldr	r4, [r0, #0]
9001af92:	b17c      	cbz	r4, 9001afb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
9001af94:	8824      	ldrh	r4, [r4, #0]
9001af96:	e7ed      	b.n	9001af74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001af98:	680c      	ldr	r4, [r1, #0]
9001af9a:	b17c      	cbz	r4, 9001afbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001af9c:	7824      	ldrb	r4, [r4, #0]
9001af9e:	e7e7      	b.n	9001af70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001afa0:	2c2d      	cmp	r4, #45	; 0x2d
9001afa2:	d102      	bne.n	9001afaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
9001afa4:	f883 9000 	strb.w	r9, [r3]
9001afa8:	e7ea      	b.n	9001af80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001afaa:	2c23      	cmp	r4, #35	; 0x23
9001afac:	d107      	bne.n	9001afbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001afae:	f888 9000 	strb.w	r9, [r8]
9001afb2:	e7e5      	b.n	9001af80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001afb4:	680c      	ldr	r4, [r1, #0]
9001afb6:	b10c      	cbz	r4, 9001afbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001afb8:	7824      	ldrb	r4, [r4, #0]
9001afba:	e7db      	b.n	9001af74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001afbc:	2400      	movs	r4, #0
9001afbe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001afc2:	2b09      	cmp	r3, #9
9001afc4:	d901      	bls.n	9001afca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
9001afc6:	2c2a      	cmp	r4, #42	; 0x2a
9001afc8:	d122      	bne.n	9001b010 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001afca:	2301      	movs	r3, #1
9001afcc:	2c30      	cmp	r4, #48	; 0x30
9001afce:	f88e 3000 	strb.w	r3, [lr]
9001afd2:	d10d      	bne.n	9001aff0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001afd4:	f88c 3000 	strb.w	r3, [ip]
9001afd8:	6803      	ldr	r3, [r0, #0]
9001afda:	b10b      	cbz	r3, 9001afe0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
9001afdc:	3302      	adds	r3, #2
9001afde:	6003      	str	r3, [r0, #0]
9001afe0:	680b      	ldr	r3, [r1, #0]
9001afe2:	b10b      	cbz	r3, 9001afe8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
9001afe4:	3301      	adds	r3, #1
9001afe6:	600b      	str	r3, [r1, #0]
9001afe8:	6803      	ldr	r3, [r0, #0]
9001afea:	2b00      	cmp	r3, #0
9001afec:	d02f      	beq.n	9001b04e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
9001afee:	881c      	ldrh	r4, [r3, #0]
9001aff0:	2c2a      	cmp	r4, #42	; 0x2a
9001aff2:	d135      	bne.n	9001b060 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001aff4:	f04f 33ff 	mov.w	r3, #4294967295
9001aff8:	6033      	str	r3, [r6, #0]
9001affa:	6803      	ldr	r3, [r0, #0]
9001affc:	b10b      	cbz	r3, 9001b002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
9001affe:	3302      	adds	r3, #2
9001b000:	6003      	str	r3, [r0, #0]
9001b002:	680b      	ldr	r3, [r1, #0]
9001b004:	b10b      	cbz	r3, 9001b00a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
9001b006:	3301      	adds	r3, #1
9001b008:	600b      	str	r3, [r1, #0]
9001b00a:	6803      	ldr	r3, [r0, #0]
9001b00c:	b31b      	cbz	r3, 9001b056 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
9001b00e:	881c      	ldrh	r4, [r3, #0]
9001b010:	2c2e      	cmp	r4, #46	; 0x2e
9001b012:	d11a      	bne.n	9001b04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b014:	2301      	movs	r3, #1
9001b016:	703b      	strb	r3, [r7, #0]
9001b018:	6803      	ldr	r3, [r0, #0]
9001b01a:	b10b      	cbz	r3, 9001b020 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
9001b01c:	3302      	adds	r3, #2
9001b01e:	6003      	str	r3, [r0, #0]
9001b020:	680b      	ldr	r3, [r1, #0]
9001b022:	b10b      	cbz	r3, 9001b028 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
9001b024:	3301      	adds	r3, #1
9001b026:	600b      	str	r3, [r1, #0]
9001b028:	6803      	ldr	r3, [r0, #0]
9001b02a:	2b00      	cmp	r3, #0
9001b02c:	d036      	beq.n	9001b09c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
9001b02e:	881b      	ldrh	r3, [r3, #0]
9001b030:	2b2a      	cmp	r3, #42	; 0x2a
9001b032:	d137      	bne.n	9001b0a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b034:	f04f 33ff 	mov.w	r3, #4294967295
9001b038:	602b      	str	r3, [r5, #0]
9001b03a:	6803      	ldr	r3, [r0, #0]
9001b03c:	b10b      	cbz	r3, 9001b042 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
9001b03e:	3302      	adds	r3, #2
9001b040:	6003      	str	r3, [r0, #0]
9001b042:	680b      	ldr	r3, [r1, #0]
9001b044:	b10b      	cbz	r3, 9001b04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b046:	3301      	adds	r3, #1
9001b048:	600b      	str	r3, [r1, #0]
9001b04a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001b04e:	680c      	ldr	r4, [r1, #0]
9001b050:	b134      	cbz	r4, 9001b060 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001b052:	7824      	ldrb	r4, [r4, #0]
9001b054:	e7cc      	b.n	9001aff0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001b056:	680b      	ldr	r3, [r1, #0]
9001b058:	2b00      	cmp	r3, #0
9001b05a:	d0f6      	beq.n	9001b04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001b05c:	781c      	ldrb	r4, [r3, #0]
9001b05e:	e7d7      	b.n	9001b010 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b060:	2300      	movs	r3, #0
9001b062:	220a      	movs	r2, #10
9001b064:	6033      	str	r3, [r6, #0]
9001b066:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
9001b06a:	fa1f f38c 	uxth.w	r3, ip
9001b06e:	2b09      	cmp	r3, #9
9001b070:	d8ce      	bhi.n	9001b010 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001b072:	6833      	ldr	r3, [r6, #0]
9001b074:	fb02 c303 	mla	r3, r2, r3, ip
9001b078:	6033      	str	r3, [r6, #0]
9001b07a:	6803      	ldr	r3, [r0, #0]
9001b07c:	b10b      	cbz	r3, 9001b082 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001b07e:	3302      	adds	r3, #2
9001b080:	6003      	str	r3, [r0, #0]
9001b082:	680b      	ldr	r3, [r1, #0]
9001b084:	b10b      	cbz	r3, 9001b08a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001b086:	3301      	adds	r3, #1
9001b088:	600b      	str	r3, [r1, #0]
9001b08a:	6803      	ldr	r3, [r0, #0]
9001b08c:	b10b      	cbz	r3, 9001b092 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001b08e:	881c      	ldrh	r4, [r3, #0]
9001b090:	e7e9      	b.n	9001b066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b092:	680c      	ldr	r4, [r1, #0]
9001b094:	2c00      	cmp	r4, #0
9001b096:	d0e6      	beq.n	9001b066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b098:	7824      	ldrb	r4, [r4, #0]
9001b09a:	e7e4      	b.n	9001b066 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001b09c:	680b      	ldr	r3, [r1, #0]
9001b09e:	b10b      	cbz	r3, 9001b0a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001b0a0:	781b      	ldrb	r3, [r3, #0]
9001b0a2:	e7c5      	b.n	9001b030 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
9001b0a4:	2200      	movs	r2, #0
9001b0a6:	240a      	movs	r4, #10
9001b0a8:	602a      	str	r2, [r5, #0]
9001b0aa:	3b30      	subs	r3, #48	; 0x30
9001b0ac:	682a      	ldr	r2, [r5, #0]
9001b0ae:	b29e      	uxth	r6, r3
9001b0b0:	2e09      	cmp	r6, #9
9001b0b2:	d813      	bhi.n	9001b0dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
9001b0b4:	fb04 3302 	mla	r3, r4, r2, r3
9001b0b8:	602b      	str	r3, [r5, #0]
9001b0ba:	6803      	ldr	r3, [r0, #0]
9001b0bc:	b10b      	cbz	r3, 9001b0c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001b0be:	3302      	adds	r3, #2
9001b0c0:	6003      	str	r3, [r0, #0]
9001b0c2:	680b      	ldr	r3, [r1, #0]
9001b0c4:	b10b      	cbz	r3, 9001b0ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
9001b0c6:	3301      	adds	r3, #1
9001b0c8:	600b      	str	r3, [r1, #0]
9001b0ca:	6803      	ldr	r3, [r0, #0]
9001b0cc:	b10b      	cbz	r3, 9001b0d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001b0ce:	881b      	ldrh	r3, [r3, #0]
9001b0d0:	e7eb      	b.n	9001b0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b0d2:	680b      	ldr	r3, [r1, #0]
9001b0d4:	2b00      	cmp	r3, #0
9001b0d6:	d0e8      	beq.n	9001b0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b0d8:	781b      	ldrb	r3, [r3, #0]
9001b0da:	e7e6      	b.n	9001b0aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001b0dc:	2a06      	cmp	r2, #6
9001b0de:	bfa8      	it	ge
9001b0e0:	2206      	movge	r2, #6
9001b0e2:	602a      	str	r2, [r5, #0]
9001b0e4:	e7b1      	b.n	9001b04a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

9001b0e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
9001b0e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b0ea:	b0a3      	sub	sp, #140	; 0x8c
9001b0ec:	2600      	movs	r6, #0
9001b0ee:	4607      	mov	r7, r0
9001b0f0:	4688      	mov	r8, r1
9001b0f2:	f10d 0944 	add.w	r9, sp, #68	; 0x44
9001b0f6:	4631      	mov	r1, r6
9001b0f8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
9001b0fa:	4648      	mov	r0, r9
9001b0fc:	960d      	str	r6, [sp, #52]	; 0x34
9001b0fe:	e9cd 3208 	strd	r3, r2, [sp, #32]
9001b102:	2242      	movs	r2, #66	; 0x42
9001b104:	f00e fc64 	bl	900299d0 <memset>
9001b108:	b15f      	cbz	r7, 9001b122 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
9001b10a:	f108 3aff 	add.w	sl, r8, #4294967295
9001b10e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b110:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b112:	b152      	cbz	r2, 9001b12a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
9001b114:	8812      	ldrh	r2, [r2, #0]
9001b116:	b10a      	cbz	r2, 9001b11c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b118:	459a      	cmp	sl, r3
9001b11a:	dc2e      	bgt.n	9001b17a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
9001b11c:	2200      	movs	r2, #0
9001b11e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b122:	4638      	mov	r0, r7
9001b124:	b023      	add	sp, #140	; 0x8c
9001b126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b12a:	9a08      	ldr	r2, [sp, #32]
9001b12c:	2a00      	cmp	r2, #0
9001b12e:	d0f5      	beq.n	9001b11c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
9001b130:	7812      	ldrb	r2, [r2, #0]
9001b132:	e7f0      	b.n	9001b116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
9001b134:	2d00      	cmp	r5, #0
9001b136:	d0ea      	beq.n	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b138:	782a      	ldrb	r2, [r5, #0]
9001b13a:	b142      	cbz	r2, 9001b14e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
9001b13c:	2a25      	cmp	r2, #37	; 0x25
9001b13e:	d001      	beq.n	9001b144 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
9001b140:	459a      	cmp	sl, r3
9001b142:	dc08      	bgt.n	9001b156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
9001b144:	f1bb 0f00 	cmp.w	fp, #0
9001b148:	d121      	bne.n	9001b18e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001b14a:	2d00      	cmp	r5, #0
9001b14c:	d0df      	beq.n	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b14e:	782a      	ldrb	r2, [r5, #0]
9001b150:	f04f 0b00 	mov.w	fp, #0
9001b154:	e01d      	b.n	9001b192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001b156:	f1bb 0f00 	cmp.w	fp, #0
9001b15a:	d077      	beq.n	9001b24c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
9001b15c:	f8bb 2000 	ldrh.w	r2, [fp]
9001b160:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
9001b164:	f1bb 0f00 	cmp.w	fp, #0
9001b168:	d002      	beq.n	9001b170 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001b16a:	f10b 0202 	add.w	r2, fp, #2
9001b16e:	9209      	str	r2, [sp, #36]	; 0x24
9001b170:	b10d      	cbz	r5, 9001b176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001b172:	3501      	adds	r5, #1
9001b174:	9508      	str	r5, [sp, #32]
9001b176:	3301      	adds	r3, #1
9001b178:	930d      	str	r3, [sp, #52]	; 0x34
9001b17a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b17c:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001b180:	f1bb 0f00 	cmp.w	fp, #0
9001b184:	d0d6      	beq.n	9001b134 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001b186:	f8bb 2000 	ldrh.w	r2, [fp]
9001b18a:	2a00      	cmp	r2, #0
9001b18c:	d1d6      	bne.n	9001b13c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001b18e:	f8bb 2000 	ldrh.w	r2, [fp]
9001b192:	2a00      	cmp	r2, #0
9001b194:	d0bb      	beq.n	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b196:	459a      	cmp	sl, r3
9001b198:	ddb9      	ble.n	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b19a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001b19e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001b1a2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
9001b1a6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
9001b1aa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001b1ae:	960e      	str	r6, [sp, #56]	; 0x38
9001b1b0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
9001b1b4:	960f      	str	r6, [sp, #60]	; 0x3c
9001b1b6:	f1bb 0f00 	cmp.w	fp, #0
9001b1ba:	d002      	beq.n	9001b1c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
9001b1bc:	f10b 0302 	add.w	r3, fp, #2
9001b1c0:	9309      	str	r3, [sp, #36]	; 0x24
9001b1c2:	b10d      	cbz	r5, 9001b1c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
9001b1c4:	1c6b      	adds	r3, r5, #1
9001b1c6:	9308      	str	r3, [sp, #32]
9001b1c8:	ab0f      	add	r3, sp, #60	; 0x3c
9001b1ca:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001b1ce:	a908      	add	r1, sp, #32
9001b1d0:	a809      	add	r0, sp, #36	; 0x24
9001b1d2:	9305      	str	r3, [sp, #20]
9001b1d4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
9001b1d8:	9304      	str	r3, [sp, #16]
9001b1da:	ab0e      	add	r3, sp, #56	; 0x38
9001b1dc:	9303      	str	r3, [sp, #12]
9001b1de:	ab0c      	add	r3, sp, #48	; 0x30
9001b1e0:	9302      	str	r3, [sp, #8]
9001b1e2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
9001b1e6:	9301      	str	r3, [sp, #4]
9001b1e8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
9001b1ec:	9300      	str	r3, [sp, #0]
9001b1ee:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
9001b1f2:	f7ff fea8 	bl	9001af46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
9001b1f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b1f8:	2b00      	cmp	r3, #0
9001b1fa:	bfbf      	itttt	lt
9001b1fc:	6823      	ldrlt	r3, [r4, #0]
9001b1fe:	3404      	addlt	r4, #4
9001b200:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b204:	930e      	strlt	r3, [sp, #56]	; 0x38
9001b206:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001b208:	2b00      	cmp	r3, #0
9001b20a:	bfbe      	ittt	lt
9001b20c:	6823      	ldrlt	r3, [r4, #0]
9001b20e:	3404      	addlt	r4, #4
9001b210:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
9001b214:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001b218:	bfb8      	it	lt
9001b21a:	930f      	strlt	r3, [sp, #60]	; 0x3c
9001b21c:	b1d9      	cbz	r1, 9001b256 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
9001b21e:	880b      	ldrh	r3, [r1, #0]
9001b220:	2b69      	cmp	r3, #105	; 0x69
9001b222:	d01f      	beq.n	9001b264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b224:	d82f      	bhi.n	9001b286 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
9001b226:	2b58      	cmp	r3, #88	; 0x58
9001b228:	d01c      	beq.n	9001b264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b22a:	d818      	bhi.n	9001b25e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
9001b22c:	2b25      	cmp	r3, #37	; 0x25
9001b22e:	d034      	beq.n	9001b29a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
9001b230:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b232:	e9cd 5b08 	strd	r5, fp, [sp, #32]
9001b236:	f1bb 0f00 	cmp.w	fp, #0
9001b23a:	f000 80b7 	beq.w	9001b3ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
9001b23e:	f8bb 5000 	ldrh.w	r5, [fp]
9001b242:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
9001b246:	3301      	adds	r3, #1
9001b248:	930d      	str	r3, [sp, #52]	; 0x34
9001b24a:	e029      	b.n	9001b2a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b24c:	b10d      	cbz	r5, 9001b252 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001b24e:	782a      	ldrb	r2, [r5, #0]
9001b250:	e786      	b.n	9001b160 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b252:	462a      	mov	r2, r5
9001b254:	e784      	b.n	9001b160 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001b256:	2a00      	cmp	r2, #0
9001b258:	d0ea      	beq.n	9001b230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b25a:	7813      	ldrb	r3, [r2, #0]
9001b25c:	e7e0      	b.n	9001b220 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001b25e:	3b63      	subs	r3, #99	; 0x63
9001b260:	2b01      	cmp	r3, #1
9001b262:	d8e5      	bhi.n	9001b230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b264:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
9001b268:	b329      	cbz	r1, 9001b2b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
9001b26a:	880b      	ldrh	r3, [r1, #0]
9001b26c:	2b69      	cmp	r3, #105	; 0x69
9001b26e:	d063      	beq.n	9001b338 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b270:	d825      	bhi.n	9001b2be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001b272:	2b63      	cmp	r3, #99	; 0x63
9001b274:	d038      	beq.n	9001b2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
9001b276:	2b64      	cmp	r3, #100	; 0x64
9001b278:	d05e      	beq.n	9001b338 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001b27a:	2b58      	cmp	r3, #88	; 0x58
9001b27c:	d07a      	beq.n	9001b374 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001b27e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001b282:	4625      	mov	r5, r4
9001b284:	e036      	b.n	9001b2f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b286:	2b73      	cmp	r3, #115	; 0x73
9001b288:	d0ec      	beq.n	9001b264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b28a:	d802      	bhi.n	9001b292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
9001b28c:	2b6f      	cmp	r3, #111	; 0x6f
9001b28e:	d1cf      	bne.n	9001b230 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001b290:	e7e8      	b.n	9001b264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b292:	2b75      	cmp	r3, #117	; 0x75
9001b294:	d0e6      	beq.n	9001b264 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001b296:	2b78      	cmp	r3, #120	; 0x78
9001b298:	e7f9      	b.n	9001b28e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
9001b29a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b29c:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001b2a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b2a2:	b10b      	cbz	r3, 9001b2a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
9001b2a4:	3302      	adds	r3, #2
9001b2a6:	9309      	str	r3, [sp, #36]	; 0x24
9001b2a8:	9b08      	ldr	r3, [sp, #32]
9001b2aa:	2b00      	cmp	r3, #0
9001b2ac:	f43f af2f 	beq.w	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b2b0:	3301      	adds	r3, #1
9001b2b2:	9308      	str	r3, [sp, #32]
9001b2b4:	e72b      	b.n	9001b10e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001b2b6:	2a00      	cmp	r2, #0
9001b2b8:	d0e1      	beq.n	9001b27e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b2ba:	7813      	ldrb	r3, [r2, #0]
9001b2bc:	e7d6      	b.n	9001b26c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001b2be:	2b73      	cmp	r3, #115	; 0x73
9001b2c0:	d036      	beq.n	9001b330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001b2c2:	d807      	bhi.n	9001b2d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
9001b2c4:	2b6f      	cmp	r3, #111	; 0x6f
9001b2c6:	d1da      	bne.n	9001b27e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b2c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b2ca:	1d25      	adds	r5, r4, #4
9001b2cc:	2308      	movs	r3, #8
9001b2ce:	eba8 0202 	sub.w	r2, r8, r2
9001b2d2:	e049      	b.n	9001b368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b2d4:	2b75      	cmp	r3, #117	; 0x75
9001b2d6:	d042      	beq.n	9001b35e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
9001b2d8:	2b78      	cmp	r3, #120	; 0x78
9001b2da:	d1d0      	bne.n	9001b27e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
9001b2dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b2de:	1d25      	adds	r5, r4, #4
9001b2e0:	2310      	movs	r3, #16
9001b2e2:	eba8 0202 	sub.w	r2, r8, r2
9001b2e6:	e03f      	b.n	9001b368 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
9001b2e8:	6823      	ldr	r3, [r4, #0]
9001b2ea:	1d25      	adds	r5, r4, #4
9001b2ec:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
9001b2f0:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
9001b2f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b2f6:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
9001b2fa:	2b00      	cmp	r3, #0
9001b2fc:	d051      	beq.n	9001b3a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
9001b2fe:	881a      	ldrh	r2, [r3, #0]
9001b300:	a80d      	add	r0, sp, #52	; 0x34
9001b302:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
9001b306:	462c      	mov	r4, r5
9001b308:	9005      	str	r0, [sp, #20]
9001b30a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
9001b30e:	9004      	str	r0, [sp, #16]
9001b310:	980e      	ldr	r0, [sp, #56]	; 0x38
9001b312:	9003      	str	r0, [sp, #12]
9001b314:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
9001b318:	9002      	str	r0, [sp, #8]
9001b31a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001b31c:	9001      	str	r0, [sp, #4]
9001b31e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
9001b322:	e9cd 8706 	strd	r8, r7, [sp, #24]
9001b326:	9000      	str	r0, [sp, #0]
9001b328:	a810      	add	r0, sp, #64	; 0x40
9001b32a:	f7ff fd49 	bl	9001adc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
9001b32e:	e7b7      	b.n	9001b2a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
9001b330:	1d25      	adds	r5, r4, #4
9001b332:	6823      	ldr	r3, [r4, #0]
9001b334:	9310      	str	r3, [sp, #64]	; 0x40
9001b336:	e7dd      	b.n	9001b2f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b338:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b33a:	230a      	movs	r3, #10
9001b33c:	4649      	mov	r1, r9
9001b33e:	6820      	ldr	r0, [r4, #0]
9001b340:	eba8 0202 	sub.w	r2, r8, r2
9001b344:	1d25      	adds	r5, r4, #4
9001b346:	b292      	uxth	r2, r2
9001b348:	f7ff fcf0 	bl	9001ad2c <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
9001b34c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001b350:	2b2d      	cmp	r3, #45	; 0x2d
9001b352:	d1cf      	bne.n	9001b2f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b354:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001b358:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b35a:	3302      	adds	r3, #2
9001b35c:	e7ea      	b.n	9001b334 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
9001b35e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b360:	1d25      	adds	r5, r4, #4
9001b362:	230a      	movs	r3, #10
9001b364:	eba8 0202 	sub.w	r2, r8, r2
9001b368:	b292      	uxth	r2, r2
9001b36a:	4649      	mov	r1, r9
9001b36c:	6820      	ldr	r0, [r4, #0]
9001b36e:	f7ff fd09 	bl	9001ad84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b372:	e7bf      	b.n	9001b2f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b374:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001b376:	2310      	movs	r3, #16
9001b378:	4649      	mov	r1, r9
9001b37a:	6820      	ldr	r0, [r4, #0]
9001b37c:	eba8 0202 	sub.w	r2, r8, r2
9001b380:	1d25      	adds	r5, r4, #4
9001b382:	b292      	uxth	r2, r2
9001b384:	f7ff fcfe 	bl	9001ad84 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
9001b388:	f10d 0242 	add.w	r2, sp, #66	; 0x42
9001b38c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
9001b390:	2b00      	cmp	r3, #0
9001b392:	d0af      	beq.n	9001b2f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
9001b394:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
9001b398:	2919      	cmp	r1, #25
9001b39a:	d8f7      	bhi.n	9001b38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b39c:	3b20      	subs	r3, #32
9001b39e:	8013      	strh	r3, [r2, #0]
9001b3a0:	e7f4      	b.n	9001b38c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
9001b3a2:	9a08      	ldr	r2, [sp, #32]
9001b3a4:	2a00      	cmp	r2, #0
9001b3a6:	d0ab      	beq.n	9001b300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b3a8:	7812      	ldrb	r2, [r2, #0]
9001b3aa:	e7a9      	b.n	9001b300 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
9001b3ac:	2d00      	cmp	r5, #0
9001b3ae:	f43f af48 	beq.w	9001b242 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001b3b2:	782d      	ldrb	r5, [r5, #0]
9001b3b4:	e745      	b.n	9001b242 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

9001b3b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
9001b3b6:	b507      	push	{r0, r1, r2, lr}
9001b3b8:	9300      	str	r3, [sp, #0]
9001b3ba:	4613      	mov	r3, r2
9001b3bc:	2200      	movs	r2, #0
9001b3be:	f7ff fe92 	bl	9001b0e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001b3c2:	b003      	add	sp, #12
9001b3c4:	f85d fb04 	ldr.w	pc, [sp], #4

9001b3c8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
9001b3c8:	b40c      	push	{r2, r3}
9001b3ca:	b507      	push	{r0, r1, r2, lr}
9001b3cc:	ab04      	add	r3, sp, #16
9001b3ce:	f853 2b04 	ldr.w	r2, [r3], #4
9001b3d2:	9301      	str	r3, [sp, #4]
9001b3d4:	f7ff ffef 	bl	9001b3b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
9001b3d8:	b003      	add	sp, #12
9001b3da:	f85d eb04 	ldr.w	lr, [sp], #4
9001b3de:	b002      	add	sp, #8
9001b3e0:	4770      	bx	lr
	...

9001b3e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001b3e4:	4b01      	ldr	r3, [pc, #4]	; (9001b3ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001b3e6:	6018      	str	r0, [r3, #0]
9001b3e8:	4770      	bx	lr
9001b3ea:	bf00      	nop
9001b3ec:	24039b34 	.word	0x24039b34

9001b3f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001b3f0:	4b06      	ldr	r3, [pc, #24]	; (9001b40c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001b3f2:	881a      	ldrh	r2, [r3, #0]
9001b3f4:	4282      	cmp	r2, r0
9001b3f6:	d807      	bhi.n	9001b408 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001b3f8:	4b05      	ldr	r3, [pc, #20]	; (9001b410 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001b3fa:	881b      	ldrh	r3, [r3, #0]
9001b3fc:	4413      	add	r3, r2
9001b3fe:	4298      	cmp	r0, r3
9001b400:	bfac      	ite	ge
9001b402:	2000      	movge	r0, #0
9001b404:	2001      	movlt	r0, #1
9001b406:	4770      	bx	lr
9001b408:	2000      	movs	r0, #0
9001b40a:	4770      	bx	lr
9001b40c:	24039b54 	.word	0x24039b54
9001b410:	24039b58 	.word	0x24039b58

9001b414 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001b414:	b508      	push	{r3, lr}
9001b416:	4601      	mov	r1, r0
9001b418:	f7ff ffea 	bl	9001b3f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001b41c:	b118      	cbz	r0, 9001b426 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001b41e:	4b02      	ldr	r3, [pc, #8]	; (9001b428 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001b420:	681b      	ldr	r3, [r3, #0]
9001b422:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001b426:	bd08      	pop	{r3, pc}
9001b428:	24039b38 	.word	0x24039b38

9001b42c <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001b42c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b42e:	4c24      	ldr	r4, [pc, #144]	; (9001b4c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001b430:	6823      	ldr	r3, [r4, #0]
9001b432:	2b00      	cmp	r3, #0
9001b434:	d042      	beq.n	9001b4bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b436:	4a23      	ldr	r2, [pc, #140]	; (9001b4c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001b438:	4d23      	ldr	r5, [pc, #140]	; (9001b4c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001b43a:	8811      	ldrh	r1, [r2, #0]
9001b43c:	f8b5 c000 	ldrh.w	ip, [r5]
9001b440:	4822      	ldr	r0, [pc, #136]	; (9001b4cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001b442:	4461      	add	r1, ip
9001b444:	1c4a      	adds	r2, r1, #1
9001b446:	008f      	lsls	r7, r1, #2
9001b448:	f022 0201 	bic.w	r2, r2, #1
9001b44c:	19de      	adds	r6, r3, r7
9001b44e:	0412      	lsls	r2, r2, #16
9001b450:	6006      	str	r6, [r0, #0]
9001b452:	4e1f      	ldr	r6, [pc, #124]	; (9001b4d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001b454:	0c12      	lsrs	r2, r2, #16
9001b456:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001b45a:	19da      	adds	r2, r3, r7
9001b45c:	6032      	str	r2, [r6, #0]
9001b45e:	220e      	movs	r2, #14
9001b460:	fb02 f20c 	mul.w	r2, r2, ip
9001b464:	3203      	adds	r2, #3
9001b466:	f022 0203 	bic.w	r2, r2, #3
9001b46a:	443a      	add	r2, r7
9001b46c:	4f19      	ldr	r7, [pc, #100]	; (9001b4d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001b46e:	4413      	add	r3, r2
9001b470:	603b      	str	r3, [r7, #0]
9001b472:	2300      	movs	r3, #0
9001b474:	4f18      	ldr	r7, [pc, #96]	; (9001b4d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001b476:	469c      	mov	ip, r3
9001b478:	803b      	strh	r3, [r7, #0]
9001b47a:	4f18      	ldr	r7, [pc, #96]	; (9001b4dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001b47c:	683f      	ldr	r7, [r7, #0]
9001b47e:	1aba      	subs	r2, r7, r2
9001b480:	4f17      	ldr	r7, [pc, #92]	; (9001b4e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001b482:	603a      	str	r2, [r7, #0]
9001b484:	f64f 77ff 	movw	r7, #65535	; 0xffff
9001b488:	4a16      	ldr	r2, [pc, #88]	; (9001b4e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001b48a:	8013      	strh	r3, [r2, #0]
9001b48c:	428b      	cmp	r3, r1
9001b48e:	d10d      	bne.n	9001b4ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001b490:	882d      	ldrh	r5, [r5, #0]
9001b492:	2300      	movs	r3, #0
9001b494:	6830      	ldr	r0, [r6, #0]
9001b496:	240e      	movs	r4, #14
9001b498:	429d      	cmp	r5, r3
9001b49a:	d90f      	bls.n	9001b4bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001b49c:	fb04 0203 	mla	r2, r4, r3, r0
9001b4a0:	3301      	adds	r3, #1
9001b4a2:	7b11      	ldrb	r1, [r2, #12]
9001b4a4:	f36f 1145 	bfc	r1, #5, #1
9001b4a8:	7311      	strb	r1, [r2, #12]
9001b4aa:	e7f5      	b.n	9001b498 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001b4ac:	6822      	ldr	r2, [r4, #0]
9001b4ae:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001b4b2:	6802      	ldr	r2, [r0, #0]
9001b4b4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001b4b8:	3301      	adds	r3, #1
9001b4ba:	e7e7      	b.n	9001b48c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001b4bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001b4be:	bf00      	nop
9001b4c0:	24039b38 	.word	0x24039b38
9001b4c4:	24039b54 	.word	0x24039b54
9001b4c8:	24039b58 	.word	0x24039b58
9001b4cc:	24039b4c 	.word	0x24039b4c
9001b4d0:	24039b3c 	.word	0x24039b3c
9001b4d4:	24039b44 	.word	0x24039b44
9001b4d8:	24039b56 	.word	0x24039b56
9001b4dc:	24039b40 	.word	0x24039b40
9001b4e0:	24039b50 	.word	0x24039b50
9001b4e4:	24039b48 	.word	0x24039b48

9001b4e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001b4e8:	4b06      	ldr	r3, [pc, #24]	; (9001b504 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001b4ea:	681b      	ldr	r3, [r3, #0]
9001b4ec:	b943      	cbnz	r3, 9001b500 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b4ee:	b139      	cbz	r1, 9001b500 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001b4f0:	4b05      	ldr	r3, [pc, #20]	; (9001b508 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001b4f2:	801a      	strh	r2, [r3, #0]
9001b4f4:	4b05      	ldr	r3, [pc, #20]	; (9001b50c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001b4f6:	6019      	str	r1, [r3, #0]
9001b4f8:	4b05      	ldr	r3, [pc, #20]	; (9001b510 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001b4fa:	6018      	str	r0, [r3, #0]
9001b4fc:	f7ff bf96 	b.w	9001b42c <_ZN8touchgfx6Bitmap10clearCacheEv>
9001b500:	4770      	bx	lr
9001b502:	bf00      	nop
9001b504:	24039b44 	.word	0x24039b44
9001b508:	24039b58 	.word	0x24039b58
9001b50c:	24039b40 	.word	0x24039b40
9001b510:	24039b38 	.word	0x24039b38

9001b514 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001b514:	b470      	push	{r4, r5, r6}
9001b516:	4c07      	ldr	r4, [pc, #28]	; (9001b534 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001b518:	4605      	mov	r5, r0
9001b51a:	4610      	mov	r0, r2
9001b51c:	9a03      	ldr	r2, [sp, #12]
9001b51e:	6826      	ldr	r6, [r4, #0]
9001b520:	b936      	cbnz	r6, 9001b530 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001b522:	6025      	str	r5, [r4, #0]
9001b524:	4c04      	ldr	r4, [pc, #16]	; (9001b538 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001b526:	8021      	strh	r1, [r4, #0]
9001b528:	4619      	mov	r1, r3
9001b52a:	bc70      	pop	{r4, r5, r6}
9001b52c:	f7ff bfdc 	b.w	9001b4e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001b530:	bc70      	pop	{r4, r5, r6}
9001b532:	4770      	bx	lr
9001b534:	24039b5c 	.word	0x24039b5c
9001b538:	24039b54 	.word	0x24039b54

9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001b53c:	4a12      	ldr	r2, [pc, #72]	; (9001b588 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001b53e:	8803      	ldrh	r3, [r0, #0]
9001b540:	8812      	ldrh	r2, [r2, #0]
9001b542:	4293      	cmp	r3, r2
9001b544:	d207      	bcs.n	9001b556 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001b546:	4a11      	ldr	r2, [pc, #68]	; (9001b58c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001b548:	2114      	movs	r1, #20
9001b54a:	6812      	ldr	r2, [r2, #0]
9001b54c:	fb01 2303 	mla	r3, r1, r3, r2
9001b550:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001b554:	4770      	bx	lr
9001b556:	490e      	ldr	r1, [pc, #56]	; (9001b590 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001b558:	8809      	ldrh	r1, [r1, #0]
9001b55a:	4411      	add	r1, r2
9001b55c:	428b      	cmp	r3, r1
9001b55e:	da04      	bge.n	9001b56a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001b560:	1a9b      	subs	r3, r3, r2
9001b562:	4a0c      	ldr	r2, [pc, #48]	; (9001b594 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001b564:	210e      	movs	r1, #14
9001b566:	6812      	ldr	r2, [r2, #0]
9001b568:	e7f0      	b.n	9001b54c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001b56a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b56e:	4293      	cmp	r3, r2
9001b570:	d108      	bne.n	9001b584 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001b572:	4b09      	ldr	r3, [pc, #36]	; (9001b598 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001b574:	781b      	ldrb	r3, [r3, #0]
9001b576:	b91b      	cbnz	r3, 9001b580 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001b578:	4b08      	ldr	r3, [pc, #32]	; (9001b59c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001b57a:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b57e:	4770      	bx	lr
9001b580:	4b07      	ldr	r3, [pc, #28]	; (9001b5a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001b582:	e7fa      	b.n	9001b57a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001b584:	2000      	movs	r0, #0
9001b586:	4770      	bx	lr
9001b588:	24039b54 	.word	0x24039b54
9001b58c:	24039b5c 	.word	0x24039b5c
9001b590:	24039b58 	.word	0x24039b58
9001b594:	24039b3c 	.word	0x24039b3c
9001b598:	24039ac4 	.word	0x24039ac4
9001b59c:	24039ac6 	.word	0x24039ac6
9001b5a0:	24039ac8 	.word	0x24039ac8

9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001b5a4:	4a12      	ldr	r2, [pc, #72]	; (9001b5f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001b5a6:	8803      	ldrh	r3, [r0, #0]
9001b5a8:	8812      	ldrh	r2, [r2, #0]
9001b5aa:	4293      	cmp	r3, r2
9001b5ac:	d207      	bcs.n	9001b5be <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001b5ae:	4a11      	ldr	r2, [pc, #68]	; (9001b5f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001b5b0:	2114      	movs	r1, #20
9001b5b2:	6812      	ldr	r2, [r2, #0]
9001b5b4:	fb01 2303 	mla	r3, r1, r3, r2
9001b5b8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001b5bc:	4770      	bx	lr
9001b5be:	490e      	ldr	r1, [pc, #56]	; (9001b5f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001b5c0:	8809      	ldrh	r1, [r1, #0]
9001b5c2:	4411      	add	r1, r2
9001b5c4:	428b      	cmp	r3, r1
9001b5c6:	da04      	bge.n	9001b5d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001b5c8:	1a9b      	subs	r3, r3, r2
9001b5ca:	4a0c      	ldr	r2, [pc, #48]	; (9001b5fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001b5cc:	210e      	movs	r1, #14
9001b5ce:	6812      	ldr	r2, [r2, #0]
9001b5d0:	e7f0      	b.n	9001b5b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001b5d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b5d6:	4293      	cmp	r3, r2
9001b5d8:	d108      	bne.n	9001b5ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001b5da:	4b09      	ldr	r3, [pc, #36]	; (9001b600 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001b5dc:	781b      	ldrb	r3, [r3, #0]
9001b5de:	b91b      	cbnz	r3, 9001b5e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001b5e0:	4b08      	ldr	r3, [pc, #32]	; (9001b604 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001b5e2:	f9b3 0000 	ldrsh.w	r0, [r3]
9001b5e6:	4770      	bx	lr
9001b5e8:	4b07      	ldr	r3, [pc, #28]	; (9001b608 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001b5ea:	e7fa      	b.n	9001b5e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001b5ec:	2000      	movs	r0, #0
9001b5ee:	4770      	bx	lr
9001b5f0:	24039b54 	.word	0x24039b54
9001b5f4:	24039b5c 	.word	0x24039b5c
9001b5f8:	24039b58 	.word	0x24039b58
9001b5fc:	24039b3c 	.word	0x24039b3c
9001b600:	24039ac4 	.word	0x24039ac4
9001b604:	24039ac8 	.word	0x24039ac8
9001b608:	24039ac6 	.word	0x24039ac6

9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001b60c:	4a1f      	ldr	r2, [pc, #124]	; (9001b68c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001b60e:	b510      	push	{r4, lr}
9001b610:	880b      	ldrh	r3, [r1, #0]
9001b612:	8812      	ldrh	r2, [r2, #0]
9001b614:	4293      	cmp	r3, r2
9001b616:	d213      	bcs.n	9001b640 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001b618:	4a1d      	ldr	r2, [pc, #116]	; (9001b690 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
9001b61a:	2114      	movs	r1, #20
9001b61c:	6812      	ldr	r2, [r2, #0]
9001b61e:	fb01 2303 	mla	r3, r1, r3, r2
9001b622:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001b626:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001b62a:	8a1a      	ldrh	r2, [r3, #16]
9001b62c:	8a5b      	ldrh	r3, [r3, #18]
9001b62e:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b632:	8004      	strh	r4, [r0, #0]
9001b634:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001b638:	8041      	strh	r1, [r0, #2]
9001b63a:	8082      	strh	r2, [r0, #4]
9001b63c:	80c3      	strh	r3, [r0, #6]
9001b63e:	e00e      	b.n	9001b65e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b640:	4914      	ldr	r1, [pc, #80]	; (9001b694 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001b642:	8809      	ldrh	r1, [r1, #0]
9001b644:	4411      	add	r1, r2
9001b646:	428b      	cmp	r3, r1
9001b648:	da0a      	bge.n	9001b660 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
9001b64a:	1a9b      	subs	r3, r3, r2
9001b64c:	4a12      	ldr	r2, [pc, #72]	; (9001b698 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001b64e:	210e      	movs	r1, #14
9001b650:	6812      	ldr	r2, [r2, #0]
9001b652:	fb01 2303 	mla	r3, r1, r3, r2
9001b656:	681a      	ldr	r2, [r3, #0]
9001b658:	6002      	str	r2, [r0, #0]
9001b65a:	685a      	ldr	r2, [r3, #4]
9001b65c:	6042      	str	r2, [r0, #4]
9001b65e:	bd10      	pop	{r4, pc}
9001b660:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b664:	4293      	cmp	r3, r2
9001b666:	d10b      	bne.n	9001b680 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
9001b668:	4b0c      	ldr	r3, [pc, #48]	; (9001b69c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001b66a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001b66e:	4b0c      	ldr	r3, [pc, #48]	; (9001b6a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001b670:	8081      	strh	r1, [r0, #4]
9001b672:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b676:	2300      	movs	r3, #0
9001b678:	80c2      	strh	r2, [r0, #6]
9001b67a:	8003      	strh	r3, [r0, #0]
9001b67c:	8043      	strh	r3, [r0, #2]
9001b67e:	e7ee      	b.n	9001b65e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001b680:	2300      	movs	r3, #0
9001b682:	8003      	strh	r3, [r0, #0]
9001b684:	8043      	strh	r3, [r0, #2]
9001b686:	8083      	strh	r3, [r0, #4]
9001b688:	e7d8      	b.n	9001b63c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001b68a:	bf00      	nop
9001b68c:	24039b54 	.word	0x24039b54
9001b690:	24039b5c 	.word	0x24039b5c
9001b694:	24039b58 	.word	0x24039b58
9001b698:	24039b3c 	.word	0x24039b3c
9001b69c:	24039ac0 	.word	0x24039ac0
9001b6a0:	24039ac2 	.word	0x24039ac2

9001b6a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001b6a4:	4a17      	ldr	r2, [pc, #92]	; (9001b704 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001b6a6:	8803      	ldrh	r3, [r0, #0]
9001b6a8:	8812      	ldrh	r2, [r2, #0]
9001b6aa:	4293      	cmp	r3, r2
9001b6ac:	d213      	bcs.n	9001b6d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001b6ae:	4a16      	ldr	r2, [pc, #88]	; (9001b708 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001b6b0:	2114      	movs	r1, #20
9001b6b2:	6812      	ldr	r2, [r2, #0]
9001b6b4:	fb01 2303 	mla	r3, r1, r3, r2
9001b6b8:	8a1a      	ldrh	r2, [r3, #16]
9001b6ba:	8919      	ldrh	r1, [r3, #8]
9001b6bc:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001b6c0:	428a      	cmp	r2, r1
9001b6c2:	db1d      	blt.n	9001b700 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b6c4:	8a58      	ldrh	r0, [r3, #18]
9001b6c6:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001b6ca:	895b      	ldrh	r3, [r3, #10]
9001b6cc:	4298      	cmp	r0, r3
9001b6ce:	bfac      	ite	ge
9001b6d0:	2000      	movge	r0, #0
9001b6d2:	2001      	movlt	r0, #1
9001b6d4:	4770      	bx	lr
9001b6d6:	490d      	ldr	r1, [pc, #52]	; (9001b70c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001b6d8:	8809      	ldrh	r1, [r1, #0]
9001b6da:	4411      	add	r1, r2
9001b6dc:	428b      	cmp	r3, r1
9001b6de:	da0d      	bge.n	9001b6fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001b6e0:	1a9b      	subs	r3, r3, r2
9001b6e2:	4a0b      	ldr	r2, [pc, #44]	; (9001b710 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001b6e4:	210e      	movs	r1, #14
9001b6e6:	6812      	ldr	r2, [r2, #0]
9001b6e8:	fb01 2303 	mla	r3, r1, r3, r2
9001b6ec:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001b6f0:	891a      	ldrh	r2, [r3, #8]
9001b6f2:	4291      	cmp	r1, r2
9001b6f4:	db04      	blt.n	9001b700 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001b6f6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001b6fa:	e7e6      	b.n	9001b6ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001b6fc:	2000      	movs	r0, #0
9001b6fe:	4770      	bx	lr
9001b700:	2001      	movs	r0, #1
9001b702:	4770      	bx	lr
9001b704:	24039b54 	.word	0x24039b54
9001b708:	24039b5c 	.word	0x24039b5c
9001b70c:	24039b58 	.word	0x24039b58
9001b710:	24039b3c 	.word	0x24039b3c

9001b714 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001b714:	4a12      	ldr	r2, [pc, #72]	; (9001b760 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001b716:	8803      	ldrh	r3, [r0, #0]
9001b718:	8811      	ldrh	r1, [r2, #0]
9001b71a:	428b      	cmp	r3, r1
9001b71c:	d20b      	bcs.n	9001b736 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001b71e:	4a11      	ldr	r2, [pc, #68]	; (9001b764 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b720:	6812      	ldr	r2, [r2, #0]
9001b722:	b112      	cbz	r2, 9001b72a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001b724:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b728:	b9c0      	cbnz	r0, 9001b75c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001b72a:	4a0f      	ldr	r2, [pc, #60]	; (9001b768 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001b72c:	6811      	ldr	r1, [r2, #0]
9001b72e:	2214      	movs	r2, #20
9001b730:	4353      	muls	r3, r2
9001b732:	58c8      	ldr	r0, [r1, r3]
9001b734:	4770      	bx	lr
9001b736:	4a0d      	ldr	r2, [pc, #52]	; (9001b76c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001b738:	8812      	ldrh	r2, [r2, #0]
9001b73a:	440a      	add	r2, r1
9001b73c:	4293      	cmp	r3, r2
9001b73e:	da04      	bge.n	9001b74a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001b740:	4a08      	ldr	r2, [pc, #32]	; (9001b764 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001b742:	6812      	ldr	r2, [r2, #0]
9001b744:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001b748:	4770      	bx	lr
9001b74a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b74e:	4293      	cmp	r3, r2
9001b750:	d103      	bne.n	9001b75a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001b752:	4b07      	ldr	r3, [pc, #28]	; (9001b770 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001b754:	681b      	ldr	r3, [r3, #0]
9001b756:	6c58      	ldr	r0, [r3, #68]	; 0x44
9001b758:	4770      	bx	lr
9001b75a:	2000      	movs	r0, #0
9001b75c:	4770      	bx	lr
9001b75e:	bf00      	nop
9001b760:	24039b54 	.word	0x24039b54
9001b764:	24039b38 	.word	0x24039b38
9001b768:	24039b5c 	.word	0x24039b5c
9001b76c:	24039b58 	.word	0x24039b58
9001b770:	24039acc 	.word	0x24039acc

9001b774 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001b774:	4b24      	ldr	r3, [pc, #144]	; (9001b808 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001b776:	8802      	ldrh	r2, [r0, #0]
9001b778:	8818      	ldrh	r0, [r3, #0]
9001b77a:	4282      	cmp	r2, r0
9001b77c:	d221      	bcs.n	9001b7c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001b77e:	4b23      	ldr	r3, [pc, #140]	; (9001b80c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001b780:	6819      	ldr	r1, [r3, #0]
9001b782:	2314      	movs	r3, #20
9001b784:	fb03 1302 	mla	r3, r3, r2, r1
9001b788:	6858      	ldr	r0, [r3, #4]
9001b78a:	2800      	cmp	r0, #0
9001b78c:	d03a      	beq.n	9001b804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b78e:	4920      	ldr	r1, [pc, #128]	; (9001b810 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b790:	6809      	ldr	r1, [r1, #0]
9001b792:	2900      	cmp	r1, #0
9001b794:	d036      	beq.n	9001b804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b796:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001b79a:	2900      	cmp	r1, #0
9001b79c:	d032      	beq.n	9001b804 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001b79e:	891a      	ldrh	r2, [r3, #8]
9001b7a0:	8958      	ldrh	r0, [r3, #10]
9001b7a2:	4350      	muls	r0, r2
9001b7a4:	7c5a      	ldrb	r2, [r3, #17]
9001b7a6:	7cdb      	ldrb	r3, [r3, #19]
9001b7a8:	0952      	lsrs	r2, r2, #5
9001b7aa:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001b7ae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001b7b2:	2b0b      	cmp	r3, #11
9001b7b4:	bf18      	it	ne
9001b7b6:	0040      	lslne	r0, r0, #1
9001b7b8:	3003      	adds	r0, #3
9001b7ba:	f020 0003 	bic.w	r0, r0, #3
9001b7be:	4408      	add	r0, r1
9001b7c0:	4770      	bx	lr
9001b7c2:	4b14      	ldr	r3, [pc, #80]	; (9001b814 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001b7c4:	881b      	ldrh	r3, [r3, #0]
9001b7c6:	4403      	add	r3, r0
9001b7c8:	429a      	cmp	r2, r3
9001b7ca:	da1a      	bge.n	9001b802 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b7cc:	4b12      	ldr	r3, [pc, #72]	; (9001b818 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001b7ce:	1a10      	subs	r0, r2, r0
9001b7d0:	210e      	movs	r1, #14
9001b7d2:	681b      	ldr	r3, [r3, #0]
9001b7d4:	fb01 3000 	mla	r0, r1, r0, r3
9001b7d8:	7b03      	ldrb	r3, [r0, #12]
9001b7da:	f003 031f 	and.w	r3, r3, #31
9001b7de:	2b0b      	cmp	r3, #11
9001b7e0:	d10b      	bne.n	9001b7fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001b7e2:	8903      	ldrh	r3, [r0, #8]
9001b7e4:	8940      	ldrh	r0, [r0, #10]
9001b7e6:	4358      	muls	r0, r3
9001b7e8:	4b09      	ldr	r3, [pc, #36]	; (9001b810 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001b7ea:	3003      	adds	r0, #3
9001b7ec:	6819      	ldr	r1, [r3, #0]
9001b7ee:	f020 0303 	bic.w	r3, r0, #3
9001b7f2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001b7f6:	4418      	add	r0, r3
9001b7f8:	4770      	bx	lr
9001b7fa:	2b0d      	cmp	r3, #13
9001b7fc:	d101      	bne.n	9001b802 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001b7fe:	300d      	adds	r0, #13
9001b800:	4770      	bx	lr
9001b802:	2000      	movs	r0, #0
9001b804:	4770      	bx	lr
9001b806:	bf00      	nop
9001b808:	24039b54 	.word	0x24039b54
9001b80c:	24039b5c 	.word	0x24039b5c
9001b810:	24039b38 	.word	0x24039b38
9001b814:	24039b58 	.word	0x24039b58
9001b818:	24039b3c 	.word	0x24039b3c

9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001b81c:	4a17      	ldr	r2, [pc, #92]	; (9001b87c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001b81e:	b510      	push	{r4, lr}
9001b820:	8803      	ldrh	r3, [r0, #0]
9001b822:	8812      	ldrh	r2, [r2, #0]
9001b824:	4293      	cmp	r3, r2
9001b826:	d20c      	bcs.n	9001b842 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
9001b828:	4a15      	ldr	r2, [pc, #84]	; (9001b880 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
9001b82a:	2114      	movs	r1, #20
9001b82c:	6812      	ldr	r2, [r2, #0]
9001b82e:	fb01 2303 	mla	r3, r1, r3, r2
9001b832:	7c58      	ldrb	r0, [r3, #17]
9001b834:	0942      	lsrs	r2, r0, #5
9001b836:	7cd8      	ldrb	r0, [r3, #19]
9001b838:	f3c0 1042 	ubfx	r0, r0, #5, #3
9001b83c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001b840:	bd10      	pop	{r4, pc}
9001b842:	4910      	ldr	r1, [pc, #64]	; (9001b884 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
9001b844:	8809      	ldrh	r1, [r1, #0]
9001b846:	4411      	add	r1, r2
9001b848:	428b      	cmp	r3, r1
9001b84a:	da09      	bge.n	9001b860 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
9001b84c:	1a9b      	subs	r3, r3, r2
9001b84e:	4a0e      	ldr	r2, [pc, #56]	; (9001b888 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001b850:	210e      	movs	r1, #14
9001b852:	6812      	ldr	r2, [r2, #0]
9001b854:	fb01 2303 	mla	r3, r1, r3, r2
9001b858:	7b18      	ldrb	r0, [r3, #12]
9001b85a:	f000 001f 	and.w	r0, r0, #31
9001b85e:	e7ef      	b.n	9001b840 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b860:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001b864:	4293      	cmp	r3, r2
9001b866:	d106      	bne.n	9001b876 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
9001b868:	f7f7 fcce 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9001b86c:	6803      	ldr	r3, [r0, #0]
9001b86e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001b872:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b874:	4718      	bx	r3
9001b876:	2000      	movs	r0, #0
9001b878:	e7e2      	b.n	9001b840 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001b87a:	bf00      	nop
9001b87c:	24039b54 	.word	0x24039b54
9001b880:	24039b5c 	.word	0x24039b5c
9001b884:	24039b58 	.word	0x24039b58
9001b888:	24039b3c 	.word	0x24039b3c

9001b88c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001b88c:	2010      	movs	r0, #16
9001b88e:	4770      	bx	lr

9001b890 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001b890:	4b02      	ldr	r3, [pc, #8]	; (9001b89c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001b892:	8818      	ldrh	r0, [r3, #0]
9001b894:	0040      	lsls	r0, r0, #1
9001b896:	b280      	uxth	r0, r0
9001b898:	4770      	bx	lr
9001b89a:	bf00      	nop
9001b89c:	24039ac6 	.word	0x24039ac6

9001b8a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001b8a0:	2bff      	cmp	r3, #255	; 0xff
9001b8a2:	d050      	beq.n	9001b946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001b8a4:	2a0b      	cmp	r2, #11
9001b8a6:	d04a      	beq.n	9001b93e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001b8a8:	d80e      	bhi.n	9001b8c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001b8aa:	2a03      	cmp	r2, #3
9001b8ac:	d03f      	beq.n	9001b92e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001b8ae:	d804      	bhi.n	9001b8ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001b8b0:	2a01      	cmp	r2, #1
9001b8b2:	d03e      	beq.n	9001b932 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
9001b8b4:	d93f      	bls.n	9001b936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
9001b8b6:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001b8b8:	4770      	bx	lr
9001b8ba:	2a09      	cmp	r2, #9
9001b8bc:	d03f      	beq.n	9001b93e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001b8be:	d83c      	bhi.n	9001b93a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001b8c0:	2a08      	cmp	r2, #8
9001b8c2:	d03a      	beq.n	9001b93a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001b8c4:	2000      	movs	r0, #0
9001b8c6:	4770      	bx	lr
9001b8c8:	2a2f      	cmp	r2, #47	; 0x2f
9001b8ca:	d024      	beq.n	9001b916 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
9001b8cc:	d80d      	bhi.n	9001b8ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001b8ce:	2a2d      	cmp	r2, #45	; 0x2d
9001b8d0:	d014      	beq.n	9001b8fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001b8d2:	d826      	bhi.n	9001b922 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001b8d4:	2a2c      	cmp	r2, #44	; 0x2c
9001b8d6:	d1f5      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8d8:	684b      	ldr	r3, [r1, #4]
9001b8da:	781b      	ldrb	r3, [r3, #0]
9001b8dc:	2b01      	cmp	r3, #1
9001b8de:	d018      	beq.n	9001b912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001b8e0:	d323      	bcc.n	9001b92a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001b8e2:	2b02      	cmp	r3, #2
9001b8e4:	d1ee      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8e6:	6880      	ldr	r0, [r0, #8]
9001b8e8:	4770      	bx	lr
9001b8ea:	2a31      	cmp	r2, #49	; 0x31
9001b8ec:	d004      	beq.n	9001b8f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001b8ee:	d328      	bcc.n	9001b942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001b8f0:	2a32      	cmp	r2, #50	; 0x32
9001b8f2:	d026      	beq.n	9001b942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001b8f4:	2a33      	cmp	r2, #51	; 0x33
9001b8f6:	d1e5      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b8f8:	6f00      	ldr	r0, [r0, #112]	; 0x70
9001b8fa:	4770      	bx	lr
9001b8fc:	684b      	ldr	r3, [r1, #4]
9001b8fe:	781b      	ldrb	r3, [r3, #0]
9001b900:	2b01      	cmp	r3, #1
9001b902:	d004      	beq.n	9001b90e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
9001b904:	d30b      	bcc.n	9001b91e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001b906:	2b02      	cmp	r3, #2
9001b908:	d1dc      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b90a:	6900      	ldr	r0, [r0, #16]
9001b90c:	4770      	bx	lr
9001b90e:	6a00      	ldr	r0, [r0, #32]
9001b910:	4770      	bx	lr
9001b912:	6980      	ldr	r0, [r0, #24]
9001b914:	4770      	bx	lr
9001b916:	684b      	ldr	r3, [r1, #4]
9001b918:	781b      	ldrb	r3, [r3, #0]
9001b91a:	2b00      	cmp	r3, #0
9001b91c:	d1d2      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b91e:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001b920:	4770      	bx	lr
9001b922:	684b      	ldr	r3, [r1, #4]
9001b924:	781b      	ldrb	r3, [r3, #0]
9001b926:	2b00      	cmp	r3, #0
9001b928:	d1cc      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b92a:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001b92c:	4770      	bx	lr
9001b92e:	6c80      	ldr	r0, [r0, #72]	; 0x48
9001b930:	4770      	bx	lr
9001b932:	6d00      	ldr	r0, [r0, #80]	; 0x50
9001b934:	4770      	bx	lr
9001b936:	6c00      	ldr	r0, [r0, #64]	; 0x40
9001b938:	4770      	bx	lr
9001b93a:	6d80      	ldr	r0, [r0, #88]	; 0x58
9001b93c:	4770      	bx	lr
9001b93e:	6e00      	ldr	r0, [r0, #96]	; 0x60
9001b940:	4770      	bx	lr
9001b942:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001b944:	4770      	bx	lr
9001b946:	2a0b      	cmp	r2, #11
9001b948:	d049      	beq.n	9001b9de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001b94a:	d80e      	bhi.n	9001b96a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001b94c:	2a03      	cmp	r2, #3
9001b94e:	d040      	beq.n	9001b9d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001b950:	d804      	bhi.n	9001b95c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001b952:	2a01      	cmp	r2, #1
9001b954:	d03f      	beq.n	9001b9d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001b956:	d940      	bls.n	9001b9da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001b958:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001b95a:	4770      	bx	lr
9001b95c:	2a09      	cmp	r2, #9
9001b95e:	d03e      	beq.n	9001b9de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001b960:	d801      	bhi.n	9001b966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001b962:	2a08      	cmp	r2, #8
9001b964:	d1ae      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b966:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001b968:	4770      	bx	lr
9001b96a:	2a2f      	cmp	r2, #47	; 0x2f
9001b96c:	d024      	beq.n	9001b9b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001b96e:	d80d      	bhi.n	9001b98c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001b970:	2a2d      	cmp	r2, #45	; 0x2d
9001b972:	d014      	beq.n	9001b99e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001b974:	d826      	bhi.n	9001b9c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001b976:	2a2c      	cmp	r2, #44	; 0x2c
9001b978:	d1a4      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b97a:	684b      	ldr	r3, [r1, #4]
9001b97c:	781b      	ldrb	r3, [r3, #0]
9001b97e:	2b01      	cmp	r3, #1
9001b980:	d018      	beq.n	9001b9b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001b982:	d324      	bcc.n	9001b9ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001b984:	2b02      	cmp	r3, #2
9001b986:	d19d      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b988:	68c0      	ldr	r0, [r0, #12]
9001b98a:	4770      	bx	lr
9001b98c:	2a31      	cmp	r2, #49	; 0x31
9001b98e:	d004      	beq.n	9001b99a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001b990:	d327      	bcc.n	9001b9e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001b992:	2a32      	cmp	r2, #50	; 0x32
9001b994:	d025      	beq.n	9001b9e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001b996:	2a33      	cmp	r2, #51	; 0x33
9001b998:	d194      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b99a:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001b99c:	4770      	bx	lr
9001b99e:	684b      	ldr	r3, [r1, #4]
9001b9a0:	781b      	ldrb	r3, [r3, #0]
9001b9a2:	2b01      	cmp	r3, #1
9001b9a4:	d004      	beq.n	9001b9b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001b9a6:	d30b      	bcc.n	9001b9c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001b9a8:	2b02      	cmp	r3, #2
9001b9aa:	d18b      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b9ac:	6940      	ldr	r0, [r0, #20]
9001b9ae:	4770      	bx	lr
9001b9b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001b9b2:	4770      	bx	lr
9001b9b4:	69c0      	ldr	r0, [r0, #28]
9001b9b6:	4770      	bx	lr
9001b9b8:	684b      	ldr	r3, [r1, #4]
9001b9ba:	781b      	ldrb	r3, [r3, #0]
9001b9bc:	2b00      	cmp	r3, #0
9001b9be:	d181      	bne.n	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b9c0:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001b9c2:	4770      	bx	lr
9001b9c4:	684b      	ldr	r3, [r1, #4]
9001b9c6:	781b      	ldrb	r3, [r3, #0]
9001b9c8:	2b00      	cmp	r3, #0
9001b9ca:	f47f af7b 	bne.w	9001b8c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001b9ce:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001b9d0:	4770      	bx	lr
9001b9d2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001b9d4:	4770      	bx	lr
9001b9d6:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001b9d8:	4770      	bx	lr
9001b9da:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001b9dc:	4770      	bx	lr
9001b9de:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001b9e0:	4770      	bx	lr
9001b9e2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001b9e4:	4770      	bx	lr

9001b9e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b9e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b9ea:	b087      	sub	sp, #28
9001b9ec:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b9ee:	9205      	str	r2, [sp, #20]
9001b9f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b9f4:	9101      	str	r1, [sp, #4]
9001b9f6:	9202      	str	r2, [sp, #8]
9001b9f8:	6841      	ldr	r1, [r0, #4]
9001b9fa:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001b9fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001ba02:	fb01 2404 	mla	r4, r1, r4, r2
9001ba06:	6802      	ldr	r2, [r0, #0]
9001ba08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ba0c:	f8de 2000 	ldr.w	r2, [lr]
9001ba10:	9203      	str	r2, [sp, #12]
9001ba12:	f8de 2004 	ldr.w	r2, [lr, #4]
9001ba16:	3204      	adds	r2, #4
9001ba18:	9204      	str	r2, [sp, #16]
9001ba1a:	9a02      	ldr	r2, [sp, #8]
9001ba1c:	43d6      	mvns	r6, r2
9001ba1e:	b2f6      	uxtb	r6, r6
9001ba20:	9a01      	ldr	r2, [sp, #4]
9001ba22:	2a00      	cmp	r2, #0
9001ba24:	dc03      	bgt.n	9001ba2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001ba26:	9a05      	ldr	r2, [sp, #20]
9001ba28:	2a00      	cmp	r2, #0
9001ba2a:	f340 8129 	ble.w	9001bc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001ba2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001ba30:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001ba34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ba38:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ba3a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001ba3e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ba42:	2b00      	cmp	r3, #0
9001ba44:	dd0e      	ble.n	9001ba64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ba46:	1408      	asrs	r0, r1, #16
9001ba48:	d405      	bmi.n	9001ba56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ba4a:	4560      	cmp	r0, ip
9001ba4c:	da03      	bge.n	9001ba56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ba4e:	1410      	asrs	r0, r2, #16
9001ba50:	d401      	bmi.n	9001ba56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ba52:	42b8      	cmp	r0, r7
9001ba54:	db07      	blt.n	9001ba66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ba56:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001ba58:	3b01      	subs	r3, #1
9001ba5a:	3402      	adds	r4, #2
9001ba5c:	4401      	add	r1, r0
9001ba5e:	9814      	ldr	r0, [sp, #80]	; 0x50
9001ba60:	4402      	add	r2, r0
9001ba62:	e7ee      	b.n	9001ba42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001ba64:	d071      	beq.n	9001bb4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ba66:	1e58      	subs	r0, r3, #1
9001ba68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001ba6a:	fb05 1500 	mla	r5, r5, r0, r1
9001ba6e:	142d      	asrs	r5, r5, #16
9001ba70:	d45f      	bmi.n	9001bb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ba72:	4565      	cmp	r5, ip
9001ba74:	da5d      	bge.n	9001bb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ba76:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ba78:	fb05 2000 	mla	r0, r5, r0, r2
9001ba7c:	1400      	asrs	r0, r0, #16
9001ba7e:	d458      	bmi.n	9001bb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ba80:	42b8      	cmp	r0, r7
9001ba82:	da56      	bge.n	9001bb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001ba84:	4699      	mov	r9, r3
9001ba86:	46a2      	mov	sl, r4
9001ba88:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001ba8c:	f1b9 0f00 	cmp.w	r9, #0
9001ba90:	dd57      	ble.n	9001bb42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001ba92:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001ba96:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ba9a:	9803      	ldr	r0, [sp, #12]
9001ba9c:	140d      	asrs	r5, r1, #16
9001ba9e:	f109 39ff 	add.w	r9, r9, #4294967295
9001baa2:	fb07 000c 	mla	r0, r7, ip, r0
9001baa6:	5d40      	ldrb	r0, [r0, r5]
9001baa8:	9d04      	ldr	r5, [sp, #16]
9001baaa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001baae:	f8ba 5000 	ldrh.w	r5, [sl]
9001bab2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bab6:	122f      	asrs	r7, r5, #8
9001bab8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001babc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bac0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bac4:	00ed      	lsls	r5, r5, #3
9001bac6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001baca:	fb17 f706 	smulbb	r7, r7, r6
9001bace:	b2ed      	uxtb	r5, r5
9001bad0:	fb18 f806 	smulbb	r8, r8, r6
9001bad4:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001bad8:	10c7      	asrs	r7, r0, #3
9001bada:	fb15 f506 	smulbb	r5, r5, r6
9001bade:	00c0      	lsls	r0, r0, #3
9001bae0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bae4:	fa1f fc8c 	uxth.w	ip, ip
9001bae8:	b2c0      	uxtb	r0, r0
9001baea:	fb07 870b 	mla	r7, r7, fp, r8
9001baee:	fb00 500b 	mla	r0, r0, fp, r5
9001baf2:	f10c 0501 	add.w	r5, ip, #1
9001baf6:	b2bf      	uxth	r7, r7
9001baf8:	b280      	uxth	r0, r0
9001bafa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bafe:	f107 0801 	add.w	r8, r7, #1
9001bb02:	1c45      	adds	r5, r0, #1
9001bb04:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001bb08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bb0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bb10:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bb12:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001bb16:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bb1a:	4401      	add	r1, r0
9001bb1c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001bb20:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bb22:	ea45 0c0c 	orr.w	ip, r5, ip
9001bb26:	4402      	add	r2, r0
9001bb28:	ea4c 0c08 	orr.w	ip, ip, r8
9001bb2c:	f82a cb02 	strh.w	ip, [sl], #2
9001bb30:	e7ac      	b.n	9001ba8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001bb32:	f04f 0800 	mov.w	r8, #0
9001bb36:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001bb3a:	eb03 0008 	add.w	r0, r3, r8
9001bb3e:	2800      	cmp	r0, #0
9001bb40:	dc41      	bgt.n	9001bbc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001bb42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bb46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bb4a:	9b01      	ldr	r3, [sp, #4]
9001bb4c:	2b00      	cmp	r3, #0
9001bb4e:	f340 8097 	ble.w	9001bc80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001bb52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001bb56:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bb58:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bb5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bb60:	eef0 6a62 	vmov.f32	s13, s5
9001bb64:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001bb68:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bb6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bb70:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001bb74:	eef0 6a43 	vmov.f32	s13, s6
9001bb78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bb7c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001bb80:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bb84:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bb88:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bb8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bb90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bb94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bb98:	ee12 2a90 	vmov	r2, s5
9001bb9c:	eef0 2a47 	vmov.f32	s5, s14
9001bba0:	fb92 f3f3 	sdiv	r3, r2, r3
9001bba4:	ee13 2a10 	vmov	r2, s6
9001bba8:	9313      	str	r3, [sp, #76]	; 0x4c
9001bbaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bbac:	eeb0 3a67 	vmov.f32	s6, s15
9001bbb0:	fb92 f3f3 	sdiv	r3, r2, r3
9001bbb4:	9314      	str	r3, [sp, #80]	; 0x50
9001bbb6:	9b01      	ldr	r3, [sp, #4]
9001bbb8:	9a05      	ldr	r2, [sp, #20]
9001bbba:	3b01      	subs	r3, #1
9001bbbc:	9301      	str	r3, [sp, #4]
9001bbbe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bbc0:	bf08      	it	eq
9001bbc2:	4613      	moveq	r3, r2
9001bbc4:	e72c      	b.n	9001ba20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001bbc6:	140f      	asrs	r7, r1, #16
9001bbc8:	d453      	bmi.n	9001bc72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bbca:	f8de 5008 	ldr.w	r5, [lr, #8]
9001bbce:	42bd      	cmp	r5, r7
9001bbd0:	dd4f      	ble.n	9001bc72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bbd2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bbd6:	d44c      	bmi.n	9001bc72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bbd8:	f8de 000c 	ldr.w	r0, [lr, #12]
9001bbdc:	4560      	cmp	r0, ip
9001bbde:	dd48      	ble.n	9001bc72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001bbe0:	9803      	ldr	r0, [sp, #12]
9001bbe2:	b22d      	sxth	r5, r5
9001bbe4:	fb0c 0505 	mla	r5, ip, r5, r0
9001bbe8:	5de8      	ldrb	r0, [r5, r7]
9001bbea:	9d04      	ldr	r5, [sp, #16]
9001bbec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001bbf0:	f06f 0501 	mvn.w	r5, #1
9001bbf4:	fb05 fb08 	mul.w	fp, r5, r8
9001bbf8:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001bbfc:	f834 500b 	ldrh.w	r5, [r4, fp]
9001bc00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bc04:	122f      	asrs	r7, r5, #8
9001bc06:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001bc0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bc0e:	00ed      	lsls	r5, r5, #3
9001bc10:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001bc14:	fb17 f706 	smulbb	r7, r7, r6
9001bc18:	b2ed      	uxtb	r5, r5
9001bc1a:	fb19 f906 	smulbb	r9, r9, r6
9001bc1e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001bc22:	10c7      	asrs	r7, r0, #3
9001bc24:	fb15 f506 	smulbb	r5, r5, r6
9001bc28:	00c0      	lsls	r0, r0, #3
9001bc2a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bc2e:	fa1f fc8c 	uxth.w	ip, ip
9001bc32:	b2c0      	uxtb	r0, r0
9001bc34:	fb07 970a 	mla	r7, r7, sl, r9
9001bc38:	fb00 500a 	mla	r0, r0, sl, r5
9001bc3c:	f10c 0501 	add.w	r5, ip, #1
9001bc40:	b2bf      	uxth	r7, r7
9001bc42:	b280      	uxth	r0, r0
9001bc44:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bc48:	f107 0901 	add.w	r9, r7, #1
9001bc4c:	1c45      	adds	r5, r0, #1
9001bc4e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001bc52:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bc56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bc5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001bc5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bc62:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001bc66:	ea45 0c0c 	orr.w	ip, r5, ip
9001bc6a:	ea4c 0c09 	orr.w	ip, ip, r9
9001bc6e:	f824 c00b 	strh.w	ip, [r4, fp]
9001bc72:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bc74:	f108 38ff 	add.w	r8, r8, #4294967295
9001bc78:	4401      	add	r1, r0
9001bc7a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bc7c:	4402      	add	r2, r0
9001bc7e:	e75c      	b.n	9001bb3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001bc80:	b007      	add	sp, #28
9001bc82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001bc86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bc86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bc8a:	b085      	sub	sp, #20
9001bc8c:	4693      	mov	fp, r2
9001bc8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bc92:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001bc94:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001bc96:	6870      	ldr	r0, [r6, #4]
9001bc98:	9100      	str	r1, [sp, #0]
9001bc9a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001bc9e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001bca2:	fb00 2404 	mla	r4, r0, r4, r2
9001bca6:	6832      	ldr	r2, [r6, #0]
9001bca8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bcac:	682a      	ldr	r2, [r5, #0]
9001bcae:	9201      	str	r2, [sp, #4]
9001bcb0:	686a      	ldr	r2, [r5, #4]
9001bcb2:	3204      	adds	r2, #4
9001bcb4:	9202      	str	r2, [sp, #8]
9001bcb6:	9a00      	ldr	r2, [sp, #0]
9001bcb8:	2a00      	cmp	r2, #0
9001bcba:	dc03      	bgt.n	9001bcc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001bcbc:	f1bb 0f00 	cmp.w	fp, #0
9001bcc0:	f340 80a0 	ble.w	9001be04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001bcc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bcc6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001bcca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bcce:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bcd0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001bcd4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bcd8:	2b00      	cmp	r3, #0
9001bcda:	dd0c      	ble.n	9001bcf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bcdc:	1406      	asrs	r6, r0, #16
9001bcde:	d405      	bmi.n	9001bcec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bce0:	454e      	cmp	r6, r9
9001bce2:	da03      	bge.n	9001bcec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bce4:	1416      	asrs	r6, r2, #16
9001bce6:	d401      	bmi.n	9001bcec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001bce8:	4546      	cmp	r6, r8
9001bcea:	db05      	blt.n	9001bcf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bcec:	4470      	add	r0, lr
9001bcee:	4462      	add	r2, ip
9001bcf0:	3b01      	subs	r3, #1
9001bcf2:	3402      	adds	r4, #2
9001bcf4:	e7f0      	b.n	9001bcd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001bcf6:	d00f      	beq.n	9001bd18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001bcf8:	1e5e      	subs	r6, r3, #1
9001bcfa:	fb0e 0706 	mla	r7, lr, r6, r0
9001bcfe:	143f      	asrs	r7, r7, #16
9001bd00:	d541      	bpl.n	9001bd86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001bd02:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001bd06:	4698      	mov	r8, r3
9001bd08:	9603      	str	r6, [sp, #12]
9001bd0a:	f1b8 0f00 	cmp.w	r8, #0
9001bd0e:	dc59      	bgt.n	9001bdc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001bd10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bd14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bd18:	9b00      	ldr	r3, [sp, #0]
9001bd1a:	2b00      	cmp	r3, #0
9001bd1c:	dd72      	ble.n	9001be04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001bd1e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bd22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bd24:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bd28:	eeb0 6a62 	vmov.f32	s12, s5
9001bd2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bd30:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bd34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bd38:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001bd3c:	eeb0 6a43 	vmov.f32	s12, s6
9001bd40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bd44:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001bd48:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bd4c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bd50:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bd54:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bd58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bd5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bd60:	ee12 2a90 	vmov	r2, s5
9001bd64:	eef0 2a47 	vmov.f32	s5, s14
9001bd68:	fb92 fef3 	sdiv	lr, r2, r3
9001bd6c:	ee13 2a10 	vmov	r2, s6
9001bd70:	eeb0 3a67 	vmov.f32	s6, s15
9001bd74:	fb92 fcf3 	sdiv	ip, r2, r3
9001bd78:	9b00      	ldr	r3, [sp, #0]
9001bd7a:	3b01      	subs	r3, #1
9001bd7c:	9300      	str	r3, [sp, #0]
9001bd7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bd80:	bf08      	it	eq
9001bd82:	465b      	moveq	r3, fp
9001bd84:	e797      	b.n	9001bcb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bd86:	454f      	cmp	r7, r9
9001bd88:	dabb      	bge.n	9001bd02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bd8a:	fb0c 2606 	mla	r6, ip, r6, r2
9001bd8e:	1436      	asrs	r6, r6, #16
9001bd90:	d4b7      	bmi.n	9001bd02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bd92:	4546      	cmp	r6, r8
9001bd94:	dab5      	bge.n	9001bd02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001bd96:	461e      	mov	r6, r3
9001bd98:	46a0      	mov	r8, r4
9001bd9a:	2e00      	cmp	r6, #0
9001bd9c:	ddb8      	ble.n	9001bd10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001bd9e:	1417      	asrs	r7, r2, #16
9001bda0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001bda4:	9901      	ldr	r1, [sp, #4]
9001bda6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001bdaa:	4462      	add	r2, ip
9001bdac:	4470      	add	r0, lr
9001bdae:	fb0a 1707 	mla	r7, sl, r7, r1
9001bdb2:	9902      	ldr	r1, [sp, #8]
9001bdb4:	3e01      	subs	r6, #1
9001bdb6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001bdba:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001bdbe:	f828 7b02 	strh.w	r7, [r8], #2
9001bdc2:	e7ea      	b.n	9001bd9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001bdc4:	ea5f 4920 	movs.w	r9, r0, asr #16
9001bdc8:	d417      	bmi.n	9001bdfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bdca:	68ae      	ldr	r6, [r5, #8]
9001bdcc:	454e      	cmp	r6, r9
9001bdce:	dd14      	ble.n	9001bdfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bdd0:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001bdd4:	d411      	bmi.n	9001bdfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bdd6:	68ef      	ldr	r7, [r5, #12]
9001bdd8:	4557      	cmp	r7, sl
9001bdda:	dd0e      	ble.n	9001bdfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001bddc:	9f01      	ldr	r7, [sp, #4]
9001bdde:	b236      	sxth	r6, r6
9001bde0:	f06f 0101 	mvn.w	r1, #1
9001bde4:	fb0a 7606 	mla	r6, sl, r6, r7
9001bde8:	9f02      	ldr	r7, [sp, #8]
9001bdea:	f816 6009 	ldrb.w	r6, [r6, r9]
9001bdee:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001bdf2:	fb01 f608 	mul.w	r6, r1, r8
9001bdf6:	9903      	ldr	r1, [sp, #12]
9001bdf8:	538f      	strh	r7, [r1, r6]
9001bdfa:	4470      	add	r0, lr
9001bdfc:	4462      	add	r2, ip
9001bdfe:	f108 38ff 	add.w	r8, r8, #4294967295
9001be02:	e782      	b.n	9001bd0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001be04:	b005      	add	sp, #20
9001be06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001be0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001be0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be0e:	b087      	sub	sp, #28
9001be10:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001be12:	9205      	str	r2, [sp, #20]
9001be14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001be18:	9102      	str	r1, [sp, #8]
9001be1a:	9203      	str	r2, [sp, #12]
9001be1c:	6861      	ldr	r1, [r4, #4]
9001be1e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001be22:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001be26:	fb01 2000 	mla	r0, r1, r0, r2
9001be2a:	6822      	ldr	r2, [r4, #0]
9001be2c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001be30:	9200      	str	r2, [sp, #0]
9001be32:	f8dc 2000 	ldr.w	r2, [ip]
9001be36:	9204      	str	r2, [sp, #16]
9001be38:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001be3c:	3204      	adds	r2, #4
9001be3e:	9201      	str	r2, [sp, #4]
9001be40:	9a03      	ldr	r2, [sp, #12]
9001be42:	43d5      	mvns	r5, r2
9001be44:	b2ed      	uxtb	r5, r5
9001be46:	9a02      	ldr	r2, [sp, #8]
9001be48:	2a00      	cmp	r2, #0
9001be4a:	dc03      	bgt.n	9001be54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001be4c:	9a05      	ldr	r2, [sp, #20]
9001be4e:	2a00      	cmp	r2, #0
9001be50:	f340 812c 	ble.w	9001c0ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001be54:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001be56:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001be5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001be5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001be60:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001be64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001be68:	2b00      	cmp	r3, #0
9001be6a:	dd10      	ble.n	9001be8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001be6c:	140c      	asrs	r4, r1, #16
9001be6e:	d405      	bmi.n	9001be7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001be70:	4574      	cmp	r4, lr
9001be72:	da03      	bge.n	9001be7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001be74:	1414      	asrs	r4, r2, #16
9001be76:	d401      	bmi.n	9001be7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001be78:	42bc      	cmp	r4, r7
9001be7a:	db09      	blt.n	9001be90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001be7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001be7e:	3b01      	subs	r3, #1
9001be80:	9800      	ldr	r0, [sp, #0]
9001be82:	4421      	add	r1, r4
9001be84:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001be86:	3002      	adds	r0, #2
9001be88:	4422      	add	r2, r4
9001be8a:	9000      	str	r0, [sp, #0]
9001be8c:	e7ec      	b.n	9001be68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001be8e:	d071      	beq.n	9001bf74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001be90:	1e5c      	subs	r4, r3, #1
9001be92:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001be94:	fb06 1604 	mla	r6, r6, r4, r1
9001be98:	1436      	asrs	r6, r6, #16
9001be9a:	d45d      	bmi.n	9001bf58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001be9c:	4576      	cmp	r6, lr
9001be9e:	da5b      	bge.n	9001bf58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001bea0:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001bea2:	fb06 2404 	mla	r4, r6, r4, r2
9001bea6:	1424      	asrs	r4, r4, #16
9001bea8:	d456      	bmi.n	9001bf58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001beaa:	42bc      	cmp	r4, r7
9001beac:	da54      	bge.n	9001bf58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001beae:	4698      	mov	r8, r3
9001beb0:	f8dd 9000 	ldr.w	r9, [sp]
9001beb4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001beb8:	f1b8 0f00 	cmp.w	r8, #0
9001bebc:	dd54      	ble.n	9001bf68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001bebe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001bec2:	1414      	asrs	r4, r2, #16
9001bec4:	9804      	ldr	r0, [sp, #16]
9001bec6:	140e      	asrs	r6, r1, #16
9001bec8:	f108 38ff 	add.w	r8, r8, #4294967295
9001becc:	fb07 0404 	mla	r4, r7, r4, r0
9001bed0:	9801      	ldr	r0, [sp, #4]
9001bed2:	f814 e006 	ldrb.w	lr, [r4, r6]
9001bed6:	f8b9 4000 	ldrh.w	r4, [r9]
9001beda:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001bede:	1227      	asrs	r7, r4, #8
9001bee0:	eb00 0b0e 	add.w	fp, r0, lr
9001bee4:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001bee8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001beec:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001beee:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001bef2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001bef6:	4401      	add	r1, r0
9001bef8:	fb16 f60a 	smulbb	r6, r6, sl
9001befc:	9814      	ldr	r0, [sp, #80]	; 0x50
9001befe:	fb1b fb0a 	smulbb	fp, fp, sl
9001bf02:	fb07 6705 	mla	r7, r7, r5, r6
9001bf06:	10e6      	asrs	r6, r4, #3
9001bf08:	00e4      	lsls	r4, r4, #3
9001bf0a:	4402      	add	r2, r0
9001bf0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001bf10:	b2bf      	uxth	r7, r7
9001bf12:	b2e4      	uxtb	r4, r4
9001bf14:	fb06 b605 	mla	r6, r6, r5, fp
9001bf18:	fb14 f405 	smulbb	r4, r4, r5
9001bf1c:	b2b6      	uxth	r6, r6
9001bf1e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001bf22:	1c7c      	adds	r4, r7, #1
9001bf24:	f106 0b01 	add.w	fp, r6, #1
9001bf28:	fa1f fe8e 	uxth.w	lr, lr
9001bf2c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001bf30:	f10e 0401 	add.w	r4, lr, #1
9001bf34:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001bf38:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bf3c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001bf40:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001bf44:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001bf48:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001bf4c:	4327      	orrs	r7, r4
9001bf4e:	ea47 070b 	orr.w	r7, r7, fp
9001bf52:	f829 7b02 	strh.w	r7, [r9], #2
9001bf56:	e7af      	b.n	9001beb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001bf58:	f04f 0e00 	mov.w	lr, #0
9001bf5c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001bf60:	eb03 040e 	add.w	r4, r3, lr
9001bf64:	2c00      	cmp	r4, #0
9001bf66:	dc43      	bgt.n	9001bff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001bf68:	9a00      	ldr	r2, [sp, #0]
9001bf6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bf6e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001bf72:	9300      	str	r3, [sp, #0]
9001bf74:	9b02      	ldr	r3, [sp, #8]
9001bf76:	2b00      	cmp	r3, #0
9001bf78:	f340 8098 	ble.w	9001c0ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001bf7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001bf80:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bf82:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bf86:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bf8a:	eef0 6a62 	vmov.f32	s13, s5
9001bf8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001bf92:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bf96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bf9a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001bf9e:	eef0 6a43 	vmov.f32	s13, s6
9001bfa2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001bfa6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001bfaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bfae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bfb2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bfb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bfba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bfbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bfc2:	ee12 2a90 	vmov	r2, s5
9001bfc6:	eef0 2a47 	vmov.f32	s5, s14
9001bfca:	fb92 f3f3 	sdiv	r3, r2, r3
9001bfce:	ee13 2a10 	vmov	r2, s6
9001bfd2:	9313      	str	r3, [sp, #76]	; 0x4c
9001bfd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bfd6:	eeb0 3a67 	vmov.f32	s6, s15
9001bfda:	fb92 f3f3 	sdiv	r3, r2, r3
9001bfde:	9314      	str	r3, [sp, #80]	; 0x50
9001bfe0:	9b02      	ldr	r3, [sp, #8]
9001bfe2:	9a05      	ldr	r2, [sp, #20]
9001bfe4:	3b01      	subs	r3, #1
9001bfe6:	9302      	str	r3, [sp, #8]
9001bfe8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bfea:	bf08      	it	eq
9001bfec:	4613      	moveq	r3, r2
9001bfee:	e72a      	b.n	9001be46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bff0:	140f      	asrs	r7, r1, #16
9001bff2:	d454      	bmi.n	9001c09e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bff4:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001bff8:	42be      	cmp	r6, r7
9001bffa:	dd50      	ble.n	9001c09e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001bffc:	ea5f 4822 	movs.w	r8, r2, asr #16
9001c000:	d44d      	bmi.n	9001c09e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c002:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001c006:	4544      	cmp	r4, r8
9001c008:	dd49      	ble.n	9001c09e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c00a:	9c04      	ldr	r4, [sp, #16]
9001c00c:	b236      	sxth	r6, r6
9001c00e:	f06f 0001 	mvn.w	r0, #1
9001c012:	fb08 4606 	mla	r6, r8, r6, r4
9001c016:	9c01      	ldr	r4, [sp, #4]
9001c018:	fb00 fa0e 	mul.w	sl, r0, lr
9001c01c:	9800      	ldr	r0, [sp, #0]
9001c01e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001c022:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001c026:	eb04 0b08 	add.w	fp, r4, r8
9001c02a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001c02e:	9801      	ldr	r0, [sp, #4]
9001c030:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001c034:	1227      	asrs	r7, r4, #8
9001c036:	f89b b001 	ldrb.w	fp, [fp, #1]
9001c03a:	fb16 f609 	smulbb	r6, r6, r9
9001c03e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c042:	f810 8008 	ldrb.w	r8, [r0, r8]
9001c046:	fb1b fb09 	smulbb	fp, fp, r9
9001c04a:	fb07 6705 	mla	r7, r7, r5, r6
9001c04e:	10e6      	asrs	r6, r4, #3
9001c050:	00e4      	lsls	r4, r4, #3
9001c052:	9800      	ldr	r0, [sp, #0]
9001c054:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c058:	b2bf      	uxth	r7, r7
9001c05a:	b2e4      	uxtb	r4, r4
9001c05c:	fb06 b605 	mla	r6, r6, r5, fp
9001c060:	fb14 f405 	smulbb	r4, r4, r5
9001c064:	b2b6      	uxth	r6, r6
9001c066:	fb08 4809 	mla	r8, r8, r9, r4
9001c06a:	1c7c      	adds	r4, r7, #1
9001c06c:	f106 0b01 	add.w	fp, r6, #1
9001c070:	fa1f f888 	uxth.w	r8, r8
9001c074:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001c078:	f108 0401 	add.w	r4, r8, #1
9001c07c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001c080:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c084:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001c088:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001c08c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001c090:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001c094:	4327      	orrs	r7, r4
9001c096:	ea47 070b 	orr.w	r7, r7, fp
9001c09a:	f820 700a 	strh.w	r7, [r0, sl]
9001c09e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c0a0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c0a4:	4401      	add	r1, r0
9001c0a6:	9814      	ldr	r0, [sp, #80]	; 0x50
9001c0a8:	4402      	add	r2, r0
9001c0aa:	e759      	b.n	9001bf60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001c0ac:	b007      	add	sp, #28
9001c0ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001c0b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c0b8:	b085      	sub	sp, #20
9001c0ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c0be:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001c0c0:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001c0c2:	9203      	str	r2, [sp, #12]
9001c0c4:	6870      	ldr	r0, [r6, #4]
9001c0c6:	686f      	ldr	r7, [r5, #4]
9001c0c8:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001c0cc:	3704      	adds	r7, #4
9001c0ce:	9101      	str	r1, [sp, #4]
9001c0d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c0d4:	fb00 2404 	mla	r4, r0, r4, r2
9001c0d8:	6832      	ldr	r2, [r6, #0]
9001c0da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c0de:	682a      	ldr	r2, [r5, #0]
9001c0e0:	9202      	str	r2, [sp, #8]
9001c0e2:	9a01      	ldr	r2, [sp, #4]
9001c0e4:	2a00      	cmp	r2, #0
9001c0e6:	dc03      	bgt.n	9001c0f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c0e8:	9a03      	ldr	r2, [sp, #12]
9001c0ea:	2a00      	cmp	r2, #0
9001c0ec:	f340 80cc 	ble.w	9001c288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c0f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c0f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c0f6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c0fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c0fc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001c100:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c104:	2b00      	cmp	r3, #0
9001c106:	dd0d      	ble.n	9001c124 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c108:	1406      	asrs	r6, r0, #16
9001c10a:	d405      	bmi.n	9001c118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c10c:	454e      	cmp	r6, r9
9001c10e:	da03      	bge.n	9001c118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c110:	1416      	asrs	r6, r2, #16
9001c112:	d401      	bmi.n	9001c118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001c114:	4546      	cmp	r6, r8
9001c116:	db06      	blt.n	9001c126 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c118:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001c11a:	4460      	add	r0, ip
9001c11c:	3b01      	subs	r3, #1
9001c11e:	3402      	adds	r4, #2
9001c120:	4432      	add	r2, r6
9001c122:	e7ef      	b.n	9001c104 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001c124:	d00f      	beq.n	9001c146 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001c126:	1e5e      	subs	r6, r3, #1
9001c128:	fb0c 0e06 	mla	lr, ip, r6, r0
9001c12c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001c130:	d543      	bpl.n	9001c1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001c132:	4698      	mov	r8, r3
9001c134:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001c138:	f1b8 0f00 	cmp.w	r8, #0
9001c13c:	dc71      	bgt.n	9001c222 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001c13e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c142:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c146:	9b01      	ldr	r3, [sp, #4]
9001c148:	2b00      	cmp	r3, #0
9001c14a:	f340 809d 	ble.w	9001c288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001c14e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c152:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c154:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c158:	eeb0 6a62 	vmov.f32	s12, s5
9001c15c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c160:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c164:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c168:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c16c:	eeb0 6a43 	vmov.f32	s12, s6
9001c170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c174:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c178:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c17c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c180:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c184:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c18c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c190:	ee12 2a90 	vmov	r2, s5
9001c194:	eef0 2a47 	vmov.f32	s5, s14
9001c198:	fb92 fcf3 	sdiv	ip, r2, r3
9001c19c:	ee13 2a10 	vmov	r2, s6
9001c1a0:	eeb0 3a67 	vmov.f32	s6, s15
9001c1a4:	fb92 f3f3 	sdiv	r3, r2, r3
9001c1a8:	9312      	str	r3, [sp, #72]	; 0x48
9001c1aa:	9b01      	ldr	r3, [sp, #4]
9001c1ac:	9a03      	ldr	r2, [sp, #12]
9001c1ae:	3b01      	subs	r3, #1
9001c1b0:	9301      	str	r3, [sp, #4]
9001c1b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c1b4:	bf08      	it	eq
9001c1b6:	4613      	moveq	r3, r2
9001c1b8:	e793      	b.n	9001c0e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001c1ba:	45ce      	cmp	lr, r9
9001c1bc:	dab9      	bge.n	9001c132 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c1be:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c1c0:	fb01 2606 	mla	r6, r1, r6, r2
9001c1c4:	1436      	asrs	r6, r6, #16
9001c1c6:	d4b4      	bmi.n	9001c132 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c1c8:	4546      	cmp	r6, r8
9001c1ca:	dab2      	bge.n	9001c132 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c1cc:	4698      	mov	r8, r3
9001c1ce:	46a2      	mov	sl, r4
9001c1d0:	f1b8 0f00 	cmp.w	r8, #0
9001c1d4:	ddb3      	ble.n	9001c13e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001c1d6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001c1da:	1416      	asrs	r6, r2, #16
9001c1dc:	9902      	ldr	r1, [sp, #8]
9001c1de:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001c1e2:	f108 38ff 	add.w	r8, r8, #4294967295
9001c1e6:	4460      	add	r0, ip
9001c1e8:	fb09 1606 	mla	r6, r9, r6, r1
9001c1ec:	4928      	ldr	r1, [pc, #160]	; (9001c290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001c1ee:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001c1f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c1f6:	eb07 0b0e 	add.w	fp, r7, lr
9001c1fa:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001c1fe:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001c202:	00f6      	lsls	r6, r6, #3
9001c204:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001c208:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c20a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c20e:	440a      	add	r2, r1
9001c210:	ea49 0606 	orr.w	r6, r9, r6
9001c214:	f817 900e 	ldrb.w	r9, [r7, lr]
9001c218:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001c21c:	f82a 6b02 	strh.w	r6, [sl], #2
9001c220:	e7d6      	b.n	9001c1d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001c222:	ea5f 4920 	movs.w	r9, r0, asr #16
9001c226:	d429      	bmi.n	9001c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c228:	68ae      	ldr	r6, [r5, #8]
9001c22a:	454e      	cmp	r6, r9
9001c22c:	dd26      	ble.n	9001c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c22e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001c232:	d423      	bmi.n	9001c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c234:	68e9      	ldr	r1, [r5, #12]
9001c236:	4559      	cmp	r1, fp
9001c238:	dd20      	ble.n	9001c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001c23a:	fa0f fe86 	sxth.w	lr, r6
9001c23e:	9902      	ldr	r1, [sp, #8]
9001c240:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001c244:	f06f 0101 	mvn.w	r1, #1
9001c248:	f81e e009 	ldrb.w	lr, [lr, r9]
9001c24c:	fb01 f908 	mul.w	r9, r1, r8
9001c250:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001c254:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c258:	eb07 060e 	add.w	r6, r7, lr
9001c25c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001c260:	7876      	ldrb	r6, [r6, #1]
9001c262:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001c266:	00f6      	lsls	r6, r6, #3
9001c268:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c26c:	ea4b 0606 	orr.w	r6, fp, r6
9001c270:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001c274:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001c278:	f82a 6009 	strh.w	r6, [sl, r9]
9001c27c:	9912      	ldr	r1, [sp, #72]	; 0x48
9001c27e:	4460      	add	r0, ip
9001c280:	f108 38ff 	add.w	r8, r8, #4294967295
9001c284:	440a      	add	r2, r1
9001c286:	e757      	b.n	9001c138 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001c288:	b005      	add	sp, #20
9001c28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c28e:	bf00      	nop
9001c290:	fffff800 	.word	0xfffff800

9001c294 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c298:	b087      	sub	sp, #28
9001c29a:	468b      	mov	fp, r1
9001c29c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c2a0:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c2a2:	9204      	str	r2, [sp, #16]
9001c2a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c2a8:	6841      	ldr	r1, [r0, #4]
9001c2aa:	9205      	str	r2, [sp, #20]
9001c2ac:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001c2b0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c2b4:	fb01 2404 	mla	r4, r1, r4, r2
9001c2b8:	6802      	ldr	r2, [r0, #0]
9001c2ba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c2be:	f8dc 2000 	ldr.w	r2, [ip]
9001c2c2:	9201      	str	r2, [sp, #4]
9001c2c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001c2c8:	3204      	adds	r2, #4
9001c2ca:	9202      	str	r2, [sp, #8]
9001c2cc:	f1bb 0f00 	cmp.w	fp, #0
9001c2d0:	dc03      	bgt.n	9001c2da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001c2d2:	9a04      	ldr	r2, [sp, #16]
9001c2d4:	2a00      	cmp	r2, #0
9001c2d6:	f340 8138 	ble.w	9001c54a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c2da:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c2dc:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001c2e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c2e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c2e6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001c2ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c2ee:	2b00      	cmp	r3, #0
9001c2f0:	dd0e      	ble.n	9001c310 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c2f2:	1402      	asrs	r2, r0, #16
9001c2f4:	d405      	bmi.n	9001c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c2f6:	42ba      	cmp	r2, r7
9001c2f8:	da03      	bge.n	9001c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c2fa:	140a      	asrs	r2, r1, #16
9001c2fc:	d401      	bmi.n	9001c302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001c2fe:	42b2      	cmp	r2, r6
9001c300:	db07      	blt.n	9001c312 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c302:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c304:	3b01      	subs	r3, #1
9001c306:	3402      	adds	r4, #2
9001c308:	4410      	add	r0, r2
9001c30a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c30c:	4411      	add	r1, r2
9001c30e:	e7ee      	b.n	9001c2ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001c310:	d019      	beq.n	9001c346 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c312:	1e5a      	subs	r2, r3, #1
9001c314:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c316:	fb05 0502 	mla	r5, r5, r2, r0
9001c31a:	142d      	asrs	r5, r5, #16
9001c31c:	d409      	bmi.n	9001c332 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c31e:	42bd      	cmp	r5, r7
9001c320:	da07      	bge.n	9001c332 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c322:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c324:	fb05 1202 	mla	r2, r5, r2, r1
9001c328:	1412      	asrs	r2, r2, #16
9001c32a:	d402      	bmi.n	9001c332 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001c32c:	42b2      	cmp	r2, r6
9001c32e:	f2c0 80ac 	blt.w	9001c48a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001c332:	f04f 0e00 	mov.w	lr, #0
9001c336:	eb03 020e 	add.w	r2, r3, lr
9001c33a:	2a00      	cmp	r2, #0
9001c33c:	dc3e      	bgt.n	9001c3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c33e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c342:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c346:	f1bb 0f00 	cmp.w	fp, #0
9001c34a:	f340 80fe 	ble.w	9001c54a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001c34e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c352:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c354:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c358:	f1bb 0b01 	subs.w	fp, fp, #1
9001c35c:	eeb0 6a62 	vmov.f32	s12, s5
9001c360:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c364:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c368:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c36c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c370:	eeb0 6a43 	vmov.f32	s12, s6
9001c374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c378:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c37c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c380:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c384:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c388:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c38c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c390:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c394:	ee12 2a90 	vmov	r2, s5
9001c398:	eef0 2a47 	vmov.f32	s5, s14
9001c39c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c3a0:	ee13 2a10 	vmov	r2, s6
9001c3a4:	9313      	str	r3, [sp, #76]	; 0x4c
9001c3a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c3a8:	eeb0 3a67 	vmov.f32	s6, s15
9001c3ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001c3b0:	9a04      	ldr	r2, [sp, #16]
9001c3b2:	9314      	str	r3, [sp, #80]	; 0x50
9001c3b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c3b6:	bf08      	it	eq
9001c3b8:	4613      	moveq	r3, r2
9001c3ba:	e787      	b.n	9001c2cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001c3bc:	1406      	asrs	r6, r0, #16
9001c3be:	d45d      	bmi.n	9001c47c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c3c0:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001c3c4:	42b5      	cmp	r5, r6
9001c3c6:	dd59      	ble.n	9001c47c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c3c8:	140f      	asrs	r7, r1, #16
9001c3ca:	d457      	bmi.n	9001c47c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c3cc:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001c3d0:	42ba      	cmp	r2, r7
9001c3d2:	dd53      	ble.n	9001c47c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c3d4:	9a01      	ldr	r2, [sp, #4]
9001c3d6:	b22d      	sxth	r5, r5
9001c3d8:	fb07 2505 	mla	r5, r7, r5, r2
9001c3dc:	5daa      	ldrb	r2, [r5, r6]
9001c3de:	9d02      	ldr	r5, [sp, #8]
9001c3e0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c3e4:	0e2e      	lsrs	r6, r5, #24
9001c3e6:	d049      	beq.n	9001c47c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001c3e8:	f06f 0201 	mvn.w	r2, #1
9001c3ec:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c3f0:	fb02 f20e 	mul.w	r2, r2, lr
9001c3f4:	f834 8002 	ldrh.w	r8, [r4, r2]
9001c3f8:	9203      	str	r2, [sp, #12]
9001c3fa:	9a05      	ldr	r2, [sp, #20]
9001c3fc:	ea4f 2728 	mov.w	r7, r8, asr #8
9001c400:	4356      	muls	r6, r2
9001c402:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c406:	1c72      	adds	r2, r6, #1
9001c408:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c40c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c410:	b2ed      	uxtb	r5, r5
9001c412:	1212      	asrs	r2, r2, #8
9001c414:	fa1f f982 	uxth.w	r9, r2
9001c418:	43d2      	mvns	r2, r2
9001c41a:	fb16 f609 	smulbb	r6, r6, r9
9001c41e:	b2d2      	uxtb	r2, r2
9001c420:	fb15 f509 	smulbb	r5, r5, r9
9001c424:	fb07 6702 	mla	r7, r7, r2, r6
9001c428:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001c42c:	fb1a fa09 	smulbb	sl, sl, r9
9001c430:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c434:	b2bf      	uxth	r7, r7
9001c436:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c43a:	fa5f f888 	uxtb.w	r8, r8
9001c43e:	fb06 a602 	mla	r6, r6, r2, sl
9001c442:	fb08 5502 	mla	r5, r8, r2, r5
9001c446:	1c7a      	adds	r2, r7, #1
9001c448:	b2b6      	uxth	r6, r6
9001c44a:	b2ad      	uxth	r5, r5
9001c44c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c450:	9a03      	ldr	r2, [sp, #12]
9001c452:	f105 0a01 	add.w	sl, r5, #1
9001c456:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c45a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c45e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c462:	ea4a 0707 	orr.w	r7, sl, r7
9001c466:	f106 0a01 	add.w	sl, r6, #1
9001c46a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c46e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c472:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c476:	ea47 070a 	orr.w	r7, r7, sl
9001c47a:	52a7      	strh	r7, [r4, r2]
9001c47c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c47e:	f10e 3eff 	add.w	lr, lr, #4294967295
9001c482:	4410      	add	r0, r2
9001c484:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c486:	4411      	add	r1, r2
9001c488:	e755      	b.n	9001c336 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c48a:	f04f 0800 	mov.w	r8, #0
9001c48e:	eba3 0208 	sub.w	r2, r3, r8
9001c492:	2a00      	cmp	r2, #0
9001c494:	f77f af53 	ble.w	9001c33e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c498:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001c49c:	140a      	asrs	r2, r1, #16
9001c49e:	9f01      	ldr	r7, [sp, #4]
9001c4a0:	1405      	asrs	r5, r0, #16
9001c4a2:	fb06 7202 	mla	r2, r6, r2, r7
9001c4a6:	5d52      	ldrb	r2, [r2, r5]
9001c4a8:	9d02      	ldr	r5, [sp, #8]
9001c4aa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001c4ae:	0e2e      	lsrs	r6, r5, #24
9001c4b0:	d044      	beq.n	9001c53c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001c4b2:	9a05      	ldr	r2, [sp, #20]
9001c4b4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c4b8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c4bc:	4356      	muls	r6, r2
9001c4be:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c4c2:	1c72      	adds	r2, r6, #1
9001c4c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c4c8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001c4cc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c4d0:	b2ed      	uxtb	r5, r5
9001c4d2:	1212      	asrs	r2, r2, #8
9001c4d4:	fa1f f982 	uxth.w	r9, r2
9001c4d8:	43d2      	mvns	r2, r2
9001c4da:	fb16 f609 	smulbb	r6, r6, r9
9001c4de:	b2d2      	uxtb	r2, r2
9001c4e0:	fb15 f509 	smulbb	r5, r5, r9
9001c4e4:	fb07 6702 	mla	r7, r7, r2, r6
9001c4e8:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c4ec:	fb1a fa09 	smulbb	sl, sl, r9
9001c4f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c4f4:	b2bf      	uxth	r7, r7
9001c4f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c4fa:	fa5f fe8e 	uxtb.w	lr, lr
9001c4fe:	fb06 a602 	mla	r6, r6, r2, sl
9001c502:	fb0e 5502 	mla	r5, lr, r2, r5
9001c506:	1c7a      	adds	r2, r7, #1
9001c508:	b2b6      	uxth	r6, r6
9001c50a:	b2ad      	uxth	r5, r5
9001c50c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c510:	f105 0a01 	add.w	sl, r5, #1
9001c514:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c518:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c51c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c520:	ea4a 0707 	orr.w	r7, sl, r7
9001c524:	f106 0a01 	add.w	sl, r6, #1
9001c528:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c52c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c530:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c534:	ea47 070a 	orr.w	r7, r7, sl
9001c538:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c53c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c53e:	f108 0801 	add.w	r8, r8, #1
9001c542:	4410      	add	r0, r2
9001c544:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c546:	4411      	add	r1, r2
9001c548:	e7a1      	b.n	9001c48e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001c54a:	b007      	add	sp, #28
9001c54c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001c550 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c554:	b085      	sub	sp, #20
9001c556:	468b      	mov	fp, r1
9001c558:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c55c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c55e:	9203      	str	r2, [sp, #12]
9001c560:	6841      	ldr	r1, [r0, #4]
9001c562:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001c566:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001c56a:	fb01 2404 	mla	r4, r1, r4, r2
9001c56e:	6802      	ldr	r2, [r0, #0]
9001c570:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c574:	f8de 2000 	ldr.w	r2, [lr]
9001c578:	9200      	str	r2, [sp, #0]
9001c57a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c57e:	3204      	adds	r2, #4
9001c580:	9201      	str	r2, [sp, #4]
9001c582:	f1bb 0f00 	cmp.w	fp, #0
9001c586:	dc03      	bgt.n	9001c590 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001c588:	9a03      	ldr	r2, [sp, #12]
9001c58a:	2a00      	cmp	r2, #0
9001c58c:	f340 8153 	ble.w	9001c836 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c590:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001c592:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c596:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c59a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001c59c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c5a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c5a4:	2b00      	cmp	r3, #0
9001c5a6:	dd0e      	ble.n	9001c5c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001c5a8:	1408      	asrs	r0, r1, #16
9001c5aa:	d405      	bmi.n	9001c5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c5ac:	42b8      	cmp	r0, r7
9001c5ae:	da03      	bge.n	9001c5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c5b0:	1410      	asrs	r0, r2, #16
9001c5b2:	d401      	bmi.n	9001c5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001c5b4:	42b0      	cmp	r0, r6
9001c5b6:	db07      	blt.n	9001c5c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001c5b8:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c5ba:	3b01      	subs	r3, #1
9001c5bc:	3402      	adds	r4, #2
9001c5be:	4401      	add	r1, r0
9001c5c0:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c5c2:	4402      	add	r2, r0
9001c5c4:	e7ee      	b.n	9001c5a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001c5c6:	d017      	beq.n	9001c5f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c5c8:	1e58      	subs	r0, r3, #1
9001c5ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001c5cc:	fb05 1500 	mla	r5, r5, r0, r1
9001c5d0:	142d      	asrs	r5, r5, #16
9001c5d2:	d409      	bmi.n	9001c5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c5d4:	42bd      	cmp	r5, r7
9001c5d6:	da07      	bge.n	9001c5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c5d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001c5da:	fb05 2000 	mla	r0, r5, r0, r2
9001c5de:	1400      	asrs	r0, r0, #16
9001c5e0:	d402      	bmi.n	9001c5e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001c5e2:	42b0      	cmp	r0, r6
9001c5e4:	f2c0 80bc 	blt.w	9001c760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001c5e8:	2600      	movs	r6, #0
9001c5ea:	1998      	adds	r0, r3, r6
9001c5ec:	2800      	cmp	r0, #0
9001c5ee:	dc3e      	bgt.n	9001c66e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001c5f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c5f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c5f8:	f1bb 0f00 	cmp.w	fp, #0
9001c5fc:	f340 811b 	ble.w	9001c836 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001c600:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c604:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c606:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c60a:	f1bb 0b01 	subs.w	fp, fp, #1
9001c60e:	eeb0 6a62 	vmov.f32	s12, s5
9001c612:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c616:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c61a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c61e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001c622:	eeb0 6a43 	vmov.f32	s12, s6
9001c626:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c62a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001c62e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c632:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c636:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c63a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c63e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c642:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c646:	ee12 2a90 	vmov	r2, s5
9001c64a:	eef0 2a47 	vmov.f32	s5, s14
9001c64e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c652:	ee13 2a10 	vmov	r2, s6
9001c656:	9311      	str	r3, [sp, #68]	; 0x44
9001c658:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c65a:	eeb0 3a67 	vmov.f32	s6, s15
9001c65e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c662:	9a03      	ldr	r2, [sp, #12]
9001c664:	9312      	str	r3, [sp, #72]	; 0x48
9001c666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001c668:	bf08      	it	eq
9001c66a:	4613      	moveq	r3, r2
9001c66c:	e789      	b.n	9001c582 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001c66e:	140f      	asrs	r7, r1, #16
9001c670:	d426      	bmi.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c672:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c676:	42bd      	cmp	r5, r7
9001c678:	dd22      	ble.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c67a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001c67e:	d41f      	bmi.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c680:	f8de 000c 	ldr.w	r0, [lr, #12]
9001c684:	4560      	cmp	r0, ip
9001c686:	dd1b      	ble.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c688:	9800      	ldr	r0, [sp, #0]
9001c68a:	b22d      	sxth	r5, r5
9001c68c:	fb0c 0505 	mla	r5, ip, r5, r0
9001c690:	5de8      	ldrb	r0, [r5, r7]
9001c692:	9d01      	ldr	r5, [sp, #4]
9001c694:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001c698:	0e07      	lsrs	r7, r0, #24
9001c69a:	2fff      	cmp	r7, #255	; 0xff
9001c69c:	d116      	bne.n	9001c6cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001c69e:	f06f 0501 	mvn.w	r5, #1
9001c6a2:	fb05 f706 	mul.w	r7, r5, r6
9001c6a6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001c6aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001c6ae:	0945      	lsrs	r5, r0, #5
9001c6b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001c6b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c6b8:	ea4c 0505 	orr.w	r5, ip, r5
9001c6bc:	4305      	orrs	r5, r0
9001c6be:	53e5      	strh	r5, [r4, r7]
9001c6c0:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c6c2:	3e01      	subs	r6, #1
9001c6c4:	4401      	add	r1, r0
9001c6c6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c6c8:	4402      	add	r2, r0
9001c6ca:	e78e      	b.n	9001c5ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001c6cc:	b2fd      	uxtb	r5, r7
9001c6ce:	2f00      	cmp	r7, #0
9001c6d0:	d0f6      	beq.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c6d2:	f06f 0701 	mvn.w	r7, #1
9001c6d6:	fa1f f985 	uxth.w	r9, r5
9001c6da:	43ed      	mvns	r5, r5
9001c6dc:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001c6e0:	4377      	muls	r7, r6
9001c6e2:	fb1a fa09 	smulbb	sl, sl, r9
9001c6e6:	b2ed      	uxtb	r5, r5
9001c6e8:	f834 8007 	ldrh.w	r8, [r4, r7]
9001c6ec:	9702      	str	r7, [sp, #8]
9001c6ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001c6f2:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001c6f6:	fb17 f709 	smulbb	r7, r7, r9
9001c6fa:	b2c0      	uxtb	r0, r0
9001c6fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c700:	fb10 f009 	smulbb	r0, r0, r9
9001c704:	fb0c 7c05 	mla	ip, ip, r5, r7
9001c708:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001c70c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c710:	fa1f fc8c 	uxth.w	ip, ip
9001c714:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c718:	fa5f f888 	uxtb.w	r8, r8
9001c71c:	fb07 a705 	mla	r7, r7, r5, sl
9001c720:	fb08 0005 	mla	r0, r8, r5, r0
9001c724:	f10c 0501 	add.w	r5, ip, #1
9001c728:	b2bf      	uxth	r7, r7
9001c72a:	b280      	uxth	r0, r0
9001c72c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001c730:	f100 0a01 	add.w	sl, r0, #1
9001c734:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c738:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001c73c:	9802      	ldr	r0, [sp, #8]
9001c73e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c742:	ea4a 0c0c 	orr.w	ip, sl, ip
9001c746:	f107 0a01 	add.w	sl, r7, #1
9001c74a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c74e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c752:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c756:	ea4c 0c0a 	orr.w	ip, ip, sl
9001c75a:	f824 c000 	strh.w	ip, [r4, r0]
9001c75e:	e7af      	b.n	9001c6c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001c760:	f04f 0800 	mov.w	r8, #0
9001c764:	eba3 0008 	sub.w	r0, r3, r8
9001c768:	2800      	cmp	r0, #0
9001c76a:	f77f af41 	ble.w	9001c5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c76e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001c772:	1410      	asrs	r0, r2, #16
9001c774:	9f00      	ldr	r7, [sp, #0]
9001c776:	140d      	asrs	r5, r1, #16
9001c778:	fb06 7000 	mla	r0, r6, r0, r7
9001c77c:	5d40      	ldrb	r0, [r0, r5]
9001c77e:	9d01      	ldr	r5, [sp, #4]
9001c780:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001c784:	0e2e      	lsrs	r6, r5, #24
9001c786:	2eff      	cmp	r6, #255	; 0xff
9001c788:	d112      	bne.n	9001c7b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001c78a:	482c      	ldr	r0, [pc, #176]	; (9001c83c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001c78c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001c790:	0968      	lsrs	r0, r5, #5
9001c792:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c796:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c79a:	4330      	orrs	r0, r6
9001c79c:	4328      	orrs	r0, r5
9001c79e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001c7a2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001c7a4:	f108 0801 	add.w	r8, r8, #1
9001c7a8:	4401      	add	r1, r0
9001c7aa:	9812      	ldr	r0, [sp, #72]	; 0x48
9001c7ac:	4402      	add	r2, r0
9001c7ae:	e7d9      	b.n	9001c764 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001c7b0:	b2f0      	uxtb	r0, r6
9001c7b2:	2e00      	cmp	r6, #0
9001c7b4:	d0f5      	beq.n	9001c7a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c7b6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001c7ba:	fa1f f980 	uxth.w	r9, r0
9001c7be:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001c7c2:	43c0      	mvns	r0, r0
9001c7c4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001c7c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001c7cc:	fb16 f609 	smulbb	r6, r6, r9
9001c7d0:	b2c0      	uxtb	r0, r0
9001c7d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c7d6:	b2ed      	uxtb	r5, r5
9001c7d8:	fb1a fa09 	smulbb	sl, sl, r9
9001c7dc:	fb07 6700 	mla	r7, r7, r0, r6
9001c7e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001c7e4:	fb15 f509 	smulbb	r5, r5, r9
9001c7e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c7ec:	b2bf      	uxth	r7, r7
9001c7ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c7f2:	fa5f fc8c 	uxtb.w	ip, ip
9001c7f6:	fb06 a600 	mla	r6, r6, r0, sl
9001c7fa:	fb0c 5500 	mla	r5, ip, r0, r5
9001c7fe:	1c78      	adds	r0, r7, #1
9001c800:	b2b6      	uxth	r6, r6
9001c802:	b2ad      	uxth	r5, r5
9001c804:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001c808:	f105 0a01 	add.w	sl, r5, #1
9001c80c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c810:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c814:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c818:	ea4a 0707 	orr.w	r7, sl, r7
9001c81c:	f106 0a01 	add.w	sl, r6, #1
9001c820:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c824:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c828:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c82c:	ea47 070a 	orr.w	r7, r7, sl
9001c830:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001c834:	e7b5      	b.n	9001c7a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001c836:	b005      	add	sp, #20
9001c838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c83c:	fffff800 	.word	0xfffff800

9001c840 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c844:	b087      	sub	sp, #28
9001c846:	468b      	mov	fp, r1
9001c848:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c84c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001c84e:	9204      	str	r2, [sp, #16]
9001c850:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c854:	6861      	ldr	r1, [r4, #4]
9001c856:	9205      	str	r2, [sp, #20]
9001c858:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001c85c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001c860:	fb01 2000 	mla	r0, r1, r0, r2
9001c864:	6822      	ldr	r2, [r4, #0]
9001c866:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001c86a:	f8de 2000 	ldr.w	r2, [lr]
9001c86e:	9201      	str	r2, [sp, #4]
9001c870:	f8de 2004 	ldr.w	r2, [lr, #4]
9001c874:	9202      	str	r2, [sp, #8]
9001c876:	f1bb 0f00 	cmp.w	fp, #0
9001c87a:	dc03      	bgt.n	9001c884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001c87c:	9a04      	ldr	r2, [sp, #16]
9001c87e:	2a00      	cmp	r2, #0
9001c880:	f340 8142 	ble.w	9001cb08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c884:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c886:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001c88a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c88e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c890:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001c894:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001c898:	2b00      	cmp	r3, #0
9001c89a:	dd0e      	ble.n	9001c8ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001c89c:	140c      	asrs	r4, r1, #16
9001c89e:	d405      	bmi.n	9001c8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c8a0:	42bc      	cmp	r4, r7
9001c8a2:	da03      	bge.n	9001c8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c8a4:	1414      	asrs	r4, r2, #16
9001c8a6:	d401      	bmi.n	9001c8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001c8a8:	42b4      	cmp	r4, r6
9001c8aa:	db07      	blt.n	9001c8bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001c8ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001c8ae:	3b01      	subs	r3, #1
9001c8b0:	3002      	adds	r0, #2
9001c8b2:	4421      	add	r1, r4
9001c8b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001c8b6:	4422      	add	r2, r4
9001c8b8:	e7ee      	b.n	9001c898 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001c8ba:	d019      	beq.n	9001c8f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c8bc:	1e5c      	subs	r4, r3, #1
9001c8be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c8c0:	fb05 1504 	mla	r5, r5, r4, r1
9001c8c4:	142d      	asrs	r5, r5, #16
9001c8c6:	d409      	bmi.n	9001c8dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c8c8:	42bd      	cmp	r5, r7
9001c8ca:	da07      	bge.n	9001c8dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c8cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c8ce:	fb05 2404 	mla	r4, r5, r4, r2
9001c8d2:	1424      	asrs	r4, r4, #16
9001c8d4:	d402      	bmi.n	9001c8dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001c8d6:	42b4      	cmp	r4, r6
9001c8d8:	f2c0 80b1 	blt.w	9001ca3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001c8dc:	f04f 0800 	mov.w	r8, #0
9001c8e0:	eb03 0408 	add.w	r4, r3, r8
9001c8e4:	2c00      	cmp	r4, #0
9001c8e6:	dc3e      	bgt.n	9001c966 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001c8e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c8ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c8f0:	f1bb 0f00 	cmp.w	fp, #0
9001c8f4:	f340 8108 	ble.w	9001cb08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001c8f8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c8fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c8fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c902:	f1bb 0b01 	subs.w	fp, fp, #1
9001c906:	eeb0 6a62 	vmov.f32	s12, s5
9001c90a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c90e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c916:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c91a:	eeb0 6a43 	vmov.f32	s12, s6
9001c91e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c922:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c926:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c92a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c92e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c932:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c936:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c93a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c93e:	ee12 2a90 	vmov	r2, s5
9001c942:	eef0 2a47 	vmov.f32	s5, s14
9001c946:	fb92 f3f3 	sdiv	r3, r2, r3
9001c94a:	ee13 2a10 	vmov	r2, s6
9001c94e:	9313      	str	r3, [sp, #76]	; 0x4c
9001c950:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c952:	eeb0 3a67 	vmov.f32	s6, s15
9001c956:	fb92 f3f3 	sdiv	r3, r2, r3
9001c95a:	9a04      	ldr	r2, [sp, #16]
9001c95c:	9314      	str	r3, [sp, #80]	; 0x50
9001c95e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c960:	bf08      	it	eq
9001c962:	4613      	moveq	r3, r2
9001c964:	e787      	b.n	9001c876 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001c966:	140e      	asrs	r6, r1, #16
9001c968:	d462      	bmi.n	9001ca30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c96a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001c96e:	42b5      	cmp	r5, r6
9001c970:	dd5e      	ble.n	9001ca30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c972:	1417      	asrs	r7, r2, #16
9001c974:	d45c      	bmi.n	9001ca30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c976:	f8de 400c 	ldr.w	r4, [lr, #12]
9001c97a:	42bc      	cmp	r4, r7
9001c97c:	dd58      	ble.n	9001ca30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c97e:	b22d      	sxth	r5, r5
9001c980:	9c02      	ldr	r4, [sp, #8]
9001c982:	fb07 6505 	mla	r5, r7, r5, r6
9001c986:	5d66      	ldrb	r6, [r4, r5]
9001c988:	2e00      	cmp	r6, #0
9001c98a:	d051      	beq.n	9001ca30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001c98c:	9c01      	ldr	r4, [sp, #4]
9001c98e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001c992:	f06f 0401 	mvn.w	r4, #1
9001c996:	fb04 f408 	mul.w	r4, r4, r8
9001c99a:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001c99e:	5b05      	ldrh	r5, [r0, r4]
9001c9a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c9a4:	9403      	str	r4, [sp, #12]
9001c9a6:	9c05      	ldr	r4, [sp, #20]
9001c9a8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001c9ac:	4366      	muls	r6, r4
9001c9ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001c9b2:	1c74      	adds	r4, r6, #1
9001c9b4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001c9b8:	122e      	asrs	r6, r5, #8
9001c9ba:	1224      	asrs	r4, r4, #8
9001c9bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c9c0:	00ed      	lsls	r5, r5, #3
9001c9c2:	b2a7      	uxth	r7, r4
9001c9c4:	43e4      	mvns	r4, r4
9001c9c6:	b2ed      	uxtb	r5, r5
9001c9c8:	b2e4      	uxtb	r4, r4
9001c9ca:	fb16 f604 	smulbb	r6, r6, r4
9001c9ce:	fb15 f504 	smulbb	r5, r5, r4
9001c9d2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001c9d6:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001c9da:	fb1a fa04 	smulbb	sl, sl, r4
9001c9de:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001c9e2:	fa1f fc8c 	uxth.w	ip, ip
9001c9e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c9ea:	fa5f f989 	uxtb.w	r9, r9
9001c9ee:	fb06 a607 	mla	r6, r6, r7, sl
9001c9f2:	f10c 0401 	add.w	r4, ip, #1
9001c9f6:	fb09 5507 	mla	r5, r9, r7, r5
9001c9fa:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001c9fe:	9c03      	ldr	r4, [sp, #12]
9001ca00:	b2ad      	uxth	r5, r5
9001ca02:	b2b6      	uxth	r6, r6
9001ca04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001ca08:	f105 0a01 	add.w	sl, r5, #1
9001ca0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ca10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ca14:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ca18:	f106 0a01 	add.w	sl, r6, #1
9001ca1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ca20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ca24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ca28:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ca2c:	f820 c004 	strh.w	ip, [r0, r4]
9001ca30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ca32:	f108 38ff 	add.w	r8, r8, #4294967295
9001ca36:	4421      	add	r1, r4
9001ca38:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ca3a:	4422      	add	r2, r4
9001ca3c:	e750      	b.n	9001c8e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ca3e:	f04f 0900 	mov.w	r9, #0
9001ca42:	eba3 0409 	sub.w	r4, r3, r9
9001ca46:	2c00      	cmp	r4, #0
9001ca48:	f77f af4e 	ble.w	9001c8e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ca4c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ca50:	140d      	asrs	r5, r1, #16
9001ca52:	1414      	asrs	r4, r2, #16
9001ca54:	fb06 5404 	mla	r4, r6, r4, r5
9001ca58:	9d02      	ldr	r5, [sp, #8]
9001ca5a:	5d2e      	ldrb	r6, [r5, r4]
9001ca5c:	2e00      	cmp	r6, #0
9001ca5e:	d04c      	beq.n	9001cafa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001ca60:	9d01      	ldr	r5, [sp, #4]
9001ca62:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001ca66:	9c05      	ldr	r4, [sp, #20]
9001ca68:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001ca6c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001ca70:	4366      	muls	r6, r4
9001ca72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ca76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ca7a:	1c74      	adds	r4, r6, #1
9001ca7c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001ca80:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001ca84:	122e      	asrs	r6, r5, #8
9001ca86:	1224      	asrs	r4, r4, #8
9001ca88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ca8c:	00ed      	lsls	r5, r5, #3
9001ca8e:	b2a7      	uxth	r7, r4
9001ca90:	43e4      	mvns	r4, r4
9001ca92:	b2ed      	uxtb	r5, r5
9001ca94:	b2e4      	uxtb	r4, r4
9001ca96:	fb16 f604 	smulbb	r6, r6, r4
9001ca9a:	fb15 f504 	smulbb	r5, r5, r4
9001ca9e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001caa2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001caa6:	fb1a fa04 	smulbb	sl, sl, r4
9001caaa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001caae:	fa1f fc8c 	uxth.w	ip, ip
9001cab2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cab6:	fa5f f888 	uxtb.w	r8, r8
9001caba:	fb06 a607 	mla	r6, r6, r7, sl
9001cabe:	f10c 0401 	add.w	r4, ip, #1
9001cac2:	fb08 5507 	mla	r5, r8, r7, r5
9001cac6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001caca:	b2ad      	uxth	r5, r5
9001cacc:	b2b6      	uxth	r6, r6
9001cace:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cad2:	f105 0a01 	add.w	sl, r5, #1
9001cad6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cada:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cade:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cae2:	f106 0a01 	add.w	sl, r6, #1
9001cae6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001caea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001caee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001caf2:	ea4c 0c0a 	orr.w	ip, ip, sl
9001caf6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001cafa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cafc:	f109 0901 	add.w	r9, r9, #1
9001cb00:	4421      	add	r1, r4
9001cb02:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001cb04:	4422      	add	r2, r4
9001cb06:	e79c      	b.n	9001ca42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001cb08:	b007      	add	sp, #28
9001cb0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cb0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cb0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb12:	b085      	sub	sp, #20
9001cb14:	468b      	mov	fp, r1
9001cb16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001cb1a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001cb1c:	9203      	str	r2, [sp, #12]
9001cb1e:	6861      	ldr	r1, [r4, #4]
9001cb20:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001cb24:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001cb28:	fb01 2000 	mla	r0, r1, r0, r2
9001cb2c:	6822      	ldr	r2, [r4, #0]
9001cb2e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001cb32:	f8d8 2000 	ldr.w	r2, [r8]
9001cb36:	9200      	str	r2, [sp, #0]
9001cb38:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001cb3c:	9201      	str	r2, [sp, #4]
9001cb3e:	f1bb 0f00 	cmp.w	fp, #0
9001cb42:	dc03      	bgt.n	9001cb4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001cb44:	9a03      	ldr	r2, [sp, #12]
9001cb46:	2a00      	cmp	r2, #0
9001cb48:	f340 8146 	ble.w	9001cdd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001cb4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001cb4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001cb52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001cb56:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001cb58:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001cb5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001cb60:	2b00      	cmp	r3, #0
9001cb62:	dd0e      	ble.n	9001cb82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001cb64:	140c      	asrs	r4, r1, #16
9001cb66:	d405      	bmi.n	9001cb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cb68:	42bc      	cmp	r4, r7
9001cb6a:	da03      	bge.n	9001cb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cb6c:	1414      	asrs	r4, r2, #16
9001cb6e:	d401      	bmi.n	9001cb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cb70:	42b4      	cmp	r4, r6
9001cb72:	db07      	blt.n	9001cb84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001cb74:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cb76:	3b01      	subs	r3, #1
9001cb78:	3002      	adds	r0, #2
9001cb7a:	4421      	add	r1, r4
9001cb7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cb7e:	4422      	add	r2, r4
9001cb80:	e7ee      	b.n	9001cb60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001cb82:	d017      	beq.n	9001cbb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001cb84:	1e5c      	subs	r4, r3, #1
9001cb86:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001cb88:	fb05 1504 	mla	r5, r5, r4, r1
9001cb8c:	142d      	asrs	r5, r5, #16
9001cb8e:	d409      	bmi.n	9001cba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cb90:	42bd      	cmp	r5, r7
9001cb92:	da07      	bge.n	9001cba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cb94:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001cb96:	fb05 2404 	mla	r4, r5, r4, r2
9001cb9a:	1424      	asrs	r4, r4, #16
9001cb9c:	d402      	bmi.n	9001cba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001cb9e:	42b4      	cmp	r4, r6
9001cba0:	f2c0 80b3 	blt.w	9001cd0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001cba4:	2600      	movs	r6, #0
9001cba6:	199c      	adds	r4, r3, r6
9001cba8:	2c00      	cmp	r4, #0
9001cbaa:	dc3e      	bgt.n	9001cc2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001cbac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cbb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cbb4:	f1bb 0f00 	cmp.w	fp, #0
9001cbb8:	f340 810e 	ble.w	9001cdd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001cbbc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cbc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cbc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cbc6:	f1bb 0b01 	subs.w	fp, fp, #1
9001cbca:	eeb0 6a62 	vmov.f32	s12, s5
9001cbce:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001cbd2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cbd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbda:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001cbde:	eeb0 6a43 	vmov.f32	s12, s6
9001cbe2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001cbe6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001cbea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cbee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cbf2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cbf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cbfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cbfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cc02:	ee12 2a90 	vmov	r2, s5
9001cc06:	eef0 2a47 	vmov.f32	s5, s14
9001cc0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc0e:	ee13 2a10 	vmov	r2, s6
9001cc12:	9311      	str	r3, [sp, #68]	; 0x44
9001cc14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cc16:	eeb0 3a67 	vmov.f32	s6, s15
9001cc1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cc1e:	9a03      	ldr	r2, [sp, #12]
9001cc20:	9312      	str	r3, [sp, #72]	; 0x48
9001cc22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cc24:	bf08      	it	eq
9001cc26:	4613      	moveq	r3, r2
9001cc28:	e789      	b.n	9001cb3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001cc2a:	140f      	asrs	r7, r1, #16
9001cc2c:	d418      	bmi.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001cc32:	42bd      	cmp	r5, r7
9001cc34:	dd14      	ble.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc36:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cc3a:	d411      	bmi.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc3c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001cc40:	4564      	cmp	r4, ip
9001cc42:	dd0d      	ble.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc44:	b22d      	sxth	r5, r5
9001cc46:	9c01      	ldr	r4, [sp, #4]
9001cc48:	fb0c 7505 	mla	r5, ip, r5, r7
9001cc4c:	5d64      	ldrb	r4, [r4, r5]
9001cc4e:	2cff      	cmp	r4, #255	; 0xff
9001cc50:	d10c      	bne.n	9001cc6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001cc52:	9c00      	ldr	r4, [sp, #0]
9001cc54:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001cc58:	f06f 0401 	mvn.w	r4, #1
9001cc5c:	4374      	muls	r4, r6
9001cc5e:	5305      	strh	r5, [r0, r4]
9001cc60:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cc62:	3e01      	subs	r6, #1
9001cc64:	4421      	add	r1, r4
9001cc66:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cc68:	4422      	add	r2, r4
9001cc6a:	e79c      	b.n	9001cba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001cc6c:	2c00      	cmp	r4, #0
9001cc6e:	d0f7      	beq.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cc70:	9f00      	ldr	r7, [sp, #0]
9001cc72:	fa1f fc84 	uxth.w	ip, r4
9001cc76:	43e4      	mvns	r4, r4
9001cc78:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001cc7c:	f06f 0501 	mvn.w	r5, #1
9001cc80:	b2e4      	uxtb	r4, r4
9001cc82:	4375      	muls	r5, r6
9001cc84:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001cc88:	9502      	str	r5, [sp, #8]
9001cc8a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001cc8e:	5b45      	ldrh	r5, [r0, r5]
9001cc90:	122f      	asrs	r7, r5, #8
9001cc92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cc96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cc9a:	00ed      	lsls	r5, r5, #3
9001cc9c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cca0:	fb17 f704 	smulbb	r7, r7, r4
9001cca4:	b2ed      	uxtb	r5, r5
9001cca6:	fb1a fa04 	smulbb	sl, sl, r4
9001ccaa:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001ccae:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001ccb2:	fb15 f504 	smulbb	r5, r5, r4
9001ccb6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001ccba:	fa1f fe8e 	uxth.w	lr, lr
9001ccbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ccc2:	fa5f f989 	uxtb.w	r9, r9
9001ccc6:	fb07 a70c 	mla	r7, r7, ip, sl
9001ccca:	f10e 0401 	add.w	r4, lr, #1
9001ccce:	fb09 550c 	mla	r5, r9, ip, r5
9001ccd2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001ccd6:	9c02      	ldr	r4, [sp, #8]
9001ccd8:	b2ad      	uxth	r5, r5
9001ccda:	b2bf      	uxth	r7, r7
9001ccdc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001cce0:	f105 0a01 	add.w	sl, r5, #1
9001cce4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cce8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ccec:	ea4a 0e0e 	orr.w	lr, sl, lr
9001ccf0:	f107 0a01 	add.w	sl, r7, #1
9001ccf4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ccf8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ccfc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cd00:	ea4e 0e0a 	orr.w	lr, lr, sl
9001cd04:	f820 e004 	strh.w	lr, [r0, r4]
9001cd08:	e7aa      	b.n	9001cc60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001cd0a:	f04f 0900 	mov.w	r9, #0
9001cd0e:	eba3 0409 	sub.w	r4, r3, r9
9001cd12:	2c00      	cmp	r4, #0
9001cd14:	f77f af4a 	ble.w	9001cbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cd18:	1414      	asrs	r4, r2, #16
9001cd1a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001cd1e:	140d      	asrs	r5, r1, #16
9001cd20:	fb06 5504 	mla	r5, r6, r4, r5
9001cd24:	9c01      	ldr	r4, [sp, #4]
9001cd26:	5d64      	ldrb	r4, [r4, r5]
9001cd28:	2cff      	cmp	r4, #255	; 0xff
9001cd2a:	d10b      	bne.n	9001cd44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001cd2c:	9c00      	ldr	r4, [sp, #0]
9001cd2e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001cd32:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001cd36:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001cd38:	f109 0901 	add.w	r9, r9, #1
9001cd3c:	4421      	add	r1, r4
9001cd3e:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001cd40:	4422      	add	r2, r4
9001cd42:	e7e4      	b.n	9001cd0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001cd44:	2c00      	cmp	r4, #0
9001cd46:	d0f6      	beq.n	9001cd36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001cd48:	9e00      	ldr	r6, [sp, #0]
9001cd4a:	b2a7      	uxth	r7, r4
9001cd4c:	43e4      	mvns	r4, r4
9001cd4e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001cd52:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001cd56:	b2e4      	uxtb	r4, r4
9001cd58:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001cd5c:	122e      	asrs	r6, r5, #8
9001cd5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001cd62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cd66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cd6a:	00ed      	lsls	r5, r5, #3
9001cd6c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001cd70:	fb16 f604 	smulbb	r6, r6, r4
9001cd74:	b2ed      	uxtb	r5, r5
9001cd76:	fb1a fa04 	smulbb	sl, sl, r4
9001cd7a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001cd7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001cd82:	fb15 f504 	smulbb	r5, r5, r4
9001cd86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001cd8a:	fa1f fc8c 	uxth.w	ip, ip
9001cd8e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001cd92:	fa5f fe8e 	uxtb.w	lr, lr
9001cd96:	fb06 a607 	mla	r6, r6, r7, sl
9001cd9a:	f10c 0401 	add.w	r4, ip, #1
9001cd9e:	fb0e 5507 	mla	r5, lr, r7, r5
9001cda2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001cda6:	b2ad      	uxth	r5, r5
9001cda8:	b2b6      	uxth	r6, r6
9001cdaa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cdae:	f105 0a01 	add.w	sl, r5, #1
9001cdb2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001cdb6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001cdba:	ea4a 0c0c 	orr.w	ip, sl, ip
9001cdbe:	f106 0a01 	add.w	sl, r6, #1
9001cdc2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001cdc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001cdca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001cdce:	ea4c 0c0a 	orr.w	ip, ip, sl
9001cdd2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001cdd6:	e7ae      	b.n	9001cd36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001cdd8:	b005      	add	sp, #20
9001cdda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cdde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cdde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cde2:	b085      	sub	sp, #20
9001cde4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001cde6:	9203      	str	r2, [sp, #12]
9001cde8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001cdec:	9100      	str	r1, [sp, #0]
9001cdee:	9201      	str	r2, [sp, #4]
9001cdf0:	6841      	ldr	r1, [r0, #4]
9001cdf2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001cdf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001cdfa:	fb01 2404 	mla	r4, r1, r4, r2
9001cdfe:	6802      	ldr	r2, [r0, #0]
9001ce00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ce04:	f8de 2000 	ldr.w	r2, [lr]
9001ce08:	9202      	str	r2, [sp, #8]
9001ce0a:	9a01      	ldr	r2, [sp, #4]
9001ce0c:	43d6      	mvns	r6, r2
9001ce0e:	b2f6      	uxtb	r6, r6
9001ce10:	9a00      	ldr	r2, [sp, #0]
9001ce12:	2a00      	cmp	r2, #0
9001ce14:	dc03      	bgt.n	9001ce1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001ce16:	9a03      	ldr	r2, [sp, #12]
9001ce18:	2a00      	cmp	r2, #0
9001ce1a:	f340 8124 	ble.w	9001d066 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001ce1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ce20:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001ce24:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ce28:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ce2a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001ce2e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ce32:	2b00      	cmp	r3, #0
9001ce34:	dd0e      	ble.n	9001ce54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ce36:	1408      	asrs	r0, r1, #16
9001ce38:	d405      	bmi.n	9001ce46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce3a:	4560      	cmp	r0, ip
9001ce3c:	da03      	bge.n	9001ce46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce3e:	1410      	asrs	r0, r2, #16
9001ce40:	d401      	bmi.n	9001ce46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ce42:	42b8      	cmp	r0, r7
9001ce44:	db07      	blt.n	9001ce56 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ce46:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ce48:	3b01      	subs	r3, #1
9001ce4a:	3402      	adds	r4, #2
9001ce4c:	4401      	add	r1, r0
9001ce4e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ce50:	4402      	add	r2, r0
9001ce52:	e7ee      	b.n	9001ce32 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ce54:	d06e      	beq.n	9001cf34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001ce56:	1e58      	subs	r0, r3, #1
9001ce58:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ce5a:	fb05 1500 	mla	r5, r5, r0, r1
9001ce5e:	142d      	asrs	r5, r5, #16
9001ce60:	d45c      	bmi.n	9001cf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ce62:	4565      	cmp	r5, ip
9001ce64:	da5a      	bge.n	9001cf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ce66:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ce68:	fb05 2000 	mla	r0, r5, r0, r2
9001ce6c:	1400      	asrs	r0, r0, #16
9001ce6e:	d455      	bmi.n	9001cf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ce70:	42b8      	cmp	r0, r7
9001ce72:	da53      	bge.n	9001cf1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001ce74:	4699      	mov	r9, r3
9001ce76:	46a2      	mov	sl, r4
9001ce78:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001ce7c:	f1b9 0f00 	cmp.w	r9, #0
9001ce80:	dd54      	ble.n	9001cf2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001ce82:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ce86:	140d      	asrs	r5, r1, #16
9001ce88:	1410      	asrs	r0, r2, #16
9001ce8a:	f109 39ff 	add.w	r9, r9, #4294967295
9001ce8e:	fb07 5000 	mla	r0, r7, r0, r5
9001ce92:	9d02      	ldr	r5, [sp, #8]
9001ce94:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001ce98:	f8ba 5000 	ldrh.w	r5, [sl]
9001ce9c:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cea0:	122f      	asrs	r7, r5, #8
9001cea2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001cea6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ceaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ceae:	00ed      	lsls	r5, r5, #3
9001ceb0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001ceb4:	fb17 f706 	smulbb	r7, r7, r6
9001ceb8:	b2ed      	uxtb	r5, r5
9001ceba:	fb18 f806 	smulbb	r8, r8, r6
9001cebe:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001cec2:	10c7      	asrs	r7, r0, #3
9001cec4:	fb15 f506 	smulbb	r5, r5, r6
9001cec8:	00c0      	lsls	r0, r0, #3
9001ceca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cece:	fa1f fc8c 	uxth.w	ip, ip
9001ced2:	b2c0      	uxtb	r0, r0
9001ced4:	fb07 870b 	mla	r7, r7, fp, r8
9001ced8:	fb00 500b 	mla	r0, r0, fp, r5
9001cedc:	f10c 0501 	add.w	r5, ip, #1
9001cee0:	b2bf      	uxth	r7, r7
9001cee2:	b280      	uxth	r0, r0
9001cee4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cee8:	f107 0801 	add.w	r8, r7, #1
9001ceec:	1c45      	adds	r5, r0, #1
9001ceee:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001cef2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001cef6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cefa:	9811      	ldr	r0, [sp, #68]	; 0x44
9001cefc:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001cf00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cf04:	4401      	add	r1, r0
9001cf06:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001cf0a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001cf0c:	ea45 0c0c 	orr.w	ip, r5, ip
9001cf10:	4402      	add	r2, r0
9001cf12:	ea4c 0c08 	orr.w	ip, ip, r8
9001cf16:	f82a cb02 	strh.w	ip, [sl], #2
9001cf1a:	e7af      	b.n	9001ce7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001cf1c:	f04f 0800 	mov.w	r8, #0
9001cf20:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001cf24:	eb03 0008 	add.w	r0, r3, r8
9001cf28:	2800      	cmp	r0, #0
9001cf2a:	dc41      	bgt.n	9001cfb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001cf2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001cf30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001cf34:	9b00      	ldr	r3, [sp, #0]
9001cf36:	2b00      	cmp	r3, #0
9001cf38:	f340 8095 	ble.w	9001d066 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001cf3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001cf40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cf42:	ee30 0a04 	vadd.f32	s0, s0, s8
9001cf46:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001cf4a:	eef0 6a62 	vmov.f32	s13, s5
9001cf4e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001cf52:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cf56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cf5a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001cf5e:	eef0 6a43 	vmov.f32	s13, s6
9001cf62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cf66:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001cf6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001cf6e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001cf72:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cf76:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cf7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cf7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cf82:	ee12 2a90 	vmov	r2, s5
9001cf86:	eef0 2a47 	vmov.f32	s5, s14
9001cf8a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf8e:	ee13 2a10 	vmov	r2, s6
9001cf92:	9311      	str	r3, [sp, #68]	; 0x44
9001cf94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cf96:	eeb0 3a67 	vmov.f32	s6, s15
9001cf9a:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf9e:	9312      	str	r3, [sp, #72]	; 0x48
9001cfa0:	9b00      	ldr	r3, [sp, #0]
9001cfa2:	9a03      	ldr	r2, [sp, #12]
9001cfa4:	3b01      	subs	r3, #1
9001cfa6:	9300      	str	r3, [sp, #0]
9001cfa8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001cfaa:	bf08      	it	eq
9001cfac:	4613      	moveq	r3, r2
9001cfae:	e72f      	b.n	9001ce10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001cfb0:	140f      	asrs	r7, r1, #16
9001cfb2:	d451      	bmi.n	9001d058 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cfb4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cfb8:	42bd      	cmp	r5, r7
9001cfba:	dd4d      	ble.n	9001d058 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cfbc:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cfc0:	d44a      	bmi.n	9001d058 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cfc2:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cfc6:	4560      	cmp	r0, ip
9001cfc8:	dd46      	ble.n	9001d058 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001cfca:	b22d      	sxth	r5, r5
9001cfcc:	9802      	ldr	r0, [sp, #8]
9001cfce:	fb0c 7505 	mla	r5, ip, r5, r7
9001cfd2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001cfd6:	f06f 0501 	mvn.w	r5, #1
9001cfda:	fb05 fb08 	mul.w	fp, r5, r8
9001cfde:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cfe2:	f834 500b 	ldrh.w	r5, [r4, fp]
9001cfe6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cfea:	122f      	asrs	r7, r5, #8
9001cfec:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cff0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cff4:	00ed      	lsls	r5, r5, #3
9001cff6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cffa:	fb17 f706 	smulbb	r7, r7, r6
9001cffe:	b2ed      	uxtb	r5, r5
9001d000:	fb19 f906 	smulbb	r9, r9, r6
9001d004:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001d008:	10c7      	asrs	r7, r0, #3
9001d00a:	fb15 f506 	smulbb	r5, r5, r6
9001d00e:	00c0      	lsls	r0, r0, #3
9001d010:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d014:	fa1f fc8c 	uxth.w	ip, ip
9001d018:	b2c0      	uxtb	r0, r0
9001d01a:	fb07 970a 	mla	r7, r7, sl, r9
9001d01e:	fb00 500a 	mla	r0, r0, sl, r5
9001d022:	f10c 0501 	add.w	r5, ip, #1
9001d026:	b2bf      	uxth	r7, r7
9001d028:	b280      	uxth	r0, r0
9001d02a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d02e:	f107 0901 	add.w	r9, r7, #1
9001d032:	1c45      	adds	r5, r0, #1
9001d034:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001d038:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d03c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d040:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d044:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d048:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d04c:	ea45 0c0c 	orr.w	ip, r5, ip
9001d050:	ea4c 0c09 	orr.w	ip, ip, r9
9001d054:	f824 c00b 	strh.w	ip, [r4, fp]
9001d058:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d05a:	f108 38ff 	add.w	r8, r8, #4294967295
9001d05e:	4401      	add	r1, r0
9001d060:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d062:	4402      	add	r2, r0
9001d064:	e75e      	b.n	9001cf24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001d066:	b005      	add	sp, #20
9001d068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d06c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d070:	b085      	sub	sp, #20
9001d072:	4693      	mov	fp, r2
9001d074:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d078:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001d07a:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001d07c:	6870      	ldr	r0, [r6, #4]
9001d07e:	9101      	str	r1, [sp, #4]
9001d080:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d084:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001d088:	fb00 2404 	mla	r4, r0, r4, r2
9001d08c:	6832      	ldr	r2, [r6, #0]
9001d08e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d092:	682a      	ldr	r2, [r5, #0]
9001d094:	9202      	str	r2, [sp, #8]
9001d096:	9a01      	ldr	r2, [sp, #4]
9001d098:	2a00      	cmp	r2, #0
9001d09a:	dc03      	bgt.n	9001d0a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d09c:	f1bb 0f00 	cmp.w	fp, #0
9001d0a0:	f340 809a 	ble.w	9001d1d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d0a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d0a6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d0aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d0ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d0b0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d0b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d0b8:	2b00      	cmp	r3, #0
9001d0ba:	dd0c      	ble.n	9001d0d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001d0bc:	1406      	asrs	r6, r0, #16
9001d0be:	d405      	bmi.n	9001d0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d0c0:	454e      	cmp	r6, r9
9001d0c2:	da03      	bge.n	9001d0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d0c4:	1416      	asrs	r6, r2, #16
9001d0c6:	d401      	bmi.n	9001d0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d0c8:	4546      	cmp	r6, r8
9001d0ca:	db05      	blt.n	9001d0d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001d0cc:	4470      	add	r0, lr
9001d0ce:	4462      	add	r2, ip
9001d0d0:	3b01      	subs	r3, #1
9001d0d2:	3402      	adds	r4, #2
9001d0d4:	e7f0      	b.n	9001d0b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d0d6:	d00f      	beq.n	9001d0f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001d0d8:	1e5e      	subs	r6, r3, #1
9001d0da:	fb0e 0706 	mla	r7, lr, r6, r0
9001d0de:	143f      	asrs	r7, r7, #16
9001d0e0:	d541      	bpl.n	9001d166 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001d0e2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d0e6:	4698      	mov	r8, r3
9001d0e8:	9603      	str	r6, [sp, #12]
9001d0ea:	f1b8 0f00 	cmp.w	r8, #0
9001d0ee:	dc56      	bgt.n	9001d19e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001d0f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d0f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d0f8:	9b01      	ldr	r3, [sp, #4]
9001d0fa:	2b00      	cmp	r3, #0
9001d0fc:	dd6c      	ble.n	9001d1d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001d0fe:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d102:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d104:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d108:	eeb0 6a62 	vmov.f32	s12, s5
9001d10c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d110:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d114:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d118:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d11c:	eeb0 6a43 	vmov.f32	s12, s6
9001d120:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d124:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d128:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d12c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d130:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d134:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d138:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d13c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d140:	ee12 2a90 	vmov	r2, s5
9001d144:	eef0 2a47 	vmov.f32	s5, s14
9001d148:	fb92 fef3 	sdiv	lr, r2, r3
9001d14c:	ee13 2a10 	vmov	r2, s6
9001d150:	eeb0 3a67 	vmov.f32	s6, s15
9001d154:	fb92 fcf3 	sdiv	ip, r2, r3
9001d158:	9b01      	ldr	r3, [sp, #4]
9001d15a:	3b01      	subs	r3, #1
9001d15c:	9301      	str	r3, [sp, #4]
9001d15e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d160:	bf08      	it	eq
9001d162:	465b      	moveq	r3, fp
9001d164:	e797      	b.n	9001d096 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d166:	454f      	cmp	r7, r9
9001d168:	dabb      	bge.n	9001d0e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d16a:	fb0c 2606 	mla	r6, ip, r6, r2
9001d16e:	1436      	asrs	r6, r6, #16
9001d170:	d4b7      	bmi.n	9001d0e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d172:	4546      	cmp	r6, r8
9001d174:	dab5      	bge.n	9001d0e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d176:	461e      	mov	r6, r3
9001d178:	46a0      	mov	r8, r4
9001d17a:	2e00      	cmp	r6, #0
9001d17c:	ddb8      	ble.n	9001d0f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d17e:	1417      	asrs	r7, r2, #16
9001d180:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d184:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d188:	9902      	ldr	r1, [sp, #8]
9001d18a:	4470      	add	r0, lr
9001d18c:	4462      	add	r2, ip
9001d18e:	fb0a 9707 	mla	r7, sl, r7, r9
9001d192:	3e01      	subs	r6, #1
9001d194:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d198:	f828 7b02 	strh.w	r7, [r8], #2
9001d19c:	e7ed      	b.n	9001d17a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001d19e:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d1a2:	d414      	bmi.n	9001d1ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d1a4:	68ae      	ldr	r6, [r5, #8]
9001d1a6:	454e      	cmp	r6, r9
9001d1a8:	dd11      	ble.n	9001d1ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d1aa:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d1ae:	d40e      	bmi.n	9001d1ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d1b0:	68ef      	ldr	r7, [r5, #12]
9001d1b2:	4557      	cmp	r7, sl
9001d1b4:	dd0b      	ble.n	9001d1ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001d1b6:	b236      	sxth	r6, r6
9001d1b8:	f06f 0101 	mvn.w	r1, #1
9001d1bc:	9f02      	ldr	r7, [sp, #8]
9001d1be:	fb0a 9606 	mla	r6, sl, r6, r9
9001d1c2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d1c6:	fb01 f608 	mul.w	r6, r1, r8
9001d1ca:	9903      	ldr	r1, [sp, #12]
9001d1cc:	538f      	strh	r7, [r1, r6]
9001d1ce:	4470      	add	r0, lr
9001d1d0:	4462      	add	r2, ip
9001d1d2:	f108 38ff 	add.w	r8, r8, #4294967295
9001d1d6:	e788      	b.n	9001d0ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d1d8:	b005      	add	sp, #20
9001d1da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d1de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d1de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d1e2:	b087      	sub	sp, #28
9001d1e4:	468b      	mov	fp, r1
9001d1e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d1ea:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d1ec:	9203      	str	r2, [sp, #12]
9001d1ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d1f2:	6841      	ldr	r1, [r0, #4]
9001d1f4:	9204      	str	r2, [sp, #16]
9001d1f6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d1fa:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001d1fe:	fb01 2505 	mla	r5, r1, r5, r2
9001d202:	6802      	ldr	r2, [r0, #0]
9001d204:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001d208:	f8d9 2000 	ldr.w	r2, [r9]
9001d20c:	9201      	str	r2, [sp, #4]
9001d20e:	f1bb 0f00 	cmp.w	fp, #0
9001d212:	dc03      	bgt.n	9001d21c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d214:	9a03      	ldr	r2, [sp, #12]
9001d216:	2a00      	cmp	r2, #0
9001d218:	f340 8158 	ble.w	9001d4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d21c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d21e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d222:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d226:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d228:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d22c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d230:	2b00      	cmp	r3, #0
9001d232:	dd0e      	ble.n	9001d252 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001d234:	1402      	asrs	r2, r0, #16
9001d236:	d405      	bmi.n	9001d244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d238:	42ba      	cmp	r2, r7
9001d23a:	da03      	bge.n	9001d244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d23c:	140a      	asrs	r2, r1, #16
9001d23e:	d401      	bmi.n	9001d244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d240:	42b2      	cmp	r2, r6
9001d242:	db07      	blt.n	9001d254 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d244:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d246:	3b01      	subs	r3, #1
9001d248:	3502      	adds	r5, #2
9001d24a:	4410      	add	r0, r2
9001d24c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d24e:	4411      	add	r1, r2
9001d250:	e7ee      	b.n	9001d230 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d252:	d017      	beq.n	9001d284 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001d254:	1e5a      	subs	r2, r3, #1
9001d256:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001d258:	fb04 0402 	mla	r4, r4, r2, r0
9001d25c:	1424      	asrs	r4, r4, #16
9001d25e:	d409      	bmi.n	9001d274 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d260:	42bc      	cmp	r4, r7
9001d262:	da07      	bge.n	9001d274 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d264:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001d266:	fb04 1202 	mla	r2, r4, r2, r1
9001d26a:	1412      	asrs	r2, r2, #16
9001d26c:	d402      	bmi.n	9001d274 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001d26e:	42b2      	cmp	r2, r6
9001d270:	f2c0 80bf 	blt.w	9001d3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001d274:	2700      	movs	r7, #0
9001d276:	19da      	adds	r2, r3, r7
9001d278:	2a00      	cmp	r2, #0
9001d27a:	dc3e      	bgt.n	9001d2fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d27c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d280:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001d284:	f1bb 0f00 	cmp.w	fp, #0
9001d288:	f340 8120 	ble.w	9001d4cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001d28c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d290:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d292:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d296:	f1bb 0b01 	subs.w	fp, fp, #1
9001d29a:	eeb0 6a62 	vmov.f32	s12, s5
9001d29e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d2a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d2a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d2aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d2ae:	eeb0 6a43 	vmov.f32	s12, s6
9001d2b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d2b6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d2ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d2be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d2c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d2c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d2ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d2ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d2d2:	ee12 2a90 	vmov	r2, s5
9001d2d6:	eef0 2a47 	vmov.f32	s5, s14
9001d2da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2de:	ee13 2a10 	vmov	r2, s6
9001d2e2:	9313      	str	r3, [sp, #76]	; 0x4c
9001d2e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d2e6:	eeb0 3a67 	vmov.f32	s6, s15
9001d2ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2ee:	9a03      	ldr	r2, [sp, #12]
9001d2f0:	9314      	str	r3, [sp, #80]	; 0x50
9001d2f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d2f4:	bf08      	it	eq
9001d2f6:	4613      	moveq	r3, r2
9001d2f8:	e789      	b.n	9001d20e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d2fa:	1406      	asrs	r6, r0, #16
9001d2fc:	d42d      	bmi.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d2fe:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001d302:	42b4      	cmp	r4, r6
9001d304:	dd29      	ble.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d306:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001d30a:	d426      	bmi.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d30c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d310:	4562      	cmp	r2, ip
9001d312:	dd22      	ble.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d314:	b224      	sxth	r4, r4
9001d316:	9a01      	ldr	r2, [sp, #4]
9001d318:	fb0c 6404 	mla	r4, ip, r4, r6
9001d31c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001d320:	0e22      	lsrs	r2, r4, #24
9001d322:	d01a      	beq.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d324:	9e04      	ldr	r6, [sp, #16]
9001d326:	4372      	muls	r2, r6
9001d328:	1c56      	adds	r6, r2, #1
9001d32a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d32e:	0a26      	lsrs	r6, r4, #8
9001d330:	1212      	asrs	r2, r2, #8
9001d332:	9605      	str	r6, [sp, #20]
9001d334:	2aff      	cmp	r2, #255	; 0xff
9001d336:	d116      	bne.n	9001d366 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001d338:	f06f 0201 	mvn.w	r2, #1
9001d33c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d340:	fb02 fc07 	mul.w	ip, r2, r7
9001d344:	0962      	lsrs	r2, r4, #5
9001d346:	f026 0607 	bic.w	r6, r6, #7
9001d34a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d34e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d352:	4316      	orrs	r6, r2
9001d354:	4326      	orrs	r6, r4
9001d356:	f825 600c 	strh.w	r6, [r5, ip]
9001d35a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d35c:	3f01      	subs	r7, #1
9001d35e:	4410      	add	r0, r2
9001d360:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d362:	4411      	add	r1, r2
9001d364:	e787      	b.n	9001d276 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d366:	f06f 0601 	mvn.w	r6, #1
9001d36a:	fa1f fa82 	uxth.w	sl, r2
9001d36e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001d372:	43d2      	mvns	r2, r2
9001d374:	437e      	muls	r6, r7
9001d376:	b2e4      	uxtb	r4, r4
9001d378:	fb1c fc0a 	smulbb	ip, ip, sl
9001d37c:	b2d2      	uxtb	r2, r2
9001d37e:	f835 8006 	ldrh.w	r8, [r5, r6]
9001d382:	fb14 f40a 	smulbb	r4, r4, sl
9001d386:	9602      	str	r6, [sp, #8]
9001d388:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d38c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d390:	fb16 f60a 	smulbb	r6, r6, sl
9001d394:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d398:	fb0e ce02 	mla	lr, lr, r2, ip
9001d39c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d3a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d3a4:	fa1f fe8e 	uxth.w	lr, lr
9001d3a8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001d3ac:	fa5f f888 	uxtb.w	r8, r8
9001d3b0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d3b4:	fb08 4402 	mla	r4, r8, r2, r4
9001d3b8:	f10e 0201 	add.w	r2, lr, #1
9001d3bc:	fa1f fc8c 	uxth.w	ip, ip
9001d3c0:	b2a4      	uxth	r4, r4
9001d3c2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d3c6:	9a02      	ldr	r2, [sp, #8]
9001d3c8:	1c66      	adds	r6, r4, #1
9001d3ca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d3ce:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d3d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d3d6:	ea46 0e0e 	orr.w	lr, r6, lr
9001d3da:	f10c 0601 	add.w	r6, ip, #1
9001d3de:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d3e2:	0976      	lsrs	r6, r6, #5
9001d3e4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d3e8:	ea4e 0e06 	orr.w	lr, lr, r6
9001d3ec:	f825 e002 	strh.w	lr, [r5, r2]
9001d3f0:	e7b3      	b.n	9001d35a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d3f2:	f04f 0800 	mov.w	r8, #0
9001d3f6:	eba3 0208 	sub.w	r2, r3, r8
9001d3fa:	2a00      	cmp	r2, #0
9001d3fc:	f77f af3e 	ble.w	9001d27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d400:	1404      	asrs	r4, r0, #16
9001d402:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001d406:	140a      	asrs	r2, r1, #16
9001d408:	fb06 4202 	mla	r2, r6, r2, r4
9001d40c:	9c01      	ldr	r4, [sp, #4]
9001d40e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001d412:	0e22      	lsrs	r2, r4, #24
9001d414:	d015      	beq.n	9001d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d416:	9e04      	ldr	r6, [sp, #16]
9001d418:	4372      	muls	r2, r6
9001d41a:	1c56      	adds	r6, r2, #1
9001d41c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001d420:	0a26      	lsrs	r6, r4, #8
9001d422:	1212      	asrs	r2, r2, #8
9001d424:	2aff      	cmp	r2, #255	; 0xff
9001d426:	d113      	bne.n	9001d450 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001d428:	0962      	lsrs	r2, r4, #5
9001d42a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d42e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001d432:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d436:	f026 0607 	bic.w	r6, r6, #7
9001d43a:	4316      	orrs	r6, r2
9001d43c:	4326      	orrs	r6, r4
9001d43e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001d442:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d444:	f108 0801 	add.w	r8, r8, #1
9001d448:	4410      	add	r0, r2
9001d44a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d44c:	4411      	add	r1, r2
9001d44e:	e7d2      	b.n	9001d3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001d450:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001d454:	fa1f fa82 	uxth.w	sl, r2
9001d458:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001d45c:	43d2      	mvns	r2, r2
9001d45e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d462:	fb17 f70a 	smulbb	r7, r7, sl
9001d466:	b2d2      	uxtb	r2, r2
9001d468:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d46c:	b2e4      	uxtb	r4, r4
9001d46e:	b2f6      	uxtb	r6, r6
9001d470:	fb0c 7c02 	mla	ip, ip, r2, r7
9001d474:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d478:	fb14 f40a 	smulbb	r4, r4, sl
9001d47c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d480:	fa1f fc8c 	uxth.w	ip, ip
9001d484:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d488:	fb16 f60a 	smulbb	r6, r6, sl
9001d48c:	fa5f fe8e 	uxtb.w	lr, lr
9001d490:	fb0e 4402 	mla	r4, lr, r2, r4
9001d494:	fb07 6702 	mla	r7, r7, r2, r6
9001d498:	f10c 0201 	add.w	r2, ip, #1
9001d49c:	b2a4      	uxth	r4, r4
9001d49e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d4a2:	1c66      	adds	r6, r4, #1
9001d4a4:	b2bf      	uxth	r7, r7
9001d4a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d4aa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001d4ae:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d4b2:	ea46 0c0c 	orr.w	ip, r6, ip
9001d4b6:	1c7e      	adds	r6, r7, #1
9001d4b8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001d4bc:	0976      	lsrs	r6, r6, #5
9001d4be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d4c2:	ea4c 0c06 	orr.w	ip, ip, r6
9001d4c6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001d4ca:	e7ba      	b.n	9001d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001d4cc:	b007      	add	sp, #28
9001d4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d4d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d4d8:	b085      	sub	sp, #20
9001d4da:	468b      	mov	fp, r1
9001d4dc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d4e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d4e2:	9203      	str	r2, [sp, #12]
9001d4e4:	6841      	ldr	r1, [r0, #4]
9001d4e6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001d4ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001d4ee:	fb01 2404 	mla	r4, r1, r4, r2
9001d4f2:	6802      	ldr	r2, [r0, #0]
9001d4f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d4f8:	f8d8 2000 	ldr.w	r2, [r8]
9001d4fc:	9201      	str	r2, [sp, #4]
9001d4fe:	f1bb 0f00 	cmp.w	fp, #0
9001d502:	dc03      	bgt.n	9001d50c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d504:	9a03      	ldr	r2, [sp, #12]
9001d506:	2a00      	cmp	r2, #0
9001d508:	f340 814f 	ble.w	9001d7aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d50c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d50e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001d512:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d516:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d518:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001d51c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001d520:	2b00      	cmp	r3, #0
9001d522:	dd0e      	ble.n	9001d542 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d524:	1408      	asrs	r0, r1, #16
9001d526:	d405      	bmi.n	9001d534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d528:	42b8      	cmp	r0, r7
9001d52a:	da03      	bge.n	9001d534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d52c:	1410      	asrs	r0, r2, #16
9001d52e:	d401      	bmi.n	9001d534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001d530:	42b0      	cmp	r0, r6
9001d532:	db07      	blt.n	9001d544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d534:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d536:	3b01      	subs	r3, #1
9001d538:	3402      	adds	r4, #2
9001d53a:	4401      	add	r1, r0
9001d53c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d53e:	4402      	add	r2, r0
9001d540:	e7ee      	b.n	9001d520 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001d542:	d017      	beq.n	9001d574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001d544:	1e58      	subs	r0, r3, #1
9001d546:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001d548:	fb05 1500 	mla	r5, r5, r0, r1
9001d54c:	142d      	asrs	r5, r5, #16
9001d54e:	d409      	bmi.n	9001d564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d550:	42bd      	cmp	r5, r7
9001d552:	da07      	bge.n	9001d564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d554:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001d556:	fb05 2000 	mla	r0, r5, r0, r2
9001d55a:	1400      	asrs	r0, r0, #16
9001d55c:	d402      	bmi.n	9001d564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001d55e:	42b0      	cmp	r0, r6
9001d560:	f2c0 80ba 	blt.w	9001d6d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001d564:	2600      	movs	r6, #0
9001d566:	1998      	adds	r0, r3, r6
9001d568:	2800      	cmp	r0, #0
9001d56a:	dc3e      	bgt.n	9001d5ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001d56c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d570:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d574:	f1bb 0f00 	cmp.w	fp, #0
9001d578:	f340 8117 	ble.w	9001d7aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001d57c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d580:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d582:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d586:	f1bb 0b01 	subs.w	fp, fp, #1
9001d58a:	eeb0 6a62 	vmov.f32	s12, s5
9001d58e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d592:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d59a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001d59e:	eeb0 6a43 	vmov.f32	s12, s6
9001d5a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d5a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001d5aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d5ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d5b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d5b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d5ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d5be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d5c2:	ee12 2a90 	vmov	r2, s5
9001d5c6:	eef0 2a47 	vmov.f32	s5, s14
9001d5ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001d5ce:	ee13 2a10 	vmov	r2, s6
9001d5d2:	9311      	str	r3, [sp, #68]	; 0x44
9001d5d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d5d6:	eeb0 3a67 	vmov.f32	s6, s15
9001d5da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d5de:	9a03      	ldr	r2, [sp, #12]
9001d5e0:	9312      	str	r3, [sp, #72]	; 0x48
9001d5e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d5e4:	bf08      	it	eq
9001d5e6:	4613      	moveq	r3, r2
9001d5e8:	e789      	b.n	9001d4fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001d5ea:	140f      	asrs	r7, r1, #16
9001d5ec:	d424      	bmi.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d5ee:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001d5f2:	42bd      	cmp	r5, r7
9001d5f4:	dd20      	ble.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d5f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d5fa:	d41d      	bmi.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d5fc:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001d600:	4560      	cmp	r0, ip
9001d602:	dd19      	ble.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d604:	b22d      	sxth	r5, r5
9001d606:	9801      	ldr	r0, [sp, #4]
9001d608:	fb0c 7505 	mla	r5, ip, r5, r7
9001d60c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001d610:	0e07      	lsrs	r7, r0, #24
9001d612:	2fff      	cmp	r7, #255	; 0xff
9001d614:	d116      	bne.n	9001d644 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d616:	f06f 0501 	mvn.w	r5, #1
9001d61a:	fb05 f706 	mul.w	r7, r5, r6
9001d61e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001d622:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d626:	0945      	lsrs	r5, r0, #5
9001d628:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d62c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d630:	ea4c 0505 	orr.w	r5, ip, r5
9001d634:	4305      	orrs	r5, r0
9001d636:	53e5      	strh	r5, [r4, r7]
9001d638:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d63a:	3e01      	subs	r6, #1
9001d63c:	4401      	add	r1, r0
9001d63e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d640:	4402      	add	r2, r0
9001d642:	e790      	b.n	9001d566 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d644:	b2fd      	uxtb	r5, r7
9001d646:	2f00      	cmp	r7, #0
9001d648:	d0f6      	beq.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d64a:	f06f 0701 	mvn.w	r7, #1
9001d64e:	fa1f f985 	uxth.w	r9, r5
9001d652:	43ed      	mvns	r5, r5
9001d654:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001d658:	4377      	muls	r7, r6
9001d65a:	fb1a fa09 	smulbb	sl, sl, r9
9001d65e:	b2ed      	uxtb	r5, r5
9001d660:	f834 e007 	ldrh.w	lr, [r4, r7]
9001d664:	9702      	str	r7, [sp, #8]
9001d666:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001d66a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d66e:	fb17 f709 	smulbb	r7, r7, r9
9001d672:	b2c0      	uxtb	r0, r0
9001d674:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d678:	fb10 f009 	smulbb	r0, r0, r9
9001d67c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001d680:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001d684:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d688:	fa1f fc8c 	uxth.w	ip, ip
9001d68c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001d690:	fa5f fe8e 	uxtb.w	lr, lr
9001d694:	fb07 a705 	mla	r7, r7, r5, sl
9001d698:	fb0e 0005 	mla	r0, lr, r5, r0
9001d69c:	f10c 0501 	add.w	r5, ip, #1
9001d6a0:	b2bf      	uxth	r7, r7
9001d6a2:	b280      	uxth	r0, r0
9001d6a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001d6a8:	f100 0a01 	add.w	sl, r0, #1
9001d6ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001d6b0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001d6b4:	9802      	ldr	r0, [sp, #8]
9001d6b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d6ba:	ea4a 0c0c 	orr.w	ip, sl, ip
9001d6be:	f107 0a01 	add.w	sl, r7, #1
9001d6c2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001d6c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d6ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d6ce:	ea4c 0c0a 	orr.w	ip, ip, sl
9001d6d2:	f824 c000 	strh.w	ip, [r4, r0]
9001d6d6:	e7af      	b.n	9001d638 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001d6d8:	f04f 0e00 	mov.w	lr, #0
9001d6dc:	eba3 000e 	sub.w	r0, r3, lr
9001d6e0:	2800      	cmp	r0, #0
9001d6e2:	f77f af43 	ble.w	9001d56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d6e6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001d6ea:	140d      	asrs	r5, r1, #16
9001d6ec:	1410      	asrs	r0, r2, #16
9001d6ee:	fb06 5000 	mla	r0, r6, r0, r5
9001d6f2:	9d01      	ldr	r5, [sp, #4]
9001d6f4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001d6f8:	0e2e      	lsrs	r6, r5, #24
9001d6fa:	2eff      	cmp	r6, #255	; 0xff
9001d6fc:	d112      	bne.n	9001d724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001d6fe:	482c      	ldr	r0, [pc, #176]	; (9001d7b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001d700:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001d704:	0968      	lsrs	r0, r5, #5
9001d706:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d70a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001d70e:	4330      	orrs	r0, r6
9001d710:	4328      	orrs	r0, r5
9001d712:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001d716:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d718:	f10e 0e01 	add.w	lr, lr, #1
9001d71c:	4401      	add	r1, r0
9001d71e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d720:	4402      	add	r2, r0
9001d722:	e7db      	b.n	9001d6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001d724:	b2f0      	uxtb	r0, r6
9001d726:	2e00      	cmp	r6, #0
9001d728:	d0f5      	beq.n	9001d716 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d72a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001d72e:	fa1f f980 	uxth.w	r9, r0
9001d732:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d736:	43c0      	mvns	r0, r0
9001d738:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d73c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d740:	fb16 f609 	smulbb	r6, r6, r9
9001d744:	b2c0      	uxtb	r0, r0
9001d746:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d74a:	b2ed      	uxtb	r5, r5
9001d74c:	fb1a fa09 	smulbb	sl, sl, r9
9001d750:	fb07 6700 	mla	r7, r7, r0, r6
9001d754:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d758:	fb15 f509 	smulbb	r5, r5, r9
9001d75c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d760:	b2bf      	uxth	r7, r7
9001d762:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d766:	fa5f fc8c 	uxtb.w	ip, ip
9001d76a:	fb06 a600 	mla	r6, r6, r0, sl
9001d76e:	fb0c 5500 	mla	r5, ip, r0, r5
9001d772:	1c78      	adds	r0, r7, #1
9001d774:	b2b6      	uxth	r6, r6
9001d776:	b2ad      	uxth	r5, r5
9001d778:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001d77c:	f105 0a01 	add.w	sl, r5, #1
9001d780:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d784:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d788:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d78c:	ea4a 0707 	orr.w	r7, sl, r7
9001d790:	f106 0a01 	add.w	sl, r6, #1
9001d794:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d798:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d79c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001d7a0:	ea47 070a 	orr.w	r7, r7, sl
9001d7a4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001d7a8:	e7b5      	b.n	9001d716 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001d7aa:	b005      	add	sp, #20
9001d7ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d7b0:	fffff800 	.word	0xfffff800

9001d7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d7b8:	b087      	sub	sp, #28
9001d7ba:	468b      	mov	fp, r1
9001d7bc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001d7c0:	9815      	ldr	r0, [sp, #84]	; 0x54
9001d7c2:	9203      	str	r2, [sp, #12]
9001d7c4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d7c8:	6841      	ldr	r1, [r0, #4]
9001d7ca:	9204      	str	r2, [sp, #16]
9001d7cc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001d7d0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001d7d4:	fb01 2404 	mla	r4, r1, r4, r2
9001d7d8:	6802      	ldr	r2, [r0, #0]
9001d7da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d7de:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d7e2:	3201      	adds	r2, #1
9001d7e4:	f022 0201 	bic.w	r2, r2, #1
9001d7e8:	9200      	str	r2, [sp, #0]
9001d7ea:	f8d9 2000 	ldr.w	r2, [r9]
9001d7ee:	9201      	str	r2, [sp, #4]
9001d7f0:	f1bb 0f00 	cmp.w	fp, #0
9001d7f4:	dc03      	bgt.n	9001d7fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d7f6:	9a03      	ldr	r2, [sp, #12]
9001d7f8:	2a00      	cmp	r2, #0
9001d7fa:	f340 816a 	ble.w	9001dad2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d7fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d800:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001d804:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001d808:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d80a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001d80e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001d812:	2b00      	cmp	r3, #0
9001d814:	dd0e      	ble.n	9001d834 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001d816:	1402      	asrs	r2, r0, #16
9001d818:	d405      	bmi.n	9001d826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d81a:	42ba      	cmp	r2, r7
9001d81c:	da03      	bge.n	9001d826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d81e:	140a      	asrs	r2, r1, #16
9001d820:	d401      	bmi.n	9001d826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d822:	42b2      	cmp	r2, r6
9001d824:	db07      	blt.n	9001d836 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001d826:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d828:	3b01      	subs	r3, #1
9001d82a:	3402      	adds	r4, #2
9001d82c:	4410      	add	r0, r2
9001d82e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d830:	4411      	add	r1, r2
9001d832:	e7ee      	b.n	9001d812 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d834:	d017      	beq.n	9001d866 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d836:	1e5a      	subs	r2, r3, #1
9001d838:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001d83a:	fb05 0502 	mla	r5, r5, r2, r0
9001d83e:	142d      	asrs	r5, r5, #16
9001d840:	d409      	bmi.n	9001d856 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d842:	42bd      	cmp	r5, r7
9001d844:	da07      	bge.n	9001d856 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d846:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001d848:	fb05 1202 	mla	r2, r5, r2, r1
9001d84c:	1412      	asrs	r2, r2, #16
9001d84e:	d402      	bmi.n	9001d856 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d850:	42b2      	cmp	r2, r6
9001d852:	f2c0 80c8 	blt.w	9001d9e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001d856:	2700      	movs	r7, #0
9001d858:	19da      	adds	r2, r3, r7
9001d85a:	2a00      	cmp	r2, #0
9001d85c:	dc3e      	bgt.n	9001d8dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d85e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d862:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d866:	f1bb 0f00 	cmp.w	fp, #0
9001d86a:	f340 8132 	ble.w	9001dad2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001d86e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d872:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d874:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d878:	f1bb 0b01 	subs.w	fp, fp, #1
9001d87c:	eeb0 6a62 	vmov.f32	s12, s5
9001d880:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d884:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d888:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d88c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001d890:	eeb0 6a43 	vmov.f32	s12, s6
9001d894:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d898:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001d89c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d8a0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d8a4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d8a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d8ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d8b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d8b4:	ee12 2a90 	vmov	r2, s5
9001d8b8:	eef0 2a47 	vmov.f32	s5, s14
9001d8bc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d8c0:	ee13 2a10 	vmov	r2, s6
9001d8c4:	9313      	str	r3, [sp, #76]	; 0x4c
9001d8c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d8c8:	eeb0 3a67 	vmov.f32	s6, s15
9001d8cc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d8d0:	9a03      	ldr	r2, [sp, #12]
9001d8d2:	9314      	str	r3, [sp, #80]	; 0x50
9001d8d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d8d6:	bf08      	it	eq
9001d8d8:	4613      	moveq	r3, r2
9001d8da:	e789      	b.n	9001d7f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d8dc:	1405      	asrs	r5, r0, #16
9001d8de:	d436      	bmi.n	9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d8e0:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001d8e4:	42aa      	cmp	r2, r5
9001d8e6:	dd32      	ble.n	9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d8e8:	140e      	asrs	r6, r1, #16
9001d8ea:	d430      	bmi.n	9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d8ec:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001d8f0:	42b2      	cmp	r2, r6
9001d8f2:	dd2c      	ble.n	9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d8f4:	9a00      	ldr	r2, [sp, #0]
9001d8f6:	fb06 5502 	mla	r5, r6, r2, r5
9001d8fa:	9e01      	ldr	r6, [sp, #4]
9001d8fc:	086a      	lsrs	r2, r5, #1
9001d8fe:	5cb2      	ldrb	r2, [r6, r2]
9001d900:	07ee      	lsls	r6, r5, #31
9001d902:	bf54      	ite	pl
9001d904:	f002 020f 	andpl.w	r2, r2, #15
9001d908:	1112      	asrmi	r2, r2, #4
9001d90a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001d90e:	b2d2      	uxtb	r2, r2
9001d910:	b1ea      	cbz	r2, 9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d912:	9d04      	ldr	r5, [sp, #16]
9001d914:	436a      	muls	r2, r5
9001d916:	1c55      	adds	r5, r2, #1
9001d918:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001d91c:	4d6e      	ldr	r5, [pc, #440]	; (9001dad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001d91e:	1212      	asrs	r2, r2, #8
9001d920:	682d      	ldr	r5, [r5, #0]
9001d922:	2aff      	cmp	r2, #255	; 0xff
9001d924:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001d928:	9605      	str	r6, [sp, #20]
9001d92a:	d116      	bne.n	9001d95a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001d92c:	f06f 0201 	mvn.w	r2, #1
9001d930:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d934:	fb02 fc07 	mul.w	ip, r2, r7
9001d938:	096a      	lsrs	r2, r5, #5
9001d93a:	f026 0607 	bic.w	r6, r6, #7
9001d93e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001d942:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d946:	4316      	orrs	r6, r2
9001d948:	432e      	orrs	r6, r5
9001d94a:	f824 600c 	strh.w	r6, [r4, ip]
9001d94e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001d950:	3f01      	subs	r7, #1
9001d952:	4410      	add	r0, r2
9001d954:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001d956:	4411      	add	r1, r2
9001d958:	e77e      	b.n	9001d858 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001d95a:	f06f 0601 	mvn.w	r6, #1
9001d95e:	fa1f fa82 	uxth.w	sl, r2
9001d962:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001d966:	43d2      	mvns	r2, r2
9001d968:	437e      	muls	r6, r7
9001d96a:	b2ed      	uxtb	r5, r5
9001d96c:	fb1c fc0a 	smulbb	ip, ip, sl
9001d970:	b2d2      	uxtb	r2, r2
9001d972:	f834 8006 	ldrh.w	r8, [r4, r6]
9001d976:	fb15 f50a 	smulbb	r5, r5, sl
9001d97a:	9602      	str	r6, [sp, #8]
9001d97c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001d980:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001d984:	fb16 f60a 	smulbb	r6, r6, sl
9001d988:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001d98c:	fb0e ce02 	mla	lr, lr, r2, ip
9001d990:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001d994:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d998:	fa1f fe8e 	uxth.w	lr, lr
9001d99c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001d9a0:	fa5f f888 	uxtb.w	r8, r8
9001d9a4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001d9a8:	fb08 5502 	mla	r5, r8, r2, r5
9001d9ac:	f10e 0201 	add.w	r2, lr, #1
9001d9b0:	fa1f fc8c 	uxth.w	ip, ip
9001d9b4:	b2ad      	uxth	r5, r5
9001d9b6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001d9ba:	9a02      	ldr	r2, [sp, #8]
9001d9bc:	1c6e      	adds	r6, r5, #1
9001d9be:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001d9c2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001d9c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001d9ca:	ea46 0e0e 	orr.w	lr, r6, lr
9001d9ce:	f10c 0601 	add.w	r6, ip, #1
9001d9d2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001d9d6:	0976      	lsrs	r6, r6, #5
9001d9d8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d9dc:	ea4e 0e06 	orr.w	lr, lr, r6
9001d9e0:	f824 e002 	strh.w	lr, [r4, r2]
9001d9e4:	e7b3      	b.n	9001d94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001d9e6:	f04f 0800 	mov.w	r8, #0
9001d9ea:	eba3 0208 	sub.w	r2, r3, r8
9001d9ee:	2a00      	cmp	r2, #0
9001d9f0:	f77f af35 	ble.w	9001d85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d9f4:	1402      	asrs	r2, r0, #16
9001d9f6:	9e00      	ldr	r6, [sp, #0]
9001d9f8:	140d      	asrs	r5, r1, #16
9001d9fa:	fb06 2505 	mla	r5, r6, r5, r2
9001d9fe:	9e01      	ldr	r6, [sp, #4]
9001da00:	086a      	lsrs	r2, r5, #1
9001da02:	07ed      	lsls	r5, r5, #31
9001da04:	5cb2      	ldrb	r2, [r6, r2]
9001da06:	bf54      	ite	pl
9001da08:	f002 020f 	andpl.w	r2, r2, #15
9001da0c:	1112      	asrmi	r2, r2, #4
9001da0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001da12:	b2d2      	uxtb	r2, r2
9001da14:	b1c2      	cbz	r2, 9001da48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001da16:	9d04      	ldr	r5, [sp, #16]
9001da18:	436a      	muls	r2, r5
9001da1a:	1c55      	adds	r5, r2, #1
9001da1c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001da20:	4d2d      	ldr	r5, [pc, #180]	; (9001dad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001da22:	1212      	asrs	r2, r2, #8
9001da24:	682e      	ldr	r6, [r5, #0]
9001da26:	2aff      	cmp	r2, #255	; 0xff
9001da28:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001da2c:	d113      	bne.n	9001da56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001da2e:	0972      	lsrs	r2, r6, #5
9001da30:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001da34:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001da38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001da3c:	f025 0507 	bic.w	r5, r5, #7
9001da40:	4315      	orrs	r5, r2
9001da42:	4335      	orrs	r5, r6
9001da44:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001da48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001da4a:	f108 0801 	add.w	r8, r8, #1
9001da4e:	4410      	add	r0, r2
9001da50:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001da52:	4411      	add	r1, r2
9001da54:	e7c9      	b.n	9001d9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001da56:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001da5a:	fa1f fa82 	uxth.w	sl, r2
9001da5e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001da62:	43d2      	mvns	r2, r2
9001da64:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001da68:	fb17 f70a 	smulbb	r7, r7, sl
9001da6c:	b2d2      	uxtb	r2, r2
9001da6e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001da72:	b2f6      	uxtb	r6, r6
9001da74:	b2ed      	uxtb	r5, r5
9001da76:	fb0c 7c02 	mla	ip, ip, r2, r7
9001da7a:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001da7e:	fb16 f60a 	smulbb	r6, r6, sl
9001da82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001da86:	fa1f fc8c 	uxth.w	ip, ip
9001da8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001da8e:	fb15 f50a 	smulbb	r5, r5, sl
9001da92:	fa5f fe8e 	uxtb.w	lr, lr
9001da96:	fb0e 6602 	mla	r6, lr, r2, r6
9001da9a:	fb07 5702 	mla	r7, r7, r2, r5
9001da9e:	f10c 0201 	add.w	r2, ip, #1
9001daa2:	b2b6      	uxth	r6, r6
9001daa4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001daa8:	1c75      	adds	r5, r6, #1
9001daaa:	b2bf      	uxth	r7, r7
9001daac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001dab0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001dab4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001dab8:	ea45 0c0c 	orr.w	ip, r5, ip
9001dabc:	1c7d      	adds	r5, r7, #1
9001dabe:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001dac2:	096d      	lsrs	r5, r5, #5
9001dac4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001dac8:	ea4c 0c05 	orr.w	ip, ip, r5
9001dacc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001dad0:	e7ba      	b.n	9001da48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001dad2:	b007      	add	sp, #28
9001dad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dad8:	24039adc 	.word	0x24039adc

9001dadc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001dadc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dae0:	b087      	sub	sp, #28
9001dae2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001dae6:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001ddf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001daea:	9815      	ldr	r0, [sp, #84]	; 0x54
9001daec:	9101      	str	r1, [sp, #4]
9001daee:	9205      	str	r2, [sp, #20]
9001daf0:	6841      	ldr	r1, [r0, #4]
9001daf2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001daf6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001dafa:	fb01 2404 	mla	r4, r1, r4, r2
9001dafe:	6802      	ldr	r2, [r0, #0]
9001db00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001db04:	f8db 2008 	ldr.w	r2, [fp, #8]
9001db08:	3201      	adds	r2, #1
9001db0a:	f022 0201 	bic.w	r2, r2, #1
9001db0e:	9202      	str	r2, [sp, #8]
9001db10:	f8db 2000 	ldr.w	r2, [fp]
9001db14:	9203      	str	r2, [sp, #12]
9001db16:	9a01      	ldr	r2, [sp, #4]
9001db18:	2a00      	cmp	r2, #0
9001db1a:	dc03      	bgt.n	9001db24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001db1c:	9a05      	ldr	r2, [sp, #20]
9001db1e:	2a00      	cmp	r2, #0
9001db20:	f340 8162 	ble.w	9001dde8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001db24:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001db26:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001db2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001db2e:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001db30:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001db34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001db38:	2b00      	cmp	r3, #0
9001db3a:	dd0e      	ble.n	9001db5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001db3c:	1402      	asrs	r2, r0, #16
9001db3e:	d405      	bmi.n	9001db4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001db40:	42ba      	cmp	r2, r7
9001db42:	da03      	bge.n	9001db4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001db44:	140a      	asrs	r2, r1, #16
9001db46:	d401      	bmi.n	9001db4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001db48:	42b2      	cmp	r2, r6
9001db4a:	db07      	blt.n	9001db5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001db4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001db4e:	3b01      	subs	r3, #1
9001db50:	3402      	adds	r4, #2
9001db52:	4410      	add	r0, r2
9001db54:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001db56:	4411      	add	r1, r2
9001db58:	e7ee      	b.n	9001db38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001db5a:	d017      	beq.n	9001db8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001db5c:	1e5a      	subs	r2, r3, #1
9001db5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001db60:	fb05 0502 	mla	r5, r5, r2, r0
9001db64:	142d      	asrs	r5, r5, #16
9001db66:	d409      	bmi.n	9001db7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001db68:	42bd      	cmp	r5, r7
9001db6a:	da07      	bge.n	9001db7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001db6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001db6e:	fb05 1202 	mla	r2, r5, r2, r1
9001db72:	1412      	asrs	r2, r2, #16
9001db74:	d402      	bmi.n	9001db7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001db76:	42b2      	cmp	r2, r6
9001db78:	f2c0 80c3 	blt.w	9001dd02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001db7c:	2500      	movs	r5, #0
9001db7e:	195a      	adds	r2, r3, r5
9001db80:	2a00      	cmp	r2, #0
9001db82:	dc3f      	bgt.n	9001dc04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001db84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001db88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001db8c:	9b01      	ldr	r3, [sp, #4]
9001db8e:	2b00      	cmp	r3, #0
9001db90:	f340 812a 	ble.w	9001dde8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001db94:	ee30 0a04 	vadd.f32	s0, s0, s8
9001db98:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001db9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001db9e:	eeb0 6a62 	vmov.f32	s12, s5
9001dba2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dba6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dbaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dbae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001dbb2:	eeb0 6a43 	vmov.f32	s12, s6
9001dbb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dbba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001dbbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dbc2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dbc6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dbca:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dbce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dbd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dbd6:	ee12 2a90 	vmov	r2, s5
9001dbda:	eef0 2a47 	vmov.f32	s5, s14
9001dbde:	fb92 f3f3 	sdiv	r3, r2, r3
9001dbe2:	ee13 2a10 	vmov	r2, s6
9001dbe6:	9313      	str	r3, [sp, #76]	; 0x4c
9001dbe8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dbea:	eeb0 3a67 	vmov.f32	s6, s15
9001dbee:	fb92 f3f3 	sdiv	r3, r2, r3
9001dbf2:	9314      	str	r3, [sp, #80]	; 0x50
9001dbf4:	9b01      	ldr	r3, [sp, #4]
9001dbf6:	9a05      	ldr	r2, [sp, #20]
9001dbf8:	3b01      	subs	r3, #1
9001dbfa:	9301      	str	r3, [sp, #4]
9001dbfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dbfe:	bf08      	it	eq
9001dc00:	4613      	moveq	r3, r2
9001dc02:	e788      	b.n	9001db16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001dc04:	1406      	asrs	r6, r0, #16
9001dc06:	d42c      	bmi.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc08:	f8db 2008 	ldr.w	r2, [fp, #8]
9001dc0c:	42b2      	cmp	r2, r6
9001dc0e:	dd28      	ble.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc10:	140f      	asrs	r7, r1, #16
9001dc12:	d426      	bmi.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc14:	f8db 200c 	ldr.w	r2, [fp, #12]
9001dc18:	42ba      	cmp	r2, r7
9001dc1a:	dd22      	ble.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc1c:	9a02      	ldr	r2, [sp, #8]
9001dc1e:	fb07 6602 	mla	r6, r7, r2, r6
9001dc22:	9f03      	ldr	r7, [sp, #12]
9001dc24:	0872      	lsrs	r2, r6, #1
9001dc26:	07f6      	lsls	r6, r6, #31
9001dc28:	5cba      	ldrb	r2, [r7, r2]
9001dc2a:	bf54      	ite	pl
9001dc2c:	f002 020f 	andpl.w	r2, r2, #15
9001dc30:	1112      	asrmi	r2, r2, #4
9001dc32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001dc36:	b2d2      	uxtb	r2, r2
9001dc38:	2aff      	cmp	r2, #255	; 0xff
9001dc3a:	d118      	bne.n	9001dc6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001dc3c:	f06f 0601 	mvn.w	r6, #1
9001dc40:	f8d8 2000 	ldr.w	r2, [r8]
9001dc44:	fb06 f705 	mul.w	r7, r6, r5
9001dc48:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001dc4c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001dc50:	0956      	lsrs	r6, r2, #5
9001dc52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001dc56:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001dc5a:	ea4c 0606 	orr.w	r6, ip, r6
9001dc5e:	4316      	orrs	r6, r2
9001dc60:	53e6      	strh	r6, [r4, r7]
9001dc62:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dc64:	3d01      	subs	r5, #1
9001dc66:	4410      	add	r0, r2
9001dc68:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dc6a:	4411      	add	r1, r2
9001dc6c:	e787      	b.n	9001db7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001dc6e:	2a00      	cmp	r2, #0
9001dc70:	d0f7      	beq.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dc72:	f06f 0601 	mvn.w	r6, #1
9001dc76:	f8d8 c000 	ldr.w	ip, [r8]
9001dc7a:	fa1f f982 	uxth.w	r9, r2
9001dc7e:	43d2      	mvns	r2, r2
9001dc80:	436e      	muls	r6, r5
9001dc82:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001dc86:	b2d2      	uxtb	r2, r2
9001dc88:	f834 e006 	ldrh.w	lr, [r4, r6]
9001dc8c:	fb1a fa09 	smulbb	sl, sl, r9
9001dc90:	9604      	str	r6, [sp, #16]
9001dc92:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001dc96:	ea4f 272e 	mov.w	r7, lr, asr #8
9001dc9a:	fb16 f609 	smulbb	r6, r6, r9
9001dc9e:	fa5f fc8c 	uxtb.w	ip, ip
9001dca2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001dca6:	fb1c fc09 	smulbb	ip, ip, r9
9001dcaa:	fb07 6702 	mla	r7, r7, r2, r6
9001dcae:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001dcb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001dcb6:	b2bf      	uxth	r7, r7
9001dcb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001dcbc:	fa5f fe8e 	uxtb.w	lr, lr
9001dcc0:	fb06 a602 	mla	r6, r6, r2, sl
9001dcc4:	fb0e cc02 	mla	ip, lr, r2, ip
9001dcc8:	1c7a      	adds	r2, r7, #1
9001dcca:	b2b6      	uxth	r6, r6
9001dccc:	fa1f fc8c 	uxth.w	ip, ip
9001dcd0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001dcd4:	9a04      	ldr	r2, [sp, #16]
9001dcd6:	f10c 0a01 	add.w	sl, ip, #1
9001dcda:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001dcde:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001dce2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dce6:	ea4a 0707 	orr.w	r7, sl, r7
9001dcea:	f106 0a01 	add.w	sl, r6, #1
9001dcee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dcf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dcf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001dcfa:	ea47 070a 	orr.w	r7, r7, sl
9001dcfe:	52a7      	strh	r7, [r4, r2]
9001dd00:	e7af      	b.n	9001dc62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001dd02:	f04f 0e00 	mov.w	lr, #0
9001dd06:	eba3 020e 	sub.w	r2, r3, lr
9001dd0a:	2a00      	cmp	r2, #0
9001dd0c:	f77f af3a 	ble.w	9001db84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001dd10:	1402      	asrs	r2, r0, #16
9001dd12:	9e02      	ldr	r6, [sp, #8]
9001dd14:	140d      	asrs	r5, r1, #16
9001dd16:	fb06 2505 	mla	r5, r6, r5, r2
9001dd1a:	9e03      	ldr	r6, [sp, #12]
9001dd1c:	086a      	lsrs	r2, r5, #1
9001dd1e:	07ed      	lsls	r5, r5, #31
9001dd20:	5cb2      	ldrb	r2, [r6, r2]
9001dd22:	bf54      	ite	pl
9001dd24:	f002 020f 	andpl.w	r2, r2, #15
9001dd28:	1112      	asrmi	r2, r2, #4
9001dd2a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001dd2e:	b2d2      	uxtb	r2, r2
9001dd30:	2aff      	cmp	r2, #255	; 0xff
9001dd32:	d115      	bne.n	9001dd60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001dd34:	f8d8 5000 	ldr.w	r5, [r8]
9001dd38:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001dd3c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001dd40:	096a      	lsrs	r2, r5, #5
9001dd42:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001dd46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dd4a:	4332      	orrs	r2, r6
9001dd4c:	432a      	orrs	r2, r5
9001dd4e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001dd52:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001dd54:	f10e 0e01 	add.w	lr, lr, #1
9001dd58:	4410      	add	r0, r2
9001dd5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001dd5c:	4411      	add	r1, r2
9001dd5e:	e7d2      	b.n	9001dd06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001dd60:	2a00      	cmp	r2, #0
9001dd62:	d0f6      	beq.n	9001dd52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001dd64:	f8d8 7000 	ldr.w	r7, [r8]
9001dd68:	fa1f f982 	uxth.w	r9, r2
9001dd6c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001dd70:	43d2      	mvns	r2, r2
9001dd72:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001dd76:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001dd7a:	ea4f 262c 	mov.w	r6, ip, asr #8
9001dd7e:	fb15 f509 	smulbb	r5, r5, r9
9001dd82:	b2d2      	uxtb	r2, r2
9001dd84:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001dd88:	b2ff      	uxtb	r7, r7
9001dd8a:	fb1a fa09 	smulbb	sl, sl, r9
9001dd8e:	fb06 5602 	mla	r6, r6, r2, r5
9001dd92:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001dd96:	fb17 f709 	smulbb	r7, r7, r9
9001dd9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dd9e:	b2b6      	uxth	r6, r6
9001dda0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001dda4:	fa5f fc8c 	uxtb.w	ip, ip
9001dda8:	fb05 a502 	mla	r5, r5, r2, sl
9001ddac:	fb0c 7702 	mla	r7, ip, r2, r7
9001ddb0:	1c72      	adds	r2, r6, #1
9001ddb2:	b2ad      	uxth	r5, r5
9001ddb4:	b2bf      	uxth	r7, r7
9001ddb6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001ddba:	f107 0a01 	add.w	sl, r7, #1
9001ddbe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001ddc2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ddc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ddca:	ea4a 0606 	orr.w	r6, sl, r6
9001ddce:	f105 0a01 	add.w	sl, r5, #1
9001ddd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ddd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ddda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ddde:	ea46 060a 	orr.w	r6, r6, sl
9001dde2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001dde6:	e7b4      	b.n	9001dd52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001dde8:	b007      	add	sp, #28
9001ddea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ddee:	bf00      	nop
9001ddf0:	24039adc 	.word	0x24039adc

9001ddf4 <_ZN8touchgfx8LCD16bppD1Ev>:
9001ddf4:	4770      	bx	lr

9001ddf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001ddf6:	4770      	bx	lr

9001ddf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001ddf8:	4770      	bx	lr

9001ddfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001ddfa:	4770      	bx	lr

9001ddfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001ddfc:	4770      	bx	lr

9001ddfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001ddfe:	4770      	bx	lr

9001de00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001de00:	4770      	bx	lr

9001de02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001de02:	4770      	bx	lr

9001de04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001de04:	4770      	bx	lr

9001de06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001de06:	4770      	bx	lr

9001de08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001de08:	4770      	bx	lr

9001de0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001de0a:	4770      	bx	lr

9001de0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001de0c:	4770      	bx	lr

9001de0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001de0e:	4770      	bx	lr

9001de10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001de10:	4770      	bx	lr

9001de12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001de12:	4770      	bx	lr

9001de14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001de14:	4770      	bx	lr

9001de16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001de16:	4770      	bx	lr

9001de18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001de18:	4770      	bx	lr

9001de1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001de1a:	4770      	bx	lr

9001de1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001de1c:	4770      	bx	lr

9001de1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001de1e:	4770      	bx	lr

9001de20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001de20:	4770      	bx	lr

9001de22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001de22:	4770      	bx	lr

9001de24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001de24:	4770      	bx	lr

9001de26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001de26:	4770      	bx	lr

9001de28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001de28:	4770      	bx	lr

9001de2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001de2a:	4770      	bx	lr

9001de2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001de2c:	4770      	bx	lr

9001de2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001de2e:	4770      	bx	lr

9001de30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001de30:	4770      	bx	lr

9001de32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001de32:	4770      	bx	lr

9001de34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001de34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001de38:	b088      	sub	sp, #32
9001de3a:	4606      	mov	r6, r0
9001de3c:	4688      	mov	r8, r1
9001de3e:	4691      	mov	r9, r2
9001de40:	ac08      	add	r4, sp, #32
9001de42:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001de46:	4620      	mov	r0, r4
9001de48:	f7fd fc64 	bl	9001b714 <_ZNK8touchgfx6Bitmap7getDataEv>
9001de4c:	6833      	ldr	r3, [r6, #0]
9001de4e:	4605      	mov	r5, r0
9001de50:	4620      	mov	r0, r4
9001de52:	699f      	ldr	r7, [r3, #24]
9001de54:	f7fd fb72 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
9001de58:	4682      	mov	sl, r0
9001de5a:	4620      	mov	r0, r4
9001de5c:	f7fd fba2 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001de60:	9500      	str	r5, [sp, #0]
9001de62:	464b      	mov	r3, r9
9001de64:	4642      	mov	r2, r8
9001de66:	4631      	mov	r1, r6
9001de68:	e9cd a001 	strd	sl, r0, [sp, #4]
9001de6c:	a806      	add	r0, sp, #24
9001de6e:	47b8      	blx	r7
9001de70:	4628      	mov	r0, r5
9001de72:	b008      	add	sp, #32
9001de74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001de78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001de78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001de7c:	2300      	movs	r3, #0
9001de7e:	9300      	str	r3, [sp, #0]
9001de80:	4b3d      	ldr	r3, [pc, #244]	; (9001df78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001de82:	781b      	ldrb	r3, [r3, #0]
9001de84:	2b00      	cmp	r3, #0
9001de86:	d137      	bne.n	9001def8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001de88:	4a3c      	ldr	r2, [pc, #240]	; (9001df7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001de8a:	f9b2 2000 	ldrsh.w	r2, [r2]
9001de8e:	f8ad 2004 	strh.w	r2, [sp, #4]
9001de92:	2b00      	cmp	r3, #0
9001de94:	d132      	bne.n	9001defc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001de96:	4b3a      	ldr	r3, [pc, #232]	; (9001df80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001de98:	f9b3 3000 	ldrsh.w	r3, [r3]
9001de9c:	ac02      	add	r4, sp, #8
9001de9e:	6808      	ldr	r0, [r1, #0]
9001dea0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001dea4:	ab02      	add	r3, sp, #8
9001dea6:	6849      	ldr	r1, [r1, #4]
9001dea8:	4d36      	ldr	r5, [pc, #216]	; (9001df84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001deaa:	c303      	stmia	r3!, {r0, r1}
9001deac:	4669      	mov	r1, sp
9001deae:	4620      	mov	r0, r4
9001deb0:	f7fa f828 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001deb4:	4668      	mov	r0, sp
9001deb6:	f7f9 ffe1 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001deba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001debe:	f8bd 2000 	ldrh.w	r2, [sp]
9001dec2:	462f      	mov	r7, r5
9001dec4:	6828      	ldr	r0, [r5, #0]
9001dec6:	4413      	add	r3, r2
9001dec8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001decc:	f8ad 3008 	strh.w	r3, [sp, #8]
9001ded0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001ded4:	4413      	add	r3, r2
9001ded6:	f8ad 300a 	strh.w	r3, [sp, #10]
9001deda:	6803      	ldr	r3, [r0, #0]
9001dedc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dede:	4798      	blx	r3
9001dee0:	f010 0f01 	tst.w	r0, #1
9001dee4:	d00c      	beq.n	9001df00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001dee6:	6828      	ldr	r0, [r5, #0]
9001dee8:	6803      	ldr	r3, [r0, #0]
9001deea:	e894 0006 	ldmia.w	r4, {r1, r2}
9001deee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001def0:	4798      	blx	r3
9001def2:	b004      	add	sp, #16
9001def4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001def8:	4a21      	ldr	r2, [pc, #132]	; (9001df80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001defa:	e7c6      	b.n	9001de8a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001defc:	4b1f      	ldr	r3, [pc, #124]	; (9001df7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001defe:	e7cb      	b.n	9001de98 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001df00:	6838      	ldr	r0, [r7, #0]
9001df02:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001df06:	6803      	ldr	r3, [r0, #0]
9001df08:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001df0c:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001df10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001df12:	4798      	blx	r3
9001df14:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001df18:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001df1c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001df20:	fb16 3602 	smlabb	r6, r6, r2, r3
9001df24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001df28:	6838      	ldr	r0, [r7, #0]
9001df2a:	6803      	ldr	r3, [r0, #0]
9001df2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001df2e:	4798      	blx	r3
9001df30:	4a12      	ldr	r2, [pc, #72]	; (9001df7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001df32:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001df36:	8813      	ldrh	r3, [r2, #0]
9001df38:	4691      	mov	r9, r2
9001df3a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001df3e:	435d      	muls	r5, r3
9001df40:	fb03 1404 	mla	r4, r3, r4, r1
9001df44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001df48:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001df4c:	6838      	ldr	r0, [r7, #0]
9001df4e:	42ac      	cmp	r4, r5
9001df50:	6803      	ldr	r3, [r0, #0]
9001df52:	d20e      	bcs.n	9001df72 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001df54:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001df58:	4632      	mov	r2, r6
9001df5a:	4643      	mov	r3, r8
9001df5c:	4621      	mov	r1, r4
9001df5e:	47d0      	blx	sl
9001df60:	f8b9 3000 	ldrh.w	r3, [r9]
9001df64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001df68:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001df6c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001df70:	e7ec      	b.n	9001df4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001df72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001df74:	4798      	blx	r3
9001df76:	e7bc      	b.n	9001def2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001df78:	24039ac4 	.word	0x24039ac4
9001df7c:	24039ac6 	.word	0x24039ac6
9001df80:	24039ac8 	.word	0x24039ac8
9001df84:	24039acc 	.word	0x24039acc

9001df88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001df88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001df8c:	b08b      	sub	sp, #44	; 0x2c
9001df8e:	460f      	mov	r7, r1
9001df90:	4616      	mov	r6, r2
9001df92:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001df96:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001df9a:	f1bb 0f00 	cmp.w	fp, #0
9001df9e:	d04a      	beq.n	9001e036 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001dfa0:	6810      	ldr	r0, [r2, #0]
9001dfa2:	ad06      	add	r5, sp, #24
9001dfa4:	6851      	ldr	r1, [r2, #4]
9001dfa6:	c503      	stmia	r5!, {r0, r1}
9001dfa8:	6818      	ldr	r0, [r3, #0]
9001dfaa:	ad08      	add	r5, sp, #32
9001dfac:	6859      	ldr	r1, [r3, #4]
9001dfae:	c503      	stmia	r5!, {r0, r1}
9001dfb0:	a806      	add	r0, sp, #24
9001dfb2:	f7f9 ff63 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001dfb6:	4631      	mov	r1, r6
9001dfb8:	a808      	add	r0, sp, #32
9001dfba:	f7f9 ffa3 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001dfbe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001dfc2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001dfc6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001dfca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001dfce:	fb16 2103 	smlabb	r1, r6, r3, r2
9001dfd2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001dfd6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001dfda:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001dfde:	4f5f      	ldr	r7, [pc, #380]	; (9001e15c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001dfe0:	440a      	add	r2, r1
9001dfe2:	6838      	ldr	r0, [r7, #0]
9001dfe4:	46b9      	mov	r9, r7
9001dfe6:	f8ad 2020 	strh.w	r2, [sp, #32]
9001dfea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001dfee:	4413      	add	r3, r2
9001dff0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001dff4:	6803      	ldr	r3, [r0, #0]
9001dff6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dff8:	4798      	blx	r3
9001dffa:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001dffe:	d11d      	bne.n	9001e03c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001e000:	b9fc      	cbnz	r4, 9001e042 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e002:	f010 0f01 	tst.w	r0, #1
9001e006:	d01c      	beq.n	9001e042 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001e008:	f8d9 0000 	ldr.w	r0, [r9]
9001e00c:	2700      	movs	r7, #0
9001e00e:	b2ad      	uxth	r5, r5
9001e010:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001e014:	6801      	ldr	r1, [r0, #0]
9001e016:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001e01a:	f8cd b00c 	str.w	fp, [sp, #12]
9001e01e:	9501      	str	r5, [sp, #4]
9001e020:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001e024:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001e028:	9402      	str	r4, [sp, #8]
9001e02a:	fa1f f488 	uxth.w	r4, r8
9001e02e:	9400      	str	r4, [sp, #0]
9001e030:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001e032:	4631      	mov	r1, r6
9001e034:	47a0      	blx	r4
9001e036:	b00b      	add	sp, #44	; 0x2c
9001e038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e03c:	f010 0f04 	tst.w	r0, #4
9001e040:	e7e1      	b.n	9001e006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001e042:	f8d9 0000 	ldr.w	r0, [r9]
9001e046:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001e04a:	6803      	ldr	r3, [r0, #0]
9001e04c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e04e:	4798      	blx	r3
9001e050:	4b43      	ldr	r3, [pc, #268]	; (9001e160 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001e052:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001e056:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001e05a:	881a      	ldrh	r2, [r3, #0]
9001e05c:	469a      	mov	sl, r3
9001e05e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001e062:	fb05 f502 	mul.w	r5, r5, r2
9001e066:	fb02 1404 	mla	r4, r2, r4, r1
9001e06a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001e06e:	d059      	beq.n	9001e124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001e070:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001e074:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e078:	fa1f f28b 	uxth.w	r2, fp
9001e07c:	469e      	mov	lr, r3
9001e07e:	fa1f f989 	uxth.w	r9, r9
9001e082:	42ac      	cmp	r4, r5
9001e084:	d264      	bcs.n	9001e150 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e086:	eb04 0a07 	add.w	sl, r4, r7
9001e08a:	4554      	cmp	r4, sl
9001e08c:	d23d      	bcs.n	9001e10a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001e08e:	8821      	ldrh	r1, [r4, #0]
9001e090:	f836 3b02 	ldrh.w	r3, [r6], #2
9001e094:	1208      	asrs	r0, r1, #8
9001e096:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e09a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e09e:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001e0a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e0a6:	00c9      	lsls	r1, r1, #3
9001e0a8:	fb10 f009 	smulbb	r0, r0, r9
9001e0ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e0b0:	b2c9      	uxtb	r1, r1
9001e0b2:	fb0c 0c02 	mla	ip, ip, r2, r0
9001e0b6:	10d8      	asrs	r0, r3, #3
9001e0b8:	fb1b fb09 	smulbb	fp, fp, r9
9001e0bc:	00db      	lsls	r3, r3, #3
9001e0be:	fa1f fc8c 	uxth.w	ip, ip
9001e0c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001e0c6:	fb11 f109 	smulbb	r1, r1, r9
9001e0ca:	b2db      	uxtb	r3, r3
9001e0cc:	fb00 b002 	mla	r0, r0, r2, fp
9001e0d0:	f10c 0b01 	add.w	fp, ip, #1
9001e0d4:	fb03 1302 	mla	r3, r3, r2, r1
9001e0d8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001e0dc:	b29b      	uxth	r3, r3
9001e0de:	b280      	uxth	r0, r0
9001e0e0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001e0e4:	f103 0c01 	add.w	ip, r3, #1
9001e0e8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e0ec:	1c43      	adds	r3, r0, #1
9001e0ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001e0f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e0f6:	0940      	lsrs	r0, r0, #5
9001e0f8:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e0fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001e100:	ea4c 0c00 	orr.w	ip, ip, r0
9001e104:	f824 cb02 	strh.w	ip, [r4], #2
9001e108:	e7bf      	b.n	9001e08a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001e10a:	f8be 3000 	ldrh.w	r3, [lr]
9001e10e:	eba3 0308 	sub.w	r3, r3, r8
9001e112:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e116:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e11a:	eba3 0308 	sub.w	r3, r3, r8
9001e11e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e122:	e7ae      	b.n	9001e082 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001e124:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001e128:	f8d9 0000 	ldr.w	r0, [r9]
9001e12c:	42ac      	cmp	r4, r5
9001e12e:	6803      	ldr	r3, [r0, #0]
9001e130:	d20e      	bcs.n	9001e150 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001e132:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001e136:	4632      	mov	r2, r6
9001e138:	463b      	mov	r3, r7
9001e13a:	4621      	mov	r1, r4
9001e13c:	47c0      	blx	r8
9001e13e:	f8ba 3000 	ldrh.w	r3, [sl]
9001e142:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e146:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001e14a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001e14e:	e7eb      	b.n	9001e128 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001e150:	4b02      	ldr	r3, [pc, #8]	; (9001e15c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001e152:	6818      	ldr	r0, [r3, #0]
9001e154:	6803      	ldr	r3, [r0, #0]
9001e156:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e158:	4798      	blx	r3
9001e15a:	e76c      	b.n	9001e036 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001e15c:	24039acc 	.word	0x24039acc
9001e160:	24039ac6 	.word	0x24039ac6

9001e164 <_ZN8touchgfx8LCD16bppD0Ev>:
9001e164:	b510      	push	{r4, lr}
9001e166:	4604      	mov	r4, r0
9001e168:	2184      	movs	r1, #132	; 0x84
9001e16a:	f00b f97b 	bl	90029464 <_ZdlPvj>
9001e16e:	4620      	mov	r0, r4
9001e170:	bd10      	pop	{r4, pc}

9001e172 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001e172:	b510      	push	{r4, lr}
9001e174:	4604      	mov	r4, r0
9001e176:	2104      	movs	r1, #4
9001e178:	f00b f974 	bl	90029464 <_ZdlPvj>
9001e17c:	4620      	mov	r0, r4
9001e17e:	bd10      	pop	{r4, pc}

9001e180 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001e180:	b510      	push	{r4, lr}
9001e182:	4604      	mov	r4, r0
9001e184:	2104      	movs	r1, #4
9001e186:	f00b f96d 	bl	90029464 <_ZdlPvj>
9001e18a:	4620      	mov	r0, r4
9001e18c:	bd10      	pop	{r4, pc}

9001e18e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001e18e:	b510      	push	{r4, lr}
9001e190:	4604      	mov	r4, r0
9001e192:	f640 0144 	movw	r1, #2116	; 0x844
9001e196:	f00b f965 	bl	90029464 <_ZdlPvj>
9001e19a:	4620      	mov	r0, r4
9001e19c:	bd10      	pop	{r4, pc}

9001e19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e19e:	b510      	push	{r4, lr}
9001e1a0:	4604      	mov	r4, r0
9001e1a2:	2104      	movs	r1, #4
9001e1a4:	f00b f95e 	bl	90029464 <_ZdlPvj>
9001e1a8:	4620      	mov	r0, r4
9001e1aa:	bd10      	pop	{r4, pc}

9001e1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e1ac:	b510      	push	{r4, lr}
9001e1ae:	4604      	mov	r4, r0
9001e1b0:	2104      	movs	r1, #4
9001e1b2:	f00b f957 	bl	90029464 <_ZdlPvj>
9001e1b6:	4620      	mov	r0, r4
9001e1b8:	bd10      	pop	{r4, pc}

9001e1ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e1ba:	b510      	push	{r4, lr}
9001e1bc:	4604      	mov	r4, r0
9001e1be:	2104      	movs	r1, #4
9001e1c0:	f00b f950 	bl	90029464 <_ZdlPvj>
9001e1c4:	4620      	mov	r0, r4
9001e1c6:	bd10      	pop	{r4, pc}

9001e1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e1c8:	b510      	push	{r4, lr}
9001e1ca:	4604      	mov	r4, r0
9001e1cc:	2104      	movs	r1, #4
9001e1ce:	f00b f949 	bl	90029464 <_ZdlPvj>
9001e1d2:	4620      	mov	r0, r4
9001e1d4:	bd10      	pop	{r4, pc}

9001e1d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e1d6:	b510      	push	{r4, lr}
9001e1d8:	4604      	mov	r4, r0
9001e1da:	2104      	movs	r1, #4
9001e1dc:	f00b f942 	bl	90029464 <_ZdlPvj>
9001e1e0:	4620      	mov	r0, r4
9001e1e2:	bd10      	pop	{r4, pc}

9001e1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001e1e4:	b510      	push	{r4, lr}
9001e1e6:	4604      	mov	r4, r0
9001e1e8:	2104      	movs	r1, #4
9001e1ea:	f00b f93b 	bl	90029464 <_ZdlPvj>
9001e1ee:	4620      	mov	r0, r4
9001e1f0:	bd10      	pop	{r4, pc}

9001e1f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e1f2:	b510      	push	{r4, lr}
9001e1f4:	4604      	mov	r4, r0
9001e1f6:	2104      	movs	r1, #4
9001e1f8:	f00b f934 	bl	90029464 <_ZdlPvj>
9001e1fc:	4620      	mov	r0, r4
9001e1fe:	bd10      	pop	{r4, pc}

9001e200 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001e200:	b510      	push	{r4, lr}
9001e202:	4604      	mov	r4, r0
9001e204:	2104      	movs	r1, #4
9001e206:	f00b f92d 	bl	90029464 <_ZdlPvj>
9001e20a:	4620      	mov	r0, r4
9001e20c:	bd10      	pop	{r4, pc}

9001e20e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e20e:	b510      	push	{r4, lr}
9001e210:	4604      	mov	r4, r0
9001e212:	2104      	movs	r1, #4
9001e214:	f00b f926 	bl	90029464 <_ZdlPvj>
9001e218:	4620      	mov	r0, r4
9001e21a:	bd10      	pop	{r4, pc}

9001e21c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e21c:	b510      	push	{r4, lr}
9001e21e:	4604      	mov	r4, r0
9001e220:	2104      	movs	r1, #4
9001e222:	f00b f91f 	bl	90029464 <_ZdlPvj>
9001e226:	4620      	mov	r0, r4
9001e228:	bd10      	pop	{r4, pc}

9001e22a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e22a:	b510      	push	{r4, lr}
9001e22c:	4604      	mov	r4, r0
9001e22e:	2104      	movs	r1, #4
9001e230:	f00b f918 	bl	90029464 <_ZdlPvj>
9001e234:	4620      	mov	r0, r4
9001e236:	bd10      	pop	{r4, pc}

9001e238 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e238:	b510      	push	{r4, lr}
9001e23a:	4604      	mov	r4, r0
9001e23c:	2104      	movs	r1, #4
9001e23e:	f00b f911 	bl	90029464 <_ZdlPvj>
9001e242:	4620      	mov	r0, r4
9001e244:	bd10      	pop	{r4, pc}

9001e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001e246:	b510      	push	{r4, lr}
9001e248:	4604      	mov	r4, r0
9001e24a:	2104      	movs	r1, #4
9001e24c:	f00b f90a 	bl	90029464 <_ZdlPvj>
9001e250:	4620      	mov	r0, r4
9001e252:	bd10      	pop	{r4, pc}

9001e254 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001e254:	b510      	push	{r4, lr}
9001e256:	4604      	mov	r4, r0
9001e258:	2104      	movs	r1, #4
9001e25a:	f00b f903 	bl	90029464 <_ZdlPvj>
9001e25e:	4620      	mov	r0, r4
9001e260:	bd10      	pop	{r4, pc}

9001e262 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e262:	b510      	push	{r4, lr}
9001e264:	4604      	mov	r4, r0
9001e266:	2104      	movs	r1, #4
9001e268:	f00b f8fc 	bl	90029464 <_ZdlPvj>
9001e26c:	4620      	mov	r0, r4
9001e26e:	bd10      	pop	{r4, pc}

9001e270 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e270:	b510      	push	{r4, lr}
9001e272:	4604      	mov	r4, r0
9001e274:	2104      	movs	r1, #4
9001e276:	f00b f8f5 	bl	90029464 <_ZdlPvj>
9001e27a:	4620      	mov	r0, r4
9001e27c:	bd10      	pop	{r4, pc}

9001e27e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001e27e:	b510      	push	{r4, lr}
9001e280:	4604      	mov	r4, r0
9001e282:	2104      	movs	r1, #4
9001e284:	f00b f8ee 	bl	90029464 <_ZdlPvj>
9001e288:	4620      	mov	r0, r4
9001e28a:	bd10      	pop	{r4, pc}

9001e28c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001e28c:	b510      	push	{r4, lr}
9001e28e:	4604      	mov	r4, r0
9001e290:	2104      	movs	r1, #4
9001e292:	f00b f8e7 	bl	90029464 <_ZdlPvj>
9001e296:	4620      	mov	r0, r4
9001e298:	bd10      	pop	{r4, pc}

9001e29a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e29a:	b510      	push	{r4, lr}
9001e29c:	4604      	mov	r4, r0
9001e29e:	2104      	movs	r1, #4
9001e2a0:	f00b f8e0 	bl	90029464 <_ZdlPvj>
9001e2a4:	4620      	mov	r0, r4
9001e2a6:	bd10      	pop	{r4, pc}

9001e2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e2a8:	b510      	push	{r4, lr}
9001e2aa:	4604      	mov	r4, r0
9001e2ac:	2104      	movs	r1, #4
9001e2ae:	f00b f8d9 	bl	90029464 <_ZdlPvj>
9001e2b2:	4620      	mov	r0, r4
9001e2b4:	bd10      	pop	{r4, pc}

9001e2b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001e2b6:	b510      	push	{r4, lr}
9001e2b8:	4604      	mov	r4, r0
9001e2ba:	2104      	movs	r1, #4
9001e2bc:	f00b f8d2 	bl	90029464 <_ZdlPvj>
9001e2c0:	4620      	mov	r0, r4
9001e2c2:	bd10      	pop	{r4, pc}

9001e2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001e2c4:	b510      	push	{r4, lr}
9001e2c6:	4604      	mov	r4, r0
9001e2c8:	2104      	movs	r1, #4
9001e2ca:	f00b f8cb 	bl	90029464 <_ZdlPvj>
9001e2ce:	4620      	mov	r0, r4
9001e2d0:	bd10      	pop	{r4, pc}

9001e2d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001e2d2:	b510      	push	{r4, lr}
9001e2d4:	4604      	mov	r4, r0
9001e2d6:	2104      	movs	r1, #4
9001e2d8:	f00b f8c4 	bl	90029464 <_ZdlPvj>
9001e2dc:	4620      	mov	r0, r4
9001e2de:	bd10      	pop	{r4, pc}

9001e2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001e2e0:	b510      	push	{r4, lr}
9001e2e2:	4604      	mov	r4, r0
9001e2e4:	2104      	movs	r1, #4
9001e2e6:	f00b f8bd 	bl	90029464 <_ZdlPvj>
9001e2ea:	4620      	mov	r0, r4
9001e2ec:	bd10      	pop	{r4, pc}

9001e2ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001e2ee:	b510      	push	{r4, lr}
9001e2f0:	4604      	mov	r4, r0
9001e2f2:	2104      	movs	r1, #4
9001e2f4:	f00b f8b6 	bl	90029464 <_ZdlPvj>
9001e2f8:	4620      	mov	r0, r4
9001e2fa:	bd10      	pop	{r4, pc}

9001e2fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001e2fc:	b510      	push	{r4, lr}
9001e2fe:	4604      	mov	r4, r0
9001e300:	2104      	movs	r1, #4
9001e302:	f00b f8af 	bl	90029464 <_ZdlPvj>
9001e306:	4620      	mov	r0, r4
9001e308:	bd10      	pop	{r4, pc}

9001e30a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001e30a:	b510      	push	{r4, lr}
9001e30c:	4604      	mov	r4, r0
9001e30e:	2104      	movs	r1, #4
9001e310:	f00b f8a8 	bl	90029464 <_ZdlPvj>
9001e314:	4620      	mov	r0, r4
9001e316:	bd10      	pop	{r4, pc}

9001e318 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001e318:	b510      	push	{r4, lr}
9001e31a:	4604      	mov	r4, r0
9001e31c:	2104      	movs	r1, #4
9001e31e:	f00b f8a1 	bl	90029464 <_ZdlPvj>
9001e322:	4620      	mov	r0, r4
9001e324:	bd10      	pop	{r4, pc}
	...

9001e328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e32c:	b08f      	sub	sp, #60	; 0x3c
9001e32e:	461c      	mov	r4, r3
9001e330:	9205      	str	r2, [sp, #20]
9001e332:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e336:	9100      	str	r1, [sp, #0]
9001e338:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001e33a:	9201      	str	r2, [sp, #4]
9001e33c:	2a00      	cmp	r2, #0
9001e33e:	f000 8116 	beq.w	9001e56e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001e342:	6820      	ldr	r0, [r4, #0]
9001e344:	aa0a      	add	r2, sp, #40	; 0x28
9001e346:	6861      	ldr	r1, [r4, #4]
9001e348:	c203      	stmia	r2!, {r0, r1}
9001e34a:	6818      	ldr	r0, [r3, #0]
9001e34c:	aa0c      	add	r2, sp, #48	; 0x30
9001e34e:	6859      	ldr	r1, [r3, #4]
9001e350:	c203      	stmia	r2!, {r0, r1}
9001e352:	a80a      	add	r0, sp, #40	; 0x28
9001e354:	f7f9 fd92 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e358:	4621      	mov	r1, r4
9001e35a:	a80c      	add	r0, sp, #48	; 0x30
9001e35c:	f7f9 fdd2 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e360:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e364:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001e368:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001e36c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001e370:	bfdb      	ittet	le
9001e372:	b2b3      	uxthle	r3, r6
9001e374:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001e378:	2301      	movgt	r3, #1
9001e37a:	fb92 f3f3 	sdivle	r3, r2, r3
9001e37e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e382:	441d      	add	r5, r3
9001e384:	fb92 f1f3 	sdiv	r1, r2, r3
9001e388:	fa1f fc81 	uxth.w	ip, r1
9001e38c:	3d01      	subs	r5, #1
9001e38e:	fb0c 2413 	mls	r4, ip, r3, r2
9001e392:	4661      	mov	r1, ip
9001e394:	fb14 f406 	smulbb	r4, r4, r6
9001e398:	4404      	add	r4, r0
9001e39a:	fb95 f5f3 	sdiv	r5, r5, r3
9001e39e:	b2a4      	uxth	r4, r4
9001e3a0:	b131      	cbz	r1, 9001e3b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001e3a2:	9b05      	ldr	r3, [sp, #20]
9001e3a4:	9900      	ldr	r1, [sp, #0]
9001e3a6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e3aa:	ba1b      	rev	r3, r3
9001e3ac:	4419      	add	r1, r3
9001e3ae:	9100      	str	r1, [sp, #0]
9001e3b0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001e3b4:	b2ad      	uxth	r5, r5
9001e3b6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001e3ba:	4418      	add	r0, r3
9001e3bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e3c0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e3c4:	00ad      	lsls	r5, r5, #2
9001e3c6:	441a      	add	r2, r3
9001e3c8:	4b6a      	ldr	r3, [pc, #424]	; (9001e574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e3ca:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001e3ce:	6818      	ldr	r0, [r3, #0]
9001e3d0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001e3d4:	6803      	ldr	r3, [r0, #0]
9001e3d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e3d8:	4798      	blx	r3
9001e3da:	4967      	ldr	r1, [pc, #412]	; (9001e578 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001e3dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e3e0:	2c00      	cmp	r4, #0
9001e3e2:	880b      	ldrh	r3, [r1, #0]
9001e3e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001e3e8:	bf0c      	ite	eq
9001e3ea:	46c6      	moveq	lr, r8
9001e3ec:	f04f 0e00 	movne.w	lr, #0
9001e3f0:	9109      	str	r1, [sp, #36]	; 0x24
9001e3f2:	fb03 c202 	mla	r2, r3, r2, ip
9001e3f6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e3fa:	4373      	muls	r3, r6
9001e3fc:	fa1f fe8e 	uxth.w	lr, lr
9001e400:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e404:	9103      	str	r1, [sp, #12]
9001e406:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e40a:	9306      	str	r3, [sp, #24]
9001e40c:	1d2b      	adds	r3, r5, #4
9001e40e:	9307      	str	r3, [sp, #28]
9001e410:	9b01      	ldr	r3, [sp, #4]
9001e412:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001e416:	2300      	movs	r3, #0
9001e418:	b292      	uxth	r2, r2
9001e41a:	9302      	str	r3, [sp, #8]
9001e41c:	9204      	str	r2, [sp, #16]
9001e41e:	9a06      	ldr	r2, [sp, #24]
9001e420:	4282      	cmp	r2, r0
9001e422:	f240 809f 	bls.w	9001e564 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001e426:	b963      	cbnz	r3, 9001e442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e428:	9b00      	ldr	r3, [sp, #0]
9001e42a:	781a      	ldrb	r2, [r3, #0]
9001e42c:	0993      	lsrs	r3, r2, #6
9001e42e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001e432:	9202      	str	r2, [sp, #8]
9001e434:	1e5a      	subs	r2, r3, #1
9001e436:	2a02      	cmp	r2, #2
9001e438:	d815      	bhi.n	9001e466 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001e43a:	9a00      	ldr	r2, [sp, #0]
9001e43c:	b29b      	uxth	r3, r3
9001e43e:	3201      	adds	r2, #1
9001e440:	9200      	str	r2, [sp, #0]
9001e442:	b1b4      	cbz	r4, 9001e472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001e444:	429c      	cmp	r4, r3
9001e446:	bf91      	iteee	ls
9001e448:	1b1c      	subls	r4, r3, r4
9001e44a:	1ae4      	subhi	r4, r4, r3
9001e44c:	4671      	movhi	r1, lr
9001e44e:	f04f 0a00 	movhi.w	sl, #0
9001e452:	bf9b      	ittet	ls
9001e454:	fa1f fa84 	uxthls.w	sl, r4
9001e458:	2400      	movls	r4, #0
9001e45a:	b2a4      	uxthhi	r4, r4
9001e45c:	fa1f f188 	uxthls.w	r1, r8
9001e460:	4653      	mov	r3, sl
9001e462:	468e      	mov	lr, r1
9001e464:	e7db      	b.n	9001e41e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001e466:	9a00      	ldr	r2, [sp, #0]
9001e468:	9b00      	ldr	r3, [sp, #0]
9001e46a:	3202      	adds	r2, #2
9001e46c:	785b      	ldrb	r3, [r3, #1]
9001e46e:	9200      	str	r2, [sp, #0]
9001e470:	e7e7      	b.n	9001e442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001e472:	2202      	movs	r2, #2
9001e474:	9907      	ldr	r1, [sp, #28]
9001e476:	4573      	cmp	r3, lr
9001e478:	4615      	mov	r5, r2
9001e47a:	9a02      	ldr	r2, [sp, #8]
9001e47c:	bf24      	itt	cs
9001e47e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001e482:	46f1      	movcs	r9, lr
9001e484:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e488:	9905      	ldr	r1, [sp, #20]
9001e48a:	bf34      	ite	cc
9001e48c:	4699      	movcc	r9, r3
9001e48e:	fa1f fa8a 	uxthcs.w	sl, sl
9001e492:	f831 c002 	ldrh.w	ip, [r1, r2]
9001e496:	bf38      	it	cc
9001e498:	ebae 0103 	subcc.w	r1, lr, r3
9001e49c:	9a01      	ldr	r2, [sp, #4]
9001e49e:	bf2e      	itee	cs
9001e4a0:	4621      	movcs	r1, r4
9001e4a2:	b289      	uxthcc	r1, r1
9001e4a4:	46a2      	movcc	sl, r4
9001e4a6:	2aff      	cmp	r2, #255	; 0xff
9001e4a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001e4ac:	d105      	bne.n	9001e4ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001e4ae:	4481      	add	r9, r0
9001e4b0:	4581      	cmp	r9, r0
9001e4b2:	d045      	beq.n	9001e540 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e4b4:	f820 cb02 	strh.w	ip, [r0], #2
9001e4b8:	e7fa      	b.n	9001e4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001e4ba:	ea4f 222c 	mov.w	r2, ip, asr #8
9001e4be:	9d03      	ldr	r5, [sp, #12]
9001e4c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001e4c4:	4481      	add	r9, r0
9001e4c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e4ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e4ce:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001e4d2:	fa5f fc8c 	uxtb.w	ip, ip
9001e4d6:	436a      	muls	r2, r5
9001e4d8:	fb0b fb05 	mul.w	fp, fp, r5
9001e4dc:	fb0c fc05 	mul.w	ip, ip, r5
9001e4e0:	9208      	str	r2, [sp, #32]
9001e4e2:	4581      	cmp	r9, r0
9001e4e4:	d02c      	beq.n	9001e540 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001e4e6:	8802      	ldrh	r2, [r0, #0]
9001e4e8:	9d04      	ldr	r5, [sp, #16]
9001e4ea:	1216      	asrs	r6, r2, #8
9001e4ec:	9f04      	ldr	r7, [sp, #16]
9001e4ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e4f2:	fb16 f605 	smulbb	r6, r6, r5
9001e4f6:	9d08      	ldr	r5, [sp, #32]
9001e4f8:	442e      	add	r6, r5
9001e4fa:	10d5      	asrs	r5, r2, #3
9001e4fc:	00d2      	lsls	r2, r2, #3
9001e4fe:	b2b6      	uxth	r6, r6
9001e500:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e504:	b2d2      	uxtb	r2, r2
9001e506:	fb15 f507 	smulbb	r5, r5, r7
9001e50a:	fb12 f207 	smulbb	r2, r2, r7
9001e50e:	1c77      	adds	r7, r6, #1
9001e510:	445d      	add	r5, fp
9001e512:	4462      	add	r2, ip
9001e514:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001e518:	b2ad      	uxth	r5, r5
9001e51a:	b292      	uxth	r2, r2
9001e51c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001e520:	1c57      	adds	r7, r2, #1
9001e522:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001e526:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e52a:	4316      	orrs	r6, r2
9001e52c:	1c6a      	adds	r2, r5, #1
9001e52e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001e532:	096d      	lsrs	r5, r5, #5
9001e534:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e538:	432e      	orrs	r6, r5
9001e53a:	f820 6b02 	strh.w	r6, [r0], #2
9001e53e:	e7d0      	b.n	9001e4e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001e540:	4573      	cmp	r3, lr
9001e542:	d38d      	bcc.n	9001e460 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e544:	fa1f f188 	uxth.w	r1, r8
9001e548:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001e54c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e54e:	1a64      	subs	r4, r4, r1
9001e550:	881b      	ldrh	r3, [r3, #0]
9001e552:	b2a4      	uxth	r4, r4
9001e554:	eba3 0308 	sub.w	r3, r3, r8
9001e558:	2c00      	cmp	r4, #0
9001e55a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e55e:	bf18      	it	ne
9001e560:	2100      	movne	r1, #0
9001e562:	e77d      	b.n	9001e460 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001e564:	4b03      	ldr	r3, [pc, #12]	; (9001e574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001e566:	6818      	ldr	r0, [r3, #0]
9001e568:	6803      	ldr	r3, [r0, #0]
9001e56a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e56c:	4798      	blx	r3
9001e56e:	b00f      	add	sp, #60	; 0x3c
9001e570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e574:	24039acc 	.word	0x24039acc
9001e578:	24039ac6 	.word	0x24039ac6

9001e57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001e57c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e580:	b09f      	sub	sp, #124	; 0x7c
9001e582:	461d      	mov	r5, r3
9001e584:	4604      	mov	r4, r0
9001e586:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001e588:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001e58c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001e590:	9209      	str	r2, [sp, #36]	; 0x24
9001e592:	2a00      	cmp	r2, #0
9001e594:	f000 81ed 	beq.w	9001e972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001e598:	6828      	ldr	r0, [r5, #0]
9001e59a:	aa1a      	add	r2, sp, #104	; 0x68
9001e59c:	6869      	ldr	r1, [r5, #4]
9001e59e:	c203      	stmia	r2!, {r0, r1}
9001e5a0:	6818      	ldr	r0, [r3, #0]
9001e5a2:	aa1c      	add	r2, sp, #112	; 0x70
9001e5a4:	6859      	ldr	r1, [r3, #4]
9001e5a6:	c203      	stmia	r2!, {r0, r1}
9001e5a8:	a81a      	add	r0, sp, #104	; 0x68
9001e5aa:	f7f9 fc67 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e5ae:	4629      	mov	r1, r5
9001e5b0:	a81c      	add	r0, sp, #112	; 0x70
9001e5b2:	f7f9 fca7 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e5b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001e5ba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001e5be:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001e5c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001e5c6:	bfdb      	ittet	le
9001e5c8:	b29a      	uxthle	r2, r3
9001e5ca:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001e5ce:	2201      	movgt	r2, #1
9001e5d0:	fb91 f2f2 	sdivle	r2, r1, r2
9001e5d4:	9202      	str	r2, [sp, #8]
9001e5d6:	9802      	ldr	r0, [sp, #8]
9001e5d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001e5dc:	9902      	ldr	r1, [sp, #8]
9001e5de:	fb92 f0f0 	sdiv	r0, r2, r0
9001e5e2:	b280      	uxth	r0, r0
9001e5e4:	4488      	add	r8, r1
9001e5e6:	9010      	str	r0, [sp, #64]	; 0x40
9001e5e8:	f108 38ff 	add.w	r8, r8, #4294967295
9001e5ec:	9802      	ldr	r0, [sp, #8]
9001e5ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001e5f0:	fb05 2510 	mls	r5, r5, r0, r2
9001e5f4:	fb98 f8f1 	sdiv	r8, r8, r1
9001e5f8:	fb15 f503 	smulbb	r5, r5, r3
9001e5fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001e600:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001e604:	f108 0801 	add.w	r8, r8, #1
9001e608:	440d      	add	r5, r1
9001e60a:	4419      	add	r1, r3
9001e60c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001e610:	fa1f f888 	uxth.w	r8, r8
9001e614:	441a      	add	r2, r3
9001e616:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001e61a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001e61e:	b2ad      	uxth	r5, r5
9001e620:	9304      	str	r3, [sp, #16]
9001e622:	4b94      	ldr	r3, [pc, #592]	; (9001e874 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001e624:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001e628:	6818      	ldr	r0, [r3, #0]
9001e62a:	6803      	ldr	r3, [r0, #0]
9001e62c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e62e:	4798      	blx	r3
9001e630:	4b91      	ldr	r3, [pc, #580]	; (9001e878 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e632:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001e636:	2d00      	cmp	r5, #0
9001e638:	881a      	ldrh	r2, [r3, #0]
9001e63a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001e63e:	fb02 f606 	mul.w	r6, r2, r6
9001e642:	fb02 7101 	mla	r1, r2, r1, r7
9001e646:	9318      	str	r3, [sp, #96]	; 0x60
9001e648:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e64c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001e650:	f04f 0100 	mov.w	r1, #0
9001e654:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001e658:	930f      	str	r3, [sp, #60]	; 0x3c
9001e65a:	4b88      	ldr	r3, [pc, #544]	; (9001e87c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001e65c:	920a      	str	r2, [sp, #40]	; 0x28
9001e65e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001e660:	eba3 0304 	sub.w	r3, r3, r4
9001e664:	910d      	str	r1, [sp, #52]	; 0x34
9001e666:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001e66a:	9319      	str	r3, [sp, #100]	; 0x64
9001e66c:	f108 0204 	add.w	r2, r8, #4
9001e670:	9211      	str	r2, [sp, #68]	; 0x44
9001e672:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001e674:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001e678:	9215      	str	r2, [sp, #84]	; 0x54
9001e67a:	9a04      	ldr	r2, [sp, #16]
9001e67c:	bf18      	it	ne
9001e67e:	2200      	movne	r2, #0
9001e680:	b292      	uxth	r2, r2
9001e682:	9910      	ldr	r1, [sp, #64]	; 0x40
9001e684:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e686:	fa11 f383 	uxtah	r3, r1, r3
9001e68a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001e68c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001e690:	3304      	adds	r3, #4
9001e692:	9306      	str	r3, [sp, #24]
9001e694:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e696:	4283      	cmp	r3, r0
9001e698:	f240 8166 	bls.w	9001e968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001e69c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001e6a0:	f04f 0a01 	mov.w	sl, #1
9001e6a4:	9902      	ldr	r1, [sp, #8]
9001e6a6:	9e06      	ldr	r6, [sp, #24]
9001e6a8:	46d3      	mov	fp, sl
9001e6aa:	4657      	mov	r7, sl
9001e6ac:	7836      	ldrb	r6, [r6, #0]
9001e6ae:	fbb5 f3f3 	udiv	r3, r5, r3
9001e6b2:	1acb      	subs	r3, r1, r3
9001e6b4:	9612      	str	r6, [sp, #72]	; 0x48
9001e6b6:	3601      	adds	r6, #1
9001e6b8:	b29b      	uxth	r3, r3
9001e6ba:	9605      	str	r6, [sp, #20]
9001e6bc:	9316      	str	r3, [sp, #88]	; 0x58
9001e6be:	9b06      	ldr	r3, [sp, #24]
9001e6c0:	7859      	ldrb	r1, [r3, #1]
9001e6c2:	789b      	ldrb	r3, [r3, #2]
9001e6c4:	021b      	lsls	r3, r3, #8
9001e6c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001e6ca:	9906      	ldr	r1, [sp, #24]
9001e6cc:	78c9      	ldrb	r1, [r1, #3]
9001e6ce:	430b      	orrs	r3, r1
9001e6d0:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001e6d2:	4419      	add	r1, r3
9001e6d4:	1c4e      	adds	r6, r1, #1
9001e6d6:	7849      	ldrb	r1, [r1, #1]
9001e6d8:	9603      	str	r6, [sp, #12]
9001e6da:	0209      	lsls	r1, r1, #8
9001e6dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001e6de:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001e6e2:	5cf3      	ldrb	r3, [r6, r3]
9001e6e4:	4319      	orrs	r1, r3
9001e6e6:	b28b      	uxth	r3, r1
9001e6e8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001e6ec:	930c      	str	r3, [sp, #48]	; 0x30
9001e6ee:	2300      	movs	r3, #0
9001e6f0:	9307      	str	r3, [sp, #28]
9001e6f2:	469c      	mov	ip, r3
9001e6f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001e6f8:	930e      	str	r3, [sp, #56]	; 0x38
9001e6fa:	2d00      	cmp	r5, #0
9001e6fc:	d07e      	beq.n	9001e7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001e6fe:	42af      	cmp	r7, r5
9001e700:	d26e      	bcs.n	9001e7e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001e702:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e704:	1bed      	subs	r5, r5, r7
9001e706:	9201      	str	r2, [sp, #4]
9001e708:	4283      	cmp	r3, r0
9001e70a:	b2ad      	uxth	r5, r5
9001e70c:	d802      	bhi.n	9001e714 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001e70e:	e073      	b.n	9001e7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001e710:	2b00      	cmp	r3, #0
9001e712:	d15f      	bne.n	9001e7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001e714:	9b03      	ldr	r3, [sp, #12]
9001e716:	f1cb 0207 	rsb	r2, fp, #7
9001e71a:	785b      	ldrb	r3, [r3, #1]
9001e71c:	4093      	lsls	r3, r2
9001e71e:	005b      	lsls	r3, r3, #1
9001e720:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001e724:	9b03      	ldr	r3, [sp, #12]
9001e726:	781b      	ldrb	r3, [r3, #0]
9001e728:	fa43 f30b 	asr.w	r3, r3, fp
9001e72c:	b2db      	uxtb	r3, r3
9001e72e:	4313      	orrs	r3, r2
9001e730:	f10b 0201 	add.w	r2, fp, #1
9001e734:	fa5f fb82 	uxtb.w	fp, r2
9001e738:	9a03      	ldr	r2, [sp, #12]
9001e73a:	b29f      	uxth	r7, r3
9001e73c:	f1bb 0f08 	cmp.w	fp, #8
9001e740:	bf13      	iteet	ne
9001e742:	3201      	addne	r2, #1
9001e744:	3202      	addeq	r2, #2
9001e746:	f04f 0b00 	moveq.w	fp, #0
9001e74a:	9203      	strne	r2, [sp, #12]
9001e74c:	bf08      	it	eq
9001e74e:	9203      	streq	r2, [sp, #12]
9001e750:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001e752:	42ba      	cmp	r2, r7
9001e754:	d309      	bcc.n	9001e76a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001e756:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001e75a:	2301      	movs	r3, #1
9001e75c:	9a05      	ldr	r2, [sp, #20]
9001e75e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001e762:	d30e      	bcc.n	9001e782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001e764:	469a      	mov	sl, r3
9001e766:	2600      	movs	r6, #0
9001e768:	e035      	b.n	9001e7d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001e76a:	9b05      	ldr	r3, [sp, #20]
9001e76c:	429f      	cmp	r7, r3
9001e76e:	d318      	bcc.n	9001e7a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001e770:	eb04 030a 	add.w	r3, r4, sl
9001e774:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001e778:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001e77c:	f10a 0301 	add.w	r3, sl, #1
9001e780:	b29b      	uxth	r3, r3
9001e782:	9a05      	ldr	r2, [sp, #20]
9001e784:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001e788:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e78c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001e78e:	7116      	strb	r6, [r2, #4]
9001e790:	f10a 0601 	add.w	r6, sl, #1
9001e794:	80d1      	strh	r1, [r2, #6]
9001e796:	7156      	strb	r6, [r2, #5]
9001e798:	9a05      	ldr	r2, [sp, #20]
9001e79a:	3201      	adds	r2, #1
9001e79c:	b292      	uxth	r2, r2
9001e79e:	9205      	str	r2, [sp, #20]
9001e7a0:	e7e0      	b.n	9001e764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001e7a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001e7a6:	463a      	mov	r2, r7
9001e7a8:	795b      	ldrb	r3, [r3, #5]
9001e7aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001e7ae:	4426      	add	r6, r4
9001e7b0:	9919      	ldr	r1, [sp, #100]	; 0x64
9001e7b2:	eb01 0c06 	add.w	ip, r1, r6
9001e7b6:	f1bc 0f00 	cmp.w	ip, #0
9001e7ba:	dd07      	ble.n	9001e7cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001e7bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001e7c0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001e7c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001e7c8:	88d2      	ldrh	r2, [r2, #6]
9001e7ca:	e7f1      	b.n	9001e7b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001e7cc:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001e7d0:	b29b      	uxth	r3, r3
9001e7d2:	e7c3      	b.n	9001e75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001e7d4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001e7d6:	970c      	str	r7, [sp, #48]	; 0x30
9001e7d8:	46b4      	mov	ip, r6
9001e7da:	9a01      	ldr	r2, [sp, #4]
9001e7dc:	461f      	mov	r7, r3
9001e7de:	e78c      	b.n	9001e6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001e7e0:	1b7b      	subs	r3, r7, r5
9001e7e2:	eb0c 0605 	add.w	r6, ip, r5
9001e7e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e7ea:	b29b      	uxth	r3, r3
9001e7ec:	b2b6      	uxth	r6, r6
9001e7ee:	9201      	str	r2, [sp, #4]
9001e7f0:	2500      	movs	r5, #0
9001e7f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001e7f4:	4282      	cmp	r2, r0
9001e7f6:	d88b      	bhi.n	9001e710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001e7f8:	9a01      	ldr	r2, [sp, #4]
9001e7fa:	e74b      	b.n	9001e694 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001e7fc:	4297      	cmp	r7, r2
9001e7fe:	d332      	bcc.n	9001e866 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001e800:	1abb      	subs	r3, r7, r2
9001e802:	9208      	str	r2, [sp, #32]
9001e804:	9501      	str	r5, [sp, #4]
9001e806:	b29b      	uxth	r3, r3
9001e808:	9909      	ldr	r1, [sp, #36]	; 0x24
9001e80a:	29ff      	cmp	r1, #255	; 0xff
9001e80c:	9908      	ldr	r1, [sp, #32]
9001e80e:	eb0c 0601 	add.w	r6, ip, r1
9001e812:	d135      	bne.n	9001e880 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001e814:	f1a0 0e02 	sub.w	lr, r0, #2
9001e818:	b2b6      	uxth	r6, r6
9001e81a:	45b4      	cmp	ip, r6
9001e81c:	f040 808c 	bne.w	9001e938 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001e820:	9908      	ldr	r1, [sp, #32]
9001e822:	4297      	cmp	r7, r2
9001e824:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e828:	d3e2      	bcc.n	9001e7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001e82a:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001e82c:	9904      	ldr	r1, [sp, #16]
9001e82e:	8812      	ldrh	r2, [r2, #0]
9001e830:	1a52      	subs	r2, r2, r1
9001e832:	9916      	ldr	r1, [sp, #88]	; 0x58
9001e834:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e838:	9a07      	ldr	r2, [sp, #28]
9001e83a:	3201      	adds	r2, #1
9001e83c:	428a      	cmp	r2, r1
9001e83e:	9207      	str	r2, [sp, #28]
9001e840:	f040 8087 	bne.w	9001e952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001e844:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001e848:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001e84c:	9b04      	ldr	r3, [sp, #16]
9001e84e:	1bed      	subs	r5, r5, r7
9001e850:	b2ad      	uxth	r5, r5
9001e852:	2d00      	cmp	r5, #0
9001e854:	bf08      	it	eq
9001e856:	461a      	moveq	r2, r3
9001e858:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e85a:	bf18      	it	ne
9001e85c:	2200      	movne	r2, #0
9001e85e:	3301      	adds	r3, #1
9001e860:	b292      	uxth	r2, r2
9001e862:	930d      	str	r3, [sp, #52]	; 0x34
9001e864:	e70d      	b.n	9001e682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001e866:	1bd1      	subs	r1, r2, r7
9001e868:	9708      	str	r7, [sp, #32]
9001e86a:	b28b      	uxth	r3, r1
9001e86c:	9301      	str	r3, [sp, #4]
9001e86e:	462b      	mov	r3, r5
9001e870:	e7ca      	b.n	9001e808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001e872:	bf00      	nop
9001e874:	24039acc 	.word	0x24039acc
9001e878:	24039ac6 	.word	0x24039ac6
9001e87c:	fffff7fb 	.word	0xfffff7fb
9001e880:	b2b6      	uxth	r6, r6
9001e882:	900b      	str	r0, [sp, #44]	; 0x2c
9001e884:	45b4      	cmp	ip, r6
9001e886:	d0cb      	beq.n	9001e820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001e888:	f10c 0101 	add.w	r1, ip, #1
9001e88c:	44a4      	add	ip, r4
9001e88e:	9117      	str	r1, [sp, #92]	; 0x5c
9001e890:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001e894:	9911      	ldr	r1, [sp, #68]	; 0x44
9001e896:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e89a:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001e89c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001e8a0:	f8b1 c000 	ldrh.w	ip, [r1]
9001e8a4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e8a6:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001e8aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001e8ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001e8b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001e8b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e8ba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e8be:	fb1e fe01 	smulbb	lr, lr, r1
9001e8c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e8c4:	fa5f fc8c 	uxtb.w	ip, ip
9001e8c8:	fb08 e801 	mla	r8, r8, r1, lr
9001e8cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001e8d0:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e8d2:	00ed      	lsls	r5, r5, #3
9001e8d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e8d8:	fa1f f888 	uxth.w	r8, r8
9001e8dc:	fb19 f901 	smulbb	r9, r9, r1
9001e8e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e8e2:	b2ed      	uxtb	r5, r5
9001e8e4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001e8e8:	990e      	ldr	r1, [sp, #56]	; 0x38
9001e8ea:	fb1c fc01 	smulbb	ip, ip, r1
9001e8ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001e8f0:	fa1f fe8e 	uxth.w	lr, lr
9001e8f4:	fb05 c501 	mla	r5, r5, r1, ip
9001e8f8:	f108 0c01 	add.w	ip, r8, #1
9001e8fc:	f10e 0901 	add.w	r9, lr, #1
9001e900:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001e902:	b2ad      	uxth	r5, r5
9001e904:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001e908:	f105 0c01 	add.w	ip, r5, #1
9001e90c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001e910:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001e914:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001e918:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e91c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e920:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001e924:	ea4c 0808 	orr.w	r8, ip, r8
9001e928:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001e92c:	ea48 0809 	orr.w	r8, r8, r9
9001e930:	f821 8b02 	strh.w	r8, [r1], #2
9001e934:	910b      	str	r1, [sp, #44]	; 0x2c
9001e936:	e7a5      	b.n	9001e884 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001e938:	f10c 0801 	add.w	r8, ip, #1
9001e93c:	44a4      	add	ip, r4
9001e93e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001e940:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001e944:	fa1f fc88 	uxth.w	ip, r8
9001e948:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001e94c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001e950:	e763      	b.n	9001e81a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001e952:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001e956:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001e95a:	1aad      	subs	r5, r5, r2
9001e95c:	b2ad      	uxth	r5, r5
9001e95e:	2d00      	cmp	r5, #0
9001e960:	bf18      	it	ne
9001e962:	2200      	movne	r2, #0
9001e964:	9201      	str	r2, [sp, #4]
9001e966:	e744      	b.n	9001e7f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001e968:	4b03      	ldr	r3, [pc, #12]	; (9001e978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001e96a:	6818      	ldr	r0, [r3, #0]
9001e96c:	6803      	ldr	r3, [r0, #0]
9001e96e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e970:	4798      	blx	r3
9001e972:	b01f      	add	sp, #124	; 0x7c
9001e974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e978:	24039acc 	.word	0x24039acc

9001e97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e980:	b08f      	sub	sp, #60	; 0x3c
9001e982:	461c      	mov	r4, r3
9001e984:	460f      	mov	r7, r1
9001e986:	9203      	str	r2, [sp, #12]
9001e988:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001e98c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001e98e:	9202      	str	r2, [sp, #8]
9001e990:	2a00      	cmp	r2, #0
9001e992:	f000 8128 	beq.w	9001ebe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001e996:	6820      	ldr	r0, [r4, #0]
9001e998:	aa0a      	add	r2, sp, #40	; 0x28
9001e99a:	6861      	ldr	r1, [r4, #4]
9001e99c:	c203      	stmia	r2!, {r0, r1}
9001e99e:	6818      	ldr	r0, [r3, #0]
9001e9a0:	aa0c      	add	r2, sp, #48	; 0x30
9001e9a2:	6859      	ldr	r1, [r3, #4]
9001e9a4:	c203      	stmia	r2!, {r0, r1}
9001e9a6:	a80a      	add	r0, sp, #40	; 0x28
9001e9a8:	f7f9 fa68 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e9ac:	4621      	mov	r1, r4
9001e9ae:	a80c      	add	r0, sp, #48	; 0x30
9001e9b0:	f7f9 faa8 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e9b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001e9b8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001e9bc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001e9c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001e9c4:	bfdb      	ittet	le
9001e9c6:	b2b3      	uxthle	r3, r6
9001e9c8:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001e9cc:	2301      	movgt	r3, #1
9001e9ce:	fb92 f3f3 	sdivle	r3, r2, r3
9001e9d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e9d6:	441d      	add	r5, r3
9001e9d8:	fb92 f1f3 	sdiv	r1, r2, r3
9001e9dc:	fa1f fc81 	uxth.w	ip, r1
9001e9e0:	3d01      	subs	r5, #1
9001e9e2:	fb0c 2413 	mls	r4, ip, r3, r2
9001e9e6:	4661      	mov	r1, ip
9001e9e8:	fb14 f406 	smulbb	r4, r4, r6
9001e9ec:	4404      	add	r4, r0
9001e9ee:	fb95 f5f3 	sdiv	r5, r5, r3
9001e9f2:	b2a4      	uxth	r4, r4
9001e9f4:	b121      	cbz	r1, 9001ea00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001e9f6:	9b03      	ldr	r3, [sp, #12]
9001e9f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e9fc:	ba1b      	rev	r3, r3
9001e9fe:	441f      	add	r7, r3
9001ea00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001ea04:	b2ad      	uxth	r5, r5
9001ea06:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001ea0a:	4418      	add	r0, r3
9001ea0c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001ea10:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ea14:	00ad      	lsls	r5, r5, #2
9001ea16:	441a      	add	r2, r3
9001ea18:	4b74      	ldr	r3, [pc, #464]	; (9001ebec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ea1a:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001ea1e:	6818      	ldr	r0, [r3, #0]
9001ea20:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001ea24:	6803      	ldr	r3, [r0, #0]
9001ea26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ea28:	4798      	blx	r3
9001ea2a:	4a71      	ldr	r2, [pc, #452]	; (9001ebf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001ea2c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001ea30:	2c00      	cmp	r4, #0
9001ea32:	8813      	ldrh	r3, [r2, #0]
9001ea34:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001ea38:	bf0c      	ite	eq
9001ea3a:	46c8      	moveq	r8, r9
9001ea3c:	f04f 0800 	movne.w	r8, #0
9001ea40:	9209      	str	r2, [sp, #36]	; 0x24
9001ea42:	fb03 c101 	mla	r1, r3, r1, ip
9001ea46:	4373      	muls	r3, r6
9001ea48:	fa1f f888 	uxth.w	r8, r8
9001ea4c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ea50:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ea54:	9304      	str	r3, [sp, #16]
9001ea56:	1d2b      	adds	r3, r5, #4
9001ea58:	9305      	str	r3, [sp, #20]
9001ea5a:	2300      	movs	r3, #0
9001ea5c:	9301      	str	r3, [sp, #4]
9001ea5e:	9a04      	ldr	r2, [sp, #16]
9001ea60:	4282      	cmp	r2, r0
9001ea62:	f240 80bb 	bls.w	9001ebdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001ea66:	b95b      	cbnz	r3, 9001ea80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001ea68:	783a      	ldrb	r2, [r7, #0]
9001ea6a:	0993      	lsrs	r3, r2, #6
9001ea6c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ea70:	9201      	str	r2, [sp, #4]
9001ea72:	1e5a      	subs	r2, r3, #1
9001ea74:	2a02      	cmp	r2, #2
9001ea76:	bf8d      	iteet	hi
9001ea78:	787b      	ldrbhi	r3, [r7, #1]
9001ea7a:	3701      	addls	r7, #1
9001ea7c:	b29b      	uxthls	r3, r3
9001ea7e:	3702      	addhi	r7, #2
9001ea80:	b184      	cbz	r4, 9001eaa4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ea82:	429c      	cmp	r4, r3
9001ea84:	bf91      	iteee	ls
9001ea86:	1b1c      	subls	r4, r3, r4
9001ea88:	1ae4      	subhi	r4, r4, r3
9001ea8a:	46c4      	movhi	ip, r8
9001ea8c:	f04f 0a00 	movhi.w	sl, #0
9001ea90:	bf9b      	ittet	ls
9001ea92:	fa1f fa84 	uxthls.w	sl, r4
9001ea96:	2400      	movls	r4, #0
9001ea98:	b2a4      	uxthhi	r4, r4
9001ea9a:	fa1f fc89 	uxthls.w	ip, r9
9001ea9e:	4653      	mov	r3, sl
9001eaa0:	46e0      	mov	r8, ip
9001eaa2:	e7dc      	b.n	9001ea5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001eaa4:	2204      	movs	r2, #4
9001eaa6:	9905      	ldr	r1, [sp, #20]
9001eaa8:	4543      	cmp	r3, r8
9001eaaa:	4615      	mov	r5, r2
9001eaac:	9a01      	ldr	r2, [sp, #4]
9001eaae:	bf24      	itt	cs
9001eab0:	eba3 0a08 	subcs.w	sl, r3, r8
9001eab4:	46c6      	movcs	lr, r8
9001eab6:	fb15 1202 	smlabb	r2, r5, r2, r1
9001eaba:	9903      	ldr	r1, [sp, #12]
9001eabc:	bf3c      	itt	cc
9001eabe:	eba8 0c03 	subcc.w	ip, r8, r3
9001eac2:	469e      	movcc	lr, r3
9001eac4:	588a      	ldr	r2, [r1, r2]
9001eac6:	bf26      	itte	cs
9001eac8:	fa1f fa8a 	uxthcs.w	sl, sl
9001eacc:	46a4      	movcs	ip, r4
9001eace:	fa1f fc8c 	uxthcc.w	ip, ip
9001ead2:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001ead6:	bf38      	it	cc
9001ead8:	46a2      	movcc	sl, r4
9001eada:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001eade:	2900      	cmp	r1, #0
9001eae0:	d066      	beq.n	9001ebb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001eae2:	29ff      	cmp	r1, #255	; 0xff
9001eae4:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001eae8:	d114      	bne.n	9001eb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001eaea:	9d02      	ldr	r5, [sp, #8]
9001eaec:	2dff      	cmp	r5, #255	; 0xff
9001eaee:	d111      	bne.n	9001eb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001eaf0:	0951      	lsrs	r1, r2, #5
9001eaf2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001eaf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001eafa:	4486      	add	lr, r0
9001eafc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001eb00:	f026 0607 	bic.w	r6, r6, #7
9001eb04:	430e      	orrs	r6, r1
9001eb06:	4316      	orrs	r6, r2
9001eb08:	b2b6      	uxth	r6, r6
9001eb0a:	4586      	cmp	lr, r0
9001eb0c:	d051      	beq.n	9001ebb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001eb0e:	f820 6b02 	strh.w	r6, [r0], #2
9001eb12:	e7fa      	b.n	9001eb0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001eb14:	9d02      	ldr	r5, [sp, #8]
9001eb16:	b2f6      	uxtb	r6, r6
9001eb18:	4486      	add	lr, r0
9001eb1a:	4369      	muls	r1, r5
9001eb1c:	1c4d      	adds	r5, r1, #1
9001eb1e:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001eb22:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001eb26:	b2d2      	uxtb	r2, r2
9001eb28:	122d      	asrs	r5, r5, #8
9001eb2a:	ea6f 0b05 	mvn.w	fp, r5
9001eb2e:	b2ad      	uxth	r5, r5
9001eb30:	fb11 f105 	smulbb	r1, r1, r5
9001eb34:	fa5f fb8b 	uxtb.w	fp, fp
9001eb38:	fb16 f605 	smulbb	r6, r6, r5
9001eb3c:	fb12 f205 	smulbb	r2, r2, r5
9001eb40:	b289      	uxth	r1, r1
9001eb42:	b2b6      	uxth	r6, r6
9001eb44:	b292      	uxth	r2, r2
9001eb46:	9106      	str	r1, [sp, #24]
9001eb48:	9607      	str	r6, [sp, #28]
9001eb4a:	9208      	str	r2, [sp, #32]
9001eb4c:	4586      	cmp	lr, r0
9001eb4e:	d030      	beq.n	9001ebb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001eb50:	8802      	ldrh	r2, [r0, #0]
9001eb52:	9906      	ldr	r1, [sp, #24]
9001eb54:	1216      	asrs	r6, r2, #8
9001eb56:	10d5      	asrs	r5, r2, #3
9001eb58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001eb5c:	00d2      	lsls	r2, r2, #3
9001eb5e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001eb62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001eb66:	b2d2      	uxtb	r2, r2
9001eb68:	fb06 160b 	mla	r6, r6, fp, r1
9001eb6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001eb70:	9907      	ldr	r1, [sp, #28]
9001eb72:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001eb76:	b2b6      	uxth	r6, r6
9001eb78:	fb05 150b 	mla	r5, r5, fp, r1
9001eb7c:	9908      	ldr	r1, [sp, #32]
9001eb7e:	fb02 120b 	mla	r2, r2, fp, r1
9001eb82:	1c71      	adds	r1, r6, #1
9001eb84:	b2ad      	uxth	r5, r5
9001eb86:	b292      	uxth	r2, r2
9001eb88:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001eb8c:	1c51      	adds	r1, r2, #1
9001eb8e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001eb92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001eb96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eb9a:	4316      	orrs	r6, r2
9001eb9c:	1c6a      	adds	r2, r5, #1
9001eb9e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001eba2:	096d      	lsrs	r5, r5, #5
9001eba4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001eba8:	432e      	orrs	r6, r5
9001ebaa:	f820 6b02 	strh.w	r6, [r0], #2
9001ebae:	e7cd      	b.n	9001eb4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001ebb0:	4470      	add	r0, lr
9001ebb2:	4543      	cmp	r3, r8
9001ebb4:	f4ff af73 	bcc.w	9001ea9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ebb8:	fa1f fc89 	uxth.w	ip, r9
9001ebbc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001ebc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ebc2:	eba4 040c 	sub.w	r4, r4, ip
9001ebc6:	881b      	ldrh	r3, [r3, #0]
9001ebc8:	b2a4      	uxth	r4, r4
9001ebca:	eba3 0309 	sub.w	r3, r3, r9
9001ebce:	2c00      	cmp	r4, #0
9001ebd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ebd4:	bf18      	it	ne
9001ebd6:	f04f 0c00 	movne.w	ip, #0
9001ebda:	e760      	b.n	9001ea9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001ebdc:	4b03      	ldr	r3, [pc, #12]	; (9001ebec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001ebde:	6818      	ldr	r0, [r3, #0]
9001ebe0:	6803      	ldr	r3, [r0, #0]
9001ebe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ebe4:	4798      	blx	r3
9001ebe6:	b00f      	add	sp, #60	; 0x3c
9001ebe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ebec:	24039acc 	.word	0x24039acc
9001ebf0:	24039ac6 	.word	0x24039ac6

9001ebf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001ebf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebf8:	b093      	sub	sp, #76	; 0x4c
9001ebfa:	461c      	mov	r4, r3
9001ebfc:	9205      	str	r2, [sp, #20]
9001ebfe:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001ec02:	9101      	str	r1, [sp, #4]
9001ec04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ec06:	9202      	str	r2, [sp, #8]
9001ec08:	2a00      	cmp	r2, #0
9001ec0a:	f000 812e 	beq.w	9001ee6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001ec0e:	6820      	ldr	r0, [r4, #0]
9001ec10:	aa0e      	add	r2, sp, #56	; 0x38
9001ec12:	6861      	ldr	r1, [r4, #4]
9001ec14:	c203      	stmia	r2!, {r0, r1}
9001ec16:	6818      	ldr	r0, [r3, #0]
9001ec18:	aa10      	add	r2, sp, #64	; 0x40
9001ec1a:	6859      	ldr	r1, [r3, #4]
9001ec1c:	c203      	stmia	r2!, {r0, r1}
9001ec1e:	a80e      	add	r0, sp, #56	; 0x38
9001ec20:	f7f9 f92c 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ec24:	4621      	mov	r1, r4
9001ec26:	a810      	add	r0, sp, #64	; 0x40
9001ec28:	f7f9 f96c 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ec2c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ec30:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001ec34:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ec38:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001ec3c:	bfdb      	ittet	le
9001ec3e:	b2b3      	uxthle	r3, r6
9001ec40:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ec44:	2301      	movgt	r3, #1
9001ec46:	fb92 f3f3 	sdivle	r3, r2, r3
9001ec4a:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ec4e:	441d      	add	r5, r3
9001ec50:	fb92 f1f3 	sdiv	r1, r2, r3
9001ec54:	fa1f fc81 	uxth.w	ip, r1
9001ec58:	3d01      	subs	r5, #1
9001ec5a:	fb0c 2413 	mls	r4, ip, r3, r2
9001ec5e:	4661      	mov	r1, ip
9001ec60:	fb14 f406 	smulbb	r4, r4, r6
9001ec64:	4404      	add	r4, r0
9001ec66:	fb95 f5f3 	sdiv	r5, r5, r3
9001ec6a:	b2a4      	uxth	r4, r4
9001ec6c:	b131      	cbz	r1, 9001ec7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001ec6e:	9b05      	ldr	r3, [sp, #20]
9001ec70:	9901      	ldr	r1, [sp, #4]
9001ec72:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ec76:	ba1b      	rev	r3, r3
9001ec78:	4419      	add	r1, r3
9001ec7a:	9101      	str	r1, [sp, #4]
9001ec7c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001ec80:	b2ad      	uxth	r5, r5
9001ec82:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001ec86:	4418      	add	r0, r3
9001ec88:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001ec8c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001ec90:	00ad      	lsls	r5, r5, #2
9001ec92:	441a      	add	r2, r3
9001ec94:	4b76      	ldr	r3, [pc, #472]	; (9001ee70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001ec96:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001ec9a:	6818      	ldr	r0, [r3, #0]
9001ec9c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001eca0:	6803      	ldr	r3, [r0, #0]
9001eca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eca4:	4798      	blx	r3
9001eca6:	4973      	ldr	r1, [pc, #460]	; (9001ee74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001eca8:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001ecac:	2c00      	cmp	r4, #0
9001ecae:	880b      	ldrh	r3, [r1, #0]
9001ecb0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001ecb4:	910d      	str	r1, [sp, #52]	; 0x34
9001ecb6:	fb03 c202 	mla	r2, r3, r2, ip
9001ecba:	bf08      	it	eq
9001ecbc:	46dc      	moveq	ip, fp
9001ecbe:	fb03 f306 	mul.w	r3, r3, r6
9001ecc2:	bf18      	it	ne
9001ecc4:	f04f 0c00 	movne.w	ip, #0
9001ecc8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001eccc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ecd0:	fa1f fc8c 	uxth.w	ip, ip
9001ecd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001ecd8:	9106      	str	r1, [sp, #24]
9001ecda:	9308      	str	r3, [sp, #32]
9001ecdc:	1d2b      	adds	r3, r5, #4
9001ecde:	9309      	str	r3, [sp, #36]	; 0x24
9001ece0:	9b02      	ldr	r3, [sp, #8]
9001ece2:	43da      	mvns	r2, r3
9001ece4:	2300      	movs	r3, #0
9001ece6:	b2d2      	uxtb	r2, r2
9001ece8:	9303      	str	r3, [sp, #12]
9001ecea:	9207      	str	r2, [sp, #28]
9001ecec:	9a08      	ldr	r2, [sp, #32]
9001ecee:	4282      	cmp	r2, r0
9001ecf0:	f240 80b6 	bls.w	9001ee60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001ecf4:	b963      	cbnz	r3, 9001ed10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ecf6:	9b01      	ldr	r3, [sp, #4]
9001ecf8:	781a      	ldrb	r2, [r3, #0]
9001ecfa:	0993      	lsrs	r3, r2, #6
9001ecfc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001ed00:	9203      	str	r2, [sp, #12]
9001ed02:	1e5a      	subs	r2, r3, #1
9001ed04:	2a02      	cmp	r2, #2
9001ed06:	d815      	bhi.n	9001ed34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001ed08:	9a01      	ldr	r2, [sp, #4]
9001ed0a:	b29b      	uxth	r3, r3
9001ed0c:	3201      	adds	r2, #1
9001ed0e:	9201      	str	r2, [sp, #4]
9001ed10:	b1b4      	cbz	r4, 9001ed40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001ed12:	429c      	cmp	r4, r3
9001ed14:	bf91      	iteee	ls
9001ed16:	1b1c      	subls	r4, r3, r4
9001ed18:	1ae4      	subhi	r4, r4, r3
9001ed1a:	4666      	movhi	r6, ip
9001ed1c:	f04f 0800 	movhi.w	r8, #0
9001ed20:	bf9b      	ittet	ls
9001ed22:	fa1f f884 	uxthls.w	r8, r4
9001ed26:	2400      	movls	r4, #0
9001ed28:	b2a4      	uxthhi	r4, r4
9001ed2a:	fa1f f68b 	uxthls.w	r6, fp
9001ed2e:	4643      	mov	r3, r8
9001ed30:	46b4      	mov	ip, r6
9001ed32:	e7db      	b.n	9001ecec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001ed34:	9a01      	ldr	r2, [sp, #4]
9001ed36:	9b01      	ldr	r3, [sp, #4]
9001ed38:	3202      	adds	r2, #2
9001ed3a:	785b      	ldrb	r3, [r3, #1]
9001ed3c:	9201      	str	r2, [sp, #4]
9001ed3e:	e7e7      	b.n	9001ed10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001ed40:	2203      	movs	r2, #3
9001ed42:	9909      	ldr	r1, [sp, #36]	; 0x24
9001ed44:	4563      	cmp	r3, ip
9001ed46:	4615      	mov	r5, r2
9001ed48:	9a03      	ldr	r2, [sp, #12]
9001ed4a:	bf2c      	ite	cs
9001ed4c:	eba3 080c 	subcs.w	r8, r3, ip
9001ed50:	ebac 0603 	subcc.w	r6, ip, r3
9001ed54:	fb15 1202 	smlabb	r2, r5, r2, r1
9001ed58:	9905      	ldr	r1, [sp, #20]
9001ed5a:	bf24      	itt	cs
9001ed5c:	fa1f f888 	uxthcs.w	r8, r8
9001ed60:	46e1      	movcs	r9, ip
9001ed62:	eb01 0502 	add.w	r5, r1, r2
9001ed66:	9902      	ldr	r1, [sp, #8]
9001ed68:	bf2f      	iteee	cs
9001ed6a:	4626      	movcs	r6, r4
9001ed6c:	b2b6      	uxthcc	r6, r6
9001ed6e:	4699      	movcc	r9, r3
9001ed70:	46a0      	movcc	r8, r4
9001ed72:	29ff      	cmp	r1, #255	; 0xff
9001ed74:	d04a      	beq.n	9001ee0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001ed76:	9f06      	ldr	r7, [sp, #24]
9001ed78:	46ca      	mov	sl, r9
9001ed7a:	78a9      	ldrb	r1, [r5, #2]
9001ed7c:	9004      	str	r0, [sp, #16]
9001ed7e:	4379      	muls	r1, r7
9001ed80:	910a      	str	r1, [sp, #40]	; 0x28
9001ed82:	7869      	ldrb	r1, [r5, #1]
9001ed84:	4379      	muls	r1, r7
9001ed86:	910b      	str	r1, [sp, #44]	; 0x2c
9001ed88:	9905      	ldr	r1, [sp, #20]
9001ed8a:	5c8a      	ldrb	r2, [r1, r2]
9001ed8c:	437a      	muls	r2, r7
9001ed8e:	920c      	str	r2, [sp, #48]	; 0x30
9001ed90:	f1ba 0f00 	cmp.w	sl, #0
9001ed94:	d03d      	beq.n	9001ee12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001ed96:	9a04      	ldr	r2, [sp, #16]
9001ed98:	f10a 3aff 	add.w	sl, sl, #4294967295
9001ed9c:	9f07      	ldr	r7, [sp, #28]
9001ed9e:	8812      	ldrh	r2, [r2, #0]
9001eda0:	fa1f fa8a 	uxth.w	sl, sl
9001eda4:	46be      	mov	lr, r7
9001eda6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001eda8:	1215      	asrs	r5, r2, #8
9001edaa:	10d1      	asrs	r1, r2, #3
9001edac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001edb0:	00d2      	lsls	r2, r2, #3
9001edb2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001edb6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001edba:	b2d2      	uxtb	r2, r2
9001edbc:	fb05 750e 	mla	r5, r5, lr, r7
9001edc0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001edc4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001edc6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001edca:	b2ad      	uxth	r5, r5
9001edcc:	fb01 710e 	mla	r1, r1, lr, r7
9001edd0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001edd2:	fb02 720e 	mla	r2, r2, lr, r7
9001edd6:	f105 0e01 	add.w	lr, r5, #1
9001edda:	b289      	uxth	r1, r1
9001eddc:	b292      	uxth	r2, r2
9001edde:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ede2:	f102 0e01 	add.w	lr, r2, #1
9001ede6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001edea:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001edee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001edf2:	4315      	orrs	r5, r2
9001edf4:	1c4a      	adds	r2, r1, #1
9001edf6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001edfa:	9a04      	ldr	r2, [sp, #16]
9001edfc:	0949      	lsrs	r1, r1, #5
9001edfe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ee02:	430d      	orrs	r5, r1
9001ee04:	f822 5b02 	strh.w	r5, [r2], #2
9001ee08:	9204      	str	r2, [sp, #16]
9001ee0a:	e7c1      	b.n	9001ed90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001ee0c:	4649      	mov	r1, r9
9001ee0e:	4686      	mov	lr, r0
9001ee10:	b999      	cbnz	r1, 9001ee3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001ee12:	4563      	cmp	r3, ip
9001ee14:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001ee18:	d389      	bcc.n	9001ed2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ee1a:	fa1f f68b 	uxth.w	r6, fp
9001ee1e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001ee22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ee24:	1ba4      	subs	r4, r4, r6
9001ee26:	881b      	ldrh	r3, [r3, #0]
9001ee28:	b2a4      	uxth	r4, r4
9001ee2a:	eba3 030b 	sub.w	r3, r3, fp
9001ee2e:	2c00      	cmp	r4, #0
9001ee30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee34:	bf18      	it	ne
9001ee36:	2600      	movne	r6, #0
9001ee38:	e779      	b.n	9001ed2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ee3a:	78aa      	ldrb	r2, [r5, #2]
9001ee3c:	3901      	subs	r1, #1
9001ee3e:	4f0e      	ldr	r7, [pc, #56]	; (9001ee78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001ee40:	b289      	uxth	r1, r1
9001ee42:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001ee46:	786a      	ldrb	r2, [r5, #1]
9001ee48:	00d2      	lsls	r2, r2, #3
9001ee4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ee4e:	ea4a 0202 	orr.w	r2, sl, r2
9001ee52:	f895 a000 	ldrb.w	sl, [r5]
9001ee56:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001ee5a:	f82e 2b02 	strh.w	r2, [lr], #2
9001ee5e:	e7d7      	b.n	9001ee10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001ee60:	4b03      	ldr	r3, [pc, #12]	; (9001ee70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001ee62:	6818      	ldr	r0, [r3, #0]
9001ee64:	6803      	ldr	r3, [r0, #0]
9001ee66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ee68:	4798      	blx	r3
9001ee6a:	b013      	add	sp, #76	; 0x4c
9001ee6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ee70:	24039acc 	.word	0x24039acc
9001ee74:	24039ac6 	.word	0x24039ac6
9001ee78:	fffff800 	.word	0xfffff800

9001ee7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ee7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee80:	b09d      	sub	sp, #116	; 0x74
9001ee82:	461c      	mov	r4, r3
9001ee84:	4683      	mov	fp, r0
9001ee86:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001ee88:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001ee8c:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001ee90:	920e      	str	r2, [sp, #56]	; 0x38
9001ee92:	2a00      	cmp	r2, #0
9001ee94:	f000 81e4 	beq.w	9001f260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001ee98:	6820      	ldr	r0, [r4, #0]
9001ee9a:	aa18      	add	r2, sp, #96	; 0x60
9001ee9c:	6861      	ldr	r1, [r4, #4]
9001ee9e:	c203      	stmia	r2!, {r0, r1}
9001eea0:	6818      	ldr	r0, [r3, #0]
9001eea2:	aa1a      	add	r2, sp, #104	; 0x68
9001eea4:	6859      	ldr	r1, [r3, #4]
9001eea6:	c203      	stmia	r2!, {r0, r1}
9001eea8:	a818      	add	r0, sp, #96	; 0x60
9001eeaa:	f7f8 ffe7 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001eeae:	4621      	mov	r1, r4
9001eeb0:	a81a      	add	r0, sp, #104	; 0x68
9001eeb2:	f7f9 f827 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001eeb6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001eeba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001eebe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001eec2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001eec6:	bfdb      	ittet	le
9001eec8:	b29a      	uxthle	r2, r3
9001eeca:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001eece:	2201      	movgt	r2, #1
9001eed0:	fb91 f2f2 	sdivle	r2, r1, r2
9001eed4:	9202      	str	r2, [sp, #8]
9001eed6:	9802      	ldr	r0, [sp, #8]
9001eed8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001eedc:	9902      	ldr	r1, [sp, #8]
9001eede:	fb92 f0f0 	sdiv	r0, r2, r0
9001eee2:	b280      	uxth	r0, r0
9001eee4:	440c      	add	r4, r1
9001eee6:	900f      	str	r0, [sp, #60]	; 0x3c
9001eee8:	3c01      	subs	r4, #1
9001eeea:	9802      	ldr	r0, [sp, #8]
9001eeec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001eeee:	fb05 2510 	mls	r5, r5, r0, r2
9001eef2:	fb94 f4f1 	sdiv	r4, r4, r1
9001eef6:	fb15 f503 	smulbb	r5, r5, r3
9001eefa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001eefe:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001ef02:	3401      	adds	r4, #1
9001ef04:	440d      	add	r5, r1
9001ef06:	4419      	add	r1, r3
9001ef08:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001ef0c:	b2a4      	uxth	r4, r4
9001ef0e:	441a      	add	r2, r3
9001ef10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001ef14:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001ef18:	00a4      	lsls	r4, r4, #2
9001ef1a:	9306      	str	r3, [sp, #24]
9001ef1c:	b2ad      	uxth	r5, r5
9001ef1e:	4bb3      	ldr	r3, [pc, #716]	; (9001f1ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ef20:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001ef24:	6818      	ldr	r0, [r3, #0]
9001ef26:	6803      	ldr	r3, [r0, #0]
9001ef28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ef2a:	4798      	blx	r3
9001ef2c:	4bb0      	ldr	r3, [pc, #704]	; (9001f1f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ef2e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001ef32:	2d00      	cmp	r5, #0
9001ef34:	881a      	ldrh	r2, [r3, #0]
9001ef36:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001ef3a:	fb02 f606 	mul.w	r6, r2, r6
9001ef3e:	fb02 7101 	mla	r1, r2, r1, r7
9001ef42:	9316      	str	r3, [sp, #88]	; 0x58
9001ef44:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ef48:	4baa      	ldr	r3, [pc, #680]	; (9001f1f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ef4a:	bf18      	it	ne
9001ef4c:	2100      	movne	r1, #0
9001ef4e:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ef52:	eba3 030b 	sub.w	r3, r3, fp
9001ef56:	920a      	str	r2, [sp, #40]	; 0x28
9001ef58:	f104 0204 	add.w	r2, r4, #4
9001ef5c:	9317      	str	r3, [sp, #92]	; 0x5c
9001ef5e:	9213      	str	r2, [sp, #76]	; 0x4c
9001ef60:	9a06      	ldr	r2, [sp, #24]
9001ef62:	bf08      	it	eq
9001ef64:	4611      	moveq	r1, r2
9001ef66:	2200      	movs	r2, #0
9001ef68:	b289      	uxth	r1, r1
9001ef6a:	920d      	str	r2, [sp, #52]	; 0x34
9001ef6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ef6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ef70:	fa12 f383 	uxtah	r3, r2, r3
9001ef74:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ef76:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ef7a:	3304      	adds	r3, #4
9001ef7c:	9308      	str	r3, [sp, #32]
9001ef7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ef80:	4543      	cmp	r3, r8
9001ef82:	f240 8168 	bls.w	9001f256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ef86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001ef8a:	f04f 0e01 	mov.w	lr, #1
9001ef8e:	9a02      	ldr	r2, [sp, #8]
9001ef90:	9808      	ldr	r0, [sp, #32]
9001ef92:	fbb5 f3f3 	udiv	r3, r5, r3
9001ef96:	1ad3      	subs	r3, r2, r3
9001ef98:	7800      	ldrb	r0, [r0, #0]
9001ef9a:	b29b      	uxth	r3, r3
9001ef9c:	9010      	str	r0, [sp, #64]	; 0x40
9001ef9e:	3001      	adds	r0, #1
9001efa0:	9314      	str	r3, [sp, #80]	; 0x50
9001efa2:	9b08      	ldr	r3, [sp, #32]
9001efa4:	9007      	str	r0, [sp, #28]
9001efa6:	785a      	ldrb	r2, [r3, #1]
9001efa8:	789b      	ldrb	r3, [r3, #2]
9001efaa:	021b      	lsls	r3, r3, #8
9001efac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001efb0:	9a08      	ldr	r2, [sp, #32]
9001efb2:	78d2      	ldrb	r2, [r2, #3]
9001efb4:	4313      	orrs	r3, r2
9001efb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001efb8:	441a      	add	r2, r3
9001efba:	1c50      	adds	r0, r2, #1
9001efbc:	7852      	ldrb	r2, [r2, #1]
9001efbe:	9005      	str	r0, [sp, #20]
9001efc0:	0212      	lsls	r2, r2, #8
9001efc2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001efc4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001efc8:	5cc3      	ldrb	r3, [r0, r3]
9001efca:	431a      	orrs	r2, r3
9001efcc:	b293      	uxth	r3, r2
9001efce:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001efd2:	930b      	str	r3, [sp, #44]	; 0x2c
9001efd4:	2300      	movs	r3, #0
9001efd6:	9309      	str	r3, [sp, #36]	; 0x24
9001efd8:	2301      	movs	r3, #1
9001efda:	9301      	str	r3, [sp, #4]
9001efdc:	9304      	str	r3, [sp, #16]
9001efde:	2300      	movs	r3, #0
9001efe0:	9303      	str	r3, [sp, #12]
9001efe2:	2d00      	cmp	r5, #0
9001efe4:	d07d      	beq.n	9001f0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001efe6:	45ae      	cmp	lr, r5
9001efe8:	d26c      	bcs.n	9001f0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001efea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001efec:	eba5 050e 	sub.w	r5, r5, lr
9001eff0:	460c      	mov	r4, r1
9001eff2:	4543      	cmp	r3, r8
9001eff4:	b2ad      	uxth	r5, r5
9001eff6:	d802      	bhi.n	9001effe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001eff8:	e071      	b.n	9001f0de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001effa:	2b00      	cmp	r3, #0
9001effc:	d15d      	bne.n	9001f0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001effe:	9b05      	ldr	r3, [sp, #20]
9001f000:	9a04      	ldr	r2, [sp, #16]
9001f002:	785b      	ldrb	r3, [r3, #1]
9001f004:	f1c2 0207 	rsb	r2, r2, #7
9001f008:	9904      	ldr	r1, [sp, #16]
9001f00a:	4093      	lsls	r3, r2
9001f00c:	005b      	lsls	r3, r3, #1
9001f00e:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f012:	9b05      	ldr	r3, [sp, #20]
9001f014:	781b      	ldrb	r3, [r3, #0]
9001f016:	410b      	asrs	r3, r1
9001f018:	3101      	adds	r1, #1
9001f01a:	b2c9      	uxtb	r1, r1
9001f01c:	b2db      	uxtb	r3, r3
9001f01e:	2908      	cmp	r1, #8
9001f020:	9104      	str	r1, [sp, #16]
9001f022:	9905      	ldr	r1, [sp, #20]
9001f024:	ea43 0302 	orr.w	r3, r3, r2
9001f028:	bf0c      	ite	eq
9001f02a:	3102      	addeq	r1, #2
9001f02c:	3101      	addne	r1, #1
9001f02e:	b29a      	uxth	r2, r3
9001f030:	bf05      	ittet	eq
9001f032:	9105      	streq	r1, [sp, #20]
9001f034:	2100      	moveq	r1, #0
9001f036:	9105      	strne	r1, [sp, #20]
9001f038:	9104      	streq	r1, [sp, #16]
9001f03a:	9910      	ldr	r1, [sp, #64]	; 0x40
9001f03c:	4291      	cmp	r1, r2
9001f03e:	d30a      	bcc.n	9001f056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001f040:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001f044:	2301      	movs	r3, #1
9001f046:	9907      	ldr	r1, [sp, #28]
9001f048:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f04c:	d30f      	bcc.n	9001f06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f04e:	2100      	movs	r1, #0
9001f050:	9301      	str	r3, [sp, #4]
9001f052:	9103      	str	r1, [sp, #12]
9001f054:	e032      	b.n	9001f0bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001f056:	9b07      	ldr	r3, [sp, #28]
9001f058:	429a      	cmp	r2, r3
9001f05a:	d318      	bcc.n	9001f08e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001f05c:	9b01      	ldr	r3, [sp, #4]
9001f05e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001f062:	445b      	add	r3, fp
9001f064:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f068:	9b01      	ldr	r3, [sp, #4]
9001f06a:	3301      	adds	r3, #1
9001f06c:	b29b      	uxth	r3, r3
9001f06e:	9907      	ldr	r1, [sp, #28]
9001f070:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001f074:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f078:	7108      	strb	r0, [r1, #4]
9001f07a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f07c:	80c8      	strh	r0, [r1, #6]
9001f07e:	9801      	ldr	r0, [sp, #4]
9001f080:	3001      	adds	r0, #1
9001f082:	7148      	strb	r0, [r1, #5]
9001f084:	9907      	ldr	r1, [sp, #28]
9001f086:	3101      	adds	r1, #1
9001f088:	b289      	uxth	r1, r1
9001f08a:	9107      	str	r1, [sp, #28]
9001f08c:	e7df      	b.n	9001f04e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001f08e:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001f092:	4611      	mov	r1, r2
9001f094:	795b      	ldrb	r3, [r3, #5]
9001f096:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001f09a:	4458      	add	r0, fp
9001f09c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001f09e:	4406      	add	r6, r0
9001f0a0:	2e00      	cmp	r6, #0
9001f0a2:	dd06      	ble.n	9001f0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001f0a4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001f0a8:	790e      	ldrb	r6, [r1, #4]
9001f0aa:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001f0ae:	88c9      	ldrh	r1, [r1, #6]
9001f0b0:	e7f4      	b.n	9001f09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001f0b2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001f0b6:	b29b      	uxth	r3, r3
9001f0b8:	e7c5      	b.n	9001f046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001f0ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f0bc:	4621      	mov	r1, r4
9001f0be:	920b      	str	r2, [sp, #44]	; 0x2c
9001f0c0:	469e      	mov	lr, r3
9001f0c2:	e78e      	b.n	9001efe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001f0c4:	9a03      	ldr	r2, [sp, #12]
9001f0c6:	ebae 0305 	sub.w	r3, lr, r5
9001f0ca:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f0ce:	442a      	add	r2, r5
9001f0d0:	b29b      	uxth	r3, r3
9001f0d2:	b292      	uxth	r2, r2
9001f0d4:	9203      	str	r2, [sp, #12]
9001f0d6:	2500      	movs	r5, #0
9001f0d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f0da:	4542      	cmp	r2, r8
9001f0dc:	d88d      	bhi.n	9001effa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f0de:	4621      	mov	r1, r4
9001f0e0:	e74d      	b.n	9001ef7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001f0e2:	458e      	cmp	lr, r1
9001f0e4:	f04f 0900 	mov.w	r9, #0
9001f0e8:	bf2b      	itete	cs
9001f0ea:	ebae 0301 	subcs.w	r3, lr, r1
9001f0ee:	eba1 040e 	subcc.w	r4, r1, lr
9001f0f2:	462c      	movcs	r4, r5
9001f0f4:	462b      	movcc	r3, r5
9001f0f6:	bf27      	ittee	cs
9001f0f8:	b29b      	uxthcs	r3, r3
9001f0fa:	910c      	strcs	r1, [sp, #48]	; 0x30
9001f0fc:	b2a4      	uxthcc	r4, r4
9001f0fe:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001f102:	9a03      	ldr	r2, [sp, #12]
9001f104:	980c      	ldr	r0, [sp, #48]	; 0x30
9001f106:	444a      	add	r2, r9
9001f108:	4548      	cmp	r0, r9
9001f10a:	b292      	uxth	r2, r2
9001f10c:	d074      	beq.n	9001f1f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001f10e:	2004      	movs	r0, #4
9001f110:	445a      	add	r2, fp
9001f112:	4605      	mov	r5, r0
9001f114:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001f118:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f11a:	fb15 0202 	smlabb	r2, r5, r2, r0
9001f11e:	9812      	ldr	r0, [sp, #72]	; 0x48
9001f120:	5880      	ldr	r0, [r0, r2]
9001f122:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001f126:	d014      	beq.n	9001f152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f128:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001f12c:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001f130:	d112      	bne.n	9001f158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f132:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f134:	2aff      	cmp	r2, #255	; 0xff
9001f136:	d10f      	bne.n	9001f158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001f138:	0942      	lsrs	r2, r0, #5
9001f13a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001f13e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001f142:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f146:	f025 0507 	bic.w	r5, r5, #7
9001f14a:	4315      	orrs	r5, r2
9001f14c:	4305      	orrs	r5, r0
9001f14e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001f152:	f109 0901 	add.w	r9, r9, #1
9001f156:	e7d4      	b.n	9001f102 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001f158:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001f15c:	b2ed      	uxtb	r5, r5
9001f15e:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001f162:	ea4f 272c 	mov.w	r7, ip, asr #8
9001f166:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001f16a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f16e:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001f172:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001f176:	9215      	str	r2, [sp, #84]	; 0x54
9001f178:	fa5f fc8c 	uxtb.w	ip, ip
9001f17c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001f17e:	b2c0      	uxtb	r0, r0
9001f180:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f184:	fb02 fa0a 	mul.w	sl, r2, sl
9001f188:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001f18c:	f10a 0201 	add.w	r2, sl, #1
9001f190:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001f194:	1212      	asrs	r2, r2, #8
9001f196:	fa1f fa82 	uxth.w	sl, r2
9001f19a:	43d2      	mvns	r2, r2
9001f19c:	fb16 f60a 	smulbb	r6, r6, sl
9001f1a0:	b2d2      	uxtb	r2, r2
9001f1a2:	fb10 f00a 	smulbb	r0, r0, sl
9001f1a6:	fb07 6702 	mla	r7, r7, r2, r6
9001f1aa:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001f1ac:	fb0c 0002 	mla	r0, ip, r2, r0
9001f1b0:	fb15 f50a 	smulbb	r5, r5, sl
9001f1b4:	b2bf      	uxth	r7, r7
9001f1b6:	b280      	uxth	r0, r0
9001f1b8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f1bc:	fb06 5602 	mla	r6, r6, r2, r5
9001f1c0:	1c7a      	adds	r2, r7, #1
9001f1c2:	1c45      	adds	r5, r0, #1
9001f1c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f1c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001f1cc:	b2b6      	uxth	r6, r6
9001f1ce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001f1d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001f1d6:	432f      	orrs	r7, r5
9001f1d8:	1c75      	adds	r5, r6, #1
9001f1da:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001f1de:	096d      	lsrs	r5, r5, #5
9001f1e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f1e4:	432f      	orrs	r7, r5
9001f1e6:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001f1ea:	e7b2      	b.n	9001f152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001f1ec:	24039acc 	.word	0x24039acc
9001f1f0:	24039ac6 	.word	0x24039ac6
9001f1f4:	fffff7fb 	.word	0xfffff7fb
9001f1f8:	9203      	str	r2, [sp, #12]
9001f1fa:	458e      	cmp	lr, r1
9001f1fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f1fe:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f202:	f4ff af68 	bcc.w	9001f0d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001f206:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001f208:	9906      	ldr	r1, [sp, #24]
9001f20a:	8812      	ldrh	r2, [r2, #0]
9001f20c:	1a52      	subs	r2, r2, r1
9001f20e:	9914      	ldr	r1, [sp, #80]	; 0x50
9001f210:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001f214:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f216:	3201      	adds	r2, #1
9001f218:	428a      	cmp	r2, r1
9001f21a:	9209      	str	r2, [sp, #36]	; 0x24
9001f21c:	d111      	bne.n	9001f242 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001f21e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001f222:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001f226:	9b06      	ldr	r3, [sp, #24]
9001f228:	eba5 0509 	sub.w	r5, r5, r9
9001f22c:	b2ad      	uxth	r5, r5
9001f22e:	2d00      	cmp	r5, #0
9001f230:	bf08      	it	eq
9001f232:	4619      	moveq	r1, r3
9001f234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f236:	bf18      	it	ne
9001f238:	2100      	movne	r1, #0
9001f23a:	3301      	adds	r3, #1
9001f23c:	b289      	uxth	r1, r1
9001f23e:	930d      	str	r3, [sp, #52]	; 0x34
9001f240:	e694      	b.n	9001ef6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001f242:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001f246:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001f24a:	1b2d      	subs	r5, r5, r4
9001f24c:	b2ad      	uxth	r5, r5
9001f24e:	2d00      	cmp	r5, #0
9001f250:	bf18      	it	ne
9001f252:	2400      	movne	r4, #0
9001f254:	e740      	b.n	9001f0d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001f256:	4b04      	ldr	r3, [pc, #16]	; (9001f268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001f258:	6818      	ldr	r0, [r3, #0]
9001f25a:	6803      	ldr	r3, [r0, #0]
9001f25c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f25e:	4798      	blx	r3
9001f260:	b01d      	add	sp, #116	; 0x74
9001f262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f266:	bf00      	nop
9001f268:	24039acc 	.word	0x24039acc

9001f26c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001f26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f270:	b09f      	sub	sp, #124	; 0x7c
9001f272:	461d      	mov	r5, r3
9001f274:	4604      	mov	r4, r0
9001f276:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f278:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001f27c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001f280:	920a      	str	r2, [sp, #40]	; 0x28
9001f282:	2a00      	cmp	r2, #0
9001f284:	f000 81fe 	beq.w	9001f684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001f288:	6828      	ldr	r0, [r5, #0]
9001f28a:	aa1a      	add	r2, sp, #104	; 0x68
9001f28c:	6869      	ldr	r1, [r5, #4]
9001f28e:	c203      	stmia	r2!, {r0, r1}
9001f290:	6818      	ldr	r0, [r3, #0]
9001f292:	aa1c      	add	r2, sp, #112	; 0x70
9001f294:	6859      	ldr	r1, [r3, #4]
9001f296:	c203      	stmia	r2!, {r0, r1}
9001f298:	a81a      	add	r0, sp, #104	; 0x68
9001f29a:	f7f8 fdef 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f29e:	4629      	mov	r1, r5
9001f2a0:	a81c      	add	r0, sp, #112	; 0x70
9001f2a2:	f7f8 fe2f 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f2a6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001f2aa:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001f2ae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001f2b2:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001f2b6:	bfdb      	ittet	le
9001f2b8:	b29a      	uxthle	r2, r3
9001f2ba:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001f2be:	2201      	movgt	r2, #1
9001f2c0:	fb91 f2f2 	sdivle	r2, r1, r2
9001f2c4:	9201      	str	r2, [sp, #4]
9001f2c6:	9801      	ldr	r0, [sp, #4]
9001f2c8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001f2cc:	9901      	ldr	r1, [sp, #4]
9001f2ce:	fb92 f0f0 	sdiv	r0, r2, r0
9001f2d2:	b280      	uxth	r0, r0
9001f2d4:	440e      	add	r6, r1
9001f2d6:	9010      	str	r0, [sp, #64]	; 0x40
9001f2d8:	3e01      	subs	r6, #1
9001f2da:	9801      	ldr	r0, [sp, #4]
9001f2dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001f2de:	fb05 2510 	mls	r5, r5, r0, r2
9001f2e2:	fb96 f6f1 	sdiv	r6, r6, r1
9001f2e6:	fb15 f503 	smulbb	r5, r5, r3
9001f2ea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001f2ee:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001f2f2:	3601      	adds	r6, #1
9001f2f4:	440d      	add	r5, r1
9001f2f6:	4419      	add	r1, r3
9001f2f8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001f2fc:	b2b6      	uxth	r6, r6
9001f2fe:	441a      	add	r2, r3
9001f300:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001f304:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001f308:	b2ad      	uxth	r5, r5
9001f30a:	9304      	str	r3, [sp, #16]
9001f30c:	4b96      	ldr	r3, [pc, #600]	; (9001f568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001f30e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001f312:	6818      	ldr	r0, [r3, #0]
9001f314:	6803      	ldr	r3, [r0, #0]
9001f316:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f318:	4798      	blx	r3
9001f31a:	4b94      	ldr	r3, [pc, #592]	; (9001f56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001f31c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001f320:	2d00      	cmp	r5, #0
9001f322:	881a      	ldrh	r2, [r3, #0]
9001f324:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001f328:	fb02 f707 	mul.w	r7, r2, r7
9001f32c:	fb02 c101 	mla	r1, r2, r1, ip
9001f330:	9318      	str	r3, [sp, #96]	; 0x60
9001f332:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001f336:	4b8e      	ldr	r3, [pc, #568]	; (9001f570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001f338:	bf18      	it	ne
9001f33a:	2100      	movne	r1, #0
9001f33c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001f340:	eba3 0304 	sub.w	r3, r3, r4
9001f344:	920b      	str	r2, [sp, #44]	; 0x2c
9001f346:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f348:	9319      	str	r3, [sp, #100]	; 0x64
9001f34a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001f34e:	f106 0204 	add.w	r2, r6, #4
9001f352:	9206      	str	r2, [sp, #24]
9001f354:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f356:	ea6f 0202 	mvn.w	r2, r2
9001f35a:	b2d2      	uxtb	r2, r2
9001f35c:	9215      	str	r2, [sp, #84]	; 0x54
9001f35e:	9a04      	ldr	r2, [sp, #16]
9001f360:	bf08      	it	eq
9001f362:	4611      	moveq	r1, r2
9001f364:	2200      	movs	r2, #0
9001f366:	b289      	uxth	r1, r1
9001f368:	920d      	str	r2, [sp, #52]	; 0x34
9001f36a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001f36c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f36e:	fa12 f383 	uxtah	r3, r2, r3
9001f372:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001f374:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001f378:	3304      	adds	r3, #4
9001f37a:	9307      	str	r3, [sp, #28]
9001f37c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f37e:	455b      	cmp	r3, fp
9001f380:	f240 817b 	bls.w	9001f67a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001f384:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001f388:	f04f 0801 	mov.w	r8, #1
9001f38c:	9a01      	ldr	r2, [sp, #4]
9001f38e:	9807      	ldr	r0, [sp, #28]
9001f390:	46c4      	mov	ip, r8
9001f392:	f8cd 8008 	str.w	r8, [sp, #8]
9001f396:	7800      	ldrb	r0, [r0, #0]
9001f398:	fbb5 f3f3 	udiv	r3, r5, r3
9001f39c:	1ad3      	subs	r3, r2, r3
9001f39e:	9011      	str	r0, [sp, #68]	; 0x44
9001f3a0:	3001      	adds	r0, #1
9001f3a2:	b29b      	uxth	r3, r3
9001f3a4:	9005      	str	r0, [sp, #20]
9001f3a6:	9316      	str	r3, [sp, #88]	; 0x58
9001f3a8:	9b07      	ldr	r3, [sp, #28]
9001f3aa:	785a      	ldrb	r2, [r3, #1]
9001f3ac:	789b      	ldrb	r3, [r3, #2]
9001f3ae:	021b      	lsls	r3, r3, #8
9001f3b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001f3b4:	9a07      	ldr	r2, [sp, #28]
9001f3b6:	78d2      	ldrb	r2, [r2, #3]
9001f3b8:	4313      	orrs	r3, r2
9001f3ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001f3bc:	441a      	add	r2, r3
9001f3be:	1c50      	adds	r0, r2, #1
9001f3c0:	7852      	ldrb	r2, [r2, #1]
9001f3c2:	9003      	str	r0, [sp, #12]
9001f3c4:	0212      	lsls	r2, r2, #8
9001f3c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f3c8:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001f3cc:	5cc3      	ldrb	r3, [r0, r3]
9001f3ce:	431a      	orrs	r2, r3
9001f3d0:	b293      	uxth	r3, r2
9001f3d2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001f3d6:	930c      	str	r3, [sp, #48]	; 0x30
9001f3d8:	2300      	movs	r3, #0
9001f3da:	9308      	str	r3, [sp, #32]
9001f3dc:	461a      	mov	r2, r3
9001f3de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001f3e2:	930e      	str	r3, [sp, #56]	; 0x38
9001f3e4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001f3e8:	930f      	str	r3, [sp, #60]	; 0x3c
9001f3ea:	2d00      	cmp	r5, #0
9001f3ec:	d07d      	beq.n	9001f4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001f3ee:	45ac      	cmp	ip, r5
9001f3f0:	d26d      	bcs.n	9001f4ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001f3f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f3f4:	eba5 050c 	sub.w	r5, r5, ip
9001f3f8:	4608      	mov	r0, r1
9001f3fa:	455b      	cmp	r3, fp
9001f3fc:	b2ad      	uxth	r5, r5
9001f3fe:	d802      	bhi.n	9001f406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001f400:	e071      	b.n	9001f4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001f402:	2b00      	cmp	r3, #0
9001f404:	d15d      	bne.n	9001f4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001f406:	9b03      	ldr	r3, [sp, #12]
9001f408:	9a02      	ldr	r2, [sp, #8]
9001f40a:	785b      	ldrb	r3, [r3, #1]
9001f40c:	f1c2 0207 	rsb	r2, r2, #7
9001f410:	9902      	ldr	r1, [sp, #8]
9001f412:	4093      	lsls	r3, r2
9001f414:	005b      	lsls	r3, r3, #1
9001f416:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001f41a:	9b03      	ldr	r3, [sp, #12]
9001f41c:	781b      	ldrb	r3, [r3, #0]
9001f41e:	410b      	asrs	r3, r1
9001f420:	3101      	adds	r1, #1
9001f422:	b2c9      	uxtb	r1, r1
9001f424:	b2db      	uxtb	r3, r3
9001f426:	2908      	cmp	r1, #8
9001f428:	9102      	str	r1, [sp, #8]
9001f42a:	9903      	ldr	r1, [sp, #12]
9001f42c:	ea43 0302 	orr.w	r3, r3, r2
9001f430:	bf0c      	ite	eq
9001f432:	3102      	addeq	r1, #2
9001f434:	3101      	addne	r1, #1
9001f436:	b29a      	uxth	r2, r3
9001f438:	bf05      	ittet	eq
9001f43a:	9103      	streq	r1, [sp, #12]
9001f43c:	2100      	moveq	r1, #0
9001f43e:	9103      	strne	r1, [sp, #12]
9001f440:	9102      	streq	r1, [sp, #8]
9001f442:	9911      	ldr	r1, [sp, #68]	; 0x44
9001f444:	4291      	cmp	r1, r2
9001f446:	d30a      	bcc.n	9001f45e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001f448:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001f44c:	2301      	movs	r3, #1
9001f44e:	9905      	ldr	r1, [sp, #20]
9001f450:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001f454:	d30f      	bcc.n	9001f476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001f456:	2100      	movs	r1, #0
9001f458:	4698      	mov	r8, r3
9001f45a:	9100      	str	r1, [sp, #0]
9001f45c:	e032      	b.n	9001f4c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001f45e:	9b05      	ldr	r3, [sp, #20]
9001f460:	429a      	cmp	r2, r3
9001f462:	d318      	bcc.n	9001f496 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001f464:	eb04 0308 	add.w	r3, r4, r8
9001f468:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001f46c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001f470:	f108 0301 	add.w	r3, r8, #1
9001f474:	b29b      	uxth	r3, r3
9001f476:	9905      	ldr	r1, [sp, #20]
9001f478:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001f47c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f480:	710e      	strb	r6, [r1, #4]
9001f482:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f484:	80ce      	strh	r6, [r1, #6]
9001f486:	f108 0601 	add.w	r6, r8, #1
9001f48a:	714e      	strb	r6, [r1, #5]
9001f48c:	9905      	ldr	r1, [sp, #20]
9001f48e:	3101      	adds	r1, #1
9001f490:	b289      	uxth	r1, r1
9001f492:	9105      	str	r1, [sp, #20]
9001f494:	e7df      	b.n	9001f456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001f496:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001f49a:	4611      	mov	r1, r2
9001f49c:	795b      	ldrb	r3, [r3, #5]
9001f49e:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001f4a2:	4426      	add	r6, r4
9001f4a4:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001f4a6:	4437      	add	r7, r6
9001f4a8:	2f00      	cmp	r7, #0
9001f4aa:	dd06      	ble.n	9001f4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001f4ac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001f4b0:	790f      	ldrb	r7, [r1, #4]
9001f4b2:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001f4b6:	88c9      	ldrh	r1, [r1, #6]
9001f4b8:	e7f4      	b.n	9001f4a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001f4ba:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001f4be:	b29b      	uxth	r3, r3
9001f4c0:	e7c5      	b.n	9001f44e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001f4c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f4c4:	920c      	str	r2, [sp, #48]	; 0x30
9001f4c6:	4601      	mov	r1, r0
9001f4c8:	9a00      	ldr	r2, [sp, #0]
9001f4ca:	469c      	mov	ip, r3
9001f4cc:	e78d      	b.n	9001f3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001f4ce:	ebac 0305 	sub.w	r3, ip, r5
9001f4d2:	1957      	adds	r7, r2, r5
9001f4d4:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f4d8:	b2ba      	uxth	r2, r7
9001f4da:	b29b      	uxth	r3, r3
9001f4dc:	9200      	str	r2, [sp, #0]
9001f4de:	2500      	movs	r5, #0
9001f4e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001f4e2:	455a      	cmp	r2, fp
9001f4e4:	d88d      	bhi.n	9001f402 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001f4e6:	4601      	mov	r1, r0
9001f4e8:	e748      	b.n	9001f37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001f4ea:	458c      	cmp	ip, r1
9001f4ec:	bf27      	ittee	cs
9001f4ee:	ebac 0301 	subcs.w	r3, ip, r1
9001f4f2:	4628      	movcs	r0, r5
9001f4f4:	eba1 000c 	subcc.w	r0, r1, ip
9001f4f8:	462b      	movcc	r3, r5
9001f4fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001f4fc:	bf27      	ittee	cs
9001f4fe:	b29b      	uxthcs	r3, r3
9001f500:	9109      	strcs	r1, [sp, #36]	; 0x24
9001f502:	b280      	uxthcc	r0, r0
9001f504:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001f508:	2dff      	cmp	r5, #255	; 0xff
9001f50a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001f50c:	eb02 0705 	add.w	r7, r2, r5
9001f510:	b2bd      	uxth	r5, r7
9001f512:	9500      	str	r5, [sp, #0]
9001f514:	d12e      	bne.n	9001f574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001f516:	465e      	mov	r6, fp
9001f518:	9d00      	ldr	r5, [sp, #0]
9001f51a:	42aa      	cmp	r2, r5
9001f51c:	f040 8083 	bne.w	9001f626 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001f520:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f522:	458c      	cmp	ip, r1
9001f524:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f528:	d3d9      	bcc.n	9001f4de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001f52a:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001f52c:	9904      	ldr	r1, [sp, #16]
9001f52e:	8812      	ldrh	r2, [r2, #0]
9001f530:	1a52      	subs	r2, r2, r1
9001f532:	9916      	ldr	r1, [sp, #88]	; 0x58
9001f534:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001f538:	9a08      	ldr	r2, [sp, #32]
9001f53a:	3201      	adds	r2, #1
9001f53c:	428a      	cmp	r2, r1
9001f53e:	9208      	str	r2, [sp, #32]
9001f540:	f040 8091 	bne.w	9001f666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001f544:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001f548:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001f54c:	9b04      	ldr	r3, [sp, #16]
9001f54e:	eba5 050c 	sub.w	r5, r5, ip
9001f552:	b2ad      	uxth	r5, r5
9001f554:	2d00      	cmp	r5, #0
9001f556:	bf08      	it	eq
9001f558:	4619      	moveq	r1, r3
9001f55a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f55c:	bf18      	it	ne
9001f55e:	2100      	movne	r1, #0
9001f560:	3301      	adds	r3, #1
9001f562:	b289      	uxth	r1, r1
9001f564:	930d      	str	r3, [sp, #52]	; 0x34
9001f566:	e700      	b.n	9001f36a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001f568:	24039acc 	.word	0x24039acc
9001f56c:	24039ac6 	.word	0x24039ac6
9001f570:	fffff7fb 	.word	0xfffff7fb
9001f574:	46d9      	mov	r9, fp
9001f576:	9d00      	ldr	r5, [sp, #0]
9001f578:	42aa      	cmp	r2, r5
9001f57a:	d0d1      	beq.n	9001f520 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001f57c:	1c55      	adds	r5, r2, #1
9001f57e:	4422      	add	r2, r4
9001f580:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001f584:	9a06      	ldr	r2, [sp, #24]
9001f586:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001f58a:	9517      	str	r5, [sp, #92]	; 0x5c
9001f58c:	4472      	add	r2, lr
9001f58e:	9212      	str	r2, [sp, #72]	; 0x48
9001f590:	f8b9 2000 	ldrh.w	r2, [r9]
9001f594:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f596:	1216      	asrs	r6, r2, #8
9001f598:	f897 a002 	ldrb.w	sl, [r7, #2]
9001f59c:	10d5      	asrs	r5, r2, #3
9001f59e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f5a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001f5a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001f5a8:	00d2      	lsls	r2, r2, #3
9001f5aa:	fb1a fa07 	smulbb	sl, sl, r7
9001f5ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f5b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f5b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f5b8:	b2d2      	uxtb	r2, r2
9001f5ba:	fb06 a607 	mla	r6, r6, r7, sl
9001f5be:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001f5c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f5c4:	f897 a001 	ldrb.w	sl, [r7, #1]
9001f5c8:	b2b6      	uxth	r6, r6
9001f5ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f5cc:	fb1a fa07 	smulbb	sl, sl, r7
9001f5d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f5d2:	fb05 a507 	mla	r5, r5, r7, sl
9001f5d6:	9f06      	ldr	r7, [sp, #24]
9001f5d8:	f106 0a01 	add.w	sl, r6, #1
9001f5dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f5e0:	b2ad      	uxth	r5, r5
9001f5e2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001f5e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001f5e8:	f105 0a01 	add.w	sl, r5, #1
9001f5ec:	fb1e fe07 	smulbb	lr, lr, r7
9001f5f0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f5f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f5f6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f5fa:	fb02 e207 	mla	r2, r2, r7, lr
9001f5fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f602:	b292      	uxth	r2, r2
9001f604:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f608:	f102 0e01 	add.w	lr, r2, #1
9001f60c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001f610:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f614:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f618:	ea4e 0606 	orr.w	r6, lr, r6
9001f61c:	ea46 060a 	orr.w	r6, r6, sl
9001f620:	f829 6b02 	strh.w	r6, [r9], #2
9001f624:	e7a7      	b.n	9001f576 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001f626:	f102 0e01 	add.w	lr, r2, #1
9001f62a:	4422      	add	r2, r4
9001f62c:	9f06      	ldr	r7, [sp, #24]
9001f62e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001f632:	9a06      	ldr	r2, [sp, #24]
9001f634:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f638:	eb02 0a05 	add.w	sl, r2, r5
9001f63c:	4a13      	ldr	r2, [pc, #76]	; (9001f68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001f63e:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001f642:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001f646:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001f64a:	00d2      	lsls	r2, r2, #3
9001f64c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f650:	ea49 0202 	orr.w	r2, r9, r2
9001f654:	f817 9005 	ldrb.w	r9, [r7, r5]
9001f658:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001f65c:	f826 2b02 	strh.w	r2, [r6], #2
9001f660:	fa1f f28e 	uxth.w	r2, lr
9001f664:	e758      	b.n	9001f518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001f666:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001f66a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001f66e:	1a2d      	subs	r5, r5, r0
9001f670:	b2ad      	uxth	r5, r5
9001f672:	2d00      	cmp	r5, #0
9001f674:	bf18      	it	ne
9001f676:	2000      	movne	r0, #0
9001f678:	e732      	b.n	9001f4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001f67a:	4b05      	ldr	r3, [pc, #20]	; (9001f690 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001f67c:	6818      	ldr	r0, [r3, #0]
9001f67e:	6803      	ldr	r3, [r0, #0]
9001f680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f682:	4798      	blx	r3
9001f684:	b01f      	add	sp, #124	; 0x7c
9001f686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f68a:	bf00      	nop
9001f68c:	fffff800 	.word	0xfffff800
9001f690:	24039acc 	.word	0x24039acc

9001f694 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001f694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f698:	b091      	sub	sp, #68	; 0x44
9001f69a:	469b      	mov	fp, r3
9001f69c:	4616      	mov	r6, r2
9001f69e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001f6a2:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001f6a6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001f6aa:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001f6ae:	4604      	mov	r4, r0
9001f6b0:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001f6b4:	4640      	mov	r0, r8
9001f6b6:	460d      	mov	r5, r1
9001f6b8:	4659      	mov	r1, fp
9001f6ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001f6be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001f6c2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001f6c6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001f6ca:	f7f3 fab9 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
9001f6ce:	4631      	mov	r1, r6
9001f6d0:	4640      	mov	r0, r8
9001f6d2:	f7f3 fab5 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
9001f6d6:	4b74      	ldr	r3, [pc, #464]	; (9001f8a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001f6d8:	8818      	ldrh	r0, [r3, #0]
9001f6da:	4b74      	ldr	r3, [pc, #464]	; (9001f8ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001f6dc:	b202      	sxth	r2, r0
9001f6de:	8819      	ldrh	r1, [r3, #0]
9001f6e0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f6e4:	b20e      	sxth	r6, r1
9001f6e6:	2b00      	cmp	r3, #0
9001f6e8:	da07      	bge.n	9001f6fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001f6ea:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001f6ee:	4463      	add	r3, ip
9001f6f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001f6f4:	2300      	movs	r3, #0
9001f6f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001f6fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001f6fe:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001f702:	1ad2      	subs	r2, r2, r3
9001f704:	4594      	cmp	ip, r2
9001f706:	bfc4      	itt	gt
9001f708:	1ac2      	subgt	r2, r0, r3
9001f70a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001f70e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f712:	2a00      	cmp	r2, #0
9001f714:	da07      	bge.n	9001f726 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001f716:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001f71a:	4462      	add	r2, ip
9001f71c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001f720:	2200      	movs	r2, #0
9001f722:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001f726:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001f72a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f72e:	eba6 060a 	sub.w	r6, r6, sl
9001f732:	42b2      	cmp	r2, r6
9001f734:	bfc4      	itt	gt
9001f736:	eba1 020a 	subgt.w	r2, r1, sl
9001f73a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001f73e:	4a5c      	ldr	r2, [pc, #368]	; (9001f8b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001f740:	7812      	ldrb	r2, [r2, #0]
9001f742:	b9a2      	cbnz	r2, 9001f76e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001f744:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001f748:	4286      	cmp	r6, r0
9001f74a:	4640      	mov	r0, r8
9001f74c:	9303      	str	r3, [sp, #12]
9001f74e:	bf14      	ite	ne
9001f750:	2600      	movne	r6, #0
9001f752:	2601      	moveq	r6, #1
9001f754:	f7f3 fab7 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f758:	9b03      	ldr	r3, [sp, #12]
9001f75a:	b160      	cbz	r0, 9001f776 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001f75c:	2300      	movs	r3, #0
9001f75e:	8023      	strh	r3, [r4, #0]
9001f760:	8063      	strh	r3, [r4, #2]
9001f762:	80a3      	strh	r3, [r4, #4]
9001f764:	4620      	mov	r0, r4
9001f766:	80e3      	strh	r3, [r4, #6]
9001f768:	b011      	add	sp, #68	; 0x44
9001f76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f76e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001f772:	428e      	cmp	r6, r1
9001f774:	e7e9      	b.n	9001f74a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001f776:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001f77a:	a90e      	add	r1, sp, #56	; 0x38
9001f77c:	900e      	str	r0, [sp, #56]	; 0x38
9001f77e:	a80c      	add	r0, sp, #48	; 0x30
9001f780:	9205      	str	r2, [sp, #20]
9001f782:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001f786:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001f78a:	9206      	str	r2, [sp, #24]
9001f78c:	f8bb 2000 	ldrh.w	r2, [fp]
9001f790:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001f794:	1a9b      	subs	r3, r3, r2
9001f796:	b21b      	sxth	r3, r3
9001f798:	9303      	str	r3, [sp, #12]
9001f79a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001f79e:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001f8b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f7a2:	ebaa 0a03 	sub.w	sl, sl, r3
9001f7a6:	fa0f f38a 	sxth.w	r3, sl
9001f7aa:	9304      	str	r3, [sp, #16]
9001f7ac:	9b03      	ldr	r3, [sp, #12]
9001f7ae:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001f7b2:	9b04      	ldr	r3, [sp, #16]
9001f7b4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001f7b8:	9b05      	ldr	r3, [sp, #20]
9001f7ba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001f7be:	9b06      	ldr	r3, [sp, #24]
9001f7c0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001f7c4:	f7f8 fb9e 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f7c8:	4640      	mov	r0, r8
9001f7ca:	f7f8 fb57 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7ce:	a80e      	add	r0, sp, #56	; 0x38
9001f7d0:	f7f8 fb54 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7d4:	4b37      	ldr	r3, [pc, #220]	; (9001f8b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001f7d6:	4628      	mov	r0, r5
9001f7d8:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001f7dc:	881b      	ldrh	r3, [r3, #0]
9001f7de:	9307      	str	r3, [sp, #28]
9001f7e0:	682b      	ldr	r3, [r5, #0]
9001f7e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f7e4:	4798      	blx	r3
9001f7e6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001f7ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001f7ee:	4681      	mov	r9, r0
9001f7f0:	f8db 0000 	ldr.w	r0, [fp]
9001f7f4:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001f7f8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001f7fa:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001f7fe:	6803      	ldr	r3, [r0, #0]
9001f800:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001f802:	4798      	blx	r3
9001f804:	4607      	mov	r7, r0
9001f806:	f8db 0000 	ldr.w	r0, [fp]
9001f80a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001f80e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001f812:	6803      	ldr	r3, [r0, #0]
9001f814:	9109      	str	r1, [sp, #36]	; 0x24
9001f816:	9208      	str	r2, [sp, #32]
9001f818:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f81a:	4798      	blx	r3
9001f81c:	f010 0f01 	tst.w	r0, #1
9001f820:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f824:	d012      	beq.n	9001f84c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001f826:	f8db 0000 	ldr.w	r0, [fp]
9001f82a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001f82e:	6803      	ldr	r3, [r0, #0]
9001f830:	9200      	str	r2, [sp, #0]
9001f832:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001f834:	462b      	mov	r3, r5
9001f836:	e898 0006 	ldmia.w	r8, {r1, r2}
9001f83a:	47b0      	blx	r6
9001f83c:	9b03      	ldr	r3, [sp, #12]
9001f83e:	8023      	strh	r3, [r4, #0]
9001f840:	9b04      	ldr	r3, [sp, #16]
9001f842:	8063      	strh	r3, [r4, #2]
9001f844:	9b05      	ldr	r3, [sp, #20]
9001f846:	80a3      	strh	r3, [r4, #4]
9001f848:	9b06      	ldr	r3, [sp, #24]
9001f84a:	e78b      	b.n	9001f764 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001f84c:	fb09 f202 	mul.w	r2, r9, r2
9001f850:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001f854:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001f858:	440f      	add	r7, r1
9001f85a:	b166      	cbz	r6, 9001f876 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f85c:	9a07      	ldr	r2, [sp, #28]
9001f85e:	4592      	cmp	sl, r2
9001f860:	d109      	bne.n	9001f876 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001f862:	f8db 0000 	ldr.w	r0, [fp]
9001f866:	fb09 f303 	mul.w	r3, r9, r3
9001f86a:	4629      	mov	r1, r5
9001f86c:	6802      	ldr	r2, [r0, #0]
9001f86e:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001f870:	463a      	mov	r2, r7
9001f872:	47b0      	blx	r6
9001f874:	e7e2      	b.n	9001f83c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f876:	fb0a f303 	mul.w	r3, sl, r3
9001f87a:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001f87e:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001f8b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001f882:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001f886:	4545      	cmp	r5, r8
9001f888:	d2d8      	bcs.n	9001f83c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001f88a:	f8db 0000 	ldr.w	r0, [fp]
9001f88e:	4629      	mov	r1, r5
9001f890:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001f894:	4435      	add	r5, r6
9001f896:	6802      	ldr	r2, [r0, #0]
9001f898:	005b      	lsls	r3, r3, #1
9001f89a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001f89e:	463a      	mov	r2, r7
9001f8a0:	47d0      	blx	sl
9001f8a2:	444f      	add	r7, r9
9001f8a4:	e7ef      	b.n	9001f886 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001f8a6:	bf00      	nop
9001f8a8:	24039ac0 	.word	0x24039ac0
9001f8ac:	24039ac2 	.word	0x24039ac2
9001f8b0:	24039ac4 	.word	0x24039ac4
9001f8b4:	24039ac6 	.word	0x24039ac6
9001f8b8:	24039acc 	.word	0x24039acc

9001f8bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001f8bc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001f8be:	4606      	mov	r6, r0
9001f8c0:	b087      	sub	sp, #28
9001f8c2:	460c      	mov	r4, r1
9001f8c4:	4617      	mov	r7, r2
9001f8c6:	461d      	mov	r5, r3
9001f8c8:	b333      	cbz	r3, 9001f918 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f8ca:	4608      	mov	r0, r1
9001f8cc:	f7f3 f9fb 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f8d0:	bb10      	cbnz	r0, 9001f918 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f8d2:	6820      	ldr	r0, [r4, #0]
9001f8d4:	ab04      	add	r3, sp, #16
9001f8d6:	6861      	ldr	r1, [r4, #4]
9001f8d8:	4c1b      	ldr	r4, [pc, #108]	; (9001f948 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001f8da:	c303      	stmia	r3!, {r0, r1}
9001f8dc:	a804      	add	r0, sp, #16
9001f8de:	f7f8 facd 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f8e2:	6820      	ldr	r0, [r4, #0]
9001f8e4:	6803      	ldr	r3, [r0, #0]
9001f8e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f8e8:	4798      	blx	r3
9001f8ea:	2dff      	cmp	r5, #255	; 0xff
9001f8ec:	d016      	beq.n	9001f91c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001f8ee:	f010 0f08 	tst.w	r0, #8
9001f8f2:	6820      	ldr	r0, [r4, #0]
9001f8f4:	d015      	beq.n	9001f922 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001f8f6:	2400      	movs	r4, #0
9001f8f8:	6801      	ldr	r1, [r0, #0]
9001f8fa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001f8fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f902:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001f906:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001f90a:	9401      	str	r4, [sp, #4]
9001f90c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001f910:	9400      	str	r4, [sp, #0]
9001f912:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001f914:	4639      	mov	r1, r7
9001f916:	47a0      	blx	r4
9001f918:	b007      	add	sp, #28
9001f91a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f91c:	f010 0f02 	tst.w	r0, #2
9001f920:	e7e7      	b.n	9001f8f2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001f922:	6803      	ldr	r3, [r0, #0]
9001f924:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f926:	4798      	blx	r3
9001f928:	4b08      	ldr	r3, [pc, #32]	; (9001f94c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001f92a:	4601      	mov	r1, r0
9001f92c:	4630      	mov	r0, r6
9001f92e:	881a      	ldrh	r2, [r3, #0]
9001f930:	6833      	ldr	r3, [r6, #0]
9001f932:	e9cd 7500 	strd	r7, r5, [sp]
9001f936:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001f938:	ab04      	add	r3, sp, #16
9001f93a:	47a8      	blx	r5
9001f93c:	6820      	ldr	r0, [r4, #0]
9001f93e:	6803      	ldr	r3, [r0, #0]
9001f940:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f942:	4798      	blx	r3
9001f944:	e7e8      	b.n	9001f918 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001f946:	bf00      	nop
9001f948:	24039acc 	.word	0x24039acc
9001f94c:	24039ac6 	.word	0x24039ac6

9001f950 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001f950:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f954:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001f958:	4688      	mov	r8, r1
9001f95a:	4614      	mov	r4, r2
9001f95c:	461d      	mov	r5, r3
9001f95e:	9e08      	ldr	r6, [sp, #32]
9001f960:	2f00      	cmp	r7, #0
9001f962:	f000 80ab 	beq.w	9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f966:	4618      	mov	r0, r3
9001f968:	f7f3 f9ad 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f96c:	2800      	cmp	r0, #0
9001f96e:	f040 80a5 	bne.w	9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f972:	f9b5 1000 	ldrsh.w	r1, [r5]
9001f976:	2fff      	cmp	r7, #255	; 0xff
9001f978:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001f97c:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001f980:	fb04 1303 	mla	r3, r4, r3, r1
9001f984:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001f988:	eba4 0200 	sub.w	r2, r4, r0
9001f98c:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001f990:	fb04 f505 	mul.w	r5, r4, r5
9001f994:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001f998:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001f99c:	d04a      	beq.n	9001fa34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001f99e:	b2bc      	uxth	r4, r7
9001f9a0:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001f9a4:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001f9a8:	fa5f f788 	uxtb.w	r7, r8
9001f9ac:	b2f3      	uxtb	r3, r6
9001f9ae:	0040      	lsls	r0, r0, #1
9001f9b0:	fb0e fe04 	mul.w	lr, lr, r4
9001f9b4:	4367      	muls	r7, r4
9001f9b6:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001f9ba:	4363      	muls	r3, r4
9001f9bc:	fa1f fc8c 	uxth.w	ip, ip
9001f9c0:	42a9      	cmp	r1, r5
9001f9c2:	d27b      	bcs.n	9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001f9c4:	eb01 0900 	add.w	r9, r1, r0
9001f9c8:	4549      	cmp	r1, r9
9001f9ca:	d231      	bcs.n	9001fa30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001f9cc:	880a      	ldrh	r2, [r1, #0]
9001f9ce:	1214      	asrs	r4, r2, #8
9001f9d0:	10d6      	asrs	r6, r2, #3
9001f9d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001f9d6:	00d2      	lsls	r2, r2, #3
9001f9d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001f9dc:	b2d2      	uxtb	r2, r2
9001f9de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f9e2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f9e6:	fb14 f40c 	smulbb	r4, r4, ip
9001f9ea:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001f9ee:	fb12 f20c 	smulbb	r2, r2, ip
9001f9f2:	fb16 f60c 	smulbb	r6, r6, ip
9001f9f6:	4474      	add	r4, lr
9001f9f8:	441a      	add	r2, r3
9001f9fa:	b2a4      	uxth	r4, r4
9001f9fc:	443e      	add	r6, r7
9001f9fe:	b292      	uxth	r2, r2
9001fa00:	f104 0a01 	add.w	sl, r4, #1
9001fa04:	b2b6      	uxth	r6, r6
9001fa06:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001fa0a:	f102 0a01 	add.w	sl, r2, #1
9001fa0e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001fa12:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001fa16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fa1a:	4322      	orrs	r2, r4
9001fa1c:	1c74      	adds	r4, r6, #1
9001fa1e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001fa22:	0976      	lsrs	r6, r6, #5
9001fa24:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001fa28:	4332      	orrs	r2, r6
9001fa2a:	f821 2b02 	strh.w	r2, [r1], #2
9001fa2e:	e7cb      	b.n	9001f9c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001fa30:	4441      	add	r1, r8
9001fa32:	e7c5      	b.n	9001f9c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001fa34:	0973      	lsrs	r3, r6, #5
9001fa36:	4f22      	ldr	r7, [pc, #136]	; (9001fac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001fa38:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001fa3c:	ea08 0707 	and.w	r7, r8, r7
9001fa40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fa44:	433b      	orrs	r3, r7
9001fa46:	07e7      	lsls	r7, r4, #31
9001fa48:	ea43 0306 	orr.w	r3, r3, r6
9001fa4c:	b29b      	uxth	r3, r3
9001fa4e:	d50b      	bpl.n	9001fa68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001fa50:	0040      	lsls	r0, r0, #1
9001fa52:	0052      	lsls	r2, r2, #1
9001fa54:	42a9      	cmp	r1, r5
9001fa56:	d231      	bcs.n	9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fa58:	180c      	adds	r4, r1, r0
9001fa5a:	42a1      	cmp	r1, r4
9001fa5c:	d202      	bcs.n	9001fa64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001fa5e:	f821 3b02 	strh.w	r3, [r1], #2
9001fa62:	e7fa      	b.n	9001fa5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001fa64:	4411      	add	r1, r2
9001fa66:	e7f5      	b.n	9001fa54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001fa68:	078e      	lsls	r6, r1, #30
9001fa6a:	d008      	beq.n	9001fa7e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001fa6c:	0066      	lsls	r6, r4, #1
9001fa6e:	460a      	mov	r2, r1
9001fa70:	42aa      	cmp	r2, r5
9001fa72:	d202      	bcs.n	9001fa7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001fa74:	8013      	strh	r3, [r2, #0]
9001fa76:	4432      	add	r2, r6
9001fa78:	e7fa      	b.n	9001fa70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001fa7a:	3102      	adds	r1, #2
9001fa7c:	3801      	subs	r0, #1
9001fa7e:	07c2      	lsls	r2, r0, #31
9001fa80:	d50b      	bpl.n	9001fa9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001fa82:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001fa86:	0066      	lsls	r6, r4, #1
9001fa88:	3a01      	subs	r2, #1
9001fa8a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001fa8e:	42aa      	cmp	r2, r5
9001fa90:	d202      	bcs.n	9001fa98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001fa92:	8013      	strh	r3, [r2, #0]
9001fa94:	4432      	add	r2, r6
9001fa96:	e7fa      	b.n	9001fa8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001fa98:	3801      	subs	r0, #1
9001fa9a:	b178      	cbz	r0, 9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001fa9c:	1040      	asrs	r0, r0, #1
9001fa9e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001faa2:	0080      	lsls	r0, r0, #2
9001faa4:	0064      	lsls	r4, r4, #1
9001faa6:	42a9      	cmp	r1, r5
9001faa8:	d208      	bcs.n	9001fabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001faaa:	180e      	adds	r6, r1, r0
9001faac:	460a      	mov	r2, r1
9001faae:	42b2      	cmp	r2, r6
9001fab0:	d202      	bcs.n	9001fab8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001fab2:	f842 3b04 	str.w	r3, [r2], #4
9001fab6:	e7fa      	b.n	9001faae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001fab8:	4421      	add	r1, r4
9001faba:	e7f4      	b.n	9001faa6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001fabc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fac0:	00fff800 	.word	0x00fff800

9001fac4 <_ZN8touchgfx8LCD16bppC1Ev>:
9001fac4:	2200      	movs	r2, #0
9001fac6:	4912      	ldr	r1, [pc, #72]	; (9001fb10 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001fac8:	6042      	str	r2, [r0, #4]
9001faca:	6001      	str	r1, [r0, #0]
9001facc:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001fad0:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001fad4:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001fad8:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001fadc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001fae0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001fae4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001fae8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001faec:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001faf0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001faf4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001faf8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001fafc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001fb00:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001fb04:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001fb08:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001fb0c:	4770      	bx	lr
9001fb0e:	bf00      	nop
9001fb10:	9002df80 	.word	0x9002df80

9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001fb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fb18:	b08d      	sub	sp, #52	; 0x34
9001fb1a:	460d      	mov	r5, r1
9001fb1c:	4604      	mov	r4, r0
9001fb1e:	4699      	mov	r9, r3
9001fb20:	6808      	ldr	r0, [r1, #0]
9001fb22:	ab08      	add	r3, sp, #32
9001fb24:	6849      	ldr	r1, [r1, #4]
9001fb26:	c303      	stmia	r3!, {r0, r1}
9001fb28:	6810      	ldr	r0, [r2, #0]
9001fb2a:	ab0a      	add	r3, sp, #40	; 0x28
9001fb2c:	6851      	ldr	r1, [r2, #4]
9001fb2e:	c303      	stmia	r3!, {r0, r1}
9001fb30:	a808      	add	r0, sp, #32
9001fb32:	f7f8 f9a3 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fb36:	4629      	mov	r1, r5
9001fb38:	a80a      	add	r0, sp, #40	; 0x28
9001fb3a:	4d67      	ldr	r5, [pc, #412]	; (9001fcd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fb3c:	f7f8 f9e2 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fb40:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001fb44:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001fb48:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001fb4c:	6828      	ldr	r0, [r5, #0]
9001fb4e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fb52:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001fb56:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001fb5a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fb5e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001fb62:	440a      	add	r2, r1
9001fb64:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001fb68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001fb6c:	4413      	add	r3, r2
9001fb6e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001fb72:	6803      	ldr	r3, [r0, #0]
9001fb74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fb76:	4798      	blx	r3
9001fb78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fb7c:	d119      	bne.n	9001fbb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001fb7e:	f010 0f20 	tst.w	r0, #32
9001fb82:	6828      	ldr	r0, [r5, #0]
9001fb84:	d018      	beq.n	9001fbb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001fb86:	2500      	movs	r5, #0
9001fb88:	6801      	ldr	r1, [r0, #0]
9001fb8a:	b2b6      	uxth	r6, r6
9001fb8c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001fb90:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001fb94:	9601      	str	r6, [sp, #4]
9001fb96:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001fb9a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001fb9e:	9502      	str	r5, [sp, #8]
9001fba0:	fa1f f588 	uxth.w	r5, r8
9001fba4:	9500      	str	r5, [sp, #0]
9001fba6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001fba8:	4621      	mov	r1, r4
9001fbaa:	47a8      	blx	r5
9001fbac:	b00d      	add	sp, #52	; 0x34
9001fbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fbb2:	f010 0f40 	tst.w	r0, #64	; 0x40
9001fbb6:	e7e4      	b.n	9001fb82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001fbb8:	6803      	ldr	r3, [r0, #0]
9001fbba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fbbc:	4798      	blx	r3
9001fbbe:	4947      	ldr	r1, [pc, #284]	; (9001fcdc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001fbc0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001fbc4:	880b      	ldrh	r3, [r1, #0]
9001fbc6:	468a      	mov	sl, r1
9001fbc8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001fbcc:	fb03 5202 	mla	r2, r3, r2, r5
9001fbd0:	4373      	muls	r3, r6
9001fbd2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fbd6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fbda:	9307      	str	r3, [sp, #28]
9001fbdc:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fbe0:	9306      	str	r3, [sp, #24]
9001fbe2:	9b07      	ldr	r3, [sp, #28]
9001fbe4:	4298      	cmp	r0, r3
9001fbe6:	d270      	bcs.n	9001fcca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001fbe8:	9b06      	ldr	r3, [sp, #24]
9001fbea:	4621      	mov	r1, r4
9001fbec:	eb00 0b03 	add.w	fp, r0, r3
9001fbf0:	4558      	cmp	r0, fp
9001fbf2:	d25d      	bcs.n	9001fcb0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001fbf4:	f851 4b04 	ldr.w	r4, [r1], #4
9001fbf8:	0e23      	lsrs	r3, r4, #24
9001fbfa:	d014      	beq.n	9001fc26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fbfc:	2bff      	cmp	r3, #255	; 0xff
9001fbfe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001fc02:	d112      	bne.n	9001fc2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fc04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001fc08:	d10f      	bne.n	9001fc2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001fc0a:	0963      	lsrs	r3, r4, #5
9001fc0c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001fc10:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001fc14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001fc18:	f02c 0c07 	bic.w	ip, ip, #7
9001fc1c:	ea43 0c0c 	orr.w	ip, r3, ip
9001fc20:	ea4c 0404 	orr.w	r4, ip, r4
9001fc24:	8004      	strh	r4, [r0, #0]
9001fc26:	3002      	adds	r0, #2
9001fc28:	e7e2      	b.n	9001fbf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001fc2a:	fb09 f303 	mul.w	r3, r9, r3
9001fc2e:	8807      	ldrh	r7, [r0, #0]
9001fc30:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001fc34:	fa5f fc8c 	uxtb.w	ip, ip
9001fc38:	1c5a      	adds	r2, r3, #1
9001fc3a:	123e      	asrs	r6, r7, #8
9001fc3c:	10fd      	asrs	r5, r7, #3
9001fc3e:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001fc42:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001fc46:	00ff      	lsls	r7, r7, #3
9001fc48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fc4c:	1212      	asrs	r2, r2, #8
9001fc4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001fc52:	b293      	uxth	r3, r2
9001fc54:	43d2      	mvns	r2, r2
9001fc56:	b2ff      	uxtb	r7, r7
9001fc58:	fb1e fe03 	smulbb	lr, lr, r3
9001fc5c:	b2d2      	uxtb	r2, r2
9001fc5e:	fb1c fc03 	smulbb	ip, ip, r3
9001fc62:	b2e4      	uxtb	r4, r4
9001fc64:	fb06 e602 	mla	r6, r6, r2, lr
9001fc68:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fc6c:	fb14 f403 	smulbb	r4, r4, r3
9001fc70:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001fc74:	b2b6      	uxth	r6, r6
9001fc76:	fb05 c502 	mla	r5, r5, r2, ip
9001fc7a:	fb07 4702 	mla	r7, r7, r2, r4
9001fc7e:	f106 0e01 	add.w	lr, r6, #1
9001fc82:	b2ad      	uxth	r5, r5
9001fc84:	b2bf      	uxth	r7, r7
9001fc86:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001fc8a:	f105 0c01 	add.w	ip, r5, #1
9001fc8e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001fc92:	1c7e      	adds	r6, r7, #1
9001fc94:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fc98:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001fc9c:	096d      	lsrs	r5, r5, #5
9001fc9e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001fca2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001fca6:	ea46 060e 	orr.w	r6, r6, lr
9001fcaa:	432e      	orrs	r6, r5
9001fcac:	8006      	strh	r6, [r0, #0]
9001fcae:	e7ba      	b.n	9001fc26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001fcb0:	f8ba 3000 	ldrh.w	r3, [sl]
9001fcb4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001fcb8:	eba3 0308 	sub.w	r3, r3, r8
9001fcbc:	eba4 0408 	sub.w	r4, r4, r8
9001fcc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fcc4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001fcc8:	e78b      	b.n	9001fbe2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001fcca:	4b03      	ldr	r3, [pc, #12]	; (9001fcd8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001fccc:	6818      	ldr	r0, [r3, #0]
9001fcce:	6803      	ldr	r3, [r0, #0]
9001fcd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fcd2:	4798      	blx	r3
9001fcd4:	e76a      	b.n	9001fbac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001fcd6:	bf00      	nop
9001fcd8:	24039acc 	.word	0x24039acc
9001fcdc:	24039ac6 	.word	0x24039ac6

9001fce0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001fce0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001fce4:	b085      	sub	sp, #20
9001fce6:	6810      	ldr	r0, [r2, #0]
9001fce8:	460c      	mov	r4, r1
9001fcea:	6851      	ldr	r1, [r2, #4]
9001fcec:	466d      	mov	r5, sp
9001fcee:	4616      	mov	r6, r2
9001fcf0:	c503      	stmia	r5!, {r0, r1}
9001fcf2:	6818      	ldr	r0, [r3, #0]
9001fcf4:	6859      	ldr	r1, [r3, #4]
9001fcf6:	c503      	stmia	r5!, {r0, r1}
9001fcf8:	4668      	mov	r0, sp
9001fcfa:	4d2e      	ldr	r5, [pc, #184]	; (9001fdb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001fcfc:	f7f8 f8be 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fd00:	4631      	mov	r1, r6
9001fd02:	a802      	add	r0, sp, #8
9001fd04:	4e2c      	ldr	r6, [pc, #176]	; (9001fdb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001fd06:	f7f8 f8fd 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fd0a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001fd0e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001fd12:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fd16:	6828      	ldr	r0, [r5, #0]
9001fd18:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fd1c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001fd20:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001fd24:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001fd28:	f8bd 1000 	ldrh.w	r1, [sp]
9001fd2c:	440a      	add	r2, r1
9001fd2e:	f8ad 2008 	strh.w	r2, [sp, #8]
9001fd32:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001fd36:	4413      	add	r3, r2
9001fd38:	f8ad 300a 	strh.w	r3, [sp, #10]
9001fd3c:	6803      	ldr	r3, [r0, #0]
9001fd3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fd40:	4798      	blx	r3
9001fd42:	8833      	ldrh	r3, [r6, #0]
9001fd44:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001fd48:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001fd4c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001fd50:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001fdbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001fd54:	fb03 1202 	mla	r2, r3, r2, r1
9001fd58:	fb08 f303 	mul.w	r3, r8, r3
9001fd5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fd60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fd64:	4298      	cmp	r0, r3
9001fd66:	d21d      	bcs.n	9001fda4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001fd68:	eb00 080c 	add.w	r8, r0, ip
9001fd6c:	4540      	cmp	r0, r8
9001fd6e:	d20f      	bcs.n	9001fd90 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001fd70:	f854 1b04 	ldr.w	r1, [r4], #4
9001fd74:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001fd78:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001fd7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001fd80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001fd84:	ea42 0209 	orr.w	r2, r2, r9
9001fd88:	430a      	orrs	r2, r1
9001fd8a:	f820 2b02 	strh.w	r2, [r0], #2
9001fd8e:	e7ed      	b.n	9001fd6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001fd90:	8832      	ldrh	r2, [r6, #0]
9001fd92:	1bd2      	subs	r2, r2, r7
9001fd94:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fd98:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001fd9c:	1bd2      	subs	r2, r2, r7
9001fd9e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001fda2:	e7df      	b.n	9001fd64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001fda4:	6828      	ldr	r0, [r5, #0]
9001fda6:	6803      	ldr	r3, [r0, #0]
9001fda8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001fdaa:	4798      	blx	r3
9001fdac:	b005      	add	sp, #20
9001fdae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001fdb2:	bf00      	nop
9001fdb4:	24039acc 	.word	0x24039acc
9001fdb8:	24039ac6 	.word	0x24039ac6
9001fdbc:	fffff800 	.word	0xfffff800

9001fdc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001fdc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001fdc4:	b08e      	sub	sp, #56	; 0x38
9001fdc6:	460e      	mov	r6, r1
9001fdc8:	4604      	mov	r4, r0
9001fdca:	461d      	mov	r5, r3
9001fdcc:	6808      	ldr	r0, [r1, #0]
9001fdce:	ab0a      	add	r3, sp, #40	; 0x28
9001fdd0:	6849      	ldr	r1, [r1, #4]
9001fdd2:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001ffa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001fdd6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001ffac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001fdda:	c303      	stmia	r3!, {r0, r1}
9001fddc:	6810      	ldr	r0, [r2, #0]
9001fdde:	ab0c      	add	r3, sp, #48	; 0x30
9001fde0:	6851      	ldr	r1, [r2, #4]
9001fde2:	c303      	stmia	r3!, {r0, r1}
9001fde4:	a80a      	add	r0, sp, #40	; 0x28
9001fde6:	f7f8 f849 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fdea:	4631      	mov	r1, r6
9001fdec:	a80c      	add	r0, sp, #48	; 0x30
9001fdee:	f7f8 f889 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fdf2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001fdf6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001fdfa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001fdfe:	f8d8 0000 	ldr.w	r0, [r8]
9001fe02:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fe06:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001fe0a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001fe0e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001fe12:	440c      	add	r4, r1
9001fe14:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001fe18:	440a      	add	r2, r1
9001fe1a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001fe1e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001fe22:	4413      	add	r3, r2
9001fe24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001fe28:	6803      	ldr	r3, [r0, #0]
9001fe2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001fe2c:	4798      	blx	r3
9001fe2e:	2dff      	cmp	r5, #255	; 0xff
9001fe30:	d124      	bne.n	9001fe7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001fe32:	f010 0f01 	tst.w	r0, #1
9001fe36:	f8d8 0000 	ldr.w	r0, [r8]
9001fe3a:	d022      	beq.n	9001fe82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001fe3c:	2100      	movs	r1, #0
9001fe3e:	f04f 0e01 	mov.w	lr, #1
9001fe42:	f8d0 c000 	ldr.w	ip, [r0]
9001fe46:	b2b6      	uxth	r6, r6
9001fe48:	f8cd e018 	str.w	lr, [sp, #24]
9001fe4c:	b2bf      	uxth	r7, r7
9001fe4e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001fe52:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001fe56:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001fe5a:	f8b9 e000 	ldrh.w	lr, [r9]
9001fe5e:	9503      	str	r5, [sp, #12]
9001fe60:	9601      	str	r6, [sp, #4]
9001fe62:	9700      	str	r7, [sp, #0]
9001fe64:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001fe68:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001fe6c:	9102      	str	r1, [sp, #8]
9001fe6e:	4621      	mov	r1, r4
9001fe70:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001fe74:	47a8      	blx	r5
9001fe76:	b00e      	add	sp, #56	; 0x38
9001fe78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001fe7c:	f010 0f04 	tst.w	r0, #4
9001fe80:	e7d9      	b.n	9001fe36 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001fe82:	6803      	ldr	r3, [r0, #0]
9001fe84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001fe86:	4798      	blx	r3
9001fe88:	f8b9 3000 	ldrh.w	r3, [r9]
9001fe8c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001fe90:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001fe94:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001fe98:	435e      	muls	r6, r3
9001fe9a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001fe9e:	2dff      	cmp	r5, #255	; 0xff
9001fea0:	fb03 1202 	mla	r2, r3, r2, r1
9001fea4:	ebac 0c07 	sub.w	ip, ip, r7
9001fea8:	eba3 0707 	sub.w	r7, r3, r7
9001feac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001feb0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001feb4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001feb8:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001febc:	d049      	beq.n	9001ff52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001febe:	43eb      	mvns	r3, r5
9001fec0:	fa1f f985 	uxth.w	r9, r5
9001fec4:	b2db      	uxtb	r3, r3
9001fec6:	42b0      	cmp	r0, r6
9001fec8:	d266      	bcs.n	9001ff98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001feca:	eb00 0a0e 	add.w	sl, r0, lr
9001fece:	4550      	cmp	r0, sl
9001fed0:	4621      	mov	r1, r4
9001fed2:	f104 0403 	add.w	r4, r4, #3
9001fed6:	d25b      	bcs.n	9001ff90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001fed8:	8802      	ldrh	r2, [r0, #0]
9001feda:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001fede:	ea4f 2822 	mov.w	r8, r2, asr #8
9001fee2:	fb11 f109 	smulbb	r1, r1, r9
9001fee6:	10d5      	asrs	r5, r2, #3
9001fee8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001feec:	00d2      	lsls	r2, r2, #3
9001feee:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001fef2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001fef6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001fefa:	fb08 1803 	mla	r8, r8, r3, r1
9001fefe:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001ff02:	b2d2      	uxtb	r2, r2
9001ff04:	fb11 f109 	smulbb	r1, r1, r9
9001ff08:	fa1f f888 	uxth.w	r8, r8
9001ff0c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ff10:	fb05 1503 	mla	r5, r5, r3, r1
9001ff14:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001ff18:	fb11 f109 	smulbb	r1, r1, r9
9001ff1c:	b2ad      	uxth	r5, r5
9001ff1e:	fb02 1203 	mla	r2, r2, r3, r1
9001ff22:	f108 0101 	add.w	r1, r8, #1
9001ff26:	b292      	uxth	r2, r2
9001ff28:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001ff2c:	1c51      	adds	r1, r2, #1
9001ff2e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001ff32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001ff36:	1c69      	adds	r1, r5, #1
9001ff38:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001ff3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ff40:	096d      	lsrs	r5, r5, #5
9001ff42:	ea42 0208 	orr.w	r2, r2, r8
9001ff46:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ff4a:	432a      	orrs	r2, r5
9001ff4c:	f820 2b02 	strh.w	r2, [r0], #2
9001ff50:	e7bd      	b.n	9001fece <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001ff52:	4a14      	ldr	r2, [pc, #80]	; (9001ffa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001ff54:	42b0      	cmp	r0, r6
9001ff56:	d21f      	bcs.n	9001ff98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001ff58:	eb00 050e 	add.w	r5, r0, lr
9001ff5c:	42a8      	cmp	r0, r5
9001ff5e:	4621      	mov	r1, r4
9001ff60:	f104 0403 	add.w	r4, r4, #3
9001ff64:	d210      	bcs.n	9001ff88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001ff66:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001ff6a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001ff6e:	00db      	lsls	r3, r3, #3
9001ff70:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001ff74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ff78:	430b      	orrs	r3, r1
9001ff7a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001ff7e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001ff82:	f820 3b02 	strh.w	r3, [r0], #2
9001ff86:	e7e9      	b.n	9001ff5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001ff88:	4438      	add	r0, r7
9001ff8a:	eb01 040c 	add.w	r4, r1, ip
9001ff8e:	e7e1      	b.n	9001ff54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001ff90:	4438      	add	r0, r7
9001ff92:	eb01 040c 	add.w	r4, r1, ip
9001ff96:	e796      	b.n	9001fec6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001ff98:	4b03      	ldr	r3, [pc, #12]	; (9001ffa8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001ff9a:	6818      	ldr	r0, [r3, #0]
9001ff9c:	6803      	ldr	r3, [r0, #0]
9001ff9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ffa0:	4798      	blx	r3
9001ffa2:	e768      	b.n	9001fe76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001ffa4:	fffff800 	.word	0xfffff800
9001ffa8:	24039acc 	.word	0x24039acc
9001ffac:	24039ac6 	.word	0x24039ac6

9001ffb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001ffb0:	b4f0      	push	{r4, r5, r6, r7}
9001ffb2:	4616      	mov	r6, r2
9001ffb4:	461c      	mov	r4, r3
9001ffb6:	460d      	mov	r5, r1
9001ffb8:	9a04      	ldr	r2, [sp, #16]
9001ffba:	2e01      	cmp	r6, #1
9001ffbc:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001ffc0:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001ffc4:	d012      	beq.n	9001ffec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001ffc6:	d303      	bcc.n	9001ffd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001ffc8:	2e02      	cmp	r6, #2
9001ffca:	d00a      	beq.n	9001ffe2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001ffcc:	bcf0      	pop	{r4, r5, r6, r7}
9001ffce:	4770      	bx	lr
9001ffd0:	6805      	ldr	r5, [r0, #0]
9001ffd2:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001ffd6:	68ed      	ldr	r5, [r5, #12]
9001ffd8:	4613      	mov	r3, r2
9001ffda:	4622      	mov	r2, r4
9001ffdc:	46ac      	mov	ip, r5
9001ffde:	bcf0      	pop	{r4, r5, r6, r7}
9001ffe0:	4760      	bx	ip
9001ffe2:	4621      	mov	r1, r4
9001ffe4:	4628      	mov	r0, r5
9001ffe6:	bcf0      	pop	{r4, r5, r6, r7}
9001ffe8:	f7ff bd94 	b.w	9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001ffec:	4621      	mov	r1, r4
9001ffee:	4628      	mov	r0, r5
9001fff0:	bcf0      	pop	{r4, r5, r6, r7}
9001fff2:	f7ff bee5 	b.w	9001fdc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001fff8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001fff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fffc:	b093      	sub	sp, #76	; 0x4c
9001fffe:	4681      	mov	r9, r0
90020000:	4688      	mov	r8, r1
90020002:	6810      	ldr	r0, [r2, #0]
90020004:	6851      	ldr	r1, [r2, #4]
90020006:	ac0e      	add	r4, sp, #56	; 0x38
90020008:	4616      	mov	r6, r2
9002000a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9002000e:	4f6b      	ldr	r7, [pc, #428]	; (900201bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90020010:	c403      	stmia	r4!, {r0, r1}
90020012:	6818      	ldr	r0, [r3, #0]
90020014:	ac10      	add	r4, sp, #64	; 0x40
90020016:	6859      	ldr	r1, [r3, #4]
90020018:	c403      	stmia	r4!, {r0, r1}
9002001a:	a80e      	add	r0, sp, #56	; 0x38
9002001c:	f7f7 ff2e 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020020:	4631      	mov	r1, r6
90020022:	a810      	add	r0, sp, #64	; 0x40
90020024:	4e66      	ldr	r6, [pc, #408]	; (900201c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90020026:	f7f7 ff6d 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002002a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9002002e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
90020032:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
90020036:	6830      	ldr	r0, [r6, #0]
90020038:	fb11 2103 	smlabb	r1, r1, r3, r2
9002003c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
90020040:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
90020044:	4489      	add	r9, r1
90020046:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9002004a:	440a      	add	r2, r1
9002004c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
90020050:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
90020054:	4413      	add	r3, r2
90020056:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9002005a:	6803      	ldr	r3, [r0, #0]
9002005c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002005e:	4798      	blx	r3
90020060:	f010 0f80 	tst.w	r0, #128	; 0x80
90020064:	6830      	ldr	r0, [r6, #0]
90020066:	d01d      	beq.n	900200a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90020068:	2200      	movs	r2, #0
9002006a:	6801      	ldr	r1, [r0, #0]
9002006c:	b2a4      	uxth	r4, r4
9002006e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90020072:	b2ad      	uxth	r5, r5
90020074:	e9cd 2208 	strd	r2, r2, [sp, #32]
90020078:	220b      	movs	r2, #11
9002007a:	9207      	str	r2, [sp, #28]
9002007c:	883a      	ldrh	r2, [r7, #0]
9002007e:	9502      	str	r5, [sp, #8]
90020080:	9206      	str	r2, [sp, #24]
90020082:	2201      	movs	r2, #1
90020084:	9401      	str	r4, [sp, #4]
90020086:	e9cd a204 	strd	sl, r2, [sp, #16]
9002008a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9002008e:	9203      	str	r2, [sp, #12]
90020090:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
90020094:	9200      	str	r2, [sp, #0]
90020096:	4642      	mov	r2, r8
90020098:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9002009a:	4649      	mov	r1, r9
9002009c:	47a0      	blx	r4
9002009e:	b013      	add	sp, #76	; 0x4c
900200a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900200a4:	6803      	ldr	r3, [r0, #0]
900200a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900200a8:	4798      	blx	r3
900200aa:	883b      	ldrh	r3, [r7, #0]
900200ac:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
900200b0:	f04f 0e04 	mov.w	lr, #4
900200b4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
900200b8:	435d      	muls	r5, r3
900200ba:	fb03 1202 	mla	r2, r3, r2, r1
900200be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900200c2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
900200c6:	920c      	str	r2, [sp, #48]	; 0x30
900200c8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
900200cc:	1b12      	subs	r2, r2, r4
900200ce:	920d      	str	r2, [sp, #52]	; 0x34
900200d0:	0062      	lsls	r2, r4, #1
900200d2:	1b1c      	subs	r4, r3, r4
900200d4:	920a      	str	r2, [sp, #40]	; 0x28
900200d6:	0063      	lsls	r3, r4, #1
900200d8:	930b      	str	r3, [sp, #44]	; 0x2c
900200da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900200dc:	4298      	cmp	r0, r3
900200de:	d266      	bcs.n	900201ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
900200e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900200e2:	eb00 0b03 	add.w	fp, r0, r3
900200e6:	4558      	cmp	r0, fp
900200e8:	d25c      	bcs.n	900201a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
900200ea:	f819 3b01 	ldrb.w	r3, [r9], #1
900200ee:	fb1e e303 	smlabb	r3, lr, r3, lr
900200f2:	f858 2003 	ldr.w	r2, [r8, r3]
900200f6:	0e11      	lsrs	r1, r2, #24
900200f8:	d012      	beq.n	90020120 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900200fa:	29ff      	cmp	r1, #255	; 0xff
900200fc:	ea4f 2712 	mov.w	r7, r2, lsr #8
90020100:	d110      	bne.n	90020124 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020102:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90020106:	d10d      	bne.n	90020124 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90020108:	0953      	lsrs	r3, r2, #5
9002010a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9002010e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020112:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020116:	f027 0707 	bic.w	r7, r7, #7
9002011a:	431f      	orrs	r7, r3
9002011c:	433a      	orrs	r2, r7
9002011e:	8002      	strh	r2, [r0, #0]
90020120:	3002      	adds	r0, #2
90020122:	e7e0      	b.n	900200e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90020124:	fb0a f101 	mul.w	r1, sl, r1
90020128:	8806      	ldrh	r6, [r0, #0]
9002012a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9002012e:	b2d2      	uxtb	r2, r2
90020130:	1c4b      	adds	r3, r1, #1
90020132:	1235      	asrs	r5, r6, #8
90020134:	10f4      	asrs	r4, r6, #3
90020136:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002013a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002013e:	00f6      	lsls	r6, r6, #3
90020140:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90020144:	121b      	asrs	r3, r3, #8
90020146:	b2f6      	uxtb	r6, r6
90020148:	b299      	uxth	r1, r3
9002014a:	43db      	mvns	r3, r3
9002014c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020150:	fb1c fc01 	smulbb	ip, ip, r1
90020154:	b2db      	uxtb	r3, r3
90020156:	fb12 f201 	smulbb	r2, r2, r1
9002015a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9002015e:	fb05 c503 	mla	r5, r5, r3, ip
90020162:	b2ff      	uxtb	r7, r7
90020164:	fb06 2203 	mla	r2, r6, r3, r2
90020168:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9002016c:	fb17 f701 	smulbb	r7, r7, r1
90020170:	b2ad      	uxth	r5, r5
90020172:	b292      	uxth	r2, r2
90020174:	fb04 7403 	mla	r4, r4, r3, r7
90020178:	f105 0c01 	add.w	ip, r5, #1
9002017c:	1c57      	adds	r7, r2, #1
9002017e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90020182:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90020186:	b2a4      	uxth	r4, r4
90020188:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002018c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020190:	433d      	orrs	r5, r7
90020192:	1c67      	adds	r7, r4, #1
90020194:	eb07 2414 	add.w	r4, r7, r4, lsr #8
90020198:	0964      	lsrs	r4, r4, #5
9002019a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002019e:	4325      	orrs	r5, r4
900201a0:	8005      	strh	r5, [r0, #0]
900201a2:	e7bd      	b.n	90020120 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900201a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900201a6:	4418      	add	r0, r3
900201a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900201aa:	4499      	add	r9, r3
900201ac:	e795      	b.n	900200da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900201ae:	4b04      	ldr	r3, [pc, #16]	; (900201c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900201b0:	6818      	ldr	r0, [r3, #0]
900201b2:	6803      	ldr	r3, [r0, #0]
900201b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900201b6:	4798      	blx	r3
900201b8:	e771      	b.n	9002009e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900201ba:	bf00      	nop
900201bc:	24039ac6 	.word	0x24039ac6
900201c0:	24039acc 	.word	0x24039acc

900201c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900201c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900201c8:	b087      	sub	sp, #28
900201ca:	4680      	mov	r8, r0
900201cc:	460d      	mov	r5, r1
900201ce:	4614      	mov	r4, r2
900201d0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
900201d4:	2e00      	cmp	r6, #0
900201d6:	f000 80b9 	beq.w	9002034c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900201da:	6810      	ldr	r0, [r2, #0]
900201dc:	af02      	add	r7, sp, #8
900201de:	6851      	ldr	r1, [r2, #4]
900201e0:	c703      	stmia	r7!, {r0, r1}
900201e2:	6818      	ldr	r0, [r3, #0]
900201e4:	af04      	add	r7, sp, #16
900201e6:	6859      	ldr	r1, [r3, #4]
900201e8:	c703      	stmia	r7!, {r0, r1}
900201ea:	a802      	add	r0, sp, #8
900201ec:	f7f7 fe46 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900201f0:	4621      	mov	r1, r4
900201f2:	a804      	add	r0, sp, #16
900201f4:	f7f7 fe86 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900201f8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900201fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020200:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90020204:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
90020208:	fb14 2103 	smlabb	r1, r4, r3, r2
9002020c:	eb08 0401 	add.w	r4, r8, r1
90020210:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020214:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90020218:	440a      	add	r2, r1
9002021a:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9002021e:	f8ad 2010 	strh.w	r2, [sp, #16]
90020222:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020226:	4413      	add	r3, r2
90020228:	f8ad 3012 	strh.w	r3, [sp, #18]
9002022c:	4b49      	ldr	r3, [pc, #292]	; (90020354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9002022e:	6818      	ldr	r0, [r3, #0]
90020230:	6803      	ldr	r3, [r0, #0]
90020232:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020234:	4798      	blx	r3
90020236:	4b48      	ldr	r3, [pc, #288]	; (90020358 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
90020238:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9002023c:	2eff      	cmp	r6, #255	; 0xff
9002023e:	881a      	ldrh	r2, [r3, #0]
90020240:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90020244:	fb02 c101 	mla	r1, r2, r1, ip
90020248:	fb02 f207 	mul.w	r2, r2, r7
9002024c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020250:	f105 0104 	add.w	r1, r5, #4
90020254:	461d      	mov	r5, r3
90020256:	d05a      	beq.n	9002030e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
90020258:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9002025c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020260:	b2b6      	uxth	r6, r6
90020262:	9301      	str	r3, [sp, #4]
90020264:	fa1f fe8e 	uxth.w	lr, lr
90020268:	4282      	cmp	r2, r0
9002026a:	d96a      	bls.n	90020342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002026c:	eb00 0b0a 	add.w	fp, r0, sl
90020270:	4583      	cmp	fp, r0
90020272:	d940      	bls.n	900202f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90020274:	8805      	ldrh	r5, [r0, #0]
90020276:	f814 3b01 	ldrb.w	r3, [r4], #1
9002027a:	122f      	asrs	r7, r5, #8
9002027c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020280:	ea4f 09e5 	mov.w	r9, r5, asr #3
90020284:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90020288:	00ed      	lsls	r5, r5, #3
9002028a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002028e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90020292:	fb17 f70e 	smulbb	r7, r7, lr
90020296:	b2ed      	uxtb	r5, r5
90020298:	fb19 f90e 	smulbb	r9, r9, lr
9002029c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900202a0:	fb15 f50e 	smulbb	r5, r5, lr
900202a4:	fb0c 7c06 	mla	ip, ip, r6, r7
900202a8:	10df      	asrs	r7, r3, #3
900202aa:	00db      	lsls	r3, r3, #3
900202ac:	fa1f fc8c 	uxth.w	ip, ip
900202b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900202b4:	b2db      	uxtb	r3, r3
900202b6:	fb07 9706 	mla	r7, r7, r6, r9
900202ba:	f10c 0901 	add.w	r9, ip, #1
900202be:	fb03 5306 	mla	r3, r3, r6, r5
900202c2:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900202c6:	b29b      	uxth	r3, r3
900202c8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
900202cc:	b2bf      	uxth	r7, r7
900202ce:	f103 0c01 	add.w	ip, r3, #1
900202d2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900202d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900202da:	ea4c 0c09 	orr.w	ip, ip, r9
900202de:	f107 0901 	add.w	r9, r7, #1
900202e2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900202e6:	097f      	lsrs	r7, r7, #5
900202e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900202ec:	ea4c 0c07 	orr.w	ip, ip, r7
900202f0:	f820 cb02 	strh.w	ip, [r0], #2
900202f4:	e7bc      	b.n	90020270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
900202f6:	9b01      	ldr	r3, [sp, #4]
900202f8:	881b      	ldrh	r3, [r3, #0]
900202fa:	eba3 0308 	sub.w	r3, r3, r8
900202fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020302:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90020306:	eba3 0308 	sub.w	r3, r3, r8
9002030a:	441c      	add	r4, r3
9002030c:	e7ac      	b.n	90020268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9002030e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020312:	4282      	cmp	r2, r0
90020314:	d915      	bls.n	90020342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90020316:	eb00 060a 	add.w	r6, r0, sl
9002031a:	4286      	cmp	r6, r0
9002031c:	d906      	bls.n	9002032c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9002031e:	f814 3b01 	ldrb.w	r3, [r4], #1
90020322:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90020326:	f820 3b02 	strh.w	r3, [r0], #2
9002032a:	e7f6      	b.n	9002031a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9002032c:	882b      	ldrh	r3, [r5, #0]
9002032e:	eba3 0308 	sub.w	r3, r3, r8
90020332:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020336:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002033a:	eba3 0308 	sub.w	r3, r3, r8
9002033e:	441c      	add	r4, r3
90020340:	e7e7      	b.n	90020312 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90020342:	4b04      	ldr	r3, [pc, #16]	; (90020354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90020344:	6818      	ldr	r0, [r3, #0]
90020346:	6803      	ldr	r3, [r0, #0]
90020348:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002034a:	4798      	blx	r3
9002034c:	b007      	add	sp, #28
9002034e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020352:	bf00      	nop
90020354:	24039acc 	.word	0x24039acc
90020358:	24039ac6 	.word	0x24039ac6

9002035c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9002035c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020360:	b091      	sub	sp, #68	; 0x44
90020362:	4680      	mov	r8, r0
90020364:	460f      	mov	r7, r1
90020366:	4614      	mov	r4, r2
90020368:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9002036c:	2d00      	cmp	r5, #0
9002036e:	d051      	beq.n	90020414 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020370:	6810      	ldr	r0, [r2, #0]
90020372:	ae0c      	add	r6, sp, #48	; 0x30
90020374:	6851      	ldr	r1, [r2, #4]
90020376:	f8df 9200 	ldr.w	r9, [pc, #512]	; 90020578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9002037a:	c603      	stmia	r6!, {r0, r1}
9002037c:	6818      	ldr	r0, [r3, #0]
9002037e:	ae0e      	add	r6, sp, #56	; 0x38
90020380:	6859      	ldr	r1, [r3, #4]
90020382:	c603      	stmia	r6!, {r0, r1}
90020384:	a80c      	add	r0, sp, #48	; 0x30
90020386:	f7f7 fd79 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002038a:	4621      	mov	r1, r4
9002038c:	a80e      	add	r0, sp, #56	; 0x38
9002038e:	f7f7 fdb9 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020392:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
90020396:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002039a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9002039e:	f8d9 0000 	ldr.w	r0, [r9]
900203a2:	fb11 2103 	smlabb	r1, r1, r3, r2
900203a6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
900203aa:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
900203ae:	eb08 0401 	add.w	r4, r8, r1
900203b2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
900203b6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9002057c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900203ba:	440a      	add	r2, r1
900203bc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
900203c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900203c4:	4413      	add	r3, r2
900203c6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
900203ca:	6803      	ldr	r3, [r0, #0]
900203cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900203ce:	4798      	blx	r3
900203d0:	f010 0f80 	tst.w	r0, #128	; 0x80
900203d4:	f8d9 0000 	ldr.w	r0, [r9]
900203d8:	d01f      	beq.n	9002041a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900203da:	2200      	movs	r2, #0
900203dc:	6801      	ldr	r1, [r0, #0]
900203de:	b2b6      	uxth	r6, r6
900203e0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900203e4:	e9cd 2208 	strd	r2, r2, [sp, #32]
900203e8:	220b      	movs	r2, #11
900203ea:	9207      	str	r2, [sp, #28]
900203ec:	f8b8 2000 	ldrh.w	r2, [r8]
900203f0:	9601      	str	r6, [sp, #4]
900203f2:	9206      	str	r2, [sp, #24]
900203f4:	2201      	movs	r2, #1
900203f6:	e9cd 5204 	strd	r5, r2, [sp, #16]
900203fa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
900203fe:	9203      	str	r2, [sp, #12]
90020400:	fa1f f28a 	uxth.w	r2, sl
90020404:	9202      	str	r2, [sp, #8]
90020406:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9002040a:	9200      	str	r2, [sp, #0]
9002040c:	463a      	mov	r2, r7
9002040e:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
90020410:	4621      	mov	r1, r4
90020412:	47a8      	blx	r5
90020414:	b011      	add	sp, #68	; 0x44
90020416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002041a:	6803      	ldr	r3, [r0, #0]
9002041c:	ea4f 0946 	mov.w	r9, r6, lsl #1
90020420:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020422:	4798      	blx	r3
90020424:	f8b8 2000 	ldrh.w	r2, [r8]
90020428:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9002042c:	2dff      	cmp	r5, #255	; 0xff
9002042e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
90020432:	fb0a fa02 	mul.w	sl, sl, r2
90020436:	fb02 1303 	mla	r3, r2, r3, r1
9002043a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002043e:	d062      	beq.n	90020506 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90020440:	ea6f 0c05 	mvn.w	ip, r5
90020444:	eb00 034a 	add.w	r3, r0, sl, lsl #1
90020448:	b2ad      	uxth	r5, r5
9002044a:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9002044e:	fa5f fc8c 	uxtb.w	ip, ip
90020452:	930a      	str	r3, [sp, #40]	; 0x28
90020454:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020456:	4298      	cmp	r0, r3
90020458:	f080 8085 	bcs.w	90020566 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9002045c:	eb00 0b09 	add.w	fp, r0, r9
90020460:	4558      	cmp	r0, fp
90020462:	d246      	bcs.n	900204f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90020464:	f814 eb01 	ldrb.w	lr, [r4], #1
90020468:	2303      	movs	r3, #3
9002046a:	2204      	movs	r2, #4
9002046c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90020470:	8803      	ldrh	r3, [r0, #0]
90020472:	eb07 0a0e 	add.w	sl, r7, lr
90020476:	1219      	asrs	r1, r3, #8
90020478:	10da      	asrs	r2, r3, #3
9002047a:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002047e:	f89a 8002 	ldrb.w	r8, [sl, #2]
90020482:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020486:	00db      	lsls	r3, r3, #3
90020488:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002048c:	fb18 f805 	smulbb	r8, r8, r5
90020490:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020494:	fb1e fe05 	smulbb	lr, lr, r5
90020498:	b2db      	uxtb	r3, r3
9002049a:	fb01 810c 	mla	r1, r1, ip, r8
9002049e:	f89a 8001 	ldrb.w	r8, [sl, #1]
900204a2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900204a6:	fb18 f805 	smulbb	r8, r8, r5
900204aa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900204ae:	b289      	uxth	r1, r1
900204b0:	fb02 820c 	mla	r2, r2, ip, r8
900204b4:	fb03 e30c 	mla	r3, r3, ip, lr
900204b8:	f101 0801 	add.w	r8, r1, #1
900204bc:	b292      	uxth	r2, r2
900204be:	b29b      	uxth	r3, r3
900204c0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900204c4:	f102 0801 	add.w	r8, r2, #1
900204c8:	f103 0e01 	add.w	lr, r3, #1
900204cc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900204d0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900204d4:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900204d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
900204dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900204e0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900204e4:	ea4e 0101 	orr.w	r1, lr, r1
900204e8:	ea41 0108 	orr.w	r1, r1, r8
900204ec:	f820 1b02 	strh.w	r1, [r0], #2
900204f0:	e7b6      	b.n	90020460 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
900204f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900204f4:	881b      	ldrh	r3, [r3, #0]
900204f6:	1b9b      	subs	r3, r3, r6
900204f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900204fc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020500:	1b9b      	subs	r3, r3, r6
90020502:	441c      	add	r4, r3
90020504:	e7a6      	b.n	90020454 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
90020506:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002050a:	2203      	movs	r2, #3
9002050c:	2504      	movs	r5, #4
9002050e:	4919      	ldr	r1, [pc, #100]	; (90020574 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90020510:	4550      	cmp	r0, sl
90020512:	d228      	bcs.n	90020566 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90020514:	eb00 0c09 	add.w	ip, r0, r9
90020518:	4560      	cmp	r0, ip
9002051a:	4623      	mov	r3, r4
9002051c:	d219      	bcs.n	90020552 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9002051e:	f893 e000 	ldrb.w	lr, [r3]
90020522:	3401      	adds	r4, #1
90020524:	fb12 5e0e 	smlabb	lr, r2, lr, r5
90020528:	eb07 0b0e 	add.w	fp, r7, lr
9002052c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90020530:	f89b 3002 	ldrb.w	r3, [fp, #2]
90020534:	f89b b001 	ldrb.w	fp, [fp, #1]
90020538:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9002053c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90020540:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90020544:	ea43 030b 	orr.w	r3, r3, fp
90020548:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9002054c:	f820 3b02 	strh.w	r3, [r0], #2
90020550:	e7e2      	b.n	90020518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90020552:	f8b8 3000 	ldrh.w	r3, [r8]
90020556:	1b9b      	subs	r3, r3, r6
90020558:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002055c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90020560:	1b9b      	subs	r3, r3, r6
90020562:	441c      	add	r4, r3
90020564:	e7d4      	b.n	90020510 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
90020566:	4b04      	ldr	r3, [pc, #16]	; (90020578 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
90020568:	6818      	ldr	r0, [r3, #0]
9002056a:	6803      	ldr	r3, [r0, #0]
9002056c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002056e:	4798      	blx	r3
90020570:	e750      	b.n	90020414 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90020572:	bf00      	nop
90020574:	fffff800 	.word	0xfffff800
90020578:	24039acc 	.word	0x24039acc
9002057c:	24039ac6 	.word	0x24039ac6

90020580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90020580:	b4f0      	push	{r4, r5, r6, r7}
90020582:	460c      	mov	r4, r1
90020584:	4611      	mov	r1, r2
90020586:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002058a:	461a      	mov	r2, r3
9002058c:	780f      	ldrb	r7, [r1, #0]
9002058e:	9b04      	ldr	r3, [sp, #16]
90020590:	2f01      	cmp	r7, #1
90020592:	784e      	ldrb	r6, [r1, #1]
90020594:	d036      	beq.n	90020604 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
90020596:	d31e      	bcc.n	900205d6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
90020598:	2f02      	cmp	r7, #2
9002059a:	d14a      	bne.n	90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002059c:	2e03      	cmp	r6, #3
9002059e:	d848      	bhi.n	90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900205a0:	e8df f006 	tbb	[pc, r6]
900205a4:	16140702 	.word	0x16140702
900205a8:	9504      	str	r5, [sp, #16]
900205aa:	4620      	mov	r0, r4
900205ac:	bcf0      	pop	{r4, r5, r6, r7}
900205ae:	f7ff be09 	b.w	900201c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900205b2:	6f80      	ldr	r0, [r0, #120]	; 0x78
900205b4:	2800      	cmp	r0, #0
900205b6:	d03c      	beq.n	90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900205b8:	6806      	ldr	r6, [r0, #0]
900205ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
900205be:	68b5      	ldr	r5, [r6, #8]
900205c0:	4613      	mov	r3, r2
900205c2:	46ac      	mov	ip, r5
900205c4:	460a      	mov	r2, r1
900205c6:	4621      	mov	r1, r4
900205c8:	bcf0      	pop	{r4, r5, r6, r7}
900205ca:	4760      	bx	ip
900205cc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
900205ce:	e7f1      	b.n	900205b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900205d0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
900205d4:	e7ee      	b.n	900205b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900205d6:	2e03      	cmp	r6, #3
900205d8:	d82b      	bhi.n	90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900205da:	e8df f006 	tbb	[pc, r6]
900205de:	0702      	.short	0x0702
900205e0:	100e      	.short	0x100e
900205e2:	9504      	str	r5, [sp, #16]
900205e4:	4620      	mov	r0, r4
900205e6:	bcf0      	pop	{r4, r5, r6, r7}
900205e8:	f7ff bd06 	b.w	9001fff8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
900205ec:	6f80      	ldr	r0, [r0, #120]	; 0x78
900205ee:	b300      	cbz	r0, 90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
900205f0:	6806      	ldr	r6, [r0, #0]
900205f2:	e9cd 3504 	strd	r3, r5, [sp, #16]
900205f6:	68f5      	ldr	r5, [r6, #12]
900205f8:	e7e2      	b.n	900205c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
900205fa:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
900205fc:	e7f7      	b.n	900205ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
900205fe:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020602:	e7f4      	b.n	900205ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
90020604:	2e03      	cmp	r6, #3
90020606:	d814      	bhi.n	90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
90020608:	e8df f006 	tbb	[pc, r6]
9002060c:	100e0702 	.word	0x100e0702
90020610:	9504      	str	r5, [sp, #16]
90020612:	4620      	mov	r0, r4
90020614:	bcf0      	pop	{r4, r5, r6, r7}
90020616:	f7ff bea1 	b.w	9002035c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9002061a:	6f80      	ldr	r0, [r0, #120]	; 0x78
9002061c:	b148      	cbz	r0, 90020632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9002061e:	6806      	ldr	r6, [r0, #0]
90020620:	e9cd 3504 	strd	r3, r5, [sp, #16]
90020624:	6935      	ldr	r5, [r6, #16]
90020626:	e7cb      	b.n	900205c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90020628:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9002062a:	e7f7      	b.n	9002061c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9002062c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
90020630:	e7f4      	b.n	9002061c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
90020632:	bcf0      	pop	{r4, r5, r6, r7}
90020634:	4770      	bx	lr
	...

90020638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90020638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002063c:	b087      	sub	sp, #28
9002063e:	4604      	mov	r4, r0
90020640:	460e      	mov	r6, r1
90020642:	6810      	ldr	r0, [r2, #0]
90020644:	6851      	ldr	r1, [r2, #4]
90020646:	ad02      	add	r5, sp, #8
90020648:	4617      	mov	r7, r2
9002064a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9002064e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 90020880 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
90020652:	c503      	stmia	r5!, {r0, r1}
90020654:	6818      	ldr	r0, [r3, #0]
90020656:	ad04      	add	r5, sp, #16
90020658:	6859      	ldr	r1, [r3, #4]
9002065a:	c503      	stmia	r5!, {r0, r1}
9002065c:	a802      	add	r0, sp, #8
9002065e:	f7f7 fc0d 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020662:	4639      	mov	r1, r7
90020664:	a804      	add	r0, sp, #16
90020666:	f7f7 fc4d 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002066a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002066e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020672:	f8bd 100c 	ldrh.w	r1, [sp, #12]
90020676:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002067a:	fb11 2103 	smlabb	r1, r1, r3, r2
9002067e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
90020682:	eb04 0441 	add.w	r4, r4, r1, lsl #1
90020686:	440e      	add	r6, r1
90020688:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9002068c:	440a      	add	r2, r1
9002068e:	f8ad 2010 	strh.w	r2, [sp, #16]
90020692:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90020696:	4413      	add	r3, r2
90020698:	f8ad 3012 	strh.w	r3, [sp, #18]
9002069c:	4b77      	ldr	r3, [pc, #476]	; (9002087c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002069e:	6818      	ldr	r0, [r3, #0]
900206a0:	6803      	ldr	r3, [r0, #0]
900206a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900206a4:	4798      	blx	r3
900206a6:	f8b9 b000 	ldrh.w	fp, [r9]
900206aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900206ae:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
900206b2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900206b6:	fb05 f50b 	mul.w	r5, r5, fp
900206ba:	fb0b 2303 	mla	r3, fp, r3, r2
900206be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900206c2:	ea4f 0348 	mov.w	r3, r8, lsl #1
900206c6:	9300      	str	r3, [sp, #0]
900206c8:	d069      	beq.n	9002079e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
900206ca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
900206ce:	4558      	cmp	r0, fp
900206d0:	f080 80cc 	bcs.w	9002086c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900206d4:	9b00      	ldr	r3, [sp, #0]
900206d6:	4631      	mov	r1, r6
900206d8:	18c3      	adds	r3, r0, r3
900206da:	9301      	str	r3, [sp, #4]
900206dc:	9b01      	ldr	r3, [sp, #4]
900206de:	4298      	cmp	r0, r3
900206e0:	d24f      	bcs.n	90020782 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
900206e2:	f811 2b01 	ldrb.w	r2, [r1], #1
900206e6:	2a00      	cmp	r2, #0
900206e8:	d048      	beq.n	9002077c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900206ea:	fb0a f202 	mul.w	r2, sl, r2
900206ee:	1c53      	adds	r3, r2, #1
900206f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900206f4:	121b      	asrs	r3, r3, #8
900206f6:	d041      	beq.n	9002077c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
900206f8:	8802      	ldrh	r2, [r0, #0]
900206fa:	b29e      	uxth	r6, r3
900206fc:	f8b4 c000 	ldrh.w	ip, [r4]
90020700:	43db      	mvns	r3, r3
90020702:	1215      	asrs	r5, r2, #8
90020704:	b2db      	uxtb	r3, r3
90020706:	ea4f 272c 	mov.w	r7, ip, asr #8
9002070a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002070e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020712:	fb15 f503 	smulbb	r5, r5, r3
90020716:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9002071a:	00d2      	lsls	r2, r2, #3
9002071c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90020720:	fb07 5706 	mla	r7, r7, r6, r5
90020724:	ea4f 05ec 	mov.w	r5, ip, asr #3
90020728:	b2d2      	uxtb	r2, r2
9002072a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002072e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90020732:	fb1e fe03 	smulbb	lr, lr, r3
90020736:	b2bf      	uxth	r7, r7
90020738:	fb12 f203 	smulbb	r2, r2, r3
9002073c:	fa5f fc8c 	uxtb.w	ip, ip
90020740:	fb05 e506 	mla	r5, r5, r6, lr
90020744:	f107 0e01 	add.w	lr, r7, #1
90020748:	fb0c 2c06 	mla	ip, ip, r6, r2
9002074c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90020750:	fa1f fc8c 	uxth.w	ip, ip
90020754:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
90020758:	b2ad      	uxth	r5, r5
9002075a:	f10c 0701 	add.w	r7, ip, #1
9002075e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020762:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020766:	ea47 070e 	orr.w	r7, r7, lr
9002076a:	f105 0e01 	add.w	lr, r5, #1
9002076e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020772:	096d      	lsrs	r5, r5, #5
90020774:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020778:	432f      	orrs	r7, r5
9002077a:	8007      	strh	r7, [r0, #0]
9002077c:	3002      	adds	r0, #2
9002077e:	3402      	adds	r4, #2
90020780:	e7ac      	b.n	900206dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
90020782:	f8b9 3000 	ldrh.w	r3, [r9]
90020786:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9002078a:	eba3 0308 	sub.w	r3, r3, r8
9002078e:	eba6 0608 	sub.w	r6, r6, r8
90020792:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020796:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9002079a:	440e      	add	r6, r1
9002079c:	e797      	b.n	900206ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9002079e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900207a2:	42a8      	cmp	r0, r5
900207a4:	d262      	bcs.n	9002086c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900207a6:	9b00      	ldr	r3, [sp, #0]
900207a8:	4631      	mov	r1, r6
900207aa:	eb00 0b03 	add.w	fp, r0, r3
900207ae:	4558      	cmp	r0, fp
900207b0:	d24e      	bcs.n	90020850 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900207b2:	f811 3b01 	ldrb.w	r3, [r1], #1
900207b6:	b12b      	cbz	r3, 900207c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900207b8:	2bff      	cmp	r3, #255	; 0xff
900207ba:	f8b4 e000 	ldrh.w	lr, [r4]
900207be:	d104      	bne.n	900207ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
900207c0:	f8a0 e000 	strh.w	lr, [r0]
900207c4:	3002      	adds	r0, #2
900207c6:	3402      	adds	r4, #2
900207c8:	e7f1      	b.n	900207ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
900207ca:	8802      	ldrh	r2, [r0, #0]
900207cc:	b29f      	uxth	r7, r3
900207ce:	43db      	mvns	r3, r3
900207d0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900207d4:	1216      	asrs	r6, r2, #8
900207d6:	b2db      	uxtb	r3, r3
900207d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900207dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900207e0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
900207e4:	00d2      	lsls	r2, r2, #3
900207e6:	fb16 f603 	smulbb	r6, r6, r3
900207ea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900207ee:	b2d2      	uxtb	r2, r2
900207f0:	fb0c 6c07 	mla	ip, ip, r7, r6
900207f4:	ea4f 06ee 	mov.w	r6, lr, asr #3
900207f8:	fb1a fa03 	smulbb	sl, sl, r3
900207fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020800:	fa1f fc8c 	uxth.w	ip, ip
90020804:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90020808:	fb12 f303 	smulbb	r3, r2, r3
9002080c:	fa5f fe8e 	uxtb.w	lr, lr
90020810:	fb06 a607 	mla	r6, r6, r7, sl
90020814:	f10c 0201 	add.w	r2, ip, #1
90020818:	fb0e 3307 	mla	r3, lr, r7, r3
9002081c:	b2b6      	uxth	r6, r6
9002081e:	b29b      	uxth	r3, r3
90020820:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020824:	f106 0a01 	add.w	sl, r6, #1
90020828:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9002082c:	f103 0c01 	add.w	ip, r3, #1
90020830:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
90020834:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90020838:	0976      	lsrs	r6, r6, #5
9002083a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002083e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90020842:	ea4c 0c02 	orr.w	ip, ip, r2
90020846:	ea4c 0c06 	orr.w	ip, ip, r6
9002084a:	f8a0 c000 	strh.w	ip, [r0]
9002084e:	e7b9      	b.n	900207c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90020850:	f8b9 3000 	ldrh.w	r3, [r9]
90020854:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90020858:	eba3 0308 	sub.w	r3, r3, r8
9002085c:	eba6 0608 	sub.w	r6, r6, r8
90020860:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020864:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90020868:	440e      	add	r6, r1
9002086a:	e79a      	b.n	900207a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9002086c:	4b03      	ldr	r3, [pc, #12]	; (9002087c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9002086e:	6818      	ldr	r0, [r3, #0]
90020870:	6803      	ldr	r3, [r0, #0]
90020872:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90020874:	4798      	blx	r3
90020876:	b007      	add	sp, #28
90020878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002087c:	24039acc 	.word	0x24039acc
90020880:	24039ac6 	.word	0x24039ac6

90020884 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
90020884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020888:	b089      	sub	sp, #36	; 0x24
9002088a:	4682      	mov	sl, r0
9002088c:	460f      	mov	r7, r1
9002088e:	4691      	mov	r9, r2
90020890:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
90020894:	4698      	mov	r8, r3
90020896:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020898:	2e00      	cmp	r6, #0
9002089a:	d03d      	beq.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9002089c:	4608      	mov	r0, r1
9002089e:	f7fa fe4d 	bl	9001b53c <_ZNK8touchgfx6Bitmap8getWidthEv>
900208a2:	4605      	mov	r5, r0
900208a4:	4638      	mov	r0, r7
900208a6:	f7fa fe7d 	bl	9001b5a4 <_ZNK8touchgfx6Bitmap9getHeightEv>
900208aa:	f8ad 000e 	strh.w	r0, [sp, #14]
900208ae:	4638      	mov	r0, r7
900208b0:	f8ad 9008 	strh.w	r9, [sp, #8]
900208b4:	f8ad 500c 	strh.w	r5, [sp, #12]
900208b8:	f8ad 800a 	strh.w	r8, [sp, #10]
900208bc:	f7fa ff2a 	bl	9001b714 <_ZNK8touchgfx6Bitmap7getDataEv>
900208c0:	4605      	mov	r5, r0
900208c2:	4638      	mov	r0, r7
900208c4:	f7fa ff56 	bl	9001b774 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900208c8:	4681      	mov	r9, r0
900208ca:	4638      	mov	r0, r7
900208cc:	f7fa ffa6 	bl	9001b81c <_ZNK8touchgfx6Bitmap9getFormatEv>
900208d0:	280b      	cmp	r0, #11
900208d2:	d821      	bhi.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
900208d4:	e8df f000 	tbb	[pc, r0]
900208d8:	2006aebe 	.word	0x2006aebe
900208dc:	20202020 	.word	0x20202020
900208e0:	b5202020 	.word	0xb5202020
900208e4:	4bb0      	ldr	r3, [pc, #704]	; (90020ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
900208e6:	6818      	ldr	r0, [r3, #0]
900208e8:	6803      	ldr	r3, [r0, #0]
900208ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900208ec:	4798      	blx	r3
900208ee:	2eff      	cmp	r6, #255	; 0xff
900208f0:	d101      	bne.n	900208f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
900208f2:	0683      	lsls	r3, r0, #26
900208f4:	d506      	bpl.n	90020904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
900208f6:	4633      	mov	r3, r6
900208f8:	4622      	mov	r2, r4
900208fa:	a902      	add	r1, sp, #8
900208fc:	4628      	mov	r0, r5
900208fe:	f7ff f909 	bl	9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020902:	e009      	b.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020904:	4638      	mov	r0, r7
90020906:	f7fa fecd 	bl	9001b6a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002090a:	b940      	cbnz	r0, 9002091e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9002090c:	4623      	mov	r3, r4
9002090e:	aa02      	add	r2, sp, #8
90020910:	4629      	mov	r1, r5
90020912:	4650      	mov	r0, sl
90020914:	f7ff f9e4 	bl	9001fce0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90020918:	b009      	add	sp, #36	; 0x24
9002091a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002091e:	f10d 0818 	add.w	r8, sp, #24
90020922:	4639      	mov	r1, r7
90020924:	af04      	add	r7, sp, #16
90020926:	4640      	mov	r0, r8
90020928:	f7fa fe70 	bl	9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002092c:	e898 0003 	ldmia.w	r8, {r0, r1}
90020930:	e887 0003 	stmia.w	r7, {r0, r1}
90020934:	4638      	mov	r0, r7
90020936:	4621      	mov	r1, r4
90020938:	f7f2 f982 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
9002093c:	4638      	mov	r0, r7
9002093e:	f7f2 f9c2 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90020942:	2800      	cmp	r0, #0
90020944:	d1d7      	bne.n	900208f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
90020946:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002094a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002094e:	4293      	cmp	r3, r2
90020950:	dd12      	ble.n	90020978 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
90020952:	1a9b      	subs	r3, r3, r2
90020954:	f9b4 0000 	ldrsh.w	r0, [r4]
90020958:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002095c:	f8ad 0018 	strh.w	r0, [sp, #24]
90020960:	4628      	mov	r0, r5
90020962:	f8ad 201a 	strh.w	r2, [sp, #26]
90020966:	4642      	mov	r2, r8
90020968:	f8ad 101c 	strh.w	r1, [sp, #28]
9002096c:	a902      	add	r1, sp, #8
9002096e:	f8ad 301e 	strh.w	r3, [sp, #30]
90020972:	4633      	mov	r3, r6
90020974:	f7ff f8ce 	bl	9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90020978:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9002097c:	f9b4 2000 	ldrsh.w	r2, [r4]
90020980:	4293      	cmp	r3, r2
90020982:	dd12      	ble.n	900209aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
90020984:	1a9b      	subs	r3, r3, r2
90020986:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9002098a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9002098e:	f8ad 2018 	strh.w	r2, [sp, #24]
90020992:	4642      	mov	r2, r8
90020994:	f8ad 001a 	strh.w	r0, [sp, #26]
90020998:	4628      	mov	r0, r5
9002099a:	f8ad 301c 	strh.w	r3, [sp, #28]
9002099e:	23ff      	movs	r3, #255	; 0xff
900209a0:	f8ad 101e 	strh.w	r1, [sp, #30]
900209a4:	a902      	add	r1, sp, #8
900209a6:	f7ff f8b5 	bl	9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900209aa:	463b      	mov	r3, r7
900209ac:	aa02      	add	r2, sp, #8
900209ae:	4629      	mov	r1, r5
900209b0:	4650      	mov	r0, sl
900209b2:	f7ff f995 	bl	9001fce0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900209b6:	88a2      	ldrh	r2, [r4, #4]
900209b8:	8823      	ldrh	r3, [r4, #0]
900209ba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900209be:	4413      	add	r3, r2
900209c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900209c4:	440a      	add	r2, r1
900209c6:	b29b      	uxth	r3, r3
900209c8:	b292      	uxth	r2, r2
900209ca:	b218      	sxth	r0, r3
900209cc:	b211      	sxth	r1, r2
900209ce:	4288      	cmp	r0, r1
900209d0:	dd12      	ble.n	900209f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
900209d2:	1a9b      	subs	r3, r3, r2
900209d4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
900209d8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
900209dc:	4642      	mov	r2, r8
900209de:	f8ad 1018 	strh.w	r1, [sp, #24]
900209e2:	a902      	add	r1, sp, #8
900209e4:	f8ad 301c 	strh.w	r3, [sp, #28]
900209e8:	23ff      	movs	r3, #255	; 0xff
900209ea:	f8ad 001e 	strh.w	r0, [sp, #30]
900209ee:	4628      	mov	r0, r5
900209f0:	f8ad 601a 	strh.w	r6, [sp, #26]
900209f4:	f7ff f88e 	bl	9001fb14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900209f8:	88e2      	ldrh	r2, [r4, #6]
900209fa:	8863      	ldrh	r3, [r4, #2]
900209fc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020a00:	4413      	add	r3, r2
90020a02:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020a06:	440a      	add	r2, r1
90020a08:	b29b      	uxth	r3, r3
90020a0a:	b292      	uxth	r2, r2
90020a0c:	b218      	sxth	r0, r3
90020a0e:	b211      	sxth	r1, r2
90020a10:	4288      	cmp	r0, r1
90020a12:	dd81      	ble.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a14:	1a9b      	subs	r3, r3, r2
90020a16:	f9b4 6000 	ldrsh.w	r6, [r4]
90020a1a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020a1e:	4642      	mov	r2, r8
90020a20:	f8ad 301e 	strh.w	r3, [sp, #30]
90020a24:	23ff      	movs	r3, #255	; 0xff
90020a26:	f8ad 6018 	strh.w	r6, [sp, #24]
90020a2a:	f8ad 101a 	strh.w	r1, [sp, #26]
90020a2e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020a32:	e762      	b.n	900208fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
90020a34:	4633      	mov	r3, r6
90020a36:	4622      	mov	r2, r4
90020a38:	a902      	add	r1, sp, #8
90020a3a:	4628      	mov	r0, r5
90020a3c:	f7ff f9c0 	bl	9001fdc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90020a40:	e76a      	b.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a42:	e9cd 4600 	strd	r4, r6, [sp]
90020a46:	ab02      	add	r3, sp, #8
90020a48:	464a      	mov	r2, r9
90020a4a:	4629      	mov	r1, r5
90020a4c:	4650      	mov	r0, sl
90020a4e:	f7ff fd97 	bl	90020580 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90020a52:	e761      	b.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a54:	4638      	mov	r0, r7
90020a56:	f7fa fe25 	bl	9001b6a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90020a5a:	b950      	cbnz	r0, 90020a72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
90020a5c:	f8da 3000 	ldr.w	r3, [sl]
90020a60:	aa02      	add	r2, sp, #8
90020a62:	4629      	mov	r1, r5
90020a64:	e9cd 6000 	strd	r6, r0, [sp]
90020a68:	4650      	mov	r0, sl
90020a6a:	68de      	ldr	r6, [r3, #12]
90020a6c:	4623      	mov	r3, r4
90020a6e:	47b0      	blx	r6
90020a70:	e752      	b.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020a72:	f10d 0818 	add.w	r8, sp, #24
90020a76:	4639      	mov	r1, r7
90020a78:	af04      	add	r7, sp, #16
90020a7a:	4640      	mov	r0, r8
90020a7c:	f7fa fdc6 	bl	9001b60c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90020a80:	e898 0003 	ldmia.w	r8, {r0, r1}
90020a84:	e887 0003 	stmia.w	r7, {r0, r1}
90020a88:	4638      	mov	r0, r7
90020a8a:	4621      	mov	r1, r4
90020a8c:	f7f2 f8d8 	bl	90012c40 <_ZN8touchgfx4RectaNERKS0_>
90020a90:	4638      	mov	r0, r7
90020a92:	f7f2 f918 	bl	90012cc6 <_ZNK8touchgfx4Rect7isEmptyEv>
90020a96:	b138      	cbz	r0, 90020aa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
90020a98:	4623      	mov	r3, r4
90020a9a:	9600      	str	r6, [sp, #0]
90020a9c:	aa02      	add	r2, sp, #8
90020a9e:	4649      	mov	r1, r9
90020aa0:	4628      	mov	r0, r5
90020aa2:	f7ff fdc9 	bl	90020638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020aa6:	e737      	b.n	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020aa8:	f8da 3000 	ldr.w	r3, [sl]
90020aac:	aa02      	add	r2, sp, #8
90020aae:	4629      	mov	r1, r5
90020ab0:	e9cd 6000 	strd	r6, r0, [sp]
90020ab4:	4650      	mov	r0, sl
90020ab6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90020aba:	463b      	mov	r3, r7
90020abc:	47d8      	blx	fp
90020abe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90020ac2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90020ac6:	4293      	cmp	r3, r2
90020ac8:	dd13      	ble.n	90020af2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
90020aca:	f9b4 0000 	ldrsh.w	r0, [r4]
90020ace:	1a9b      	subs	r3, r3, r2
90020ad0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90020ad4:	f8ad 0018 	strh.w	r0, [sp, #24]
90020ad8:	4628      	mov	r0, r5
90020ada:	f8ad 201a 	strh.w	r2, [sp, #26]
90020ade:	aa02      	add	r2, sp, #8
90020ae0:	f8ad 101c 	strh.w	r1, [sp, #28]
90020ae4:	4649      	mov	r1, r9
90020ae6:	f8ad 301e 	strh.w	r3, [sp, #30]
90020aea:	4643      	mov	r3, r8
90020aec:	9600      	str	r6, [sp, #0]
90020aee:	f7ff fda3 	bl	90020638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020af2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90020af6:	f9b4 2000 	ldrsh.w	r2, [r4]
90020afa:	4293      	cmp	r3, r2
90020afc:	dd13      	ble.n	90020b26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
90020afe:	1a9b      	subs	r3, r3, r2
90020b00:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90020b04:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90020b08:	f8ad 2018 	strh.w	r2, [sp, #24]
90020b0c:	aa02      	add	r2, sp, #8
90020b0e:	f8ad 001a 	strh.w	r0, [sp, #26]
90020b12:	4628      	mov	r0, r5
90020b14:	f8ad 301c 	strh.w	r3, [sp, #28]
90020b18:	4643      	mov	r3, r8
90020b1a:	f8ad 101e 	strh.w	r1, [sp, #30]
90020b1e:	4649      	mov	r1, r9
90020b20:	9600      	str	r6, [sp, #0]
90020b22:	f7ff fd89 	bl	90020638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020b26:	88a2      	ldrh	r2, [r4, #4]
90020b28:	8823      	ldrh	r3, [r4, #0]
90020b2a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90020b2e:	4413      	add	r3, r2
90020b30:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020b34:	440a      	add	r2, r1
90020b36:	b29b      	uxth	r3, r3
90020b38:	b292      	uxth	r2, r2
90020b3a:	b218      	sxth	r0, r3
90020b3c:	b211      	sxth	r1, r2
90020b3e:	4288      	cmp	r0, r1
90020b40:	dd13      	ble.n	90020b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
90020b42:	1a9b      	subs	r3, r3, r2
90020b44:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90020b48:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90020b4c:	aa02      	add	r2, sp, #8
90020b4e:	f8ad 1018 	strh.w	r1, [sp, #24]
90020b52:	4649      	mov	r1, r9
90020b54:	f8ad 301c 	strh.w	r3, [sp, #28]
90020b58:	4643      	mov	r3, r8
90020b5a:	f8ad 001e 	strh.w	r0, [sp, #30]
90020b5e:	4628      	mov	r0, r5
90020b60:	9600      	str	r6, [sp, #0]
90020b62:	f8ad 701a 	strh.w	r7, [sp, #26]
90020b66:	f7ff fd67 	bl	90020638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90020b6a:	88e2      	ldrh	r2, [r4, #6]
90020b6c:	8863      	ldrh	r3, [r4, #2]
90020b6e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90020b72:	4413      	add	r3, r2
90020b74:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90020b78:	440a      	add	r2, r1
90020b7a:	b29b      	uxth	r3, r3
90020b7c:	b292      	uxth	r2, r2
90020b7e:	b218      	sxth	r0, r3
90020b80:	b211      	sxth	r1, r2
90020b82:	4288      	cmp	r0, r1
90020b84:	f77f aec8 	ble.w	90020918 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
90020b88:	f9b4 7000 	ldrsh.w	r7, [r4]
90020b8c:	1a9b      	subs	r3, r3, r2
90020b8e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020b92:	f8ad 301e 	strh.w	r3, [sp, #30]
90020b96:	4643      	mov	r3, r8
90020b98:	f8ad 7018 	strh.w	r7, [sp, #24]
90020b9c:	f8ad 101a 	strh.w	r1, [sp, #26]
90020ba0:	f8ad 001c 	strh.w	r0, [sp, #28]
90020ba4:	9600      	str	r6, [sp, #0]
90020ba6:	e779      	b.n	90020a9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
90020ba8:	24039acc 	.word	0x24039acc

90020bac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020bac:	b180      	cbz	r0, 90020bd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90020bae:	2903      	cmp	r1, #3
90020bb0:	d81c      	bhi.n	90020bec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020bb2:	e8df f001 	tbb	[pc, r1]
90020bb6:	1d02      	.short	0x1d02
90020bb8:	1f08      	.short	0x1f08
90020bba:	4b10      	ldr	r3, [pc, #64]	; (90020bfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020bbc:	8818      	ldrh	r0, [r3, #0]
90020bbe:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020bc2:	4240      	negs	r0, r0
90020bc4:	4770      	bx	lr
90020bc6:	4b0d      	ldr	r3, [pc, #52]	; (90020bfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020bc8:	8818      	ldrh	r0, [r3, #0]
90020bca:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020bce:	4770      	bx	lr
90020bd0:	2903      	cmp	r1, #3
90020bd2:	d80b      	bhi.n	90020bec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020bd4:	a301      	add	r3, pc, #4	; (adr r3, 90020bdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020bd6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020bda:	bf00      	nop
90020bdc:	90020bf1 	.word	0x90020bf1
90020be0:	90020bc7 	.word	0x90020bc7
90020be4:	90020bf5 	.word	0x90020bf5
90020be8:	90020bbb 	.word	0x90020bbb
90020bec:	2000      	movs	r0, #0
90020bee:	4770      	bx	lr
90020bf0:	2001      	movs	r0, #1
90020bf2:	4770      	bx	lr
90020bf4:	f04f 30ff 	mov.w	r0, #4294967295
90020bf8:	4770      	bx	lr
90020bfa:	bf00      	nop
90020bfc:	24039ac6 	.word	0x24039ac6

90020c00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90020c00:	b180      	cbz	r0, 90020c24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90020c02:	2903      	cmp	r1, #3
90020c04:	d81c      	bhi.n	90020c40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020c06:	e8df f001 	tbb	[pc, r1]
90020c0a:	021d      	.short	0x021d
90020c0c:	071f      	.short	0x071f
90020c0e:	4b10      	ldr	r3, [pc, #64]	; (90020c50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020c10:	8818      	ldrh	r0, [r3, #0]
90020c12:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020c16:	4770      	bx	lr
90020c18:	4b0d      	ldr	r3, [pc, #52]	; (90020c50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90020c1a:	8818      	ldrh	r0, [r3, #0]
90020c1c:	f3c0 000e 	ubfx	r0, r0, #0, #15
90020c20:	4240      	negs	r0, r0
90020c22:	4770      	bx	lr
90020c24:	2903      	cmp	r1, #3
90020c26:	d80b      	bhi.n	90020c40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90020c28:	a301      	add	r3, pc, #4	; (adr r3, 90020c30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90020c2a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020c2e:	bf00      	nop
90020c30:	90020c0f 	.word	0x90020c0f
90020c34:	90020c49 	.word	0x90020c49
90020c38:	90020c19 	.word	0x90020c19
90020c3c:	90020c45 	.word	0x90020c45
90020c40:	2000      	movs	r0, #0
90020c42:	4770      	bx	lr
90020c44:	2001      	movs	r0, #1
90020c46:	4770      	bx	lr
90020c48:	f04f 30ff 	mov.w	r0, #4294967295
90020c4c:	4770      	bx	lr
90020c4e:	bf00      	nop
90020c50:	24039ac6 	.word	0x24039ac6

90020c54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90020c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020c58:	b099      	sub	sp, #100	; 0x64
90020c5a:	910b      	str	r1, [sp, #44]	; 0x2c
90020c5c:	a914      	add	r1, sp, #80	; 0x50
90020c5e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
90020c62:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
90020c66:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
90020c6a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
90020c6e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
90020c72:	e881 000c 	stmia.w	r1, {r2, r3}
90020c76:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
90020c7a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
90020c7e:	9309      	str	r3, [sp, #36]	; 0x24
90020c80:	f891 900d 	ldrb.w	r9, [r1, #13]
90020c84:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90020c88:	ea4f 1749 	mov.w	r7, r9, lsl #5
90020c8c:	9310      	str	r3, [sp, #64]	; 0x40
90020c8e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
90020c92:	930c      	str	r3, [sp, #48]	; 0x30
90020c94:	f407 7380 	and.w	r3, r7, #256	; 0x100
90020c98:	798f      	ldrb	r7, [r1, #6]
90020c9a:	431f      	orrs	r7, r3
90020c9c:	f000 8195 	beq.w	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020ca0:	ea4f 1909 	mov.w	r9, r9, lsl #4
90020ca4:	f409 7380 	and.w	r3, r9, #256	; 0x100
90020ca8:	f891 9007 	ldrb.w	r9, [r1, #7]
90020cac:	ea59 0903 	orrs.w	r9, r9, r3
90020cb0:	f000 818b 	beq.w	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020cb4:	f991 3009 	ldrsb.w	r3, [r1, #9]
90020cb8:	b29b      	uxth	r3, r3
90020cba:	2d00      	cmp	r5, #0
90020cbc:	f000 812e 	beq.w	90020f1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90020cc0:	1aed      	subs	r5, r5, r3
90020cc2:	b2ad      	uxth	r5, r5
90020cc4:	042b      	lsls	r3, r5, #16
90020cc6:	d502      	bpl.n	90020cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020cc8:	1b64      	subs	r4, r4, r5
90020cca:	2500      	movs	r5, #0
90020ccc:	b224      	sxth	r4, r4
90020cce:	f9b2 1000 	ldrsh.w	r1, [r2]
90020cd2:	a814      	add	r0, sp, #80	; 0x50
90020cd4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90020cd8:	428c      	cmp	r4, r1
90020cda:	b28b      	uxth	r3, r1
90020cdc:	bfbf      	itttt	lt
90020cde:	18ed      	addlt	r5, r5, r3
90020ce0:	1b2c      	sublt	r4, r5, r4
90020ce2:	b2a5      	uxthlt	r5, r4
90020ce4:	460c      	movlt	r4, r1
90020ce6:	8891      	ldrh	r1, [r2, #4]
90020ce8:	440b      	add	r3, r1
90020cea:	4621      	mov	r1, r4
90020cec:	b21b      	sxth	r3, r3
90020cee:	930f      	str	r3, [sp, #60]	; 0x3c
90020cf0:	88d3      	ldrh	r3, [r2, #6]
90020cf2:	8852      	ldrh	r2, [r2, #2]
90020cf4:	4413      	add	r3, r2
90020cf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020cf8:	b21b      	sxth	r3, r3
90020cfa:	930d      	str	r3, [sp, #52]	; 0x34
90020cfc:	4bbd      	ldr	r3, [pc, #756]	; (90020ff4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90020cfe:	f893 b000 	ldrb.w	fp, [r3]
90020d02:	f10b 3cff 	add.w	ip, fp, #4294967295
90020d06:	f1dc 0300 	rsbs	r3, ip, #0
90020d0a:	eb43 030c 	adc.w	r3, r3, ip
90020d0e:	930e      	str	r3, [sp, #56]	; 0x38
90020d10:	4653      	mov	r3, sl
90020d12:	f7f6 ff28 	bl	90017b66 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90020d16:	4621      	mov	r1, r4
90020d18:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
90020d1c:	4653      	mov	r3, sl
90020d1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90020d20:	a814      	add	r0, sp, #80	; 0x50
90020d22:	f7f6 ff3d 	bl	90017ba0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90020d26:	a918      	add	r1, sp, #96	; 0x60
90020d28:	f821 0d02 	strh.w	r0, [r1, #-2]!
90020d2c:	a817      	add	r0, sp, #92	; 0x5c
90020d2e:	f7f7 f863 	bl	90017df8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90020d32:	f1ba 0f00 	cmp.w	sl, #0
90020d36:	f040 80f4 	bne.w	90020f22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90020d3a:	f1bb 0f01 	cmp.w	fp, #1
90020d3e:	f040 80f8 	bne.w	90020f32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90020d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020d44:	2b00      	cmp	r3, #0
90020d46:	f040 8145 	bne.w	90020fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90020d4a:	b2ba      	uxth	r2, r7
90020d4c:	b905      	cbnz	r5, 90020d50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90020d4e:	b16e      	cbz	r6, 90020d6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90020d50:	fb06 5302 	mla	r3, r6, r2, r5
90020d54:	9828      	ldr	r0, [sp, #160]	; 0xa0
90020d56:	4631      	mov	r1, r6
90020d58:	fb08 f303 	mul.w	r3, r8, r3
90020d5c:	f003 0607 	and.w	r6, r3, #7
90020d60:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90020d64:	9328      	str	r3, [sp, #160]	; 0xa0
90020d66:	eba9 0301 	sub.w	r3, r9, r1
90020d6a:	930a      	str	r3, [sp, #40]	; 0x28
90020d6c:	4651      	mov	r1, sl
90020d6e:	980e      	ldr	r0, [sp, #56]	; 0x38
90020d70:	f7ff ff1c 	bl	90020bac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90020d74:	4681      	mov	r9, r0
90020d76:	980e      	ldr	r0, [sp, #56]	; 0x38
90020d78:	f7ff ff42 	bl	90020c00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020d7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020d7e:	9909      	ldr	r1, [sp, #36]	; 0x24
90020d80:	4683      	mov	fp, r0
90020d82:	eba3 0a01 	sub.w	sl, r3, r1
90020d86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020d88:	459a      	cmp	sl, r3
90020d8a:	bfa8      	it	ge
90020d8c:	469a      	movge	sl, r3
90020d8e:	f1ba 0f00 	cmp.w	sl, #0
90020d92:	f340 811a 	ble.w	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020d96:	1b64      	subs	r4, r4, r5
90020d98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020d9a:	1b1c      	subs	r4, r3, r4
90020d9c:	42bc      	cmp	r4, r7
90020d9e:	bfd4      	ite	le
90020da0:	ebc5 0504 	rsble	r5, r5, r4
90020da4:	ebc5 0507 	rsbgt	r5, r5, r7
90020da8:	2d00      	cmp	r5, #0
90020daa:	f340 810e 	ble.w	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020dae:	1b52      	subs	r2, r2, r5
90020db0:	fb08 f302 	mul.w	r3, r8, r2
90020db4:	930f      	str	r3, [sp, #60]	; 0x3c
90020db6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020db8:	2b00      	cmp	r3, #0
90020dba:	f040 8116 	bne.w	90020fea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90020dbe:	4b8e      	ldr	r3, [pc, #568]	; (90020ff8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90020dc0:	6818      	ldr	r0, [r3, #0]
90020dc2:	6803      	ldr	r3, [r0, #0]
90020dc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90020dc6:	4798      	blx	r3
90020dc8:	2301      	movs	r3, #1
90020dca:	4a8c      	ldr	r2, [pc, #560]	; (90020ffc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90020dcc:	fa03 f308 	lsl.w	r3, r3, r8
90020dd0:	8811      	ldrh	r1, [r2, #0]
90020dd2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
90020dd6:	3b01      	subs	r3, #1
90020dd8:	b2db      	uxtb	r3, r3
90020dda:	930e      	str	r3, [sp, #56]	; 0x38
90020ddc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
90020de0:	fb01 2303 	mla	r3, r1, r3, r2
90020de4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020de8:	930a      	str	r3, [sp, #40]	; 0x28
90020dea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020dec:	f3c3 4307 	ubfx	r3, r3, #16, #8
90020df0:	9313      	str	r3, [sp, #76]	; 0x4c
90020df2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020df4:	0a19      	lsrs	r1, r3, #8
90020df6:	b2cb      	uxtb	r3, r1
90020df8:	9312      	str	r3, [sp, #72]	; 0x48
90020dfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020dfc:	b2db      	uxtb	r3, r3
90020dfe:	9311      	str	r3, [sp, #68]	; 0x44
90020e00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90020e02:	095a      	lsrs	r2, r3, #5
90020e04:	4b7e      	ldr	r3, [pc, #504]	; (90021000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90020e06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020e0a:	400b      	ands	r3, r1
90020e0c:	4313      	orrs	r3, r2
90020e0e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90020e10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020e14:	4313      	orrs	r3, r2
90020e16:	b29b      	uxth	r3, r3
90020e18:	9310      	str	r3, [sp, #64]	; 0x40
90020e1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020e1c:	781a      	ldrb	r2, [r3, #0]
90020e1e:	ea4f 0349 	mov.w	r3, r9, lsl #1
90020e22:	fb05 b919 	mls	r9, r5, r9, fp
90020e26:	4132      	asrs	r2, r6
90020e28:	fb03 fb05 	mul.w	fp, r3, r5
90020e2c:	930d      	str	r3, [sp, #52]	; 0x34
90020e2e:	b2d2      	uxtb	r2, r2
90020e30:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90020e34:	f11a 3aff 	adds.w	sl, sl, #4294967295
90020e38:	f0c0 80f5 	bcc.w	90021026 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90020e3c:	46ae      	mov	lr, r5
90020e3e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
90020e42:	f11e 3eff 	adds.w	lr, lr, #4294967295
90020e46:	f0c0 80dd 	bcc.w	90021004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90020e4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020e4c:	4013      	ands	r3, r2
90020e4e:	d055      	beq.n	90020efc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90020e50:	20ff      	movs	r0, #255	; 0xff
90020e52:	990e      	ldr	r1, [sp, #56]	; 0x38
90020e54:	fb90 f1f1 	sdiv	r1, r0, r1
90020e58:	434b      	muls	r3, r1
90020e5a:	2bfe      	cmp	r3, #254	; 0xfe
90020e5c:	dd03      	ble.n	90020e66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90020e5e:	990c      	ldr	r1, [sp, #48]	; 0x30
90020e60:	4281      	cmp	r1, r0
90020e62:	f000 80c4 	beq.w	90020fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90020e66:	990c      	ldr	r1, [sp, #48]	; 0x30
90020e68:	f8bc 4000 	ldrh.w	r4, [ip]
90020e6c:	fb11 f303 	smulbb	r3, r1, r3
90020e70:	1220      	asrs	r0, r4, #8
90020e72:	b29b      	uxth	r3, r3
90020e74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020e78:	1c59      	adds	r1, r3, #1
90020e7a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90020e7e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90020e82:	10e1      	asrs	r1, r4, #3
90020e84:	f3c3 2307 	ubfx	r3, r3, #8, #8
90020e88:	00e4      	lsls	r4, r4, #3
90020e8a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020e8e:	b29f      	uxth	r7, r3
90020e90:	43db      	mvns	r3, r3
90020e92:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90020e96:	b2db      	uxtb	r3, r3
90020e98:	b2e4      	uxtb	r4, r4
90020e9a:	9309      	str	r3, [sp, #36]	; 0x24
90020e9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90020e9e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90020ea2:	fb13 f907 	smulbb	r9, r3, r7
90020ea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020ea8:	fb00 9003 	mla	r0, r0, r3, r9
90020eac:	9b12      	ldr	r3, [sp, #72]	; 0x48
90020eae:	fb13 f907 	smulbb	r9, r3, r7
90020eb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020eb4:	b280      	uxth	r0, r0
90020eb6:	fb01 9103 	mla	r1, r1, r3, r9
90020eba:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020ebc:	fb13 f707 	smulbb	r7, r3, r7
90020ec0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020ec2:	b289      	uxth	r1, r1
90020ec4:	fb04 7403 	mla	r4, r4, r3, r7
90020ec8:	1c43      	adds	r3, r0, #1
90020eca:	b2a4      	uxth	r4, r4
90020ecc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020ed0:	f104 0901 	add.w	r9, r4, #1
90020ed4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90020ed8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90020edc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90020ee0:	ea49 0000 	orr.w	r0, r9, r0
90020ee4:	f101 0901 	add.w	r9, r1, #1
90020ee8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90020eec:	ea4f 1959 	mov.w	r9, r9, lsr #5
90020ef0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90020ef4:	ea40 0009 	orr.w	r0, r0, r9
90020ef8:	f8ac 0000 	strh.w	r0, [ip]
90020efc:	4446      	add	r6, r8
90020efe:	b2b6      	uxth	r6, r6
90020f00:	2e07      	cmp	r6, #7
90020f02:	bf89      	itett	hi
90020f04:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
90020f06:	fa42 f208 	asrls.w	r2, r2, r8
90020f0a:	2600      	movhi	r6, #0
90020f0c:	785a      	ldrbhi	r2, [r3, #1]
90020f0e:	bf8a      	itet	hi
90020f10:	3301      	addhi	r3, #1
90020f12:	b2d2      	uxtbls	r2, r2
90020f14:	9328      	strhi	r3, [sp, #160]	; 0xa0
90020f16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020f18:	449c      	add	ip, r3
90020f1a:	e792      	b.n	90020e42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90020f1c:	441c      	add	r4, r3
90020f1e:	b224      	sxth	r4, r4
90020f20:	e6d5      	b.n	90020cce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90020f22:	f1ba 0f01 	cmp.w	sl, #1
90020f26:	f47f af0c 	bne.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f2a:	f1bb 0f01 	cmp.w	fp, #1
90020f2e:	f47f af08 	bne.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f32:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 90020ff8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90020f36:	f8db 0000 	ldr.w	r0, [fp]
90020f3a:	6803      	ldr	r3, [r0, #0]
90020f3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90020f3e:	4798      	blx	r3
90020f40:	f410 7380 	ands.w	r3, r0, #256	; 0x100
90020f44:	465a      	mov	r2, fp
90020f46:	d006      	beq.n	90020f56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020f48:	f1b8 0f04 	cmp.w	r8, #4
90020f4c:	d140      	bne.n	90020fd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
90020f4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020f50:	3300      	adds	r3, #0
90020f52:	bf18      	it	ne
90020f54:	2301      	movne	r3, #1
90020f56:	0580      	lsls	r0, r0, #22
90020f58:	d56e      	bpl.n	90021038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020f5a:	f1b8 0f08 	cmp.w	r8, #8
90020f5e:	d16b      	bne.n	90021038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90020f60:	2b00      	cmp	r3, #0
90020f62:	bf0c      	ite	eq
90020f64:	f44f 7100 	moveq.w	r1, #512	; 0x200
90020f68:	f44f 7180 	movne.w	r1, #256	; 0x100
90020f6c:	2d00      	cmp	r5, #0
90020f6e:	f47f aee8 	bne.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f72:	2e00      	cmp	r6, #0
90020f74:	f47f aee5 	bne.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f78:	19e3      	adds	r3, r4, r7
90020f7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
90020f7c:	4283      	cmp	r3, r0
90020f7e:	f73f aee0 	bgt.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f82:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020f84:	980d      	ldr	r0, [sp, #52]	; 0x34
90020f86:	444b      	add	r3, r9
90020f88:	4283      	cmp	r3, r0
90020f8a:	f73f aeda 	bgt.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90020f8e:	b2bf      	uxth	r7, r7
90020f90:	f1b8 0f08 	cmp.w	r8, #8
90020f94:	6810      	ldr	r0, [r2, #0]
90020f96:	f04f 0500 	mov.w	r5, #0
90020f9a:	bf18      	it	ne
90020f9c:	3701      	addne	r7, #1
90020f9e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
90020fa2:	6804      	ldr	r4, [r0, #0]
90020fa4:	bf18      	it	ne
90020fa6:	f027 0701 	bicne.w	r7, r7, #1
90020faa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
90020fae:	e9cd 1505 	strd	r1, r5, [sp, #20]
90020fb2:	990c      	ldr	r1, [sp, #48]	; 0x30
90020fb4:	bf18      	it	ne
90020fb6:	b2bf      	uxthne	r7, r7
90020fb8:	9104      	str	r1, [sp, #16]
90020fba:	992a      	ldr	r1, [sp, #168]	; 0xa8
90020fbc:	e9cd 7900 	strd	r7, r9, [sp]
90020fc0:	e9cd 7102 	strd	r7, r1, [sp, #8]
90020fc4:	9928      	ldr	r1, [sp, #160]	; 0xa0
90020fc6:	6d64      	ldr	r4, [r4, #84]	; 0x54
90020fc8:	47a0      	blx	r4
90020fca:	b019      	add	sp, #100	; 0x64
90020fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020fd0:	2300      	movs	r3, #0
90020fd2:	e7c0      	b.n	90020f56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90020fd4:	2208      	movs	r2, #8
90020fd6:	fb92 f3f8 	sdiv	r3, r2, r8
90020fda:	1e5a      	subs	r2, r3, #1
90020fdc:	443a      	add	r2, r7
90020fde:	fb92 f2f3 	sdiv	r2, r2, r3
90020fe2:	fb12 f203 	smulbb	r2, r2, r3
90020fe6:	b292      	uxth	r2, r2
90020fe8:	e6b0      	b.n	90020d4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90020fea:	980b      	ldr	r0, [sp, #44]	; 0x2c
90020fec:	e6ec      	b.n	90020dc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90020fee:	9810      	ldr	r0, [sp, #64]	; 0x40
90020ff0:	e782      	b.n	90020ef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90020ff2:	bf00      	nop
90020ff4:	24039ac4 	.word	0x24039ac4
90020ff8:	24039acc 	.word	0x24039acc
90020ffc:	24039ac6 	.word	0x24039ac6
90021000:	00fff800 	.word	0x00fff800
90021004:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021006:	b153      	cbz	r3, 9002101e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90021008:	441e      	add	r6, r3
9002100a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002100c:	b2b6      	uxth	r6, r6
9002100e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90021012:	f006 0607 	and.w	r6, r6, #7
90021016:	781a      	ldrb	r2, [r3, #0]
90021018:	9328      	str	r3, [sp, #160]	; 0xa0
9002101a:	4132      	asrs	r2, r6
9002101c:	b2d2      	uxtb	r2, r2
9002101e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021020:	445b      	add	r3, fp
90021022:	930a      	str	r3, [sp, #40]	; 0x28
90021024:	e706      	b.n	90020e34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90021026:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021028:	2b00      	cmp	r3, #0
9002102a:	d1ce      	bne.n	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9002102c:	4b05      	ldr	r3, [pc, #20]	; (90021044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9002102e:	6818      	ldr	r0, [r3, #0]
90021030:	6803      	ldr	r3, [r0, #0]
90021032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90021034:	4798      	blx	r3
90021036:	e7c8      	b.n	90020fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90021038:	2b00      	cmp	r3, #0
9002103a:	f43f ae82 	beq.w	90020d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9002103e:	f44f 7180 	mov.w	r1, #256	; 0x100
90021042:	e793      	b.n	90020f6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90021044:	24039acc 	.word	0x24039acc

90021048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90021048:	b538      	push	{r3, r4, r5, lr}
9002104a:	4c15      	ldr	r4, [pc, #84]	; (900210a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9002104c:	4605      	mov	r5, r0
9002104e:	7823      	ldrb	r3, [r4, #0]
90021050:	f3bf 8f5b 	dmb	ish
90021054:	07da      	lsls	r2, r3, #31
90021056:	d40b      	bmi.n	90021070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021058:	4620      	mov	r0, r4
9002105a:	f008 fa05 	bl	90029468 <__cxa_guard_acquire>
9002105e:	b138      	cbz	r0, 90021070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90021060:	4620      	mov	r0, r4
90021062:	f008 fa0d 	bl	90029480 <__cxa_guard_release>
90021066:	4a0f      	ldr	r2, [pc, #60]	; (900210a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90021068:	490f      	ldr	r1, [pc, #60]	; (900210a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9002106a:	4810      	ldr	r0, [pc, #64]	; (900210ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9002106c:	f008 f9f5 	bl	9002945a <__aeabi_atexit>
90021070:	4c0f      	ldr	r4, [pc, #60]	; (900210b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90021072:	7823      	ldrb	r3, [r4, #0]
90021074:	f3bf 8f5b 	dmb	ish
90021078:	07db      	lsls	r3, r3, #31
9002107a:	d40b      	bmi.n	90021094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9002107c:	4620      	mov	r0, r4
9002107e:	f008 f9f3 	bl	90029468 <__cxa_guard_acquire>
90021082:	b138      	cbz	r0, 90021094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90021084:	4620      	mov	r0, r4
90021086:	f008 f9fb 	bl	90029480 <__cxa_guard_release>
9002108a:	4a06      	ldr	r2, [pc, #24]	; (900210a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9002108c:	4909      	ldr	r1, [pc, #36]	; (900210b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002108e:	480a      	ldr	r0, [pc, #40]	; (900210b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90021090:	f008 f9e3 	bl	9002945a <__aeabi_atexit>
90021094:	4b05      	ldr	r3, [pc, #20]	; (900210ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90021096:	612b      	str	r3, [r5, #16]
90021098:	4b07      	ldr	r3, [pc, #28]	; (900210b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002109a:	616b      	str	r3, [r5, #20]
9002109c:	bd38      	pop	{r3, r4, r5, pc}
9002109e:	bf00      	nop
900210a0:	24039bac 	.word	0x24039bac
900210a4:	24000000 	.word	0x24000000
900210a8:	9001de2f 	.word	0x9001de2f
900210ac:	240000d0 	.word	0x240000d0
900210b0:	24039bb0 	.word	0x24039bb0
900210b4:	9001de2d 	.word	0x9001de2d
900210b8:	240000d4 	.word	0x240000d4

900210bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
900210bc:	b538      	push	{r3, r4, r5, lr}
900210be:	4c15      	ldr	r4, [pc, #84]	; (90021114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
900210c0:	4605      	mov	r5, r0
900210c2:	7823      	ldrb	r3, [r4, #0]
900210c4:	f3bf 8f5b 	dmb	ish
900210c8:	07da      	lsls	r2, r3, #31
900210ca:	d40b      	bmi.n	900210e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900210cc:	4620      	mov	r0, r4
900210ce:	f008 f9cb 	bl	90029468 <__cxa_guard_acquire>
900210d2:	b138      	cbz	r0, 900210e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
900210d4:	4620      	mov	r0, r4
900210d6:	f008 f9d3 	bl	90029480 <__cxa_guard_release>
900210da:	4a0f      	ldr	r2, [pc, #60]	; (90021118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
900210dc:	490f      	ldr	r1, [pc, #60]	; (9002111c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
900210de:	4810      	ldr	r0, [pc, #64]	; (90021120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900210e0:	f008 f9bb 	bl	9002945a <__aeabi_atexit>
900210e4:	4c0f      	ldr	r4, [pc, #60]	; (90021124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
900210e6:	7823      	ldrb	r3, [r4, #0]
900210e8:	f3bf 8f5b 	dmb	ish
900210ec:	07db      	lsls	r3, r3, #31
900210ee:	d40b      	bmi.n	90021108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900210f0:	4620      	mov	r0, r4
900210f2:	f008 f9b9 	bl	90029468 <__cxa_guard_acquire>
900210f6:	b138      	cbz	r0, 90021108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
900210f8:	4620      	mov	r0, r4
900210fa:	f008 f9c1 	bl	90029480 <__cxa_guard_release>
900210fe:	4a06      	ldr	r2, [pc, #24]	; (90021118 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90021100:	4909      	ldr	r1, [pc, #36]	; (90021128 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
90021102:	480a      	ldr	r0, [pc, #40]	; (9002112c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90021104:	f008 f9a9 	bl	9002945a <__aeabi_atexit>
90021108:	4b05      	ldr	r3, [pc, #20]	; (90021120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002110a:	60ab      	str	r3, [r5, #8]
9002110c:	4b07      	ldr	r3, [pc, #28]	; (9002112c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002110e:	60eb      	str	r3, [r5, #12]
90021110:	bd38      	pop	{r3, r4, r5, pc}
90021112:	bf00      	nop
90021114:	24039b84 	.word	0x24039b84
90021118:	24000000 	.word	0x24000000
9002111c:	9001de33 	.word	0x9001de33
90021120:	240000a8 	.word	0x240000a8
90021124:	24039b88 	.word	0x24039b88
90021128:	9001de31 	.word	0x9001de31
9002112c:	240000ac 	.word	0x240000ac

90021130 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
90021130:	b510      	push	{r4, lr}
90021132:	4604      	mov	r4, r0
90021134:	f7ff ff88 	bl	90021048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90021138:	4620      	mov	r0, r4
9002113a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002113e:	f7ff bfbd 	b.w	900210bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90021144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90021144:	b538      	push	{r3, r4, r5, lr}
90021146:	4c15      	ldr	r4, [pc, #84]	; (9002119c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90021148:	4605      	mov	r5, r0
9002114a:	7823      	ldrb	r3, [r4, #0]
9002114c:	f3bf 8f5b 	dmb	ish
90021150:	07da      	lsls	r2, r3, #31
90021152:	d40b      	bmi.n	9002116c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
90021154:	4620      	mov	r0, r4
90021156:	f008 f987 	bl	90029468 <__cxa_guard_acquire>
9002115a:	b138      	cbz	r0, 9002116c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9002115c:	4620      	mov	r0, r4
9002115e:	f008 f98f 	bl	90029480 <__cxa_guard_release>
90021162:	4a0f      	ldr	r2, [pc, #60]	; (900211a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021164:	490f      	ldr	r1, [pc, #60]	; (900211a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90021166:	4810      	ldr	r0, [pc, #64]	; (900211a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021168:	f008 f977 	bl	9002945a <__aeabi_atexit>
9002116c:	4c0f      	ldr	r4, [pc, #60]	; (900211ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002116e:	7823      	ldrb	r3, [r4, #0]
90021170:	f3bf 8f5b 	dmb	ish
90021174:	07db      	lsls	r3, r3, #31
90021176:	d40b      	bmi.n	90021190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021178:	4620      	mov	r0, r4
9002117a:	f008 f975 	bl	90029468 <__cxa_guard_acquire>
9002117e:	b138      	cbz	r0, 90021190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90021180:	4620      	mov	r0, r4
90021182:	f008 f97d 	bl	90029480 <__cxa_guard_release>
90021186:	4a06      	ldr	r2, [pc, #24]	; (900211a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90021188:	4909      	ldr	r1, [pc, #36]	; (900211b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9002118a:	480a      	ldr	r0, [pc, #40]	; (900211b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9002118c:	f008 f965 	bl	9002945a <__aeabi_atexit>
90021190:	4b05      	ldr	r3, [pc, #20]	; (900211a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90021192:	622b      	str	r3, [r5, #32]
90021194:	4b07      	ldr	r3, [pc, #28]	; (900211b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90021196:	626b      	str	r3, [r5, #36]	; 0x24
90021198:	bd38      	pop	{r3, r4, r5, pc}
9002119a:	bf00      	nop
9002119c:	24039bb4 	.word	0x24039bb4
900211a0:	24000000 	.word	0x24000000
900211a4:	9001de27 	.word	0x9001de27
900211a8:	240000d8 	.word	0x240000d8
900211ac:	24039bb8 	.word	0x24039bb8
900211b0:	9001de25 	.word	0x9001de25
900211b4:	240000dc 	.word	0x240000dc

900211b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
900211b8:	b538      	push	{r3, r4, r5, lr}
900211ba:	4c15      	ldr	r4, [pc, #84]	; (90021210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
900211bc:	4605      	mov	r5, r0
900211be:	7823      	ldrb	r3, [r4, #0]
900211c0:	f3bf 8f5b 	dmb	ish
900211c4:	07da      	lsls	r2, r3, #31
900211c6:	d40b      	bmi.n	900211e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900211c8:	4620      	mov	r0, r4
900211ca:	f008 f94d 	bl	90029468 <__cxa_guard_acquire>
900211ce:	b138      	cbz	r0, 900211e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
900211d0:	4620      	mov	r0, r4
900211d2:	f008 f955 	bl	90029480 <__cxa_guard_release>
900211d6:	4a0f      	ldr	r2, [pc, #60]	; (90021214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900211d8:	490f      	ldr	r1, [pc, #60]	; (90021218 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
900211da:	4810      	ldr	r0, [pc, #64]	; (9002121c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900211dc:	f008 f93d 	bl	9002945a <__aeabi_atexit>
900211e0:	4c0f      	ldr	r4, [pc, #60]	; (90021220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
900211e2:	7823      	ldrb	r3, [r4, #0]
900211e4:	f3bf 8f5b 	dmb	ish
900211e8:	07db      	lsls	r3, r3, #31
900211ea:	d40b      	bmi.n	90021204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900211ec:	4620      	mov	r0, r4
900211ee:	f008 f93b 	bl	90029468 <__cxa_guard_acquire>
900211f2:	b138      	cbz	r0, 90021204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
900211f4:	4620      	mov	r0, r4
900211f6:	f008 f943 	bl	90029480 <__cxa_guard_release>
900211fa:	4a06      	ldr	r2, [pc, #24]	; (90021214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
900211fc:	4909      	ldr	r1, [pc, #36]	; (90021224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
900211fe:	480a      	ldr	r0, [pc, #40]	; (90021228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90021200:	f008 f92b 	bl	9002945a <__aeabi_atexit>
90021204:	4b05      	ldr	r3, [pc, #20]	; (9002121c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90021206:	61ab      	str	r3, [r5, #24]
90021208:	4b07      	ldr	r3, [pc, #28]	; (90021228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002120a:	61eb      	str	r3, [r5, #28]
9002120c:	bd38      	pop	{r3, r4, r5, pc}
9002120e:	bf00      	nop
90021210:	24039b8c 	.word	0x24039b8c
90021214:	24000000 	.word	0x24000000
90021218:	9001de2b 	.word	0x9001de2b
9002121c:	240000b0 	.word	0x240000b0
90021220:	24039b90 	.word	0x24039b90
90021224:	9001de29 	.word	0x9001de29
90021228:	240000b4 	.word	0x240000b4

9002122c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9002122c:	b510      	push	{r4, lr}
9002122e:	4604      	mov	r4, r0
90021230:	f7ff ff88 	bl	90021144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90021234:	4620      	mov	r0, r4
90021236:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002123a:	f7ff bfbd 	b.w	900211b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

90021240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
90021240:	b538      	push	{r3, r4, r5, lr}
90021242:	4c15      	ldr	r4, [pc, #84]	; (90021298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90021244:	4605      	mov	r5, r0
90021246:	7823      	ldrb	r3, [r4, #0]
90021248:	f3bf 8f5b 	dmb	ish
9002124c:	07da      	lsls	r2, r3, #31
9002124e:	d40b      	bmi.n	90021268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021250:	4620      	mov	r0, r4
90021252:	f008 f909 	bl	90029468 <__cxa_guard_acquire>
90021256:	b138      	cbz	r0, 90021268 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
90021258:	4620      	mov	r0, r4
9002125a:	f008 f911 	bl	90029480 <__cxa_guard_release>
9002125e:	4a0f      	ldr	r2, [pc, #60]	; (9002129c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021260:	490f      	ldr	r1, [pc, #60]	; (900212a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
90021262:	4810      	ldr	r0, [pc, #64]	; (900212a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90021264:	f008 f8f9 	bl	9002945a <__aeabi_atexit>
90021268:	4c0f      	ldr	r4, [pc, #60]	; (900212a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9002126a:	7823      	ldrb	r3, [r4, #0]
9002126c:	f3bf 8f5b 	dmb	ish
90021270:	07db      	lsls	r3, r3, #31
90021272:	d40b      	bmi.n	9002128c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90021274:	4620      	mov	r0, r4
90021276:	f008 f8f7 	bl	90029468 <__cxa_guard_acquire>
9002127a:	b138      	cbz	r0, 9002128c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9002127c:	4620      	mov	r0, r4
9002127e:	f008 f8ff 	bl	90029480 <__cxa_guard_release>
90021282:	4a06      	ldr	r2, [pc, #24]	; (9002129c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90021284:	4909      	ldr	r1, [pc, #36]	; (900212ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90021286:	480a      	ldr	r0, [pc, #40]	; (900212b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021288:	f008 f8e7 	bl	9002945a <__aeabi_atexit>
9002128c:	4b05      	ldr	r3, [pc, #20]	; (900212a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002128e:	632b      	str	r3, [r5, #48]	; 0x30
90021290:	4b07      	ldr	r3, [pc, #28]	; (900212b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90021292:	636b      	str	r3, [r5, #52]	; 0x34
90021294:	bd38      	pop	{r3, r4, r5, pc}
90021296:	bf00      	nop
90021298:	24039bc4 	.word	0x24039bc4
9002129c:	24000000 	.word	0x24000000
900212a0:	9001de1f 	.word	0x9001de1f
900212a4:	240000e8 	.word	0x240000e8
900212a8:	24039bc8 	.word	0x24039bc8
900212ac:	9001de1d 	.word	0x9001de1d
900212b0:	240000ec 	.word	0x240000ec

900212b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
900212b4:	b538      	push	{r3, r4, r5, lr}
900212b6:	4c15      	ldr	r4, [pc, #84]	; (9002130c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
900212b8:	4605      	mov	r5, r0
900212ba:	7823      	ldrb	r3, [r4, #0]
900212bc:	f3bf 8f5b 	dmb	ish
900212c0:	07da      	lsls	r2, r3, #31
900212c2:	d40b      	bmi.n	900212dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900212c4:	4620      	mov	r0, r4
900212c6:	f008 f8cf 	bl	90029468 <__cxa_guard_acquire>
900212ca:	b138      	cbz	r0, 900212dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
900212cc:	4620      	mov	r0, r4
900212ce:	f008 f8d7 	bl	90029480 <__cxa_guard_release>
900212d2:	4a0f      	ldr	r2, [pc, #60]	; (90021310 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900212d4:	490f      	ldr	r1, [pc, #60]	; (90021314 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
900212d6:	4810      	ldr	r0, [pc, #64]	; (90021318 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
900212d8:	f008 f8bf 	bl	9002945a <__aeabi_atexit>
900212dc:	4c0f      	ldr	r4, [pc, #60]	; (9002131c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
900212de:	7823      	ldrb	r3, [r4, #0]
900212e0:	f3bf 8f5b 	dmb	ish
900212e4:	07db      	lsls	r3, r3, #31
900212e6:	d40b      	bmi.n	90021300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900212e8:	4620      	mov	r0, r4
900212ea:	f008 f8bd 	bl	90029468 <__cxa_guard_acquire>
900212ee:	b138      	cbz	r0, 90021300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
900212f0:	4620      	mov	r0, r4
900212f2:	f008 f8c5 	bl	90029480 <__cxa_guard_release>
900212f6:	4a06      	ldr	r2, [pc, #24]	; (90021310 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
900212f8:	4909      	ldr	r1, [pc, #36]	; (90021320 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
900212fa:	480a      	ldr	r0, [pc, #40]	; (90021324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900212fc:	f008 f8ad 	bl	9002945a <__aeabi_atexit>
90021300:	4b05      	ldr	r3, [pc, #20]	; (90021318 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90021302:	62ab      	str	r3, [r5, #40]	; 0x28
90021304:	4b07      	ldr	r3, [pc, #28]	; (90021324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90021306:	62eb      	str	r3, [r5, #44]	; 0x2c
90021308:	bd38      	pop	{r3, r4, r5, pc}
9002130a:	bf00      	nop
9002130c:	24039b94 	.word	0x24039b94
90021310:	24000000 	.word	0x24000000
90021314:	9001de23 	.word	0x9001de23
90021318:	240000b8 	.word	0x240000b8
9002131c:	24039b98 	.word	0x24039b98
90021320:	9001de21 	.word	0x9001de21
90021324:	240000bc 	.word	0x240000bc

90021328 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90021328:	b510      	push	{r4, lr}
9002132a:	4604      	mov	r4, r0
9002132c:	f7ff ff88 	bl	90021240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
90021330:	4620      	mov	r0, r4
90021332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021336:	f7ff bfbd 	b.w	900212b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9002133c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9002133c:	b538      	push	{r3, r4, r5, lr}
9002133e:	4c15      	ldr	r4, [pc, #84]	; (90021394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
90021340:	4605      	mov	r5, r0
90021342:	7823      	ldrb	r3, [r4, #0]
90021344:	f3bf 8f5b 	dmb	ish
90021348:	07da      	lsls	r2, r3, #31
9002134a:	d40b      	bmi.n	90021364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9002134c:	4620      	mov	r0, r4
9002134e:	f008 f88b 	bl	90029468 <__cxa_guard_acquire>
90021352:	b138      	cbz	r0, 90021364 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90021354:	4620      	mov	r0, r4
90021356:	f008 f893 	bl	90029480 <__cxa_guard_release>
9002135a:	4a0f      	ldr	r2, [pc, #60]	; (90021398 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9002135c:	490f      	ldr	r1, [pc, #60]	; (9002139c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9002135e:	4810      	ldr	r0, [pc, #64]	; (900213a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90021360:	f008 f87b 	bl	9002945a <__aeabi_atexit>
90021364:	4c0f      	ldr	r4, [pc, #60]	; (900213a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90021366:	7823      	ldrb	r3, [r4, #0]
90021368:	f3bf 8f5b 	dmb	ish
9002136c:	07db      	lsls	r3, r3, #31
9002136e:	d40b      	bmi.n	90021388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021370:	4620      	mov	r0, r4
90021372:	f008 f879 	bl	90029468 <__cxa_guard_acquire>
90021376:	b138      	cbz	r0, 90021388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90021378:	4620      	mov	r0, r4
9002137a:	f008 f881 	bl	90029480 <__cxa_guard_release>
9002137e:	4a06      	ldr	r2, [pc, #24]	; (90021398 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
90021380:	4909      	ldr	r1, [pc, #36]	; (900213a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
90021382:	480a      	ldr	r0, [pc, #40]	; (900213ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90021384:	f008 f869 	bl	9002945a <__aeabi_atexit>
90021388:	4b05      	ldr	r3, [pc, #20]	; (900213a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9002138a:	652b      	str	r3, [r5, #80]	; 0x50
9002138c:	4b07      	ldr	r3, [pc, #28]	; (900213ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002138e:	656b      	str	r3, [r5, #84]	; 0x54
90021390:	bd38      	pop	{r3, r4, r5, pc}
90021392:	bf00      	nop
90021394:	24039bcc 	.word	0x24039bcc
90021398:	24000000 	.word	0x24000000
9002139c:	9001de0f 	.word	0x9001de0f
900213a0:	240000f0 	.word	0x240000f0
900213a4:	24039bd0 	.word	0x24039bd0
900213a8:	9001de0d 	.word	0x9001de0d
900213ac:	240000f4 	.word	0x240000f4

900213b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900213b0:	b538      	push	{r3, r4, r5, lr}
900213b2:	4c15      	ldr	r4, [pc, #84]	; (90021408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
900213b4:	4605      	mov	r5, r0
900213b6:	7823      	ldrb	r3, [r4, #0]
900213b8:	f3bf 8f5b 	dmb	ish
900213bc:	07da      	lsls	r2, r3, #31
900213be:	d40b      	bmi.n	900213d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900213c0:	4620      	mov	r0, r4
900213c2:	f008 f851 	bl	90029468 <__cxa_guard_acquire>
900213c6:	b138      	cbz	r0, 900213d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
900213c8:	4620      	mov	r0, r4
900213ca:	f008 f859 	bl	90029480 <__cxa_guard_release>
900213ce:	4a0f      	ldr	r2, [pc, #60]	; (9002140c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900213d0:	490f      	ldr	r1, [pc, #60]	; (90021410 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
900213d2:	4810      	ldr	r0, [pc, #64]	; (90021414 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900213d4:	f008 f841 	bl	9002945a <__aeabi_atexit>
900213d8:	4c0f      	ldr	r4, [pc, #60]	; (90021418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
900213da:	7823      	ldrb	r3, [r4, #0]
900213dc:	f3bf 8f5b 	dmb	ish
900213e0:	07db      	lsls	r3, r3, #31
900213e2:	d40b      	bmi.n	900213fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900213e4:	4620      	mov	r0, r4
900213e6:	f008 f83f 	bl	90029468 <__cxa_guard_acquire>
900213ea:	b138      	cbz	r0, 900213fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
900213ec:	4620      	mov	r0, r4
900213ee:	f008 f847 	bl	90029480 <__cxa_guard_release>
900213f2:	4a06      	ldr	r2, [pc, #24]	; (9002140c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
900213f4:	4909      	ldr	r1, [pc, #36]	; (9002141c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
900213f6:	480a      	ldr	r0, [pc, #40]	; (90021420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
900213f8:	f008 f82f 	bl	9002945a <__aeabi_atexit>
900213fc:	4b05      	ldr	r3, [pc, #20]	; (90021414 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
900213fe:	64ab      	str	r3, [r5, #72]	; 0x48
90021400:	4b07      	ldr	r3, [pc, #28]	; (90021420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90021402:	64eb      	str	r3, [r5, #76]	; 0x4c
90021404:	bd38      	pop	{r3, r4, r5, pc}
90021406:	bf00      	nop
90021408:	24039bd4 	.word	0x24039bd4
9002140c:	24000000 	.word	0x24000000
90021410:	9001de13 	.word	0x9001de13
90021414:	240000f8 	.word	0x240000f8
90021418:	24039bd8 	.word	0x24039bd8
9002141c:	9001de11 	.word	0x9001de11
90021420:	240000fc 	.word	0x240000fc

90021424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90021424:	b538      	push	{r3, r4, r5, lr}
90021426:	4c15      	ldr	r4, [pc, #84]	; (9002147c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90021428:	4605      	mov	r5, r0
9002142a:	7823      	ldrb	r3, [r4, #0]
9002142c:	f3bf 8f5b 	dmb	ish
90021430:	07da      	lsls	r2, r3, #31
90021432:	d40b      	bmi.n	9002144c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90021434:	4620      	mov	r0, r4
90021436:	f008 f817 	bl	90029468 <__cxa_guard_acquire>
9002143a:	b138      	cbz	r0, 9002144c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9002143c:	4620      	mov	r0, r4
9002143e:	f008 f81f 	bl	90029480 <__cxa_guard_release>
90021442:	4a0f      	ldr	r2, [pc, #60]	; (90021480 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021444:	490f      	ldr	r1, [pc, #60]	; (90021484 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90021446:	4810      	ldr	r0, [pc, #64]	; (90021488 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021448:	f008 f807 	bl	9002945a <__aeabi_atexit>
9002144c:	4c0f      	ldr	r4, [pc, #60]	; (9002148c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002144e:	7823      	ldrb	r3, [r4, #0]
90021450:	f3bf 8f5b 	dmb	ish
90021454:	07db      	lsls	r3, r3, #31
90021456:	d40b      	bmi.n	90021470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021458:	4620      	mov	r0, r4
9002145a:	f008 f805 	bl	90029468 <__cxa_guard_acquire>
9002145e:	b138      	cbz	r0, 90021470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
90021460:	4620      	mov	r0, r4
90021462:	f008 f80d 	bl	90029480 <__cxa_guard_release>
90021466:	4a06      	ldr	r2, [pc, #24]	; (90021480 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90021468:	4909      	ldr	r1, [pc, #36]	; (90021490 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9002146a:	480a      	ldr	r0, [pc, #40]	; (90021494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9002146c:	f007 fff5 	bl	9002945a <__aeabi_atexit>
90021470:	4b05      	ldr	r3, [pc, #20]	; (90021488 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90021472:	642b      	str	r3, [r5, #64]	; 0x40
90021474:	4b07      	ldr	r3, [pc, #28]	; (90021494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90021476:	646b      	str	r3, [r5, #68]	; 0x44
90021478:	bd38      	pop	{r3, r4, r5, pc}
9002147a:	bf00      	nop
9002147c:	24039b9c 	.word	0x24039b9c
90021480:	24000000 	.word	0x24000000
90021484:	9001de17 	.word	0x9001de17
90021488:	240000c0 	.word	0x240000c0
9002148c:	24039ba0 	.word	0x24039ba0
90021490:	9001de15 	.word	0x9001de15
90021494:	240000c4 	.word	0x240000c4

90021498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90021498:	b538      	push	{r3, r4, r5, lr}
9002149a:	4c15      	ldr	r4, [pc, #84]	; (900214f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9002149c:	4605      	mov	r5, r0
9002149e:	7823      	ldrb	r3, [r4, #0]
900214a0:	f3bf 8f5b 	dmb	ish
900214a4:	07da      	lsls	r2, r3, #31
900214a6:	d40b      	bmi.n	900214c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900214a8:	4620      	mov	r0, r4
900214aa:	f007 ffdd 	bl	90029468 <__cxa_guard_acquire>
900214ae:	b138      	cbz	r0, 900214c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900214b0:	4620      	mov	r0, r4
900214b2:	f007 ffe5 	bl	90029480 <__cxa_guard_release>
900214b6:	4a0f      	ldr	r2, [pc, #60]	; (900214f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900214b8:	490f      	ldr	r1, [pc, #60]	; (900214f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
900214ba:	4810      	ldr	r0, [pc, #64]	; (900214fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900214bc:	f007 ffcd 	bl	9002945a <__aeabi_atexit>
900214c0:	4c0f      	ldr	r4, [pc, #60]	; (90021500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
900214c2:	7823      	ldrb	r3, [r4, #0]
900214c4:	f3bf 8f5b 	dmb	ish
900214c8:	07db      	lsls	r3, r3, #31
900214ca:	d40b      	bmi.n	900214e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900214cc:	4620      	mov	r0, r4
900214ce:	f007 ffcb 	bl	90029468 <__cxa_guard_acquire>
900214d2:	b138      	cbz	r0, 900214e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
900214d4:	4620      	mov	r0, r4
900214d6:	f007 ffd3 	bl	90029480 <__cxa_guard_release>
900214da:	4a06      	ldr	r2, [pc, #24]	; (900214f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
900214dc:	4909      	ldr	r1, [pc, #36]	; (90021504 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
900214de:	480a      	ldr	r0, [pc, #40]	; (90021508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900214e0:	f007 ffbb 	bl	9002945a <__aeabi_atexit>
900214e4:	4b05      	ldr	r3, [pc, #20]	; (900214fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
900214e6:	63ab      	str	r3, [r5, #56]	; 0x38
900214e8:	4b07      	ldr	r3, [pc, #28]	; (90021508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
900214ea:	63eb      	str	r3, [r5, #60]	; 0x3c
900214ec:	bd38      	pop	{r3, r4, r5, pc}
900214ee:	bf00      	nop
900214f0:	24039bbc 	.word	0x24039bbc
900214f4:	24000000 	.word	0x24000000
900214f8:	9001de1b 	.word	0x9001de1b
900214fc:	240000e0 	.word	0x240000e0
90021500:	24039bc0 	.word	0x24039bc0
90021504:	9001de19 	.word	0x9001de19
90021508:	240000e4 	.word	0x240000e4

9002150c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9002150c:	b510      	push	{r4, lr}
9002150e:	4604      	mov	r4, r0
90021510:	f7ff ff14 	bl	9002133c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90021514:	4620      	mov	r0, r4
90021516:	f7ff ff85 	bl	90021424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9002151a:	4620      	mov	r0, r4
9002151c:	f7ff ff48 	bl	900213b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90021520:	4620      	mov	r0, r4
90021522:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021526:	f7ff bfb7 	b.w	90021498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9002152c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9002152c:	b538      	push	{r3, r4, r5, lr}
9002152e:	4c15      	ldr	r4, [pc, #84]	; (90021584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90021530:	4605      	mov	r5, r0
90021532:	7823      	ldrb	r3, [r4, #0]
90021534:	f3bf 8f5b 	dmb	ish
90021538:	07da      	lsls	r2, r3, #31
9002153a:	d40b      	bmi.n	90021554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9002153c:	4620      	mov	r0, r4
9002153e:	f007 ff93 	bl	90029468 <__cxa_guard_acquire>
90021542:	b138      	cbz	r0, 90021554 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90021544:	4620      	mov	r0, r4
90021546:	f007 ff9b 	bl	90029480 <__cxa_guard_release>
9002154a:	4a0f      	ldr	r2, [pc, #60]	; (90021588 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002154c:	490f      	ldr	r1, [pc, #60]	; (9002158c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9002154e:	4810      	ldr	r0, [pc, #64]	; (90021590 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90021550:	f007 ff83 	bl	9002945a <__aeabi_atexit>
90021554:	4c0f      	ldr	r4, [pc, #60]	; (90021594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90021556:	7823      	ldrb	r3, [r4, #0]
90021558:	f3bf 8f5b 	dmb	ish
9002155c:	07db      	lsls	r3, r3, #31
9002155e:	d40b      	bmi.n	90021578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021560:	4620      	mov	r0, r4
90021562:	f007 ff81 	bl	90029468 <__cxa_guard_acquire>
90021566:	b138      	cbz	r0, 90021578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90021568:	4620      	mov	r0, r4
9002156a:	f007 ff89 	bl	90029480 <__cxa_guard_release>
9002156e:	4a06      	ldr	r2, [pc, #24]	; (90021588 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90021570:	4909      	ldr	r1, [pc, #36]	; (90021598 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90021572:	480a      	ldr	r0, [pc, #40]	; (9002159c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90021574:	f007 ff71 	bl	9002945a <__aeabi_atexit>
90021578:	4b05      	ldr	r3, [pc, #20]	; (90021590 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9002157a:	662b      	str	r3, [r5, #96]	; 0x60
9002157c:	4b07      	ldr	r3, [pc, #28]	; (9002159c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002157e:	666b      	str	r3, [r5, #100]	; 0x64
90021580:	bd38      	pop	{r3, r4, r5, pc}
90021582:	bf00      	nop
90021584:	24039ba4 	.word	0x24039ba4
90021588:	24000000 	.word	0x24000000
9002158c:	9001de07 	.word	0x9001de07
90021590:	240000c8 	.word	0x240000c8
90021594:	24039ba8 	.word	0x24039ba8
90021598:	9001de05 	.word	0x9001de05
9002159c:	240000cc 	.word	0x240000cc

900215a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900215a0:	b538      	push	{r3, r4, r5, lr}
900215a2:	4c15      	ldr	r4, [pc, #84]	; (900215f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
900215a4:	4605      	mov	r5, r0
900215a6:	7823      	ldrb	r3, [r4, #0]
900215a8:	f3bf 8f5b 	dmb	ish
900215ac:	07da      	lsls	r2, r3, #31
900215ae:	d40b      	bmi.n	900215c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900215b0:	4620      	mov	r0, r4
900215b2:	f007 ff59 	bl	90029468 <__cxa_guard_acquire>
900215b6:	b138      	cbz	r0, 900215c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
900215b8:	4620      	mov	r0, r4
900215ba:	f007 ff61 	bl	90029480 <__cxa_guard_release>
900215be:	4a0f      	ldr	r2, [pc, #60]	; (900215fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900215c0:	490f      	ldr	r1, [pc, #60]	; (90021600 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
900215c2:	4810      	ldr	r0, [pc, #64]	; (90021604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900215c4:	f007 ff49 	bl	9002945a <__aeabi_atexit>
900215c8:	4c0f      	ldr	r4, [pc, #60]	; (90021608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
900215ca:	7823      	ldrb	r3, [r4, #0]
900215cc:	f3bf 8f5b 	dmb	ish
900215d0:	07db      	lsls	r3, r3, #31
900215d2:	d40b      	bmi.n	900215ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900215d4:	4620      	mov	r0, r4
900215d6:	f007 ff47 	bl	90029468 <__cxa_guard_acquire>
900215da:	b138      	cbz	r0, 900215ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
900215dc:	4620      	mov	r0, r4
900215de:	f007 ff4f 	bl	90029480 <__cxa_guard_release>
900215e2:	4a06      	ldr	r2, [pc, #24]	; (900215fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
900215e4:	4909      	ldr	r1, [pc, #36]	; (9002160c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
900215e6:	480a      	ldr	r0, [pc, #40]	; (90021610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900215e8:	f007 ff37 	bl	9002945a <__aeabi_atexit>
900215ec:	4b05      	ldr	r3, [pc, #20]	; (90021604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
900215ee:	65ab      	str	r3, [r5, #88]	; 0x58
900215f0:	4b07      	ldr	r3, [pc, #28]	; (90021610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
900215f2:	65eb      	str	r3, [r5, #92]	; 0x5c
900215f4:	bd38      	pop	{r3, r4, r5, pc}
900215f6:	bf00      	nop
900215f8:	24039b7c 	.word	0x24039b7c
900215fc:	24000000 	.word	0x24000000
90021600:	9001de0b 	.word	0x9001de0b
90021604:	240000a0 	.word	0x240000a0
90021608:	24039b80 	.word	0x24039b80
9002160c:	9001de09 	.word	0x9001de09
90021610:	240000a4 	.word	0x240000a4

90021614 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90021614:	b510      	push	{r4, lr}
90021616:	4604      	mov	r4, r0
90021618:	f7ff ff88 	bl	9002152c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9002161c:	4620      	mov	r0, r4
9002161e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021622:	f7ff bfbd 	b.w	900215a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90021628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90021628:	b538      	push	{r3, r4, r5, lr}
9002162a:	4c15      	ldr	r4, [pc, #84]	; (90021680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9002162c:	4605      	mov	r5, r0
9002162e:	7823      	ldrb	r3, [r4, #0]
90021630:	f3bf 8f5b 	dmb	ish
90021634:	07da      	lsls	r2, r3, #31
90021636:	d40b      	bmi.n	90021650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021638:	4620      	mov	r0, r4
9002163a:	f007 ff15 	bl	90029468 <__cxa_guard_acquire>
9002163e:	b138      	cbz	r0, 90021650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90021640:	4620      	mov	r0, r4
90021642:	f007 ff1d 	bl	90029480 <__cxa_guard_release>
90021646:	4a0f      	ldr	r2, [pc, #60]	; (90021684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90021648:	490f      	ldr	r1, [pc, #60]	; (90021688 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9002164a:	4810      	ldr	r0, [pc, #64]	; (9002168c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9002164c:	f007 ff05 	bl	9002945a <__aeabi_atexit>
90021650:	4c0f      	ldr	r4, [pc, #60]	; (90021690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90021652:	7823      	ldrb	r3, [r4, #0]
90021654:	f3bf 8f5b 	dmb	ish
90021658:	07db      	lsls	r3, r3, #31
9002165a:	d40b      	bmi.n	90021674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9002165c:	4620      	mov	r0, r4
9002165e:	f007 ff03 	bl	90029468 <__cxa_guard_acquire>
90021662:	b138      	cbz	r0, 90021674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90021664:	4620      	mov	r0, r4
90021666:	f007 ff0b 	bl	90029480 <__cxa_guard_release>
9002166a:	4a06      	ldr	r2, [pc, #24]	; (90021684 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9002166c:	4909      	ldr	r1, [pc, #36]	; (90021694 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002166e:	480a      	ldr	r0, [pc, #40]	; (90021698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90021670:	f007 fef3 	bl	9002945a <__aeabi_atexit>
90021674:	4b05      	ldr	r3, [pc, #20]	; (9002168c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90021676:	672b      	str	r3, [r5, #112]	; 0x70
90021678:	4b07      	ldr	r3, [pc, #28]	; (90021698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002167a:	676b      	str	r3, [r5, #116]	; 0x74
9002167c:	bd38      	pop	{r3, r4, r5, pc}
9002167e:	bf00      	nop
90021680:	24039b74 	.word	0x24039b74
90021684:	24000000 	.word	0x24000000
90021688:	9001ddff 	.word	0x9001ddff
9002168c:	24000098 	.word	0x24000098
90021690:	24039b78 	.word	0x24039b78
90021694:	9001ddfd 	.word	0x9001ddfd
90021698:	2400009c 	.word	0x2400009c

9002169c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9002169c:	b538      	push	{r3, r4, r5, lr}
9002169e:	4c15      	ldr	r4, [pc, #84]	; (900216f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900216a0:	4605      	mov	r5, r0
900216a2:	7823      	ldrb	r3, [r4, #0]
900216a4:	f3bf 8f5b 	dmb	ish
900216a8:	07da      	lsls	r2, r3, #31
900216aa:	d40b      	bmi.n	900216c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900216ac:	4620      	mov	r0, r4
900216ae:	f007 fedb 	bl	90029468 <__cxa_guard_acquire>
900216b2:	b138      	cbz	r0, 900216c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
900216b4:	4620      	mov	r0, r4
900216b6:	f007 fee3 	bl	90029480 <__cxa_guard_release>
900216ba:	4a0f      	ldr	r2, [pc, #60]	; (900216f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900216bc:	490f      	ldr	r1, [pc, #60]	; (900216fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
900216be:	4810      	ldr	r0, [pc, #64]	; (90021700 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900216c0:	f007 fecb 	bl	9002945a <__aeabi_atexit>
900216c4:	4c0f      	ldr	r4, [pc, #60]	; (90021704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
900216c6:	7823      	ldrb	r3, [r4, #0]
900216c8:	f3bf 8f5b 	dmb	ish
900216cc:	07db      	lsls	r3, r3, #31
900216ce:	d40b      	bmi.n	900216e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900216d0:	4620      	mov	r0, r4
900216d2:	f007 fec9 	bl	90029468 <__cxa_guard_acquire>
900216d6:	b138      	cbz	r0, 900216e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
900216d8:	4620      	mov	r0, r4
900216da:	f007 fed1 	bl	90029480 <__cxa_guard_release>
900216de:	4a06      	ldr	r2, [pc, #24]	; (900216f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
900216e0:	4909      	ldr	r1, [pc, #36]	; (90021708 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
900216e2:	480a      	ldr	r0, [pc, #40]	; (9002170c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900216e4:	f007 feb9 	bl	9002945a <__aeabi_atexit>
900216e8:	4b05      	ldr	r3, [pc, #20]	; (90021700 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
900216ea:	66ab      	str	r3, [r5, #104]	; 0x68
900216ec:	4b07      	ldr	r3, [pc, #28]	; (9002170c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
900216ee:	66eb      	str	r3, [r5, #108]	; 0x6c
900216f0:	bd38      	pop	{r3, r4, r5, pc}
900216f2:	bf00      	nop
900216f4:	24039b6c 	.word	0x24039b6c
900216f8:	24000000 	.word	0x24000000
900216fc:	9001de03 	.word	0x9001de03
90021700:	24000090 	.word	0x24000090
90021704:	24039b70 	.word	0x24039b70
90021708:	9001de01 	.word	0x9001de01
9002170c:	24000094 	.word	0x24000094

90021710 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90021710:	b510      	push	{r4, lr}
90021712:	4604      	mov	r4, r0
90021714:	f7ff ff88 	bl	90021628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90021718:	4620      	mov	r0, r4
9002171a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002171e:	f7ff bfbd 	b.w	9002169c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90021722 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90021722:	b510      	push	{r4, lr}
90021724:	4604      	mov	r4, r0
90021726:	f7ff fff3 	bl	90021710 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9002172a:	4620      	mov	r0, r4
9002172c:	f7ff ff72 	bl	90021614 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90021730:	4620      	mov	r0, r4
90021732:	f7ff fdf9 	bl	90021328 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90021736:	4620      	mov	r0, r4
90021738:	f7ff fcfa 	bl	90021130 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9002173c:	4620      	mov	r0, r4
9002173e:	f7ff fd75 	bl	9002122c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90021742:	4620      	mov	r0, r4
90021744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021748:	f7ff bee0 	b.w	9002150c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9002174c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9002174c:	b538      	push	{r3, r4, r5, lr}
9002174e:	4c0b      	ldr	r4, [pc, #44]	; (9002177c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90021750:	4605      	mov	r5, r0
90021752:	7823      	ldrb	r3, [r4, #0]
90021754:	f3bf 8f5b 	dmb	ish
90021758:	07db      	lsls	r3, r3, #31
9002175a:	d40b      	bmi.n	90021774 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9002175c:	4620      	mov	r0, r4
9002175e:	f007 fe83 	bl	90029468 <__cxa_guard_acquire>
90021762:	b138      	cbz	r0, 90021774 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90021764:	4620      	mov	r0, r4
90021766:	f007 fe8b 	bl	90029480 <__cxa_guard_release>
9002176a:	4a05      	ldr	r2, [pc, #20]	; (90021780 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9002176c:	4905      	ldr	r1, [pc, #20]	; (90021784 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9002176e:	4806      	ldr	r0, [pc, #24]	; (90021788 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021770:	f007 fe73 	bl	9002945a <__aeabi_atexit>
90021774:	4b04      	ldr	r3, [pc, #16]	; (90021788 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90021776:	67ab      	str	r3, [r5, #120]	; 0x78
90021778:	bd38      	pop	{r3, r4, r5, pc}
9002177a:	bf00      	nop
9002177c:	24039b60 	.word	0x24039b60
90021780:	24000000 	.word	0x24000000
90021784:	9001ddfb 	.word	0x9001ddfb
90021788:	24000088 	.word	0x24000088

9002178c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9002178c:	b538      	push	{r3, r4, r5, lr}
9002178e:	4c0b      	ldr	r4, [pc, #44]	; (900217bc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90021790:	4605      	mov	r5, r0
90021792:	7823      	ldrb	r3, [r4, #0]
90021794:	f3bf 8f5b 	dmb	ish
90021798:	07db      	lsls	r3, r3, #31
9002179a:	d40b      	bmi.n	900217b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9002179c:	4620      	mov	r0, r4
9002179e:	f007 fe63 	bl	90029468 <__cxa_guard_acquire>
900217a2:	b138      	cbz	r0, 900217b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900217a4:	4620      	mov	r0, r4
900217a6:	f007 fe6b 	bl	90029480 <__cxa_guard_release>
900217aa:	4a05      	ldr	r2, [pc, #20]	; (900217c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
900217ac:	4905      	ldr	r1, [pc, #20]	; (900217c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
900217ae:	4806      	ldr	r0, [pc, #24]	; (900217c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900217b0:	f007 fe53 	bl	9002945a <__aeabi_atexit>
900217b4:	4b04      	ldr	r3, [pc, #16]	; (900217c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
900217b6:	67eb      	str	r3, [r5, #124]	; 0x7c
900217b8:	bd38      	pop	{r3, r4, r5, pc}
900217ba:	bf00      	nop
900217bc:	24039b64 	.word	0x24039b64
900217c0:	24000000 	.word	0x24000000
900217c4:	9001ddf9 	.word	0x9001ddf9
900217c8:	2400008c 	.word	0x2400008c

900217cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
900217cc:	b570      	push	{r4, r5, r6, lr}
900217ce:	4d0d      	ldr	r5, [pc, #52]	; (90021804 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
900217d0:	4606      	mov	r6, r0
900217d2:	4c0d      	ldr	r4, [pc, #52]	; (90021808 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
900217d4:	782b      	ldrb	r3, [r5, #0]
900217d6:	f3bf 8f5b 	dmb	ish
900217da:	f013 0f01 	tst.w	r3, #1
900217de:	d10d      	bne.n	900217fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900217e0:	4628      	mov	r0, r5
900217e2:	f007 fe41 	bl	90029468 <__cxa_guard_acquire>
900217e6:	b148      	cbz	r0, 900217fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
900217e8:	4b08      	ldr	r3, [pc, #32]	; (9002180c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
900217ea:	4628      	mov	r0, r5
900217ec:	6023      	str	r3, [r4, #0]
900217ee:	f007 fe47 	bl	90029480 <__cxa_guard_release>
900217f2:	4a07      	ldr	r2, [pc, #28]	; (90021810 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
900217f4:	4620      	mov	r0, r4
900217f6:	4907      	ldr	r1, [pc, #28]	; (90021814 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
900217f8:	f007 fe2f 	bl	9002945a <__aeabi_atexit>
900217fc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
90021800:	bd70      	pop	{r4, r5, r6, pc}
90021802:	bf00      	nop
90021804:	24039b68 	.word	0x24039b68
90021808:	24039bdc 	.word	0x24039bdc
9002180c:	9002dd34 	.word	0x9002dd34
90021810:	24000000 	.word	0x24000000
90021814:	9001ddf7 	.word	0x9001ddf7

90021818 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90021818:	b510      	push	{r4, lr}
9002181a:	4604      	mov	r4, r0
9002181c:	f7ff ff96 	bl	9002174c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90021820:	4620      	mov	r0, r4
90021822:	f7ff ffb3 	bl	9002178c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90021826:	4620      	mov	r0, r4
90021828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002182c:	f7ff bfce 	b.w	900217cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90021830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90021830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021834:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
90021838:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9002183c:	2d00      	cmp	r5, #0
9002183e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
90021842:	fb05 4c0e 	mla	ip, r5, lr, r4
90021846:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9002184a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9002184e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
90021852:	eb02 0a0c 	add.w	sl, r2, ip
90021856:	8808      	ldrh	r0, [r1, #0]
90021858:	f2c0 80b0 	blt.w	900219bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9002185c:	45ab      	cmp	fp, r5
9002185e:	f340 80ad 	ble.w	900219bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90021862:	2c00      	cmp	r4, #0
90021864:	f2c0 80a8 	blt.w	900219b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90021868:	45a6      	cmp	lr, r4
9002186a:	f340 80a5 	ble.w	900219b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9002186e:	f812 200c 	ldrb.w	r2, [r2, ip]
90021872:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90021876:	1c62      	adds	r2, r4, #1
90021878:	f100 80a3 	bmi.w	900219c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002187c:	4596      	cmp	lr, r2
9002187e:	f340 80a0 	ble.w	900219c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90021882:	f1b9 0f00 	cmp.w	r9, #0
90021886:	f000 809c 	beq.w	900219c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002188a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002188e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021892:	3501      	adds	r5, #1
90021894:	f100 8099 	bmi.w	900219ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90021898:	45ab      	cmp	fp, r5
9002189a:	f340 8096 	ble.w	900219ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002189e:	2f00      	cmp	r7, #0
900218a0:	f000 8093 	beq.w	900219ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
900218a4:	2c00      	cmp	r4, #0
900218a6:	f2c0 808e 	blt.w	900219c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900218aa:	45a6      	cmp	lr, r4
900218ac:	f340 808b 	ble.w	900219c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
900218b0:	f81a 200e 	ldrb.w	r2, [sl, lr]
900218b4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
900218b8:	3401      	adds	r4, #1
900218ba:	f100 8089 	bmi.w	900219d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900218be:	45a6      	cmp	lr, r4
900218c0:	f340 8086 	ble.w	900219d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900218c4:	f1b9 0f00 	cmp.w	r9, #0
900218c8:	f000 8082 	beq.w	900219d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900218cc:	44d6      	add	lr, sl
900218ce:	f89e 2001 	ldrb.w	r2, [lr, #1]
900218d2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
900218d6:	ea4f 4408 	mov.w	r4, r8, lsl #16
900218da:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900218de:	fb19 fe07 	smulbb	lr, r9, r7
900218e2:	f1c7 0210 	rsb	r2, r7, #16
900218e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900218ea:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900218ee:	eba2 0209 	sub.w	r2, r2, r9
900218f2:	ea44 0808 	orr.w	r8, r4, r8
900218f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
900218fa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900218fe:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90021902:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021906:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9002190a:	ea44 0c0c 	orr.w	ip, r4, ip
9002190e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90021912:	fb04 f40c 	mul.w	r4, r4, ip
90021916:	fb02 4808 	mla	r8, r2, r8, r4
9002191a:	041a      	lsls	r2, r3, #16
9002191c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021920:	b2b4      	uxth	r4, r6
90021922:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021926:	43f6      	mvns	r6, r6
90021928:	4313      	orrs	r3, r2
9002192a:	042a      	lsls	r2, r5, #16
9002192c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021930:	b2f6      	uxtb	r6, r6
90021932:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90021936:	fb0e 8303 	mla	r3, lr, r3, r8
9002193a:	432a      	orrs	r2, r5
9002193c:	fb07 3202 	mla	r2, r7, r2, r3
90021940:	10c7      	asrs	r7, r0, #3
90021942:	0d53      	lsrs	r3, r2, #21
90021944:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021948:	0952      	lsrs	r2, r2, #5
9002194a:	fb17 f706 	smulbb	r7, r7, r6
9002194e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021952:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021956:	431a      	orrs	r2, r3
90021958:	b293      	uxth	r3, r2
9002195a:	1202      	asrs	r2, r0, #8
9002195c:	121d      	asrs	r5, r3, #8
9002195e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021962:	00c0      	lsls	r0, r0, #3
90021964:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021968:	fb12 f206 	smulbb	r2, r2, r6
9002196c:	b2c0      	uxtb	r0, r0
9002196e:	fb05 2504 	mla	r5, r5, r4, r2
90021972:	10da      	asrs	r2, r3, #3
90021974:	fb10 f006 	smulbb	r0, r0, r6
90021978:	00db      	lsls	r3, r3, #3
9002197a:	b2ad      	uxth	r5, r5
9002197c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021980:	b2db      	uxtb	r3, r3
90021982:	fb02 7204 	mla	r2, r2, r4, r7
90021986:	fb03 0004 	mla	r0, r3, r4, r0
9002198a:	1c6b      	adds	r3, r5, #1
9002198c:	b292      	uxth	r2, r2
9002198e:	b280      	uxth	r0, r0
90021990:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021994:	1c43      	adds	r3, r0, #1
90021996:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002199a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002199e:	1c50      	adds	r0, r2, #1
900219a0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900219a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900219a8:	0952      	lsrs	r2, r2, #5
900219aa:	432b      	orrs	r3, r5
900219ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900219b0:	4313      	orrs	r3, r2
900219b2:	800b      	strh	r3, [r1, #0]
900219b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900219b8:	4680      	mov	r8, r0
900219ba:	e75c      	b.n	90021876 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
900219bc:	4684      	mov	ip, r0
900219be:	4680      	mov	r8, r0
900219c0:	e767      	b.n	90021892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900219c2:	4684      	mov	ip, r0
900219c4:	e765      	b.n	90021892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900219c6:	4605      	mov	r5, r0
900219c8:	e776      	b.n	900218b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
900219ca:	4603      	mov	r3, r0
900219cc:	4605      	mov	r5, r0
900219ce:	e782      	b.n	900218d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
900219d0:	4603      	mov	r3, r0
900219d2:	e780      	b.n	900218d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

900219d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900219d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900219d8:	b099      	sub	sp, #100	; 0x64
900219da:	9215      	str	r2, [sp, #84]	; 0x54
900219dc:	9309      	str	r3, [sp, #36]	; 0x24
900219de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
900219e0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
900219e4:	9016      	str	r0, [sp, #88]	; 0x58
900219e6:	930d      	str	r3, [sp, #52]	; 0x34
900219e8:	6850      	ldr	r0, [r2, #4]
900219ea:	910c      	str	r1, [sp, #48]	; 0x30
900219ec:	6812      	ldr	r2, [r2, #0]
900219ee:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
900219f2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
900219f6:	fb00 1303 	mla	r3, r0, r3, r1
900219fa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900219fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021a00:	681b      	ldr	r3, [r3, #0]
90021a02:	930b      	str	r3, [sp, #44]	; 0x2c
90021a04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021a06:	685e      	ldr	r6, [r3, #4]
90021a08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021a0a:	3604      	adds	r6, #4
90021a0c:	43db      	mvns	r3, r3
90021a0e:	b2db      	uxtb	r3, r3
90021a10:	930a      	str	r3, [sp, #40]	; 0x28
90021a12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021a14:	2b00      	cmp	r3, #0
90021a16:	dc03      	bgt.n	90021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90021a18:	9b15      	ldr	r3, [sp, #84]	; 0x54
90021a1a:	2b00      	cmp	r3, #0
90021a1c:	f340 8225 	ble.w	90021e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021a20:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021a22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021a26:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021a2a:	1e48      	subs	r0, r1, #1
90021a2c:	1e57      	subs	r7, r2, #1
90021a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021a30:	2b00      	cmp	r3, #0
90021a32:	f340 80e3 	ble.w	90021bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90021a36:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90021a3a:	ea4f 4325 	mov.w	r3, r5, asr #16
90021a3e:	d406      	bmi.n	90021a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021a40:	4584      	cmp	ip, r0
90021a42:	da04      	bge.n	90021a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021a44:	2b00      	cmp	r3, #0
90021a46:	db02      	blt.n	90021a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021a48:	42bb      	cmp	r3, r7
90021a4a:	f2c0 80d8 	blt.w	90021bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90021a4e:	f11c 0c01 	adds.w	ip, ip, #1
90021a52:	f100 80c9 	bmi.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021a56:	4561      	cmp	r1, ip
90021a58:	f2c0 80c6 	blt.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021a5c:	3301      	adds	r3, #1
90021a5e:	f100 80c3 	bmi.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021a62:	429a      	cmp	r2, r3
90021a64:	f2c0 80c0 	blt.w	90021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021a68:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90021a6c:	4647      	mov	r7, r8
90021a6e:	f1bb 0f00 	cmp.w	fp, #0
90021a72:	f340 80e3 	ble.w	90021c3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90021a76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90021a78:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021a7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021a7e:	f3ca 3003 	ubfx	r0, sl, #12, #4
90021a82:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90021a86:	ea5f 422a 	movs.w	r2, sl, asr #16
90021a8a:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021a8e:	689b      	ldr	r3, [r3, #8]
90021a90:	f100 8121 	bmi.w	90021cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021a94:	f103 39ff 	add.w	r9, r3, #4294967295
90021a98:	454a      	cmp	r2, r9
90021a9a:	f280 811c 	bge.w	90021cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021a9e:	f1bc 0f00 	cmp.w	ip, #0
90021aa2:	f2c0 8118 	blt.w	90021cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021aa6:	f10e 39ff 	add.w	r9, lr, #4294967295
90021aaa:	45cc      	cmp	ip, r9
90021aac:	f280 8113 	bge.w	90021cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021ab0:	b21b      	sxth	r3, r3
90021ab2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021ab4:	fb0c 2203 	mla	r2, ip, r3, r2
90021ab8:	eb04 0902 	add.w	r9, r4, r2
90021abc:	5ca2      	ldrb	r2, [r4, r2]
90021abe:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90021ac2:	2800      	cmp	r0, #0
90021ac4:	f000 80fe 	beq.w	90021cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021ac8:	f899 2001 	ldrb.w	r2, [r9, #1]
90021acc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021ad0:	9211      	str	r2, [sp, #68]	; 0x44
90021ad2:	b151      	cbz	r1, 90021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021ad4:	eb09 0203 	add.w	r2, r9, r3
90021ad8:	f819 3003 	ldrb.w	r3, [r9, r3]
90021adc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021ae0:	930f      	str	r3, [sp, #60]	; 0x3c
90021ae2:	7853      	ldrb	r3, [r2, #1]
90021ae4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021ae8:	9312      	str	r3, [sp, #72]	; 0x48
90021aea:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021aec:	fb10 f201 	smulbb	r2, r0, r1
90021af0:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021af2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021af6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021afa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021afe:	10d2      	asrs	r2, r2, #3
90021b00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021b04:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90021b08:	ea4c 0c03 	orr.w	ip, ip, r3
90021b0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90021b0e:	041b      	lsls	r3, r3, #16
90021b10:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021b14:	4323      	orrs	r3, r4
90021b16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021b18:	4353      	muls	r3, r2
90021b1a:	fb09 330c 	mla	r3, r9, ip, r3
90021b1e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021b22:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021b26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021b2a:	ea4c 0e0e 	orr.w	lr, ip, lr
90021b2e:	f1c1 0c10 	rsb	ip, r1, #16
90021b32:	ebac 0c00 	sub.w	ip, ip, r0
90021b36:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021b3a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021b3e:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021b42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021b44:	0418      	lsls	r0, r3, #16
90021b46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021b4a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90021b4e:	4318      	orrs	r0, r3
90021b50:	fb02 c200 	mla	r2, r2, r0, ip
90021b54:	8838      	ldrh	r0, [r7, #0]
90021b56:	0d53      	lsrs	r3, r2, #21
90021b58:	0952      	lsrs	r2, r2, #5
90021b5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021b5e:	1201      	asrs	r1, r0, #8
90021b60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021b64:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021b68:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021b6c:	00c0      	lsls	r0, r0, #3
90021b6e:	431a      	orrs	r2, r3
90021b70:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90021b74:	fb11 f104 	smulbb	r1, r1, r4
90021b78:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90021b7c:	b292      	uxth	r2, r2
90021b7e:	fb1e fe04 	smulbb	lr, lr, r4
90021b82:	b2c0      	uxtb	r0, r0
90021b84:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021b88:	fb10 f004 	smulbb	r0, r0, r4
90021b8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90021b90:	fb0c 1c03 	mla	ip, ip, r3, r1
90021b94:	10d1      	asrs	r1, r2, #3
90021b96:	00d2      	lsls	r2, r2, #3
90021b98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021b9c:	fa1f fc8c 	uxth.w	ip, ip
90021ba0:	b2d2      	uxtb	r2, r2
90021ba2:	fb01 e103 	mla	r1, r1, r3, lr
90021ba6:	fb02 0303 	mla	r3, r2, r3, r0
90021baa:	b289      	uxth	r1, r1
90021bac:	b29a      	uxth	r2, r3
90021bae:	f10c 0301 	add.w	r3, ip, #1
90021bb2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021bb6:	1c53      	adds	r3, r2, #1
90021bb8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021bbc:	1c4a      	adds	r2, r1, #1
90021bbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90021bc2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021bc6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021bca:	0949      	lsrs	r1, r1, #5
90021bcc:	ea43 030c 	orr.w	r3, r3, ip
90021bd0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021bd4:	430b      	orrs	r3, r1
90021bd6:	803b      	strh	r3, [r7, #0]
90021bd8:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021bda:	3702      	adds	r7, #2
90021bdc:	f10b 3bff 	add.w	fp, fp, #4294967295
90021be0:	449a      	add	sl, r3
90021be2:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021be4:	441d      	add	r5, r3
90021be6:	e742      	b.n	90021a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021be8:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021bea:	f108 0802 	add.w	r8, r8, #2
90021bee:	449a      	add	sl, r3
90021bf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021bf2:	441d      	add	r5, r3
90021bf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021bf6:	3b01      	subs	r3, #1
90021bf8:	9309      	str	r3, [sp, #36]	; 0x24
90021bfa:	e718      	b.n	90021a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021bfc:	d023      	beq.n	90021c46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c00:	9825      	ldr	r0, [sp, #148]	; 0x94
90021c02:	3b01      	subs	r3, #1
90021c04:	fb00 a003 	mla	r0, r0, r3, sl
90021c08:	1400      	asrs	r0, r0, #16
90021c0a:	f53f af2d 	bmi.w	90021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021c0e:	3901      	subs	r1, #1
90021c10:	4288      	cmp	r0, r1
90021c12:	f6bf af29 	bge.w	90021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021c16:	9926      	ldr	r1, [sp, #152]	; 0x98
90021c18:	fb01 5303 	mla	r3, r1, r3, r5
90021c1c:	141b      	asrs	r3, r3, #16
90021c1e:	f53f af23 	bmi.w	90021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021c22:	3a01      	subs	r2, #1
90021c24:	4293      	cmp	r3, r2
90021c26:	f6bf af1f 	bge.w	90021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90021c2a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90021c2e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
90021c32:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
90021c36:	f1be 0f00 	cmp.w	lr, #0
90021c3a:	dc6c      	bgt.n	90021d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90021c3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c3e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021c42:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90021c46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021c48:	2b00      	cmp	r3, #0
90021c4a:	f340 810e 	ble.w	90021e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90021c4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021c52:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021c54:	ee30 0a04 	vadd.f32	s0, s0, s8
90021c58:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021c5c:	eef0 6a62 	vmov.f32	s13, s5
90021c60:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021c64:	ee31 1a05 	vadd.f32	s2, s2, s10
90021c68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021c6c:	ee16 aa90 	vmov	sl, s13
90021c70:	eef0 6a43 	vmov.f32	s13, s6
90021c74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021c78:	ee16 5a90 	vmov	r5, s13
90021c7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021c80:	ee61 7a27 	vmul.f32	s15, s2, s15
90021c84:	ee77 2a62 	vsub.f32	s5, s14, s5
90021c88:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021c8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021c90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021c94:	ee12 2a90 	vmov	r2, s5
90021c98:	eef0 2a47 	vmov.f32	s5, s14
90021c9c:	fb92 f3f3 	sdiv	r3, r2, r3
90021ca0:	ee13 2a10 	vmov	r2, s6
90021ca4:	9325      	str	r3, [sp, #148]	; 0x94
90021ca6:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021ca8:	eeb0 3a67 	vmov.f32	s6, s15
90021cac:	fb92 f3f3 	sdiv	r3, r2, r3
90021cb0:	9326      	str	r3, [sp, #152]	; 0x98
90021cb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021cb4:	9a15      	ldr	r2, [sp, #84]	; 0x54
90021cb6:	3b01      	subs	r3, #1
90021cb8:	930c      	str	r3, [sp, #48]	; 0x30
90021cba:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021cbc:	bf08      	it	eq
90021cbe:	4613      	moveq	r3, r2
90021cc0:	9309      	str	r3, [sp, #36]	; 0x24
90021cc2:	e6a6      	b.n	90021a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90021cc4:	2900      	cmp	r1, #0
90021cc6:	f43f af10 	beq.w	90021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021cca:	f819 3003 	ldrb.w	r3, [r9, r3]
90021cce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021cd2:	930f      	str	r3, [sp, #60]	; 0x3c
90021cd4:	e709      	b.n	90021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021cd6:	f112 0901 	adds.w	r9, r2, #1
90021cda:	f53f af7d 	bmi.w	90021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021cde:	454b      	cmp	r3, r9
90021ce0:	f6ff af7a 	blt.w	90021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021ce4:	f11c 0901 	adds.w	r9, ip, #1
90021ce8:	f53f af76 	bmi.w	90021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021cec:	45ce      	cmp	lr, r9
90021cee:	f6ff af73 	blt.w	90021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021cf2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021cf4:	b21b      	sxth	r3, r3
90021cf6:	9202      	str	r2, [sp, #8]
90021cf8:	fa0f f28e 	sxth.w	r2, lr
90021cfc:	9300      	str	r3, [sp, #0]
90021cfe:	4633      	mov	r3, r6
90021d00:	9201      	str	r2, [sp, #4]
90021d02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021d04:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021d08:	e9cd c003 	strd	ip, r0, [sp, #12]
90021d0c:	4639      	mov	r1, r7
90021d0e:	9816      	ldr	r0, [sp, #88]	; 0x58
90021d10:	f7ff fd8e 	bl	90021830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90021d14:	e760      	b.n	90021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021d16:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90021d18:	ea4f 422a 	mov.w	r2, sl, asr #16
90021d1c:	1429      	asrs	r1, r5, #16
90021d1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021d20:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90021d24:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90021d28:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021d2c:	fb03 2101 	mla	r1, r3, r1, r2
90021d30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021d32:	440a      	add	r2, r1
90021d34:	5c61      	ldrb	r1, [r4, r1]
90021d36:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90021d3a:	f1bc 0f00 	cmp.w	ip, #0
90021d3e:	f000 808c 	beq.w	90021e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90021d42:	7857      	ldrb	r7, [r2, #1]
90021d44:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90021d48:	9413      	str	r4, [sp, #76]	; 0x4c
90021d4a:	b140      	cbz	r0, 90021d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021d4c:	18d7      	adds	r7, r2, r3
90021d4e:	5cd3      	ldrb	r3, [r2, r3]
90021d50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021d54:	9310      	str	r3, [sp, #64]	; 0x40
90021d56:	787b      	ldrb	r3, [r7, #1]
90021d58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021d5c:	9314      	str	r3, [sp, #80]	; 0x50
90021d5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021d60:	fb1c f200 	smulbb	r2, ip, r0
90021d64:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021d66:	f10e 3eff 	add.w	lr, lr, #4294967295
90021d6a:	041f      	lsls	r7, r3, #16
90021d6c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90021d70:	10d2      	asrs	r2, r2, #3
90021d72:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90021d76:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90021d7a:	431f      	orrs	r7, r3
90021d7c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021d80:	9317      	str	r3, [sp, #92]	; 0x5c
90021d82:	9b14      	ldr	r3, [sp, #80]	; 0x50
90021d84:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021d86:	041b      	lsls	r3, r3, #16
90021d88:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021d8c:	ea43 030b 	orr.w	r3, r3, fp
90021d90:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90021d94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021d98:	4353      	muls	r3, r2
90021d9a:	fb04 3707 	mla	r7, r4, r7, r3
90021d9e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
90021da2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021da4:	ea43 0b01 	orr.w	fp, r3, r1
90021da8:	f1c0 0110 	rsb	r1, r0, #16
90021dac:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021dae:	eba1 0c0c 	sub.w	ip, r1, ip
90021db2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90021db6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021dba:	fb0c 770b 	mla	r7, ip, fp, r7
90021dbe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021dc2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90021dc6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90021dca:	ea4c 0c0b 	orr.w	ip, ip, fp
90021dce:	fb02 770c 	mla	r7, r2, ip, r7
90021dd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90021dd4:	0d79      	lsrs	r1, r7, #21
90021dd6:	8812      	ldrh	r2, [r2, #0]
90021dd8:	097f      	lsrs	r7, r7, #5
90021dda:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021dde:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021de2:	430f      	orrs	r7, r1
90021de4:	1211      	asrs	r1, r2, #8
90021de6:	b2bb      	uxth	r3, r7
90021de8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021dec:	10d7      	asrs	r7, r2, #3
90021dee:	fb11 f104 	smulbb	r1, r1, r4
90021df2:	1218      	asrs	r0, r3, #8
90021df4:	00d2      	lsls	r2, r2, #3
90021df6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021dfa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021dfe:	fb17 f704 	smulbb	r7, r7, r4
90021e02:	b2d2      	uxtb	r2, r2
90021e04:	fb00 1009 	mla	r0, r0, r9, r1
90021e08:	10d9      	asrs	r1, r3, #3
90021e0a:	fb12 f204 	smulbb	r2, r2, r4
90021e0e:	00db      	lsls	r3, r3, #3
90021e10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021e14:	b280      	uxth	r0, r0
90021e16:	b2db      	uxtb	r3, r3
90021e18:	fb01 7109 	mla	r1, r1, r9, r7
90021e1c:	fb03 2309 	mla	r3, r3, r9, r2
90021e20:	1c42      	adds	r2, r0, #1
90021e22:	b289      	uxth	r1, r1
90021e24:	b29b      	uxth	r3, r3
90021e26:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90021e2a:	1c4f      	adds	r7, r1, #1
90021e2c:	1c5a      	adds	r2, r3, #1
90021e2e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90021e32:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90021e36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90021e3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021e3c:	0949      	lsrs	r1, r1, #5
90021e3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021e42:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021e46:	4310      	orrs	r0, r2
90021e48:	4308      	orrs	r0, r1
90021e4a:	f823 0b02 	strh.w	r0, [r3], #2
90021e4e:	930e      	str	r3, [sp, #56]	; 0x38
90021e50:	9b25      	ldr	r3, [sp, #148]	; 0x94
90021e52:	449a      	add	sl, r3
90021e54:	9b26      	ldr	r3, [sp, #152]	; 0x98
90021e56:	441d      	add	r5, r3
90021e58:	e6ed      	b.n	90021c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90021e5a:	2800      	cmp	r0, #0
90021e5c:	f43f af7f 	beq.w	90021d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021e60:	5cd3      	ldrb	r3, [r2, r3]
90021e62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021e66:	9310      	str	r3, [sp, #64]	; 0x40
90021e68:	e779      	b.n	90021d5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021e6a:	b019      	add	sp, #100	; 0x64
90021e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021e70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021e70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021e74:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90021e78:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021e7c:	f1b8 0f00 	cmp.w	r8, #0
90021e80:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90021e84:	fb08 470e 	mla	r7, r8, lr, r4
90021e88:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90021e8c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90021e90:	eb02 0907 	add.w	r9, r2, r7
90021e94:	8808      	ldrh	r0, [r1, #0]
90021e96:	db67      	blt.n	90021f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021e98:	45c2      	cmp	sl, r8
90021e9a:	dd65      	ble.n	90021f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021e9c:	2c00      	cmp	r4, #0
90021e9e:	db61      	blt.n	90021f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021ea0:	45a6      	cmp	lr, r4
90021ea2:	dd5f      	ble.n	90021f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021ea4:	5dd2      	ldrb	r2, [r2, r7]
90021ea6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021eaa:	1c62      	adds	r2, r4, #1
90021eac:	d45f      	bmi.n	90021f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021eae:	4596      	cmp	lr, r2
90021eb0:	dd5d      	ble.n	90021f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021eb2:	2d00      	cmp	r5, #0
90021eb4:	d05b      	beq.n	90021f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021eb6:	f899 2001 	ldrb.w	r2, [r9, #1]
90021eba:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021ebe:	f118 0801 	adds.w	r8, r8, #1
90021ec2:	d458      	bmi.n	90021f76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021ec4:	45c2      	cmp	sl, r8
90021ec6:	dd56      	ble.n	90021f76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021ec8:	2e00      	cmp	r6, #0
90021eca:	d054      	beq.n	90021f76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021ecc:	2c00      	cmp	r4, #0
90021ece:	db50      	blt.n	90021f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021ed0:	45a6      	cmp	lr, r4
90021ed2:	dd4e      	ble.n	90021f72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021ed4:	f819 200e 	ldrb.w	r2, [r9, lr]
90021ed8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021edc:	3401      	adds	r4, #1
90021ede:	d407      	bmi.n	90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021ee0:	45a6      	cmp	lr, r4
90021ee2:	dd05      	ble.n	90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021ee4:	b125      	cbz	r5, 90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021ee6:	44ce      	add	lr, r9
90021ee8:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021eec:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021ef0:	fb15 f406 	smulbb	r4, r5, r6
90021ef4:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021ef8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021efc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90021f00:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021f04:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90021f08:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021f0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021f10:	ea43 0c0c 	orr.w	ip, r3, ip
90021f14:	f1c6 0310 	rsb	r3, r6, #16
90021f18:	ea4e 0707 	orr.w	r7, lr, r7
90021f1c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90021f20:	1b5b      	subs	r3, r3, r5
90021f22:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90021f26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90021f2a:	437d      	muls	r5, r7
90021f2c:	fb03 5c0c 	mla	ip, r3, ip, r5
90021f30:	0403      	lsls	r3, r0, #16
90021f32:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021f36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021f3a:	4318      	orrs	r0, r3
90021f3c:	0413      	lsls	r3, r2, #16
90021f3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021f42:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90021f46:	fb04 c000 	mla	r0, r4, r0, ip
90021f4a:	4313      	orrs	r3, r2
90021f4c:	fb06 0003 	mla	r0, r6, r3, r0
90021f50:	0d43      	lsrs	r3, r0, #21
90021f52:	0940      	lsrs	r0, r0, #5
90021f54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021f58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021f5c:	4318      	orrs	r0, r3
90021f5e:	8008      	strh	r0, [r1, #0]
90021f60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021f64:	4684      	mov	ip, r0
90021f66:	e7a0      	b.n	90021eaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90021f68:	4607      	mov	r7, r0
90021f6a:	4684      	mov	ip, r0
90021f6c:	e7a7      	b.n	90021ebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021f6e:	4607      	mov	r7, r0
90021f70:	e7a5      	b.n	90021ebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021f72:	4602      	mov	r2, r0
90021f74:	e7b2      	b.n	90021edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90021f76:	4602      	mov	r2, r0
90021f78:	e7ba      	b.n	90021ef0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90021f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021f7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f7e:	b093      	sub	sp, #76	; 0x4c
90021f80:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90021f84:	920f      	str	r2, [sp, #60]	; 0x3c
90021f86:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021f88:	9010      	str	r0, [sp, #64]	; 0x40
90021f8a:	9108      	str	r1, [sp, #32]
90021f8c:	6850      	ldr	r0, [r2, #4]
90021f8e:	9306      	str	r3, [sp, #24]
90021f90:	6812      	ldr	r2, [r2, #0]
90021f92:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021f96:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90021f9a:	fb00 1303 	mla	r3, r0, r3, r1
90021f9e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90021fa2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021fa4:	681b      	ldr	r3, [r3, #0]
90021fa6:	9307      	str	r3, [sp, #28]
90021fa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021faa:	685f      	ldr	r7, [r3, #4]
90021fac:	3704      	adds	r7, #4
90021fae:	9b08      	ldr	r3, [sp, #32]
90021fb0:	2b00      	cmp	r3, #0
90021fb2:	dc03      	bgt.n	90021fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90021fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021fb6:	2b00      	cmp	r3, #0
90021fb8:	f340 81b2 	ble.w	90022320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021fbc:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021fc6:	1e48      	subs	r0, r1, #1
90021fc8:	f102 3cff 	add.w	ip, r2, #4294967295
90021fcc:	9b06      	ldr	r3, [sp, #24]
90021fce:	2b00      	cmp	r3, #0
90021fd0:	f340 80a9 	ble.w	90022126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021fd4:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021fd8:	ea4f 4326 	mov.w	r3, r6, asr #16
90021fdc:	d406      	bmi.n	90021fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021fde:	4586      	cmp	lr, r0
90021fe0:	da04      	bge.n	90021fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021fe2:	2b00      	cmp	r3, #0
90021fe4:	db02      	blt.n	90021fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021fe6:	4563      	cmp	r3, ip
90021fe8:	f2c0 809e 	blt.w	90022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021fec:	f11e 0e01 	adds.w	lr, lr, #1
90021ff0:	f100 808f 	bmi.w	90022112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021ff4:	4571      	cmp	r1, lr
90021ff6:	f2c0 808c 	blt.w	90022112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021ffa:	3301      	adds	r3, #1
90021ffc:	f100 8089 	bmi.w	90022112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022000:	429a      	cmp	r2, r3
90022002:	f2c0 8086 	blt.w	90022112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90022006:	f8dd b018 	ldr.w	fp, [sp, #24]
9002200a:	46c8      	mov	r8, r9
9002200c:	f1bb 0f00 	cmp.w	fp, #0
90022010:	f340 80a6 	ble.w	90022160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90022014:	9a24      	ldr	r2, [sp, #144]	; 0x90
90022016:	ea4f 4c26 	mov.w	ip, r6, asr #16
9002201a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002201c:	f3c4 3003 	ubfx	r0, r4, #12, #4
90022020:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90022024:	1422      	asrs	r2, r4, #16
90022026:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002202a:	689b      	ldr	r3, [r3, #8]
9002202c:	f100 80e3 	bmi.w	900221f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022030:	f103 3aff 	add.w	sl, r3, #4294967295
90022034:	4552      	cmp	r2, sl
90022036:	f280 80de 	bge.w	900221f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002203a:	f1bc 0f00 	cmp.w	ip, #0
9002203e:	f2c0 80da 	blt.w	900221f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90022042:	f10e 3aff 	add.w	sl, lr, #4294967295
90022046:	45d4      	cmp	ip, sl
90022048:	f280 80d5 	bge.w	900221f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002204c:	b21b      	sxth	r3, r3
9002204e:	9d07      	ldr	r5, [sp, #28]
90022050:	fb0c 2203 	mla	r2, ip, r3, r2
90022054:	eb05 0a02 	add.w	sl, r5, r2
90022058:	5caa      	ldrb	r2, [r5, r2]
9002205a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9002205e:	2800      	cmp	r0, #0
90022060:	f000 80c0 	beq.w	900221e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90022064:	f89a 2001 	ldrb.w	r2, [sl, #1]
90022068:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9002206c:	920b      	str	r2, [sp, #44]	; 0x2c
9002206e:	b151      	cbz	r1, 90022086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90022070:	eb0a 0203 	add.w	r2, sl, r3
90022074:	f81a 3003 	ldrb.w	r3, [sl, r3]
90022078:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002207c:	9309      	str	r3, [sp, #36]	; 0x24
9002207e:	7853      	ldrb	r3, [r2, #1]
90022080:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022084:	930c      	str	r3, [sp, #48]	; 0x30
90022086:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022088:	fb10 f201 	smulbb	r2, r0, r1
9002208c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002208e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90022092:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022096:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002209a:	10d2      	asrs	r2, r2, #3
9002209c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900220a0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
900220a4:	ea4c 0c03 	orr.w	ip, ip, r3
900220a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900220aa:	041b      	lsls	r3, r3, #16
900220ac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900220b0:	432b      	orrs	r3, r5
900220b2:	4353      	muls	r3, r2
900220b4:	fb0a 330c 	mla	r3, sl, ip, r3
900220b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900220bc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900220c0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900220c4:	ea4c 0e0e 	orr.w	lr, ip, lr
900220c8:	f1c1 0c10 	rsb	ip, r1, #16
900220cc:	ebac 0c00 	sub.w	ip, ip, r0
900220d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900220d4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900220d8:	fb0c 3c0e 	mla	ip, ip, lr, r3
900220dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900220de:	0418      	lsls	r0, r3, #16
900220e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900220e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900220e8:	4318      	orrs	r0, r3
900220ea:	fb02 c200 	mla	r2, r2, r0, ip
900220ee:	0d53      	lsrs	r3, r2, #21
900220f0:	0952      	lsrs	r2, r2, #5
900220f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900220f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900220fa:	431a      	orrs	r2, r3
900220fc:	f8a8 2000 	strh.w	r2, [r8]
90022100:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022102:	f108 0802 	add.w	r8, r8, #2
90022106:	f10b 3bff 	add.w	fp, fp, #4294967295
9002210a:	441c      	add	r4, r3
9002210c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002210e:	441e      	add	r6, r3
90022110:	e77c      	b.n	9002200c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022112:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022114:	f109 0902 	add.w	r9, r9, #2
90022118:	441c      	add	r4, r3
9002211a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002211c:	441e      	add	r6, r3
9002211e:	9b06      	ldr	r3, [sp, #24]
90022120:	3b01      	subs	r3, #1
90022122:	9306      	str	r3, [sp, #24]
90022124:	e752      	b.n	90021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90022126:	d020      	beq.n	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90022128:	9b06      	ldr	r3, [sp, #24]
9002212a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002212c:	3b01      	subs	r3, #1
9002212e:	fb00 4003 	mla	r0, r0, r3, r4
90022132:	1400      	asrs	r0, r0, #16
90022134:	f53f af67 	bmi.w	90022006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022138:	3901      	subs	r1, #1
9002213a:	4288      	cmp	r0, r1
9002213c:	f6bf af63 	bge.w	90022006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022140:	9920      	ldr	r1, [sp, #128]	; 0x80
90022142:	fb01 6303 	mla	r3, r1, r3, r6
90022146:	141b      	asrs	r3, r3, #16
90022148:	f53f af5d 	bmi.w	90022006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002214c:	3a01      	subs	r2, #1
9002214e:	4293      	cmp	r3, r2
90022150:	f6bf af59 	bge.w	90022006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90022154:	f8dd 8018 	ldr.w	r8, [sp, #24]
90022158:	46ca      	mov	sl, r9
9002215a:	f1b8 0f00 	cmp.w	r8, #0
9002215e:	dc67      	bgt.n	90022230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90022160:	9b06      	ldr	r3, [sp, #24]
90022162:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90022166:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002216a:	9b08      	ldr	r3, [sp, #32]
9002216c:	2b00      	cmp	r3, #0
9002216e:	f340 80d7 	ble.w	90022320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90022172:	ee30 0a04 	vadd.f32	s0, s0, s8
90022176:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022178:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002217c:	eeb0 6a62 	vmov.f32	s12, s5
90022180:	eec6 7a80 	vdiv.f32	s15, s13, s0
90022184:	ee31 1a05 	vadd.f32	s2, s2, s10
90022188:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9002218c:	ee16 4a10 	vmov	r4, s12
90022190:	eeb0 6a43 	vmov.f32	s12, s6
90022194:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90022198:	ee16 6a10 	vmov	r6, s12
9002219c:	ee20 7aa7 	vmul.f32	s14, s1, s15
900221a0:	ee61 7a27 	vmul.f32	s15, s2, s15
900221a4:	ee77 2a62 	vsub.f32	s5, s14, s5
900221a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900221ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900221b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900221b4:	ee12 2a90 	vmov	r2, s5
900221b8:	eef0 2a47 	vmov.f32	s5, s14
900221bc:	fb92 f3f3 	sdiv	r3, r2, r3
900221c0:	ee13 2a10 	vmov	r2, s6
900221c4:	931f      	str	r3, [sp, #124]	; 0x7c
900221c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900221c8:	eeb0 3a67 	vmov.f32	s6, s15
900221cc:	fb92 f3f3 	sdiv	r3, r2, r3
900221d0:	9320      	str	r3, [sp, #128]	; 0x80
900221d2:	9b08      	ldr	r3, [sp, #32]
900221d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900221d6:	3b01      	subs	r3, #1
900221d8:	9308      	str	r3, [sp, #32]
900221da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900221dc:	bf08      	it	eq
900221de:	4613      	moveq	r3, r2
900221e0:	9306      	str	r3, [sp, #24]
900221e2:	e6e4      	b.n	90021fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900221e4:	2900      	cmp	r1, #0
900221e6:	f43f af4e 	beq.w	90022086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900221ea:	f81a 3003 	ldrb.w	r3, [sl, r3]
900221ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900221f2:	9309      	str	r3, [sp, #36]	; 0x24
900221f4:	e747      	b.n	90022086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900221f6:	f112 0a01 	adds.w	sl, r2, #1
900221fa:	d481      	bmi.n	90022100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900221fc:	4553      	cmp	r3, sl
900221fe:	f6ff af7f 	blt.w	90022100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022202:	f11c 0a01 	adds.w	sl, ip, #1
90022206:	f53f af7b 	bmi.w	90022100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002220a:	45d6      	cmp	lr, sl
9002220c:	f6ff af78 	blt.w	90022100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022210:	b21b      	sxth	r3, r3
90022212:	e9cd 2c02 	strd	r2, ip, [sp, #8]
90022216:	fa0f f28e 	sxth.w	r2, lr
9002221a:	9300      	str	r3, [sp, #0]
9002221c:	463b      	mov	r3, r7
9002221e:	9201      	str	r2, [sp, #4]
90022220:	9a07      	ldr	r2, [sp, #28]
90022222:	e9cd 0104 	strd	r0, r1, [sp, #16]
90022226:	4641      	mov	r1, r8
90022228:	9810      	ldr	r0, [sp, #64]	; 0x40
9002222a:	f7ff fe21 	bl	90021e70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002222e:	e767      	b.n	90022100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022230:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022232:	1422      	asrs	r2, r4, #16
90022234:	1431      	asrs	r1, r6, #16
90022236:	9d07      	ldr	r5, [sp, #28]
90022238:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002223c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90022240:	f3c6 3003 	ubfx	r0, r6, #12, #4
90022244:	fb03 2101 	mla	r1, r3, r1, r2
90022248:	9a07      	ldr	r2, [sp, #28]
9002224a:	440a      	add	r2, r1
9002224c:	5c69      	ldrb	r1, [r5, r1]
9002224e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
90022252:	f1be 0f00 	cmp.w	lr, #0
90022256:	d05c      	beq.n	90022312 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90022258:	f892 c001 	ldrb.w	ip, [r2, #1]
9002225c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90022260:	950d      	str	r5, [sp, #52]	; 0x34
90022262:	b150      	cbz	r0, 9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022264:	eb02 0c03 	add.w	ip, r2, r3
90022268:	5cd3      	ldrb	r3, [r2, r3]
9002226a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002226e:	930a      	str	r3, [sp, #40]	; 0x28
90022270:	f89c 3001 	ldrb.w	r3, [ip, #1]
90022274:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90022278:	930e      	str	r3, [sp, #56]	; 0x38
9002227a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002227c:	fb1e f200 	smulbb	r2, lr, r0
90022280:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90022282:	f108 38ff 	add.w	r8, r8, #4294967295
90022286:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002228a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002228e:	10d2      	asrs	r2, r2, #3
90022290:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90022294:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022298:	ea4c 0c03 	orr.w	ip, ip, r3
9002229c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
900222a0:	9311      	str	r3, [sp, #68]	; 0x44
900222a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900222a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
900222a6:	041b      	lsls	r3, r3, #16
900222a8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900222ac:	ea43 030b 	orr.w	r3, r3, fp
900222b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900222b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900222b8:	4353      	muls	r3, r2
900222ba:	fb05 3c0c 	mla	ip, r5, ip, r3
900222be:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
900222c2:	ea43 0b01 	orr.w	fp, r3, r1
900222c6:	f1c0 0110 	rsb	r1, r0, #16
900222ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900222cc:	eba1 0e0e 	sub.w	lr, r1, lr
900222d0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900222d4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900222d8:	fb0e cc0b 	mla	ip, lr, fp, ip
900222dc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900222e0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
900222e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900222e8:	ea4b 0e0e 	orr.w	lr, fp, lr
900222ec:	fb02 cc0e 	mla	ip, r2, lr, ip
900222f0:	ea4f 535c 	mov.w	r3, ip, lsr #21
900222f4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900222f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900222fc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022300:	ea43 0c0c 	orr.w	ip, r3, ip
90022304:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022306:	441c      	add	r4, r3
90022308:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002230a:	f82a cb02 	strh.w	ip, [sl], #2
9002230e:	441e      	add	r6, r3
90022310:	e723      	b.n	9002215a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022312:	2800      	cmp	r0, #0
90022314:	d0b1      	beq.n	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022316:	5cd3      	ldrb	r3, [r2, r3]
90022318:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002231c:	930a      	str	r3, [sp, #40]	; 0x28
9002231e:	e7ac      	b.n	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90022320:	b013      	add	sp, #76	; 0x4c
90022322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022326 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
90022326:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002232a:	880d      	ldrh	r5, [r1, #0]
9002232c:	b087      	sub	sp, #28
9002232e:	10ef      	asrs	r7, r5, #3
90022330:	9103      	str	r1, [sp, #12]
90022332:	ea4f 2a25 	mov.w	sl, r5, asr #8
90022336:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9002233a:	00ed      	lsls	r5, r5, #3
9002233c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022340:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90022344:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90022348:	b2ed      	uxtb	r5, r5
9002234a:	9701      	str	r7, [sp, #4]
9002234c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
90022350:	9502      	str	r5, [sp, #8]
90022352:	9d01      	ldr	r5, [sp, #4]
90022354:	9902      	ldr	r1, [sp, #8]
90022356:	022d      	lsls	r5, r5, #8
90022358:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9002235c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
90022360:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90022364:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90022368:	430d      	orrs	r5, r1
9002236a:	fb06 0709 	mla	r7, r6, r9, r0
9002236e:	2e00      	cmp	r6, #0
90022370:	9505      	str	r5, [sp, #20]
90022372:	eb02 0c07 	add.w	ip, r2, r7
90022376:	f2c0 80b6 	blt.w	900224e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9002237a:	45b3      	cmp	fp, r6
9002237c:	f340 80b3 	ble.w	900224e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90022380:	2800      	cmp	r0, #0
90022382:	f2c0 80ae 	blt.w	900224e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90022386:	4581      	cmp	r9, r0
90022388:	f340 80ab 	ble.w	900224e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002238c:	5dd7      	ldrb	r7, [r2, r7]
9002238e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022392:	441f      	add	r7, r3
90022394:	1c42      	adds	r2, r0, #1
90022396:	f100 80a9 	bmi.w	900224ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002239a:	4591      	cmp	r9, r2
9002239c:	f340 80a6 	ble.w	900224ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900223a0:	2c00      	cmp	r4, #0
900223a2:	f000 80a3 	beq.w	900224ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
900223a6:	f89c 5001 	ldrb.w	r5, [ip, #1]
900223aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
900223ae:	441d      	add	r5, r3
900223b0:	3601      	adds	r6, #1
900223b2:	f100 809f 	bmi.w	900224f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900223b6:	45b3      	cmp	fp, r6
900223b8:	f340 809c 	ble.w	900224f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900223bc:	f1be 0f00 	cmp.w	lr, #0
900223c0:	f000 8098 	beq.w	900224f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900223c4:	2800      	cmp	r0, #0
900223c6:	f2c0 8093 	blt.w	900224f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900223ca:	4581      	cmp	r9, r0
900223cc:	f340 8090 	ble.w	900224f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900223d0:	f81c 6009 	ldrb.w	r6, [ip, r9]
900223d4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900223d8:	441e      	add	r6, r3
900223da:	3001      	adds	r0, #1
900223dc:	f100 808d 	bmi.w	900224fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900223e0:	4581      	cmp	r9, r0
900223e2:	f340 808a 	ble.w	900224fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900223e6:	2c00      	cmp	r4, #0
900223e8:	f000 8087 	beq.w	900224fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900223ec:	44e1      	add	r9, ip
900223ee:	f899 2001 	ldrb.w	r2, [r9, #1]
900223f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900223f6:	4413      	add	r3, r2
900223f8:	b2a4      	uxth	r4, r4
900223fa:	f897 c002 	ldrb.w	ip, [r7, #2]
900223fe:	fa1f fe8e 	uxth.w	lr, lr
90022402:	9901      	ldr	r1, [sp, #4]
90022404:	fb04 fb0e 	mul.w	fp, r4, lr
90022408:	0124      	lsls	r4, r4, #4
9002240a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9002240e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90022412:	eba4 040b 	sub.w	r4, r4, fp
90022416:	fa1f f08e 	uxth.w	r0, lr
9002241a:	b2a2      	uxth	r2, r4
9002241c:	78ac      	ldrb	r4, [r5, #2]
9002241e:	eba9 0900 	sub.w	r9, r9, r0
90022422:	fa1f fe88 	uxth.w	lr, r8
90022426:	4354      	muls	r4, r2
90022428:	ea6f 0808 	mvn.w	r8, r8
9002242c:	fa1f f989 	uxth.w	r9, r9
90022430:	fa5f f888 	uxtb.w	r8, r8
90022434:	fb09 440c 	mla	r4, r9, ip, r4
90022438:	f896 c002 	ldrb.w	ip, [r6, #2]
9002243c:	fb1a fa08 	smulbb	sl, sl, r8
90022440:	fb00 440c 	mla	r4, r0, ip, r4
90022444:	f893 c002 	ldrb.w	ip, [r3, #2]
90022448:	fb0b 4c0c 	mla	ip, fp, ip, r4
9002244c:	787c      	ldrb	r4, [r7, #1]
9002244e:	783f      	ldrb	r7, [r7, #0]
90022450:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90022454:	fb0c ac0e 	mla	ip, ip, lr, sl
90022458:	f895 a001 	ldrb.w	sl, [r5, #1]
9002245c:	782d      	ldrb	r5, [r5, #0]
9002245e:	fb02 fa0a 	mul.w	sl, r2, sl
90022462:	fa1f fc8c 	uxth.w	ip, ip
90022466:	436a      	muls	r2, r5
90022468:	7835      	ldrb	r5, [r6, #0]
9002246a:	fb09 aa04 	mla	sl, r9, r4, sl
9002246e:	7874      	ldrb	r4, [r6, #1]
90022470:	fb09 2207 	mla	r2, r9, r7, r2
90022474:	fb00 aa04 	mla	sl, r0, r4, sl
90022478:	785c      	ldrb	r4, [r3, #1]
9002247a:	fb00 2005 	mla	r0, r0, r5, r2
9002247e:	781b      	ldrb	r3, [r3, #0]
90022480:	fb0b a404 	mla	r4, fp, r4, sl
90022484:	fb11 fa08 	smulbb	sl, r1, r8
90022488:	fb0b 0b03 	mla	fp, fp, r3, r0
9002248c:	9b02      	ldr	r3, [sp, #8]
9002248e:	f3c4 2407 	ubfx	r4, r4, #8, #8
90022492:	fb13 f808 	smulbb	r8, r3, r8
90022496:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9002249a:	fb04 a40e 	mla	r4, r4, lr, sl
9002249e:	f10c 0301 	add.w	r3, ip, #1
900224a2:	fb0b 8e0e 	mla	lr, fp, lr, r8
900224a6:	b2a4      	uxth	r4, r4
900224a8:	fa1f fe8e 	uxth.w	lr, lr
900224ac:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900224b0:	f104 0a01 	add.w	sl, r4, #1
900224b4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
900224b8:	f10e 0c01 	add.w	ip, lr, #1
900224bc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900224c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900224c4:	0964      	lsrs	r4, r4, #5
900224c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900224ca:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900224ce:	ea4c 0c03 	orr.w	ip, ip, r3
900224d2:	9b03      	ldr	r3, [sp, #12]
900224d4:	ea4c 0c04 	orr.w	ip, ip, r4
900224d8:	f8a3 c000 	strh.w	ip, [r3]
900224dc:	b007      	add	sp, #28
900224de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900224e2:	af05      	add	r7, sp, #20
900224e4:	e756      	b.n	90022394 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900224e6:	ad05      	add	r5, sp, #20
900224e8:	462f      	mov	r7, r5
900224ea:	e761      	b.n	900223b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900224ec:	ad05      	add	r5, sp, #20
900224ee:	e75f      	b.n	900223b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900224f0:	ae05      	add	r6, sp, #20
900224f2:	e772      	b.n	900223da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900224f4:	ab05      	add	r3, sp, #20
900224f6:	461e      	mov	r6, r3
900224f8:	e77e      	b.n	900223f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900224fa:	ab05      	add	r3, sp, #20
900224fc:	e77c      	b.n	900223f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900224fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900224fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022502:	b095      	sub	sp, #84	; 0x54
90022504:	9212      	str	r2, [sp, #72]	; 0x48
90022506:	9309      	str	r3, [sp, #36]	; 0x24
90022508:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002250a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9002250e:	9013      	str	r0, [sp, #76]	; 0x4c
90022510:	930f      	str	r3, [sp, #60]	; 0x3c
90022512:	6850      	ldr	r0, [r2, #4]
90022514:	910e      	str	r1, [sp, #56]	; 0x38
90022516:	6812      	ldr	r2, [r2, #0]
90022518:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9002251c:	fb00 1303 	mla	r3, r0, r3, r1
90022520:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022524:	930a      	str	r3, [sp, #40]	; 0x28
90022526:	9b26      	ldr	r3, [sp, #152]	; 0x98
90022528:	681b      	ldr	r3, [r3, #0]
9002252a:	930d      	str	r3, [sp, #52]	; 0x34
9002252c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002252e:	685c      	ldr	r4, [r3, #4]
90022530:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022532:	3404      	adds	r4, #4
90022534:	43db      	mvns	r3, r3
90022536:	b2db      	uxtb	r3, r3
90022538:	930b      	str	r3, [sp, #44]	; 0x2c
9002253a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002253c:	2b00      	cmp	r3, #0
9002253e:	dc03      	bgt.n	90022548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90022540:	9b12      	ldr	r3, [sp, #72]	; 0x48
90022542:	2b00      	cmp	r3, #0
90022544:	f340 8255 	ble.w	900229f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90022548:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002254a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002254e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022552:	1e48      	subs	r0, r1, #1
90022554:	1e55      	subs	r5, r2, #1
90022556:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022558:	2b00      	cmp	r3, #0
9002255a:	f340 80f9 	ble.w	90022750 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9002255e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90022560:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022562:	1436      	asrs	r6, r6, #16
90022564:	ea4f 4323 	mov.w	r3, r3, asr #16
90022568:	d406      	bmi.n	90022578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002256a:	4286      	cmp	r6, r0
9002256c:	da04      	bge.n	90022578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002256e:	2b00      	cmp	r3, #0
90022570:	db02      	blt.n	90022578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90022572:	42ab      	cmp	r3, r5
90022574:	f2c0 80ed 	blt.w	90022752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90022578:	3601      	adds	r6, #1
9002257a:	f100 80da 	bmi.w	90022732 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002257e:	42b1      	cmp	r1, r6
90022580:	f2c0 80d7 	blt.w	90022732 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022584:	3301      	adds	r3, #1
90022586:	f100 80d4 	bmi.w	90022732 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002258a:	429a      	cmp	r2, r3
9002258c:	f2c0 80d1 	blt.w	90022732 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90022590:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022592:	9311      	str	r3, [sp, #68]	; 0x44
90022594:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022596:	930c      	str	r3, [sp, #48]	; 0x30
90022598:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002259a:	2b00      	cmp	r3, #0
9002259c:	f340 80fa 	ble.w	90022794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900225a0:	9826      	ldr	r0, [sp, #152]	; 0x98
900225a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
900225a4:	9a20      	ldr	r2, [sp, #128]	; 0x80
900225a6:	68c6      	ldr	r6, [r0, #12]
900225a8:	141d      	asrs	r5, r3, #16
900225aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
900225ac:	f3c2 3103 	ubfx	r1, r2, #12, #4
900225b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900225b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
900225b4:	1400      	asrs	r0, r0, #16
900225b6:	f3c3 3303 	ubfx	r3, r3, #12, #4
900225ba:	6892      	ldr	r2, [r2, #8]
900225bc:	f100 813e 	bmi.w	9002283c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900225c0:	1e57      	subs	r7, r2, #1
900225c2:	42b8      	cmp	r0, r7
900225c4:	f280 813a 	bge.w	9002283c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900225c8:	2d00      	cmp	r5, #0
900225ca:	f2c0 8137 	blt.w	9002283c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900225ce:	1e77      	subs	r7, r6, #1
900225d0:	42bd      	cmp	r5, r7
900225d2:	f280 8133 	bge.w	9002283c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900225d6:	b212      	sxth	r2, r2
900225d8:	fb05 0002 	mla	r0, r5, r2, r0
900225dc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900225de:	f815 a000 	ldrb.w	sl, [r5, r0]
900225e2:	182e      	adds	r6, r5, r0
900225e4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900225e8:	eb04 050a 	add.w	r5, r4, sl
900225ec:	2b00      	cmp	r3, #0
900225ee:	f000 8117 	beq.w	90022820 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900225f2:	f896 c001 	ldrb.w	ip, [r6, #1]
900225f6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900225fa:	44a4      	add	ip, r4
900225fc:	2900      	cmp	r1, #0
900225fe:	f000 8117 	beq.w	90022830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90022602:	18b0      	adds	r0, r6, r2
90022604:	5cb2      	ldrb	r2, [r6, r2]
90022606:	7840      	ldrb	r0, [r0, #1]
90022608:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002260c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022610:	4422      	add	r2, r4
90022612:	4420      	add	r0, r4
90022614:	b29b      	uxth	r3, r3
90022616:	f89c 7002 	ldrb.w	r7, [ip, #2]
9002261a:	b289      	uxth	r1, r1
9002261c:	f895 b002 	ldrb.w	fp, [r5, #2]
90022620:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90022622:	fb03 f901 	mul.w	r9, r3, r1
90022626:	011b      	lsls	r3, r3, #4
90022628:	f8b6 e000 	ldrh.w	lr, [r6]
9002262c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022630:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90022634:	eba3 0309 	sub.w	r3, r3, r9
90022638:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9002263c:	b289      	uxth	r1, r1
9002263e:	f814 a00a 	ldrb.w	sl, [r4, sl]
90022642:	b29b      	uxth	r3, r3
90022644:	eba8 0801 	sub.w	r8, r8, r1
90022648:	435f      	muls	r7, r3
9002264a:	fa1f f888 	uxth.w	r8, r8
9002264e:	9310      	str	r3, [sp, #64]	; 0x40
90022650:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022652:	fb08 770b 	mla	r7, r8, fp, r7
90022656:	f892 b002 	ldrb.w	fp, [r2, #2]
9002265a:	fb01 770b 	mla	r7, r1, fp, r7
9002265e:	f890 b002 	ldrb.w	fp, [r0, #2]
90022662:	fb09 770b 	mla	r7, r9, fp, r7
90022666:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9002266a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002266e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022672:	fb1b fb03 	smulbb	fp, fp, r3
90022676:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022678:	fb07 b706 	mla	r7, r7, r6, fp
9002267c:	f895 b001 	ldrb.w	fp, [r5, #1]
90022680:	f89c 5001 	ldrb.w	r5, [ip, #1]
90022684:	f89c c000 	ldrb.w	ip, [ip]
90022688:	b2bf      	uxth	r7, r7
9002268a:	435d      	muls	r5, r3
9002268c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002268e:	fb08 550b 	mla	r5, r8, fp, r5
90022692:	f892 b001 	ldrb.w	fp, [r2, #1]
90022696:	fb01 550b 	mla	r5, r1, fp, r5
9002269a:	f890 b001 	ldrb.w	fp, [r0, #1]
9002269e:	fb09 550b 	mla	r5, r9, fp, r5
900226a2:	ea4f 0bee 	mov.w	fp, lr, asr #3
900226a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900226aa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
900226ae:	f3c5 2507 	ubfx	r5, r5, #8, #8
900226b2:	fa5f fe8e 	uxtb.w	lr, lr
900226b6:	fb1b fb03 	smulbb	fp, fp, r3
900226ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
900226bc:	fb03 f30c 	mul.w	r3, r3, ip
900226c0:	f892 c000 	ldrb.w	ip, [r2]
900226c4:	fb05 b506 	mla	r5, r5, r6, fp
900226c8:	fb08 330a 	mla	r3, r8, sl, r3
900226cc:	b2ad      	uxth	r5, r5
900226ce:	fb01 330c 	mla	r3, r1, ip, r3
900226d2:	f890 c000 	ldrb.w	ip, [r0]
900226d6:	f105 0b01 	add.w	fp, r5, #1
900226da:	fb09 3c0c 	mla	ip, r9, ip, r3
900226de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900226e0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900226e4:	fb1e fe03 	smulbb	lr, lr, r3
900226e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900226ec:	1c7b      	adds	r3, r7, #1
900226ee:	096d      	lsrs	r5, r5, #5
900226f0:	fb0c e606 	mla	r6, ip, r6, lr
900226f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900226f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900226fc:	b2b6      	uxth	r6, r6
900226fe:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90022702:	1c77      	adds	r7, r6, #1
90022704:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90022708:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002270c:	431f      	orrs	r7, r3
9002270e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022710:	433d      	orrs	r5, r7
90022712:	801d      	strh	r5, [r3, #0]
90022714:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022716:	9a21      	ldr	r2, [sp, #132]	; 0x84
90022718:	3302      	adds	r3, #2
9002271a:	930c      	str	r3, [sp, #48]	; 0x30
9002271c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002271e:	4413      	add	r3, r2
90022720:	9a22      	ldr	r2, [sp, #136]	; 0x88
90022722:	931f      	str	r3, [sp, #124]	; 0x7c
90022724:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022726:	4413      	add	r3, r2
90022728:	9320      	str	r3, [sp, #128]	; 0x80
9002272a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002272c:	3b01      	subs	r3, #1
9002272e:	9311      	str	r3, [sp, #68]	; 0x44
90022730:	e732      	b.n	90022598 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90022732:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022734:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022736:	4433      	add	r3, r6
90022738:	9e22      	ldr	r6, [sp, #136]	; 0x88
9002273a:	931f      	str	r3, [sp, #124]	; 0x7c
9002273c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002273e:	4433      	add	r3, r6
90022740:	9320      	str	r3, [sp, #128]	; 0x80
90022742:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022744:	3b01      	subs	r3, #1
90022746:	9309      	str	r3, [sp, #36]	; 0x24
90022748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002274a:	3302      	adds	r3, #2
9002274c:	930a      	str	r3, [sp, #40]	; 0x28
9002274e:	e702      	b.n	90022556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022750:	d027      	beq.n	900227a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90022752:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022754:	9821      	ldr	r0, [sp, #132]	; 0x84
90022756:	3b01      	subs	r3, #1
90022758:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9002275a:	fb00 5003 	mla	r0, r0, r3, r5
9002275e:	1400      	asrs	r0, r0, #16
90022760:	f53f af16 	bmi.w	90022590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022764:	3901      	subs	r1, #1
90022766:	4288      	cmp	r0, r1
90022768:	f6bf af12 	bge.w	90022590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002276c:	9922      	ldr	r1, [sp, #136]	; 0x88
9002276e:	9820      	ldr	r0, [sp, #128]	; 0x80
90022770:	fb01 0303 	mla	r3, r1, r3, r0
90022774:	141b      	asrs	r3, r3, #16
90022776:	f53f af0b 	bmi.w	90022590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002277a:	3a01      	subs	r2, #1
9002277c:	4293      	cmp	r3, r2
9002277e:	f6bf af07 	bge.w	90022590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022782:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022784:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90022788:	9311      	str	r3, [sp, #68]	; 0x44
9002278a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002278c:	930c      	str	r3, [sp, #48]	; 0x30
9002278e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022790:	2b00      	cmp	r3, #0
90022792:	dc70      	bgt.n	90022876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90022794:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022796:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022798:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002279c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900227a0:	930a      	str	r3, [sp, #40]	; 0x28
900227a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900227a4:	2b00      	cmp	r3, #0
900227a6:	f340 8124 	ble.w	900229f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900227aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900227ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900227b0:	ee30 0a04 	vadd.f32	s0, s0, s8
900227b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900227b8:	eef0 6a62 	vmov.f32	s13, s5
900227bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900227c0:	ee31 1a05 	vadd.f32	s2, s2, s10
900227c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900227c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
900227cc:	eef0 6a43 	vmov.f32	s13, s6
900227d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900227d4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
900227d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900227dc:	ee61 7a27 	vmul.f32	s15, s2, s15
900227e0:	ee77 2a62 	vsub.f32	s5, s14, s5
900227e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900227e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900227ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900227f0:	ee12 2a90 	vmov	r2, s5
900227f4:	eef0 2a47 	vmov.f32	s5, s14
900227f8:	fb92 f3f3 	sdiv	r3, r2, r3
900227fc:	ee13 2a10 	vmov	r2, s6
90022800:	9321      	str	r3, [sp, #132]	; 0x84
90022802:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022804:	eeb0 3a67 	vmov.f32	s6, s15
90022808:	fb92 f3f3 	sdiv	r3, r2, r3
9002280c:	9322      	str	r3, [sp, #136]	; 0x88
9002280e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022810:	9a12      	ldr	r2, [sp, #72]	; 0x48
90022812:	3b01      	subs	r3, #1
90022814:	930e      	str	r3, [sp, #56]	; 0x38
90022816:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022818:	bf08      	it	eq
9002281a:	4613      	moveq	r3, r2
9002281c:	9309      	str	r3, [sp, #36]	; 0x24
9002281e:	e68c      	b.n	9002253a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022820:	b149      	cbz	r1, 90022836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90022822:	5cb2      	ldrb	r2, [r6, r2]
90022824:	4628      	mov	r0, r5
90022826:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002282a:	4422      	add	r2, r4
9002282c:	46ac      	mov	ip, r5
9002282e:	e6f1      	b.n	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022830:	4628      	mov	r0, r5
90022832:	462a      	mov	r2, r5
90022834:	e6ee      	b.n	90022614 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90022836:	4628      	mov	r0, r5
90022838:	462a      	mov	r2, r5
9002283a:	e7f7      	b.n	9002282c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9002283c:	1c47      	adds	r7, r0, #1
9002283e:	f53f af69 	bmi.w	90022714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022842:	42ba      	cmp	r2, r7
90022844:	f6ff af66 	blt.w	90022714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022848:	1c6f      	adds	r7, r5, #1
9002284a:	f53f af63 	bmi.w	90022714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002284e:	42be      	cmp	r6, r7
90022850:	f6ff af60 	blt.w	90022714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022854:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90022856:	b236      	sxth	r6, r6
90022858:	b212      	sxth	r2, r2
9002285a:	9002      	str	r0, [sp, #8]
9002285c:	9601      	str	r6, [sp, #4]
9002285e:	9200      	str	r2, [sp, #0]
90022860:	9813      	ldr	r0, [sp, #76]	; 0x4c
90022862:	e9cd 1705 	strd	r1, r7, [sp, #20]
90022866:	e9cd 5303 	strd	r5, r3, [sp, #12]
9002286a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9002286e:	4623      	mov	r3, r4
90022870:	f7ff fd59 	bl	90022326 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90022874:	e74e      	b.n	90022714 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90022876:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022878:	9820      	ldr	r0, [sp, #128]	; 0x80
9002287a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9002287e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90022880:	9a26      	ldr	r2, [sp, #152]	; 0x98
90022882:	1400      	asrs	r0, r0, #16
90022884:	142d      	asrs	r5, r5, #16
90022886:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022888:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9002288c:	f3c3 3303 	ubfx	r3, r3, #12, #4
90022890:	fb02 5000 	mla	r0, r2, r0, r5
90022894:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90022896:	f815 9000 	ldrb.w	r9, [r5, r0]
9002289a:	182e      	adds	r6, r5, r0
9002289c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
900228a0:	eb04 0509 	add.w	r5, r4, r9
900228a4:	2b00      	cmp	r3, #0
900228a6:	f000 8096 	beq.w	900229d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
900228aa:	7877      	ldrb	r7, [r6, #1]
900228ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900228b0:	4427      	add	r7, r4
900228b2:	2900      	cmp	r1, #0
900228b4:	f000 8097 	beq.w	900229e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
900228b8:	18b0      	adds	r0, r6, r2
900228ba:	5cb2      	ldrb	r2, [r6, r2]
900228bc:	7840      	ldrb	r0, [r0, #1]
900228be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900228c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900228c6:	4422      	add	r2, r4
900228c8:	4420      	add	r0, r4
900228ca:	b29b      	uxth	r3, r3
900228cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
900228ce:	b289      	uxth	r1, r1
900228d0:	f895 b002 	ldrb.w	fp, [r5, #2]
900228d4:	f8b6 c000 	ldrh.w	ip, [r6]
900228d8:	fb03 f801 	mul.w	r8, r3, r1
900228dc:	011b      	lsls	r3, r3, #4
900228de:	78be      	ldrb	r6, [r7, #2]
900228e0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
900228e4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
900228e8:	eba3 0308 	sub.w	r3, r3, r8
900228ec:	f814 9009 	ldrb.w	r9, [r4, r9]
900228f0:	b289      	uxth	r1, r1
900228f2:	b29b      	uxth	r3, r3
900228f4:	ebae 0e01 	sub.w	lr, lr, r1
900228f8:	435e      	muls	r6, r3
900228fa:	fa1f fe8e 	uxth.w	lr, lr
900228fe:	9310      	str	r3, [sp, #64]	; 0x40
90022900:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022902:	fb0e 660b 	mla	r6, lr, fp, r6
90022906:	f892 b002 	ldrb.w	fp, [r2, #2]
9002290a:	fb01 660b 	mla	r6, r1, fp, r6
9002290e:	f890 b002 	ldrb.w	fp, [r0, #2]
90022912:	fb08 660b 	mla	r6, r8, fp, r6
90022916:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9002291a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9002291e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022922:	fb1b fb03 	smulbb	fp, fp, r3
90022926:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022928:	fb06 b60a 	mla	r6, r6, sl, fp
9002292c:	f895 b001 	ldrb.w	fp, [r5, #1]
90022930:	787d      	ldrb	r5, [r7, #1]
90022932:	783f      	ldrb	r7, [r7, #0]
90022934:	b2b6      	uxth	r6, r6
90022936:	435d      	muls	r5, r3
90022938:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002293a:	fb0e 550b 	mla	r5, lr, fp, r5
9002293e:	f892 b001 	ldrb.w	fp, [r2, #1]
90022942:	fb01 550b 	mla	r5, r1, fp, r5
90022946:	f890 b001 	ldrb.w	fp, [r0, #1]
9002294a:	fb08 550b 	mla	r5, r8, fp, r5
9002294e:	ea4f 0bec 	mov.w	fp, ip, asr #3
90022952:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022956:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9002295a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002295e:	fa5f fc8c 	uxtb.w	ip, ip
90022962:	fb1b fb03 	smulbb	fp, fp, r3
90022966:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022968:	437b      	muls	r3, r7
9002296a:	7817      	ldrb	r7, [r2, #0]
9002296c:	fb05 b50a 	mla	r5, r5, sl, fp
90022970:	fb0e 3309 	mla	r3, lr, r9, r3
90022974:	b2ad      	uxth	r5, r5
90022976:	fb01 3307 	mla	r3, r1, r7, r3
9002297a:	7807      	ldrb	r7, [r0, #0]
9002297c:	f105 0b01 	add.w	fp, r5, #1
90022980:	fb08 3707 	mla	r7, r8, r7, r3
90022984:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022986:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9002298a:	fb1c fc03 	smulbb	ip, ip, r3
9002298e:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022992:	1c73      	adds	r3, r6, #1
90022994:	096d      	lsrs	r5, r5, #5
90022996:	fb07 c70a 	mla	r7, r7, sl, ip
9002299a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002299e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900229a2:	b2bf      	uxth	r7, r7
900229a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900229a6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
900229aa:	1c7a      	adds	r2, r7, #1
900229ac:	eb02 2217 	add.w	r2, r2, r7, lsr #8
900229b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900229b4:	4316      	orrs	r6, r2
900229b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900229b8:	432e      	orrs	r6, r5
900229ba:	f823 6b02 	strh.w	r6, [r3], #2
900229be:	930c      	str	r3, [sp, #48]	; 0x30
900229c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900229c2:	4413      	add	r3, r2
900229c4:	9a22      	ldr	r2, [sp, #136]	; 0x88
900229c6:	931f      	str	r3, [sp, #124]	; 0x7c
900229c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900229ca:	4413      	add	r3, r2
900229cc:	9320      	str	r3, [sp, #128]	; 0x80
900229ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
900229d0:	3b01      	subs	r3, #1
900229d2:	9311      	str	r3, [sp, #68]	; 0x44
900229d4:	e6db      	b.n	9002278e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
900229d6:	b149      	cbz	r1, 900229ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
900229d8:	5cb2      	ldrb	r2, [r6, r2]
900229da:	4628      	mov	r0, r5
900229dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900229e0:	4422      	add	r2, r4
900229e2:	462f      	mov	r7, r5
900229e4:	e771      	b.n	900228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900229e6:	4628      	mov	r0, r5
900229e8:	462a      	mov	r2, r5
900229ea:	e76e      	b.n	900228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900229ec:	4628      	mov	r0, r5
900229ee:	462a      	mov	r2, r5
900229f0:	e7f7      	b.n	900229e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900229f2:	b015      	add	sp, #84	; 0x54
900229f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900229f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900229f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900229fc:	880f      	ldrh	r7, [r1, #0]
900229fe:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
90022a02:	023c      	lsls	r4, r7, #8
90022a04:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90022a08:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
90022a0c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
90022a10:	017c      	lsls	r4, r7, #5
90022a12:	00ff      	lsls	r7, r7, #3
90022a14:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022a18:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
90022a1c:	b2ff      	uxtb	r7, r7
90022a1e:	ea4b 0404 	orr.w	r4, fp, r4
90022a22:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
90022a26:	4327      	orrs	r7, r4
90022a28:	fb05 ca0e 	mla	sl, r5, lr, ip
90022a2c:	2d00      	cmp	r5, #0
90022a2e:	9701      	str	r7, [sp, #4]
90022a30:	eb02 080a 	add.w	r8, r2, sl
90022a34:	db7e      	blt.n	90022b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022a36:	45a9      	cmp	r9, r5
90022a38:	dd7c      	ble.n	90022b34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90022a3a:	f1bc 0f00 	cmp.w	ip, #0
90022a3e:	db77      	blt.n	90022b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022a40:	45e6      	cmp	lr, ip
90022a42:	dd75      	ble.n	90022b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90022a44:	f812 700a 	ldrb.w	r7, [r2, sl]
90022a48:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90022a4c:	441f      	add	r7, r3
90022a4e:	f11c 0201 	adds.w	r2, ip, #1
90022a52:	d472      	bmi.n	90022b3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022a54:	4596      	cmp	lr, r2
90022a56:	dd70      	ble.n	90022b3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022a58:	2800      	cmp	r0, #0
90022a5a:	d06e      	beq.n	90022b3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90022a5c:	f898 4001 	ldrb.w	r4, [r8, #1]
90022a60:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90022a64:	441c      	add	r4, r3
90022a66:	3501      	adds	r5, #1
90022a68:	d46b      	bmi.n	90022b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022a6a:	45a9      	cmp	r9, r5
90022a6c:	dd69      	ble.n	90022b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022a6e:	2e00      	cmp	r6, #0
90022a70:	d067      	beq.n	90022b42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022a72:	f1bc 0f00 	cmp.w	ip, #0
90022a76:	db62      	blt.n	90022b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022a78:	45e6      	cmp	lr, ip
90022a7a:	dd60      	ble.n	90022b3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022a7c:	f818 500e 	ldrb.w	r5, [r8, lr]
90022a80:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90022a84:	441d      	add	r5, r3
90022a86:	f11c 0201 	adds.w	r2, ip, #1
90022a8a:	d45d      	bmi.n	90022b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022a8c:	4596      	cmp	lr, r2
90022a8e:	dd5b      	ble.n	90022b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022a90:	2800      	cmp	r0, #0
90022a92:	d059      	beq.n	90022b48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022a94:	44c6      	add	lr, r8
90022a96:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022a9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022a9e:	4413      	add	r3, r2
90022aa0:	b280      	uxth	r0, r0
90022aa2:	f897 e002 	ldrb.w	lr, [r7, #2]
90022aa6:	b2b2      	uxth	r2, r6
90022aa8:	f897 9000 	ldrb.w	r9, [r7]
90022aac:	787f      	ldrb	r7, [r7, #1]
90022aae:	fb00 f602 	mul.w	r6, r0, r2
90022ab2:	0100      	lsls	r0, r0, #4
90022ab4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022ab8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90022abc:	1b80      	subs	r0, r0, r6
90022abe:	fa1f fc82 	uxth.w	ip, r2
90022ac2:	b282      	uxth	r2, r0
90022ac4:	78a0      	ldrb	r0, [r4, #2]
90022ac6:	eba8 080c 	sub.w	r8, r8, ip
90022aca:	4350      	muls	r0, r2
90022acc:	fa1f f888 	uxth.w	r8, r8
90022ad0:	fb08 0e0e 	mla	lr, r8, lr, r0
90022ad4:	78a8      	ldrb	r0, [r5, #2]
90022ad6:	fb0c e000 	mla	r0, ip, r0, lr
90022ada:	f893 e002 	ldrb.w	lr, [r3, #2]
90022ade:	fb06 0e0e 	mla	lr, r6, lr, r0
90022ae2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
90022ae6:	f894 e000 	ldrb.w	lr, [r4]
90022aea:	fb02 fe0e 	mul.w	lr, r2, lr
90022aee:	fb08 e909 	mla	r9, r8, r9, lr
90022af2:	f895 e000 	ldrb.w	lr, [r5]
90022af6:	fb0c 990e 	mla	r9, ip, lr, r9
90022afa:	f893 e000 	ldrb.w	lr, [r3]
90022afe:	785b      	ldrb	r3, [r3, #1]
90022b00:	fb06 9e0e 	mla	lr, r6, lr, r9
90022b04:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022b08:	ea4e 0e00 	orr.w	lr, lr, r0
90022b0c:	7860      	ldrb	r0, [r4, #1]
90022b0e:	4350      	muls	r0, r2
90022b10:	786a      	ldrb	r2, [r5, #1]
90022b12:	fb08 0007 	mla	r0, r8, r7, r0
90022b16:	fb0c 0202 	mla	r2, ip, r2, r0
90022b1a:	fb06 2303 	mla	r3, r6, r3, r2
90022b1e:	095b      	lsrs	r3, r3, #5
90022b20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022b24:	ea4e 0303 	orr.w	r3, lr, r3
90022b28:	800b      	strh	r3, [r1, #0]
90022b2a:	b003      	add	sp, #12
90022b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022b30:	af01      	add	r7, sp, #4
90022b32:	e78c      	b.n	90022a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90022b34:	ac01      	add	r4, sp, #4
90022b36:	4627      	mov	r7, r4
90022b38:	e795      	b.n	90022a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022b3a:	ac01      	add	r4, sp, #4
90022b3c:	e793      	b.n	90022a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90022b3e:	ad01      	add	r5, sp, #4
90022b40:	e7a1      	b.n	90022a86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90022b42:	ab01      	add	r3, sp, #4
90022b44:	461d      	mov	r5, r3
90022b46:	e7ab      	b.n	90022aa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90022b48:	ab01      	add	r3, sp, #4
90022b4a:	e7a9      	b.n	90022aa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90022b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022b50:	b08f      	sub	sp, #60	; 0x3c
90022b52:	920c      	str	r2, [sp, #48]	; 0x30
90022b54:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90022b56:	900d      	str	r0, [sp, #52]	; 0x34
90022b58:	910a      	str	r1, [sp, #40]	; 0x28
90022b5a:	6850      	ldr	r0, [r2, #4]
90022b5c:	9306      	str	r3, [sp, #24]
90022b5e:	6812      	ldr	r2, [r2, #0]
90022b60:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90022b64:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90022b68:	fb00 1303 	mla	r3, r0, r3, r1
90022b6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022b70:	9307      	str	r3, [sp, #28]
90022b72:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b74:	681b      	ldr	r3, [r3, #0]
90022b76:	9308      	str	r3, [sp, #32]
90022b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b7a:	685c      	ldr	r4, [r3, #4]
90022b7c:	3404      	adds	r4, #4
90022b7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022b80:	2b00      	cmp	r3, #0
90022b82:	dc03      	bgt.n	90022b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90022b84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022b86:	2b00      	cmp	r3, #0
90022b88:	f340 81d5 	ble.w	90022f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022b8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022b8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022b92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022b96:	1e48      	subs	r0, r1, #1
90022b98:	1e56      	subs	r6, r2, #1
90022b9a:	9b06      	ldr	r3, [sp, #24]
90022b9c:	2b00      	cmp	r3, #0
90022b9e:	f340 80b6 	ble.w	90022d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022ba2:	ea5f 472b 	movs.w	r7, fp, asr #16
90022ba6:	ea4f 4325 	mov.w	r3, r5, asr #16
90022baa:	d406      	bmi.n	90022bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022bac:	4287      	cmp	r7, r0
90022bae:	da04      	bge.n	90022bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022bb0:	2b00      	cmp	r3, #0
90022bb2:	db02      	blt.n	90022bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022bb4:	42b3      	cmp	r3, r6
90022bb6:	f2c0 80ab 	blt.w	90022d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022bba:	3701      	adds	r7, #1
90022bbc:	f100 809c 	bmi.w	90022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022bc0:	42b9      	cmp	r1, r7
90022bc2:	f2c0 8099 	blt.w	90022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022bc6:	3301      	adds	r3, #1
90022bc8:	f100 8096 	bmi.w	90022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022bcc:	429a      	cmp	r2, r3
90022bce:	f2c0 8093 	blt.w	90022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022bd2:	9b06      	ldr	r3, [sp, #24]
90022bd4:	930b      	str	r3, [sp, #44]	; 0x2c
90022bd6:	9b07      	ldr	r3, [sp, #28]
90022bd8:	9309      	str	r3, [sp, #36]	; 0x24
90022bda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022bdc:	2b00      	cmp	r3, #0
90022bde:	f340 80b4 	ble.w	90022d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90022be2:	9820      	ldr	r0, [sp, #128]	; 0x80
90022be4:	142e      	asrs	r6, r5, #16
90022be6:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022be8:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022bec:	68c7      	ldr	r7, [r0, #12]
90022bee:	ea5f 402b 	movs.w	r0, fp, asr #16
90022bf2:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022bf6:	6892      	ldr	r2, [r2, #8]
90022bf8:	f100 80fb 	bmi.w	90022df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022bfc:	f102 3cff 	add.w	ip, r2, #4294967295
90022c00:	4560      	cmp	r0, ip
90022c02:	f280 80f6 	bge.w	90022df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022c06:	2e00      	cmp	r6, #0
90022c08:	f2c0 80f3 	blt.w	90022df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022c0c:	f107 3cff 	add.w	ip, r7, #4294967295
90022c10:	4566      	cmp	r6, ip
90022c12:	f280 80ee 	bge.w	90022df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022c16:	b212      	sxth	r2, r2
90022c18:	fb06 0002 	mla	r0, r6, r2, r0
90022c1c:	9e08      	ldr	r6, [sp, #32]
90022c1e:	1837      	adds	r7, r6, r0
90022c20:	5c30      	ldrb	r0, [r6, r0]
90022c22:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90022c26:	eb04 0c08 	add.w	ip, r4, r8
90022c2a:	2b00      	cmp	r3, #0
90022c2c:	f000 80d3 	beq.w	90022dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90022c30:	787e      	ldrb	r6, [r7, #1]
90022c32:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022c36:	4426      	add	r6, r4
90022c38:	2900      	cmp	r1, #0
90022c3a:	f000 80d4 	beq.w	90022de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90022c3e:	18b8      	adds	r0, r7, r2
90022c40:	5cba      	ldrb	r2, [r7, r2]
90022c42:	7840      	ldrb	r0, [r0, #1]
90022c44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022c48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022c4c:	4422      	add	r2, r4
90022c4e:	4420      	add	r0, r4
90022c50:	b29b      	uxth	r3, r3
90022c52:	78b7      	ldrb	r7, [r6, #2]
90022c54:	b289      	uxth	r1, r1
90022c56:	f89c a002 	ldrb.w	sl, [ip, #2]
90022c5a:	f89c c001 	ldrb.w	ip, [ip, #1]
90022c5e:	fb03 f901 	mul.w	r9, r3, r1
90022c62:	011b      	lsls	r3, r3, #4
90022c64:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022c68:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022c6c:	eba3 0309 	sub.w	r3, r3, r9
90022c70:	b289      	uxth	r1, r1
90022c72:	b29b      	uxth	r3, r3
90022c74:	ebae 0e01 	sub.w	lr, lr, r1
90022c78:	435f      	muls	r7, r3
90022c7a:	fa1f fe8e 	uxth.w	lr, lr
90022c7e:	fb0e 770a 	mla	r7, lr, sl, r7
90022c82:	f892 a002 	ldrb.w	sl, [r2, #2]
90022c86:	fb01 770a 	mla	r7, r1, sl, r7
90022c8a:	f890 a002 	ldrb.w	sl, [r0, #2]
90022c8e:	fb09 7a0a 	mla	sl, r9, sl, r7
90022c92:	f814 7008 	ldrb.w	r7, [r4, r8]
90022c96:	f896 8000 	ldrb.w	r8, [r6]
90022c9a:	7876      	ldrb	r6, [r6, #1]
90022c9c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90022ca0:	fb03 f808 	mul.w	r8, r3, r8
90022ca4:	4373      	muls	r3, r6
90022ca6:	fb0e 8807 	mla	r8, lr, r7, r8
90022caa:	7817      	ldrb	r7, [r2, #0]
90022cac:	fb0e 330c 	mla	r3, lr, ip, r3
90022cb0:	fb01 8807 	mla	r8, r1, r7, r8
90022cb4:	7807      	ldrb	r7, [r0, #0]
90022cb6:	fb09 8707 	mla	r7, r9, r7, r8
90022cba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022cbe:	ea47 070a 	orr.w	r7, r7, sl
90022cc2:	f892 a001 	ldrb.w	sl, [r2, #1]
90022cc6:	fb01 310a 	mla	r1, r1, sl, r3
90022cca:	f890 a001 	ldrb.w	sl, [r0, #1]
90022cce:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022cd0:	fb09 1a0a 	mla	sl, r9, sl, r1
90022cd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022cd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90022cdc:	ea47 070a 	orr.w	r7, r7, sl
90022ce0:	801f      	strh	r7, [r3, #0]
90022ce2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022ce4:	3302      	adds	r3, #2
90022ce6:	9309      	str	r3, [sp, #36]	; 0x24
90022ce8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022cea:	449b      	add	fp, r3
90022cec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022cee:	441d      	add	r5, r3
90022cf0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022cf2:	3b01      	subs	r3, #1
90022cf4:	930b      	str	r3, [sp, #44]	; 0x2c
90022cf6:	e770      	b.n	90022bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022cf8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022cfa:	449b      	add	fp, r3
90022cfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022cfe:	441d      	add	r5, r3
90022d00:	9b06      	ldr	r3, [sp, #24]
90022d02:	3b01      	subs	r3, #1
90022d04:	9306      	str	r3, [sp, #24]
90022d06:	9b07      	ldr	r3, [sp, #28]
90022d08:	3302      	adds	r3, #2
90022d0a:	9307      	str	r3, [sp, #28]
90022d0c:	e745      	b.n	90022b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90022d0e:	d023      	beq.n	90022d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90022d10:	9b06      	ldr	r3, [sp, #24]
90022d12:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022d14:	3b01      	subs	r3, #1
90022d16:	fb00 b003 	mla	r0, r0, r3, fp
90022d1a:	1400      	asrs	r0, r0, #16
90022d1c:	f53f af59 	bmi.w	90022bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022d20:	3901      	subs	r1, #1
90022d22:	4288      	cmp	r0, r1
90022d24:	f6bf af55 	bge.w	90022bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022d28:	991c      	ldr	r1, [sp, #112]	; 0x70
90022d2a:	fb01 5303 	mla	r3, r1, r3, r5
90022d2e:	141b      	asrs	r3, r3, #16
90022d30:	f53f af4f 	bmi.w	90022bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022d34:	3a01      	subs	r2, #1
90022d36:	4293      	cmp	r3, r2
90022d38:	f6bf af4b 	bge.w	90022bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022d3c:	9b06      	ldr	r3, [sp, #24]
90022d3e:	9309      	str	r3, [sp, #36]	; 0x24
90022d40:	9b07      	ldr	r3, [sp, #28]
90022d42:	930b      	str	r3, [sp, #44]	; 0x2c
90022d44:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022d46:	2b00      	cmp	r3, #0
90022d48:	dc70      	bgt.n	90022e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90022d4a:	9b06      	ldr	r3, [sp, #24]
90022d4c:	9a07      	ldr	r2, [sp, #28]
90022d4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90022d52:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022d56:	9307      	str	r3, [sp, #28]
90022d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022d5a:	2b00      	cmp	r3, #0
90022d5c:	f340 80eb 	ble.w	90022f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022d60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022d64:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022d66:	ee30 0a04 	vadd.f32	s0, s0, s8
90022d6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022d6e:	eef0 6a62 	vmov.f32	s13, s5
90022d72:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022d76:	ee31 1a05 	vadd.f32	s2, s2, s10
90022d7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022d7e:	ee16 ba90 	vmov	fp, s13
90022d82:	eef0 6a43 	vmov.f32	s13, s6
90022d86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022d8a:	ee16 5a90 	vmov	r5, s13
90022d8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022d92:	ee61 7a27 	vmul.f32	s15, s2, s15
90022d96:	ee77 2a62 	vsub.f32	s5, s14, s5
90022d9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022d9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022da2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022da6:	ee12 2a90 	vmov	r2, s5
90022daa:	eef0 2a47 	vmov.f32	s5, s14
90022dae:	fb92 f3f3 	sdiv	r3, r2, r3
90022db2:	ee13 2a10 	vmov	r2, s6
90022db6:	931b      	str	r3, [sp, #108]	; 0x6c
90022db8:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022dba:	eeb0 3a67 	vmov.f32	s6, s15
90022dbe:	fb92 f3f3 	sdiv	r3, r2, r3
90022dc2:	931c      	str	r3, [sp, #112]	; 0x70
90022dc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022dc6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022dc8:	3b01      	subs	r3, #1
90022dca:	930a      	str	r3, [sp, #40]	; 0x28
90022dcc:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022dce:	bf08      	it	eq
90022dd0:	4613      	moveq	r3, r2
90022dd2:	9306      	str	r3, [sp, #24]
90022dd4:	e6d3      	b.n	90022b7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90022dd6:	b149      	cbz	r1, 90022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022dd8:	5cba      	ldrb	r2, [r7, r2]
90022dda:	4660      	mov	r0, ip
90022ddc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022de0:	4422      	add	r2, r4
90022de2:	4666      	mov	r6, ip
90022de4:	e734      	b.n	90022c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022de6:	4660      	mov	r0, ip
90022de8:	4662      	mov	r2, ip
90022dea:	e731      	b.n	90022c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022dec:	4660      	mov	r0, ip
90022dee:	4662      	mov	r2, ip
90022df0:	e7f7      	b.n	90022de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90022df2:	f110 0c01 	adds.w	ip, r0, #1
90022df6:	f53f af74 	bmi.w	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022dfa:	4562      	cmp	r2, ip
90022dfc:	f6ff af71 	blt.w	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022e00:	f116 0c01 	adds.w	ip, r6, #1
90022e04:	f53f af6d 	bmi.w	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022e08:	4567      	cmp	r7, ip
90022e0a:	f6ff af6a 	blt.w	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022e0e:	b23f      	sxth	r7, r7
90022e10:	b212      	sxth	r2, r2
90022e12:	9701      	str	r7, [sp, #4]
90022e14:	9200      	str	r2, [sp, #0]
90022e16:	e9cd 3104 	strd	r3, r1, [sp, #16]
90022e1a:	e9cd 0602 	strd	r0, r6, [sp, #8]
90022e1e:	4623      	mov	r3, r4
90022e20:	980d      	ldr	r0, [sp, #52]	; 0x34
90022e22:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90022e26:	f7ff fde7 	bl	900229f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90022e2a:	e75a      	b.n	90022ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022e2c:	9a20      	ldr	r2, [sp, #128]	; 0x80
90022e2e:	ea4f 462b 	mov.w	r6, fp, asr #16
90022e32:	1428      	asrs	r0, r5, #16
90022e34:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022e38:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90022e3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022e40:	fb02 6000 	mla	r0, r2, r0, r6
90022e44:	9e08      	ldr	r6, [sp, #32]
90022e46:	f816 8000 	ldrb.w	r8, [r6, r0]
90022e4a:	1837      	adds	r7, r6, r0
90022e4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90022e50:	eb04 0c08 	add.w	ip, r4, r8
90022e54:	2b00      	cmp	r3, #0
90022e56:	d060      	beq.n	90022f1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90022e58:	787e      	ldrb	r6, [r7, #1]
90022e5a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90022e5e:	4426      	add	r6, r4
90022e60:	2900      	cmp	r1, #0
90022e62:	d062      	beq.n	90022f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90022e64:	18b8      	adds	r0, r7, r2
90022e66:	5cba      	ldrb	r2, [r7, r2]
90022e68:	7840      	ldrb	r0, [r0, #1]
90022e6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022e6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90022e72:	4422      	add	r2, r4
90022e74:	4420      	add	r0, r4
90022e76:	b29b      	uxth	r3, r3
90022e78:	78b7      	ldrb	r7, [r6, #2]
90022e7a:	b289      	uxth	r1, r1
90022e7c:	f89c a002 	ldrb.w	sl, [ip, #2]
90022e80:	f89c c001 	ldrb.w	ip, [ip, #1]
90022e84:	fb03 f901 	mul.w	r9, r3, r1
90022e88:	011b      	lsls	r3, r3, #4
90022e8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022e8e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90022e92:	eba3 0309 	sub.w	r3, r3, r9
90022e96:	b289      	uxth	r1, r1
90022e98:	b29b      	uxth	r3, r3
90022e9a:	ebae 0e01 	sub.w	lr, lr, r1
90022e9e:	435f      	muls	r7, r3
90022ea0:	fa1f fe8e 	uxth.w	lr, lr
90022ea4:	fb0e 770a 	mla	r7, lr, sl, r7
90022ea8:	f892 a002 	ldrb.w	sl, [r2, #2]
90022eac:	fb01 770a 	mla	r7, r1, sl, r7
90022eb0:	f890 a002 	ldrb.w	sl, [r0, #2]
90022eb4:	fb09 7a0a 	mla	sl, r9, sl, r7
90022eb8:	f814 7008 	ldrb.w	r7, [r4, r8]
90022ebc:	f896 8000 	ldrb.w	r8, [r6]
90022ec0:	7876      	ldrb	r6, [r6, #1]
90022ec2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90022ec6:	fb03 f808 	mul.w	r8, r3, r8
90022eca:	4373      	muls	r3, r6
90022ecc:	7856      	ldrb	r6, [r2, #1]
90022ece:	fb0e 8807 	mla	r8, lr, r7, r8
90022ed2:	7817      	ldrb	r7, [r2, #0]
90022ed4:	fb0e 330c 	mla	r3, lr, ip, r3
90022ed8:	fb01 8807 	mla	r8, r1, r7, r8
90022edc:	7807      	ldrb	r7, [r0, #0]
90022ede:	fb01 3306 	mla	r3, r1, r6, r3
90022ee2:	fb09 8707 	mla	r7, r9, r7, r8
90022ee6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022eea:	ea47 070a 	orr.w	r7, r7, sl
90022eee:	f890 a001 	ldrb.w	sl, [r0, #1]
90022ef2:	fb09 3a0a 	mla	sl, r9, sl, r3
90022ef6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022ef8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022efc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90022f00:	ea47 070a 	orr.w	r7, r7, sl
90022f04:	f823 7b02 	strh.w	r7, [r3], #2
90022f08:	930b      	str	r3, [sp, #44]	; 0x2c
90022f0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022f0c:	449b      	add	fp, r3
90022f0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022f10:	441d      	add	r5, r3
90022f12:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022f14:	3b01      	subs	r3, #1
90022f16:	9309      	str	r3, [sp, #36]	; 0x24
90022f18:	e714      	b.n	90022d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90022f1a:	b149      	cbz	r1, 90022f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90022f1c:	5cba      	ldrb	r2, [r7, r2]
90022f1e:	4660      	mov	r0, ip
90022f20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022f24:	4422      	add	r2, r4
90022f26:	4666      	mov	r6, ip
90022f28:	e7a5      	b.n	90022e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022f2a:	4660      	mov	r0, ip
90022f2c:	4662      	mov	r2, ip
90022f2e:	e7a2      	b.n	90022e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90022f30:	4660      	mov	r0, ip
90022f32:	4662      	mov	r2, ip
90022f34:	e7f7      	b.n	90022f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90022f36:	b00f      	add	sp, #60	; 0x3c
90022f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022f3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90022f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022f40:	b085      	sub	sp, #20
90022f42:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90022f46:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90022f4a:	9102      	str	r1, [sp, #8]
90022f4c:	2c00      	cmp	r4, #0
90022f4e:	fb04 710c 	mla	r1, r4, ip, r7
90022f52:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90022f56:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90022f5a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90022f5e:	eb02 0e01 	add.w	lr, r2, r1
90022f62:	f2c0 8122 	blt.w	900231aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022f66:	45a0      	cmp	r8, r4
90022f68:	f340 811f 	ble.w	900231aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022f6c:	2f00      	cmp	r7, #0
90022f6e:	f2c0 811a 	blt.w	900231a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022f72:	45bc      	cmp	ip, r7
90022f74:	f340 8117 	ble.w	900231a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022f78:	5c52      	ldrb	r2, [r2, r1]
90022f7a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90022f7e:	1c7a      	adds	r2, r7, #1
90022f80:	f100 8116 	bmi.w	900231b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022f84:	4594      	cmp	ip, r2
90022f86:	f340 8113 	ble.w	900231b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022f8a:	2e00      	cmp	r6, #0
90022f8c:	f000 8112 	beq.w	900231b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022f90:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022f94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022f98:	3401      	adds	r4, #1
90022f9a:	f100 810f 	bmi.w	900231bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022f9e:	45a0      	cmp	r8, r4
90022fa0:	f340 810c 	ble.w	900231bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022fa4:	2800      	cmp	r0, #0
90022fa6:	f000 810c 	beq.w	900231c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022faa:	2f00      	cmp	r7, #0
90022fac:	f2c0 8104 	blt.w	900231b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022fb0:	45bc      	cmp	ip, r7
90022fb2:	f340 8101 	ble.w	900231b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022fb6:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022fba:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022fbe:	3701      	adds	r7, #1
90022fc0:	f100 8102 	bmi.w	900231c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022fc4:	45bc      	cmp	ip, r7
90022fc6:	f340 80ff 	ble.w	900231c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022fca:	2e00      	cmp	r6, #0
90022fcc:	f000 80fe 	beq.w	900231cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022fd0:	44f4      	add	ip, lr
90022fd2:	f89c 2001 	ldrb.w	r2, [ip, #1]
90022fd6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022fda:	b2b6      	uxth	r6, r6
90022fdc:	b280      	uxth	r0, r0
90022fde:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022fe2:	fb00 fe06 	mul.w	lr, r0, r6
90022fe6:	0136      	lsls	r6, r6, #4
90022fe8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022fec:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022ff0:	eba6 070e 	sub.w	r7, r6, lr
90022ff4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90022ff8:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022ffc:	b280      	uxth	r0, r0
90022ffe:	b2bf      	uxth	r7, r7
90023000:	1a1b      	subs	r3, r3, r0
90023002:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023006:	fb0a f607 	mul.w	r6, sl, r7
9002300a:	b29b      	uxth	r3, r3
9002300c:	fb0b 6603 	mla	r6, fp, r3, r6
90023010:	fb00 6609 	mla	r6, r0, r9, r6
90023014:	fb0e 6608 	mla	r6, lr, r8, r6
90023018:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002301c:	9600      	str	r6, [sp, #0]
9002301e:	2e00      	cmp	r6, #0
90023020:	f000 80be 	beq.w	900231a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90023024:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023028:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9002302c:	9e02      	ldr	r6, [sp, #8]
9002302e:	fb0b fc0c 	mul.w	ip, fp, ip
90023032:	fb0b f505 	mul.w	r5, fp, r5
90023036:	8836      	ldrh	r6, [r6, #0]
90023038:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002303c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023040:	9501      	str	r5, [sp, #4]
90023042:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90023046:	44dc      	add	ip, fp
90023048:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002304c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90023050:	9503      	str	r5, [sp, #12]
90023052:	9d01      	ldr	r5, [sp, #4]
90023054:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90023058:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002305c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90023060:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023064:	fb0a fc0c 	mul.w	ip, sl, ip
90023068:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002306c:	fb0a fa01 	mul.w	sl, sl, r1
90023070:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023074:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023078:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002307c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023080:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023084:	4465      	add	r5, ip
90023086:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002308a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002308e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023092:	fb09 fc0c 	mul.w	ip, r9, ip
90023096:	0a2d      	lsrs	r5, r5, #8
90023098:	fb09 f904 	mul.w	r9, r9, r4
9002309c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900230a0:	ea4f 211c 	mov.w	r1, ip, lsr #8
900230a4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900230a8:	f509 7480 	add.w	r4, r9, #256	; 0x100
900230ac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900230b0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900230b4:	437d      	muls	r5, r7
900230b6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900230ba:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
900230be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900230c2:	4461      	add	r1, ip
900230c4:	fb08 f404 	mul.w	r4, r8, r4
900230c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
900230cc:	fb08 f802 	mul.w	r8, r8, r2
900230d0:	0a09      	lsrs	r1, r1, #8
900230d2:	0a22      	lsrs	r2, r4, #8
900230d4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900230d8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900230dc:	fb07 f70a 	mul.w	r7, r7, sl
900230e0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900230e4:	4414      	add	r4, r2
900230e6:	f508 7280 	add.w	r2, r8, #256	; 0x100
900230ea:	0a24      	lsrs	r4, r4, #8
900230ec:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900230f0:	9a03      	ldr	r2, [sp, #12]
900230f2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900230f6:	fb02 5503 	mla	r5, r2, r3, r5
900230fa:	ea4f 2818 	mov.w	r8, r8, lsr #8
900230fe:	9a00      	ldr	r2, [sp, #0]
90023100:	fb04 540e 	mla	r4, r4, lr, r5
90023104:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90023108:	1235      	asrs	r5, r6, #8
9002310a:	fb01 4100 	mla	r1, r1, r0, r4
9002310e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90023112:	0a09      	lsrs	r1, r1, #8
90023114:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90023118:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9002311c:	fb03 7101 	mla	r1, r3, r1, r7
90023120:	fb0e 1e08 	mla	lr, lr, r8, r1
90023124:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90023128:	fb00 e101 	mla	r1, r0, r1, lr
9002312c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90023130:	b287      	uxth	r7, r0
90023132:	0a09      	lsrs	r1, r1, #8
90023134:	437a      	muls	r2, r7
90023136:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002313a:	1c53      	adds	r3, r2, #1
9002313c:	4321      	orrs	r1, r4
9002313e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023142:	0c0a      	lsrs	r2, r1, #16
90023144:	f3c1 2407 	ubfx	r4, r1, #8, #8
90023148:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002314c:	b2c8      	uxtb	r0, r1
9002314e:	fb12 f207 	smulbb	r2, r2, r7
90023152:	fb14 f407 	smulbb	r4, r4, r7
90023156:	b2db      	uxtb	r3, r3
90023158:	fb10 f007 	smulbb	r0, r0, r7
9002315c:	fb05 2503 	mla	r5, r5, r3, r2
90023160:	10f2      	asrs	r2, r6, #3
90023162:	00f6      	lsls	r6, r6, #3
90023164:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90023168:	b2ad      	uxth	r5, r5
9002316a:	b2f6      	uxtb	r6, r6
9002316c:	fb02 4203 	mla	r2, r2, r3, r4
90023170:	fb06 0303 	mla	r3, r6, r3, r0
90023174:	b294      	uxth	r4, r2
90023176:	b299      	uxth	r1, r3
90023178:	1c6b      	adds	r3, r5, #1
9002317a:	1c62      	adds	r2, r4, #1
9002317c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023180:	1c4b      	adds	r3, r1, #1
90023182:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90023186:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002318a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002318e:	0952      	lsrs	r2, r2, #5
90023190:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023194:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023198:	432b      	orrs	r3, r5
9002319a:	4313      	orrs	r3, r2
9002319c:	9a02      	ldr	r2, [sp, #8]
9002319e:	8013      	strh	r3, [r2, #0]
900231a0:	b005      	add	sp, #20
900231a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900231a6:	2500      	movs	r5, #0
900231a8:	e6e9      	b.n	90022f7e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
900231aa:	2100      	movs	r1, #0
900231ac:	460d      	mov	r5, r1
900231ae:	e6f3      	b.n	90022f98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900231b0:	2100      	movs	r1, #0
900231b2:	e6f1      	b.n	90022f98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900231b4:	4631      	mov	r1, r6
900231b6:	e6ef      	b.n	90022f98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900231b8:	2400      	movs	r4, #0
900231ba:	e700      	b.n	90022fbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
900231bc:	2200      	movs	r2, #0
900231be:	4614      	mov	r4, r2
900231c0:	e70b      	b.n	90022fda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900231c2:	4602      	mov	r2, r0
900231c4:	4604      	mov	r4, r0
900231c6:	e708      	b.n	90022fda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900231c8:	2200      	movs	r2, #0
900231ca:	e706      	b.n	90022fda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900231cc:	4632      	mov	r2, r6
900231ce:	e704      	b.n	90022fda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

900231d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900231d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900231d4:	b09f      	sub	sp, #124	; 0x7c
900231d6:	921b      	str	r2, [sp, #108]	; 0x6c
900231d8:	9309      	str	r3, [sp, #36]	; 0x24
900231da:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900231dc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
900231e0:	901d      	str	r0, [sp, #116]	; 0x74
900231e2:	931c      	str	r3, [sp, #112]	; 0x70
900231e4:	6850      	ldr	r0, [r2, #4]
900231e6:	9119      	str	r1, [sp, #100]	; 0x64
900231e8:	6812      	ldr	r2, [r2, #0]
900231ea:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900231ec:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
900231f0:	fb00 1303 	mla	r3, r0, r3, r1
900231f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900231f8:	930c      	str	r3, [sp, #48]	; 0x30
900231fa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900231fc:	681b      	ldr	r3, [r3, #0]
900231fe:	9312      	str	r3, [sp, #72]	; 0x48
90023200:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023202:	685e      	ldr	r6, [r3, #4]
90023204:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
90023208:	3604      	adds	r6, #4
9002320a:	930d      	str	r3, [sp, #52]	; 0x34
9002320c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9002320e:	2b00      	cmp	r3, #0
90023210:	dc03      	bgt.n	9002321a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023212:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90023214:	2b00      	cmp	r3, #0
90023216:	f340 8387 	ble.w	90023928 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002321a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002321c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023220:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023224:	1e48      	subs	r0, r1, #1
90023226:	1e57      	subs	r7, r2, #1
90023228:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002322a:	2b00      	cmp	r3, #0
9002322c:	f340 8194 	ble.w	90023558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90023230:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023232:	142b      	asrs	r3, r5, #16
90023234:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023238:	d406      	bmi.n	90023248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002323a:	4584      	cmp	ip, r0
9002323c:	da04      	bge.n	90023248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002323e:	2b00      	cmp	r3, #0
90023240:	db02      	blt.n	90023248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023242:	42bb      	cmp	r3, r7
90023244:	f2c0 8189 	blt.w	9002355a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023248:	f11c 0c01 	adds.w	ip, ip, #1
9002324c:	f100 8177 	bmi.w	9002353e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023250:	4561      	cmp	r1, ip
90023252:	f2c0 8174 	blt.w	9002353e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023256:	3301      	adds	r3, #1
90023258:	f100 8171 	bmi.w	9002353e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002325c:	429a      	cmp	r2, r3
9002325e:	f2c0 816e 	blt.w	9002353e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90023262:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023264:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90023266:	931a      	str	r3, [sp, #104]	; 0x68
90023268:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9002326a:	2b00      	cmp	r3, #0
9002326c:	f340 8193 	ble.w	90023596 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90023270:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023272:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023276:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002327a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002327e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023280:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90023284:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023286:	141b      	asrs	r3, r3, #16
90023288:	f100 81d6 	bmi.w	90023638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002328c:	f100 38ff 	add.w	r8, r0, #4294967295
90023290:	4543      	cmp	r3, r8
90023292:	f280 81d1 	bge.w	90023638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90023296:	f1bc 0f00 	cmp.w	ip, #0
9002329a:	f2c0 81cd 	blt.w	90023638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002329e:	f10e 38ff 	add.w	r8, lr, #4294967295
900232a2:	45c4      	cmp	ip, r8
900232a4:	f280 81c8 	bge.w	90023638 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
900232a8:	b200      	sxth	r0, r0
900232aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
900232ac:	fb0c 3300 	mla	r3, ip, r0, r3
900232b0:	eb04 0803 	add.w	r8, r4, r3
900232b4:	5ce3      	ldrb	r3, [r4, r3]
900232b6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900232ba:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900232be:	2a00      	cmp	r2, #0
900232c0:	f000 81af 	beq.w	90023622 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900232c4:	f898 c001 	ldrb.w	ip, [r8, #1]
900232c8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900232cc:	940e      	str	r4, [sp, #56]	; 0x38
900232ce:	0e24      	lsrs	r4, r4, #24
900232d0:	9415      	str	r4, [sp, #84]	; 0x54
900232d2:	b179      	cbz	r1, 900232f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900232d4:	eb08 0c00 	add.w	ip, r8, r0
900232d8:	f818 0000 	ldrb.w	r0, [r8, r0]
900232dc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900232e0:	900a      	str	r0, [sp, #40]	; 0x28
900232e2:	0e00      	lsrs	r0, r0, #24
900232e4:	9013      	str	r0, [sp, #76]	; 0x4c
900232e6:	f89c 0001 	ldrb.w	r0, [ip, #1]
900232ea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900232ee:	900f      	str	r0, [sp, #60]	; 0x3c
900232f0:	0e00      	lsrs	r0, r0, #24
900232f2:	9016      	str	r0, [sp, #88]	; 0x58
900232f4:	b292      	uxth	r2, r2
900232f6:	9815      	ldr	r0, [sp, #84]	; 0x54
900232f8:	b289      	uxth	r1, r1
900232fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900232fc:	fb02 f901 	mul.w	r9, r2, r1
90023300:	0112      	lsls	r2, r2, #4
90023302:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023306:	eba2 0809 	sub.w	r8, r2, r9
9002330a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002330e:	b289      	uxth	r1, r1
90023310:	fa1f f888 	uxth.w	r8, r8
90023314:	1a52      	subs	r2, r2, r1
90023316:	fb08 f000 	mul.w	r0, r8, r0
9002331a:	b292      	uxth	r2, r2
9002331c:	fb02 000e 	mla	r0, r2, lr, r0
90023320:	fb01 0004 	mla	r0, r1, r4, r0
90023324:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023326:	fb09 0004 	mla	r0, r9, r4, r0
9002332a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002332e:	2800      	cmp	r0, #0
90023330:	f000 80fa 	beq.w	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023334:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023338:	d01b      	beq.n	90023372 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002333a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002333e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023342:	fb0e fa0a 	mul.w	sl, lr, sl
90023346:	fb0e fe03 	mul.w	lr, lr, r3
9002334a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002334e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023352:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023356:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002335a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002335e:	4453      	add	r3, sl
90023360:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023364:	0a1b      	lsrs	r3, r3, #8
90023366:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002336a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002336e:	ea43 030c 	orr.w	r3, r3, ip
90023372:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023374:	2cff      	cmp	r4, #255	; 0xff
90023376:	d021      	beq.n	900233bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90023378:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002337a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002337e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90023380:	fb04 fb0b 	mul.w	fp, r4, fp
90023384:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023386:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002338a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002338c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023390:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023394:	fb04 fa0a 	mul.w	sl, r4, sl
90023398:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002339c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900233a0:	44de      	add	lr, fp
900233a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900233b6:	ea4e 040a 	orr.w	r4, lr, sl
900233ba:	940e      	str	r4, [sp, #56]	; 0x38
900233bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900233be:	2cff      	cmp	r4, #255	; 0xff
900233c0:	d021      	beq.n	90023406 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900233c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900233c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900233c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900233ca:	fb04 fb0b 	mul.w	fp, r4, fp
900233ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900233d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900233d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900233d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900233da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900233de:	fb04 fa0a 	mul.w	sl, r4, sl
900233e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900233ea:	44de      	add	lr, fp
900233ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023400:	ea4e 040a 	orr.w	r4, lr, sl
90023404:	940a      	str	r4, [sp, #40]	; 0x28
90023406:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023408:	2cff      	cmp	r4, #255	; 0xff
9002340a:	d021      	beq.n	90023450 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9002340c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002340e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023412:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023414:	fb04 fb0b 	mul.w	fp, r4, fp
90023418:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002341a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002341e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90023420:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023424:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023428:	fb04 fa0a 	mul.w	sl, r4, sl
9002342c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023430:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023434:	44de      	add	lr, fp
90023436:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002343a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002343e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023442:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023446:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002344a:	ea4e 040a 	orr.w	r4, lr, sl
9002344e:	940f      	str	r4, [sp, #60]	; 0x3c
90023450:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023452:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023456:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002345a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002345e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023460:	fb08 fc0c 	mul.w	ip, r8, ip
90023464:	fb02 cc0e 	mla	ip, r2, lr, ip
90023468:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002346c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002346e:	fb01 cc0e 	mla	ip, r1, lr, ip
90023472:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023476:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90023478:	fb09 cc0e 	mla	ip, r9, lr, ip
9002347c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023480:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023482:	fb08 f80e 	mul.w	r8, r8, lr
90023486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002348a:	fb02 8303 	mla	r3, r2, r3, r8
9002348e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90023490:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023494:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023498:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002349a:	fb01 330a 	mla	r3, r1, sl, r3
9002349e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
900234a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900234a4:	fb09 3901 	mla	r9, r9, r1, r3
900234a8:	883b      	ldrh	r3, [r7, #0]
900234aa:	4342      	muls	r2, r0
900234ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
900234b0:	1c50      	adds	r0, r2, #1
900234b2:	1219      	asrs	r1, r3, #8
900234b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900234b8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900234bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900234c0:	ea4c 0c09 	orr.w	ip, ip, r9
900234c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900234c8:	ea4f 421c 	mov.w	r2, ip, lsr #16
900234cc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900234d0:	b2c0      	uxtb	r0, r0
900234d2:	fb12 f204 	smulbb	r2, r2, r4
900234d6:	fa5f fc8c 	uxtb.w	ip, ip
900234da:	fb1e fe04 	smulbb	lr, lr, r4
900234de:	fb01 2100 	mla	r1, r1, r0, r2
900234e2:	10da      	asrs	r2, r3, #3
900234e4:	fb1c fc04 	smulbb	ip, ip, r4
900234e8:	00db      	lsls	r3, r3, #3
900234ea:	b289      	uxth	r1, r1
900234ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900234f0:	b2db      	uxtb	r3, r3
900234f2:	fb02 e200 	mla	r2, r2, r0, lr
900234f6:	fb03 c300 	mla	r3, r3, r0, ip
900234fa:	b292      	uxth	r2, r2
900234fc:	fa1f fc83 	uxth.w	ip, r3
90023500:	1c4b      	adds	r3, r1, #1
90023502:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023506:	f10c 0301 	add.w	r3, ip, #1
9002350a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002350e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023512:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023516:	430b      	orrs	r3, r1
90023518:	1c51      	adds	r1, r2, #1
9002351a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002351e:	0952      	lsrs	r2, r2, #5
90023520:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023524:	4313      	orrs	r3, r2
90023526:	803b      	strh	r3, [r7, #0]
90023528:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002352a:	3702      	adds	r7, #2
9002352c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002352e:	441a      	add	r2, r3
90023530:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023532:	441d      	add	r5, r3
90023534:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90023536:	9229      	str	r2, [sp, #164]	; 0xa4
90023538:	3b01      	subs	r3, #1
9002353a:	931a      	str	r3, [sp, #104]	; 0x68
9002353c:	e694      	b.n	90023268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002353e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023540:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023542:	441c      	add	r4, r3
90023544:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023546:	441d      	add	r5, r3
90023548:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002354a:	9429      	str	r4, [sp, #164]	; 0xa4
9002354c:	3b01      	subs	r3, #1
9002354e:	9309      	str	r3, [sp, #36]	; 0x24
90023550:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90023552:	3302      	adds	r3, #2
90023554:	930c      	str	r3, [sp, #48]	; 0x30
90023556:	e667      	b.n	90023228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90023558:	d024      	beq.n	900235a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9002355a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002355c:	982b      	ldr	r0, [sp, #172]	; 0xac
9002355e:	3b01      	subs	r3, #1
90023560:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023562:	fb00 4003 	mla	r0, r0, r3, r4
90023566:	1400      	asrs	r0, r0, #16
90023568:	f53f ae7b 	bmi.w	90023262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002356c:	3901      	subs	r1, #1
9002356e:	4288      	cmp	r0, r1
90023570:	f6bf ae77 	bge.w	90023262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023574:	992c      	ldr	r1, [sp, #176]	; 0xb0
90023576:	fb01 5303 	mla	r3, r1, r3, r5
9002357a:	141b      	asrs	r3, r3, #16
9002357c:	f53f ae71 	bmi.w	90023262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023580:	3a01      	subs	r2, #1
90023582:	4293      	cmp	r3, r2
90023584:	f6bf ae6d 	bge.w	90023262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90023588:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002358c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90023590:	f1bb 0f00 	cmp.w	fp, #0
90023594:	dc70      	bgt.n	90023678 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90023596:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023598:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002359c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002359e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900235a2:	930c      	str	r3, [sp, #48]	; 0x30
900235a4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900235a6:	2b00      	cmp	r3, #0
900235a8:	f340 81be 	ble.w	90023928 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900235ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900235b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900235b2:	ee30 0a04 	vadd.f32	s0, s0, s8
900235b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900235ba:	eef0 6a62 	vmov.f32	s13, s5
900235be:	eec7 7a00 	vdiv.f32	s15, s14, s0
900235c2:	ee31 1a05 	vadd.f32	s2, s2, s10
900235c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235ca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
900235ce:	eef0 6a43 	vmov.f32	s13, s6
900235d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900235d6:	ee16 5a90 	vmov	r5, s13
900235da:	ee20 7aa7 	vmul.f32	s14, s1, s15
900235de:	ee61 7a27 	vmul.f32	s15, s2, s15
900235e2:	ee77 2a62 	vsub.f32	s5, s14, s5
900235e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900235ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900235ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900235f2:	ee12 2a90 	vmov	r2, s5
900235f6:	eef0 2a47 	vmov.f32	s5, s14
900235fa:	fb92 f3f3 	sdiv	r3, r2, r3
900235fe:	ee13 2a10 	vmov	r2, s6
90023602:	932b      	str	r3, [sp, #172]	; 0xac
90023604:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023606:	eeb0 3a67 	vmov.f32	s6, s15
9002360a:	fb92 f3f3 	sdiv	r3, r2, r3
9002360e:	932c      	str	r3, [sp, #176]	; 0xb0
90023610:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023612:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90023614:	3b01      	subs	r3, #1
90023616:	9319      	str	r3, [sp, #100]	; 0x64
90023618:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002361a:	bf08      	it	eq
9002361c:	4613      	moveq	r3, r2
9002361e:	9309      	str	r3, [sp, #36]	; 0x24
90023620:	e5f4      	b.n	9002320c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90023622:	2900      	cmp	r1, #0
90023624:	f43f ae66 	beq.w	900232f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023628:	f818 0000 	ldrb.w	r0, [r8, r0]
9002362c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90023630:	900a      	str	r0, [sp, #40]	; 0x28
90023632:	0e00      	lsrs	r0, r0, #24
90023634:	9013      	str	r0, [sp, #76]	; 0x4c
90023636:	e65d      	b.n	900232f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90023638:	f113 0801 	adds.w	r8, r3, #1
9002363c:	f53f af74 	bmi.w	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023640:	4540      	cmp	r0, r8
90023642:	f6ff af71 	blt.w	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023646:	f11c 0801 	adds.w	r8, ip, #1
9002364a:	f53f af6d 	bmi.w	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002364e:	45c6      	cmp	lr, r8
90023650:	f6ff af6a 	blt.w	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023654:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90023656:	b200      	sxth	r0, r0
90023658:	9302      	str	r3, [sp, #8]
9002365a:	fa0f f38e 	sxth.w	r3, lr
9002365e:	9000      	str	r0, [sp, #0]
90023660:	9301      	str	r3, [sp, #4]
90023662:	4633      	mov	r3, r6
90023664:	981d      	ldr	r0, [sp, #116]	; 0x74
90023666:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002366a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002366e:	4639      	mov	r1, r7
90023670:	9a12      	ldr	r2, [sp, #72]	; 0x48
90023672:	f7ff fc63 	bl	90022f3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90023676:	e757      	b.n	90023528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023678:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002367a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002367e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90023680:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023684:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90023686:	1427      	asrs	r7, r4, #16
90023688:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002368a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002368e:	142b      	asrs	r3, r5, #16
90023690:	fb01 7303 	mla	r3, r1, r3, r7
90023694:	18e7      	adds	r7, r4, r3
90023696:	5ce3      	ldrb	r3, [r4, r3]
90023698:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002369c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900236a0:	2a00      	cmp	r2, #0
900236a2:	f000 8137 	beq.w	90023914 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
900236a6:	f897 e001 	ldrb.w	lr, [r7, #1]
900236aa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
900236ae:	9410      	str	r4, [sp, #64]	; 0x40
900236b0:	0e24      	lsrs	r4, r4, #24
900236b2:	9417      	str	r4, [sp, #92]	; 0x5c
900236b4:	b170      	cbz	r0, 900236d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900236b6:	eb07 0e01 	add.w	lr, r7, r1
900236ba:	5c79      	ldrb	r1, [r7, r1]
900236bc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900236c0:	910b      	str	r1, [sp, #44]	; 0x2c
900236c2:	0e09      	lsrs	r1, r1, #24
900236c4:	9114      	str	r1, [sp, #80]	; 0x50
900236c6:	f89e 1001 	ldrb.w	r1, [lr, #1]
900236ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900236ce:	9111      	str	r1, [sp, #68]	; 0x44
900236d0:	0e09      	lsrs	r1, r1, #24
900236d2:	9118      	str	r1, [sp, #96]	; 0x60
900236d4:	b292      	uxth	r2, r2
900236d6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900236d8:	b280      	uxth	r0, r0
900236da:	9c14      	ldr	r4, [sp, #80]	; 0x50
900236dc:	fb02 f800 	mul.w	r8, r2, r0
900236e0:	0112      	lsls	r2, r2, #4
900236e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900236e6:	eba2 0e08 	sub.w	lr, r2, r8
900236ea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900236ee:	b280      	uxth	r0, r0
900236f0:	fa1f fe8e 	uxth.w	lr, lr
900236f4:	1a12      	subs	r2, r2, r0
900236f6:	fb0e f101 	mul.w	r1, lr, r1
900236fa:	b292      	uxth	r2, r2
900236fc:	fb02 110c 	mla	r1, r2, ip, r1
90023700:	fb00 1104 	mla	r1, r0, r4, r1
90023704:	9c18      	ldr	r4, [sp, #96]	; 0x60
90023706:	fb08 1104 	mla	r1, r8, r4, r1
9002370a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002370e:	2900      	cmp	r1, #0
90023710:	f000 80f5 	beq.w	900238fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90023714:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023718:	d019      	beq.n	9002374e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002371a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002371e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023722:	fb0c fa0a 	mul.w	sl, ip, sl
90023726:	fb0c fc03 	mul.w	ip, ip, r3
9002372a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002372e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023732:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023736:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002373a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002373e:	4453      	add	r3, sl
90023740:	0a3f      	lsrs	r7, r7, #8
90023742:	0a1b      	lsrs	r3, r3, #8
90023744:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023748:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002374c:	433b      	orrs	r3, r7
9002374e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90023750:	2cff      	cmp	r4, #255	; 0xff
90023752:	d020      	beq.n	90023796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90023754:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023756:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002375a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002375c:	4367      	muls	r7, r4
9002375e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023760:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023764:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023768:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002376a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002376e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023772:	fb04 fa0a 	mul.w	sl, r4, sl
90023776:	44bc      	add	ip, r7
90023778:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002377c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023780:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023784:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023788:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002378c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023790:	ea4c 040a 	orr.w	r4, ip, sl
90023794:	9410      	str	r4, [sp, #64]	; 0x40
90023796:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023798:	2cff      	cmp	r4, #255	; 0xff
9002379a:	d020      	beq.n	900237de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002379c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002379e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900237a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900237a4:	4367      	muls	r7, r4
900237a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900237a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900237ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900237b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900237b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900237b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900237ba:	fb04 fa0a 	mul.w	sl, r4, sl
900237be:	44bc      	add	ip, r7
900237c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900237c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900237cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900237d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900237d8:	ea4c 040a 	orr.w	r4, ip, sl
900237dc:	940b      	str	r4, [sp, #44]	; 0x2c
900237de:	9c18      	ldr	r4, [sp, #96]	; 0x60
900237e0:	2cff      	cmp	r4, #255	; 0xff
900237e2:	d020      	beq.n	90023826 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900237e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900237e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900237ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
900237ec:	4367      	muls	r7, r4
900237ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
900237f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900237f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900237f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
900237fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900237fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023802:	fb04 fa0a 	mul.w	sl, r4, sl
90023806:	44bc      	add	ip, r7
90023808:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002380c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023810:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023814:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023818:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002381c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023820:	ea4c 040a 	orr.w	r4, ip, sl
90023824:	9411      	str	r4, [sp, #68]	; 0x44
90023826:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023828:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002382c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023830:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90023834:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023836:	fb0e f707 	mul.w	r7, lr, r7
9002383a:	fb02 770c 	mla	r7, r2, ip, r7
9002383e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023842:	9c11      	ldr	r4, [sp, #68]	; 0x44
90023844:	fb00 770c 	mla	r7, r0, ip, r7
90023848:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002384c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002384e:	fb08 770c 	mla	r7, r8, ip, r7
90023852:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90023856:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023858:	fb0e fe0c 	mul.w	lr, lr, ip
9002385c:	0a3f      	lsrs	r7, r7, #8
9002385e:	fb02 e303 	mla	r3, r2, r3, lr
90023862:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023864:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90023868:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002386c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002386e:	fb00 330a 	mla	r3, r0, sl, r3
90023872:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90023876:	f8b9 0000 	ldrh.w	r0, [r9]
9002387a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002387e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023880:	1202      	asrs	r2, r0, #8
90023882:	434b      	muls	r3, r1
90023884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023888:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002388c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023890:	1c59      	adds	r1, r3, #1
90023892:	ea47 070c 	orr.w	r7, r7, ip
90023896:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002389a:	0c3b      	lsrs	r3, r7, #16
9002389c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900238a0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900238a4:	b2ff      	uxtb	r7, r7
900238a6:	fb13 f304 	smulbb	r3, r3, r4
900238aa:	b2c9      	uxtb	r1, r1
900238ac:	fb1c fc04 	smulbb	ip, ip, r4
900238b0:	fb02 3201 	mla	r2, r2, r1, r3
900238b4:	10c3      	asrs	r3, r0, #3
900238b6:	fb17 f704 	smulbb	r7, r7, r4
900238ba:	00c0      	lsls	r0, r0, #3
900238bc:	b292      	uxth	r2, r2
900238be:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900238c2:	b2c0      	uxtb	r0, r0
900238c4:	fb03 c301 	mla	r3, r3, r1, ip
900238c8:	f102 0c01 	add.w	ip, r2, #1
900238cc:	fb00 7001 	mla	r0, r0, r1, r7
900238d0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900238d4:	b280      	uxth	r0, r0
900238d6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
900238da:	b29b      	uxth	r3, r3
900238dc:	1c42      	adds	r2, r0, #1
900238de:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900238e2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900238e6:	ea42 020c 	orr.w	r2, r2, ip
900238ea:	f103 0c01 	add.w	ip, r3, #1
900238ee:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900238f2:	095b      	lsrs	r3, r3, #5
900238f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900238f8:	431a      	orrs	r2, r3
900238fa:	f8a9 2000 	strh.w	r2, [r9]
900238fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90023900:	f109 0902 	add.w	r9, r9, #2
90023904:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023906:	f10b 3bff 	add.w	fp, fp, #4294967295
9002390a:	441a      	add	r2, r3
9002390c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002390e:	9229      	str	r2, [sp, #164]	; 0xa4
90023910:	441d      	add	r5, r3
90023912:	e63d      	b.n	90023590 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90023914:	2800      	cmp	r0, #0
90023916:	f43f aedd 	beq.w	900236d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002391a:	5c79      	ldrb	r1, [r7, r1]
9002391c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023920:	910b      	str	r1, [sp, #44]	; 0x2c
90023922:	0e09      	lsrs	r1, r1, #24
90023924:	9114      	str	r1, [sp, #80]	; 0x50
90023926:	e6d5      	b.n	900236d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90023928:	b01f      	add	sp, #124	; 0x7c
9002392a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002392e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002392e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023932:	b089      	sub	sp, #36	; 0x24
90023934:	9101      	str	r1, [sp, #4]
90023936:	9801      	ldr	r0, [sp, #4]
90023938:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002393c:	8800      	ldrh	r0, [r0, #0]
9002393e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90023942:	1206      	asrs	r6, r0, #8
90023944:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90023948:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
9002394c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90023950:	9602      	str	r6, [sp, #8]
90023952:	10c6      	asrs	r6, r0, #3
90023954:	00c0      	lsls	r0, r0, #3
90023956:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002395a:	b2c0      	uxtb	r0, r0
9002395c:	9603      	str	r6, [sp, #12]
9002395e:	9004      	str	r0, [sp, #16]
90023960:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90023964:	fb07 100c 	mla	r0, r7, ip, r1
90023968:	2f00      	cmp	r7, #0
9002396a:	eb02 0e00 	add.w	lr, r2, r0
9002396e:	f2c0 810a 	blt.w	90023b86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023972:	45b8      	cmp	r8, r7
90023974:	f340 8107 	ble.w	90023b86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90023978:	2900      	cmp	r1, #0
9002397a:	f2c0 8102 	blt.w	90023b82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002397e:	458c      	cmp	ip, r1
90023980:	f340 80ff 	ble.w	90023b82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90023984:	5c12      	ldrb	r2, [r2, r0]
90023986:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002398a:	1c4a      	adds	r2, r1, #1
9002398c:	f100 80fe 	bmi.w	90023b8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023990:	4594      	cmp	ip, r2
90023992:	f340 80fb 	ble.w	90023b8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90023996:	2d00      	cmp	r5, #0
90023998:	f000 80fa 	beq.w	90023b90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
9002399c:	f89e 2001 	ldrb.w	r2, [lr, #1]
900239a0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900239a4:	3701      	adds	r7, #1
900239a6:	f100 80f7 	bmi.w	90023b98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900239aa:	45b8      	cmp	r8, r7
900239ac:	f340 80f4 	ble.w	90023b98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900239b0:	2c00      	cmp	r4, #0
900239b2:	f000 80f4 	beq.w	90023b9e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
900239b6:	2900      	cmp	r1, #0
900239b8:	eb0e 020c 	add.w	r2, lr, ip
900239bc:	f2c0 80ea 	blt.w	90023b94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900239c0:	458c      	cmp	ip, r1
900239c2:	f340 80e7 	ble.w	90023b94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900239c6:	f81e 700c 	ldrb.w	r7, [lr, ip]
900239ca:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
900239ce:	3101      	adds	r1, #1
900239d0:	f100 80e8 	bmi.w	90023ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900239d4:	458c      	cmp	ip, r1
900239d6:	f340 80e5 	ble.w	90023ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900239da:	2d00      	cmp	r5, #0
900239dc:	f000 80e4 	beq.w	90023ba8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900239e0:	7852      	ldrb	r2, [r2, #1]
900239e2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900239e6:	0e0b      	lsrs	r3, r1, #24
900239e8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900239ec:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900239f0:	9300      	str	r3, [sp, #0]
900239f2:	b2a4      	uxth	r4, r4
900239f4:	b2ab      	uxth	r3, r5
900239f6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900239fa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900239fe:	fb03 f904 	mul.w	r9, r3, r4
90023a02:	011b      	lsls	r3, r3, #4
90023a04:	fb0a f505 	mul.w	r5, sl, r5
90023a08:	ea4f 6817 	mov.w	r8, r7, lsr #24
90023a0c:	eba3 0e09 	sub.w	lr, r3, r9
90023a10:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90023a14:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90023a18:	0a28      	lsrs	r0, r5, #8
90023a1a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
90023a1e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023a22:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023a26:	fb0a f303 	mul.w	r3, sl, r3
90023a2a:	fb08 f707 	mul.w	r7, r8, r7
90023a2e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90023a32:	4405      	add	r5, r0
90023a34:	fb08 fc0c 	mul.w	ip, r8, ip
90023a38:	b2a4      	uxth	r4, r4
90023a3a:	0a2d      	lsrs	r5, r5, #8
90023a3c:	fa1f fe8e 	uxth.w	lr, lr
90023a40:	1b12      	subs	r2, r2, r4
90023a42:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90023a46:	b292      	uxth	r2, r2
90023a48:	9005      	str	r0, [sp, #20]
90023a4a:	f503 7080 	add.w	r0, r3, #256	; 0x100
90023a4e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023a52:	ea4f 201c 	mov.w	r0, ip, lsr #8
90023a56:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023a5a:	0a1b      	lsrs	r3, r3, #8
90023a5c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023a60:	9306      	str	r3, [sp, #24]
90023a62:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90023a66:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90023a6a:	4460      	add	r0, ip
90023a6c:	fb0b f303 	mul.w	r3, fp, r3
90023a70:	fb0b f606 	mul.w	r6, fp, r6
90023a74:	0a00      	lsrs	r0, r0, #8
90023a76:	0a1d      	lsrs	r5, r3, #8
90023a78:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90023a7c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90023a80:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023a84:	441d      	add	r5, r3
90023a86:	f506 7380 	add.w	r3, r6, #256	; 0x100
90023a8a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023a8e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90023a92:	0a2d      	lsrs	r5, r5, #8
90023a94:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023a98:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90023a9c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023aa0:	0a36      	lsrs	r6, r6, #8
90023aa2:	0a1b      	lsrs	r3, r3, #8
90023aa4:	fb05 f50e 	mul.w	r5, r5, lr
90023aa8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90023aac:	9307      	str	r3, [sp, #28]
90023aae:	0e0b      	lsrs	r3, r1, #24
90023ab0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023ab4:	fb0e f606 	mul.w	r6, lr, r6
90023ab8:	435f      	muls	r7, r3
90023aba:	4359      	muls	r1, r3
90023abc:	9b05      	ldr	r3, [sp, #20]
90023abe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023ac2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023ac6:	fb03 5502 	mla	r5, r3, r2, r5
90023aca:	9b06      	ldr	r3, [sp, #24]
90023acc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023ad0:	fb0e fe0b 	mul.w	lr, lr, fp
90023ad4:	44bc      	add	ip, r7
90023ad6:	f501 7780 	add.w	r7, r1, #256	; 0x100
90023ada:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023ade:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023ae2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023ae6:	0a09      	lsrs	r1, r1, #8
90023ae8:	fb0c 5509 	mla	r5, ip, r9, r5
90023aec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023af0:	fb00 5504 	mla	r5, r0, r4, r5
90023af4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90023af8:	9b07      	ldr	r3, [sp, #28]
90023afa:	fb02 6000 	mla	r0, r2, r0, r6
90023afe:	0a2d      	lsrs	r5, r5, #8
90023b00:	fb02 e20a 	mla	r2, r2, sl, lr
90023b04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023b08:	fb09 0001 	mla	r0, r9, r1, r0
90023b0c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023b10:	fb04 0003 	mla	r0, r4, r3, r0
90023b14:	9b00      	ldr	r3, [sp, #0]
90023b16:	fb04 2408 	mla	r4, r4, r8, r2
90023b1a:	9a04      	ldr	r2, [sp, #16]
90023b1c:	0a00      	lsrs	r0, r0, #8
90023b1e:	fb09 4903 	mla	r9, r9, r3, r4
90023b22:	9b02      	ldr	r3, [sp, #8]
90023b24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90023b28:	ea6f 2929 	mvn.w	r9, r9, asr #8
90023b2c:	4305      	orrs	r5, r0
90023b2e:	fa5f f989 	uxtb.w	r9, r9
90023b32:	fb03 f109 	mul.w	r1, r3, r9
90023b36:	9b03      	ldr	r3, [sp, #12]
90023b38:	fb03 f309 	mul.w	r3, r3, r9
90023b3c:	fb02 f909 	mul.w	r9, r2, r9
90023b40:	1c4a      	adds	r2, r1, #1
90023b42:	1c58      	adds	r0, r3, #1
90023b44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023b48:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023b4c:	0c2a      	lsrs	r2, r5, #16
90023b4e:	0a2b      	lsrs	r3, r5, #8
90023b50:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90023b54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023b58:	0212      	lsls	r2, r2, #8
90023b5a:	00db      	lsls	r3, r3, #3
90023b5c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90023b60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023b64:	4313      	orrs	r3, r2
90023b66:	f109 0201 	add.w	r2, r9, #1
90023b6a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023b6e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90023b72:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90023b76:	431d      	orrs	r5, r3
90023b78:	9b01      	ldr	r3, [sp, #4]
90023b7a:	801d      	strh	r5, [r3, #0]
90023b7c:	b009      	add	sp, #36	; 0x24
90023b7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023b82:	2000      	movs	r0, #0
90023b84:	e701      	b.n	9002398a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90023b86:	2600      	movs	r6, #0
90023b88:	4630      	mov	r0, r6
90023b8a:	e70b      	b.n	900239a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023b8c:	2600      	movs	r6, #0
90023b8e:	e709      	b.n	900239a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023b90:	462e      	mov	r6, r5
90023b92:	e707      	b.n	900239a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023b94:	2700      	movs	r7, #0
90023b96:	e71a      	b.n	900239ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023b98:	2100      	movs	r1, #0
90023b9a:	460f      	mov	r7, r1
90023b9c:	e723      	b.n	900239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023b9e:	4621      	mov	r1, r4
90023ba0:	4627      	mov	r7, r4
90023ba2:	e720      	b.n	900239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023ba4:	2100      	movs	r1, #0
90023ba6:	e71e      	b.n	900239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023ba8:	4629      	mov	r1, r5
90023baa:	e71c      	b.n	900239e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023bb0:	b09b      	sub	sp, #108	; 0x6c
90023bb2:	9218      	str	r2, [sp, #96]	; 0x60
90023bb4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023bb6:	9019      	str	r0, [sp, #100]	; 0x64
90023bb8:	9116      	str	r1, [sp, #88]	; 0x58
90023bba:	6850      	ldr	r0, [r2, #4]
90023bbc:	9307      	str	r3, [sp, #28]
90023bbe:	6812      	ldr	r2, [r2, #0]
90023bc0:	9d26      	ldr	r5, [sp, #152]	; 0x98
90023bc2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023bc6:	fb00 1303 	mla	r3, r0, r3, r1
90023bca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023bce:	930a      	str	r3, [sp, #40]	; 0x28
90023bd0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023bd2:	681b      	ldr	r3, [r3, #0]
90023bd4:	930f      	str	r3, [sp, #60]	; 0x3c
90023bd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023bd8:	685e      	ldr	r6, [r3, #4]
90023bda:	3604      	adds	r6, #4
90023bdc:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023bde:	2b00      	cmp	r3, #0
90023be0:	dc03      	bgt.n	90023bea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023be2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023be4:	2b00      	cmp	r3, #0
90023be6:	f340 8373 	ble.w	900242d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023bea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023bec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023bf0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023bf4:	1e48      	subs	r0, r1, #1
90023bf6:	1e57      	subs	r7, r2, #1
90023bf8:	9b07      	ldr	r3, [sp, #28]
90023bfa:	2b00      	cmp	r3, #0
90023bfc:	f340 818f 	ble.w	90023f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023c00:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023c02:	142b      	asrs	r3, r5, #16
90023c04:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023c08:	d406      	bmi.n	90023c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023c0a:	4584      	cmp	ip, r0
90023c0c:	da04      	bge.n	90023c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023c0e:	2b00      	cmp	r3, #0
90023c10:	db02      	blt.n	90023c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90023c12:	42bb      	cmp	r3, r7
90023c14:	f2c0 8184 	blt.w	90023f20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90023c18:	f11c 0c01 	adds.w	ip, ip, #1
90023c1c:	f100 8172 	bmi.w	90023f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023c20:	4561      	cmp	r1, ip
90023c22:	f2c0 816f 	blt.w	90023f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023c26:	3301      	adds	r3, #1
90023c28:	f100 816c 	bmi.w	90023f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023c2c:	429a      	cmp	r2, r3
90023c2e:	f2c0 8169 	blt.w	90023f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90023c32:	9b07      	ldr	r3, [sp, #28]
90023c34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023c36:	9317      	str	r3, [sp, #92]	; 0x5c
90023c38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023c3a:	2b00      	cmp	r3, #0
90023c3c:	f340 818e 	ble.w	90023f5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90023c40:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023c42:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023c46:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023c4a:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023c4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023c50:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90023c54:	9b25      	ldr	r3, [sp, #148]	; 0x94
90023c56:	141b      	asrs	r3, r3, #16
90023c58:	f100 81d1 	bmi.w	90023ffe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023c5c:	f101 38ff 	add.w	r8, r1, #4294967295
90023c60:	4543      	cmp	r3, r8
90023c62:	f280 81cc 	bge.w	90023ffe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023c66:	f1bc 0f00 	cmp.w	ip, #0
90023c6a:	f2c0 81c8 	blt.w	90023ffe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023c6e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023c72:	45c4      	cmp	ip, r8
90023c74:	f280 81c3 	bge.w	90023ffe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023c78:	b209      	sxth	r1, r1
90023c7a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90023c7c:	fb0c 3301 	mla	r3, ip, r1, r3
90023c80:	eb04 0803 	add.w	r8, r4, r3
90023c84:	5ce3      	ldrb	r3, [r4, r3]
90023c86:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023c8a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023c8e:	2a00      	cmp	r2, #0
90023c90:	f000 81aa 	beq.w	90023fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90023c94:	f898 c001 	ldrb.w	ip, [r8, #1]
90023c98:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023c9c:	940b      	str	r4, [sp, #44]	; 0x2c
90023c9e:	0e24      	lsrs	r4, r4, #24
90023ca0:	9412      	str	r4, [sp, #72]	; 0x48
90023ca2:	b178      	cbz	r0, 90023cc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023ca4:	eb08 0c01 	add.w	ip, r8, r1
90023ca8:	f818 1001 	ldrb.w	r1, [r8, r1]
90023cac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023cb0:	9108      	str	r1, [sp, #32]
90023cb2:	0e09      	lsrs	r1, r1, #24
90023cb4:	9110      	str	r1, [sp, #64]	; 0x40
90023cb6:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023cba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023cbe:	910c      	str	r1, [sp, #48]	; 0x30
90023cc0:	0e09      	lsrs	r1, r1, #24
90023cc2:	9113      	str	r1, [sp, #76]	; 0x4c
90023cc4:	b292      	uxth	r2, r2
90023cc6:	9912      	ldr	r1, [sp, #72]	; 0x48
90023cc8:	b280      	uxth	r0, r0
90023cca:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023ccc:	fb02 f900 	mul.w	r9, r2, r0
90023cd0:	0112      	lsls	r2, r2, #4
90023cd2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023cd6:	eba2 0809 	sub.w	r8, r2, r9
90023cda:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023cde:	b280      	uxth	r0, r0
90023ce0:	fa1f f888 	uxth.w	r8, r8
90023ce4:	1a12      	subs	r2, r2, r0
90023ce6:	fb08 f101 	mul.w	r1, r8, r1
90023cea:	b292      	uxth	r2, r2
90023cec:	fb02 110e 	mla	r1, r2, lr, r1
90023cf0:	fb00 1104 	mla	r1, r0, r4, r1
90023cf4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023cf6:	fb09 1104 	mla	r1, r9, r4, r1
90023cfa:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023cfe:	2900      	cmp	r1, #0
90023d00:	f000 80f5 	beq.w	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023d04:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023d08:	d01b      	beq.n	90023d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90023d0a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023d0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023d12:	fb0e fa0a 	mul.w	sl, lr, sl
90023d16:	fb0e fe03 	mul.w	lr, lr, r3
90023d1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023d1e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023d22:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023d26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023d2a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023d2e:	4453      	add	r3, sl
90023d30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023d34:	0a1b      	lsrs	r3, r3, #8
90023d36:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023d3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023d3e:	ea43 030c 	orr.w	r3, r3, ip
90023d42:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023d44:	2cff      	cmp	r4, #255	; 0xff
90023d46:	d021      	beq.n	90023d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90023d48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023d4a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023d4e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023d50:	fb04 fb0b 	mul.w	fp, r4, fp
90023d54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023d56:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023d5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023d5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023d60:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023d64:	fb04 fa0a 	mul.w	sl, r4, sl
90023d68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d6c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023d70:	44de      	add	lr, fp
90023d72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023d76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023d7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d7e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023d86:	ea4e 040a 	orr.w	r4, lr, sl
90023d8a:	940b      	str	r4, [sp, #44]	; 0x2c
90023d8c:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023d8e:	2cff      	cmp	r4, #255	; 0xff
90023d90:	d021      	beq.n	90023dd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023d92:	9c08      	ldr	r4, [sp, #32]
90023d94:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023d98:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023d9a:	fb04 fb0b 	mul.w	fp, r4, fp
90023d9e:	9c08      	ldr	r4, [sp, #32]
90023da0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023da4:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023da6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023daa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023dae:	fb04 fa0a 	mul.w	sl, r4, sl
90023db2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023db6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023dba:	44de      	add	lr, fp
90023dbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023dc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023dc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023dcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023dd0:	ea4e 040a 	orr.w	r4, lr, sl
90023dd4:	9408      	str	r4, [sp, #32]
90023dd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023dd8:	2cff      	cmp	r4, #255	; 0xff
90023dda:	d021      	beq.n	90023e20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023ddc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023dde:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90023de2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023de4:	fb04 fb0b 	mul.w	fp, r4, fp
90023de8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023dea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90023dee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90023df0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023df4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023df8:	fb04 fa0a 	mul.w	sl, r4, sl
90023dfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023e00:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023e04:	44de      	add	lr, fp
90023e06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023e0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023e0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023e12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023e16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023e1a:	ea4e 040a 	orr.w	r4, lr, sl
90023e1e:	940c      	str	r4, [sp, #48]	; 0x30
90023e20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023e22:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90023e26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023e2a:	43c9      	mvns	r1, r1
90023e2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023e30:	9c08      	ldr	r4, [sp, #32]
90023e32:	fb08 fc0c 	mul.w	ip, r8, ip
90023e36:	fb02 cc0e 	mla	ip, r2, lr, ip
90023e3a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023e3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023e40:	fb00 cc0e 	mla	ip, r0, lr, ip
90023e44:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90023e48:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023e4a:	fb09 cc0e 	mla	ip, r9, lr, ip
90023e4e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90023e52:	fb08 f80e 	mul.w	r8, r8, lr
90023e56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023e5a:	fa5f fe81 	uxtb.w	lr, r1
90023e5e:	fb02 8303 	mla	r3, r2, r3, r8
90023e62:	9a08      	ldr	r2, [sp, #32]
90023e64:	f8b7 8000 	ldrh.w	r8, [r7]
90023e68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023e6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023e70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023e72:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90023e76:	fb00 330a 	mla	r3, r0, sl, r3
90023e7a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90023e7e:	ea4f 2228 	mov.w	r2, r8, asr #8
90023e82:	fb09 3900 	mla	r9, r9, r0, r3
90023e86:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023e8a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023e8e:	b2c9      	uxtb	r1, r1
90023e90:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023e94:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023e98:	fb02 f20e 	mul.w	r2, r2, lr
90023e9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023ea0:	fb00 f00e 	mul.w	r0, r0, lr
90023ea4:	1c53      	adds	r3, r2, #1
90023ea6:	fb01 f10e 	mul.w	r1, r1, lr
90023eaa:	ea4c 0c09 	orr.w	ip, ip, r9
90023eae:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90023eb2:	ea4f 431c 	mov.w	r3, ip, lsr #16
90023eb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023eba:	4a60      	ldr	r2, [pc, #384]	; (9002403c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023ebc:	b2db      	uxtb	r3, r3
90023ebe:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90023ec2:	1c43      	adds	r3, r0, #1
90023ec4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023ec8:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023ecc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023ed0:	00db      	lsls	r3, r3, #3
90023ed2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023ed6:	4313      	orrs	r3, r2
90023ed8:	1c4a      	adds	r2, r1, #1
90023eda:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023ede:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90023ee2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023ee6:	ea4c 0c03 	orr.w	ip, ip, r3
90023eea:	f8a7 c000 	strh.w	ip, [r7]
90023eee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023ef0:	3702      	adds	r7, #2
90023ef2:	9a25      	ldr	r2, [sp, #148]	; 0x94
90023ef4:	441a      	add	r2, r3
90023ef6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023ef8:	441d      	add	r5, r3
90023efa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023efc:	9225      	str	r2, [sp, #148]	; 0x94
90023efe:	3b01      	subs	r3, #1
90023f00:	9317      	str	r3, [sp, #92]	; 0x5c
90023f02:	e699      	b.n	90023c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90023f04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023f06:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023f08:	441c      	add	r4, r3
90023f0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023f0c:	441d      	add	r5, r3
90023f0e:	9b07      	ldr	r3, [sp, #28]
90023f10:	9425      	str	r4, [sp, #148]	; 0x94
90023f12:	3b01      	subs	r3, #1
90023f14:	9307      	str	r3, [sp, #28]
90023f16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023f18:	3302      	adds	r3, #2
90023f1a:	930a      	str	r3, [sp, #40]	; 0x28
90023f1c:	e66c      	b.n	90023bf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023f1e:	d024      	beq.n	90023f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90023f20:	9b07      	ldr	r3, [sp, #28]
90023f22:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023f24:	3b01      	subs	r3, #1
90023f26:	9c25      	ldr	r4, [sp, #148]	; 0x94
90023f28:	fb00 4003 	mla	r0, r0, r3, r4
90023f2c:	1400      	asrs	r0, r0, #16
90023f2e:	f53f ae80 	bmi.w	90023c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023f32:	3901      	subs	r1, #1
90023f34:	4288      	cmp	r0, r1
90023f36:	f6bf ae7c 	bge.w	90023c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023f3a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023f3c:	fb01 5303 	mla	r3, r1, r3, r5
90023f40:	141b      	asrs	r3, r3, #16
90023f42:	f53f ae76 	bmi.w	90023c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023f46:	3a01      	subs	r2, #1
90023f48:	4293      	cmp	r3, r2
90023f4a:	f6bf ae72 	bge.w	90023c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90023f4e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023f52:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90023f56:	f1bb 0f00 	cmp.w	fp, #0
90023f5a:	dc71      	bgt.n	90024040 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023f5c:	9b07      	ldr	r3, [sp, #28]
90023f5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023f62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023f64:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023f68:	930a      	str	r3, [sp, #40]	; 0x28
90023f6a:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023f6c:	2b00      	cmp	r3, #0
90023f6e:	f340 81af 	ble.w	900242d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023f72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023f76:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023f78:	ee30 0a04 	vadd.f32	s0, s0, s8
90023f7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023f80:	eef0 6a62 	vmov.f32	s13, s5
90023f84:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023f88:	ee31 1a05 	vadd.f32	s2, s2, s10
90023f8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023f90:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90023f94:	eef0 6a43 	vmov.f32	s13, s6
90023f98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023f9c:	ee16 5a90 	vmov	r5, s13
90023fa0:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023fa4:	ee61 7a27 	vmul.f32	s15, s2, s15
90023fa8:	ee77 2a62 	vsub.f32	s5, s14, s5
90023fac:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023fb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023fb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023fb8:	ee12 2a90 	vmov	r2, s5
90023fbc:	eef0 2a47 	vmov.f32	s5, s14
90023fc0:	fb92 f3f3 	sdiv	r3, r2, r3
90023fc4:	ee13 2a10 	vmov	r2, s6
90023fc8:	9327      	str	r3, [sp, #156]	; 0x9c
90023fca:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023fcc:	eeb0 3a67 	vmov.f32	s6, s15
90023fd0:	fb92 f3f3 	sdiv	r3, r2, r3
90023fd4:	9328      	str	r3, [sp, #160]	; 0xa0
90023fd6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023fd8:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023fda:	3b01      	subs	r3, #1
90023fdc:	9316      	str	r3, [sp, #88]	; 0x58
90023fde:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023fe0:	bf08      	it	eq
90023fe2:	4613      	moveq	r3, r2
90023fe4:	9307      	str	r3, [sp, #28]
90023fe6:	e5f9      	b.n	90023bdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023fe8:	2800      	cmp	r0, #0
90023fea:	f43f ae6b 	beq.w	90023cc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023fee:	f818 1001 	ldrb.w	r1, [r8, r1]
90023ff2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023ff6:	9108      	str	r1, [sp, #32]
90023ff8:	0e09      	lsrs	r1, r1, #24
90023ffa:	9110      	str	r1, [sp, #64]	; 0x40
90023ffc:	e662      	b.n	90023cc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023ffe:	f113 0801 	adds.w	r8, r3, #1
90024002:	f53f af74 	bmi.w	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024006:	4541      	cmp	r1, r8
90024008:	f6ff af71 	blt.w	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002400c:	f11c 0801 	adds.w	r8, ip, #1
90024010:	f53f af6d 	bmi.w	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90024014:	45c6      	cmp	lr, r8
90024016:	f6ff af6a 	blt.w	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002401a:	b209      	sxth	r1, r1
9002401c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90024020:	fa0f f38e 	sxth.w	r3, lr
90024024:	9100      	str	r1, [sp, #0]
90024026:	4639      	mov	r1, r7
90024028:	9301      	str	r3, [sp, #4]
9002402a:	4633      	mov	r3, r6
9002402c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90024030:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024032:	9819      	ldr	r0, [sp, #100]	; 0x64
90024034:	f7ff fc7b 	bl	9002392e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90024038:	e759      	b.n	90023eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002403a:	bf00      	nop
9002403c:	fffff800 	.word	0xfffff800
90024040:	9b25      	ldr	r3, [sp, #148]	; 0x94
90024042:	f3c5 3003 	ubfx	r0, r5, #12, #4
90024046:	9c25      	ldr	r4, [sp, #148]	; 0x94
90024048:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002404c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002404e:	1427      	asrs	r7, r4, #16
90024050:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024052:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024056:	142b      	asrs	r3, r5, #16
90024058:	fb01 7303 	mla	r3, r1, r3, r7
9002405c:	18e7      	adds	r7, r4, r3
9002405e:	5ce3      	ldrb	r3, [r4, r3]
90024060:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90024064:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90024068:	2a00      	cmp	r2, #0
9002406a:	f000 8127 	beq.w	900242bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
9002406e:	f897 e001 	ldrb.w	lr, [r7, #1]
90024072:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90024076:	940d      	str	r4, [sp, #52]	; 0x34
90024078:	0e24      	lsrs	r4, r4, #24
9002407a:	9414      	str	r4, [sp, #80]	; 0x50
9002407c:	b170      	cbz	r0, 9002409c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002407e:	eb07 0e01 	add.w	lr, r7, r1
90024082:	5c79      	ldrb	r1, [r7, r1]
90024084:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024088:	9109      	str	r1, [sp, #36]	; 0x24
9002408a:	0e09      	lsrs	r1, r1, #24
9002408c:	9111      	str	r1, [sp, #68]	; 0x44
9002408e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90024092:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90024096:	910e      	str	r1, [sp, #56]	; 0x38
90024098:	0e09      	lsrs	r1, r1, #24
9002409a:	9115      	str	r1, [sp, #84]	; 0x54
9002409c:	b292      	uxth	r2, r2
9002409e:	9c11      	ldr	r4, [sp, #68]	; 0x44
900240a0:	b280      	uxth	r0, r0
900240a2:	fb02 f800 	mul.w	r8, r2, r0
900240a6:	0112      	lsls	r2, r2, #4
900240a8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900240ac:	eba2 0e08 	sub.w	lr, r2, r8
900240b0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
900240b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
900240b6:	b280      	uxth	r0, r0
900240b8:	fa1f fe8e 	uxth.w	lr, lr
900240bc:	1a09      	subs	r1, r1, r0
900240be:	fb0e f202 	mul.w	r2, lr, r2
900240c2:	b289      	uxth	r1, r1
900240c4:	fb01 220c 	mla	r2, r1, ip, r2
900240c8:	fb00 2204 	mla	r2, r0, r4, r2
900240cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
900240ce:	fb08 2204 	mla	r2, r8, r4, r2
900240d2:	f3c2 2207 	ubfx	r2, r2, #8, #8
900240d6:	2a00      	cmp	r2, #0
900240d8:	f000 80e5 	beq.w	900242a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
900240dc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900240e0:	d019      	beq.n	90024116 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
900240e2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900240e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900240ea:	fb0c fa0a 	mul.w	sl, ip, sl
900240ee:	fb0c fc03 	mul.w	ip, ip, r3
900240f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900240f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900240fa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900240fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024102:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90024106:	4453      	add	r3, sl
90024108:	0a3f      	lsrs	r7, r7, #8
9002410a:	0a1b      	lsrs	r3, r3, #8
9002410c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024110:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90024114:	433b      	orrs	r3, r7
90024116:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024118:	2cff      	cmp	r4, #255	; 0xff
9002411a:	d020      	beq.n	9002415e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
9002411c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002411e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90024122:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024124:	4367      	muls	r7, r4
90024126:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024128:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002412c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024130:	9c14      	ldr	r4, [sp, #80]	; 0x50
90024132:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90024136:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002413a:	fb04 fa0a 	mul.w	sl, r4, sl
9002413e:	44bc      	add	ip, r7
90024140:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90024144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024148:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002414c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024150:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024154:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024158:	ea4c 040a 	orr.w	r4, ip, sl
9002415c:	940d      	str	r4, [sp, #52]	; 0x34
9002415e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90024160:	2cff      	cmp	r4, #255	; 0xff
90024162:	d020      	beq.n	900241a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90024164:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024166:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002416a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002416c:	4367      	muls	r7, r4
9002416e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024170:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024174:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90024178:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002417a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002417e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024182:	fb04 fa0a 	mul.w	sl, r4, sl
90024186:	44bc      	add	ip, r7
90024188:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002418c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024190:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024194:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024198:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002419c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900241a0:	ea4c 040a 	orr.w	r4, ip, sl
900241a4:	9409      	str	r4, [sp, #36]	; 0x24
900241a6:	9c15      	ldr	r4, [sp, #84]	; 0x54
900241a8:	2cff      	cmp	r4, #255	; 0xff
900241aa:	d020      	beq.n	900241ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
900241ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900241ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900241b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
900241b4:	4367      	muls	r7, r4
900241b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900241b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900241bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900241c0:	9c15      	ldr	r4, [sp, #84]	; 0x54
900241c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900241c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241ca:	fb04 fa0a 	mul.w	sl, r4, sl
900241ce:	44bc      	add	ip, r7
900241d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900241d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900241d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900241dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900241e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900241e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900241e8:	ea4c 040a 	orr.w	r4, ip, sl
900241ec:	940e      	str	r4, [sp, #56]	; 0x38
900241ee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900241f0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900241f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900241f8:	43d2      	mvns	r2, r2
900241fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900241fe:	9c09      	ldr	r4, [sp, #36]	; 0x24
90024200:	b2d2      	uxtb	r2, r2
90024202:	fb0e f707 	mul.w	r7, lr, r7
90024206:	fb01 770c 	mla	r7, r1, ip, r7
9002420a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002420e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024210:	fb00 770c 	mla	r7, r0, ip, r7
90024214:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024218:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002421a:	fb08 770c 	mla	r7, r8, ip, r7
9002421e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90024222:	fb0e fe0c 	mul.w	lr, lr, ip
90024226:	0a3f      	lsrs	r7, r7, #8
90024228:	fb01 e303 	mla	r3, r1, r3, lr
9002422c:	9909      	ldr	r1, [sp, #36]	; 0x24
9002422e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90024232:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90024236:	990e      	ldr	r1, [sp, #56]	; 0x38
90024238:	fb00 330a 	mla	r3, r0, sl, r3
9002423c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90024240:	fb08 3c0c 	mla	ip, r8, ip, r3
90024244:	f8b9 3000 	ldrh.w	r3, [r9]
90024248:	1218      	asrs	r0, r3, #8
9002424a:	10d9      	asrs	r1, r3, #3
9002424c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024250:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024254:	00db      	lsls	r3, r3, #3
90024256:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002425a:	4350      	muls	r0, r2
9002425c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024260:	b2db      	uxtb	r3, r3
90024262:	4351      	muls	r1, r2
90024264:	ea47 070c 	orr.w	r7, r7, ip
90024268:	4353      	muls	r3, r2
9002426a:	1c42      	adds	r2, r0, #1
9002426c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024270:	0c3a      	lsrs	r2, r7, #16
90024272:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024276:	4a18      	ldr	r2, [pc, #96]	; (900242d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90024278:	b2c0      	uxtb	r0, r0
9002427a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002427e:	1c4a      	adds	r2, r1, #1
90024280:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024284:	0a3a      	lsrs	r2, r7, #8
90024286:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002428a:	00c9      	lsls	r1, r1, #3
9002428c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024290:	4301      	orrs	r1, r0
90024292:	1c58      	adds	r0, r3, #1
90024294:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024298:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002429c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
900242a0:	4308      	orrs	r0, r1
900242a2:	f8a9 0000 	strh.w	r0, [r9]
900242a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900242a8:	f109 0902 	add.w	r9, r9, #2
900242ac:	9a25      	ldr	r2, [sp, #148]	; 0x94
900242ae:	f10b 3bff 	add.w	fp, fp, #4294967295
900242b2:	441a      	add	r2, r3
900242b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900242b6:	9225      	str	r2, [sp, #148]	; 0x94
900242b8:	441d      	add	r5, r3
900242ba:	e64c      	b.n	90023f56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900242bc:	2800      	cmp	r0, #0
900242be:	f43f aeed 	beq.w	9002409c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900242c2:	5c79      	ldrb	r1, [r7, r1]
900242c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900242c8:	9109      	str	r1, [sp, #36]	; 0x24
900242ca:	0e09      	lsrs	r1, r1, #24
900242cc:	9111      	str	r1, [sp, #68]	; 0x44
900242ce:	e6e5      	b.n	9002409c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900242d0:	b01b      	add	sp, #108	; 0x6c
900242d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900242d6:	bf00      	nop
900242d8:	fffff800 	.word	0xfffff800

900242dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900242dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900242e0:	b085      	sub	sp, #20
900242e2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900242e6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900242ea:	2800      	cmp	r0, #0
900242ec:	9103      	str	r1, [sp, #12]
900242ee:	fb00 7406 	mla	r4, r0, r6, r7
900242f2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900242f6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900242fa:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900242fe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024302:	eb03 0904 	add.w	r9, r3, r4
90024306:	9501      	str	r5, [sp, #4]
90024308:	f2c0 8150 	blt.w	900245ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
9002430c:	4583      	cmp	fp, r0
9002430e:	f340 814d 	ble.w	900245ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90024312:	2f00      	cmp	r7, #0
90024314:	f2c0 8146 	blt.w	900245a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90024318:	42be      	cmp	r6, r7
9002431a:	f340 8143 	ble.w	900245a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
9002431e:	f813 c004 	ldrb.w	ip, [r3, r4]
90024322:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90024326:	f64f 041f 	movw	r4, #63519	; 0xf81f
9002432a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002432e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90024332:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024336:	4355      	muls	r5, r2
90024338:	fb0c f203 	mul.w	r2, ip, r3
9002433c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024340:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024344:	441d      	add	r5, r3
90024346:	f102 0320 	add.w	r3, r2, #32
9002434a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002434e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024352:	0a1b      	lsrs	r3, r3, #8
90024354:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024358:	431c      	orrs	r4, r3
9002435a:	1c7b      	adds	r3, r7, #1
9002435c:	f100 812b 	bmi.w	900245b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024360:	429e      	cmp	r6, r3
90024362:	f340 8128 	ble.w	900245b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90024366:	2900      	cmp	r1, #0
90024368:	f000 8128 	beq.w	900245bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
9002436c:	9a01      	ldr	r2, [sp, #4]
9002436e:	f899 3001 	ldrb.w	r3, [r9, #1]
90024372:	8855      	ldrh	r5, [r2, #2]
90024374:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024378:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9002437c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024380:	fb08 f802 	mul.w	r8, r8, r2
90024384:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024388:	435d      	muls	r5, r3
9002438a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002438e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024392:	44d0      	add	r8, sl
90024394:	f105 0a20 	add.w	sl, r5, #32
90024398:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002439c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
900243a0:	0a2d      	lsrs	r5, r5, #8
900243a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900243a6:	432a      	orrs	r2, r5
900243a8:	3001      	adds	r0, #1
900243aa:	f100 810d 	bmi.w	900245c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900243ae:	4583      	cmp	fp, r0
900243b0:	f340 810a 	ble.w	900245c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
900243b4:	f1be 0f00 	cmp.w	lr, #0
900243b8:	f000 810b 	beq.w	900245d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
900243bc:	2f00      	cmp	r7, #0
900243be:	f2c0 8100 	blt.w	900245c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900243c2:	42be      	cmp	r6, r7
900243c4:	f340 80fd 	ble.w	900245c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900243c8:	9801      	ldr	r0, [sp, #4]
900243ca:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
900243ce:	f819 5006 	ldrb.w	r5, [r9, r6]
900243d2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900243d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900243da:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
900243de:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900243e2:	fb0a fa00 	mul.w	sl, sl, r0
900243e6:	fb05 f808 	mul.w	r8, r5, r8
900243ea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900243ee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900243f2:	4482      	add	sl, r0
900243f4:	f108 0020 	add.w	r0, r8, #32
900243f8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900243fc:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024400:	0a00      	lsrs	r0, r0, #8
90024402:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024406:	ea4b 0b00 	orr.w	fp, fp, r0
9002440a:	3701      	adds	r7, #1
9002440c:	f100 80e6 	bmi.w	900245dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024410:	42be      	cmp	r6, r7
90024412:	f340 80e3 	ble.w	900245dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90024416:	2900      	cmp	r1, #0
90024418:	f000 80e3 	beq.w	900245e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
9002441c:	3601      	adds	r6, #1
9002441e:	9801      	ldr	r0, [sp, #4]
90024420:	f819 7006 	ldrb.w	r7, [r9, r6]
90024424:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024428:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002442c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90024430:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024434:	fb09 f906 	mul.w	r9, r9, r6
90024438:	fb07 f800 	mul.w	r8, r7, r0
9002443c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90024440:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024444:	f609 0901 	addw	r9, r9, #2049	; 0x801
90024448:	44d1      	add	r9, sl
9002444a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
9002444e:	f108 0020 	add.w	r0, r8, #32
90024452:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024456:	0a00      	lsrs	r0, r0, #8
90024458:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002445c:	4330      	orrs	r0, r6
9002445e:	b28e      	uxth	r6, r1
90024460:	fa1f f98e 	uxth.w	r9, lr
90024464:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024468:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002446c:	fb06 f809 	mul.w	r8, r6, r9
90024470:	0136      	lsls	r6, r6, #4
90024472:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024476:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002447a:	9601      	str	r6, [sp, #4]
9002447c:	ea4a 0404 	orr.w	r4, sl, r4
90024480:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024484:	fa1f f689 	uxth.w	r6, r9
90024488:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002448c:	fb11 f90e 	smulbb	r9, r1, lr
90024490:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024494:	9602      	str	r6, [sp, #8]
90024496:	4626      	mov	r6, r4
90024498:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002449c:	f1ce 0410 	rsb	r4, lr, #16
900244a0:	ea4a 0202 	orr.w	r2, sl, r2
900244a4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900244a8:	1a64      	subs	r4, r4, r1
900244aa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
900244ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900244b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900244b6:	434a      	muls	r2, r1
900244b8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900244bc:	ea4a 0000 	orr.w	r0, sl, r0
900244c0:	9903      	ldr	r1, [sp, #12]
900244c2:	fb04 2406 	mla	r4, r4, r6, r2
900244c6:	9e02      	ldr	r6, [sp, #8]
900244c8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900244cc:	fb09 4200 	mla	r2, r9, r0, r4
900244d0:	ea4f 440b 	mov.w	r4, fp, lsl #16
900244d4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
900244d8:	8808      	ldrh	r0, [r1, #0]
900244da:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
900244de:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
900244e2:	ea44 0b0b 	orr.w	fp, r4, fp
900244e6:	9c01      	ldr	r4, [sp, #4]
900244e8:	b289      	uxth	r1, r1
900244ea:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
900244ee:	fb0e 2e0b 	mla	lr, lr, fp, r2
900244f2:	1ba4      	subs	r4, r4, r6
900244f4:	9e01      	ldr	r6, [sp, #4]
900244f6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900244fa:	eba6 0608 	sub.w	r6, r6, r8
900244fe:	b2a4      	uxth	r4, r4
90024500:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024504:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024508:	b2b6      	uxth	r6, r6
9002450a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002450e:	4373      	muls	r3, r6
90024510:	ea42 0e0e 	orr.w	lr, r2, lr
90024514:	fb0c 3304 	mla	r3, ip, r4, r3
90024518:	9c02      	ldr	r4, [sp, #8]
9002451a:	fa1f f28e 	uxth.w	r2, lr
9002451e:	fb04 3505 	mla	r5, r4, r5, r3
90024522:	10d4      	asrs	r4, r2, #3
90024524:	fb08 5707 	mla	r7, r8, r7, r5
90024528:	1215      	asrs	r5, r2, #8
9002452a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002452e:	00d2      	lsls	r2, r2, #3
90024530:	f3c7 2707 	ubfx	r7, r7, #8, #8
90024534:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024538:	b2d2      	uxtb	r2, r2
9002453a:	434f      	muls	r7, r1
9002453c:	1c7b      	adds	r3, r7, #1
9002453e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90024542:	1203      	asrs	r3, r0, #8
90024544:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90024548:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002454c:	b2ff      	uxtb	r7, r7
9002454e:	fb13 f307 	smulbb	r3, r3, r7
90024552:	fb05 3501 	mla	r5, r5, r1, r3
90024556:	10c3      	asrs	r3, r0, #3
90024558:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002455c:	b2ad      	uxth	r5, r5
9002455e:	fb13 f307 	smulbb	r3, r3, r7
90024562:	fb04 3401 	mla	r4, r4, r1, r3
90024566:	00c3      	lsls	r3, r0, #3
90024568:	b2db      	uxtb	r3, r3
9002456a:	b2a4      	uxth	r4, r4
9002456c:	fb13 f307 	smulbb	r3, r3, r7
90024570:	fb02 3101 	mla	r1, r2, r1, r3
90024574:	1c6b      	adds	r3, r5, #1
90024576:	1c62      	adds	r2, r4, #1
90024578:	b289      	uxth	r1, r1
9002457a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002457e:	1c4b      	adds	r3, r1, #1
90024580:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024584:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024588:	9a03      	ldr	r2, [sp, #12]
9002458a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002458e:	0964      	lsrs	r4, r4, #5
90024590:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024594:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024598:	432b      	orrs	r3, r5
9002459a:	4323      	orrs	r3, r4
9002459c:	8013      	strh	r3, [r2, #0]
9002459e:	b005      	add	sp, #20
900245a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900245a4:	f04f 0c00 	mov.w	ip, #0
900245a8:	4664      	mov	r4, ip
900245aa:	e6d6      	b.n	9002435a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
900245ac:	2300      	movs	r3, #0
900245ae:	469c      	mov	ip, r3
900245b0:	461a      	mov	r2, r3
900245b2:	461c      	mov	r4, r3
900245b4:	e6f8      	b.n	900243a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900245b6:	2300      	movs	r3, #0
900245b8:	461a      	mov	r2, r3
900245ba:	e6f5      	b.n	900243a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900245bc:	460b      	mov	r3, r1
900245be:	460a      	mov	r2, r1
900245c0:	e6f2      	b.n	900243a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900245c2:	2500      	movs	r5, #0
900245c4:	46ab      	mov	fp, r5
900245c6:	e720      	b.n	9002440a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900245c8:	2700      	movs	r7, #0
900245ca:	463d      	mov	r5, r7
900245cc:	4638      	mov	r0, r7
900245ce:	46bb      	mov	fp, r7
900245d0:	e745      	b.n	9002445e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900245d2:	4677      	mov	r7, lr
900245d4:	4675      	mov	r5, lr
900245d6:	4670      	mov	r0, lr
900245d8:	46f3      	mov	fp, lr
900245da:	e740      	b.n	9002445e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900245dc:	2700      	movs	r7, #0
900245de:	4638      	mov	r0, r7
900245e0:	e73d      	b.n	9002445e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900245e2:	460f      	mov	r7, r1
900245e4:	4608      	mov	r0, r1
900245e6:	e73a      	b.n	9002445e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900245e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900245e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900245ec:	b097      	sub	sp, #92	; 0x5c
900245ee:	9214      	str	r2, [sp, #80]	; 0x50
900245f0:	9308      	str	r3, [sp, #32]
900245f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900245f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900245f8:	9015      	str	r0, [sp, #84]	; 0x54
900245fa:	9312      	str	r3, [sp, #72]	; 0x48
900245fc:	6850      	ldr	r0, [r2, #4]
900245fe:	9111      	str	r1, [sp, #68]	; 0x44
90024600:	6812      	ldr	r2, [r2, #0]
90024602:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024606:	fb00 1303 	mla	r3, r0, r3, r1
9002460a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002460e:	9309      	str	r3, [sp, #36]	; 0x24
90024610:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024612:	681b      	ldr	r3, [r3, #0]
90024614:	930b      	str	r3, [sp, #44]	; 0x2c
90024616:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024618:	685b      	ldr	r3, [r3, #4]
9002461a:	930c      	str	r3, [sp, #48]	; 0x30
9002461c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90024620:	930a      	str	r3, [sp, #40]	; 0x28
90024622:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024624:	2b00      	cmp	r3, #0
90024626:	dc03      	bgt.n	90024630 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024628:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002462a:	2b00      	cmp	r3, #0
9002462c:	f340 83cd 	ble.w	90024dca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90024630:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024632:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024636:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002463a:	1e48      	subs	r0, r1, #1
9002463c:	1e55      	subs	r5, r2, #1
9002463e:	9b08      	ldr	r3, [sp, #32]
90024640:	2b00      	cmp	r3, #0
90024642:	f340 81a5 	ble.w	90024990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90024646:	9e21      	ldr	r6, [sp, #132]	; 0x84
90024648:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002464a:	1436      	asrs	r6, r6, #16
9002464c:	ea4f 4323 	mov.w	r3, r3, asr #16
90024650:	d406      	bmi.n	90024660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024652:	4286      	cmp	r6, r0
90024654:	da04      	bge.n	90024660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024656:	2b00      	cmp	r3, #0
90024658:	db02      	blt.n	90024660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002465a:	42ab      	cmp	r3, r5
9002465c:	f2c0 8199 	blt.w	90024992 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90024660:	3601      	adds	r6, #1
90024662:	f100 8186 	bmi.w	90024972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024666:	42b1      	cmp	r1, r6
90024668:	f2c0 8183 	blt.w	90024972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002466c:	3301      	adds	r3, #1
9002466e:	f100 8180 	bmi.w	90024972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024672:	429a      	cmp	r2, r3
90024674:	f2c0 817d 	blt.w	90024972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90024678:	9b08      	ldr	r3, [sp, #32]
9002467a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002467e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90024680:	9313      	str	r3, [sp, #76]	; 0x4c
90024682:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024684:	2b00      	cmp	r3, #0
90024686:	f340 81a6 	ble.w	900249d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002468a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002468c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002468e:	1418      	asrs	r0, r3, #16
90024690:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024692:	142d      	asrs	r5, r5, #16
90024694:	f3c3 3103 	ubfx	r1, r3, #12, #4
90024698:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002469a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002469e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900246a0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
900246a4:	f100 81fa 	bmi.w	90024a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900246a8:	f102 3eff 	add.w	lr, r2, #4294967295
900246ac:	4575      	cmp	r5, lr
900246ae:	f280 81f5 	bge.w	90024a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900246b2:	2800      	cmp	r0, #0
900246b4:	f2c0 81f2 	blt.w	90024a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900246b8:	f103 3eff 	add.w	lr, r3, #4294967295
900246bc:	4570      	cmp	r0, lr
900246be:	f280 81ed 	bge.w	90024a9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900246c2:	b212      	sxth	r2, r2
900246c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900246c6:	fa1f fe81 	uxth.w	lr, r1
900246ca:	fb00 5002 	mla	r0, r0, r2, r5
900246ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
900246d2:	eb03 0a00 	add.w	sl, r3, r0
900246d6:	f813 9000 	ldrb.w	r9, [r3, r0]
900246da:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900246de:	f89a 8001 	ldrb.w	r8, [sl, #1]
900246e2:	b29b      	uxth	r3, r3
900246e4:	f1bc 0f00 	cmp.w	ip, #0
900246e8:	f000 81bb 	beq.w	90024a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900246ec:	f81a 4002 	ldrb.w	r4, [sl, r2]
900246f0:	eb0a 0b02 	add.w	fp, sl, r2
900246f4:	fa1f fa8c 	uxth.w	sl, ip
900246f8:	940d      	str	r4, [sp, #52]	; 0x34
900246fa:	fb0a fe0e 	mul.w	lr, sl, lr
900246fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024702:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90024706:	eba5 050e 	sub.w	r5, r5, lr
9002470a:	940e      	str	r4, [sp, #56]	; 0x38
9002470c:	fa1f fa8a 	uxth.w	sl, sl
90024710:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90024712:	b2ad      	uxth	r5, r5
90024714:	eba3 030a 	sub.w	r3, r3, sl
90024718:	fb08 f505 	mul.w	r5, r8, r5
9002471c:	b29b      	uxth	r3, r3
9002471e:	fb09 5303 	mla	r3, r9, r3, r5
90024722:	fb0a 3304 	mla	r3, sl, r4, r3
90024726:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024728:	fb0e 3304 	mla	r3, lr, r4, r3
9002472c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024730:	2b00      	cmp	r3, #0
90024732:	f000 8111 	beq.w	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024736:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024738:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002473c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90024740:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90024744:	f000 8192 	beq.w	90024a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90024748:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002474c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024750:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024754:	fb0a fe0e 	mul.w	lr, sl, lr
90024758:	fb09 f000 	mul.w	r0, r9, r0
9002475c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90024760:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90024764:	f100 0b20 	add.w	fp, r0, #32
90024768:	44ce      	add	lr, r9
9002476a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002476e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024772:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024776:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002477a:	ea4e 0909 	orr.w	r9, lr, r9
9002477e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024782:	8868      	ldrh	r0, [r5, #2]
90024784:	d019      	beq.n	900247ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90024786:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002478a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002478e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024792:	fb0a fe0e 	mul.w	lr, sl, lr
90024796:	fb08 f800 	mul.w	r8, r8, r0
9002479a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002479e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900247a2:	f108 0b20 	add.w	fp, r8, #32
900247a6:	4486      	add	lr, r0
900247a8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
900247ac:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900247b0:	0a00      	lsrs	r0, r0, #8
900247b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900247b6:	ea4e 0000 	orr.w	r0, lr, r0
900247ba:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900247be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900247c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900247c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900247ca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900247ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900247d2:	ea4e 0909 	orr.w	r9, lr, r9
900247d6:	ea4a 0000 	orr.w	r0, sl, r0
900247da:	f1bc 0f00 	cmp.w	ip, #0
900247de:	f000 8147 	beq.w	90024a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900247e2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900247e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900247e8:	3a01      	subs	r2, #1
900247ea:	2cff      	cmp	r4, #255	; 0xff
900247ec:	ea4f 0242 	mov.w	r2, r2, lsl #1
900247f0:	f102 0202 	add.w	r2, r2, #2
900247f4:	eb05 0e02 	add.w	lr, r5, r2
900247f8:	5aaa      	ldrh	r2, [r5, r2]
900247fa:	d018      	beq.n	9002482e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900247fc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90024800:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024804:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024808:	fb04 fa02 	mul.w	sl, r4, r2
9002480c:	fb08 f805 	mul.w	r8, r8, r5
90024810:	f10a 0520 	add.w	r5, sl, #32
90024814:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90024818:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002481c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024820:	4442      	add	r2, r8
90024822:	0a2d      	lsrs	r5, r5, #8
90024824:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90024828:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002482c:	432a      	orrs	r2, r5
9002482e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90024830:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024834:	2cff      	cmp	r4, #255	; 0xff
90024836:	d01a      	beq.n	9002486e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90024838:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002483c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024840:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024844:	fb04 fa05 	mul.w	sl, r4, r5
90024848:	fb08 f80e 	mul.w	r8, r8, lr
9002484c:	f10a 0e20 	add.w	lr, sl, #32
90024850:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90024854:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024858:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002485c:	4445      	add	r5, r8
9002485e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024862:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90024866:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002486a:	ea45 050e 	orr.w	r5, r5, lr
9002486e:	fb1c fe01 	smulbb	lr, ip, r1
90024872:	f1cc 0810 	rsb	r8, ip, #16
90024876:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002487a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002487e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90024882:	eba8 0801 	sub.w	r8, r8, r1
90024886:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002488a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002488e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90024892:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90024896:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002489a:	ea4a 0202 	orr.w	r2, sl, r2
9002489e:	4341      	muls	r1, r0
900248a0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
900248a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900248a8:	fb09 1108 	mla	r1, r9, r8, r1
900248ac:	ea4b 0505 	orr.w	r5, fp, r5
900248b0:	fb0c 1102 	mla	r1, ip, r2, r1
900248b4:	fb0e 1e05 	mla	lr, lr, r5, r1
900248b8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900248bc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900248c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900248c4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900248c8:	ea42 0e0e 	orr.w	lr, r2, lr
900248cc:	fa1f f28e 	uxth.w	r2, lr
900248d0:	2bff      	cmp	r3, #255	; 0xff
900248d2:	d103      	bne.n	900248dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900248d4:	9912      	ldr	r1, [sp, #72]	; 0x48
900248d6:	29ff      	cmp	r1, #255	; 0xff
900248d8:	f000 80de 	beq.w	90024a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900248dc:	990a      	ldr	r1, [sp, #40]	; 0x28
900248de:	1215      	asrs	r5, r2, #8
900248e0:	8838      	ldrh	r0, [r7, #0]
900248e2:	434b      	muls	r3, r1
900248e4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900248e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900248ea:	f103 0c01 	add.w	ip, r3, #1
900248ee:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900248f2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900248f6:	fa5f fc83 	uxtb.w	ip, r3
900248fa:	1203      	asrs	r3, r0, #8
900248fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024900:	fb13 f30c 	smulbb	r3, r3, ip
90024904:	fb05 3501 	mla	r5, r5, r1, r3
90024908:	10c3      	asrs	r3, r0, #3
9002490a:	10d1      	asrs	r1, r2, #3
9002490c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024910:	00d2      	lsls	r2, r2, #3
90024912:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024916:	b2ad      	uxth	r5, r5
90024918:	fb13 f30c 	smulbb	r3, r3, ip
9002491c:	b2d2      	uxtb	r2, r2
9002491e:	fb01 3104 	mla	r1, r1, r4, r3
90024922:	00c3      	lsls	r3, r0, #3
90024924:	b2db      	uxtb	r3, r3
90024926:	b289      	uxth	r1, r1
90024928:	fb13 f30c 	smulbb	r3, r3, ip
9002492c:	fb02 3304 	mla	r3, r2, r4, r3
90024930:	b29a      	uxth	r2, r3
90024932:	1c6b      	adds	r3, r5, #1
90024934:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024938:	1c53      	adds	r3, r2, #1
9002493a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002493e:	1c4a      	adds	r2, r1, #1
90024940:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024944:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024948:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002494c:	0949      	lsrs	r1, r1, #5
9002494e:	432b      	orrs	r3, r5
90024950:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024954:	430b      	orrs	r3, r1
90024956:	803b      	strh	r3, [r7, #0]
90024958:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002495a:	3702      	adds	r7, #2
9002495c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002495e:	4413      	add	r3, r2
90024960:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024962:	9321      	str	r3, [sp, #132]	; 0x84
90024964:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024966:	441a      	add	r2, r3
90024968:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002496a:	3b01      	subs	r3, #1
9002496c:	9222      	str	r2, [sp, #136]	; 0x88
9002496e:	9313      	str	r3, [sp, #76]	; 0x4c
90024970:	e687      	b.n	90024682 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90024972:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024974:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90024976:	9c22      	ldr	r4, [sp, #136]	; 0x88
90024978:	4433      	add	r3, r6
9002497a:	9321      	str	r3, [sp, #132]	; 0x84
9002497c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002497e:	441c      	add	r4, r3
90024980:	9b08      	ldr	r3, [sp, #32]
90024982:	3b01      	subs	r3, #1
90024984:	9422      	str	r4, [sp, #136]	; 0x88
90024986:	9308      	str	r3, [sp, #32]
90024988:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002498a:	3302      	adds	r3, #2
9002498c:	9309      	str	r3, [sp, #36]	; 0x24
9002498e:	e656      	b.n	9002463e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90024990:	d028      	beq.n	900249e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024992:	9b08      	ldr	r3, [sp, #32]
90024994:	9823      	ldr	r0, [sp, #140]	; 0x8c
90024996:	3b01      	subs	r3, #1
90024998:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002499a:	fb00 5003 	mla	r0, r0, r3, r5
9002499e:	1400      	asrs	r0, r0, #16
900249a0:	f53f ae6a 	bmi.w	90024678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900249a4:	3901      	subs	r1, #1
900249a6:	4288      	cmp	r0, r1
900249a8:	f6bf ae66 	bge.w	90024678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900249ac:	9924      	ldr	r1, [sp, #144]	; 0x90
900249ae:	9822      	ldr	r0, [sp, #136]	; 0x88
900249b0:	fb01 0303 	mla	r3, r1, r3, r0
900249b4:	141b      	asrs	r3, r3, #16
900249b6:	f53f ae5f 	bmi.w	90024678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900249ba:	3a01      	subs	r2, #1
900249bc:	4293      	cmp	r3, r2
900249be:	f6bf ae5b 	bge.w	90024678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900249c2:	9b08      	ldr	r3, [sp, #32]
900249c4:	f64f 061f 	movw	r6, #63519	; 0xf81f
900249c8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900249cc:	9313      	str	r3, [sp, #76]	; 0x4c
900249ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900249d0:	2b00      	cmp	r3, #0
900249d2:	f300 8082 	bgt.w	90024ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900249d6:	9b08      	ldr	r3, [sp, #32]
900249d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900249dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900249de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900249e2:	9309      	str	r3, [sp, #36]	; 0x24
900249e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900249e6:	2b00      	cmp	r3, #0
900249e8:	f340 81ef 	ble.w	90024dca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900249ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900249f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900249f2:	ee30 0a04 	vadd.f32	s0, s0, s8
900249f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900249fa:	eef0 6a62 	vmov.f32	s13, s5
900249fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024a02:	ee31 1a05 	vadd.f32	s2, s2, s10
90024a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024a0a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
90024a0e:	eef0 6a43 	vmov.f32	s13, s6
90024a12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024a16:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
90024a1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024a1e:	ee61 7a27 	vmul.f32	s15, s2, s15
90024a22:	ee77 2a62 	vsub.f32	s5, s14, s5
90024a26:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024a2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024a2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024a32:	ee12 2a90 	vmov	r2, s5
90024a36:	eef0 2a47 	vmov.f32	s5, s14
90024a3a:	fb92 f3f3 	sdiv	r3, r2, r3
90024a3e:	ee13 2a10 	vmov	r2, s6
90024a42:	9323      	str	r3, [sp, #140]	; 0x8c
90024a44:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024a46:	eeb0 3a67 	vmov.f32	s6, s15
90024a4a:	fb92 f3f3 	sdiv	r3, r2, r3
90024a4e:	9324      	str	r3, [sp, #144]	; 0x90
90024a50:	9b11      	ldr	r3, [sp, #68]	; 0x44
90024a52:	9a14      	ldr	r2, [sp, #80]	; 0x50
90024a54:	3b01      	subs	r3, #1
90024a56:	9311      	str	r3, [sp, #68]	; 0x44
90024a58:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024a5a:	bf08      	it	eq
90024a5c:	4613      	moveq	r3, r2
90024a5e:	9308      	str	r3, [sp, #32]
90024a60:	e5df      	b.n	90024622 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024a62:	fb08 f505 	mul.w	r5, r8, r5
90024a66:	fb09 5303 	mla	r3, r9, r3, r5
90024a6a:	e65f      	b.n	9002472c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90024a6c:	4681      	mov	r9, r0
90024a6e:	e686      	b.n	9002477e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024a70:	f1c1 0210 	rsb	r2, r1, #16
90024a74:	4341      	muls	r1, r0
90024a76:	fb09 1902 	mla	r9, r9, r2, r1
90024a7a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024a7e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024a82:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024a86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024a8a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024a8e:	ea42 0909 	orr.w	r9, r2, r9
90024a92:	fa1f f289 	uxth.w	r2, r9
90024a96:	e71b      	b.n	900248d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024a98:	803a      	strh	r2, [r7, #0]
90024a9a:	e75d      	b.n	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024a9c:	f115 0e01 	adds.w	lr, r5, #1
90024aa0:	f53f af5a 	bmi.w	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024aa4:	4572      	cmp	r2, lr
90024aa6:	f6ff af57 	blt.w	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024aaa:	f110 0e01 	adds.w	lr, r0, #1
90024aae:	f53f af53 	bmi.w	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024ab2:	4573      	cmp	r3, lr
90024ab4:	f6ff af50 	blt.w	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024ab8:	9c12      	ldr	r4, [sp, #72]	; 0x48
90024aba:	b21b      	sxth	r3, r3
90024abc:	b212      	sxth	r2, r2
90024abe:	9502      	str	r5, [sp, #8]
90024ac0:	9301      	str	r3, [sp, #4]
90024ac2:	9200      	str	r2, [sp, #0]
90024ac4:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024ac8:	e9cd c405 	strd	ip, r4, [sp, #20]
90024acc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90024ad0:	4639      	mov	r1, r7
90024ad2:	9815      	ldr	r0, [sp, #84]	; 0x54
90024ad4:	f7ff fc02 	bl	900242dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024ad8:	e73e      	b.n	90024958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024ada:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024adc:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024ae0:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024ae2:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024ae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024ae8:	fa1f fc82 	uxth.w	ip, r2
90024aec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024af0:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024af2:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024af6:	141f      	asrs	r7, r3, #16
90024af8:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024afa:	141b      	asrs	r3, r3, #16
90024afc:	fb01 3707 	mla	r7, r1, r7, r3
90024b00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024b02:	eb03 0a07 	add.w	sl, r3, r7
90024b06:	f813 9007 	ldrb.w	r9, [r3, r7]
90024b0a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024b0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024b12:	b29b      	uxth	r3, r3
90024b14:	2d00      	cmp	r5, #0
90024b16:	f000 813d 	beq.w	90024d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90024b1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024b1e:	eb0a 0b01 	add.w	fp, sl, r1
90024b22:	fa1f fa85 	uxth.w	sl, r5
90024b26:	940f      	str	r4, [sp, #60]	; 0x3c
90024b28:	fb0a fc0c 	mul.w	ip, sl, ip
90024b2c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024b30:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024b34:	eba0 000c 	sub.w	r0, r0, ip
90024b38:	9410      	str	r4, [sp, #64]	; 0x40
90024b3a:	fa1f fa8a 	uxth.w	sl, sl
90024b3e:	b280      	uxth	r0, r0
90024b40:	eba3 030a 	sub.w	r3, r3, sl
90024b44:	fb08 f000 	mul.w	r0, r8, r0
90024b48:	b29b      	uxth	r3, r3
90024b4a:	fb09 0303 	mla	r3, r9, r3, r0
90024b4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024b50:	fb0a 3300 	mla	r3, sl, r0, r3
90024b54:	fb0c 3304 	mla	r3, ip, r4, r3
90024b58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024b5c:	2b00      	cmp	r3, #0
90024b5e:	f000 810b 	beq.w	90024d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024b62:	980b      	ldr	r0, [sp, #44]	; 0x2c
90024b64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90024b68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90024b6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024b6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024b72:	f000 8114 	beq.w	90024d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90024b76:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024b7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024b7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024b82:	fb0a fc0c 	mul.w	ip, sl, ip
90024b86:	fb09 f707 	mul.w	r7, r9, r7
90024b8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024b8e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024b92:	f107 0b20 	add.w	fp, r7, #32
90024b96:	44cc      	add	ip, r9
90024b98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024b9c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024ba0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024ba4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90024ba8:	ea4c 0909 	orr.w	r9, ip, r9
90024bac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90024bb0:	8847      	ldrh	r7, [r0, #2]
90024bb2:	d019      	beq.n	90024be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90024bb4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90024bb8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024bbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024bc0:	fb0a fc0c 	mul.w	ip, sl, ip
90024bc4:	fb08 f807 	mul.w	r8, r8, r7
90024bc8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024bcc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90024bd0:	f108 0b20 	add.w	fp, r8, #32
90024bd4:	44bc      	add	ip, r7
90024bd6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024bda:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024bde:	0a3f      	lsrs	r7, r7, #8
90024be0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024be4:	ea4c 0707 	orr.w	r7, ip, r7
90024be8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024bec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90024bf0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024bf4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90024bf8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90024bfc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024c00:	ea4c 0909 	orr.w	r9, ip, r9
90024c04:	ea4a 0707 	orr.w	r7, sl, r7
90024c08:	2d00      	cmp	r5, #0
90024c0a:	f000 80ca 	beq.w	90024da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90024c0e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90024c12:	3901      	subs	r1, #1
90024c14:	0049      	lsls	r1, r1, #1
90024c16:	3102      	adds	r1, #2
90024c18:	eb00 0c01 	add.w	ip, r0, r1
90024c1c:	5a41      	ldrh	r1, [r0, r1]
90024c1e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90024c20:	28ff      	cmp	r0, #255	; 0xff
90024c22:	d019      	beq.n	90024c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90024c24:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90024c28:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90024c2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024c2e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024c32:	fb04 fa01 	mul.w	sl, r4, r1
90024c36:	fb08 f800 	mul.w	r8, r8, r0
90024c3a:	f10a 0020 	add.w	r0, sl, #32
90024c3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024c42:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024c46:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024c4a:	4441      	add	r1, r8
90024c4c:	0a00      	lsrs	r0, r0, #8
90024c4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024c52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024c56:	4301      	orrs	r1, r0
90024c58:	9c10      	ldr	r4, [sp, #64]	; 0x40
90024c5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024c5e:	2cff      	cmp	r4, #255	; 0xff
90024c60:	d01a      	beq.n	90024c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90024c62:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90024c66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024c6a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024c6e:	fb04 fa00 	mul.w	sl, r4, r0
90024c72:	fb08 f80c 	mul.w	r8, r8, ip
90024c76:	f10a 0c20 	add.w	ip, sl, #32
90024c7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024c7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024c82:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024c86:	4440      	add	r0, r8
90024c88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024c8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024c90:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024c94:	ea40 000c 	orr.w	r0, r0, ip
90024c98:	fb15 fc02 	smulbb	ip, r5, r2
90024c9c:	f1c5 0810 	rsb	r8, r5, #16
90024ca0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024ca4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90024ca8:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024cac:	eba8 0802 	sub.w	r8, r8, r2
90024cb0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024cb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024cb8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024cbc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024cc0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024cc4:	ea4a 0101 	orr.w	r1, sl, r1
90024cc8:	437a      	muls	r2, r7
90024cca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024cce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024cd2:	fb09 2208 	mla	r2, r9, r8, r2
90024cd6:	ea4b 0000 	orr.w	r0, fp, r0
90024cda:	fb05 2201 	mla	r2, r5, r1, r2
90024cde:	fb0c 2200 	mla	r2, ip, r0, r2
90024ce2:	0d57      	lsrs	r7, r2, #21
90024ce4:	0952      	lsrs	r2, r2, #5
90024ce6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024cea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024cee:	433a      	orrs	r2, r7
90024cf0:	2bff      	cmp	r3, #255	; 0xff
90024cf2:	b292      	uxth	r2, r2
90024cf4:	d102      	bne.n	90024cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024cf6:	9912      	ldr	r1, [sp, #72]	; 0x48
90024cf8:	29ff      	cmp	r1, #255	; 0xff
90024cfa:	d063      	beq.n	90024dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024cfc:	980a      	ldr	r0, [sp, #40]	; 0x28
90024cfe:	1215      	asrs	r5, r2, #8
90024d00:	f8be 1000 	ldrh.w	r1, [lr]
90024d04:	4343      	muls	r3, r0
90024d06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90024d08:	10cf      	asrs	r7, r1, #3
90024d0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024d0e:	1c58      	adds	r0, r3, #1
90024d10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90024d14:	eb00 2323 	add.w	r3, r0, r3, asr #8
90024d18:	1208      	asrs	r0, r1, #8
90024d1a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90024d1e:	00c9      	lsls	r1, r1, #3
90024d20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024d24:	b2db      	uxtb	r3, r3
90024d26:	b2c9      	uxtb	r1, r1
90024d28:	fb10 f003 	smulbb	r0, r0, r3
90024d2c:	fb11 f103 	smulbb	r1, r1, r3
90024d30:	fb05 0504 	mla	r5, r5, r4, r0
90024d34:	10d0      	asrs	r0, r2, #3
90024d36:	fb17 f703 	smulbb	r7, r7, r3
90024d3a:	00d2      	lsls	r2, r2, #3
90024d3c:	b2ad      	uxth	r5, r5
90024d3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024d42:	b2d2      	uxtb	r2, r2
90024d44:	fb00 7004 	mla	r0, r0, r4, r7
90024d48:	1c6b      	adds	r3, r5, #1
90024d4a:	fb02 1204 	mla	r2, r2, r4, r1
90024d4e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024d52:	b292      	uxth	r2, r2
90024d54:	b280      	uxth	r0, r0
90024d56:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024d5a:	1c57      	adds	r7, r2, #1
90024d5c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024d60:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024d64:	433d      	orrs	r5, r7
90024d66:	1c47      	adds	r7, r0, #1
90024d68:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024d6c:	097f      	lsrs	r7, r7, #5
90024d6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90024d72:	433d      	orrs	r5, r7
90024d74:	f8ae 5000 	strh.w	r5, [lr]
90024d78:	9b21      	ldr	r3, [sp, #132]	; 0x84
90024d7a:	f10e 0e02 	add.w	lr, lr, #2
90024d7e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90024d80:	4413      	add	r3, r2
90024d82:	9a22      	ldr	r2, [sp, #136]	; 0x88
90024d84:	9321      	str	r3, [sp, #132]	; 0x84
90024d86:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024d88:	441a      	add	r2, r3
90024d8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90024d8c:	3b01      	subs	r3, #1
90024d8e:	9222      	str	r2, [sp, #136]	; 0x88
90024d90:	9313      	str	r3, [sp, #76]	; 0x4c
90024d92:	e61c      	b.n	900249ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90024d94:	fb08 f000 	mul.w	r0, r8, r0
90024d98:	fb09 0303 	mla	r3, r9, r3, r0
90024d9c:	e6dc      	b.n	90024b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024d9e:	46b9      	mov	r9, r7
90024da0:	e704      	b.n	90024bac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90024da2:	f1c2 0110 	rsb	r1, r2, #16
90024da6:	437a      	muls	r2, r7
90024da8:	fb09 2901 	mla	r9, r9, r1, r2
90024dac:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024db0:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024db4:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024db8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024dbc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024dc0:	4302      	orrs	r2, r0
90024dc2:	e795      	b.n	90024cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90024dc4:	f8ae 2000 	strh.w	r2, [lr]
90024dc8:	e7d6      	b.n	90024d78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024dca:	b017      	add	sp, #92	; 0x5c
90024dcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024dd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024dd4:	b085      	sub	sp, #20
90024dd6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90024dda:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90024dde:	2800      	cmp	r0, #0
90024de0:	9103      	str	r1, [sp, #12]
90024de2:	fb00 7406 	mla	r4, r0, r6, r7
90024de6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90024dea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90024dee:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90024df2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90024df6:	eb02 0904 	add.w	r9, r2, r4
90024dfa:	9501      	str	r5, [sp, #4]
90024dfc:	f2c0 8141 	blt.w	90025082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024e00:	4583      	cmp	fp, r0
90024e02:	f340 813e 	ble.w	90025082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024e06:	2f00      	cmp	r7, #0
90024e08:	f2c0 8137 	blt.w	9002507a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024e0c:	42be      	cmp	r6, r7
90024e0e:	f340 8134 	ble.w	9002507a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90024e12:	f812 c004 	ldrb.w	ip, [r2, r4]
90024e16:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90024e1a:	f64f 041f 	movw	r4, #63519	; 0xf81f
90024e1e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024e22:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90024e26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024e2a:	4355      	muls	r5, r2
90024e2c:	fb0c f203 	mul.w	r2, ip, r3
90024e30:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90024e34:	f605 0501 	addw	r5, r5, #2049	; 0x801
90024e38:	441d      	add	r5, r3
90024e3a:	f102 0320 	add.w	r3, r2, #32
90024e3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024e42:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90024e46:	0a1b      	lsrs	r3, r3, #8
90024e48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024e4c:	431c      	orrs	r4, r3
90024e4e:	1c7b      	adds	r3, r7, #1
90024e50:	f100 811c 	bmi.w	9002508c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024e54:	429e      	cmp	r6, r3
90024e56:	f340 8119 	ble.w	9002508c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90024e5a:	2900      	cmp	r1, #0
90024e5c:	f000 8119 	beq.w	90025092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90024e60:	9a01      	ldr	r2, [sp, #4]
90024e62:	f899 3001 	ldrb.w	r3, [r9, #1]
90024e66:	8855      	ldrh	r5, [r2, #2]
90024e68:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024e6c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90024e70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024e74:	fb08 f802 	mul.w	r8, r8, r2
90024e78:	f64f 021f 	movw	r2, #63519	; 0xf81f
90024e7c:	435d      	muls	r5, r3
90024e7e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90024e82:	f608 0801 	addw	r8, r8, #2049	; 0x801
90024e86:	44d0      	add	r8, sl
90024e88:	f105 0a20 	add.w	sl, r5, #32
90024e8c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024e90:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90024e94:	0a2d      	lsrs	r5, r5, #8
90024e96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90024e9a:	432a      	orrs	r2, r5
90024e9c:	3001      	adds	r0, #1
90024e9e:	f100 80fe 	bmi.w	9002509e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024ea2:	4583      	cmp	fp, r0
90024ea4:	f340 80fb 	ble.w	9002509e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024ea8:	f1be 0f00 	cmp.w	lr, #0
90024eac:	f000 80fc 	beq.w	900250a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024eb0:	2f00      	cmp	r7, #0
90024eb2:	f2c0 80f1 	blt.w	90025098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024eb6:	42be      	cmp	r6, r7
90024eb8:	f340 80ee 	ble.w	90025098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024ebc:	9801      	ldr	r0, [sp, #4]
90024ebe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90024ec2:	f819 5006 	ldrb.w	r5, [r9, r6]
90024ec6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024eca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024ece:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90024ed2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90024ed6:	fb0a fa00 	mul.w	sl, sl, r0
90024eda:	fb05 f808 	mul.w	r8, r5, r8
90024ede:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90024ee2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90024ee6:	4482      	add	sl, r0
90024ee8:	f108 0020 	add.w	r0, r8, #32
90024eec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024ef0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90024ef4:	0a00      	lsrs	r0, r0, #8
90024ef6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024efa:	ea4b 0b00 	orr.w	fp, fp, r0
90024efe:	3701      	adds	r7, #1
90024f00:	f100 80d7 	bmi.w	900250b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024f04:	42be      	cmp	r6, r7
90024f06:	f340 80d4 	ble.w	900250b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90024f0a:	2900      	cmp	r1, #0
90024f0c:	f000 80d4 	beq.w	900250b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90024f10:	3601      	adds	r6, #1
90024f12:	9801      	ldr	r0, [sp, #4]
90024f14:	f819 7006 	ldrb.w	r7, [r9, r6]
90024f18:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90024f1c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90024f20:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90024f24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024f28:	fb09 f906 	mul.w	r9, r9, r6
90024f2c:	fb07 f800 	mul.w	r8, r7, r0
90024f30:	f64f 001f 	movw	r0, #63519	; 0xf81f
90024f34:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90024f38:	f609 0901 	addw	r9, r9, #2049	; 0x801
90024f3c:	44d1      	add	r9, sl
90024f3e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90024f42:	f108 0020 	add.w	r0, r8, #32
90024f46:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024f4a:	0a00      	lsrs	r0, r0, #8
90024f4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024f50:	4330      	orrs	r0, r6
90024f52:	b28e      	uxth	r6, r1
90024f54:	fa1f f98e 	uxth.w	r9, lr
90024f58:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90024f5c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90024f60:	fb06 f809 	mul.w	r8, r6, r9
90024f64:	0136      	lsls	r6, r6, #4
90024f66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024f6a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024f6e:	9601      	str	r6, [sp, #4]
90024f70:	ea4a 0404 	orr.w	r4, sl, r4
90024f74:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024f78:	fa1f f689 	uxth.w	r6, r9
90024f7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024f80:	fb11 f90e 	smulbb	r9, r1, lr
90024f84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024f88:	9602      	str	r6, [sp, #8]
90024f8a:	4626      	mov	r6, r4
90024f8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024f90:	f1ce 0410 	rsb	r4, lr, #16
90024f94:	ea4a 0202 	orr.w	r2, sl, r2
90024f98:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024f9c:	1a64      	subs	r4, r4, r1
90024f9e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90024fa2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90024fa6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024faa:	434a      	muls	r2, r1
90024fac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024fb0:	ea4a 0000 	orr.w	r0, sl, r0
90024fb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024fb8:	fb04 2406 	mla	r4, r4, r6, r2
90024fbc:	9903      	ldr	r1, [sp, #12]
90024fbe:	fb09 4200 	mla	r2, r9, r0, r4
90024fc2:	ea4f 440b 	mov.w	r4, fp, lsl #16
90024fc6:	9801      	ldr	r0, [sp, #4]
90024fc8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024fcc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90024fd0:	8809      	ldrh	r1, [r1, #0]
90024fd2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90024fd6:	ea44 0b0b 	orr.w	fp, r4, fp
90024fda:	9c02      	ldr	r4, [sp, #8]
90024fdc:	1b00      	subs	r0, r0, r4
90024fde:	9c01      	ldr	r4, [sp, #4]
90024fe0:	fb0e 2e0b 	mla	lr, lr, fp, r2
90024fe4:	eba4 0608 	sub.w	r6, r4, r8
90024fe8:	b280      	uxth	r0, r0
90024fea:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024fee:	b2b6      	uxth	r6, r6
90024ff0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024ff4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024ff8:	4373      	muls	r3, r6
90024ffa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90024ffe:	fb0c 3300 	mla	r3, ip, r0, r3
90025002:	9802      	ldr	r0, [sp, #8]
90025004:	ea42 0e0e 	orr.w	lr, r2, lr
90025008:	fb00 3505 	mla	r5, r0, r5, r3
9002500c:	120b      	asrs	r3, r1, #8
9002500e:	10c8      	asrs	r0, r1, #3
90025010:	fb08 5707 	mla	r7, r8, r7, r5
90025014:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025018:	00c9      	lsls	r1, r1, #3
9002501a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002501e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90025022:	fa1f f28e 	uxth.w	r2, lr
90025026:	b2c9      	uxtb	r1, r1
90025028:	b2ff      	uxtb	r7, r7
9002502a:	437b      	muls	r3, r7
9002502c:	4378      	muls	r0, r7
9002502e:	434f      	muls	r7, r1
90025030:	1c59      	adds	r1, r3, #1
90025032:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025036:	1213      	asrs	r3, r2, #8
90025038:	f023 0307 	bic.w	r3, r3, #7
9002503c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025040:	1c41      	adds	r1, r0, #1
90025042:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025046:	10d1      	asrs	r1, r2, #3
90025048:	021b      	lsls	r3, r3, #8
9002504a:	f021 0103 	bic.w	r1, r1, #3
9002504e:	00d2      	lsls	r2, r2, #3
90025050:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90025054:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025058:	00c9      	lsls	r1, r1, #3
9002505a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002505e:	430b      	orrs	r3, r1
90025060:	1c79      	adds	r1, r7, #1
90025062:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90025066:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9002506a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002506e:	431a      	orrs	r2, r3
90025070:	9b03      	ldr	r3, [sp, #12]
90025072:	801a      	strh	r2, [r3, #0]
90025074:	b005      	add	sp, #20
90025076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002507a:	f04f 0c00 	mov.w	ip, #0
9002507e:	4664      	mov	r4, ip
90025080:	e6e5      	b.n	90024e4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90025082:	2300      	movs	r3, #0
90025084:	469c      	mov	ip, r3
90025086:	461a      	mov	r2, r3
90025088:	461c      	mov	r4, r3
9002508a:	e707      	b.n	90024e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002508c:	2300      	movs	r3, #0
9002508e:	461a      	mov	r2, r3
90025090:	e704      	b.n	90024e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025092:	460b      	mov	r3, r1
90025094:	460a      	mov	r2, r1
90025096:	e701      	b.n	90024e9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90025098:	2500      	movs	r5, #0
9002509a:	46ab      	mov	fp, r5
9002509c:	e72f      	b.n	90024efe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002509e:	2700      	movs	r7, #0
900250a0:	463d      	mov	r5, r7
900250a2:	4638      	mov	r0, r7
900250a4:	46bb      	mov	fp, r7
900250a6:	e754      	b.n	90024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900250a8:	4677      	mov	r7, lr
900250aa:	4675      	mov	r5, lr
900250ac:	4670      	mov	r0, lr
900250ae:	46f3      	mov	fp, lr
900250b0:	e74f      	b.n	90024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900250b2:	2700      	movs	r7, #0
900250b4:	4638      	mov	r0, r7
900250b6:	e74c      	b.n	90024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900250b8:	460f      	mov	r7, r1
900250ba:	4608      	mov	r0, r1
900250bc:	e749      	b.n	90024f52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

900250c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900250c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900250c4:	b093      	sub	sp, #76	; 0x4c
900250c6:	9210      	str	r2, [sp, #64]	; 0x40
900250c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
900250ca:	9011      	str	r0, [sp, #68]	; 0x44
900250cc:	910e      	str	r1, [sp, #56]	; 0x38
900250ce:	6850      	ldr	r0, [r2, #4]
900250d0:	9306      	str	r3, [sp, #24]
900250d2:	6812      	ldr	r2, [r2, #0]
900250d4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900250d8:	fb00 1303 	mla	r3, r0, r3, r1
900250dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900250e0:	9307      	str	r3, [sp, #28]
900250e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900250e4:	681b      	ldr	r3, [r3, #0]
900250e6:	9308      	str	r3, [sp, #32]
900250e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900250ea:	685b      	ldr	r3, [r3, #4]
900250ec:	9309      	str	r3, [sp, #36]	; 0x24
900250ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900250f0:	2b00      	cmp	r3, #0
900250f2:	dc03      	bgt.n	900250fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900250f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
900250f6:	2b00      	cmp	r3, #0
900250f8:	f340 83b6 	ble.w	90025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900250fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900250fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025102:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025106:	1e48      	subs	r0, r1, #1
90025108:	1e55      	subs	r5, r2, #1
9002510a:	9b06      	ldr	r3, [sp, #24]
9002510c:	2b00      	cmp	r3, #0
9002510e:	f340 8165 	ble.w	900253dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90025112:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90025114:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025116:	1436      	asrs	r6, r6, #16
90025118:	ea4f 4323 	mov.w	r3, r3, asr #16
9002511c:	d406      	bmi.n	9002512c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002511e:	4286      	cmp	r6, r0
90025120:	da04      	bge.n	9002512c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025122:	2b00      	cmp	r3, #0
90025124:	db02      	blt.n	9002512c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025126:	42ab      	cmp	r3, r5
90025128:	f2c0 8159 	blt.w	900253de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9002512c:	3601      	adds	r6, #1
9002512e:	f100 8146 	bmi.w	900253be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025132:	42b1      	cmp	r1, r6
90025134:	f2c0 8143 	blt.w	900253be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025138:	3301      	adds	r3, #1
9002513a:	f100 8140 	bmi.w	900253be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002513e:	429a      	cmp	r2, r3
90025140:	f2c0 813d 	blt.w	900253be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90025144:	9b06      	ldr	r3, [sp, #24]
90025146:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002514a:	9f07      	ldr	r7, [sp, #28]
9002514c:	930f      	str	r3, [sp, #60]	; 0x3c
9002514e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90025150:	2b00      	cmp	r3, #0
90025152:	f340 8166 	ble.w	90025422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025156:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025158:	9d1d      	ldr	r5, [sp, #116]	; 0x74
9002515a:	1418      	asrs	r0, r3, #16
9002515c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002515e:	142d      	asrs	r5, r5, #16
90025160:	f3c3 3103 	ubfx	r1, r3, #12, #4
90025164:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025166:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002516a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002516c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90025170:	f100 81f0 	bmi.w	90025554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025174:	f102 3eff 	add.w	lr, r2, #4294967295
90025178:	4575      	cmp	r5, lr
9002517a:	f280 81eb 	bge.w	90025554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002517e:	2800      	cmp	r0, #0
90025180:	f2c0 81e8 	blt.w	90025554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025184:	f103 3eff 	add.w	lr, r3, #4294967295
90025188:	4570      	cmp	r0, lr
9002518a:	f280 81e3 	bge.w	90025554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002518e:	b212      	sxth	r2, r2
90025190:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025192:	fa1f fe81 	uxth.w	lr, r1
90025196:	fb00 5002 	mla	r0, r0, r2, r5
9002519a:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002519e:	eb03 0a00 	add.w	sl, r3, r0
900251a2:	f813 9000 	ldrb.w	r9, [r3, r0]
900251a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900251aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
900251ae:	b29b      	uxth	r3, r3
900251b0:	f1bc 0f00 	cmp.w	ip, #0
900251b4:	f000 817b 	beq.w	900254ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900251b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
900251bc:	eb0a 0b02 	add.w	fp, sl, r2
900251c0:	fa1f fa8c 	uxth.w	sl, ip
900251c4:	940a      	str	r4, [sp, #40]	; 0x28
900251c6:	fb0a fe0e 	mul.w	lr, sl, lr
900251ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
900251ce:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900251d2:	eba5 050e 	sub.w	r5, r5, lr
900251d6:	940b      	str	r4, [sp, #44]	; 0x2c
900251d8:	fa1f fa8a 	uxth.w	sl, sl
900251dc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900251de:	b2ad      	uxth	r5, r5
900251e0:	eba3 030a 	sub.w	r3, r3, sl
900251e4:	fb08 f505 	mul.w	r5, r8, r5
900251e8:	b29b      	uxth	r3, r3
900251ea:	fb09 5303 	mla	r3, r9, r3, r5
900251ee:	fb0a 3304 	mla	r3, sl, r4, r3
900251f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900251f4:	fb0e 3304 	mla	r3, lr, r4, r3
900251f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900251fc:	2b00      	cmp	r3, #0
900251fe:	f000 80d1 	beq.w	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025202:	9c08      	ldr	r4, [sp, #32]
90025204:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90025208:	eb04 0540 	add.w	r5, r4, r0, lsl #1
9002520c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90025210:	f000 8152 	beq.w	900254b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025214:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025218:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002521c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025220:	fb0a fe0e 	mul.w	lr, sl, lr
90025224:	fb09 f000 	mul.w	r0, r9, r0
90025228:	ea06 195e 	and.w	r9, r6, lr, lsr #5
9002522c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90025230:	f100 0b20 	add.w	fp, r0, #32
90025234:	44ce      	add	lr, r9
90025236:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002523a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002523e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025242:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90025246:	ea4e 0909 	orr.w	r9, lr, r9
9002524a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002524e:	8868      	ldrh	r0, [r5, #2]
90025250:	d019      	beq.n	90025286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90025252:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90025256:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002525a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002525e:	fb0a fe0e 	mul.w	lr, sl, lr
90025262:	fb08 f800 	mul.w	r8, r8, r0
90025266:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002526a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002526e:	f108 0b20 	add.w	fp, r8, #32
90025272:	4486      	add	lr, r0
90025274:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90025278:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002527c:	0a00      	lsrs	r0, r0, #8
9002527e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025282:	ea4e 0000 	orr.w	r0, lr, r0
90025286:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002528a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002528e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90025292:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025296:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002529a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002529e:	ea4e 0909 	orr.w	r9, lr, r9
900252a2:	ea4a 0000 	orr.w	r0, sl, r0
900252a6:	f1bc 0f00 	cmp.w	ip, #0
900252aa:	f000 8107 	beq.w	900254bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900252ae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900252b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900252b4:	3a01      	subs	r2, #1
900252b6:	2cff      	cmp	r4, #255	; 0xff
900252b8:	ea4f 0242 	mov.w	r2, r2, lsl #1
900252bc:	f102 0202 	add.w	r2, r2, #2
900252c0:	eb05 0e02 	add.w	lr, r5, r2
900252c4:	5aaa      	ldrh	r2, [r5, r2]
900252c6:	d018      	beq.n	900252fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
900252c8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900252cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900252d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900252d4:	fb04 fa02 	mul.w	sl, r4, r2
900252d8:	fb08 f805 	mul.w	r8, r8, r5
900252dc:	f10a 0520 	add.w	r5, sl, #32
900252e0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900252e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900252e8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900252ec:	4442      	add	r2, r8
900252ee:	0a2d      	lsrs	r5, r5, #8
900252f0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900252f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900252f8:	432a      	orrs	r2, r5
900252fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900252fc:	f8be 5002 	ldrh.w	r5, [lr, #2]
90025300:	2cff      	cmp	r4, #255	; 0xff
90025302:	d01a      	beq.n	9002533a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90025304:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90025308:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002530c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025310:	fb04 fa05 	mul.w	sl, r4, r5
90025314:	fb08 f80e 	mul.w	r8, r8, lr
90025318:	f10a 0e20 	add.w	lr, sl, #32
9002531c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90025320:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025324:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90025328:	4445      	add	r5, r8
9002532a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002532e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90025332:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90025336:	ea45 050e 	orr.w	r5, r5, lr
9002533a:	fb1c fe01 	smulbb	lr, ip, r1
9002533e:	f1cc 0810 	rsb	r8, ip, #16
90025342:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90025346:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002534a:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002534e:	eba8 0801 	sub.w	r8, r8, r1
90025352:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90025356:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002535a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002535e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90025362:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90025366:	ea4a 0202 	orr.w	r2, sl, r2
9002536a:	4341      	muls	r1, r0
9002536c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90025370:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025374:	fb09 1108 	mla	r1, r9, r8, r1
90025378:	ea4b 0505 	orr.w	r5, fp, r5
9002537c:	fb0c 1102 	mla	r1, ip, r2, r1
90025380:	fb0e 1e05 	mla	lr, lr, r5, r1
90025384:	ea4f 525e 	mov.w	r2, lr, lsr #21
90025388:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002538c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025390:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025394:	ea42 0e0e 	orr.w	lr, r2, lr
90025398:	fa1f f28e 	uxth.w	r2, lr
9002539c:	2bff      	cmp	r3, #255	; 0xff
9002539e:	f040 80a1 	bne.w	900254e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
900253a2:	803a      	strh	r2, [r7, #0]
900253a4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900253a6:	3702      	adds	r7, #2
900253a8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900253aa:	4413      	add	r3, r2
900253ac:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900253ae:	931d      	str	r3, [sp, #116]	; 0x74
900253b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900253b2:	441a      	add	r2, r3
900253b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900253b6:	3b01      	subs	r3, #1
900253b8:	921e      	str	r2, [sp, #120]	; 0x78
900253ba:	930f      	str	r3, [sp, #60]	; 0x3c
900253bc:	e6c7      	b.n	9002514e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900253be:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900253c0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
900253c2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
900253c4:	4433      	add	r3, r6
900253c6:	931d      	str	r3, [sp, #116]	; 0x74
900253c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900253ca:	441c      	add	r4, r3
900253cc:	9b06      	ldr	r3, [sp, #24]
900253ce:	3b01      	subs	r3, #1
900253d0:	941e      	str	r4, [sp, #120]	; 0x78
900253d2:	9306      	str	r3, [sp, #24]
900253d4:	9b07      	ldr	r3, [sp, #28]
900253d6:	3302      	adds	r3, #2
900253d8:	9307      	str	r3, [sp, #28]
900253da:	e696      	b.n	9002510a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900253dc:	d028      	beq.n	90025430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900253de:	9b06      	ldr	r3, [sp, #24]
900253e0:	981f      	ldr	r0, [sp, #124]	; 0x7c
900253e2:	3b01      	subs	r3, #1
900253e4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
900253e6:	fb00 5003 	mla	r0, r0, r3, r5
900253ea:	1400      	asrs	r0, r0, #16
900253ec:	f53f aeaa 	bmi.w	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900253f0:	3901      	subs	r1, #1
900253f2:	4288      	cmp	r0, r1
900253f4:	f6bf aea6 	bge.w	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900253f8:	9920      	ldr	r1, [sp, #128]	; 0x80
900253fa:	981e      	ldr	r0, [sp, #120]	; 0x78
900253fc:	fb01 0303 	mla	r3, r1, r3, r0
90025400:	141b      	asrs	r3, r3, #16
90025402:	f53f ae9f 	bmi.w	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90025406:	3a01      	subs	r2, #1
90025408:	4293      	cmp	r3, r2
9002540a:	f6bf ae9b 	bge.w	90025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002540e:	9b06      	ldr	r3, [sp, #24]
90025410:	f64f 061f 	movw	r6, #63519	; 0xf81f
90025414:	f8dd e01c 	ldr.w	lr, [sp, #28]
90025418:	930f      	str	r3, [sp, #60]	; 0x3c
9002541a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002541c:	2b00      	cmp	r3, #0
9002541e:	f300 80b6 	bgt.w	9002558e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90025422:	9b06      	ldr	r3, [sp, #24]
90025424:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025428:	9b07      	ldr	r3, [sp, #28]
9002542a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002542e:	9307      	str	r3, [sp, #28]
90025430:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025432:	2b00      	cmp	r3, #0
90025434:	f340 8218 	ble.w	90025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90025438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002543c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002543e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025442:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025446:	eef0 6a62 	vmov.f32	s13, s5
9002544a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002544e:	ee31 1a05 	vadd.f32	s2, s2, s10
90025452:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025456:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
9002545a:	eef0 6a43 	vmov.f32	s13, s6
9002545e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025462:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90025466:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002546a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002546e:	ee77 2a62 	vsub.f32	s5, s14, s5
90025472:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025476:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002547a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002547e:	ee12 2a90 	vmov	r2, s5
90025482:	eef0 2a47 	vmov.f32	s5, s14
90025486:	fb92 f3f3 	sdiv	r3, r2, r3
9002548a:	ee13 2a10 	vmov	r2, s6
9002548e:	931f      	str	r3, [sp, #124]	; 0x7c
90025490:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025492:	eeb0 3a67 	vmov.f32	s6, s15
90025496:	fb92 f3f3 	sdiv	r3, r2, r3
9002549a:	9320      	str	r3, [sp, #128]	; 0x80
9002549c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002549e:	9a10      	ldr	r2, [sp, #64]	; 0x40
900254a0:	3b01      	subs	r3, #1
900254a2:	930e      	str	r3, [sp, #56]	; 0x38
900254a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900254a6:	bf08      	it	eq
900254a8:	4613      	moveq	r3, r2
900254aa:	9306      	str	r3, [sp, #24]
900254ac:	e61f      	b.n	900250ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
900254ae:	fb08 f505 	mul.w	r5, r8, r5
900254b2:	fb09 5303 	mla	r3, r9, r3, r5
900254b6:	e69f      	b.n	900251f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900254b8:	4681      	mov	r9, r0
900254ba:	e6c6      	b.n	9002524a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900254bc:	f1c1 0210 	rsb	r2, r1, #16
900254c0:	4341      	muls	r1, r0
900254c2:	fb09 1902 	mla	r9, r9, r2, r1
900254c6:	ea4f 0949 	mov.w	r9, r9, lsl #1
900254ca:	ea4f 5259 	mov.w	r2, r9, lsr #21
900254ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
900254d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900254d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900254da:	ea42 0909 	orr.w	r9, r2, r9
900254de:	fa1f f289 	uxth.w	r2, r9
900254e2:	e75b      	b.n	9002539c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900254e4:	f8b7 c000 	ldrh.w	ip, [r7]
900254e8:	43db      	mvns	r3, r3
900254ea:	ea4f 202c 	mov.w	r0, ip, asr #8
900254ee:	fa5f fe83 	uxtb.w	lr, r3
900254f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900254f6:	ea4f 05ec 	mov.w	r5, ip, asr #3
900254fa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900254fe:	fb00 f00e 	mul.w	r0, r0, lr
90025502:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025506:	b2db      	uxtb	r3, r3
90025508:	1c41      	adds	r1, r0, #1
9002550a:	fb05 f50e 	mul.w	r5, r5, lr
9002550e:	fb03 f30e 	mul.w	r3, r3, lr
90025512:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025516:	1211      	asrs	r1, r2, #8
90025518:	f021 0107 	bic.w	r1, r1, #7
9002551c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025520:	48d3      	ldr	r0, [pc, #844]	; (90025870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025522:	b2c9      	uxtb	r1, r1
90025524:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90025528:	1c69      	adds	r1, r5, #1
9002552a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002552e:	10d1      	asrs	r1, r2, #3
90025530:	00d2      	lsls	r2, r2, #3
90025532:	f021 0103 	bic.w	r1, r1, #3
90025536:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002553a:	00c9      	lsls	r1, r1, #3
9002553c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025540:	4301      	orrs	r1, r0
90025542:	1c58      	adds	r0, r3, #1
90025544:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025548:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002554c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025550:	430a      	orrs	r2, r1
90025552:	e726      	b.n	900253a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90025554:	f115 0e01 	adds.w	lr, r5, #1
90025558:	f53f af24 	bmi.w	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002555c:	4572      	cmp	r2, lr
9002555e:	f6ff af21 	blt.w	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025562:	f110 0e01 	adds.w	lr, r0, #1
90025566:	f53f af1d 	bmi.w	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002556a:	4573      	cmp	r3, lr
9002556c:	f6ff af1a 	blt.w	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90025570:	b21b      	sxth	r3, r3
90025572:	b212      	sxth	r2, r2
90025574:	9301      	str	r3, [sp, #4]
90025576:	9200      	str	r2, [sp, #0]
90025578:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9002557c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90025580:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90025584:	4639      	mov	r1, r7
90025586:	9811      	ldr	r0, [sp, #68]	; 0x44
90025588:	f7ff fc22 	bl	90024dd0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002558c:	e70a      	b.n	900253a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002558e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025590:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025594:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90025596:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002559a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002559c:	fa1f fc82 	uxth.w	ip, r2
900255a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900255a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900255a6:	ea4f 100c 	mov.w	r0, ip, lsl #4
900255aa:	141f      	asrs	r7, r3, #16
900255ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900255ae:	141b      	asrs	r3, r3, #16
900255b0:	fb01 3707 	mla	r7, r1, r7, r3
900255b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900255b6:	eb03 0a07 	add.w	sl, r3, r7
900255ba:	f813 9007 	ldrb.w	r9, [r3, r7]
900255be:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900255c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900255c6:	b29b      	uxth	r3, r3
900255c8:	2d00      	cmp	r5, #0
900255ca:	f000 80fe 	beq.w	900257ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900255ce:	f81a 4001 	ldrb.w	r4, [sl, r1]
900255d2:	eb0a 0b01 	add.w	fp, sl, r1
900255d6:	fa1f fa85 	uxth.w	sl, r5
900255da:	940c      	str	r4, [sp, #48]	; 0x30
900255dc:	fb0a fc0c 	mul.w	ip, sl, ip
900255e0:	f89b 4001 	ldrb.w	r4, [fp, #1]
900255e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900255e8:	eba0 000c 	sub.w	r0, r0, ip
900255ec:	940d      	str	r4, [sp, #52]	; 0x34
900255ee:	fa1f fa8a 	uxth.w	sl, sl
900255f2:	b280      	uxth	r0, r0
900255f4:	eba3 030a 	sub.w	r3, r3, sl
900255f8:	fb08 f000 	mul.w	r0, r8, r0
900255fc:	b29b      	uxth	r3, r3
900255fe:	fb09 0303 	mla	r3, r9, r3, r0
90025602:	980c      	ldr	r0, [sp, #48]	; 0x30
90025604:	fb0a 3300 	mla	r3, sl, r0, r3
90025608:	fb0c 3304 	mla	r3, ip, r4, r3
9002560c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025610:	2b00      	cmp	r3, #0
90025612:	f000 80cc 	beq.w	900257ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025616:	9808      	ldr	r0, [sp, #32]
90025618:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002561c:	9c08      	ldr	r4, [sp, #32]
9002561e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90025622:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90025626:	f000 80d5 	beq.w	900257d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002562a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002562e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90025632:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025636:	fb0a fc0c 	mul.w	ip, sl, ip
9002563a:	fb09 f707 	mul.w	r7, r9, r7
9002563e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90025642:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025646:	f107 0b20 	add.w	fp, r7, #32
9002564a:	44cc      	add	ip, r9
9002564c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90025650:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025654:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025658:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002565c:	ea4c 0909 	orr.w	r9, ip, r9
90025660:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90025664:	8847      	ldrh	r7, [r0, #2]
90025666:	d019      	beq.n	9002569c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90025668:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002566c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90025670:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025674:	fb0a fc0c 	mul.w	ip, sl, ip
90025678:	fb08 f807 	mul.w	r8, r8, r7
9002567c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90025680:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90025684:	f108 0b20 	add.w	fp, r8, #32
90025688:	44bc      	add	ip, r7
9002568a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002568e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90025692:	0a3f      	lsrs	r7, r7, #8
90025694:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90025698:	ea4c 0707 	orr.w	r7, ip, r7
9002569c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900256a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900256a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900256a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900256ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900256b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900256b4:	ea4c 0909 	orr.w	r9, ip, r9
900256b8:	ea4a 0707 	orr.w	r7, sl, r7
900256bc:	2d00      	cmp	r5, #0
900256be:	f000 808b 	beq.w	900257d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900256c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900256c6:	3901      	subs	r1, #1
900256c8:	0049      	lsls	r1, r1, #1
900256ca:	3102      	adds	r1, #2
900256cc:	eb00 0c01 	add.w	ip, r0, r1
900256d0:	5a41      	ldrh	r1, [r0, r1]
900256d2:	980c      	ldr	r0, [sp, #48]	; 0x30
900256d4:	28ff      	cmp	r0, #255	; 0xff
900256d6:	d019      	beq.n	9002570c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900256d8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900256dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900256de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900256e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900256e6:	fb04 fa01 	mul.w	sl, r4, r1
900256ea:	fb08 f800 	mul.w	r8, r8, r0
900256ee:	f10a 0020 	add.w	r0, sl, #32
900256f2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900256f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
900256fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900256fe:	4441      	add	r1, r8
90025700:	0a00      	lsrs	r0, r0, #8
90025702:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90025706:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002570a:	4301      	orrs	r1, r0
9002570c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002570e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90025712:	2cff      	cmp	r4, #255	; 0xff
90025714:	d01a      	beq.n	9002574c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90025716:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002571a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002571e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90025722:	fb04 fa00 	mul.w	sl, r4, r0
90025726:	fb08 f80c 	mul.w	r8, r8, ip
9002572a:	f10a 0c20 	add.w	ip, sl, #32
9002572e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90025732:	f608 0801 	addw	r8, r8, #2049	; 0x801
90025736:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002573a:	4440      	add	r0, r8
9002573c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025740:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90025744:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025748:	ea40 000c 	orr.w	r0, r0, ip
9002574c:	fb15 fc02 	smulbb	ip, r5, r2
90025750:	f1c5 0810 	rsb	r8, r5, #16
90025754:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025758:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002575c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90025760:	eba8 0802 	sub.w	r8, r8, r2
90025764:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025768:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002576c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90025770:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025774:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90025778:	ea4a 0101 	orr.w	r1, sl, r1
9002577c:	437a      	muls	r2, r7
9002577e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90025782:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025786:	fb09 2208 	mla	r2, r9, r8, r2
9002578a:	ea4b 0000 	orr.w	r0, fp, r0
9002578e:	fb05 2201 	mla	r2, r5, r1, r2
90025792:	fb0c 2200 	mla	r2, ip, r0, r2
90025796:	0d57      	lsrs	r7, r2, #21
90025798:	0952      	lsrs	r2, r2, #5
9002579a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002579e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900257a2:	433a      	orrs	r2, r7
900257a4:	2bff      	cmp	r3, #255	; 0xff
900257a6:	b292      	uxth	r2, r2
900257a8:	d127      	bne.n	900257fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
900257aa:	f8ae 2000 	strh.w	r2, [lr]
900257ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900257b0:	f10e 0e02 	add.w	lr, lr, #2
900257b4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900257b6:	4413      	add	r3, r2
900257b8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900257ba:	931d      	str	r3, [sp, #116]	; 0x74
900257bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
900257be:	441a      	add	r2, r3
900257c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900257c2:	3b01      	subs	r3, #1
900257c4:	921e      	str	r2, [sp, #120]	; 0x78
900257c6:	930f      	str	r3, [sp, #60]	; 0x3c
900257c8:	e627      	b.n	9002541a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900257ca:	fb08 f000 	mul.w	r0, r8, r0
900257ce:	fb09 0303 	mla	r3, r9, r3, r0
900257d2:	e71b      	b.n	9002560c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900257d4:	46b9      	mov	r9, r7
900257d6:	e743      	b.n	90025660 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900257d8:	f1c2 0110 	rsb	r1, r2, #16
900257dc:	437a      	muls	r2, r7
900257de:	fb09 2901 	mla	r9, r9, r1, r2
900257e2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900257e6:	ea4f 5059 	mov.w	r0, r9, lsr #21
900257ea:	ea4f 1259 	mov.w	r2, r9, lsr #5
900257ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900257f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900257f6:	4302      	orrs	r2, r0
900257f8:	e7d4      	b.n	900257a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900257fa:	f8be 7000 	ldrh.w	r7, [lr]
900257fe:	43db      	mvns	r3, r3
90025800:	4c1b      	ldr	r4, [pc, #108]	; (90025870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90025802:	1238      	asrs	r0, r7, #8
90025804:	fa5f fc83 	uxtb.w	ip, r3
90025808:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002580c:	10fd      	asrs	r5, r7, #3
9002580e:	00fb      	lsls	r3, r7, #3
90025810:	fb00 f00c 	mul.w	r0, r0, ip
90025814:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90025818:	b2db      	uxtb	r3, r3
9002581a:	fb05 f10c 	mul.w	r1, r5, ip
9002581e:	1c45      	adds	r5, r0, #1
90025820:	fb03 f30c 	mul.w	r3, r3, ip
90025824:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025828:	1215      	asrs	r5, r2, #8
9002582a:	f025 0507 	bic.w	r5, r5, #7
9002582e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90025832:	1c4d      	adds	r5, r1, #1
90025834:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025838:	10d1      	asrs	r1, r2, #3
9002583a:	b2c0      	uxtb	r0, r0
9002583c:	f021 0103 	bic.w	r1, r1, #3
90025840:	00d2      	lsls	r2, r2, #3
90025842:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90025846:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002584a:	00c9      	lsls	r1, r1, #3
9002584c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025850:	4308      	orrs	r0, r1
90025852:	1c59      	adds	r1, r3, #1
90025854:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90025858:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002585c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90025860:	4318      	orrs	r0, r3
90025862:	f8ae 0000 	strh.w	r0, [lr]
90025866:	e7a2      	b.n	900257ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90025868:	b013      	add	sp, #76	; 0x4c
9002586a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002586e:	bf00      	nop
90025870:	fffff800 	.word	0xfffff800

90025874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90025874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025878:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002587c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90025880:	fb05 4c03 	mla	ip, r5, r3, r4
90025884:	2d00      	cmp	r5, #0
90025886:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002588a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002588e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90025892:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90025896:	8808      	ldrh	r0, [r1, #0]
90025898:	f2c0 80a7 	blt.w	900259ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002589c:	45aa      	cmp	sl, r5
9002589e:	f340 80a4 	ble.w	900259ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900258a2:	2c00      	cmp	r4, #0
900258a4:	f2c0 809f 	blt.w	900259e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900258a8:	42a3      	cmp	r3, r4
900258aa:	f340 809c 	ble.w	900259e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
900258ae:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900258b2:	1c62      	adds	r2, r4, #1
900258b4:	f100 809c 	bmi.w	900259f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900258b8:	4293      	cmp	r3, r2
900258ba:	f340 8099 	ble.w	900259f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900258be:	f1b9 0f00 	cmp.w	r9, #0
900258c2:	f000 8095 	beq.w	900259f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900258c6:	f8be c002 	ldrh.w	ip, [lr, #2]
900258ca:	3501      	adds	r5, #1
900258cc:	f100 8094 	bmi.w	900259f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900258d0:	45aa      	cmp	sl, r5
900258d2:	f340 8091 	ble.w	900259f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900258d6:	2f00      	cmp	r7, #0
900258d8:	f000 808e 	beq.w	900259f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900258dc:	2c00      	cmp	r4, #0
900258de:	f2c0 8089 	blt.w	900259f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900258e2:	42a3      	cmp	r3, r4
900258e4:	f340 8086 	ble.w	900259f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900258e8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900258ec:	3401      	adds	r4, #1
900258ee:	f100 8086 	bmi.w	900259fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900258f2:	42a3      	cmp	r3, r4
900258f4:	f340 8083 	ble.w	900259fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900258f8:	f1b9 0f00 	cmp.w	r9, #0
900258fc:	d07f      	beq.n	900259fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900258fe:	3301      	adds	r3, #1
90025900:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90025904:	ea4f 4408 	mov.w	r4, r8, lsl #16
90025908:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9002590c:	fb19 fe07 	smulbb	lr, r9, r7
90025910:	f1c7 0210 	rsb	r2, r7, #16
90025914:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025918:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002591c:	eba2 0209 	sub.w	r2, r2, r9
90025920:	ea44 0808 	orr.w	r8, r4, r8
90025924:	ea4f 440c 	mov.w	r4, ip, lsl #16
90025928:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002592c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90025930:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90025934:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90025938:	ea44 0c0c 	orr.w	ip, r4, ip
9002593c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90025940:	fb04 f40c 	mul.w	r4, r4, ip
90025944:	fb02 4808 	mla	r8, r2, r8, r4
90025948:	041a      	lsls	r2, r3, #16
9002594a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002594e:	b2b4      	uxth	r4, r6
90025950:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025954:	43f6      	mvns	r6, r6
90025956:	4313      	orrs	r3, r2
90025958:	042a      	lsls	r2, r5, #16
9002595a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002595e:	b2f6      	uxtb	r6, r6
90025960:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025964:	fb0e 8303 	mla	r3, lr, r3, r8
90025968:	432a      	orrs	r2, r5
9002596a:	fb07 3202 	mla	r2, r7, r2, r3
9002596e:	10c7      	asrs	r7, r0, #3
90025970:	0d53      	lsrs	r3, r2, #21
90025972:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90025976:	0952      	lsrs	r2, r2, #5
90025978:	fb17 f706 	smulbb	r7, r7, r6
9002597c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025980:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025984:	431a      	orrs	r2, r3
90025986:	b293      	uxth	r3, r2
90025988:	1202      	asrs	r2, r0, #8
9002598a:	121d      	asrs	r5, r3, #8
9002598c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90025990:	00c0      	lsls	r0, r0, #3
90025992:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90025996:	fb12 f206 	smulbb	r2, r2, r6
9002599a:	b2c0      	uxtb	r0, r0
9002599c:	fb05 2504 	mla	r5, r5, r4, r2
900259a0:	10da      	asrs	r2, r3, #3
900259a2:	fb10 f006 	smulbb	r0, r0, r6
900259a6:	00db      	lsls	r3, r3, #3
900259a8:	b2ad      	uxth	r5, r5
900259aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900259ae:	b2db      	uxtb	r3, r3
900259b0:	fb02 7204 	mla	r2, r2, r4, r7
900259b4:	fb03 0004 	mla	r0, r3, r4, r0
900259b8:	1c6b      	adds	r3, r5, #1
900259ba:	b292      	uxth	r2, r2
900259bc:	b280      	uxth	r0, r0
900259be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900259c2:	1c43      	adds	r3, r0, #1
900259c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900259c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900259cc:	1c50      	adds	r0, r2, #1
900259ce:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900259d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900259d6:	0952      	lsrs	r2, r2, #5
900259d8:	432b      	orrs	r3, r5
900259da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900259de:	4313      	orrs	r3, r2
900259e0:	800b      	strh	r3, [r1, #0]
900259e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900259e6:	4680      	mov	r8, r0
900259e8:	e763      	b.n	900258b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900259ea:	4684      	mov	ip, r0
900259ec:	4680      	mov	r8, r0
900259ee:	e76c      	b.n	900258ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900259f0:	4684      	mov	ip, r0
900259f2:	e76a      	b.n	900258ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900259f4:	4605      	mov	r5, r0
900259f6:	e779      	b.n	900258ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900259f8:	4603      	mov	r3, r0
900259fa:	4605      	mov	r5, r0
900259fc:	e782      	b.n	90025904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900259fe:	4603      	mov	r3, r0
90025a00:	e780      	b.n	90025904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90025a02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025a02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025a06:	b093      	sub	sp, #76	; 0x4c
90025a08:	461d      	mov	r5, r3
90025a0a:	9210      	str	r2, [sp, #64]	; 0x40
90025a0c:	9b21      	ldr	r3, [sp, #132]	; 0x84
90025a0e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90025a12:	910a      	str	r1, [sp, #40]	; 0x28
90025a14:	920b      	str	r2, [sp, #44]	; 0x2c
90025a16:	6859      	ldr	r1, [r3, #4]
90025a18:	681b      	ldr	r3, [r3, #0]
90025a1a:	9011      	str	r0, [sp, #68]	; 0x44
90025a1c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90025a20:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90025a24:	fb01 2707 	mla	r7, r1, r7, r2
90025a28:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90025a2c:	9307      	str	r3, [sp, #28]
90025a2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025a30:	681b      	ldr	r3, [r3, #0]
90025a32:	9309      	str	r3, [sp, #36]	; 0x24
90025a34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90025a36:	43db      	mvns	r3, r3
90025a38:	b2db      	uxtb	r3, r3
90025a3a:	9308      	str	r3, [sp, #32]
90025a3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025a3e:	2b00      	cmp	r3, #0
90025a40:	dc03      	bgt.n	90025a4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
90025a44:	2b00      	cmp	r3, #0
90025a46:	f340 8205 	ble.w	90025e54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025a4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025a4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025a50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025a54:	1e48      	subs	r0, r1, #1
90025a56:	f102 3cff 	add.w	ip, r2, #4294967295
90025a5a:	2d00      	cmp	r5, #0
90025a5c:	f340 80da 	ble.w	90025c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90025a60:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025a64:	ea4f 4326 	mov.w	r3, r6, asr #16
90025a68:	d406      	bmi.n	90025a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025a6a:	4586      	cmp	lr, r0
90025a6c:	da04      	bge.n	90025a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025a6e:	2b00      	cmp	r3, #0
90025a70:	db02      	blt.n	90025a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025a72:	4563      	cmp	r3, ip
90025a74:	f2c0 80cf 	blt.w	90025c16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025a78:	f11e 0e01 	adds.w	lr, lr, #1
90025a7c:	f100 80c1 	bmi.w	90025c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025a80:	4571      	cmp	r1, lr
90025a82:	f2c0 80be 	blt.w	90025c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025a86:	3301      	adds	r3, #1
90025a88:	f100 80bb 	bmi.w	90025c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025a8c:	429a      	cmp	r2, r3
90025a8e:	f2c0 80b8 	blt.w	90025c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025a92:	46a9      	mov	r9, r5
90025a94:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025a98:	f1b9 0f00 	cmp.w	r9, #0
90025a9c:	f340 80d8 	ble.w	90025c50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025aa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025aa2:	1421      	asrs	r1, r4, #16
90025aa4:	ea4f 4026 	mov.w	r0, r6, asr #16
90025aa8:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025aac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025ab0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025ab4:	f100 8112 	bmi.w	90025cdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025ab8:	f10e 3aff 	add.w	sl, lr, #4294967295
90025abc:	4551      	cmp	r1, sl
90025abe:	f280 810d 	bge.w	90025cdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025ac2:	2800      	cmp	r0, #0
90025ac4:	f2c0 810a 	blt.w	90025cdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025ac8:	f103 3aff 	add.w	sl, r3, #4294967295
90025acc:	4550      	cmp	r0, sl
90025ace:	f280 8105 	bge.w	90025cdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025ad2:	fa0f f38e 	sxth.w	r3, lr
90025ad6:	fb00 1103 	mla	r1, r0, r3, r1
90025ada:	9809      	ldr	r0, [sp, #36]	; 0x24
90025adc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025ae0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90025ae4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025ae8:	f1bc 0f00 	cmp.w	ip, #0
90025aec:	d007      	beq.n	90025afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025aee:	005b      	lsls	r3, r3, #1
90025af0:	eb0a 0003 	add.w	r0, sl, r3
90025af4:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025af8:	930c      	str	r3, [sp, #48]	; 0x30
90025afa:	8843      	ldrh	r3, [r0, #2]
90025afc:	930d      	str	r3, [sp, #52]	; 0x34
90025afe:	ea4f 400e 	mov.w	r0, lr, lsl #16
90025b02:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90025b06:	fb12 f30c 	smulbb	r3, r2, ip
90025b0a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90025b0e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025b12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90025b16:	10db      	asrs	r3, r3, #3
90025b18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90025b1c:	ea40 000e 	orr.w	r0, r0, lr
90025b20:	f1cc 0e10 	rsb	lr, ip, #16
90025b24:	ea4a 0101 	orr.w	r1, sl, r1
90025b28:	9f08      	ldr	r7, [sp, #32]
90025b2a:	ebae 0e02 	sub.w	lr, lr, r2
90025b2e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025b32:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025b36:	4351      	muls	r1, r2
90025b38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90025b3a:	fb0e 1e00 	mla	lr, lr, r0, r1
90025b3e:	990c      	ldr	r1, [sp, #48]	; 0x30
90025b40:	0410      	lsls	r0, r2, #16
90025b42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025b46:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90025b4a:	4310      	orrs	r0, r2
90025b4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90025b4e:	0412      	lsls	r2, r2, #16
90025b50:	fb03 e000 	mla	r0, r3, r0, lr
90025b54:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90025b58:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025b5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025b60:	ea42 020e 	orr.w	r2, r2, lr
90025b64:	fb03 0302 	mla	r3, r3, r2, r0
90025b68:	f8b8 0000 	ldrh.w	r0, [r8]
90025b6c:	0d5a      	lsrs	r2, r3, #21
90025b6e:	095b      	lsrs	r3, r3, #5
90025b70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025b74:	1201      	asrs	r1, r0, #8
90025b76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90025b7a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025b7e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025b82:	00c0      	lsls	r0, r0, #3
90025b84:	4313      	orrs	r3, r2
90025b86:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90025b8a:	fb11 f107 	smulbb	r1, r1, r7
90025b8e:	b2c0      	uxtb	r0, r0
90025b90:	b29b      	uxth	r3, r3
90025b92:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90025b96:	fb10 f007 	smulbb	r0, r0, r7
90025b9a:	fb1e fe07 	smulbb	lr, lr, r7
90025b9e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90025ba2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90025ba6:	fb0c 1c02 	mla	ip, ip, r2, r1
90025baa:	10d9      	asrs	r1, r3, #3
90025bac:	00db      	lsls	r3, r3, #3
90025bae:	fa1f fc8c 	uxth.w	ip, ip
90025bb2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025bb6:	b2db      	uxtb	r3, r3
90025bb8:	fb01 e102 	mla	r1, r1, r2, lr
90025bbc:	fb03 0302 	mla	r3, r3, r2, r0
90025bc0:	b289      	uxth	r1, r1
90025bc2:	b29a      	uxth	r2, r3
90025bc4:	f10c 0301 	add.w	r3, ip, #1
90025bc8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025bcc:	1c53      	adds	r3, r2, #1
90025bce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025bd2:	1c4a      	adds	r2, r1, #1
90025bd4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90025bd8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025bdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025be0:	0949      	lsrs	r1, r1, #5
90025be2:	ea43 030c 	orr.w	r3, r3, ip
90025be6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90025bea:	430b      	orrs	r3, r1
90025bec:	f8a8 3000 	strh.w	r3, [r8]
90025bf0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025bf2:	f108 0802 	add.w	r8, r8, #2
90025bf6:	f109 39ff 	add.w	r9, r9, #4294967295
90025bfa:	441c      	add	r4, r3
90025bfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025bfe:	441e      	add	r6, r3
90025c00:	e74a      	b.n	90025a98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90025c02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025c04:	3d01      	subs	r5, #1
90025c06:	441c      	add	r4, r3
90025c08:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025c0a:	441e      	add	r6, r3
90025c0c:	9b07      	ldr	r3, [sp, #28]
90025c0e:	3302      	adds	r3, #2
90025c10:	9307      	str	r3, [sp, #28]
90025c12:	e722      	b.n	90025a5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025c14:	d022      	beq.n	90025c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90025c16:	1e6b      	subs	r3, r5, #1
90025c18:	981f      	ldr	r0, [sp, #124]	; 0x7c
90025c1a:	fb00 4003 	mla	r0, r0, r3, r4
90025c1e:	1400      	asrs	r0, r0, #16
90025c20:	f53f af37 	bmi.w	90025a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025c24:	3901      	subs	r1, #1
90025c26:	4288      	cmp	r0, r1
90025c28:	f6bf af33 	bge.w	90025a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025c2c:	9920      	ldr	r1, [sp, #128]	; 0x80
90025c2e:	fb01 6303 	mla	r3, r1, r3, r6
90025c32:	141b      	asrs	r3, r3, #16
90025c34:	f53f af2d 	bmi.w	90025a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025c38:	3a01      	subs	r2, #1
90025c3a:	4293      	cmp	r3, r2
90025c3c:	f6bf af29 	bge.w	90025a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90025c40:	46a8      	mov	r8, r5
90025c42:	f8dd 901c 	ldr.w	r9, [sp, #28]
90025c46:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90025c4a:	f1b8 0f00 	cmp.w	r8, #0
90025c4e:	dc60      	bgt.n	90025d12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90025c50:	9b07      	ldr	r3, [sp, #28]
90025c52:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025c56:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025c5a:	9307      	str	r3, [sp, #28]
90025c5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025c5e:	2b00      	cmp	r3, #0
90025c60:	f340 80f8 	ble.w	90025e54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90025c68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025c6a:	ee30 0a04 	vadd.f32	s0, s0, s8
90025c6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025c72:	eef0 6a62 	vmov.f32	s13, s5
90025c76:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025c7a:	ee31 1a05 	vadd.f32	s2, s2, s10
90025c7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025c82:	ee16 4a90 	vmov	r4, s13
90025c86:	eef0 6a43 	vmov.f32	s13, s6
90025c8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025c8e:	ee16 6a90 	vmov	r6, s13
90025c92:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025c96:	ee61 7a27 	vmul.f32	s15, s2, s15
90025c9a:	ee77 2a62 	vsub.f32	s5, s14, s5
90025c9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025ca2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025ca6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025caa:	ee12 2a90 	vmov	r2, s5
90025cae:	eef0 2a47 	vmov.f32	s5, s14
90025cb2:	fb92 f3f3 	sdiv	r3, r2, r3
90025cb6:	ee13 2a10 	vmov	r2, s6
90025cba:	931f      	str	r3, [sp, #124]	; 0x7c
90025cbc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025cbe:	eeb0 3a67 	vmov.f32	s6, s15
90025cc2:	fb92 f3f3 	sdiv	r3, r2, r3
90025cc6:	9320      	str	r3, [sp, #128]	; 0x80
90025cc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025cca:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025ccc:	3b01      	subs	r3, #1
90025cce:	930a      	str	r3, [sp, #40]	; 0x28
90025cd0:	bf08      	it	eq
90025cd2:	4615      	moveq	r5, r2
90025cd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90025cd6:	bf18      	it	ne
90025cd8:	461d      	movne	r5, r3
90025cda:	e6af      	b.n	90025a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025cdc:	f111 0a01 	adds.w	sl, r1, #1
90025ce0:	d486      	bmi.n	90025bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025ce2:	45d6      	cmp	lr, sl
90025ce4:	db84      	blt.n	90025bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025ce6:	f110 0a01 	adds.w	sl, r0, #1
90025cea:	d481      	bmi.n	90025bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025cec:	4553      	cmp	r3, sl
90025cee:	f6ff af7f 	blt.w	90025bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025cf2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90025cf4:	b21b      	sxth	r3, r3
90025cf6:	9101      	str	r1, [sp, #4]
90025cf8:	4641      	mov	r1, r8
90025cfa:	9300      	str	r3, [sp, #0]
90025cfc:	fa0f f38e 	sxth.w	r3, lr
90025d00:	e9cd 0202 	strd	r0, r2, [sp, #8]
90025d04:	e9cd c704 	strd	ip, r7, [sp, #16]
90025d08:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025d0a:	9811      	ldr	r0, [sp, #68]	; 0x44
90025d0c:	f7ff fdb2 	bl	90025874 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90025d10:	e76e      	b.n	90025bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025d12:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025d14:	1430      	asrs	r0, r6, #16
90025d16:	9f09      	ldr	r7, [sp, #36]	; 0x24
90025d18:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025d1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025d20:	1423      	asrs	r3, r4, #16
90025d22:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025d26:	fb01 3000 	mla	r0, r1, r0, r3
90025d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025d2c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90025d30:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90025d34:	8858      	ldrh	r0, [r3, #2]
90025d36:	f1be 0f00 	cmp.w	lr, #0
90025d3a:	d00b      	beq.n	90025d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025d3c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90025d40:	3901      	subs	r1, #1
90025d42:	0049      	lsls	r1, r1, #1
90025d44:	3102      	adds	r1, #2
90025d46:	eb03 0b01 	add.w	fp, r3, r1
90025d4a:	5a5b      	ldrh	r3, [r3, r1]
90025d4c:	930e      	str	r3, [sp, #56]	; 0x38
90025d4e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025d52:	930f      	str	r3, [sp, #60]	; 0x3c
90025d54:	ea4f 410c 	mov.w	r1, ip, lsl #16
90025d58:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025d5c:	fb12 f30e 	smulbb	r3, r2, lr
90025d60:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90025d64:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90025d68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025d6c:	10db      	asrs	r3, r3, #3
90025d6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025d72:	ea41 010c 	orr.w	r1, r1, ip
90025d76:	f1ce 0c10 	rsb	ip, lr, #16
90025d7a:	ea4b 0000 	orr.w	r0, fp, r0
90025d7e:	9f08      	ldr	r7, [sp, #32]
90025d80:	ebac 0c02 	sub.w	ip, ip, r2
90025d84:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025d88:	f108 38ff 	add.w	r8, r8, #4294967295
90025d8c:	4350      	muls	r0, r2
90025d8e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90025d92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90025d94:	fb0c 0c01 	mla	ip, ip, r1, r0
90025d98:	980e      	ldr	r0, [sp, #56]	; 0x38
90025d9a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025d9e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90025da2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90025da4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025da8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90025dac:	0412      	lsls	r2, r2, #16
90025dae:	ea4b 0101 	orr.w	r1, fp, r1
90025db2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90025db6:	fb03 c101 	mla	r1, r3, r1, ip
90025dba:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025dbe:	4302      	orrs	r2, r0
90025dc0:	fb03 1202 	mla	r2, r3, r2, r1
90025dc4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025dc8:	0952      	lsrs	r2, r2, #5
90025dca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90025dce:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90025dd2:	f8b9 2000 	ldrh.w	r2, [r9]
90025dd6:	ea4b 0303 	orr.w	r3, fp, r3
90025dda:	1211      	asrs	r1, r2, #8
90025ddc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025de0:	b29b      	uxth	r3, r3
90025de2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90025de6:	00d2      	lsls	r2, r2, #3
90025de8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90025dec:	fb11 f107 	smulbb	r1, r1, r7
90025df0:	1218      	asrs	r0, r3, #8
90025df2:	fb1c fc07 	smulbb	ip, ip, r7
90025df6:	b2d2      	uxtb	r2, r2
90025df8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90025dfc:	fb12 f207 	smulbb	r2, r2, r7
90025e00:	fb00 100a 	mla	r0, r0, sl, r1
90025e04:	10d9      	asrs	r1, r3, #3
90025e06:	00db      	lsls	r3, r3, #3
90025e08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90025e0c:	b280      	uxth	r0, r0
90025e0e:	b2db      	uxtb	r3, r3
90025e10:	fb01 c10a 	mla	r1, r1, sl, ip
90025e14:	fb03 230a 	mla	r3, r3, sl, r2
90025e18:	1c42      	adds	r2, r0, #1
90025e1a:	b289      	uxth	r1, r1
90025e1c:	b29b      	uxth	r3, r3
90025e1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025e22:	f101 0c01 	add.w	ip, r1, #1
90025e26:	1c5a      	adds	r2, r3, #1
90025e28:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025e2c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90025e30:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025e34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90025e36:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90025e3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90025e3e:	441c      	add	r4, r3
90025e40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90025e44:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025e46:	4310      	orrs	r0, r2
90025e48:	441e      	add	r6, r3
90025e4a:	ea40 000c 	orr.w	r0, r0, ip
90025e4e:	f829 0b02 	strh.w	r0, [r9], #2
90025e52:	e6fa      	b.n	90025c4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90025e54:	b013      	add	sp, #76	; 0x4c
90025e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025e5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90025e5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90025e5e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90025e62:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90025e66:	fb0e 4703 	mla	r7, lr, r3, r4
90025e6a:	f1be 0f00 	cmp.w	lr, #0
90025e6e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90025e72:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90025e76:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025e7a:	8808      	ldrh	r0, [r1, #0]
90025e7c:	db60      	blt.n	90025f40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025e7e:	45f1      	cmp	r9, lr
90025e80:	dd5e      	ble.n	90025f40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025e82:	2c00      	cmp	r4, #0
90025e84:	db5a      	blt.n	90025f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025e86:	42a3      	cmp	r3, r4
90025e88:	dd58      	ble.n	90025f3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025e8a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025e8e:	1c62      	adds	r2, r4, #1
90025e90:	d459      	bmi.n	90025f46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025e92:	4293      	cmp	r3, r2
90025e94:	dd57      	ble.n	90025f46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025e96:	2d00      	cmp	r5, #0
90025e98:	d055      	beq.n	90025f46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025e9a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025e9e:	f11e 0e01 	adds.w	lr, lr, #1
90025ea2:	d454      	bmi.n	90025f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025ea4:	45f1      	cmp	r9, lr
90025ea6:	dd52      	ble.n	90025f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025ea8:	2e00      	cmp	r6, #0
90025eaa:	d050      	beq.n	90025f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025eac:	2c00      	cmp	r4, #0
90025eae:	db4c      	blt.n	90025f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025eb0:	42a3      	cmp	r3, r4
90025eb2:	dd4a      	ble.n	90025f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025eb4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025eb8:	3401      	adds	r4, #1
90025eba:	d405      	bmi.n	90025ec8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025ebc:	42a3      	cmp	r3, r4
90025ebe:	dd03      	ble.n	90025ec8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025ec0:	b115      	cbz	r5, 90025ec8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025ec2:	3301      	adds	r3, #1
90025ec4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025ec8:	fb15 f406 	smulbb	r4, r5, r6
90025ecc:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025ed0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90025ed4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90025ed8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025edc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025ee0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90025ee4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90025ee8:	ea43 0c0c 	orr.w	ip, r3, ip
90025eec:	f1c6 0310 	rsb	r3, r6, #16
90025ef0:	ea4e 0707 	orr.w	r7, lr, r7
90025ef4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025ef8:	1b5b      	subs	r3, r3, r5
90025efa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025efe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025f02:	437d      	muls	r5, r7
90025f04:	fb03 5c0c 	mla	ip, r3, ip, r5
90025f08:	0403      	lsls	r3, r0, #16
90025f0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025f0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025f12:	4318      	orrs	r0, r3
90025f14:	0413      	lsls	r3, r2, #16
90025f16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90025f1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90025f1e:	fb04 c000 	mla	r0, r4, r0, ip
90025f22:	4313      	orrs	r3, r2
90025f24:	fb06 0003 	mla	r0, r6, r3, r0
90025f28:	0d43      	lsrs	r3, r0, #21
90025f2a:	0940      	lsrs	r0, r0, #5
90025f2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90025f30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90025f34:	4318      	orrs	r0, r3
90025f36:	8008      	strh	r0, [r1, #0]
90025f38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90025f3c:	4684      	mov	ip, r0
90025f3e:	e7a6      	b.n	90025e8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90025f40:	4607      	mov	r7, r0
90025f42:	4684      	mov	ip, r0
90025f44:	e7ab      	b.n	90025e9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025f46:	4607      	mov	r7, r0
90025f48:	e7a9      	b.n	90025e9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90025f4a:	4602      	mov	r2, r0
90025f4c:	e7b4      	b.n	90025eb8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90025f4e:	4602      	mov	r2, r0
90025f50:	e7ba      	b.n	90025ec8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90025f52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025f52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025f56:	b08f      	sub	sp, #60	; 0x3c
90025f58:	461d      	mov	r5, r3
90025f5a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90025f5c:	9107      	str	r1, [sp, #28]
90025f5e:	920c      	str	r2, [sp, #48]	; 0x30
90025f60:	6859      	ldr	r1, [r3, #4]
90025f62:	681b      	ldr	r3, [r3, #0]
90025f64:	900d      	str	r0, [sp, #52]	; 0x34
90025f66:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90025f6a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90025f6e:	fb01 2707 	mla	r7, r1, r7, r2
90025f72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90025f76:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025f78:	f8d3 8000 	ldr.w	r8, [r3]
90025f7c:	9b07      	ldr	r3, [sp, #28]
90025f7e:	2b00      	cmp	r3, #0
90025f80:	dc03      	bgt.n	90025f8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90025f84:	2b00      	cmp	r3, #0
90025f86:	f340 8182 	ble.w	9002628e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025f8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025f90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025f94:	1e48      	subs	r0, r1, #1
90025f96:	f102 3cff 	add.w	ip, r2, #4294967295
90025f9a:	2d00      	cmp	r5, #0
90025f9c:	f340 809b 	ble.w	900260d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025fa0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025fa4:	ea4f 4326 	mov.w	r3, r6, asr #16
90025fa8:	d406      	bmi.n	90025fb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025faa:	4586      	cmp	lr, r0
90025fac:	da04      	bge.n	90025fb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025fae:	2b00      	cmp	r3, #0
90025fb0:	db02      	blt.n	90025fb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025fb2:	4563      	cmp	r3, ip
90025fb4:	f2c0 8090 	blt.w	900260d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025fb8:	f11e 0e01 	adds.w	lr, lr, #1
90025fbc:	f100 8084 	bmi.w	900260c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025fc0:	4571      	cmp	r1, lr
90025fc2:	f2c0 8081 	blt.w	900260c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025fc6:	3301      	adds	r3, #1
90025fc8:	d47e      	bmi.n	900260c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025fca:	429a      	cmp	r2, r3
90025fcc:	db7c      	blt.n	900260c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025fce:	46aa      	mov	sl, r5
90025fd0:	46b9      	mov	r9, r7
90025fd2:	f1ba 0f00 	cmp.w	sl, #0
90025fd6:	f340 8099 	ble.w	9002610c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025fda:	9b20      	ldr	r3, [sp, #128]	; 0x80
90025fdc:	1421      	asrs	r1, r4, #16
90025fde:	ea4f 4026 	mov.w	r0, r6, asr #16
90025fe2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025fe6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025fea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025fee:	f100 80d1 	bmi.w	90026194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025ff2:	f10e 3bff 	add.w	fp, lr, #4294967295
90025ff6:	4559      	cmp	r1, fp
90025ff8:	f280 80cc 	bge.w	90026194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025ffc:	2800      	cmp	r0, #0
90025ffe:	f2c0 80c9 	blt.w	90026194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90026002:	f103 3bff 	add.w	fp, r3, #4294967295
90026006:	4558      	cmp	r0, fp
90026008:	f280 80c4 	bge.w	90026194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002600c:	fa0f fe8e 	sxth.w	lr, lr
90026010:	fb00 110e 	mla	r1, r0, lr, r1
90026014:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90026018:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
9002601c:	8841      	ldrh	r1, [r0, #2]
9002601e:	f1bc 0f00 	cmp.w	ip, #0
90026022:	d00b      	beq.n	9002603c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90026024:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90026028:	3b01      	subs	r3, #1
9002602a:	005b      	lsls	r3, r3, #1
9002602c:	3302      	adds	r3, #2
9002602e:	eb00 0e03 	add.w	lr, r0, r3
90026032:	5ac3      	ldrh	r3, [r0, r3]
90026034:	9308      	str	r3, [sp, #32]
90026036:	f8be 3002 	ldrh.w	r3, [lr, #2]
9002603a:	9309      	str	r3, [sp, #36]	; 0x24
9002603c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90026040:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90026044:	fb12 f30c 	smulbb	r3, r2, ip
90026048:	f1cc 0e10 	rsb	lr, ip, #16
9002604c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026050:	10db      	asrs	r3, r3, #3
90026052:	ebae 0e02 	sub.w	lr, lr, r2
90026056:	ea40 000b 	orr.w	r0, r0, fp
9002605a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002605e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90026062:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026066:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002606a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002606e:	ea4b 0101 	orr.w	r1, fp, r1
90026072:	4351      	muls	r1, r2
90026074:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026076:	fb0e 1e00 	mla	lr, lr, r0, r1
9002607a:	0410      	lsls	r0, r2, #16
9002607c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90026080:	9908      	ldr	r1, [sp, #32]
90026082:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026086:	4310      	orrs	r0, r2
90026088:	9a08      	ldr	r2, [sp, #32]
9002608a:	0412      	lsls	r2, r2, #16
9002608c:	fb03 e000 	mla	r0, r3, r0, lr
90026090:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90026094:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90026098:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002609c:	ea42 020e 	orr.w	r2, r2, lr
900260a0:	fb03 0302 	mla	r3, r3, r2, r0
900260a4:	0d5a      	lsrs	r2, r3, #21
900260a6:	095b      	lsrs	r3, r3, #5
900260a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900260ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900260b0:	4313      	orrs	r3, r2
900260b2:	f8a9 3000 	strh.w	r3, [r9]
900260b6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900260b8:	f109 0902 	add.w	r9, r9, #2
900260bc:	f10a 3aff 	add.w	sl, sl, #4294967295
900260c0:	441c      	add	r4, r3
900260c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900260c4:	441e      	add	r6, r3
900260c6:	e784      	b.n	90025fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900260c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900260ca:	3d01      	subs	r5, #1
900260cc:	3702      	adds	r7, #2
900260ce:	441c      	add	r4, r3
900260d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900260d2:	441e      	add	r6, r3
900260d4:	e761      	b.n	90025f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900260d6:	d01d      	beq.n	90026114 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900260d8:	1e6b      	subs	r3, r5, #1
900260da:	981b      	ldr	r0, [sp, #108]	; 0x6c
900260dc:	fb00 4003 	mla	r0, r0, r3, r4
900260e0:	1400      	asrs	r0, r0, #16
900260e2:	f53f af74 	bmi.w	90025fce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900260e6:	3901      	subs	r1, #1
900260e8:	4288      	cmp	r0, r1
900260ea:	f6bf af70 	bge.w	90025fce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900260ee:	991c      	ldr	r1, [sp, #112]	; 0x70
900260f0:	fb01 6303 	mla	r3, r1, r3, r6
900260f4:	141b      	asrs	r3, r3, #16
900260f6:	f53f af6a 	bmi.w	90025fce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900260fa:	3a01      	subs	r2, #1
900260fc:	4293      	cmp	r3, r2
900260fe:	f6bf af66 	bge.w	90025fce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90026102:	46a9      	mov	r9, r5
90026104:	46ba      	mov	sl, r7
90026106:	f1b9 0f00 	cmp.w	r9, #0
9002610a:	dc5b      	bgt.n	900261c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9002610c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90026110:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90026114:	9b07      	ldr	r3, [sp, #28]
90026116:	2b00      	cmp	r3, #0
90026118:	f340 80b9 	ble.w	9002628e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
9002611c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90026120:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026122:	ee30 0a04 	vadd.f32	s0, s0, s8
90026126:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002612a:	eef0 6a62 	vmov.f32	s13, s5
9002612e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026132:	ee31 1a05 	vadd.f32	s2, s2, s10
90026136:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002613a:	ee16 4a90 	vmov	r4, s13
9002613e:	eef0 6a43 	vmov.f32	s13, s6
90026142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026146:	ee16 6a90 	vmov	r6, s13
9002614a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002614e:	ee61 7a27 	vmul.f32	s15, s2, s15
90026152:	ee77 2a62 	vsub.f32	s5, s14, s5
90026156:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002615a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002615e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026162:	ee12 2a90 	vmov	r2, s5
90026166:	eef0 2a47 	vmov.f32	s5, s14
9002616a:	fb92 f3f3 	sdiv	r3, r2, r3
9002616e:	ee13 2a10 	vmov	r2, s6
90026172:	931b      	str	r3, [sp, #108]	; 0x6c
90026174:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026176:	eeb0 3a67 	vmov.f32	s6, s15
9002617a:	fb92 f3f3 	sdiv	r3, r2, r3
9002617e:	931c      	str	r3, [sp, #112]	; 0x70
90026180:	9b07      	ldr	r3, [sp, #28]
90026182:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026184:	3b01      	subs	r3, #1
90026186:	9307      	str	r3, [sp, #28]
90026188:	bf08      	it	eq
9002618a:	4615      	moveq	r5, r2
9002618c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002618e:	bf18      	it	ne
90026190:	461d      	movne	r5, r3
90026192:	e6f3      	b.n	90025f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90026194:	f111 0b01 	adds.w	fp, r1, #1
90026198:	d48d      	bmi.n	900260b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002619a:	45de      	cmp	lr, fp
9002619c:	db8b      	blt.n	900260b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002619e:	f110 0b01 	adds.w	fp, r0, #1
900261a2:	d488      	bmi.n	900260b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900261a4:	455b      	cmp	r3, fp
900261a6:	db86      	blt.n	900260b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900261a8:	b21b      	sxth	r3, r3
900261aa:	e9cd 1001 	strd	r1, r0, [sp, #4]
900261ae:	e9cd 2c03 	strd	r2, ip, [sp, #12]
900261b2:	9300      	str	r3, [sp, #0]
900261b4:	4642      	mov	r2, r8
900261b6:	fa0f f38e 	sxth.w	r3, lr
900261ba:	4649      	mov	r1, r9
900261bc:	980d      	ldr	r0, [sp, #52]	; 0x34
900261be:	f7ff fe4c 	bl	90025e5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
900261c2:	e778      	b.n	900260b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900261c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900261c6:	1420      	asrs	r0, r4, #16
900261c8:	1431      	asrs	r1, r6, #16
900261ca:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900261ce:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900261d2:	f3c4 3203 	ubfx	r2, r4, #12, #4
900261d6:	fb03 0101 	mla	r1, r3, r1, r0
900261da:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900261de:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900261e2:	8841      	ldrh	r1, [r0, #2]
900261e4:	f1be 0f00 	cmp.w	lr, #0
900261e8:	d00b      	beq.n	90026202 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900261ea:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900261ee:	3b01      	subs	r3, #1
900261f0:	005b      	lsls	r3, r3, #1
900261f2:	3302      	adds	r3, #2
900261f4:	eb00 0b03 	add.w	fp, r0, r3
900261f8:	5ac3      	ldrh	r3, [r0, r3]
900261fa:	930a      	str	r3, [sp, #40]	; 0x28
900261fc:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90026200:	930b      	str	r3, [sp, #44]	; 0x2c
90026202:	ea4f 400c 	mov.w	r0, ip, lsl #16
90026206:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002620a:	fb12 f30e 	smulbb	r3, r2, lr
9002620e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90026212:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90026216:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002621a:	10db      	asrs	r3, r3, #3
9002621c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026220:	ea40 000c 	orr.w	r0, r0, ip
90026224:	f1ce 0c10 	rsb	ip, lr, #16
90026228:	ea4b 0101 	orr.w	r1, fp, r1
9002622c:	f109 39ff 	add.w	r9, r9, #4294967295
90026230:	ebac 0c02 	sub.w	ip, ip, r2
90026234:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90026238:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002623c:	4351      	muls	r1, r2
9002623e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90026240:	fb0c 1c00 	mla	ip, ip, r0, r1
90026244:	990a      	ldr	r1, [sp, #40]	; 0x28
90026246:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002624a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002624e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90026250:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90026254:	0412      	lsls	r2, r2, #16
90026256:	ea4b 0000 	orr.w	r0, fp, r0
9002625a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9002625e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90026262:	fb03 c000 	mla	r0, r3, r0, ip
90026266:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002626a:	ea42 0b0b 	orr.w	fp, r2, fp
9002626e:	fb03 000b 	mla	r0, r3, fp, r0
90026272:	0d43      	lsrs	r3, r0, #21
90026274:	0940      	lsrs	r0, r0, #5
90026276:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002627a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002627e:	4318      	orrs	r0, r3
90026280:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90026282:	441c      	add	r4, r3
90026284:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026286:	f82a 0b02 	strh.w	r0, [sl], #2
9002628a:	441e      	add	r6, r3
9002628c:	e73b      	b.n	90026106 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002628e:	b00f      	add	sp, #60	; 0x3c
90026290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90026294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026298:	b085      	sub	sp, #20
9002629a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002629e:	9102      	str	r1, [sp, #8]
900262a0:	2c00      	cmp	r4, #0
900262a2:	fb04 7103 	mla	r1, r4, r3, r7
900262a6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
900262aa:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900262ae:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900262b2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
900262b6:	f2c0 811b 	blt.w	900264f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900262ba:	45a6      	cmp	lr, r4
900262bc:	f340 8118 	ble.w	900264f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900262c0:	2f00      	cmp	r7, #0
900262c2:	f2c0 8113 	blt.w	900264ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900262c6:	42bb      	cmp	r3, r7
900262c8:	f340 8110 	ble.w	900264ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900262cc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900262d0:	1c7a      	adds	r2, r7, #1
900262d2:	f100 8110 	bmi.w	900264f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900262d6:	4293      	cmp	r3, r2
900262d8:	f340 810d 	ble.w	900264f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900262dc:	2e00      	cmp	r6, #0
900262de:	f000 810c 	beq.w	900264fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900262e2:	f8dc 1004 	ldr.w	r1, [ip, #4]
900262e6:	3401      	adds	r4, #1
900262e8:	f100 810b 	bmi.w	90026502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900262ec:	45a6      	cmp	lr, r4
900262ee:	f340 8108 	ble.w	90026502 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900262f2:	2800      	cmp	r0, #0
900262f4:	f000 8108 	beq.w	90026508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900262f8:	2f00      	cmp	r7, #0
900262fa:	f2c0 8100 	blt.w	900264fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900262fe:	42bb      	cmp	r3, r7
90026300:	f340 80fd 	ble.w	900264fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90026304:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026308:	3701      	adds	r7, #1
9002630a:	f100 8100 	bmi.w	9002650e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
9002630e:	42bb      	cmp	r3, r7
90026310:	f340 80fd 	ble.w	9002650e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90026314:	2e00      	cmp	r6, #0
90026316:	f000 80fc 	beq.w	90026512 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
9002631a:	3301      	adds	r3, #1
9002631c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90026320:	b2b6      	uxth	r6, r6
90026322:	b280      	uxth	r0, r0
90026324:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026328:	fb00 fe06 	mul.w	lr, r0, r6
9002632c:	0136      	lsls	r6, r6, #4
9002632e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026332:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026336:	eba6 070e 	sub.w	r7, r6, lr
9002633a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9002633e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026342:	b280      	uxth	r0, r0
90026344:	b2bf      	uxth	r7, r7
90026346:	1a1b      	subs	r3, r3, r0
90026348:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002634c:	fb0a f607 	mul.w	r6, sl, r7
90026350:	b29b      	uxth	r3, r3
90026352:	fb0b 6603 	mla	r6, fp, r3, r6
90026356:	fb00 6609 	mla	r6, r0, r9, r6
9002635a:	fb0e 6608 	mla	r6, lr, r8, r6
9002635e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026362:	9600      	str	r6, [sp, #0]
90026364:	2e00      	cmp	r6, #0
90026366:	f000 80be 	beq.w	900264e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
9002636a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002636e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026372:	9e02      	ldr	r6, [sp, #8]
90026374:	fb0b fc0c 	mul.w	ip, fp, ip
90026378:	fb0b f505 	mul.w	r5, fp, r5
9002637c:	8836      	ldrh	r6, [r6, #0]
9002637e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026382:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026386:	9501      	str	r5, [sp, #4]
90026388:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9002638c:	44dc      	add	ip, fp
9002638e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026392:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026396:	9503      	str	r5, [sp, #12]
90026398:	9d01      	ldr	r5, [sp, #4]
9002639a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9002639e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900263a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900263a6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900263aa:	fb0a fc0c 	mul.w	ip, sl, ip
900263ae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900263b2:	fb0a fa01 	mul.w	sl, sl, r1
900263b6:	ea4f 251c 	mov.w	r5, ip, lsr #8
900263ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900263be:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900263c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900263c6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900263ca:	4465      	add	r5, ip
900263cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900263d0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900263d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900263d8:	fb09 fc0c 	mul.w	ip, r9, ip
900263dc:	0a2d      	lsrs	r5, r5, #8
900263de:	fb09 f904 	mul.w	r9, r9, r4
900263e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900263e6:	ea4f 211c 	mov.w	r1, ip, lsr #8
900263ea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900263ee:	f509 7480 	add.w	r4, r9, #256	; 0x100
900263f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900263f6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900263fa:	437d      	muls	r5, r7
900263fc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026400:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026404:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026408:	4461      	add	r1, ip
9002640a:	fb08 f404 	mul.w	r4, r8, r4
9002640e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026412:	fb08 f802 	mul.w	r8, r8, r2
90026416:	0a09      	lsrs	r1, r1, #8
90026418:	0a22      	lsrs	r2, r4, #8
9002641a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002641e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026422:	fb07 f70a 	mul.w	r7, r7, sl
90026426:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002642a:	4414      	add	r4, r2
9002642c:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026430:	0a24      	lsrs	r4, r4, #8
90026432:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026436:	9a03      	ldr	r2, [sp, #12]
90026438:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002643c:	fb02 5503 	mla	r5, r2, r3, r5
90026440:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026444:	9a00      	ldr	r2, [sp, #0]
90026446:	fb04 540e 	mla	r4, r4, lr, r5
9002644a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9002644e:	1235      	asrs	r5, r6, #8
90026450:	fb01 4100 	mla	r1, r1, r0, r4
90026454:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90026458:	0a09      	lsrs	r1, r1, #8
9002645a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9002645e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026462:	fb03 7101 	mla	r1, r3, r1, r7
90026466:	fb0e 1e08 	mla	lr, lr, r8, r1
9002646a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9002646e:	fb00 e101 	mla	r1, r0, r1, lr
90026472:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90026476:	b287      	uxth	r7, r0
90026478:	0a09      	lsrs	r1, r1, #8
9002647a:	437a      	muls	r2, r7
9002647c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026480:	1c53      	adds	r3, r2, #1
90026482:	4321      	orrs	r1, r4
90026484:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026488:	0c0a      	lsrs	r2, r1, #16
9002648a:	f3c1 2407 	ubfx	r4, r1, #8, #8
9002648e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90026492:	b2c8      	uxtb	r0, r1
90026494:	fb12 f207 	smulbb	r2, r2, r7
90026498:	fb14 f407 	smulbb	r4, r4, r7
9002649c:	b2db      	uxtb	r3, r3
9002649e:	fb10 f007 	smulbb	r0, r0, r7
900264a2:	fb05 2503 	mla	r5, r5, r3, r2
900264a6:	10f2      	asrs	r2, r6, #3
900264a8:	00f6      	lsls	r6, r6, #3
900264aa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900264ae:	b2ad      	uxth	r5, r5
900264b0:	b2f6      	uxtb	r6, r6
900264b2:	fb02 4203 	mla	r2, r2, r3, r4
900264b6:	fb06 0303 	mla	r3, r6, r3, r0
900264ba:	b294      	uxth	r4, r2
900264bc:	b299      	uxth	r1, r3
900264be:	1c6b      	adds	r3, r5, #1
900264c0:	1c62      	adds	r2, r4, #1
900264c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900264c6:	1c4b      	adds	r3, r1, #1
900264c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900264cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900264d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900264d4:	0952      	lsrs	r2, r2, #5
900264d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900264da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900264de:	432b      	orrs	r3, r5
900264e0:	4313      	orrs	r3, r2
900264e2:	9a02      	ldr	r2, [sp, #8]
900264e4:	8013      	strh	r3, [r2, #0]
900264e6:	b005      	add	sp, #20
900264e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900264ec:	2500      	movs	r5, #0
900264ee:	e6ef      	b.n	900262d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900264f0:	2100      	movs	r1, #0
900264f2:	460d      	mov	r5, r1
900264f4:	e6f7      	b.n	900262e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900264f6:	2100      	movs	r1, #0
900264f8:	e6f5      	b.n	900262e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900264fa:	4631      	mov	r1, r6
900264fc:	e6f3      	b.n	900262e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900264fe:	2400      	movs	r4, #0
90026500:	e702      	b.n	90026308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90026502:	2200      	movs	r2, #0
90026504:	4614      	mov	r4, r2
90026506:	e70b      	b.n	90026320 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026508:	4602      	mov	r2, r0
9002650a:	4604      	mov	r4, r0
9002650c:	e708      	b.n	90026320 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002650e:	2200      	movs	r2, #0
90026510:	e706      	b.n	90026320 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90026512:	4632      	mov	r2, r6
90026514:	e704      	b.n	90026320 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90026516 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026516:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002651a:	b09d      	sub	sp, #116	; 0x74
9002651c:	9219      	str	r2, [sp, #100]	; 0x64
9002651e:	9307      	str	r3, [sp, #28]
90026520:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90026522:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90026526:	901b      	str	r0, [sp, #108]	; 0x6c
90026528:	931a      	str	r3, [sp, #104]	; 0x68
9002652a:	6850      	ldr	r0, [r2, #4]
9002652c:	9117      	str	r1, [sp, #92]	; 0x5c
9002652e:	6812      	ldr	r2, [r2, #0]
90026530:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90026534:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90026538:	fb00 1303 	mla	r3, r0, r3, r1
9002653c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026540:	930a      	str	r3, [sp, #40]	; 0x28
90026542:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90026544:	681b      	ldr	r3, [r3, #0]
90026546:	9310      	str	r3, [sp, #64]	; 0x40
90026548:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9002654c:	930b      	str	r3, [sp, #44]	; 0x2c
9002654e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026550:	2b00      	cmp	r3, #0
90026552:	dc03      	bgt.n	9002655c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90026554:	9b19      	ldr	r3, [sp, #100]	; 0x64
90026556:	2b00      	cmp	r3, #0
90026558:	f340 8375 	ble.w	90026c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002655c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002655e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026562:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026566:	1e48      	subs	r0, r1, #1
90026568:	1e57      	subs	r7, r2, #1
9002656a:	9b07      	ldr	r3, [sp, #28]
9002656c:	2b00      	cmp	r3, #0
9002656e:	f340 818e 	ble.w	9002688e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90026572:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026576:	ea4f 4326 	mov.w	r3, r6, asr #16
9002657a:	d406      	bmi.n	9002658a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002657c:	4584      	cmp	ip, r0
9002657e:	da04      	bge.n	9002658a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026580:	2b00      	cmp	r3, #0
90026582:	db02      	blt.n	9002658a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90026584:	42bb      	cmp	r3, r7
90026586:	f2c0 8183 	blt.w	90026890 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002658a:	f11c 0c01 	adds.w	ip, ip, #1
9002658e:	f100 8173 	bmi.w	90026878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026592:	4561      	cmp	r1, ip
90026594:	f2c0 8170 	blt.w	90026878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90026598:	3301      	adds	r3, #1
9002659a:	f100 816d 	bmi.w	90026878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002659e:	429a      	cmp	r2, r3
900265a0:	f2c0 816a 	blt.w	90026878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900265a4:	9b07      	ldr	r3, [sp, #28]
900265a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900265a8:	9318      	str	r3, [sp, #96]	; 0x60
900265aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
900265ac:	2b00      	cmp	r3, #0
900265ae:	f340 818c 	ble.w	900268ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900265b2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
900265b4:	ea4f 4c26 	mov.w	ip, r6, asr #16
900265b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900265ba:	f3c4 3003 	ubfx	r0, r4, #12, #4
900265be:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900265c2:	1422      	asrs	r2, r4, #16
900265c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
900265c8:	689b      	ldr	r3, [r3, #8]
900265ca:	f100 81cd 	bmi.w	90026968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900265ce:	f103 38ff 	add.w	r8, r3, #4294967295
900265d2:	4542      	cmp	r2, r8
900265d4:	f280 81c8 	bge.w	90026968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900265d8:	f1bc 0f00 	cmp.w	ip, #0
900265dc:	f2c0 81c4 	blt.w	90026968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900265e0:	f10e 38ff 	add.w	r8, lr, #4294967295
900265e4:	45c4      	cmp	ip, r8
900265e6:	f280 81bf 	bge.w	90026968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900265ea:	b21b      	sxth	r3, r3
900265ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
900265ee:	fb0c 2203 	mla	r2, ip, r3, r2
900265f2:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900265f6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900265fa:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900265fe:	2800      	cmp	r0, #0
90026600:	f000 81a9 	beq.w	90026956 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90026604:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026608:	950c      	str	r5, [sp, #48]	; 0x30
9002660a:	0e2d      	lsrs	r5, r5, #24
9002660c:	9513      	str	r5, [sp, #76]	; 0x4c
9002660e:	b181      	cbz	r1, 90026632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026610:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026614:	3b01      	subs	r3, #1
90026616:	009b      	lsls	r3, r3, #2
90026618:	3304      	adds	r3, #4
9002661a:	eb08 0c03 	add.w	ip, r8, r3
9002661e:	f858 3003 	ldr.w	r3, [r8, r3]
90026622:	9308      	str	r3, [sp, #32]
90026624:	0e1b      	lsrs	r3, r3, #24
90026626:	9311      	str	r3, [sp, #68]	; 0x44
90026628:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002662c:	930d      	str	r3, [sp, #52]	; 0x34
9002662e:	0e1b      	lsrs	r3, r3, #24
90026630:	9314      	str	r3, [sp, #80]	; 0x50
90026632:	b280      	uxth	r0, r0
90026634:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026636:	b289      	uxth	r1, r1
90026638:	fb00 f901 	mul.w	r9, r0, r1
9002663c:	0100      	lsls	r0, r0, #4
9002663e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90026642:	eba0 0809 	sub.w	r8, r0, r9
90026646:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002664a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002664c:	b289      	uxth	r1, r1
9002664e:	fa1f f888 	uxth.w	r8, r8
90026652:	1a5b      	subs	r3, r3, r1
90026654:	fb08 f000 	mul.w	r0, r8, r0
90026658:	b29b      	uxth	r3, r3
9002665a:	fb03 000e 	mla	r0, r3, lr, r0
9002665e:	fb01 0005 	mla	r0, r1, r5, r0
90026662:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026664:	fb09 0005 	mla	r0, r9, r5, r0
90026668:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002666c:	2800      	cmp	r0, #0
9002666e:	f000 80fa 	beq.w	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026672:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90026676:	d01b      	beq.n	900266b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90026678:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002667c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026680:	fb0e fa0a 	mul.w	sl, lr, sl
90026684:	fb0e fe02 	mul.w	lr, lr, r2
90026688:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002668c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026690:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90026694:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026698:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002669c:	4452      	add	r2, sl
9002669e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266a2:	0a12      	lsrs	r2, r2, #8
900266a4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900266a8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900266ac:	ea42 020c 	orr.w	r2, r2, ip
900266b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900266b2:	2dff      	cmp	r5, #255	; 0xff
900266b4:	d021      	beq.n	900266fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900266b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900266b8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900266bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900266be:	fb05 fb0b 	mul.w	fp, r5, fp
900266c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900266c4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900266c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900266ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900266ce:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900266d2:	fb05 fa0a 	mul.w	sl, r5, sl
900266d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900266da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900266de:	44de      	add	lr, fp
900266e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900266e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900266e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900266f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900266f4:	ea4e 050a 	orr.w	r5, lr, sl
900266f8:	950c      	str	r5, [sp, #48]	; 0x30
900266fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
900266fc:	2dff      	cmp	r5, #255	; 0xff
900266fe:	d021      	beq.n	90026744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90026700:	9d08      	ldr	r5, [sp, #32]
90026702:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026706:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026708:	fb05 fb0b 	mul.w	fp, r5, fp
9002670c:	9d08      	ldr	r5, [sp, #32]
9002670e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026712:	9d11      	ldr	r5, [sp, #68]	; 0x44
90026714:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026718:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002671c:	fb05 fa0a 	mul.w	sl, r5, sl
90026720:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026724:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026728:	44de      	add	lr, fp
9002672a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002672e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026732:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026736:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002673a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002673e:	ea4e 050a 	orr.w	r5, lr, sl
90026742:	9508      	str	r5, [sp, #32]
90026744:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026746:	2dff      	cmp	r5, #255	; 0xff
90026748:	d021      	beq.n	9002678e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
9002674a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002674c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90026750:	9d14      	ldr	r5, [sp, #80]	; 0x50
90026752:	fb05 fb0b 	mul.w	fp, r5, fp
90026756:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90026758:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002675c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002675e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026762:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90026766:	fb05 fa0a 	mul.w	sl, r5, sl
9002676a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002676e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90026772:	44de      	add	lr, fp
90026774:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026778:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002677c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026780:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90026784:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026788:	ea4e 050a 	orr.w	r5, lr, sl
9002678c:	950d      	str	r5, [sp, #52]	; 0x34
9002678e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026790:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90026794:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026798:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002679c:	9d08      	ldr	r5, [sp, #32]
9002679e:	fb08 fc0c 	mul.w	ip, r8, ip
900267a2:	fb03 cc0e 	mla	ip, r3, lr, ip
900267a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900267aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900267ac:	fb01 cc0e 	mla	ip, r1, lr, ip
900267b0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900267b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900267b6:	fb09 cc0e 	mla	ip, r9, lr, ip
900267ba:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900267be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900267c0:	fb08 f80e 	mul.w	r8, r8, lr
900267c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900267c8:	fb03 8202 	mla	r2, r3, r2, r8
900267cc:	9b08      	ldr	r3, [sp, #32]
900267ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900267d2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
900267d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900267d8:	fb01 220a 	mla	r2, r1, sl, r2
900267dc:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
900267e0:	883b      	ldrh	r3, [r7, #0]
900267e2:	fb09 2901 	mla	r9, r9, r1, r2
900267e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900267e8:	1219      	asrs	r1, r3, #8
900267ea:	4342      	muls	r2, r0
900267ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
900267f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900267f4:	1c50      	adds	r0, r2, #1
900267f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900267fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900267fe:	ea4c 0c09 	orr.w	ip, ip, r9
90026802:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90026806:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002680a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002680e:	fa5f fc8c 	uxtb.w	ip, ip
90026812:	fb12 f205 	smulbb	r2, r2, r5
90026816:	b2c0      	uxtb	r0, r0
90026818:	fb1c fc05 	smulbb	ip, ip, r5
9002681c:	fb01 2100 	mla	r1, r1, r0, r2
90026820:	10da      	asrs	r2, r3, #3
90026822:	fb1e fe05 	smulbb	lr, lr, r5
90026826:	00db      	lsls	r3, r3, #3
90026828:	b289      	uxth	r1, r1
9002682a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002682e:	b2db      	uxtb	r3, r3
90026830:	fb02 e200 	mla	r2, r2, r0, lr
90026834:	fb03 c300 	mla	r3, r3, r0, ip
90026838:	b292      	uxth	r2, r2
9002683a:	fa1f fc83 	uxth.w	ip, r3
9002683e:	1c4b      	adds	r3, r1, #1
90026840:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026844:	f10c 0301 	add.w	r3, ip, #1
90026848:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002684c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90026850:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026854:	430b      	orrs	r3, r1
90026856:	1c51      	adds	r1, r2, #1
90026858:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002685c:	0952      	lsrs	r2, r2, #5
9002685e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026862:	4313      	orrs	r3, r2
90026864:	803b      	strh	r3, [r7, #0]
90026866:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026868:	3702      	adds	r7, #2
9002686a:	441c      	add	r4, r3
9002686c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002686e:	441e      	add	r6, r3
90026870:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026872:	3b01      	subs	r3, #1
90026874:	9318      	str	r3, [sp, #96]	; 0x60
90026876:	e698      	b.n	900265aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90026878:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002687a:	441c      	add	r4, r3
9002687c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002687e:	441e      	add	r6, r3
90026880:	9b07      	ldr	r3, [sp, #28]
90026882:	3b01      	subs	r3, #1
90026884:	9307      	str	r3, [sp, #28]
90026886:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90026888:	3302      	adds	r3, #2
9002688a:	930a      	str	r3, [sp, #40]	; 0x28
9002688c:	e66d      	b.n	9002656a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002688e:	d023      	beq.n	900268d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90026890:	9b07      	ldr	r3, [sp, #28]
90026892:	9829      	ldr	r0, [sp, #164]	; 0xa4
90026894:	3b01      	subs	r3, #1
90026896:	fb00 4003 	mla	r0, r0, r3, r4
9002689a:	1400      	asrs	r0, r0, #16
9002689c:	f53f ae82 	bmi.w	900265a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900268a0:	3901      	subs	r1, #1
900268a2:	4288      	cmp	r0, r1
900268a4:	f6bf ae7e 	bge.w	900265a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900268a8:	992a      	ldr	r1, [sp, #168]	; 0xa8
900268aa:	fb01 6303 	mla	r3, r1, r3, r6
900268ae:	141b      	asrs	r3, r3, #16
900268b0:	f53f ae78 	bmi.w	900265a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900268b4:	3a01      	subs	r2, #1
900268b6:	4293      	cmp	r3, r2
900268b8:	f6bf ae74 	bge.w	900265a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900268bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
900268c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900268c4:	f1bb 0f00 	cmp.w	fp, #0
900268c8:	dc6c      	bgt.n	900269a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900268ca:	9b07      	ldr	r3, [sp, #28]
900268cc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900268d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900268d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900268d6:	930a      	str	r3, [sp, #40]	; 0x28
900268d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900268da:	2b00      	cmp	r3, #0
900268dc:	f340 81b3 	ble.w	90026c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900268e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900268e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900268e6:	ee30 0a04 	vadd.f32	s0, s0, s8
900268ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
900268ee:	eef0 6a62 	vmov.f32	s13, s5
900268f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900268f6:	ee31 1a05 	vadd.f32	s2, s2, s10
900268fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900268fe:	ee16 4a90 	vmov	r4, s13
90026902:	eef0 6a43 	vmov.f32	s13, s6
90026906:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002690a:	ee16 6a90 	vmov	r6, s13
9002690e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026912:	ee61 7a27 	vmul.f32	s15, s2, s15
90026916:	ee77 2a62 	vsub.f32	s5, s14, s5
9002691a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002691e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026922:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026926:	ee12 2a90 	vmov	r2, s5
9002692a:	eef0 2a47 	vmov.f32	s5, s14
9002692e:	fb92 f3f3 	sdiv	r3, r2, r3
90026932:	ee13 2a10 	vmov	r2, s6
90026936:	9329      	str	r3, [sp, #164]	; 0xa4
90026938:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002693a:	eeb0 3a67 	vmov.f32	s6, s15
9002693e:	fb92 f3f3 	sdiv	r3, r2, r3
90026942:	932a      	str	r3, [sp, #168]	; 0xa8
90026944:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026946:	9a19      	ldr	r2, [sp, #100]	; 0x64
90026948:	3b01      	subs	r3, #1
9002694a:	9317      	str	r3, [sp, #92]	; 0x5c
9002694c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002694e:	bf08      	it	eq
90026950:	4613      	moveq	r3, r2
90026952:	9307      	str	r3, [sp, #28]
90026954:	e5fb      	b.n	9002654e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90026956:	2900      	cmp	r1, #0
90026958:	f43f ae6b 	beq.w	90026632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002695c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026960:	9308      	str	r3, [sp, #32]
90026962:	0e1b      	lsrs	r3, r3, #24
90026964:	9311      	str	r3, [sp, #68]	; 0x44
90026966:	e664      	b.n	90026632 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90026968:	f112 0801 	adds.w	r8, r2, #1
9002696c:	f53f af7b 	bmi.w	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026970:	4543      	cmp	r3, r8
90026972:	f6ff af78 	blt.w	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026976:	f11c 0801 	adds.w	r8, ip, #1
9002697a:	f53f af74 	bmi.w	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002697e:	45c6      	cmp	lr, r8
90026980:	f6ff af71 	blt.w	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90026984:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90026986:	b21b      	sxth	r3, r3
90026988:	9201      	str	r2, [sp, #4]
9002698a:	fa0f f28e 	sxth.w	r2, lr
9002698e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90026992:	e9cd c002 	strd	ip, r0, [sp, #8]
90026996:	9200      	str	r2, [sp, #0]
90026998:	4639      	mov	r1, r7
9002699a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002699c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002699e:	f7ff fc79 	bl	90026294 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
900269a2:	e760      	b.n	90026866 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900269a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900269a6:	1427      	asrs	r7, r4, #16
900269a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
900269aa:	f3c4 3203 	ubfx	r2, r4, #12, #4
900269ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900269b2:	1433      	asrs	r3, r6, #16
900269b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900269b8:	fb01 7303 	mla	r3, r1, r3, r7
900269bc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900269c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900269c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900269c8:	2a00      	cmp	r2, #0
900269ca:	f000 8133 	beq.w	90026c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
900269ce:	687d      	ldr	r5, [r7, #4]
900269d0:	950e      	str	r5, [sp, #56]	; 0x38
900269d2:	0e2d      	lsrs	r5, r5, #24
900269d4:	9515      	str	r5, [sp, #84]	; 0x54
900269d6:	b178      	cbz	r0, 900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900269d8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900269dc:	3901      	subs	r1, #1
900269de:	0089      	lsls	r1, r1, #2
900269e0:	3104      	adds	r1, #4
900269e2:	eb07 0e01 	add.w	lr, r7, r1
900269e6:	5879      	ldr	r1, [r7, r1]
900269e8:	9109      	str	r1, [sp, #36]	; 0x24
900269ea:	0e09      	lsrs	r1, r1, #24
900269ec:	9112      	str	r1, [sp, #72]	; 0x48
900269ee:	f8de 1004 	ldr.w	r1, [lr, #4]
900269f2:	910f      	str	r1, [sp, #60]	; 0x3c
900269f4:	0e09      	lsrs	r1, r1, #24
900269f6:	9116      	str	r1, [sp, #88]	; 0x58
900269f8:	b292      	uxth	r2, r2
900269fa:	9915      	ldr	r1, [sp, #84]	; 0x54
900269fc:	b280      	uxth	r0, r0
900269fe:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026a00:	fb02 f800 	mul.w	r8, r2, r0
90026a04:	0112      	lsls	r2, r2, #4
90026a06:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026a0a:	eba2 0e08 	sub.w	lr, r2, r8
90026a0e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90026a12:	b280      	uxth	r0, r0
90026a14:	fa1f fe8e 	uxth.w	lr, lr
90026a18:	1a12      	subs	r2, r2, r0
90026a1a:	fb0e f101 	mul.w	r1, lr, r1
90026a1e:	b292      	uxth	r2, r2
90026a20:	fb02 110c 	mla	r1, r2, ip, r1
90026a24:	fb00 1105 	mla	r1, r0, r5, r1
90026a28:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026a2a:	fb08 1105 	mla	r1, r8, r5, r1
90026a2e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90026a32:	2900      	cmp	r1, #0
90026a34:	f000 80f5 	beq.w	90026c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90026a38:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90026a3c:	d019      	beq.n	90026a72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90026a3e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90026a42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026a46:	fb0c fa0a 	mul.w	sl, ip, sl
90026a4a:	fb0c fc03 	mul.w	ip, ip, r3
90026a4e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026a52:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90026a56:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90026a5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90026a5e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026a62:	4453      	add	r3, sl
90026a64:	0a3f      	lsrs	r7, r7, #8
90026a66:	0a1b      	lsrs	r3, r3, #8
90026a68:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90026a6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90026a70:	433b      	orrs	r3, r7
90026a72:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026a74:	2dff      	cmp	r5, #255	; 0xff
90026a76:	d020      	beq.n	90026aba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026a78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026a7a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026a7e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026a80:	436f      	muls	r7, r5
90026a82:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026a84:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026a88:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026a8c:	9d15      	ldr	r5, [sp, #84]	; 0x54
90026a8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026a92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026a96:	fb05 fa0a 	mul.w	sl, r5, sl
90026a9a:	44bc      	add	ip, r7
90026a9c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026aa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026aa4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026aa8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026aac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026ab0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026ab4:	ea4c 050a 	orr.w	r5, ip, sl
90026ab8:	950e      	str	r5, [sp, #56]	; 0x38
90026aba:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026abc:	2dff      	cmp	r5, #255	; 0xff
90026abe:	d020      	beq.n	90026b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026ac0:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026ac2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026ac6:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026ac8:	436f      	muls	r7, r5
90026aca:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026acc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026ad0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026ad4:	9d12      	ldr	r5, [sp, #72]	; 0x48
90026ad6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026ada:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026ade:	fb05 fa0a 	mul.w	sl, r5, sl
90026ae2:	44bc      	add	ip, r7
90026ae4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026ae8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026aec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026af0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026af4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026af8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026afc:	ea4c 050a 	orr.w	r5, ip, sl
90026b00:	9509      	str	r5, [sp, #36]	; 0x24
90026b02:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026b04:	2dff      	cmp	r5, #255	; 0xff
90026b06:	d020      	beq.n	90026b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90026b08:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026b0a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026b0e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026b10:	436f      	muls	r7, r5
90026b12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026b14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026b18:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90026b1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
90026b1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90026b22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026b26:	fb05 fa0a 	mul.w	sl, r5, sl
90026b2a:	44bc      	add	ip, r7
90026b2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90026b30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026b34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026b38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90026b3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026b40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026b44:	ea4c 050a 	orr.w	r5, ip, sl
90026b48:	950f      	str	r5, [sp, #60]	; 0x3c
90026b4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026b4c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90026b50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90026b54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90026b58:	9d09      	ldr	r5, [sp, #36]	; 0x24
90026b5a:	fb0e f707 	mul.w	r7, lr, r7
90026b5e:	fb02 770c 	mla	r7, r2, ip, r7
90026b62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026b66:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026b68:	fb00 770c 	mla	r7, r0, ip, r7
90026b6c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026b70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90026b72:	fb08 770c 	mla	r7, r8, ip, r7
90026b76:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90026b7a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90026b7c:	fb0e fe0c 	mul.w	lr, lr, ip
90026b80:	0a3f      	lsrs	r7, r7, #8
90026b82:	fb02 e303 	mla	r3, r2, r3, lr
90026b86:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026b88:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90026b8c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90026b90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90026b92:	fb00 330a 	mla	r3, r0, sl, r3
90026b96:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90026b9a:	f8b9 0000 	ldrh.w	r0, [r9]
90026b9e:	fb08 3c0c 	mla	ip, r8, ip, r3
90026ba2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90026ba4:	1202      	asrs	r2, r0, #8
90026ba6:	4359      	muls	r1, r3
90026ba8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026bac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90026bb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90026bb4:	1c4b      	adds	r3, r1, #1
90026bb6:	ea47 070c 	orr.w	r7, r7, ip
90026bba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026bbe:	0c3b      	lsrs	r3, r7, #16
90026bc0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90026bc4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026bc8:	b2ff      	uxtb	r7, r7
90026bca:	fb13 f305 	smulbb	r3, r3, r5
90026bce:	b2c9      	uxtb	r1, r1
90026bd0:	fb17 f705 	smulbb	r7, r7, r5
90026bd4:	fb02 3201 	mla	r2, r2, r1, r3
90026bd8:	10c3      	asrs	r3, r0, #3
90026bda:	fb1c fc05 	smulbb	ip, ip, r5
90026bde:	00c0      	lsls	r0, r0, #3
90026be0:	b292      	uxth	r2, r2
90026be2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90026be6:	b2c0      	uxtb	r0, r0
90026be8:	fb03 c301 	mla	r3, r3, r1, ip
90026bec:	fb00 7001 	mla	r0, r0, r1, r7
90026bf0:	1c51      	adds	r1, r2, #1
90026bf2:	b29b      	uxth	r3, r3
90026bf4:	b280      	uxth	r0, r0
90026bf6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026bfa:	f100 0c01 	add.w	ip, r0, #1
90026bfe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90026c02:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90026c06:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90026c0a:	ea4c 0202 	orr.w	r2, ip, r2
90026c0e:	f103 0c01 	add.w	ip, r3, #1
90026c12:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90026c16:	095b      	lsrs	r3, r3, #5
90026c18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026c1c:	431a      	orrs	r2, r3
90026c1e:	f8a9 2000 	strh.w	r2, [r9]
90026c22:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90026c24:	f109 0902 	add.w	r9, r9, #2
90026c28:	f10b 3bff 	add.w	fp, fp, #4294967295
90026c2c:	441c      	add	r4, r3
90026c2e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90026c30:	441e      	add	r6, r3
90026c32:	e647      	b.n	900268c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90026c34:	2800      	cmp	r0, #0
90026c36:	f43f aedf 	beq.w	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026c3a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90026c3e:	9109      	str	r1, [sp, #36]	; 0x24
90026c40:	0e09      	lsrs	r1, r1, #24
90026c42:	9112      	str	r1, [sp, #72]	; 0x48
90026c44:	e6d8      	b.n	900269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90026c46:	b01d      	add	sp, #116	; 0x74
90026c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026c4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90026c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026c50:	b085      	sub	sp, #20
90026c52:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90026c56:	9102      	str	r1, [sp, #8]
90026c58:	2c00      	cmp	r4, #0
90026c5a:	fb04 7103 	mla	r1, r4, r3, r7
90026c5e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90026c62:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90026c66:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026c6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90026c6e:	f2c0 810c 	blt.w	90026e8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026c72:	45a6      	cmp	lr, r4
90026c74:	f340 8109 	ble.w	90026e8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026c78:	2f00      	cmp	r7, #0
90026c7a:	f2c0 8104 	blt.w	90026e86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026c7e:	42bb      	cmp	r3, r7
90026c80:	f340 8101 	ble.w	90026e86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026c84:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026c88:	1c7a      	adds	r2, r7, #1
90026c8a:	f100 8101 	bmi.w	90026e90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026c8e:	4293      	cmp	r3, r2
90026c90:	f340 80fe 	ble.w	90026e90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026c94:	2e00      	cmp	r6, #0
90026c96:	f000 80fd 	beq.w	90026e94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026c9a:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026c9e:	3401      	adds	r4, #1
90026ca0:	f100 80fc 	bmi.w	90026e9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026ca4:	45a6      	cmp	lr, r4
90026ca6:	f340 80f9 	ble.w	90026e9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026caa:	2800      	cmp	r0, #0
90026cac:	f000 80f9 	beq.w	90026ea2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026cb0:	2f00      	cmp	r7, #0
90026cb2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90026cb6:	f2c0 80ef 	blt.w	90026e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026cba:	42bb      	cmp	r3, r7
90026cbc:	f340 80ec 	ble.w	90026e98 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026cc0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90026cc4:	3701      	adds	r7, #1
90026cc6:	f100 80ef 	bmi.w	90026ea8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026cca:	42bb      	cmp	r3, r7
90026ccc:	f340 80ec 	ble.w	90026ea8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026cd0:	2e00      	cmp	r6, #0
90026cd2:	f000 80eb 	beq.w	90026eac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90026cd6:	6852      	ldr	r2, [r2, #4]
90026cd8:	b2b6      	uxth	r6, r6
90026cda:	b280      	uxth	r0, r0
90026cdc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026ce0:	fb00 fe06 	mul.w	lr, r0, r6
90026ce4:	0136      	lsls	r6, r6, #4
90026ce6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026cea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026cee:	eba6 070e 	sub.w	r7, r6, lr
90026cf2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90026cf6:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026cfa:	b280      	uxth	r0, r0
90026cfc:	b2bf      	uxth	r7, r7
90026cfe:	1a1b      	subs	r3, r3, r0
90026d00:	ea4f 6812 	mov.w	r8, r2, lsr #24
90026d04:	fb07 f60a 	mul.w	r6, r7, sl
90026d08:	b29b      	uxth	r3, r3
90026d0a:	fb0b 6603 	mla	r6, fp, r3, r6
90026d0e:	fb00 6609 	mla	r6, r0, r9, r6
90026d12:	fb0e 6608 	mla	r6, lr, r8, r6
90026d16:	f3c6 2607 	ubfx	r6, r6, #8, #8
90026d1a:	9600      	str	r6, [sp, #0]
90026d1c:	2e00      	cmp	r6, #0
90026d1e:	f000 80af 	beq.w	90026e80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90026d22:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90026d26:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90026d2a:	9e02      	ldr	r6, [sp, #8]
90026d2c:	fb0b fc0c 	mul.w	ip, fp, ip
90026d30:	fb0b f505 	mul.w	r5, fp, r5
90026d34:	8836      	ldrh	r6, [r6, #0]
90026d36:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90026d3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026d3e:	9501      	str	r5, [sp, #4]
90026d40:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90026d44:	44dc      	add	ip, fp
90026d46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026d4a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90026d4e:	9503      	str	r5, [sp, #12]
90026d50:	9d01      	ldr	r5, [sp, #4]
90026d52:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90026d56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90026d5a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90026d5e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026d62:	fb0a fc0c 	mul.w	ip, sl, ip
90026d66:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026d6a:	fb0a fa01 	mul.w	sl, sl, r1
90026d6e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90026d72:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026d76:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90026d7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026d7e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90026d82:	4465      	add	r5, ip
90026d84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90026d88:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90026d8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026d90:	fb09 fc0c 	mul.w	ip, r9, ip
90026d94:	0a2d      	lsrs	r5, r5, #8
90026d96:	fb09 f904 	mul.w	r9, r9, r4
90026d9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90026d9e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90026da2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90026da6:	f509 7480 	add.w	r4, r9, #256	; 0x100
90026daa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90026dae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026db2:	437d      	muls	r5, r7
90026db4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026db8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90026dbc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90026dc0:	4461      	add	r1, ip
90026dc2:	fb08 f404 	mul.w	r4, r8, r4
90026dc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026dca:	fb08 f802 	mul.w	r8, r8, r2
90026dce:	0a09      	lsrs	r1, r1, #8
90026dd0:	0a22      	lsrs	r2, r4, #8
90026dd2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90026dd6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90026dda:	fb07 f70a 	mul.w	r7, r7, sl
90026dde:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90026de2:	4414      	add	r4, r2
90026de4:	f508 7280 	add.w	r2, r8, #256	; 0x100
90026de8:	0a24      	lsrs	r4, r4, #8
90026dea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026dee:	9a03      	ldr	r2, [sp, #12]
90026df0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90026df4:	fb02 5503 	mla	r5, r2, r3, r5
90026df8:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026dfc:	fb04 540e 	mla	r4, r4, lr, r5
90026e00:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90026e04:	fb01 4100 	mla	r1, r1, r0, r4
90026e08:	0a09      	lsrs	r1, r1, #8
90026e0a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90026e0e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90026e12:	fb03 7101 	mla	r1, r3, r1, r7
90026e16:	9b00      	ldr	r3, [sp, #0]
90026e18:	fb0e 1e08 	mla	lr, lr, r8, r1
90026e1c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90026e20:	43da      	mvns	r2, r3
90026e22:	1233      	asrs	r3, r6, #8
90026e24:	fb00 e101 	mla	r1, r0, r1, lr
90026e28:	10f0      	asrs	r0, r6, #3
90026e2a:	b2d2      	uxtb	r2, r2
90026e2c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90026e30:	0a09      	lsrs	r1, r1, #8
90026e32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026e36:	00f6      	lsls	r6, r6, #3
90026e38:	4353      	muls	r3, r2
90026e3a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90026e3e:	4350      	muls	r0, r2
90026e40:	b2f6      	uxtb	r6, r6
90026e42:	4321      	orrs	r1, r4
90026e44:	4356      	muls	r6, r2
90026e46:	1c5a      	adds	r2, r3, #1
90026e48:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90026e4c:	0c0b      	lsrs	r3, r1, #16
90026e4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026e52:	1c42      	adds	r2, r0, #1
90026e54:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026e58:	0a0a      	lsrs	r2, r1, #8
90026e5a:	021b      	lsls	r3, r3, #8
90026e5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026e60:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90026e64:	00d2      	lsls	r2, r2, #3
90026e66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026e6a:	4313      	orrs	r3, r2
90026e6c:	1c72      	adds	r2, r6, #1
90026e6e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90026e72:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90026e76:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026e7a:	4319      	orrs	r1, r3
90026e7c:	9b02      	ldr	r3, [sp, #8]
90026e7e:	8019      	strh	r1, [r3, #0]
90026e80:	b005      	add	sp, #20
90026e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026e86:	2500      	movs	r5, #0
90026e88:	e6fe      	b.n	90026c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026e8a:	2100      	movs	r1, #0
90026e8c:	460d      	mov	r5, r1
90026e8e:	e706      	b.n	90026c9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026e90:	2100      	movs	r1, #0
90026e92:	e704      	b.n	90026c9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026e94:	4631      	mov	r1, r6
90026e96:	e702      	b.n	90026c9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026e98:	2400      	movs	r4, #0
90026e9a:	e713      	b.n	90026cc4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026e9c:	2200      	movs	r2, #0
90026e9e:	4614      	mov	r4, r2
90026ea0:	e71a      	b.n	90026cd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026ea2:	4602      	mov	r2, r0
90026ea4:	4604      	mov	r4, r0
90026ea6:	e717      	b.n	90026cd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026ea8:	2200      	movs	r2, #0
90026eaa:	e715      	b.n	90026cd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026eac:	4632      	mov	r2, r6
90026eae:	e713      	b.n	90026cd8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026eb4:	b09b      	sub	sp, #108	; 0x6c
90026eb6:	9218      	str	r2, [sp, #96]	; 0x60
90026eb8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90026eba:	9019      	str	r0, [sp, #100]	; 0x64
90026ebc:	9116      	str	r1, [sp, #88]	; 0x58
90026ebe:	6850      	ldr	r0, [r2, #4]
90026ec0:	9307      	str	r3, [sp, #28]
90026ec2:	6812      	ldr	r2, [r2, #0]
90026ec4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90026ec8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90026ecc:	fb00 1303 	mla	r3, r0, r3, r1
90026ed0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90026ed4:	930a      	str	r3, [sp, #40]	; 0x28
90026ed6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026ed8:	681b      	ldr	r3, [r3, #0]
90026eda:	930f      	str	r3, [sp, #60]	; 0x3c
90026edc:	9b16      	ldr	r3, [sp, #88]	; 0x58
90026ede:	2b00      	cmp	r3, #0
90026ee0:	dc03      	bgt.n	90026eea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026ee2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026ee4:	2b00      	cmp	r3, #0
90026ee6:	f340 8387 	ble.w	900275f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026eea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026eec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026ef0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026ef4:	1e48      	subs	r0, r1, #1
90026ef6:	1e57      	subs	r7, r2, #1
90026ef8:	9b07      	ldr	r3, [sp, #28]
90026efa:	2b00      	cmp	r3, #0
90026efc:	f340 8166 	ble.w	900271cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026f00:	ea5f 4c24 	movs.w	ip, r4, asr #16
90026f04:	ea4f 4326 	mov.w	r3, r6, asr #16
90026f08:	d406      	bmi.n	90026f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026f0a:	4584      	cmp	ip, r0
90026f0c:	da04      	bge.n	90026f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026f0e:	2b00      	cmp	r3, #0
90026f10:	db02      	blt.n	90026f18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90026f12:	42bb      	cmp	r3, r7
90026f14:	f2c0 815b 	blt.w	900271ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90026f18:	f11c 0c01 	adds.w	ip, ip, #1
90026f1c:	f100 814b 	bmi.w	900271b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026f20:	4561      	cmp	r1, ip
90026f22:	f2c0 8148 	blt.w	900271b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026f26:	3301      	adds	r3, #1
90026f28:	f100 8145 	bmi.w	900271b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026f2c:	429a      	cmp	r2, r3
90026f2e:	f2c0 8142 	blt.w	900271b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90026f32:	9b07      	ldr	r3, [sp, #28]
90026f34:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90026f36:	9317      	str	r3, [sp, #92]	; 0x5c
90026f38:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90026f3a:	2b00      	cmp	r3, #0
90026f3c:	f340 8165 	ble.w	9002720a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90026f40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90026f42:	ea4f 4c26 	mov.w	ip, r6, asr #16
90026f46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90026f48:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026f4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90026f50:	1422      	asrs	r2, r4, #16
90026f52:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026f56:	689b      	ldr	r3, [r3, #8]
90026f58:	f100 81d5 	bmi.w	90027306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026f5c:	f103 38ff 	add.w	r8, r3, #4294967295
90026f60:	4542      	cmp	r2, r8
90026f62:	f280 81d0 	bge.w	90027306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026f66:	f1bc 0f00 	cmp.w	ip, #0
90026f6a:	f2c0 81cc 	blt.w	90027306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026f6e:	f10e 38ff 	add.w	r8, lr, #4294967295
90026f72:	45c4      	cmp	ip, r8
90026f74:	f280 81c7 	bge.w	90027306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026f78:	b21b      	sxth	r3, r3
90026f7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90026f7c:	fb0c 2203 	mla	r2, ip, r3, r2
90026f80:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90026f84:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026f88:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026f8c:	2900      	cmp	r1, #0
90026f8e:	f000 8182 	beq.w	90027296 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026f92:	f8d8 5004 	ldr.w	r5, [r8, #4]
90026f96:	950b      	str	r5, [sp, #44]	; 0x2c
90026f98:	0e2d      	lsrs	r5, r5, #24
90026f9a:	9512      	str	r5, [sp, #72]	; 0x48
90026f9c:	b180      	cbz	r0, 90026fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026f9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90026fa2:	3b01      	subs	r3, #1
90026fa4:	009b      	lsls	r3, r3, #2
90026fa6:	3304      	adds	r3, #4
90026fa8:	eb08 0c03 	add.w	ip, r8, r3
90026fac:	f858 3003 	ldr.w	r3, [r8, r3]
90026fb0:	9308      	str	r3, [sp, #32]
90026fb2:	0e1b      	lsrs	r3, r3, #24
90026fb4:	9310      	str	r3, [sp, #64]	; 0x40
90026fb6:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026fba:	930c      	str	r3, [sp, #48]	; 0x30
90026fbc:	0e1b      	lsrs	r3, r3, #24
90026fbe:	9313      	str	r3, [sp, #76]	; 0x4c
90026fc0:	b289      	uxth	r1, r1
90026fc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90026fc4:	b280      	uxth	r0, r0
90026fc6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90026fc8:	fb01 f900 	mul.w	r9, r1, r0
90026fcc:	0109      	lsls	r1, r1, #4
90026fce:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90026fd2:	eba1 0809 	sub.w	r8, r1, r9
90026fd6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90026fda:	b280      	uxth	r0, r0
90026fdc:	fa1f f888 	uxth.w	r8, r8
90026fe0:	1a09      	subs	r1, r1, r0
90026fe2:	fb08 f303 	mul.w	r3, r8, r3
90026fe6:	b289      	uxth	r1, r1
90026fe8:	fb01 330e 	mla	r3, r1, lr, r3
90026fec:	fb00 3305 	mla	r3, r0, r5, r3
90026ff0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90026ff2:	fb09 3305 	mla	r3, r9, r5, r3
90026ff6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026ffa:	2b00      	cmp	r3, #0
90026ffc:	f000 80d2 	beq.w	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027000:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90027004:	d01b      	beq.n	9002703e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90027006:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002700a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002700e:	fb0e fa0a 	mul.w	sl, lr, sl
90027012:	fb0e fe02 	mul.w	lr, lr, r2
90027016:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002701a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9002701e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90027022:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90027026:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002702a:	4452      	add	r2, sl
9002702c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027030:	0a12      	lsrs	r2, r2, #8
90027032:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027036:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002703a:	ea42 020c 	orr.w	r2, r2, ip
9002703e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027040:	2dff      	cmp	r5, #255	; 0xff
90027042:	d021      	beq.n	90027088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90027044:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027046:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002704a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002704c:	fb05 fb0b 	mul.w	fp, r5, fp
90027050:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027052:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027056:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027058:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002705c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90027060:	fb05 fa0a 	mul.w	sl, r5, sl
90027064:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027068:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002706c:	44de      	add	lr, fp
9002706e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027072:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027076:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002707a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002707e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027082:	ea4e 050a 	orr.w	r5, lr, sl
90027086:	950b      	str	r5, [sp, #44]	; 0x2c
90027088:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002708a:	2dff      	cmp	r5, #255	; 0xff
9002708c:	d021      	beq.n	900270d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002708e:	9d08      	ldr	r5, [sp, #32]
90027090:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90027094:	9d10      	ldr	r5, [sp, #64]	; 0x40
90027096:	fb05 fb0b 	mul.w	fp, r5, fp
9002709a:	9d08      	ldr	r5, [sp, #32]
9002709c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900270a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
900270a2:	fb05 fa0e 	mul.w	sl, r5, lr
900270a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900270aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900270ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900270b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900270b6:	44de      	add	lr, fp
900270b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900270bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900270c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900270c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900270c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900270cc:	ea4e 050a 	orr.w	r5, lr, sl
900270d0:	9508      	str	r5, [sp, #32]
900270d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900270d4:	2dff      	cmp	r5, #255	; 0xff
900270d6:	d021      	beq.n	9002711c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
900270d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900270da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900270de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900270e0:	fb05 fb0b 	mul.w	fp, r5, fp
900270e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900270e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900270ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900270ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900270f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900270f4:	fb05 fa0a 	mul.w	sl, r5, sl
900270f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900270fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90027100:	44de      	add	lr, fp
90027102:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90027106:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002710a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002710e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90027112:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027116:	ea4e 050a 	orr.w	r5, lr, sl
9002711a:	950c      	str	r5, [sp, #48]	; 0x30
9002711c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002711e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90027122:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90027126:	2bff      	cmp	r3, #255	; 0xff
90027128:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002712c:	9d08      	ldr	r5, [sp, #32]
9002712e:	fb08 fc0c 	mul.w	ip, r8, ip
90027132:	fb01 cc0e 	mla	ip, r1, lr, ip
90027136:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002713a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002713c:	fb00 cc0e 	mla	ip, r0, lr, ip
90027140:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90027144:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90027146:	fb09 cc0e 	mla	ip, r9, lr, ip
9002714a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002714e:	fb08 f80e 	mul.w	r8, r8, lr
90027152:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027156:	fb01 8202 	mla	r2, r1, r2, r8
9002715a:	9908      	ldr	r1, [sp, #32]
9002715c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027160:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90027164:	990c      	ldr	r1, [sp, #48]	; 0x30
90027166:	fb00 220a 	mla	r2, r0, sl, r2
9002716a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9002716e:	fb09 2900 	mla	r9, r9, r0, r2
90027172:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027176:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002717a:	ea4c 0c09 	orr.w	ip, ip, r9
9002717e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90027182:	f040 8091 	bne.w	900272a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90027186:	ea4f 135c 	mov.w	r3, ip, lsr #5
9002718a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002718e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027192:	f022 0207 	bic.w	r2, r2, #7
90027196:	431a      	orrs	r2, r3
90027198:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002719c:	ea4c 0c02 	orr.w	ip, ip, r2
900271a0:	f8a7 c000 	strh.w	ip, [r7]
900271a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900271a6:	3702      	adds	r7, #2
900271a8:	441c      	add	r4, r3
900271aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900271ac:	441e      	add	r6, r3
900271ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900271b0:	3b01      	subs	r3, #1
900271b2:	9317      	str	r3, [sp, #92]	; 0x5c
900271b4:	e6c0      	b.n	90026f38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
900271b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900271b8:	441c      	add	r4, r3
900271ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900271bc:	441e      	add	r6, r3
900271be:	9b07      	ldr	r3, [sp, #28]
900271c0:	3b01      	subs	r3, #1
900271c2:	9307      	str	r3, [sp, #28]
900271c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900271c6:	3302      	adds	r3, #2
900271c8:	930a      	str	r3, [sp, #40]	; 0x28
900271ca:	e695      	b.n	90026ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900271cc:	d024      	beq.n	90027218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
900271ce:	9b07      	ldr	r3, [sp, #28]
900271d0:	9827      	ldr	r0, [sp, #156]	; 0x9c
900271d2:	3b01      	subs	r3, #1
900271d4:	fb00 4003 	mla	r0, r0, r3, r4
900271d8:	1400      	asrs	r0, r0, #16
900271da:	f53f aeaa 	bmi.w	90026f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900271de:	3901      	subs	r1, #1
900271e0:	4288      	cmp	r0, r1
900271e2:	f6bf aea6 	bge.w	90026f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900271e6:	9928      	ldr	r1, [sp, #160]	; 0xa0
900271e8:	fb01 6303 	mla	r3, r1, r3, r6
900271ec:	141b      	asrs	r3, r3, #16
900271ee:	f53f aea0 	bmi.w	90026f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900271f2:	3a01      	subs	r2, #1
900271f4:	4293      	cmp	r3, r2
900271f6:	f6bf ae9c 	bge.w	90026f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900271fa:	f8dd b01c 	ldr.w	fp, [sp, #28]
900271fe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90027202:	f1bb 0f00 	cmp.w	fp, #0
90027206:	f300 809a 	bgt.w	9002733e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002720a:	9b07      	ldr	r3, [sp, #28]
9002720c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027210:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90027212:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027216:	930a      	str	r3, [sp, #40]	; 0x28
90027218:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002721a:	2b00      	cmp	r3, #0
9002721c:	f340 81ec 	ble.w	900275f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90027220:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027224:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027226:	ee30 0a04 	vadd.f32	s0, s0, s8
9002722a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002722e:	eef0 6a62 	vmov.f32	s13, s5
90027232:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027236:	ee31 1a05 	vadd.f32	s2, s2, s10
9002723a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002723e:	ee16 4a90 	vmov	r4, s13
90027242:	eef0 6a43 	vmov.f32	s13, s6
90027246:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002724a:	ee16 6a90 	vmov	r6, s13
9002724e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027252:	ee61 7a27 	vmul.f32	s15, s2, s15
90027256:	ee77 2a62 	vsub.f32	s5, s14, s5
9002725a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002725e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027262:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027266:	ee12 2a90 	vmov	r2, s5
9002726a:	eef0 2a47 	vmov.f32	s5, s14
9002726e:	fb92 f3f3 	sdiv	r3, r2, r3
90027272:	ee13 2a10 	vmov	r2, s6
90027276:	9327      	str	r3, [sp, #156]	; 0x9c
90027278:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002727a:	eeb0 3a67 	vmov.f32	s6, s15
9002727e:	fb92 f3f3 	sdiv	r3, r2, r3
90027282:	9328      	str	r3, [sp, #160]	; 0xa0
90027284:	9b16      	ldr	r3, [sp, #88]	; 0x58
90027286:	9a18      	ldr	r2, [sp, #96]	; 0x60
90027288:	3b01      	subs	r3, #1
9002728a:	9316      	str	r3, [sp, #88]	; 0x58
9002728c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002728e:	bf08      	it	eq
90027290:	4613      	moveq	r3, r2
90027292:	9307      	str	r3, [sp, #28]
90027294:	e622      	b.n	90026edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90027296:	2800      	cmp	r0, #0
90027298:	f43f ae92 	beq.w	90026fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002729c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900272a0:	9308      	str	r3, [sp, #32]
900272a2:	0e1b      	lsrs	r3, r3, #24
900272a4:	9310      	str	r3, [sp, #64]	; 0x40
900272a6:	e68b      	b.n	90026fc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
900272a8:	8839      	ldrh	r1, [r7, #0]
900272aa:	43db      	mvns	r3, r3
900272ac:	4dd4      	ldr	r5, [pc, #848]	; (90027600 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900272ae:	ea4f 2e21 	mov.w	lr, r1, asr #8
900272b2:	fa5f f883 	uxtb.w	r8, r3
900272b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
900272ba:	10c8      	asrs	r0, r1, #3
900272bc:	00cb      	lsls	r3, r1, #3
900272be:	fb0e fe08 	mul.w	lr, lr, r8
900272c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900272c6:	b2db      	uxtb	r3, r3
900272c8:	f10e 0101 	add.w	r1, lr, #1
900272cc:	fb00 f008 	mul.w	r0, r0, r8
900272d0:	fb03 f308 	mul.w	r3, r3, r8
900272d4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900272d8:	ea4f 411c 	mov.w	r1, ip, lsr #16
900272dc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900272e0:	f100 0e01 	add.w	lr, r0, #1
900272e4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900272e8:	b2c9      	uxtb	r1, r1
900272ea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900272ee:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900272f2:	00d2      	lsls	r2, r2, #3
900272f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900272f8:	430a      	orrs	r2, r1
900272fa:	1c59      	adds	r1, r3, #1
900272fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027300:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90027304:	e748      	b.n	90027198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90027306:	f112 0801 	adds.w	r8, r2, #1
9002730a:	f53f af4b 	bmi.w	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002730e:	4543      	cmp	r3, r8
90027310:	f6ff af48 	blt.w	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027314:	f11c 0801 	adds.w	r8, ip, #1
90027318:	f53f af44 	bmi.w	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002731c:	45c6      	cmp	lr, r8
9002731e:	f6ff af41 	blt.w	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90027322:	b21b      	sxth	r3, r3
90027324:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90027328:	fa0f f28e 	sxth.w	r2, lr
9002732c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90027330:	9200      	str	r2, [sp, #0]
90027332:	4639      	mov	r1, r7
90027334:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027336:	9819      	ldr	r0, [sp, #100]	; 0x64
90027338:	f7ff fc88 	bl	90026c4c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
9002733c:	e732      	b.n	900271a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002733e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90027340:	1421      	asrs	r1, r4, #16
90027342:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027344:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027348:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
9002734c:	1433      	asrs	r3, r6, #16
9002734e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027352:	fb07 1303 	mla	r3, r7, r3, r1
90027356:	990f      	ldr	r1, [sp, #60]	; 0x3c
90027358:	eb01 0183 	add.w	r1, r1, r3, lsl #2
9002735c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90027360:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90027364:	2a00      	cmp	r2, #0
90027366:	f000 8108 	beq.w	9002757a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
9002736a:	684d      	ldr	r5, [r1, #4]
9002736c:	950d      	str	r5, [sp, #52]	; 0x34
9002736e:	0e2d      	lsrs	r5, r5, #24
90027370:	9514      	str	r5, [sp, #80]	; 0x50
90027372:	b178      	cbz	r0, 90027394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027374:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90027378:	3f01      	subs	r7, #1
9002737a:	00bf      	lsls	r7, r7, #2
9002737c:	3704      	adds	r7, #4
9002737e:	eb01 0e07 	add.w	lr, r1, r7
90027382:	59c9      	ldr	r1, [r1, r7]
90027384:	9109      	str	r1, [sp, #36]	; 0x24
90027386:	0e09      	lsrs	r1, r1, #24
90027388:	9111      	str	r1, [sp, #68]	; 0x44
9002738a:	f8de 1004 	ldr.w	r1, [lr, #4]
9002738e:	910e      	str	r1, [sp, #56]	; 0x38
90027390:	0e09      	lsrs	r1, r1, #24
90027392:	9115      	str	r1, [sp, #84]	; 0x54
90027394:	b292      	uxth	r2, r2
90027396:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027398:	b280      	uxth	r0, r0
9002739a:	fb02 f900 	mul.w	r9, r2, r0
9002739e:	0112      	lsls	r2, r2, #4
900273a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900273a4:	eba2 0e09 	sub.w	lr, r2, r9
900273a8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
900273ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
900273ae:	b280      	uxth	r0, r0
900273b0:	fa1f fe8e 	uxth.w	lr, lr
900273b4:	1a09      	subs	r1, r1, r0
900273b6:	fb0e f202 	mul.w	r2, lr, r2
900273ba:	b289      	uxth	r1, r1
900273bc:	fb01 220c 	mla	r2, r1, ip, r2
900273c0:	fb00 2205 	mla	r2, r0, r5, r2
900273c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
900273c6:	fb09 2205 	mla	r2, r9, r5, r2
900273ca:	f3c2 2207 	ubfx	r2, r2, #8, #8
900273ce:	2a00      	cmp	r2, #0
900273d0:	f000 80ca 	beq.w	90027568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900273d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900273d8:	d019      	beq.n	9002740e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900273da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900273de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900273e2:	fb0c fa0a 	mul.w	sl, ip, sl
900273e6:	fb0c fc03 	mul.w	ip, ip, r3
900273ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
900273ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900273f2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900273f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900273fa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900273fe:	4453      	add	r3, sl
90027400:	0a3f      	lsrs	r7, r7, #8
90027402:	0a1b      	lsrs	r3, r3, #8
90027404:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90027408:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002740c:	433b      	orrs	r3, r7
9002740e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90027410:	2dff      	cmp	r5, #255	; 0xff
90027412:	d020      	beq.n	90027456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90027414:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027416:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002741a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002741c:	436f      	muls	r7, r5
9002741e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027420:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027424:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90027428:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002742a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002742e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027432:	fb05 fa0a 	mul.w	sl, r5, sl
90027436:	44bc      	add	ip, r7
90027438:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002743c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027440:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027444:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002744c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027450:	ea4c 050a 	orr.w	r5, ip, sl
90027454:	950d      	str	r5, [sp, #52]	; 0x34
90027456:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027458:	2dff      	cmp	r5, #255	; 0xff
9002745a:	d020      	beq.n	9002749e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
9002745c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002745e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90027462:	9d11      	ldr	r5, [sp, #68]	; 0x44
90027464:	436f      	muls	r7, r5
90027466:	9d09      	ldr	r5, [sp, #36]	; 0x24
90027468:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002746c:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002746e:	fb05 fa0c 	mul.w	sl, r5, ip
90027472:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90027476:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002747a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002747e:	44bc      	add	ip, r7
90027480:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90027484:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90027488:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002748c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90027490:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90027494:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90027498:	ea4c 050a 	orr.w	r5, ip, sl
9002749c:	9509      	str	r5, [sp, #36]	; 0x24
9002749e:	9d15      	ldr	r5, [sp, #84]	; 0x54
900274a0:	2dff      	cmp	r5, #255	; 0xff
900274a2:	d020      	beq.n	900274e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
900274a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900274a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900274aa:	9d15      	ldr	r5, [sp, #84]	; 0x54
900274ac:	436f      	muls	r7, r5
900274ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900274b0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900274b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900274b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
900274ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900274be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900274c2:	fb05 fa0a 	mul.w	sl, r5, sl
900274c6:	44bc      	add	ip, r7
900274c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900274cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900274d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900274d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900274d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900274dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900274e0:	ea4c 050a 	orr.w	r5, ip, sl
900274e4:	950e      	str	r5, [sp, #56]	; 0x38
900274e6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900274e8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900274ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900274f0:	2aff      	cmp	r2, #255	; 0xff
900274f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900274f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
900274f8:	fb0e f707 	mul.w	r7, lr, r7
900274fc:	fb01 770c 	mla	r7, r1, ip, r7
90027500:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90027504:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027506:	fb00 770c 	mla	r7, r0, ip, r7
9002750a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002750e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90027510:	fb09 770c 	mla	r7, r9, ip, r7
90027514:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90027518:	fb0e fe0c 	mul.w	lr, lr, ip
9002751c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90027520:	fb01 e303 	mla	r3, r1, r3, lr
90027524:	9909      	ldr	r1, [sp, #36]	; 0x24
90027526:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002752a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002752e:	990e      	ldr	r1, [sp, #56]	; 0x38
90027530:	fb00 330a 	mla	r3, r0, sl, r3
90027534:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90027538:	fb09 3c0c 	mla	ip, r9, ip, r3
9002753c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027540:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90027544:	ea47 070c 	orr.w	r7, r7, ip
90027548:	ea4f 2317 	mov.w	r3, r7, lsr #8
9002754c:	d11e      	bne.n	9002758c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002754e:	097a      	lsrs	r2, r7, #5
90027550:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90027554:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90027558:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002755c:	f023 0307 	bic.w	r3, r3, #7
90027560:	4313      	orrs	r3, r2
90027562:	431f      	orrs	r7, r3
90027564:	f8a8 7000 	strh.w	r7, [r8]
90027568:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002756a:	f108 0802 	add.w	r8, r8, #2
9002756e:	f10b 3bff 	add.w	fp, fp, #4294967295
90027572:	441c      	add	r4, r3
90027574:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027576:	441e      	add	r6, r3
90027578:	e643      	b.n	90027202 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002757a:	2800      	cmp	r0, #0
9002757c:	f43f af0a 	beq.w	90027394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90027580:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90027584:	9109      	str	r1, [sp, #36]	; 0x24
90027586:	0e09      	lsrs	r1, r1, #24
90027588:	9111      	str	r1, [sp, #68]	; 0x44
9002758a:	e703      	b.n	90027394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002758c:	f8b8 1000 	ldrh.w	r1, [r8]
90027590:	43d2      	mvns	r2, r2
90027592:	ea4f 2c21 	mov.w	ip, r1, asr #8
90027596:	fa5f fe82 	uxtb.w	lr, r2
9002759a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002759e:	10c8      	asrs	r0, r1, #3
900275a0:	00ca      	lsls	r2, r1, #3
900275a2:	fb0c fc0e 	mul.w	ip, ip, lr
900275a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900275aa:	b2d2      	uxtb	r2, r2
900275ac:	f10c 0101 	add.w	r1, ip, #1
900275b0:	fb00 f00e 	mul.w	r0, r0, lr
900275b4:	fb02 f20e 	mul.w	r2, r2, lr
900275b8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900275bc:	0c39      	lsrs	r1, r7, #16
900275be:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900275c2:	490f      	ldr	r1, [pc, #60]	; (90027600 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900275c4:	fa5f fc8c 	uxtb.w	ip, ip
900275c8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900275cc:	1c41      	adds	r1, r0, #1
900275ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900275d2:	1c51      	adds	r1, r2, #1
900275d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900275d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900275dc:	00c0      	lsls	r0, r0, #3
900275de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900275e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900275e6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900275ea:	ea4c 0c00 	orr.w	ip, ip, r0
900275ee:	ea47 0c0c 	orr.w	ip, r7, ip
900275f2:	f8a8 c000 	strh.w	ip, [r8]
900275f6:	e7b7      	b.n	90027568 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900275f8:	b01b      	add	sp, #108	; 0x6c
900275fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900275fe:	bf00      	nop
90027600:	fffff800 	.word	0xfffff800

90027604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90027604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027608:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002760c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027610:	2d00      	cmp	r5, #0
90027612:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027616:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002761a:	fb05 0e03 	mla	lr, r5, r3, r0
9002761e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027622:	f2c0 808c 	blt.w	9002773e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90027626:	45a9      	cmp	r9, r5
90027628:	f340 8089 	ble.w	9002773e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002762c:	2800      	cmp	r0, #0
9002762e:	f2c0 8084 	blt.w	9002773a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027632:	4580      	cmp	r8, r0
90027634:	f340 8081 	ble.w	9002773a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90027638:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002763c:	f01e 0f01 	tst.w	lr, #1
90027640:	5d16      	ldrb	r6, [r2, r4]
90027642:	bf0c      	ite	eq
90027644:	f006 060f 	andeq.w	r6, r6, #15
90027648:	1136      	asrne	r6, r6, #4
9002764a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002764e:	b2f6      	uxtb	r6, r6
90027650:	1c44      	adds	r4, r0, #1
90027652:	d477      	bmi.n	90027744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027654:	45a0      	cmp	r8, r4
90027656:	dd75      	ble.n	90027744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90027658:	2f00      	cmp	r7, #0
9002765a:	d075      	beq.n	90027748 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
9002765c:	f10e 0a01 	add.w	sl, lr, #1
90027660:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027664:	f01a 0f01 	tst.w	sl, #1
90027668:	5d14      	ldrb	r4, [r2, r4]
9002766a:	bf0c      	ite	eq
9002766c:	f004 040f 	andeq.w	r4, r4, #15
90027670:	1124      	asrne	r4, r4, #4
90027672:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027676:	b2e4      	uxtb	r4, r4
90027678:	3501      	adds	r5, #1
9002767a:	d469      	bmi.n	90027750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002767c:	45a9      	cmp	r9, r5
9002767e:	dd67      	ble.n	90027750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90027680:	f1bc 0f00 	cmp.w	ip, #0
90027684:	d067      	beq.n	90027756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90027686:	2800      	cmp	r0, #0
90027688:	db60      	blt.n	9002774c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002768a:	4580      	cmp	r8, r0
9002768c:	dd5e      	ble.n	9002774c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002768e:	eb03 090e 	add.w	r9, r3, lr
90027692:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027696:	f019 0f01 	tst.w	r9, #1
9002769a:	5d55      	ldrb	r5, [r2, r5]
9002769c:	bf0c      	ite	eq
9002769e:	f005 050f 	andeq.w	r5, r5, #15
900276a2:	112d      	asrne	r5, r5, #4
900276a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900276a8:	b2ed      	uxtb	r5, r5
900276aa:	3001      	adds	r0, #1
900276ac:	d456      	bmi.n	9002775c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900276ae:	4580      	cmp	r8, r0
900276b0:	dd54      	ble.n	9002775c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900276b2:	2f00      	cmp	r7, #0
900276b4:	d054      	beq.n	90027760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900276b6:	3301      	adds	r3, #1
900276b8:	449e      	add	lr, r3
900276ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
900276be:	f01e 0f01 	tst.w	lr, #1
900276c2:	5cd0      	ldrb	r0, [r2, r3]
900276c4:	bf0c      	ite	eq
900276c6:	f000 000f 	andeq.w	r0, r0, #15
900276ca:	1100      	asrne	r0, r0, #4
900276cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900276d0:	b2c3      	uxtb	r3, r0
900276d2:	b2ba      	uxth	r2, r7
900276d4:	fa1f fc8c 	uxth.w	ip, ip
900276d8:	fb02 f00c 	mul.w	r0, r2, ip
900276dc:	0112      	lsls	r2, r2, #4
900276de:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900276e2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900276e6:	1a12      	subs	r2, r2, r0
900276e8:	fa1f fc8c 	uxth.w	ip, ip
900276ec:	b292      	uxth	r2, r2
900276ee:	eba7 070c 	sub.w	r7, r7, ip
900276f2:	4362      	muls	r2, r4
900276f4:	b2bf      	uxth	r7, r7
900276f6:	fb06 2207 	mla	r2, r6, r7, r2
900276fa:	fb0c 2505 	mla	r5, ip, r5, r2
900276fe:	fb00 5303 	mla	r3, r0, r3, r5
90027702:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027706:	b1b3      	cbz	r3, 90027736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90027708:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
9002770c:	435a      	muls	r2, r3
9002770e:	1c53      	adds	r3, r2, #1
90027710:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027714:	4a2d      	ldr	r2, [pc, #180]	; (900277cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90027716:	121b      	asrs	r3, r3, #8
90027718:	6812      	ldr	r2, [r2, #0]
9002771a:	2bff      	cmp	r3, #255	; 0xff
9002771c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90027720:	d120      	bne.n	90027764 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90027722:	0950      	lsrs	r0, r2, #5
90027724:	4b2a      	ldr	r3, [pc, #168]	; (900277d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90027726:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002772a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002772e:	4033      	ands	r3, r6
90027730:	4318      	orrs	r0, r3
90027732:	4302      	orrs	r2, r0
90027734:	800a      	strh	r2, [r1, #0]
90027736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002773a:	2600      	movs	r6, #0
9002773c:	e788      	b.n	90027650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002773e:	2400      	movs	r4, #0
90027740:	4626      	mov	r6, r4
90027742:	e799      	b.n	90027678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027744:	2400      	movs	r4, #0
90027746:	e797      	b.n	90027678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90027748:	463c      	mov	r4, r7
9002774a:	e795      	b.n	90027678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002774c:	2500      	movs	r5, #0
9002774e:	e7ac      	b.n	900276aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90027750:	2300      	movs	r3, #0
90027752:	461d      	mov	r5, r3
90027754:	e7bd      	b.n	900276d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027756:	4663      	mov	r3, ip
90027758:	4665      	mov	r5, ip
9002775a:	e7ba      	b.n	900276d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002775c:	2300      	movs	r3, #0
9002775e:	e7b8      	b.n	900276d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027760:	463b      	mov	r3, r7
90027762:	e7b6      	b.n	900276d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90027764:	880d      	ldrh	r5, [r1, #0]
90027766:	b29f      	uxth	r7, r3
90027768:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002776c:	43db      	mvns	r3, r3
9002776e:	122c      	asrs	r4, r5, #8
90027770:	fb10 f007 	smulbb	r0, r0, r7
90027774:	b2db      	uxtb	r3, r3
90027776:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002777a:	b2f6      	uxtb	r6, r6
9002777c:	b2d2      	uxtb	r2, r2
9002777e:	fb04 0403 	mla	r4, r4, r3, r0
90027782:	10e8      	asrs	r0, r5, #3
90027784:	fb12 f207 	smulbb	r2, r2, r7
90027788:	00ed      	lsls	r5, r5, #3
9002778a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002778e:	b2a4      	uxth	r4, r4
90027790:	fb16 f607 	smulbb	r6, r6, r7
90027794:	b2ed      	uxtb	r5, r5
90027796:	fb00 6603 	mla	r6, r0, r3, r6
9002779a:	fb05 2303 	mla	r3, r5, r3, r2
9002779e:	b2b0      	uxth	r0, r6
900277a0:	b29a      	uxth	r2, r3
900277a2:	1c63      	adds	r3, r4, #1
900277a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
900277a8:	1c53      	adds	r3, r2, #1
900277aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900277ae:	1c42      	adds	r2, r0, #1
900277b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900277b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900277b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900277bc:	0940      	lsrs	r0, r0, #5
900277be:	4323      	orrs	r3, r4
900277c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900277c4:	4303      	orrs	r3, r0
900277c6:	800b      	strh	r3, [r1, #0]
900277c8:	e7b5      	b.n	90027736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900277ca:	bf00      	nop
900277cc:	24039adc 	.word	0x24039adc
900277d0:	00fff800 	.word	0x00fff800

900277d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900277d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900277d8:	b097      	sub	sp, #92	; 0x5c
900277da:	9214      	str	r2, [sp, #80]	; 0x50
900277dc:	9309      	str	r3, [sp, #36]	; 0x24
900277de:	9a25      	ldr	r2, [sp, #148]	; 0x94
900277e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900277e4:	9015      	str	r0, [sp, #84]	; 0x54
900277e6:	910d      	str	r1, [sp, #52]	; 0x34
900277e8:	6850      	ldr	r0, [r2, #4]
900277ea:	930f      	str	r3, [sp, #60]	; 0x3c
900277ec:	6812      	ldr	r2, [r2, #0]
900277ee:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900277f2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
900277f6:	fb00 1303 	mla	r3, r0, r3, r1
900277fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900277fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90027800:	689b      	ldr	r3, [r3, #8]
90027802:	3301      	adds	r3, #1
90027804:	f023 0301 	bic.w	r3, r3, #1
90027808:	930a      	str	r3, [sp, #40]	; 0x28
9002780a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002780c:	681f      	ldr	r7, [r3, #0]
9002780e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027810:	2b00      	cmp	r3, #0
90027812:	dc03      	bgt.n	9002781c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027814:	9b14      	ldr	r3, [sp, #80]	; 0x50
90027816:	2b00      	cmp	r3, #0
90027818:	f340 8289 	ble.w	90027d2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002781c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002781e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027822:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027826:	1e48      	subs	r0, r1, #1
90027828:	f102 3cff 	add.w	ip, r2, #4294967295
9002782c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002782e:	2b00      	cmp	r3, #0
90027830:	f340 80c5 	ble.w	900279be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90027834:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027838:	ea4f 4326 	mov.w	r3, r6, asr #16
9002783c:	d406      	bmi.n	9002784c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002783e:	4586      	cmp	lr, r0
90027840:	da04      	bge.n	9002784c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027842:	2b00      	cmp	r3, #0
90027844:	db02      	blt.n	9002784c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90027846:	4563      	cmp	r3, ip
90027848:	f2c0 80ba 	blt.w	900279c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002784c:	f11e 0e01 	adds.w	lr, lr, #1
90027850:	f100 80ab 	bmi.w	900279aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027854:	4571      	cmp	r1, lr
90027856:	f2c0 80a8 	blt.w	900279aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002785a:	3301      	adds	r3, #1
9002785c:	f100 80a5 	bmi.w	900279aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027860:	429a      	cmp	r2, r3
90027862:	f2c0 80a2 	blt.w	900279aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90027866:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027868:	46c8      	mov	r8, r9
9002786a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002786e:	930e      	str	r3, [sp, #56]	; 0x38
90027870:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90027872:	2b00      	cmp	r3, #0
90027874:	f340 80c4 	ble.w	90027a00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90027878:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002787a:	1430      	asrs	r0, r6, #16
9002787c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027880:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027884:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027888:	1423      	asrs	r3, r4, #16
9002788a:	f100 814f 	bmi.w	90027b2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002788e:	f10c 3bff 	add.w	fp, ip, #4294967295
90027892:	455b      	cmp	r3, fp
90027894:	f280 814a 	bge.w	90027b2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90027898:	2800      	cmp	r0, #0
9002789a:	f2c0 8147 	blt.w	90027b2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002789e:	f10e 3bff 	add.w	fp, lr, #4294967295
900278a2:	4558      	cmp	r0, fp
900278a4:	f280 8142 	bge.w	90027b2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900278a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
900278aa:	fb00 3305 	mla	r3, r0, r5, r3
900278ae:	0858      	lsrs	r0, r3, #1
900278b0:	07dd      	lsls	r5, r3, #31
900278b2:	f817 c000 	ldrb.w	ip, [r7, r0]
900278b6:	bf54      	ite	pl
900278b8:	f00c 0c0f 	andpl.w	ip, ip, #15
900278bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900278c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900278c4:	fa5f fc8c 	uxtb.w	ip, ip
900278c8:	2a00      	cmp	r2, #0
900278ca:	f000 80dd 	beq.w	90027a88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
900278ce:	1c58      	adds	r0, r3, #1
900278d0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900278d4:	07c0      	lsls	r0, r0, #31
900278d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
900278da:	bf54      	ite	pl
900278dc:	f00e 0e0f 	andpl.w	lr, lr, #15
900278e0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900278e4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900278e8:	fa5f f08e 	uxtb.w	r0, lr
900278ec:	9010      	str	r0, [sp, #64]	; 0x40
900278ee:	b1d9      	cbz	r1, 90027928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900278f0:	4453      	add	r3, sl
900278f2:	0858      	lsrs	r0, r3, #1
900278f4:	07dd      	lsls	r5, r3, #31
900278f6:	f103 0301 	add.w	r3, r3, #1
900278fa:	5c38      	ldrb	r0, [r7, r0]
900278fc:	bf54      	ite	pl
900278fe:	f000 000f 	andpl.w	r0, r0, #15
90027902:	1100      	asrmi	r0, r0, #4
90027904:	07dd      	lsls	r5, r3, #31
90027906:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002790a:	b2c0      	uxtb	r0, r0
9002790c:	900b      	str	r0, [sp, #44]	; 0x2c
9002790e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90027912:	f817 e000 	ldrb.w	lr, [r7, r0]
90027916:	bf54      	ite	pl
90027918:	f00e 030f 	andpl.w	r3, lr, #15
9002791c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90027920:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027924:	b2db      	uxtb	r3, r3
90027926:	9311      	str	r3, [sp, #68]	; 0x44
90027928:	b292      	uxth	r2, r2
9002792a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002792c:	b289      	uxth	r1, r1
9002792e:	fb02 f301 	mul.w	r3, r2, r1
90027932:	0112      	lsls	r2, r2, #4
90027934:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90027938:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002793c:	1ad2      	subs	r2, r2, r3
9002793e:	b289      	uxth	r1, r1
90027940:	b292      	uxth	r2, r2
90027942:	1a40      	subs	r0, r0, r1
90027944:	436a      	muls	r2, r5
90027946:	b280      	uxth	r0, r0
90027948:	fb0c 2c00 	mla	ip, ip, r0, r2
9002794c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002794e:	fb01 c102 	mla	r1, r1, r2, ip
90027952:	9a11      	ldr	r2, [sp, #68]	; 0x44
90027954:	fb03 1302 	mla	r3, r3, r2, r1
90027958:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002795c:	b1db      	cbz	r3, 90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002795e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027960:	4353      	muls	r3, r2
90027962:	1c5a      	adds	r2, r3, #1
90027964:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027968:	4ac6      	ldr	r2, [pc, #792]	; (90027c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002796a:	121b      	asrs	r3, r3, #8
9002796c:	6812      	ldr	r2, [r2, #0]
9002796e:	2bff      	cmp	r3, #255	; 0xff
90027970:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027974:	f040 8099 	bne.w	90027aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90027978:	0953      	lsrs	r3, r2, #5
9002797a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002797e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027982:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027986:	f02c 0c07 	bic.w	ip, ip, #7
9002798a:	ea43 0c0c 	orr.w	ip, r3, ip
9002798e:	ea4c 0202 	orr.w	r2, ip, r2
90027992:	f8a8 2000 	strh.w	r2, [r8]
90027996:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027998:	f108 0802 	add.w	r8, r8, #2
9002799c:	441c      	add	r4, r3
9002799e:	9b24      	ldr	r3, [sp, #144]	; 0x90
900279a0:	441e      	add	r6, r3
900279a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900279a4:	3b01      	subs	r3, #1
900279a6:	930e      	str	r3, [sp, #56]	; 0x38
900279a8:	e762      	b.n	90027870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900279aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900279ac:	f109 0902 	add.w	r9, r9, #2
900279b0:	441c      	add	r4, r3
900279b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900279b4:	441e      	add	r6, r3
900279b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900279b8:	3b01      	subs	r3, #1
900279ba:	9309      	str	r3, [sp, #36]	; 0x24
900279bc:	e736      	b.n	9002782c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900279be:	d024      	beq.n	90027a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900279c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900279c2:	9823      	ldr	r0, [sp, #140]	; 0x8c
900279c4:	3b01      	subs	r3, #1
900279c6:	fb00 4003 	mla	r0, r0, r3, r4
900279ca:	1400      	asrs	r0, r0, #16
900279cc:	f53f af4b 	bmi.w	90027866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900279d0:	3901      	subs	r1, #1
900279d2:	4288      	cmp	r0, r1
900279d4:	f6bf af47 	bge.w	90027866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900279d8:	9924      	ldr	r1, [sp, #144]	; 0x90
900279da:	fb01 6303 	mla	r3, r1, r3, r6
900279de:	141b      	asrs	r3, r3, #16
900279e0:	f53f af41 	bmi.w	90027866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900279e4:	3a01      	subs	r2, #1
900279e6:	4293      	cmp	r3, r2
900279e8:	f6bf af3d 	bge.w	90027866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900279ec:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900279f0:	46c8      	mov	r8, r9
900279f2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900279f6:	930e      	str	r3, [sp, #56]	; 0x38
900279f8:	f1bb 0f00 	cmp.w	fp, #0
900279fc:	f300 80b7 	bgt.w	90027b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90027a00:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027a02:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90027a06:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027a0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027a0c:	2b00      	cmp	r3, #0
90027a0e:	f340 818e 	ble.w	90027d2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90027a12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90027a16:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027a18:	ee30 0a04 	vadd.f32	s0, s0, s8
90027a1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027a20:	eef0 6a62 	vmov.f32	s13, s5
90027a24:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027a28:	ee31 1a05 	vadd.f32	s2, s2, s10
90027a2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027a30:	ee16 4a90 	vmov	r4, s13
90027a34:	eef0 6a43 	vmov.f32	s13, s6
90027a38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027a3c:	ee16 6a90 	vmov	r6, s13
90027a40:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027a44:	ee61 7a27 	vmul.f32	s15, s2, s15
90027a48:	ee77 2a62 	vsub.f32	s5, s14, s5
90027a4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027a50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027a54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027a58:	ee12 2a90 	vmov	r2, s5
90027a5c:	eef0 2a47 	vmov.f32	s5, s14
90027a60:	fb92 f3f3 	sdiv	r3, r2, r3
90027a64:	ee13 2a10 	vmov	r2, s6
90027a68:	9323      	str	r3, [sp, #140]	; 0x8c
90027a6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027a6c:	eeb0 3a67 	vmov.f32	s6, s15
90027a70:	fb92 f3f3 	sdiv	r3, r2, r3
90027a74:	9324      	str	r3, [sp, #144]	; 0x90
90027a76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90027a78:	9a14      	ldr	r2, [sp, #80]	; 0x50
90027a7a:	3b01      	subs	r3, #1
90027a7c:	930d      	str	r3, [sp, #52]	; 0x34
90027a7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90027a80:	bf08      	it	eq
90027a82:	4613      	moveq	r3, r2
90027a84:	9309      	str	r3, [sp, #36]	; 0x24
90027a86:	e6c2      	b.n	9002780e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027a88:	2900      	cmp	r1, #0
90027a8a:	f43f af4d 	beq.w	90027928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027a8e:	eb0a 0003 	add.w	r0, sl, r3
90027a92:	0843      	lsrs	r3, r0, #1
90027a94:	07c0      	lsls	r0, r0, #31
90027a96:	5cfb      	ldrb	r3, [r7, r3]
90027a98:	bf54      	ite	pl
90027a9a:	f003 030f 	andpl.w	r3, r3, #15
90027a9e:	111b      	asrmi	r3, r3, #4
90027aa0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027aa4:	b2db      	uxtb	r3, r3
90027aa6:	930b      	str	r3, [sp, #44]	; 0x2c
90027aa8:	e73e      	b.n	90027928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027aaa:	f8b8 e000 	ldrh.w	lr, [r8]
90027aae:	fa1f fb83 	uxth.w	fp, r3
90027ab2:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027ab6:	43db      	mvns	r3, r3
90027ab8:	ea4f 202e 	mov.w	r0, lr, asr #8
90027abc:	fb11 f10b 	smulbb	r1, r1, fp
90027ac0:	b2db      	uxtb	r3, r3
90027ac2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90027ac6:	fa5f fc8c 	uxtb.w	ip, ip
90027aca:	b2d2      	uxtb	r2, r2
90027acc:	fb00 1003 	mla	r0, r0, r3, r1
90027ad0:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027ad4:	fb1c fc0b 	smulbb	ip, ip, fp
90027ad8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027adc:	b280      	uxth	r0, r0
90027ade:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90027ae2:	fb12 fb0b 	smulbb	fp, r2, fp
90027ae6:	fa5f fe8e 	uxtb.w	lr, lr
90027aea:	fb01 cc03 	mla	ip, r1, r3, ip
90027aee:	fb0e bb03 	mla	fp, lr, r3, fp
90027af2:	1c43      	adds	r3, r0, #1
90027af4:	fa1f fc8c 	uxth.w	ip, ip
90027af8:	fa1f fb8b 	uxth.w	fp, fp
90027afc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027b00:	f10c 0101 	add.w	r1, ip, #1
90027b04:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90027b08:	f10b 0001 	add.w	r0, fp, #1
90027b0c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027b10:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90027b14:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027b18:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027b1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027b20:	4318      	orrs	r0, r3
90027b22:	ea40 000c 	orr.w	r0, r0, ip
90027b26:	f8a8 0000 	strh.w	r0, [r8]
90027b2a:	e734      	b.n	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b2c:	f113 0b01 	adds.w	fp, r3, #1
90027b30:	f53f af31 	bmi.w	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b34:	45dc      	cmp	ip, fp
90027b36:	f6ff af2e 	blt.w	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b3a:	f110 0b01 	adds.w	fp, r0, #1
90027b3e:	f53f af2a 	bmi.w	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b42:	45de      	cmp	lr, fp
90027b44:	f6ff af27 	blt.w	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b48:	9302      	str	r3, [sp, #8]
90027b4a:	fa0f f38e 	sxth.w	r3, lr
90027b4e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90027b50:	9301      	str	r3, [sp, #4]
90027b52:	fa0f f38c 	sxth.w	r3, ip
90027b56:	e9cd 0203 	strd	r0, r2, [sp, #12]
90027b5a:	e9cd 1505 	strd	r1, r5, [sp, #20]
90027b5e:	9300      	str	r3, [sp, #0]
90027b60:	463a      	mov	r2, r7
90027b62:	4653      	mov	r3, sl
90027b64:	4641      	mov	r1, r8
90027b66:	9815      	ldr	r0, [sp, #84]	; 0x54
90027b68:	f7ff fd4c 	bl	90027604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027b6c:	e713      	b.n	90027996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027b6e:	1422      	asrs	r2, r4, #16
90027b70:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90027b72:	1433      	asrs	r3, r6, #16
90027b74:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027b78:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027b7c:	fb05 2303 	mla	r3, r5, r3, r2
90027b80:	085a      	lsrs	r2, r3, #1
90027b82:	07dd      	lsls	r5, r3, #31
90027b84:	5cba      	ldrb	r2, [r7, r2]
90027b86:	bf54      	ite	pl
90027b88:	f002 020f 	andpl.w	r2, r2, #15
90027b8c:	1112      	asrmi	r2, r2, #4
90027b8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90027b92:	b2d2      	uxtb	r2, r2
90027b94:	2900      	cmp	r1, #0
90027b96:	d077      	beq.n	90027c88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027b98:	f103 0e01 	add.w	lr, r3, #1
90027b9c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027ba0:	f01e 0f01 	tst.w	lr, #1
90027ba4:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027ba8:	bf0c      	ite	eq
90027baa:	f00c 0c0f 	andeq.w	ip, ip, #15
90027bae:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90027bb2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027bb6:	fa5f f58c 	uxtb.w	r5, ip
90027bba:	9512      	str	r5, [sp, #72]	; 0x48
90027bbc:	b308      	cbz	r0, 90027c02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027bbe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027bc0:	442b      	add	r3, r5
90027bc2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027bc6:	07dd      	lsls	r5, r3, #31
90027bc8:	f103 0301 	add.w	r3, r3, #1
90027bcc:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027bd0:	bf54      	ite	pl
90027bd2:	f00c 0c0f 	andpl.w	ip, ip, #15
90027bd6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027bda:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027bde:	fa5f f58c 	uxtb.w	r5, ip
90027be2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027be6:	950c      	str	r5, [sp, #48]	; 0x30
90027be8:	07dd      	lsls	r5, r3, #31
90027bea:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027bee:	bf54      	ite	pl
90027bf0:	f00c 0c0f 	andpl.w	ip, ip, #15
90027bf4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027bf8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027bfc:	fa5f f38c 	uxtb.w	r3, ip
90027c00:	9313      	str	r3, [sp, #76]	; 0x4c
90027c02:	b289      	uxth	r1, r1
90027c04:	9d12      	ldr	r5, [sp, #72]	; 0x48
90027c06:	b280      	uxth	r0, r0
90027c08:	fb01 f300 	mul.w	r3, r1, r0
90027c0c:	0109      	lsls	r1, r1, #4
90027c0e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90027c12:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90027c16:	1ac9      	subs	r1, r1, r3
90027c18:	b280      	uxth	r0, r0
90027c1a:	b289      	uxth	r1, r1
90027c1c:	ebac 0c00 	sub.w	ip, ip, r0
90027c20:	4369      	muls	r1, r5
90027c22:	fa1f fc8c 	uxth.w	ip, ip
90027c26:	fb02 120c 	mla	r2, r2, ip, r1
90027c2a:	990c      	ldr	r1, [sp, #48]	; 0x30
90027c2c:	fb00 2001 	mla	r0, r0, r1, r2
90027c30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90027c32:	fb03 0302 	mla	r3, r3, r2, r0
90027c36:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027c3a:	b1d3      	cbz	r3, 90027c72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027c3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90027c3e:	4353      	muls	r3, r2
90027c40:	1c5a      	adds	r2, r3, #1
90027c42:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027c46:	4a0f      	ldr	r2, [pc, #60]	; (90027c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90027c48:	121b      	asrs	r3, r3, #8
90027c4a:	6812      	ldr	r2, [r2, #0]
90027c4c:	2bff      	cmp	r3, #255	; 0xff
90027c4e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90027c52:	d12d      	bne.n	90027cb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90027c54:	0953      	lsrs	r3, r2, #5
90027c56:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90027c5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027c5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90027c62:	f02c 0c07 	bic.w	ip, ip, #7
90027c66:	ea43 0c0c 	orr.w	ip, r3, ip
90027c6a:	ea4c 0202 	orr.w	r2, ip, r2
90027c6e:	f8a8 2000 	strh.w	r2, [r8]
90027c72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90027c74:	f108 0802 	add.w	r8, r8, #2
90027c78:	f10b 3bff 	add.w	fp, fp, #4294967295
90027c7c:	441c      	add	r4, r3
90027c7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027c80:	441e      	add	r6, r3
90027c82:	e6b9      	b.n	900279f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90027c84:	24039adc 	.word	0x24039adc
90027c88:	2800      	cmp	r0, #0
90027c8a:	d0ba      	beq.n	90027c02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027c8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90027c8e:	442b      	add	r3, r5
90027c90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90027c94:	07db      	lsls	r3, r3, #31
90027c96:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027c9a:	bf54      	ite	pl
90027c9c:	f00c 0c0f 	andpl.w	ip, ip, #15
90027ca0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027ca4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027ca8:	fa5f f38c 	uxtb.w	r3, ip
90027cac:	930c      	str	r3, [sp, #48]	; 0x30
90027cae:	e7a8      	b.n	90027c02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027cb0:	f8b8 e000 	ldrh.w	lr, [r8]
90027cb4:	fa1f fa83 	uxth.w	sl, r3
90027cb8:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027cbc:	43db      	mvns	r3, r3
90027cbe:	ea4f 202e 	mov.w	r0, lr, asr #8
90027cc2:	fb11 f10a 	smulbb	r1, r1, sl
90027cc6:	b2db      	uxtb	r3, r3
90027cc8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90027ccc:	b2d2      	uxtb	r2, r2
90027cce:	fa5f fc8c 	uxtb.w	ip, ip
90027cd2:	fb00 1003 	mla	r0, r0, r3, r1
90027cd6:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027cda:	fb12 f20a 	smulbb	r2, r2, sl
90027cde:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027ce2:	b280      	uxth	r0, r0
90027ce4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90027ce8:	fb1c fc0a 	smulbb	ip, ip, sl
90027cec:	fa5f fe8e 	uxtb.w	lr, lr
90027cf0:	fb0e 2203 	mla	r2, lr, r3, r2
90027cf4:	fb01 cc03 	mla	ip, r1, r3, ip
90027cf8:	1c43      	adds	r3, r0, #1
90027cfa:	b292      	uxth	r2, r2
90027cfc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027d00:	1c51      	adds	r1, r2, #1
90027d02:	fa1f fc8c 	uxth.w	ip, ip
90027d06:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90027d0a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90027d0e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90027d12:	4308      	orrs	r0, r1
90027d14:	f10c 0101 	add.w	r1, ip, #1
90027d18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90027d1c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027d20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90027d24:	ea40 000c 	orr.w	r0, r0, ip
90027d28:	f8a8 0000 	strh.w	r0, [r8]
90027d2c:	e7a1      	b.n	90027c72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90027d2e:	b017      	add	sp, #92	; 0x5c
90027d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90027d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027d38:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90027d3c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90027d40:	2d00      	cmp	r5, #0
90027d42:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90027d46:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90027d4a:	fb05 0e03 	mla	lr, r5, r3, r0
90027d4e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90027d52:	f2c0 80b0 	blt.w	90027eb6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027d56:	45a9      	cmp	r9, r5
90027d58:	f340 80ad 	ble.w	90027eb6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90027d5c:	2800      	cmp	r0, #0
90027d5e:	f2c0 80a8 	blt.w	90027eb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027d62:	4580      	cmp	r8, r0
90027d64:	f340 80a5 	ble.w	90027eb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027d68:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027d6c:	f01e 0f01 	tst.w	lr, #1
90027d70:	5d16      	ldrb	r6, [r2, r4]
90027d72:	bf0c      	ite	eq
90027d74:	f006 060f 	andeq.w	r6, r6, #15
90027d78:	1136      	asrne	r6, r6, #4
90027d7a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027d7e:	b2f6      	uxtb	r6, r6
90027d80:	1c44      	adds	r4, r0, #1
90027d82:	f100 809b 	bmi.w	90027ebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027d86:	45a0      	cmp	r8, r4
90027d88:	f340 8098 	ble.w	90027ebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027d8c:	2f00      	cmp	r7, #0
90027d8e:	f000 8097 	beq.w	90027ec0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90027d92:	f10e 0a01 	add.w	sl, lr, #1
90027d96:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027d9a:	f01a 0f01 	tst.w	sl, #1
90027d9e:	5d14      	ldrb	r4, [r2, r4]
90027da0:	bf0c      	ite	eq
90027da2:	f004 040f 	andeq.w	r4, r4, #15
90027da6:	1124      	asrne	r4, r4, #4
90027da8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027dac:	b2e4      	uxtb	r4, r4
90027dae:	3501      	adds	r5, #1
90027db0:	f100 808a 	bmi.w	90027ec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027db4:	45a9      	cmp	r9, r5
90027db6:	f340 8087 	ble.w	90027ec8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027dba:	f1bc 0f00 	cmp.w	ip, #0
90027dbe:	f000 8086 	beq.w	90027ece <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90027dc2:	2800      	cmp	r0, #0
90027dc4:	db7e      	blt.n	90027ec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027dc6:	4580      	cmp	r8, r0
90027dc8:	dd7c      	ble.n	90027ec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027dca:	eb03 090e 	add.w	r9, r3, lr
90027dce:	ea4f 0559 	mov.w	r5, r9, lsr #1
90027dd2:	f019 0f01 	tst.w	r9, #1
90027dd6:	5d55      	ldrb	r5, [r2, r5]
90027dd8:	bf0c      	ite	eq
90027dda:	f005 050f 	andeq.w	r5, r5, #15
90027dde:	112d      	asrne	r5, r5, #4
90027de0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90027de4:	b2ed      	uxtb	r5, r5
90027de6:	3001      	adds	r0, #1
90027de8:	d474      	bmi.n	90027ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027dea:	4580      	cmp	r8, r0
90027dec:	dd72      	ble.n	90027ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027dee:	2f00      	cmp	r7, #0
90027df0:	d072      	beq.n	90027ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90027df2:	3301      	adds	r3, #1
90027df4:	449e      	add	lr, r3
90027df6:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027dfa:	f01e 0f01 	tst.w	lr, #1
90027dfe:	5cd0      	ldrb	r0, [r2, r3]
90027e00:	bf0c      	ite	eq
90027e02:	f000 000f 	andeq.w	r0, r0, #15
90027e06:	1100      	asrne	r0, r0, #4
90027e08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90027e0c:	b2c3      	uxtb	r3, r0
90027e0e:	b2ba      	uxth	r2, r7
90027e10:	fa1f fc8c 	uxth.w	ip, ip
90027e14:	fb02 f00c 	mul.w	r0, r2, ip
90027e18:	0112      	lsls	r2, r2, #4
90027e1a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90027e1e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90027e22:	1a12      	subs	r2, r2, r0
90027e24:	fa1f fc8c 	uxth.w	ip, ip
90027e28:	b292      	uxth	r2, r2
90027e2a:	eba7 070c 	sub.w	r7, r7, ip
90027e2e:	4362      	muls	r2, r4
90027e30:	b2bf      	uxth	r7, r7
90027e32:	fb06 2207 	mla	r2, r6, r7, r2
90027e36:	fb0c 2505 	mla	r5, ip, r5, r2
90027e3a:	fb00 5303 	mla	r3, r0, r3, r5
90027e3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90027e42:	b3a3      	cbz	r3, 90027eae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90027e44:	4a25      	ldr	r2, [pc, #148]	; (90027edc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90027e46:	880e      	ldrh	r6, [r1, #0]
90027e48:	6815      	ldr	r5, [r2, #0]
90027e4a:	b29a      	uxth	r2, r3
90027e4c:	1234      	asrs	r4, r6, #8
90027e4e:	43db      	mvns	r3, r3
90027e50:	f3c5 4007 	ubfx	r0, r5, #16, #8
90027e54:	f3c5 2707 	ubfx	r7, r5, #8, #8
90027e58:	b2db      	uxtb	r3, r3
90027e5a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90027e5e:	fb10 f002 	smulbb	r0, r0, r2
90027e62:	b2ed      	uxtb	r5, r5
90027e64:	fb17 f702 	smulbb	r7, r7, r2
90027e68:	fb04 0403 	mla	r4, r4, r3, r0
90027e6c:	10f0      	asrs	r0, r6, #3
90027e6e:	fb15 f202 	smulbb	r2, r5, r2
90027e72:	00f6      	lsls	r6, r6, #3
90027e74:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90027e78:	b2a4      	uxth	r4, r4
90027e7a:	b2f6      	uxtb	r6, r6
90027e7c:	fb00 7003 	mla	r0, r0, r3, r7
90027e80:	fb06 2303 	mla	r3, r6, r3, r2
90027e84:	b280      	uxth	r0, r0
90027e86:	b29a      	uxth	r2, r3
90027e88:	1c63      	adds	r3, r4, #1
90027e8a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027e8e:	1c53      	adds	r3, r2, #1
90027e90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027e94:	1c42      	adds	r2, r0, #1
90027e96:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90027e9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027e9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027ea2:	0940      	lsrs	r0, r0, #5
90027ea4:	4323      	orrs	r3, r4
90027ea6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90027eaa:	4303      	orrs	r3, r0
90027eac:	800b      	strh	r3, [r1, #0]
90027eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027eb2:	2600      	movs	r6, #0
90027eb4:	e764      	b.n	90027d80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90027eb6:	2400      	movs	r4, #0
90027eb8:	4626      	mov	r6, r4
90027eba:	e778      	b.n	90027dae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027ebc:	2400      	movs	r4, #0
90027ebe:	e776      	b.n	90027dae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027ec0:	463c      	mov	r4, r7
90027ec2:	e774      	b.n	90027dae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027ec4:	2500      	movs	r5, #0
90027ec6:	e78e      	b.n	90027de6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027ec8:	2300      	movs	r3, #0
90027eca:	461d      	mov	r5, r3
90027ecc:	e79f      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027ece:	4663      	mov	r3, ip
90027ed0:	4665      	mov	r5, ip
90027ed2:	e79c      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027ed4:	2300      	movs	r3, #0
90027ed6:	e79a      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027ed8:	463b      	mov	r3, r7
90027eda:	e798      	b.n	90027e0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027edc:	24039adc 	.word	0x24039adc

90027ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ee4:	b093      	sub	sp, #76	; 0x4c
90027ee6:	461d      	mov	r5, r3
90027ee8:	920c      	str	r2, [sp, #48]	; 0x30
90027eea:	9a21      	ldr	r2, [sp, #132]	; 0x84
90027eec:	9011      	str	r0, [sp, #68]	; 0x44
90027eee:	9107      	str	r1, [sp, #28]
90027ef0:	6850      	ldr	r0, [r2, #4]
90027ef2:	6812      	ldr	r2, [r2, #0]
90027ef4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90027ef8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90027efc:	fb00 1303 	mla	r3, r0, r3, r1
90027f00:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90027f04:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027f06:	689b      	ldr	r3, [r3, #8]
90027f08:	3301      	adds	r3, #1
90027f0a:	f023 0301 	bic.w	r3, r3, #1
90027f0e:	9306      	str	r3, [sp, #24]
90027f10:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027f12:	681f      	ldr	r7, [r3, #0]
90027f14:	9b07      	ldr	r3, [sp, #28]
90027f16:	2b00      	cmp	r3, #0
90027f18:	dc03      	bgt.n	90027f22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90027f1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90027f1c:	2b00      	cmp	r3, #0
90027f1e:	f340 8267 	ble.w	900283f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90027f22:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027f24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f2c:	1e48      	subs	r0, r1, #1
90027f2e:	f102 3cff 	add.w	ip, r2, #4294967295
90027f32:	2d00      	cmp	r5, #0
90027f34:	f340 80b7 	ble.w	900280a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90027f38:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027f3c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f40:	d406      	bmi.n	90027f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027f42:	4586      	cmp	lr, r0
90027f44:	da04      	bge.n	90027f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027f46:	2b00      	cmp	r3, #0
90027f48:	db02      	blt.n	90027f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90027f4a:	4563      	cmp	r3, ip
90027f4c:	f2c0 80ac 	blt.w	900280a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90027f50:	f11e 0e01 	adds.w	lr, lr, #1
90027f54:	f100 809f 	bmi.w	90028096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027f58:	4571      	cmp	r1, lr
90027f5a:	f2c0 809c 	blt.w	90028096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027f5e:	3301      	adds	r3, #1
90027f60:	f100 8099 	bmi.w	90028096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027f64:	429a      	cmp	r2, r3
90027f66:	f2c0 8096 	blt.w	90028096 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027f6a:	46c8      	mov	r8, r9
90027f6c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90027f70:	9509      	str	r5, [sp, #36]	; 0x24
90027f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027f74:	2b00      	cmp	r3, #0
90027f76:	f340 80b5 	ble.w	900280e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90027f7a:	f3c4 3303 	ubfx	r3, r4, #12, #4
90027f7e:	1430      	asrs	r0, r6, #16
90027f80:	f3c6 3103 	ubfx	r1, r6, #12, #4
90027f84:	9308      	str	r3, [sp, #32]
90027f86:	9b24      	ldr	r3, [sp, #144]	; 0x90
90027f88:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027f8c:	1423      	asrs	r3, r4, #16
90027f8e:	f100 813f 	bmi.w	90028210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027f92:	f10c 3bff 	add.w	fp, ip, #4294967295
90027f96:	455b      	cmp	r3, fp
90027f98:	f280 813a 	bge.w	90028210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027f9c:	2800      	cmp	r0, #0
90027f9e:	f2c0 8137 	blt.w	90028210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027fa2:	f10e 3bff 	add.w	fp, lr, #4294967295
90027fa6:	4558      	cmp	r0, fp
90027fa8:	f280 8132 	bge.w	90028210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027fac:	9a06      	ldr	r2, [sp, #24]
90027fae:	fb00 3302 	mla	r3, r0, r2, r3
90027fb2:	0858      	lsrs	r0, r3, #1
90027fb4:	07da      	lsls	r2, r3, #31
90027fb6:	9a08      	ldr	r2, [sp, #32]
90027fb8:	f817 c000 	ldrb.w	ip, [r7, r0]
90027fbc:	bf54      	ite	pl
90027fbe:	f00c 0c0f 	andpl.w	ip, ip, #15
90027fc2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027fc6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027fca:	fa5f fc8c 	uxtb.w	ip, ip
90027fce:	2a00      	cmp	r2, #0
90027fd0:	f000 80cc 	beq.w	9002816c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90027fd4:	1c58      	adds	r0, r3, #1
90027fd6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027fda:	07c0      	lsls	r0, r0, #31
90027fdc:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027fe0:	bf54      	ite	pl
90027fe2:	f00e 0e0f 	andpl.w	lr, lr, #15
90027fe6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027fea:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027fee:	fa5f fe8e 	uxtb.w	lr, lr
90027ff2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90027ff6:	b1b9      	cbz	r1, 90028028 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027ff8:	4453      	add	r3, sl
90027ffa:	0858      	lsrs	r0, r3, #1
90027ffc:	07da      	lsls	r2, r3, #31
90027ffe:	5c38      	ldrb	r0, [r7, r0]
90028000:	bf54      	ite	pl
90028002:	f000 000f 	andpl.w	r0, r0, #15
90028006:	1100      	asrmi	r0, r0, #4
90028008:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002800c:	b2c0      	uxtb	r0, r0
9002800e:	900a      	str	r0, [sp, #40]	; 0x28
90028010:	1c58      	adds	r0, r3, #1
90028012:	0843      	lsrs	r3, r0, #1
90028014:	07c2      	lsls	r2, r0, #31
90028016:	5cfb      	ldrb	r3, [r7, r3]
90028018:	bf54      	ite	pl
9002801a:	f003 030f 	andpl.w	r3, r3, #15
9002801e:	111b      	asrmi	r3, r3, #4
90028020:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028024:	b2db      	uxtb	r3, r3
90028026:	930e      	str	r3, [sp, #56]	; 0x38
90028028:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9002802c:	b289      	uxth	r1, r1
9002802e:	fb02 f301 	mul.w	r3, r2, r1
90028032:	0112      	lsls	r2, r2, #4
90028034:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90028038:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002803c:	1ad2      	subs	r2, r2, r3
9002803e:	b289      	uxth	r1, r1
90028040:	b292      	uxth	r2, r2
90028042:	1a40      	subs	r0, r0, r1
90028044:	fa1f fe80 	uxth.w	lr, r0
90028048:	980d      	ldr	r0, [sp, #52]	; 0x34
9002804a:	4342      	muls	r2, r0
9002804c:	fb0c 2c0e 	mla	ip, ip, lr, r2
90028050:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90028052:	fb01 c102 	mla	r1, r1, r2, ip
90028056:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90028058:	fb03 1302 	mla	r3, r3, r2, r1
9002805c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028060:	2bff      	cmp	r3, #255	; 0xff
90028062:	f040 8094 	bne.w	9002818e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90028066:	4bbf      	ldr	r3, [pc, #764]	; (90028364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028068:	681a      	ldr	r2, [r3, #0]
9002806a:	4bbf      	ldr	r3, [pc, #764]	; (90028368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002806c:	0951      	lsrs	r1, r2, #5
9002806e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028072:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028076:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002807a:	430b      	orrs	r3, r1
9002807c:	4313      	orrs	r3, r2
9002807e:	f8a8 3000 	strh.w	r3, [r8]
90028082:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028084:	f108 0802 	add.w	r8, r8, #2
90028088:	441c      	add	r4, r3
9002808a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002808c:	441e      	add	r6, r3
9002808e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028090:	3b01      	subs	r3, #1
90028092:	9309      	str	r3, [sp, #36]	; 0x24
90028094:	e76d      	b.n	90027f72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90028096:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028098:	3d01      	subs	r5, #1
9002809a:	f109 0902 	add.w	r9, r9, #2
9002809e:	441c      	add	r4, r3
900280a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900280a2:	441e      	add	r6, r3
900280a4:	e745      	b.n	90027f32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900280a6:	d021      	beq.n	900280ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900280a8:	1e6b      	subs	r3, r5, #1
900280aa:	981f      	ldr	r0, [sp, #124]	; 0x7c
900280ac:	fb00 4003 	mla	r0, r0, r3, r4
900280b0:	1400      	asrs	r0, r0, #16
900280b2:	f53f af5a 	bmi.w	90027f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900280b6:	3901      	subs	r1, #1
900280b8:	4288      	cmp	r0, r1
900280ba:	f6bf af56 	bge.w	90027f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900280be:	9920      	ldr	r1, [sp, #128]	; 0x80
900280c0:	fb01 6303 	mla	r3, r1, r3, r6
900280c4:	141b      	asrs	r3, r3, #16
900280c6:	f53f af50 	bmi.w	90027f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900280ca:	3a01      	subs	r2, #1
900280cc:	4293      	cmp	r3, r2
900280ce:	f6bf af4c 	bge.w	90027f6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900280d2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900280d6:	46a8      	mov	r8, r5
900280d8:	46ce      	mov	lr, r9
900280da:	9308      	str	r3, [sp, #32]
900280dc:	f1b8 0f00 	cmp.w	r8, #0
900280e0:	f300 80b6 	bgt.w	90028250 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900280e4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900280e8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900280ec:	9b07      	ldr	r3, [sp, #28]
900280ee:	2b00      	cmp	r3, #0
900280f0:	f340 817e 	ble.w	900283f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900280f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900280f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900280fa:	ee30 0a04 	vadd.f32	s0, s0, s8
900280fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028102:	eef0 6a62 	vmov.f32	s13, s5
90028106:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002810a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002810e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028112:	ee16 4a90 	vmov	r4, s13
90028116:	eef0 6a43 	vmov.f32	s13, s6
9002811a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002811e:	ee16 6a90 	vmov	r6, s13
90028122:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028126:	ee61 7a27 	vmul.f32	s15, s2, s15
9002812a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002812e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028136:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002813a:	ee12 2a90 	vmov	r2, s5
9002813e:	eef0 2a47 	vmov.f32	s5, s14
90028142:	fb92 f3f3 	sdiv	r3, r2, r3
90028146:	ee13 2a10 	vmov	r2, s6
9002814a:	931f      	str	r3, [sp, #124]	; 0x7c
9002814c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002814e:	eeb0 3a67 	vmov.f32	s6, s15
90028152:	fb92 f3f3 	sdiv	r3, r2, r3
90028156:	9320      	str	r3, [sp, #128]	; 0x80
90028158:	9b07      	ldr	r3, [sp, #28]
9002815a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002815c:	3b01      	subs	r3, #1
9002815e:	9307      	str	r3, [sp, #28]
90028160:	bf08      	it	eq
90028162:	4615      	moveq	r5, r2
90028164:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90028166:	bf18      	it	ne
90028168:	461d      	movne	r5, r3
9002816a:	e6d3      	b.n	90027f14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002816c:	2900      	cmp	r1, #0
9002816e:	f43f af5b 	beq.w	90028028 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90028172:	eb0a 0003 	add.w	r0, sl, r3
90028176:	0843      	lsrs	r3, r0, #1
90028178:	07c0      	lsls	r0, r0, #31
9002817a:	5cfb      	ldrb	r3, [r7, r3]
9002817c:	bf54      	ite	pl
9002817e:	f003 030f 	andpl.w	r3, r3, #15
90028182:	111b      	asrmi	r3, r3, #4
90028184:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90028188:	b2db      	uxtb	r3, r3
9002818a:	930a      	str	r3, [sp, #40]	; 0x28
9002818c:	e74c      	b.n	90028028 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002818e:	2b00      	cmp	r3, #0
90028190:	f43f af77 	beq.w	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028194:	4a73      	ldr	r2, [pc, #460]	; (90028364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028196:	fa1f fe83 	uxth.w	lr, r3
9002819a:	f8b8 c000 	ldrh.w	ip, [r8]
9002819e:	43db      	mvns	r3, r3
900281a0:	6810      	ldr	r0, [r2, #0]
900281a2:	ea4f 212c 	mov.w	r1, ip, asr #8
900281a6:	f3c0 4207 	ubfx	r2, r0, #16, #8
900281aa:	b2db      	uxtb	r3, r3
900281ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900281b0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
900281b4:	fb12 f20e 	smulbb	r2, r2, lr
900281b8:	b2c0      	uxtb	r0, r0
900281ba:	fb1b fb0e 	smulbb	fp, fp, lr
900281be:	fb01 2103 	mla	r1, r1, r3, r2
900281c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900281c6:	fb10 fe0e 	smulbb	lr, r0, lr
900281ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900281ce:	b289      	uxth	r1, r1
900281d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900281d4:	fa5f fc8c 	uxtb.w	ip, ip
900281d8:	fb02 b203 	mla	r2, r2, r3, fp
900281dc:	1c48      	adds	r0, r1, #1
900281de:	fb0c e303 	mla	r3, ip, r3, lr
900281e2:	b292      	uxth	r2, r2
900281e4:	b29b      	uxth	r3, r3
900281e6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900281ea:	f102 0b01 	add.w	fp, r2, #1
900281ee:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
900281f2:	1c59      	adds	r1, r3, #1
900281f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900281f8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900281fc:	0952      	lsrs	r2, r2, #5
900281fe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90028202:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028206:	4301      	orrs	r1, r0
90028208:	4311      	orrs	r1, r2
9002820a:	f8a8 1000 	strh.w	r1, [r8]
9002820e:	e738      	b.n	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028210:	f113 0b01 	adds.w	fp, r3, #1
90028214:	f53f af35 	bmi.w	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028218:	45dc      	cmp	ip, fp
9002821a:	f6ff af32 	blt.w	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002821e:	f110 0b01 	adds.w	fp, r0, #1
90028222:	f53f af2e 	bmi.w	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028226:	45de      	cmp	lr, fp
90028228:	f6ff af2b 	blt.w	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002822c:	9302      	str	r3, [sp, #8]
9002822e:	fa0f f38e 	sxth.w	r3, lr
90028232:	9a08      	ldr	r2, [sp, #32]
90028234:	9301      	str	r3, [sp, #4]
90028236:	fa0f f38c 	sxth.w	r3, ip
9002823a:	9105      	str	r1, [sp, #20]
9002823c:	4641      	mov	r1, r8
9002823e:	9300      	str	r3, [sp, #0]
90028240:	4653      	mov	r3, sl
90028242:	e9cd 0203 	strd	r0, r2, [sp, #12]
90028246:	463a      	mov	r2, r7
90028248:	9811      	ldr	r0, [sp, #68]	; 0x44
9002824a:	f7ff fd73 	bl	90027d34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002824e:	e718      	b.n	90028082 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90028250:	1422      	asrs	r2, r4, #16
90028252:	9906      	ldr	r1, [sp, #24]
90028254:	1433      	asrs	r3, r6, #16
90028256:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002825a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002825e:	fb01 2303 	mla	r3, r1, r3, r2
90028262:	085a      	lsrs	r2, r3, #1
90028264:	07d9      	lsls	r1, r3, #31
90028266:	5cba      	ldrb	r2, [r7, r2]
90028268:	bf54      	ite	pl
9002826a:	f002 020f 	andpl.w	r2, r2, #15
9002826e:	1112      	asrmi	r2, r2, #4
90028270:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90028274:	b2d2      	uxtb	r2, r2
90028276:	2800      	cmp	r0, #0
90028278:	d063      	beq.n	90028342 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002827a:	f103 0a01 	add.w	sl, r3, #1
9002827e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90028282:	f01a 0f01 	tst.w	sl, #1
90028286:	5c79      	ldrb	r1, [r7, r1]
90028288:	bf0c      	ite	eq
9002828a:	f001 010f 	andeq.w	r1, r1, #15
9002828e:	1109      	asrne	r1, r1, #4
90028290:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90028294:	b2c9      	uxtb	r1, r1
90028296:	910f      	str	r1, [sp, #60]	; 0x3c
90028298:	f1bc 0f00 	cmp.w	ip, #0
9002829c:	d01a      	beq.n	900282d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002829e:	9908      	ldr	r1, [sp, #32]
900282a0:	440b      	add	r3, r1
900282a2:	0859      	lsrs	r1, r3, #1
900282a4:	f013 0f01 	tst.w	r3, #1
900282a8:	f103 0301 	add.w	r3, r3, #1
900282ac:	5c79      	ldrb	r1, [r7, r1]
900282ae:	bf0c      	ite	eq
900282b0:	f001 010f 	andeq.w	r1, r1, #15
900282b4:	1109      	asrne	r1, r1, #4
900282b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900282ba:	b2c9      	uxtb	r1, r1
900282bc:	910b      	str	r1, [sp, #44]	; 0x2c
900282be:	0859      	lsrs	r1, r3, #1
900282c0:	07db      	lsls	r3, r3, #31
900282c2:	5c79      	ldrb	r1, [r7, r1]
900282c4:	bf54      	ite	pl
900282c6:	f001 010f 	andpl.w	r1, r1, #15
900282ca:	1109      	asrmi	r1, r1, #4
900282cc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900282d0:	b2c9      	uxtb	r1, r1
900282d2:	9110      	str	r1, [sp, #64]	; 0x40
900282d4:	b280      	uxth	r0, r0
900282d6:	fa1f fc8c 	uxth.w	ip, ip
900282da:	fb00 f30c 	mul.w	r3, r0, ip
900282de:	0100      	lsls	r0, r0, #4
900282e0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900282e4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
900282e8:	1ac0      	subs	r0, r0, r3
900282ea:	fa1f fc8c 	uxth.w	ip, ip
900282ee:	b280      	uxth	r0, r0
900282f0:	eba1 010c 	sub.w	r1, r1, ip
900282f4:	fa1f fa81 	uxth.w	sl, r1
900282f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
900282fa:	4348      	muls	r0, r1
900282fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
900282fe:	fb02 020a 	mla	r2, r2, sl, r0
90028302:	fb0c 2c01 	mla	ip, ip, r1, r2
90028306:	9a10      	ldr	r2, [sp, #64]	; 0x40
90028308:	fb03 c302 	mla	r3, r3, r2, ip
9002830c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028310:	2bff      	cmp	r3, #255	; 0xff
90028312:	d12b      	bne.n	9002836c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90028314:	4b13      	ldr	r3, [pc, #76]	; (90028364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90028316:	681a      	ldr	r2, [r3, #0]
90028318:	4b13      	ldr	r3, [pc, #76]	; (90028368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002831a:	0951      	lsrs	r1, r2, #5
9002831c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90028320:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90028324:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90028328:	430b      	orrs	r3, r1
9002832a:	4313      	orrs	r3, r2
9002832c:	f8ae 3000 	strh.w	r3, [lr]
90028330:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90028332:	f10e 0e02 	add.w	lr, lr, #2
90028336:	f108 38ff 	add.w	r8, r8, #4294967295
9002833a:	441c      	add	r4, r3
9002833c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002833e:	441e      	add	r6, r3
90028340:	e6cc      	b.n	900280dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90028342:	f1bc 0f00 	cmp.w	ip, #0
90028346:	d0c5      	beq.n	900282d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028348:	9908      	ldr	r1, [sp, #32]
9002834a:	440b      	add	r3, r1
9002834c:	0859      	lsrs	r1, r3, #1
9002834e:	07db      	lsls	r3, r3, #31
90028350:	5c79      	ldrb	r1, [r7, r1]
90028352:	bf54      	ite	pl
90028354:	f001 010f 	andpl.w	r1, r1, #15
90028358:	1109      	asrmi	r1, r1, #4
9002835a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002835e:	b2c9      	uxtb	r1, r1
90028360:	910b      	str	r1, [sp, #44]	; 0x2c
90028362:	e7b7      	b.n	900282d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90028364:	24039adc 	.word	0x24039adc
90028368:	fffff800 	.word	0xfffff800
9002836c:	2b00      	cmp	r3, #0
9002836e:	d0df      	beq.n	90028330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90028370:	4a21      	ldr	r2, [pc, #132]	; (900283f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90028372:	fa1f fa83 	uxth.w	sl, r3
90028376:	f8be c000 	ldrh.w	ip, [lr]
9002837a:	43db      	mvns	r3, r3
9002837c:	6810      	ldr	r0, [r2, #0]
9002837e:	ea4f 212c 	mov.w	r1, ip, asr #8
90028382:	f3c0 4207 	ubfx	r2, r0, #16, #8
90028386:	b2db      	uxtb	r3, r3
90028388:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002838c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90028390:	fb12 f20a 	smulbb	r2, r2, sl
90028394:	b2c0      	uxtb	r0, r0
90028396:	fb1b fb0a 	smulbb	fp, fp, sl
9002839a:	fb01 2103 	mla	r1, r1, r3, r2
9002839e:	ea4f 02ec 	mov.w	r2, ip, asr #3
900283a2:	fb10 f00a 	smulbb	r0, r0, sl
900283a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900283aa:	b289      	uxth	r1, r1
900283ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
900283b0:	fa5f fc8c 	uxtb.w	ip, ip
900283b4:	fb02 b203 	mla	r2, r2, r3, fp
900283b8:	fb0c 0003 	mla	r0, ip, r3, r0
900283bc:	1c4b      	adds	r3, r1, #1
900283be:	b292      	uxth	r2, r2
900283c0:	b280      	uxth	r0, r0
900283c2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900283c6:	f100 0b01 	add.w	fp, r0, #1
900283ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900283ce:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
900283d2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
900283d6:	ea4b 0101 	orr.w	r1, fp, r1
900283da:	f102 0b01 	add.w	fp, r2, #1
900283de:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900283e2:	0952      	lsrs	r2, r2, #5
900283e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900283e8:	4311      	orrs	r1, r2
900283ea:	f8ae 1000 	strh.w	r1, [lr]
900283ee:	e79f      	b.n	90028330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
900283f0:	b013      	add	sp, #76	; 0x4c
900283f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900283f6:	bf00      	nop
900283f8:	24039adc 	.word	0x24039adc

900283fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
900283fc:	b570      	push	{r4, r5, r6, lr}
900283fe:	1208      	asrs	r0, r1, #8
90028400:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90028404:	b29e      	uxth	r6, r3
90028406:	1213      	asrs	r3, r2, #8
90028408:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002840c:	10cc      	asrs	r4, r1, #3
9002840e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90028412:	00c9      	lsls	r1, r1, #3
90028414:	fb10 f006 	smulbb	r0, r0, r6
90028418:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002841c:	fb13 f305 	smulbb	r3, r3, r5
90028420:	fb14 f406 	smulbb	r4, r4, r6
90028424:	4418      	add	r0, r3
90028426:	10d3      	asrs	r3, r2, #3
90028428:	00d2      	lsls	r2, r2, #3
9002842a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002842e:	b280      	uxth	r0, r0
90028430:	b2d2      	uxtb	r2, r2
90028432:	fb13 f305 	smulbb	r3, r3, r5
90028436:	fb12 f205 	smulbb	r2, r2, r5
9002843a:	441c      	add	r4, r3
9002843c:	b2cb      	uxtb	r3, r1
9002843e:	fb13 f306 	smulbb	r3, r3, r6
90028442:	b2a4      	uxth	r4, r4
90028444:	4413      	add	r3, r2
90028446:	1c42      	adds	r2, r0, #1
90028448:	b29b      	uxth	r3, r3
9002844a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002844e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90028452:	1c58      	adds	r0, r3, #1
90028454:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028458:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002845c:	4310      	orrs	r0, r2
9002845e:	1c62      	adds	r2, r4, #1
90028460:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90028464:	0964      	lsrs	r4, r4, #5
90028466:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002846a:	4320      	orrs	r0, r4
9002846c:	bd70      	pop	{r4, r5, r6, pc}
	...

90028470 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90028470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028474:	b08f      	sub	sp, #60	; 0x3c
90028476:	461c      	mov	r4, r3
90028478:	460d      	mov	r5, r1
9002847a:	4616      	mov	r6, r2
9002847c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028480:	9004      	str	r0, [sp, #16]
90028482:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028484:	2f00      	cmp	r7, #0
90028486:	f000 80f6 	beq.w	90028676 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002848a:	6820      	ldr	r0, [r4, #0]
9002848c:	aa0a      	add	r2, sp, #40	; 0x28
9002848e:	6861      	ldr	r1, [r4, #4]
90028490:	f04f 0802 	mov.w	r8, #2
90028494:	3604      	adds	r6, #4
90028496:	c203      	stmia	r2!, {r0, r1}
90028498:	6818      	ldr	r0, [r3, #0]
9002849a:	aa0c      	add	r2, sp, #48	; 0x30
9002849c:	6859      	ldr	r1, [r3, #4]
9002849e:	c203      	stmia	r2!, {r0, r1}
900284a0:	a80a      	add	r0, sp, #40	; 0x28
900284a2:	f7ef fceb 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900284a6:	4621      	mov	r1, r4
900284a8:	a80c      	add	r0, sp, #48	; 0x30
900284aa:	f7ef fd2b 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900284ae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900284b2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
900284b6:	f002 0301 	and.w	r3, r2, #1
900284ba:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900284be:	9306      	str	r3, [sp, #24]
900284c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900284c4:	f003 0101 	and.w	r1, r3, #1
900284c8:	9105      	str	r1, [sp, #20]
900284ca:	9805      	ldr	r0, [sp, #20]
900284cc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
900284d0:	4403      	add	r3, r0
900284d2:	fb01 2303 	mla	r3, r1, r3, r2
900284d6:	fb93 f3f8 	sdiv	r3, r3, r8
900284da:	441d      	add	r5, r3
900284dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900284e0:	441a      	add	r2, r3
900284e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900284e6:	4419      	add	r1, r3
900284e8:	4b64      	ldr	r3, [pc, #400]	; (9002867c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900284ea:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900284ee:	6818      	ldr	r0, [r3, #0]
900284f0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900284f4:	6803      	ldr	r3, [r0, #0]
900284f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900284f8:	4798      	blx	r3
900284fa:	4a61      	ldr	r2, [pc, #388]	; (90028680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
900284fc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90028500:	2fff      	cmp	r7, #255	; 0xff
90028502:	8813      	ldrh	r3, [r2, #0]
90028504:	4611      	mov	r1, r2
90028506:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
9002850a:	fb03 fb0b 	mul.w	fp, r3, fp
9002850e:	fb03 a404 	mla	r4, r3, r4, sl
90028512:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028516:	d06b      	beq.n	900285f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90028518:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002851c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90028520:	9303      	str	r3, [sp, #12]
90028522:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90028526:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002852a:	9b07      	ldr	r3, [sp, #28]
9002852c:	42a3      	cmp	r3, r4
9002852e:	f240 809d 	bls.w	9002866c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90028532:	9b06      	ldr	r3, [sp, #24]
90028534:	2b00      	cmp	r3, #0
90028536:	d039      	beq.n	900285ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90028538:	782b      	ldrb	r3, [r5, #0]
9002853a:	f105 0801 	add.w	r8, r5, #1
9002853e:	f109 3bff 	add.w	fp, r9, #4294967295
90028542:	8822      	ldrh	r2, [r4, #0]
90028544:	f003 030f 	and.w	r3, r3, #15
90028548:	9804      	ldr	r0, [sp, #16]
9002854a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002854e:	9b03      	ldr	r3, [sp, #12]
90028550:	9300      	str	r3, [sp, #0]
90028552:	463b      	mov	r3, r7
90028554:	f7ff ff52 	bl	900283fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028558:	f824 0b02 	strh.w	r0, [r4], #2
9002855c:	f1bb 0f01 	cmp.w	fp, #1
90028560:	46a2      	mov	sl, r4
90028562:	f104 0404 	add.w	r4, r4, #4
90028566:	dd24      	ble.n	900285b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90028568:	f898 3000 	ldrb.w	r3, [r8]
9002856c:	f1ab 0b02 	sub.w	fp, fp, #2
90028570:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028574:	091b      	lsrs	r3, r3, #4
90028576:	9804      	ldr	r0, [sp, #16]
90028578:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002857c:	9b03      	ldr	r3, [sp, #12]
9002857e:	9300      	str	r3, [sp, #0]
90028580:	463b      	mov	r3, r7
90028582:	f7ff ff3b 	bl	900283fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90028586:	f824 0c04 	strh.w	r0, [r4, #-4]
9002858a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002858e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028592:	f003 030f 	and.w	r3, r3, #15
90028596:	9804      	ldr	r0, [sp, #16]
90028598:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002859c:	9b03      	ldr	r3, [sp, #12]
9002859e:	9300      	str	r3, [sp, #0]
900285a0:	463b      	mov	r3, r7
900285a2:	f7ff ff2b 	bl	900283fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900285a6:	f824 0c02 	strh.w	r0, [r4, #-2]
900285aa:	e7d7      	b.n	9002855c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900285ac:	46a8      	mov	r8, r5
900285ae:	46cb      	mov	fp, r9
900285b0:	e7d4      	b.n	9002855c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900285b2:	d10e      	bne.n	900285d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900285b4:	f898 3000 	ldrb.w	r3, [r8]
900285b8:	f8ba 2000 	ldrh.w	r2, [sl]
900285bc:	091b      	lsrs	r3, r3, #4
900285be:	9804      	ldr	r0, [sp, #16]
900285c0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900285c4:	9b03      	ldr	r3, [sp, #12]
900285c6:	9300      	str	r3, [sp, #0]
900285c8:	463b      	mov	r3, r7
900285ca:	f7ff ff17 	bl	900283fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900285ce:	f82a 0b02 	strh.w	r0, [sl], #2
900285d2:	9b08      	ldr	r3, [sp, #32]
900285d4:	9a05      	ldr	r2, [sp, #20]
900285d6:	881c      	ldrh	r4, [r3, #0]
900285d8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900285dc:	eba4 0409 	sub.w	r4, r4, r9
900285e0:	4413      	add	r3, r2
900285e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900285e4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900285e8:	fb93 f3f2 	sdiv	r3, r3, r2
900285ec:	441d      	add	r5, r3
900285ee:	e79c      	b.n	9002852a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900285f0:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900285f4:	45a3      	cmp	fp, r4
900285f6:	d939      	bls.n	9002866c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900285f8:	9b06      	ldr	r3, [sp, #24]
900285fa:	b1fb      	cbz	r3, 9002863c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900285fc:	782b      	ldrb	r3, [r5, #0]
900285fe:	1c6a      	adds	r2, r5, #1
90028600:	f109 30ff 	add.w	r0, r9, #4294967295
90028604:	3402      	adds	r4, #2
90028606:	f003 030f 	and.w	r3, r3, #15
9002860a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002860e:	f824 3c02 	strh.w	r3, [r4, #-2]
90028612:	2801      	cmp	r0, #1
90028614:	4623      	mov	r3, r4
90028616:	f104 0404 	add.w	r4, r4, #4
9002861a:	dd12      	ble.n	90028642 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002861c:	7813      	ldrb	r3, [r2, #0]
9002861e:	3802      	subs	r0, #2
90028620:	091b      	lsrs	r3, r3, #4
90028622:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028626:	f824 3c04 	strh.w	r3, [r4, #-4]
9002862a:	f812 3b01 	ldrb.w	r3, [r2], #1
9002862e:	f003 030f 	and.w	r3, r3, #15
90028632:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90028636:	f824 3c02 	strh.w	r3, [r4, #-2]
9002863a:	e7ea      	b.n	90028612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002863c:	462a      	mov	r2, r5
9002863e:	4648      	mov	r0, r9
90028640:	e7e7      	b.n	90028612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90028642:	d106      	bne.n	90028652 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90028644:	7812      	ldrb	r2, [r2, #0]
90028646:	3302      	adds	r3, #2
90028648:	0912      	lsrs	r2, r2, #4
9002864a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002864e:	f823 2c02 	strh.w	r2, [r3, #-2]
90028652:	880c      	ldrh	r4, [r1, #0]
90028654:	9a05      	ldr	r2, [sp, #20]
90028656:	eba4 0409 	sub.w	r4, r4, r9
9002865a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002865e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028662:	4413      	add	r3, r2
90028664:	fb93 f3f8 	sdiv	r3, r3, r8
90028668:	441d      	add	r5, r3
9002866a:	e7c3      	b.n	900285f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002866c:	4b03      	ldr	r3, [pc, #12]	; (9002867c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002866e:	6818      	ldr	r0, [r3, #0]
90028670:	6803      	ldr	r3, [r0, #0]
90028672:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028674:	4798      	blx	r3
90028676:	b00f      	add	sp, #60	; 0x3c
90028678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002867c:	24039acc 	.word	0x24039acc
90028680:	24039ac6 	.word	0x24039ac6

90028684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90028684:	b5f0      	push	{r4, r5, r6, r7, lr}
90028686:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002868a:	0a0f      	lsrs	r7, r1, #8
9002868c:	2dff      	cmp	r5, #255	; 0xff
9002868e:	d10c      	bne.n	900286aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028690:	2bff      	cmp	r3, #255	; 0xff
90028692:	d10a      	bne.n	900286aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90028694:	0948      	lsrs	r0, r1, #5
90028696:	4b25      	ldr	r3, [pc, #148]	; (9002872c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90028698:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002869c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900286a0:	403b      	ands	r3, r7
900286a2:	4318      	orrs	r0, r3
900286a4:	4308      	orrs	r0, r1
900286a6:	b280      	uxth	r0, r0
900286a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900286aa:	fb15 f503 	smulbb	r5, r5, r3
900286ae:	1214      	asrs	r4, r2, #8
900286b0:	10d6      	asrs	r6, r2, #3
900286b2:	b2ab      	uxth	r3, r5
900286b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900286b8:	00d0      	lsls	r0, r2, #3
900286ba:	f3c1 4207 	ubfx	r2, r1, #16, #8
900286be:	1c5d      	adds	r5, r3, #1
900286c0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900286c4:	b2c0      	uxtb	r0, r0
900286c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900286ca:	eb05 2513 	add.w	r5, r5, r3, lsr #8
900286ce:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900286d2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900286d6:	fa1f fc85 	uxth.w	ip, r5
900286da:	43ed      	mvns	r5, r5
900286dc:	fb12 f20c 	smulbb	r2, r2, ip
900286e0:	b2eb      	uxtb	r3, r5
900286e2:	b2fd      	uxtb	r5, r7
900286e4:	fb04 2403 	mla	r4, r4, r3, r2
900286e8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900286ec:	fb15 f50c 	smulbb	r5, r5, ip
900286f0:	b2c8      	uxtb	r0, r1
900286f2:	b2a4      	uxth	r4, r4
900286f4:	fb10 f00c 	smulbb	r0, r0, ip
900286f8:	fb06 5503 	mla	r5, r6, r3, r5
900286fc:	fb02 0003 	mla	r0, r2, r3, r0
90028700:	b2ad      	uxth	r5, r5
90028702:	b283      	uxth	r3, r0
90028704:	1c60      	adds	r0, r4, #1
90028706:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002870a:	1c58      	adds	r0, r3, #1
9002870c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028710:	1c6b      	adds	r3, r5, #1
90028712:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90028716:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002871a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002871e:	096d      	lsrs	r5, r5, #5
90028720:	4320      	orrs	r0, r4
90028722:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90028726:	4328      	orrs	r0, r5
90028728:	e7be      	b.n	900286a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002872a:	bf00      	nop
9002872c:	00fff800 	.word	0x00fff800

90028730 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90028730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028734:	461c      	mov	r4, r3
90028736:	b08d      	sub	sp, #52	; 0x34
90028738:	460d      	mov	r5, r1
9002873a:	4616      	mov	r6, r2
9002873c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002873e:	4680      	mov	r8, r0
90028740:	6861      	ldr	r1, [r4, #4]
90028742:	aa08      	add	r2, sp, #32
90028744:	6820      	ldr	r0, [r4, #0]
90028746:	f04f 0a02 	mov.w	sl, #2
9002874a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002874e:	3604      	adds	r6, #4
90028750:	c203      	stmia	r2!, {r0, r1}
90028752:	6818      	ldr	r0, [r3, #0]
90028754:	aa0a      	add	r2, sp, #40	; 0x28
90028756:	6859      	ldr	r1, [r3, #4]
90028758:	c203      	stmia	r2!, {r0, r1}
9002875a:	a808      	add	r0, sp, #32
9002875c:	f7ef fb8e 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90028760:	4621      	mov	r1, r4
90028762:	a80a      	add	r0, sp, #40	; 0x28
90028764:	f7ef fbce 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028768:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002876c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90028770:	f002 0301 	and.w	r3, r2, #1
90028774:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90028778:	9303      	str	r3, [sp, #12]
9002877a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002877e:	f003 0101 	and.w	r1, r3, #1
90028782:	9102      	str	r1, [sp, #8]
90028784:	9802      	ldr	r0, [sp, #8]
90028786:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002878a:	4403      	add	r3, r0
9002878c:	fb01 2303 	mla	r3, r1, r3, r2
90028790:	fb93 f3fa 	sdiv	r3, r3, sl
90028794:	441d      	add	r5, r3
90028796:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002879a:	441a      	add	r2, r3
9002879c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
900287a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900287a4:	4419      	add	r1, r3
900287a6:	4a3e      	ldr	r2, [pc, #248]	; (900288a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
900287a8:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
900287ac:	6810      	ldr	r0, [r2, #0]
900287ae:	9205      	str	r2, [sp, #20]
900287b0:	6803      	ldr	r3, [r0, #0]
900287b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900287b4:	4798      	blx	r3
900287b6:	4b3b      	ldr	r3, [pc, #236]	; (900288a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
900287b8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
900287bc:	8819      	ldrh	r1, [r3, #0]
900287be:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
900287c2:	434f      	muls	r7, r1
900287c4:	fb01 c404 	mla	r4, r1, r4, ip
900287c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900287cc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
900287d0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
900287d4:	9204      	str	r2, [sp, #16]
900287d6:	9b04      	ldr	r3, [sp, #16]
900287d8:	429c      	cmp	r4, r3
900287da:	d258      	bcs.n	9002888e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
900287dc:	9b03      	ldr	r3, [sp, #12]
900287de:	2b00      	cmp	r3, #0
900287e0:	d034      	beq.n	9002884c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
900287e2:	782b      	ldrb	r3, [r5, #0]
900287e4:	1c6f      	adds	r7, r5, #1
900287e6:	f003 030f 	and.w	r3, r3, #15
900287ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900287ee:	0e0b      	lsrs	r3, r1, #24
900287f0:	d006      	beq.n	90028800 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
900287f2:	8822      	ldrh	r2, [r4, #0]
900287f4:	4640      	mov	r0, r8
900287f6:	9300      	str	r3, [sp, #0]
900287f8:	464b      	mov	r3, r9
900287fa:	f7ff ff43 	bl	90028684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900287fe:	8020      	strh	r0, [r4, #0]
90028800:	3402      	adds	r4, #2
90028802:	f10b 3aff 	add.w	sl, fp, #4294967295
90028806:	f1ba 0f01 	cmp.w	sl, #1
9002880a:	dd22      	ble.n	90028852 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002880c:	783b      	ldrb	r3, [r7, #0]
9002880e:	091b      	lsrs	r3, r3, #4
90028810:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028814:	0e0b      	lsrs	r3, r1, #24
90028816:	d006      	beq.n	90028826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90028818:	8822      	ldrh	r2, [r4, #0]
9002881a:	4640      	mov	r0, r8
9002881c:	9300      	str	r3, [sp, #0]
9002881e:	464b      	mov	r3, r9
90028820:	f7ff ff30 	bl	90028684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028824:	8020      	strh	r0, [r4, #0]
90028826:	f817 3b01 	ldrb.w	r3, [r7], #1
9002882a:	f003 030f 	and.w	r3, r3, #15
9002882e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90028832:	0e0b      	lsrs	r3, r1, #24
90028834:	d006      	beq.n	90028844 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90028836:	8862      	ldrh	r2, [r4, #2]
90028838:	4640      	mov	r0, r8
9002883a:	9300      	str	r3, [sp, #0]
9002883c:	464b      	mov	r3, r9
9002883e:	f7ff ff21 	bl	90028684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90028842:	8060      	strh	r0, [r4, #2]
90028844:	3404      	adds	r4, #4
90028846:	f1aa 0a02 	sub.w	sl, sl, #2
9002884a:	e7dc      	b.n	90028806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002884c:	462f      	mov	r7, r5
9002884e:	46da      	mov	sl, fp
90028850:	e7d9      	b.n	90028806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90028852:	d10d      	bne.n	90028870 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90028854:	783b      	ldrb	r3, [r7, #0]
90028856:	091b      	lsrs	r3, r3, #4
90028858:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002885c:	0e0b      	lsrs	r3, r1, #24
9002885e:	d006      	beq.n	9002886e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90028860:	8822      	ldrh	r2, [r4, #0]
90028862:	4640      	mov	r0, r8
90028864:	9300      	str	r3, [sp, #0]
90028866:	464b      	mov	r3, r9
90028868:	f7ff ff0c 	bl	90028684 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002886c:	8020      	strh	r0, [r4, #0]
9002886e:	3402      	adds	r4, #2
90028870:	9b06      	ldr	r3, [sp, #24]
90028872:	9a02      	ldr	r2, [sp, #8]
90028874:	881b      	ldrh	r3, [r3, #0]
90028876:	eba3 030b 	sub.w	r3, r3, fp
9002887a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002887e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90028882:	4413      	add	r3, r2
90028884:	9a07      	ldr	r2, [sp, #28]
90028886:	fb93 f3f2 	sdiv	r3, r3, r2
9002888a:	441d      	add	r5, r3
9002888c:	e7a3      	b.n	900287d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002888e:	9b05      	ldr	r3, [sp, #20]
90028890:	6818      	ldr	r0, [r3, #0]
90028892:	6803      	ldr	r3, [r0, #0]
90028894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028896:	4798      	blx	r3
90028898:	b00d      	add	sp, #52	; 0x34
9002889a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002889e:	bf00      	nop
900288a0:	24039acc 	.word	0x24039acc
900288a4:	24039ac6 	.word	0x24039ac6

900288a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
900288a8:	b570      	push	{r4, r5, r6, lr}
900288aa:	1214      	asrs	r4, r2, #8
900288ac:	788d      	ldrb	r5, [r1, #2]
900288ae:	f89d 6010 	ldrb.w	r6, [sp, #16]
900288b2:	10d0      	asrs	r0, r2, #3
900288b4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900288b8:	00d2      	lsls	r2, r2, #3
900288ba:	fb15 f503 	smulbb	r5, r5, r3
900288be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900288c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900288c6:	b2d2      	uxtb	r2, r2
900288c8:	fb04 5506 	mla	r5, r4, r6, r5
900288cc:	784c      	ldrb	r4, [r1, #1]
900288ce:	7809      	ldrb	r1, [r1, #0]
900288d0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
900288d4:	fb14 f403 	smulbb	r4, r4, r3
900288d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900288dc:	fb11 f303 	smulbb	r3, r1, r3
900288e0:	b2ad      	uxth	r5, r5
900288e2:	fb00 4406 	mla	r4, r0, r6, r4
900288e6:	fb02 3306 	mla	r3, r2, r6, r3
900288ea:	1c68      	adds	r0, r5, #1
900288ec:	b2a4      	uxth	r4, r4
900288ee:	b29b      	uxth	r3, r3
900288f0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
900288f4:	1c62      	adds	r2, r4, #1
900288f6:	1c58      	adds	r0, r3, #1
900288f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900288fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90028900:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90028904:	0964      	lsrs	r4, r4, #5
90028906:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002890a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002890e:	4328      	orrs	r0, r5
90028910:	4320      	orrs	r0, r4
90028912:	bd70      	pop	{r4, r5, r6, pc}

90028914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90028914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028918:	b08f      	sub	sp, #60	; 0x3c
9002891a:	461c      	mov	r4, r3
9002891c:	4682      	mov	sl, r0
9002891e:	460e      	mov	r6, r1
90028920:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90028924:	4615      	mov	r5, r2
90028926:	9b18      	ldr	r3, [sp, #96]	; 0x60
90028928:	2f00      	cmp	r7, #0
9002892a:	f000 8141 	beq.w	90028bb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002892e:	6820      	ldr	r0, [r4, #0]
90028930:	aa0a      	add	r2, sp, #40	; 0x28
90028932:	6861      	ldr	r1, [r4, #4]
90028934:	f04f 0802 	mov.w	r8, #2
90028938:	3504      	adds	r5, #4
9002893a:	c203      	stmia	r2!, {r0, r1}
9002893c:	6818      	ldr	r0, [r3, #0]
9002893e:	aa0c      	add	r2, sp, #48	; 0x30
90028940:	6859      	ldr	r1, [r3, #4]
90028942:	c203      	stmia	r2!, {r0, r1}
90028944:	a80a      	add	r0, sp, #40	; 0x28
90028946:	f7ef fa99 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002894a:	4621      	mov	r1, r4
9002894c:	a80c      	add	r0, sp, #48	; 0x30
9002894e:	f7ef fad9 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028952:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90028956:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
9002895a:	f002 0301 	and.w	r3, r2, #1
9002895e:	9306      	str	r3, [sp, #24]
90028960:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028964:	f003 0101 	and.w	r1, r3, #1
90028968:	9105      	str	r1, [sp, #20]
9002896a:	9805      	ldr	r0, [sp, #20]
9002896c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90028970:	4403      	add	r3, r0
90028972:	fb01 2303 	mla	r3, r1, r3, r2
90028976:	fb93 f3f8 	sdiv	r3, r3, r8
9002897a:	441e      	add	r6, r3
9002897c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90028980:	441a      	add	r2, r3
90028982:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90028986:	4419      	add	r1, r3
90028988:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002898c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90028990:	9303      	str	r3, [sp, #12]
90028992:	4b89      	ldr	r3, [pc, #548]	; (90028bb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028994:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90028998:	6818      	ldr	r0, [r3, #0]
9002899a:	6803      	ldr	r3, [r0, #0]
9002899c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002899e:	4798      	blx	r3
900289a0:	4a86      	ldr	r2, [pc, #536]	; (90028bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
900289a2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
900289a6:	2fff      	cmp	r7, #255	; 0xff
900289a8:	8813      	ldrh	r3, [r2, #0]
900289aa:	4694      	mov	ip, r2
900289ac:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
900289b0:	fb03 9404 	mla	r4, r3, r4, r9
900289b4:	fb03 f30b 	mul.w	r3, r3, fp
900289b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900289bc:	d071      	beq.n	90028aa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
900289be:	43f9      	mvns	r1, r7
900289c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900289c4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900289c8:	b2c9      	uxtb	r1, r1
900289ca:	e9cd 3207 	strd	r3, r2, [sp, #28]
900289ce:	9104      	str	r1, [sp, #16]
900289d0:	9b07      	ldr	r3, [sp, #28]
900289d2:	42a3      	cmp	r3, r4
900289d4:	f240 80e7 	bls.w	90028ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900289d8:	9b06      	ldr	r3, [sp, #24]
900289da:	2b00      	cmp	r3, #0
900289dc:	d03d      	beq.n	90028a5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900289de:	7831      	ldrb	r1, [r6, #0]
900289e0:	4650      	mov	r0, sl
900289e2:	9b04      	ldr	r3, [sp, #16]
900289e4:	f106 0801 	add.w	r8, r6, #1
900289e8:	f001 010f 	and.w	r1, r1, #15
900289ec:	8822      	ldrh	r2, [r4, #0]
900289ee:	9300      	str	r3, [sp, #0]
900289f0:	463b      	mov	r3, r7
900289f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900289f6:	4429      	add	r1, r5
900289f8:	f7ff ff56 	bl	900288a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900289fc:	9b03      	ldr	r3, [sp, #12]
900289fe:	f824 0b02 	strh.w	r0, [r4], #2
90028a02:	f103 3bff 	add.w	fp, r3, #4294967295
90028a06:	f1bb 0f01 	cmp.w	fp, #1
90028a0a:	46a1      	mov	r9, r4
90028a0c:	f104 0404 	add.w	r4, r4, #4
90028a10:	dd27      	ble.n	90028a62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90028a12:	f898 1000 	ldrb.w	r1, [r8]
90028a16:	4650      	mov	r0, sl
90028a18:	9b04      	ldr	r3, [sp, #16]
90028a1a:	f1ab 0b02 	sub.w	fp, fp, #2
90028a1e:	0909      	lsrs	r1, r1, #4
90028a20:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90028a24:	9300      	str	r3, [sp, #0]
90028a26:	463b      	mov	r3, r7
90028a28:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028a2c:	4429      	add	r1, r5
90028a2e:	f7ff ff3b 	bl	900288a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028a32:	f824 0c04 	strh.w	r0, [r4, #-4]
90028a36:	f818 1b01 	ldrb.w	r1, [r8], #1
90028a3a:	4650      	mov	r0, sl
90028a3c:	9b04      	ldr	r3, [sp, #16]
90028a3e:	f001 010f 	and.w	r1, r1, #15
90028a42:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90028a46:	9300      	str	r3, [sp, #0]
90028a48:	463b      	mov	r3, r7
90028a4a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028a4e:	4429      	add	r1, r5
90028a50:	f7ff ff2a 	bl	900288a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028a54:	f824 0c02 	strh.w	r0, [r4, #-2]
90028a58:	e7d5      	b.n	90028a06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028a5a:	46b0      	mov	r8, r6
90028a5c:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028a60:	e7d1      	b.n	90028a06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90028a62:	d10f      	bne.n	90028a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90028a64:	f898 1000 	ldrb.w	r1, [r8]
90028a68:	4650      	mov	r0, sl
90028a6a:	9b04      	ldr	r3, [sp, #16]
90028a6c:	0909      	lsrs	r1, r1, #4
90028a6e:	f8b9 2000 	ldrh.w	r2, [r9]
90028a72:	9300      	str	r3, [sp, #0]
90028a74:	463b      	mov	r3, r7
90028a76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028a7a:	4429      	add	r1, r5
90028a7c:	f7ff ff14 	bl	900288a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028a80:	f829 0b02 	strh.w	r0, [r9], #2
90028a84:	9b08      	ldr	r3, [sp, #32]
90028a86:	9a05      	ldr	r2, [sp, #20]
90028a88:	881c      	ldrh	r4, [r3, #0]
90028a8a:	9b03      	ldr	r3, [sp, #12]
90028a8c:	1ae4      	subs	r4, r4, r3
90028a8e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90028a92:	4413      	add	r3, r2
90028a94:	9a09      	ldr	r2, [sp, #36]	; 0x24
90028a96:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028a9a:	fb93 f3f2 	sdiv	r3, r3, r2
90028a9e:	441e      	add	r6, r3
90028aa0:	e796      	b.n	900289d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90028aa2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90028aa6:	4f46      	ldr	r7, [pc, #280]	; (90028bc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028aa8:	42a3      	cmp	r3, r4
90028aaa:	d97c      	bls.n	90028ba6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028aac:	9a06      	ldr	r2, [sp, #24]
90028aae:	2a00      	cmp	r2, #0
90028ab0:	d054      	beq.n	90028b5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90028ab2:	7830      	ldrb	r0, [r6, #0]
90028ab4:	1c71      	adds	r1, r6, #1
90028ab6:	f000 000f 	and.w	r0, r0, #15
90028aba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028abe:	eb05 0e00 	add.w	lr, r5, r0
90028ac2:	5c28      	ldrb	r0, [r5, r0]
90028ac4:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028ac8:	f89e e001 	ldrb.w	lr, [lr, #1]
90028acc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028ad0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90028ad4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90028ad8:	ea42 020e 	orr.w	r2, r2, lr
90028adc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028ae0:	f824 2b02 	strh.w	r2, [r4], #2
90028ae4:	9a03      	ldr	r2, [sp, #12]
90028ae6:	f102 3eff 	add.w	lr, r2, #4294967295
90028aea:	f1be 0f01 	cmp.w	lr, #1
90028aee:	4620      	mov	r0, r4
90028af0:	f104 0404 	add.w	r4, r4, #4
90028af4:	dd36      	ble.n	90028b64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90028af6:	7808      	ldrb	r0, [r1, #0]
90028af8:	f1ae 0e02 	sub.w	lr, lr, #2
90028afc:	0900      	lsrs	r0, r0, #4
90028afe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028b02:	eb05 0a00 	add.w	sl, r5, r0
90028b06:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028b0a:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028b0e:	00d2      	lsls	r2, r2, #3
90028b10:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028b14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028b18:	ea49 0202 	orr.w	r2, r9, r2
90028b1c:	f815 9000 	ldrb.w	r9, [r5, r0]
90028b20:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028b24:	f824 2c04 	strh.w	r2, [r4, #-4]
90028b28:	f811 0b01 	ldrb.w	r0, [r1], #1
90028b2c:	f000 000f 	and.w	r0, r0, #15
90028b30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028b34:	eb05 0a00 	add.w	sl, r5, r0
90028b38:	f89a 2001 	ldrb.w	r2, [sl, #1]
90028b3c:	f89a 9002 	ldrb.w	r9, [sl, #2]
90028b40:	00d2      	lsls	r2, r2, #3
90028b42:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90028b46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90028b4a:	ea49 0202 	orr.w	r2, r9, r2
90028b4e:	f815 9000 	ldrb.w	r9, [r5, r0]
90028b52:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90028b56:	f824 2c02 	strh.w	r2, [r4, #-2]
90028b5a:	e7c6      	b.n	90028aea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028b5c:	4631      	mov	r1, r6
90028b5e:	f8dd e00c 	ldr.w	lr, [sp, #12]
90028b62:	e7c2      	b.n	90028aea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90028b64:	d111      	bne.n	90028b8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90028b66:	7809      	ldrb	r1, [r1, #0]
90028b68:	0909      	lsrs	r1, r1, #4
90028b6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028b6e:	186c      	adds	r4, r5, r1
90028b70:	5c69      	ldrb	r1, [r5, r1]
90028b72:	78a2      	ldrb	r2, [r4, #2]
90028b74:	7864      	ldrb	r4, [r4, #1]
90028b76:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028b7a:	00e4      	lsls	r4, r4, #3
90028b7c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90028b80:	4322      	orrs	r2, r4
90028b82:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90028b86:	f820 2b02 	strh.w	r2, [r0], #2
90028b8a:	9a03      	ldr	r2, [sp, #12]
90028b8c:	f8bc 4000 	ldrh.w	r4, [ip]
90028b90:	9905      	ldr	r1, [sp, #20]
90028b92:	1aa4      	subs	r4, r4, r2
90028b94:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90028b98:	440a      	add	r2, r1
90028b9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028b9e:	fb92 f2f8 	sdiv	r2, r2, r8
90028ba2:	4416      	add	r6, r2
90028ba4:	e780      	b.n	90028aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90028ba6:	4b04      	ldr	r3, [pc, #16]	; (90028bb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028ba8:	6818      	ldr	r0, [r3, #0]
90028baa:	6803      	ldr	r3, [r0, #0]
90028bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90028bae:	4798      	blx	r3
90028bb0:	b00f      	add	sp, #60	; 0x3c
90028bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028bb6:	bf00      	nop
90028bb8:	24039acc 	.word	0x24039acc
90028bbc:	24039ac6 	.word	0x24039ac6
90028bc0:	fffff800 	.word	0xfffff800

90028bc4 <CRC_Lock>:
90028bc4:	4a20      	ldr	r2, [pc, #128]	; (90028c48 <CRC_Lock+0x84>)
90028bc6:	b530      	push	{r4, r5, lr}
90028bc8:	6813      	ldr	r3, [r2, #0]
90028bca:	f64f 74f0 	movw	r4, #65520	; 0xfff0
90028bce:	f24c 2540 	movw	r5, #49728	; 0xc240
90028bd2:	f023 0301 	bic.w	r3, r3, #1
90028bd6:	6013      	str	r3, [r2, #0]
90028bd8:	4b1c      	ldr	r3, [pc, #112]	; (90028c4c <CRC_Lock+0x88>)
90028bda:	681a      	ldr	r2, [r3, #0]
90028bdc:	4022      	ands	r2, r4
90028bde:	42aa      	cmp	r2, r5
90028be0:	d005      	beq.n	90028bee <CRC_Lock+0x2a>
90028be2:	681b      	ldr	r3, [r3, #0]
90028be4:	f24c 2270 	movw	r2, #49776	; 0xc270
90028be8:	4023      	ands	r3, r4
90028bea:	4293      	cmp	r3, r2
90028bec:	d124      	bne.n	90028c38 <CRC_Lock+0x74>
90028bee:	4b18      	ldr	r3, [pc, #96]	; (90028c50 <CRC_Lock+0x8c>)
90028bf0:	681b      	ldr	r3, [r3, #0]
90028bf2:	bb0b      	cbnz	r3, 90028c38 <CRC_Lock+0x74>
90028bf4:	4b17      	ldr	r3, [pc, #92]	; (90028c54 <CRC_Lock+0x90>)
90028bf6:	681a      	ldr	r2, [r3, #0]
90028bf8:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028bfc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90028c00:	d00d      	beq.n	90028c1e <CRC_Lock+0x5a>
90028c02:	681a      	ldr	r2, [r3, #0]
90028c04:	f240 4483 	movw	r4, #1155	; 0x483
90028c08:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028c0c:	42a2      	cmp	r2, r4
90028c0e:	d006      	beq.n	90028c1e <CRC_Lock+0x5a>
90028c10:	681b      	ldr	r3, [r3, #0]
90028c12:	f240 4285 	movw	r2, #1157	; 0x485
90028c16:	f3c3 030b 	ubfx	r3, r3, #0, #12
90028c1a:	4293      	cmp	r3, r2
90028c1c:	d10c      	bne.n	90028c38 <CRC_Lock+0x74>
90028c1e:	4b0e      	ldr	r3, [pc, #56]	; (90028c58 <CRC_Lock+0x94>)
90028c20:	2201      	movs	r2, #1
90028c22:	601a      	str	r2, [r3, #0]
90028c24:	681a      	ldr	r2, [r3, #0]
90028c26:	2a00      	cmp	r2, #0
90028c28:	d1fc      	bne.n	90028c24 <CRC_Lock+0x60>
90028c2a:	4b0c      	ldr	r3, [pc, #48]	; (90028c5c <CRC_Lock+0x98>)
90028c2c:	6018      	str	r0, [r3, #0]
90028c2e:	6818      	ldr	r0, [r3, #0]
90028c30:	1a43      	subs	r3, r0, r1
90028c32:	4258      	negs	r0, r3
90028c34:	4158      	adcs	r0, r3
90028c36:	bd30      	pop	{r4, r5, pc}
90028c38:	4b09      	ldr	r3, [pc, #36]	; (90028c60 <CRC_Lock+0x9c>)
90028c3a:	2201      	movs	r2, #1
90028c3c:	601a      	str	r2, [r3, #0]
90028c3e:	681a      	ldr	r2, [r3, #0]
90028c40:	2a00      	cmp	r2, #0
90028c42:	d1fc      	bne.n	90028c3e <CRC_Lock+0x7a>
90028c44:	4b07      	ldr	r3, [pc, #28]	; (90028c64 <CRC_Lock+0xa0>)
90028c46:	e7f1      	b.n	90028c2c <CRC_Lock+0x68>
90028c48:	e0002000 	.word	0xe0002000
90028c4c:	e000ed00 	.word	0xe000ed00
90028c50:	e0042000 	.word	0xe0042000
90028c54:	5c001000 	.word	0x5c001000
90028c58:	58024c08 	.word	0x58024c08
90028c5c:	58024c00 	.word	0x58024c00
90028c60:	40023008 	.word	0x40023008
90028c64:	40023000 	.word	0x40023000

90028c68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028c68:	6101      	str	r1, [r0, #16]
90028c6a:	4770      	bx	lr

90028c6c <_ZN8touchgfx8Gestures4tickEv>:
90028c6c:	7b83      	ldrb	r3, [r0, #14]
90028c6e:	b14b      	cbz	r3, 90028c84 <_ZN8touchgfx8Gestures4tickEv+0x18>
90028c70:	8903      	ldrh	r3, [r0, #8]
90028c72:	3301      	adds	r3, #1
90028c74:	b29b      	uxth	r3, r3
90028c76:	2b07      	cmp	r3, #7
90028c78:	8103      	strh	r3, [r0, #8]
90028c7a:	bf81      	itttt	hi
90028c7c:	2300      	movhi	r3, #0
90028c7e:	8143      	strhhi	r3, [r0, #10]
90028c80:	8183      	strhhi	r3, [r0, #12]
90028c82:	7383      	strbhi	r3, [r0, #14]
90028c84:	4770      	bx	lr
	...

90028c88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028c88:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028c8c:	4698      	mov	r8, r3
90028c8e:	8883      	ldrh	r3, [r0, #4]
90028c90:	4604      	mov	r4, r0
90028c92:	4617      	mov	r7, r2
90028c94:	f8ad 3006 	strh.w	r3, [sp, #6]
90028c98:	eba8 0303 	sub.w	r3, r8, r3
90028c9c:	4a19      	ldr	r2, [pc, #100]	; (90028d04 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028c9e:	460e      	mov	r6, r1
90028ca0:	b21b      	sxth	r3, r3
90028ca2:	88c1      	ldrh	r1, [r0, #6]
90028ca4:	9200      	str	r2, [sp, #0]
90028ca6:	2000      	movs	r0, #0
90028ca8:	2b00      	cmp	r3, #0
90028caa:	8aa2      	ldrh	r2, [r4, #20]
90028cac:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90028cb0:	bfb8      	it	lt
90028cb2:	425b      	neglt	r3, r3
90028cb4:	f88d 0004 	strb.w	r0, [sp, #4]
90028cb8:	f8ad 1008 	strh.w	r1, [sp, #8]
90028cbc:	b21b      	sxth	r3, r3
90028cbe:	f8ad 800a 	strh.w	r8, [sp, #10]
90028cc2:	f8ad 500c 	strh.w	r5, [sp, #12]
90028cc6:	4293      	cmp	r3, r2
90028cc8:	dc07      	bgt.n	90028cda <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90028cca:	1a69      	subs	r1, r5, r1
90028ccc:	b209      	sxth	r1, r1
90028cce:	2900      	cmp	r1, #0
90028cd0:	bfb8      	it	lt
90028cd2:	4249      	neglt	r1, r1
90028cd4:	b209      	sxth	r1, r1
90028cd6:	428a      	cmp	r2, r1
90028cd8:	da10      	bge.n	90028cfc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90028cda:	6920      	ldr	r0, [r4, #16]
90028cdc:	4669      	mov	r1, sp
90028cde:	eba8 0606 	sub.w	r6, r8, r6
90028ce2:	1bef      	subs	r7, r5, r7
90028ce4:	6803      	ldr	r3, [r0, #0]
90028ce6:	685b      	ldr	r3, [r3, #4]
90028ce8:	4798      	blx	r3
90028cea:	2300      	movs	r3, #0
90028cec:	2001      	movs	r0, #1
90028cee:	8166      	strh	r6, [r4, #10]
90028cf0:	8123      	strh	r3, [r4, #8]
90028cf2:	81a7      	strh	r7, [r4, #12]
90028cf4:	f8a4 8004 	strh.w	r8, [r4, #4]
90028cf8:	80e5      	strh	r5, [r4, #6]
90028cfa:	73a0      	strb	r0, [r4, #14]
90028cfc:	b004      	add	sp, #16
90028cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028d02:	bf00      	nop
90028d04:	9002dca0 	.word	0x9002dca0

90028d08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90028d08:	b5f0      	push	{r4, r5, r6, r7, lr}
90028d0a:	461e      	mov	r6, r3
90028d0c:	1e4b      	subs	r3, r1, #1
90028d0e:	b085      	sub	sp, #20
90028d10:	4604      	mov	r4, r0
90028d12:	2b01      	cmp	r3, #1
90028d14:	460d      	mov	r5, r1
90028d16:	4617      	mov	r7, r2
90028d18:	d84b      	bhi.n	90028db2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
90028d1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90028d1e:	1cd3      	adds	r3, r2, #3
90028d20:	b29b      	uxth	r3, r3
90028d22:	2b06      	cmp	r3, #6
90028d24:	d916      	bls.n	90028d54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90028d26:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90028dc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028d2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028d2e:	f8cd c004 	str.w	ip, [sp, #4]
90028d32:	f04f 0c00 	mov.w	ip, #0
90028d36:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028d3a:	6900      	ldr	r0, [r0, #16]
90028d3c:	f8ad 100c 	strh.w	r1, [sp, #12]
90028d40:	a901      	add	r1, sp, #4
90028d42:	f88d c008 	strb.w	ip, [sp, #8]
90028d46:	f8ad 200a 	strh.w	r2, [sp, #10]
90028d4a:	f8ad 300e 	strh.w	r3, [sp, #14]
90028d4e:	6803      	ldr	r3, [r0, #0]
90028d50:	689b      	ldr	r3, [r3, #8]
90028d52:	4798      	blx	r3
90028d54:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028d58:	1cd3      	adds	r3, r2, #3
90028d5a:	b29b      	uxth	r3, r3
90028d5c:	2b06      	cmp	r3, #6
90028d5e:	d916      	bls.n	90028d8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028d60:	f8df c064 	ldr.w	ip, [pc, #100]	; 90028dc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028d64:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028d68:	f8cd c004 	str.w	ip, [sp, #4]
90028d6c:	f04f 0c01 	mov.w	ip, #1
90028d70:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028d74:	6920      	ldr	r0, [r4, #16]
90028d76:	f8ad 100c 	strh.w	r1, [sp, #12]
90028d7a:	a901      	add	r1, sp, #4
90028d7c:	f88d c008 	strb.w	ip, [sp, #8]
90028d80:	f8ad 200a 	strh.w	r2, [sp, #10]
90028d84:	f8ad 300e 	strh.w	r3, [sp, #14]
90028d88:	6803      	ldr	r3, [r0, #0]
90028d8a:	689b      	ldr	r3, [r3, #8]
90028d8c:	4798      	blx	r3
90028d8e:	4b0d      	ldr	r3, [pc, #52]	; (90028dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028d90:	a901      	add	r1, sp, #4
90028d92:	6920      	ldr	r0, [r4, #16]
90028d94:	9301      	str	r3, [sp, #4]
90028d96:	2300      	movs	r3, #0
90028d98:	f88d 5008 	strb.w	r5, [sp, #8]
90028d9c:	f8ad 700a 	strh.w	r7, [sp, #10]
90028da0:	f8ad 600c 	strh.w	r6, [sp, #12]
90028da4:	f8ad 300e 	strh.w	r3, [sp, #14]
90028da8:	6803      	ldr	r3, [r0, #0]
90028daa:	681b      	ldr	r3, [r3, #0]
90028dac:	4798      	blx	r3
90028dae:	b005      	add	sp, #20
90028db0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028db2:	2900      	cmp	r1, #0
90028db4:	d1eb      	bne.n	90028d8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028db6:	80a2      	strh	r2, [r4, #4]
90028db8:	80c6      	strh	r6, [r0, #6]
90028dba:	60a1      	str	r1, [r4, #8]
90028dbc:	81a1      	strh	r1, [r4, #12]
90028dbe:	73a1      	strb	r1, [r4, #14]
90028dc0:	e7e5      	b.n	90028d8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028dc2:	bf00      	nop
90028dc4:	9002dc8c 	.word	0x9002dc8c
90028dc8:	9002dcb4 	.word	0x9002dcb4

90028dcc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90028dcc:	10c9      	asrs	r1, r1, #3
90028dce:	2900      	cmp	r1, #0
90028dd0:	bfb8      	it	lt
90028dd2:	4249      	neglt	r1, r1
90028dd4:	2801      	cmp	r0, #1
90028dd6:	d108      	bne.n	90028dea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028dd8:	f3c1 0008 	ubfx	r0, r1, #0, #9
90028ddc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90028de0:	4601      	mov	r1, r0
90028de2:	dd02      	ble.n	90028dea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90028de4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90028de8:	4770      	bx	lr
90028dea:	29ff      	cmp	r1, #255	; 0xff
90028dec:	bfa8      	it	ge
90028dee:	21ff      	movge	r1, #255	; 0xff
90028df0:	4608      	mov	r0, r1
90028df2:	4770      	bx	lr

90028df4 <_ZN8touchgfx10Rasterizer6lineToEii>:
90028df4:	b410      	push	{r4}
90028df6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90028dfa:	429c      	cmp	r4, r3
90028dfc:	d803      	bhi.n	90028e06 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90028dfe:	f85d 4b04 	ldr.w	r4, [sp], #4
90028e02:	f7ed bb45 	b.w	90016490 <_ZN8touchgfx7Outline6lineToEii>
90028e06:	f85d 4b04 	ldr.w	r4, [sp], #4
90028e0a:	4770      	bx	lr

90028e0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90028e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028e10:	b08b      	sub	sp, #44	; 0x2c
90028e12:	4606      	mov	r6, r0
90028e14:	468a      	mov	sl, r1
90028e16:	e9cd 2306 	strd	r2, r3, [sp, #24]
90028e1a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90028e1e:	9308      	str	r3, [sp, #32]
90028e20:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90028e24:	9309      	str	r3, [sp, #36]	; 0x24
90028e26:	f7ed fc9e 	bl	90016766 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90028e2a:	68b5      	ldr	r5, [r6, #8]
90028e2c:	4604      	mov	r4, r0
90028e2e:	2d00      	cmp	r5, #0
90028e30:	d044      	beq.n	90028ebc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028e32:	6873      	ldr	r3, [r6, #4]
90028e34:	42ab      	cmp	r3, r5
90028e36:	d33d      	bcc.n	90028eb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028e38:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028e3c:	f04f 0800 	mov.w	r8, #0
90028e40:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90028e44:	eb02 0b03 	add.w	fp, r2, r3
90028e48:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028e4c:	fb02 1203 	mla	r2, r2, r3, r1
90028e50:	9205      	str	r2, [sp, #20]
90028e52:	1e6a      	subs	r2, r5, #1
90028e54:	9204      	str	r2, [sp, #16]
90028e56:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028e5a:	f9b4 7000 	ldrsh.w	r7, [r4]
90028e5e:	454b      	cmp	r3, r9
90028e60:	463a      	mov	r2, r7
90028e62:	d008      	beq.n	90028e76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90028e64:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90028e68:	eb03 0b09 	add.w	fp, r3, r9
90028e6c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028e70:	fb03 1309 	mla	r3, r3, r9, r1
90028e74:	9305      	str	r3, [sp, #20]
90028e76:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028e7a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028e7e:	4498      	add	r8, r3
90028e80:	9b04      	ldr	r3, [sp, #16]
90028e82:	3b01      	subs	r3, #1
90028e84:	9304      	str	r3, [sp, #16]
90028e86:	9b04      	ldr	r3, [sp, #16]
90028e88:	3301      	adds	r3, #1
90028e8a:	d015      	beq.n	90028eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028e8c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028e90:	42bb      	cmp	r3, r7
90028e92:	d117      	bne.n	90028ec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90028e94:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028e98:	9b04      	ldr	r3, [sp, #16]
90028e9a:	4548      	cmp	r0, r9
90028e9c:	f103 33ff 	add.w	r3, r3, #4294967295
90028ea0:	d17d      	bne.n	90028f9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90028ea2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90028ea6:	4401      	add	r1, r0
90028ea8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028eac:	4480      	add	r8, r0
90028eae:	e7e9      	b.n	90028e84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028eb0:	461f      	mov	r7, r3
90028eb2:	e042      	b.n	90028f3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90028eb4:	2000      	movs	r0, #0
90028eb6:	e002      	b.n	90028ebe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028eb8:	2900      	cmp	r1, #0
90028eba:	d16d      	bne.n	90028f98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028ebc:	2001      	movs	r0, #1
90028ebe:	b00b      	add	sp, #44	; 0x2c
90028ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028ec4:	b379      	cbz	r1, 90028f26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90028ec6:	2f00      	cmp	r7, #0
90028ec8:	db29      	blt.n	90028f1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028eca:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90028ece:	42bb      	cmp	r3, r7
90028ed0:	dd25      	ble.n	90028f1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028ed2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90028ed6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90028eda:	f7ff ff77 	bl	90028dcc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90028ede:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028ee0:	fb10 f003 	smulbb	r0, r0, r3
90028ee4:	b280      	uxth	r0, r0
90028ee6:	1c41      	adds	r1, r0, #1
90028ee8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028eec:	1209      	asrs	r1, r1, #8
90028eee:	f011 0fff 	tst.w	r1, #255	; 0xff
90028ef2:	d014      	beq.n	90028f1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90028ef4:	b2c9      	uxtb	r1, r1
90028ef6:	9808      	ldr	r0, [sp, #32]
90028ef8:	b2ba      	uxth	r2, r7
90028efa:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90028efc:	9102      	str	r1, [sp, #8]
90028efe:	2101      	movs	r1, #1
90028f00:	4413      	add	r3, r2
90028f02:	4402      	add	r2, r0
90028f04:	9101      	str	r1, [sp, #4]
90028f06:	fa0f f18b 	sxth.w	r1, fp
90028f0a:	f8da 0000 	ldr.w	r0, [sl]
90028f0e:	b21b      	sxth	r3, r3
90028f10:	9100      	str	r1, [sp, #0]
90028f12:	b212      	sxth	r2, r2
90028f14:	6941      	ldr	r1, [r0, #20]
90028f16:	4650      	mov	r0, sl
90028f18:	460d      	mov	r5, r1
90028f1a:	9905      	ldr	r1, [sp, #20]
90028f1c:	47a8      	blx	r5
90028f1e:	9b04      	ldr	r3, [sp, #16]
90028f20:	1c7a      	adds	r2, r7, #1
90028f22:	3301      	adds	r3, #1
90028f24:	d0ca      	beq.n	90028ebc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028f26:	f9b4 7000 	ldrsh.w	r7, [r4]
90028f2a:	1abb      	subs	r3, r7, r2
90028f2c:	2b00      	cmp	r3, #0
90028f2e:	dd31      	ble.n	90028f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028f30:	2a00      	cmp	r2, #0
90028f32:	dabd      	bge.n	90028eb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90028f34:	2f00      	cmp	r7, #0
90028f36:	dd2d      	ble.n	90028f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028f38:	2200      	movs	r2, #0
90028f3a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90028f3e:	19d1      	adds	r1, r2, r7
90028f40:	4299      	cmp	r1, r3
90028f42:	db02      	blt.n	90028f4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90028f44:	1a9f      	subs	r7, r3, r2
90028f46:	2f00      	cmp	r7, #0
90028f48:	dd24      	ble.n	90028f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028f4a:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028f4e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90028f52:	f7ff ff3b 	bl	90028dcc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90028f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
90028f58:	fb10 f003 	smulbb	r0, r0, r3
90028f5c:	b280      	uxth	r0, r0
90028f5e:	1c41      	adds	r1, r0, #1
90028f60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90028f64:	1209      	asrs	r1, r1, #8
90028f66:	f011 0fff 	tst.w	r1, #255	; 0xff
90028f6a:	d013      	beq.n	90028f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028f6c:	b292      	uxth	r2, r2
90028f6e:	9808      	ldr	r0, [sp, #32]
90028f70:	b2c9      	uxtb	r1, r1
90028f72:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90028f74:	b23f      	sxth	r7, r7
90028f76:	4413      	add	r3, r2
90028f78:	9102      	str	r1, [sp, #8]
90028f7a:	4402      	add	r2, r0
90028f7c:	fa0f f18b 	sxth.w	r1, fp
90028f80:	f8da 0000 	ldr.w	r0, [sl]
90028f84:	b21b      	sxth	r3, r3
90028f86:	9100      	str	r1, [sp, #0]
90028f88:	b212      	sxth	r2, r2
90028f8a:	9701      	str	r7, [sp, #4]
90028f8c:	9905      	ldr	r1, [sp, #20]
90028f8e:	6947      	ldr	r7, [r0, #20]
90028f90:	4650      	mov	r0, sl
90028f92:	47b8      	blx	r7
90028f94:	464b      	mov	r3, r9
90028f96:	e75e      	b.n	90028e56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028f98:	2f00      	cmp	r7, #0
90028f9a:	da96      	bge.n	90028eca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028f9c:	e78e      	b.n	90028ebc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028f9e:	2900      	cmp	r1, #0
90028fa0:	d0f8      	beq.n	90028f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028fa2:	e790      	b.n	90028ec6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90028fa4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90028fa4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90028fa8:	4b4a      	ldr	r3, [pc, #296]	; (900290d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90028faa:	2500      	movs	r5, #0
90028fac:	f100 0620 	add.w	r6, r0, #32
90028fb0:	4604      	mov	r4, r0
90028fb2:	4690      	mov	r8, r2
90028fb4:	f100 0718 	add.w	r7, r0, #24
90028fb8:	e9c0 3100 	strd	r3, r1, [r0]
90028fbc:	e9c0 5502 	strd	r5, r5, [r0, #8]
90028fc0:	e9c0 5504 	strd	r5, r5, [r0, #16]
90028fc4:	e9c0 5506 	strd	r5, r5, [r0, #24]
90028fc8:	4630      	mov	r0, r6
90028fca:	f7ec fda7 	bl	90015b1c <_ZN8touchgfx7OutlineC1Ev>
90028fce:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
90028fd2:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90028fd6:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90028fda:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
90028fde:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
90028fe2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
90028fe6:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
90028fea:	f8d4 c004 	ldr.w	ip, [r4, #4]
90028fee:	9500      	str	r5, [sp, #0]
90028ff0:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90028ff4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
90028ff8:	f9b8 2000 	ldrsh.w	r2, [r8]
90028ffc:	f8b8 0004 	ldrh.w	r0, [r8, #4]
90029000:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
90029004:	4410      	add	r0, r2
90029006:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
9002900a:	b280      	uxth	r0, r0
9002900c:	fa0f fa80 	sxth.w	sl, r0
90029010:	45aa      	cmp	sl, r5
90029012:	dd5c      	ble.n	900290ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90029014:	4591      	cmp	r9, r2
90029016:	dd5a      	ble.n	900290ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
90029018:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
9002901c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90029020:	440b      	add	r3, r1
90029022:	b29b      	uxth	r3, r3
90029024:	b21d      	sxth	r5, r3
90029026:	2d00      	cmp	r5, #0
90029028:	dd51      	ble.n	900290ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002902a:	458e      	cmp	lr, r1
9002902c:	dd4f      	ble.n	900290ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
9002902e:	45d1      	cmp	r9, sl
90029030:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90029034:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90029038:	bfb8      	it	lt
9002903a:	fa1f f089 	uxthlt.w	r0, r9
9002903e:	45ae      	cmp	lr, r5
90029040:	f8ad 2000 	strh.w	r2, [sp]
90029044:	bfb8      	it	lt
90029046:	fa1f f38e 	uxthlt.w	r3, lr
9002904a:	1a80      	subs	r0, r0, r2
9002904c:	f8ad 1002 	strh.w	r1, [sp, #2]
90029050:	1a5b      	subs	r3, r3, r1
90029052:	f8ad 0004 	strh.w	r0, [sp, #4]
90029056:	f8ad 3006 	strh.w	r3, [sp, #6]
9002905a:	466d      	mov	r5, sp
9002905c:	e895 0003 	ldmia.w	r5, {r0, r1}
90029060:	e887 0003 	stmia.w	r7, {r0, r1}
90029064:	f8dc 3000 	ldr.w	r3, [ip]
90029068:	4660      	mov	r0, ip
9002906a:	4639      	mov	r1, r7
9002906c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002906e:	4798      	blx	r3
90029070:	6861      	ldr	r1, [r4, #4]
90029072:	4628      	mov	r0, r5
90029074:	3104      	adds	r1, #4
90029076:	f7ee ff45 	bl	90017f04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002907a:	4638      	mov	r0, r7
9002907c:	f7ee fefe 	bl	90017e7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90029080:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90029084:	f8bd 2000 	ldrh.w	r2, [sp]
90029088:	4630      	mov	r0, r6
9002908a:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
9002908e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
90029092:	f7ec fd27 	bl	90015ae4 <_ZN8touchgfx7Outline5resetEv>
90029096:	f9bd 3000 	ldrsh.w	r3, [sp]
9002909a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002909e:	4620      	mov	r0, r4
900290a0:	015b      	lsls	r3, r3, #5
900290a2:	60a3      	str	r3, [r4, #8]
900290a4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900290a8:	015b      	lsls	r3, r3, #5
900290aa:	60e3      	str	r3, [r4, #12]
900290ac:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900290b0:	015b      	lsls	r3, r3, #5
900290b2:	6123      	str	r3, [r4, #16]
900290b4:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900290b8:	015b      	lsls	r3, r3, #5
900290ba:	6163      	str	r3, [r4, #20]
900290bc:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
900290c0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
900290c4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
900290c8:	b002      	add	sp, #8
900290ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900290ce:	2300      	movs	r3, #0
900290d0:	9301      	str	r3, [sp, #4]
900290d2:	e7c2      	b.n	9002905a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
900290d4:	9002dfd8 	.word	0x9002dfd8

900290d8 <_ZN8touchgfx6Canvas5closeEv>:
900290d8:	b538      	push	{r3, r4, r5, lr}
900290da:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
900290de:	4604      	mov	r4, r0
900290e0:	b193      	cbz	r3, 90029108 <_ZN8touchgfx6Canvas5closeEv+0x30>
900290e2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
900290e6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
900290ea:	4213      	tst	r3, r2
900290ec:	d10c      	bne.n	90029108 <_ZN8touchgfx6Canvas5closeEv+0x30>
900290ee:	f100 0520 	add.w	r5, r0, #32
900290f2:	b123      	cbz	r3, 900290fe <_ZN8touchgfx6Canvas5closeEv+0x26>
900290f4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
900290f8:	4628      	mov	r0, r5
900290fa:	f7ff fe7b 	bl	90028df4 <_ZN8touchgfx10Rasterizer6lineToEii>
900290fe:	4628      	mov	r0, r5
90029100:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
90029104:	f7ff fe76 	bl	90028df4 <_ZN8touchgfx10Rasterizer6lineToEii>
90029108:	2300      	movs	r3, #0
9002910a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
9002910e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
90029112:	4298      	cmp	r0, r3
90029114:	bf34      	ite	cc
90029116:	2000      	movcc	r0, #0
90029118:	2001      	movcs	r0, #1
9002911a:	bd38      	pop	{r3, r4, r5, pc}

9002911c <_ZN8touchgfx6Canvas6renderEh>:
9002911c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90029120:	4604      	mov	r4, r0
90029122:	6840      	ldr	r0, [r0, #4]
90029124:	460d      	mov	r5, r1
90029126:	6803      	ldr	r3, [r0, #0]
90029128:	6e5b      	ldr	r3, [r3, #100]	; 0x64
9002912a:	4798      	blx	r3
9002912c:	fb10 f105 	smulbb	r1, r0, r5
90029130:	b289      	uxth	r1, r1
90029132:	1c4d      	adds	r5, r1, #1
90029134:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90029138:	122d      	asrs	r5, r5, #8
9002913a:	f000 809c 	beq.w	90029276 <_ZN8touchgfx6Canvas6renderEh+0x15a>
9002913e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
90029142:	2b00      	cmp	r3, #0
90029144:	f000 8097 	beq.w	90029276 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90029148:	4620      	mov	r0, r4
9002914a:	f7ff ffc5 	bl	900290d8 <_ZN8touchgfx6Canvas5closeEv>
9002914e:	4607      	mov	r7, r0
90029150:	2800      	cmp	r0, #0
90029152:	d048      	beq.n	900291e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
90029154:	6863      	ldr	r3, [r4, #4]
90029156:	4e49      	ldr	r6, [pc, #292]	; (9002927c <_ZN8touchgfx6Canvas6renderEh+0x160>)
90029158:	6a98      	ldr	r0, [r3, #40]	; 0x28
9002915a:	6837      	ldr	r7, [r6, #0]
9002915c:	6803      	ldr	r3, [r0, #0]
9002915e:	689b      	ldr	r3, [r3, #8]
90029160:	4798      	blx	r3
90029162:	4601      	mov	r1, r0
90029164:	4638      	mov	r0, r7
90029166:	f7ea fc8b 	bl	90013a80 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002916a:	4607      	mov	r7, r0
9002916c:	f7ea f84c 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
90029170:	6803      	ldr	r3, [r0, #0]
90029172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90029174:	4798      	blx	r3
90029176:	4680      	mov	r8, r0
90029178:	f7ea f846 	bl	90013208 <_ZN8touchgfx3HAL3lcdEv>
9002917c:	6803      	ldr	r3, [r0, #0]
9002917e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90029180:	4798      	blx	r3
90029182:	280b      	cmp	r0, #11
90029184:	d85c      	bhi.n	90029240 <_ZN8touchgfx6Canvas6renderEh+0x124>
90029186:	e8df f000 	tbb	[pc, r0]
9002918a:	5d52      	.short	0x5d52
9002918c:	325b066d 	.word	0x325b066d
90029190:	66666642 	.word	0x66666642
90029194:	6666      	.short	0x6666
90029196:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
9002919a:	2208      	movs	r2, #8
9002919c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900291a0:	fb91 f2f2 	sdiv	r2, r1, r2
900291a4:	fb08 2303 	mla	r3, r8, r3, r2
900291a8:	441f      	add	r7, r3
900291aa:	424b      	negs	r3, r1
900291ac:	f001 0107 	and.w	r1, r1, #7
900291b0:	f003 0307 	and.w	r3, r3, #7
900291b4:	bf58      	it	pl
900291b6:	4259      	negpl	r1, r3
900291b8:	b2c9      	uxtb	r1, r1
900291ba:	6860      	ldr	r0, [r4, #4]
900291bc:	b2ed      	uxtb	r5, r5
900291be:	463a      	mov	r2, r7
900291c0:	fa0f f388 	sxth.w	r3, r8
900291c4:	e9cd 1500 	strd	r1, r5, [sp]
900291c8:	6a81      	ldr	r1, [r0, #40]	; 0x28
900291ca:	f104 0020 	add.w	r0, r4, #32
900291ce:	f7ff fe1d 	bl	90028e0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
900291d2:	6863      	ldr	r3, [r4, #4]
900291d4:	4607      	mov	r7, r0
900291d6:	6a98      	ldr	r0, [r3, #40]	; 0x28
900291d8:	6803      	ldr	r3, [r0, #0]
900291da:	691b      	ldr	r3, [r3, #16]
900291dc:	4798      	blx	r3
900291de:	6830      	ldr	r0, [r6, #0]
900291e0:	6803      	ldr	r3, [r0, #0]
900291e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900291e4:	4798      	blx	r3
900291e6:	4638      	mov	r0, r7
900291e8:	b002      	add	sp, #8
900291ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900291ee:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900291f2:	2204      	movs	r2, #4
900291f4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900291f8:	fb91 f2f2 	sdiv	r2, r1, r2
900291fc:	fb08 2303 	mla	r3, r8, r3, r2
90029200:	441f      	add	r7, r3
90029202:	424b      	negs	r3, r1
90029204:	f001 0103 	and.w	r1, r1, #3
90029208:	f003 0303 	and.w	r3, r3, #3
9002920c:	e7d2      	b.n	900291b4 <_ZN8touchgfx6Canvas6renderEh+0x98>
9002920e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90029212:	2202      	movs	r2, #2
90029214:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029218:	2900      	cmp	r1, #0
9002921a:	fb91 f2f2 	sdiv	r2, r1, r2
9002921e:	f001 0101 	and.w	r1, r1, #1
90029222:	fb08 2303 	mla	r3, r8, r3, r2
90029226:	bfb8      	it	lt
90029228:	4249      	neglt	r1, r1
9002922a:	441f      	add	r7, r3
9002922c:	e7c4      	b.n	900291b8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
9002922e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029232:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90029236:	fb08 f303 	mul.w	r3, r8, r3
9002923a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002923e:	441f      	add	r7, r3
90029240:	2100      	movs	r1, #0
90029242:	e7ba      	b.n	900291ba <_ZN8touchgfx6Canvas6renderEh+0x9e>
90029244:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029248:	2103      	movs	r1, #3
9002924a:	fb08 f203 	mul.w	r2, r8, r3
9002924e:	8b23      	ldrh	r3, [r4, #24]
90029250:	fb13 2301 	smlabb	r3, r3, r1, r2
90029254:	e7f3      	b.n	9002923e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029256:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002925a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002925e:	fb08 2303 	mla	r3, r8, r3, r2
90029262:	e7ec      	b.n	9002923e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029264:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90029268:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002926c:	fb08 f303 	mul.w	r3, r8, r3
90029270:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90029274:	e7e3      	b.n	9002923e <_ZN8touchgfx6Canvas6renderEh+0x122>
90029276:	2701      	movs	r7, #1
90029278:	e7b5      	b.n	900291e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
9002927a:	bf00      	nop
9002927c:	24039acc 	.word	0x24039acc

90029280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90029280:	4b07      	ldr	r3, [pc, #28]	; (900292a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
90029282:	b510      	push	{r4, lr}
90029284:	781b      	ldrb	r3, [r3, #0]
90029286:	2b01      	cmp	r3, #1
90029288:	d108      	bne.n	9002929c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
9002928a:	6843      	ldr	r3, [r0, #4]
9002928c:	6814      	ldr	r4, [r2, #0]
9002928e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90029292:	680b      	ldr	r3, [r1, #0]
90029294:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90029298:	6013      	str	r3, [r2, #0]
9002929a:	600c      	str	r4, [r1, #0]
9002929c:	bd10      	pop	{r4, pc}
9002929e:	bf00      	nop
900292a0:	24039ac4 	.word	0x24039ac4

900292a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
900292a4:	b513      	push	{r0, r1, r4, lr}
900292a6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
900292aa:	4604      	mov	r4, r0
900292ac:	e9cd 2100 	strd	r2, r1, [sp]
900292b0:	b9a3      	cbnz	r3, 900292dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
900292b2:	466a      	mov	r2, sp
900292b4:	a901      	add	r1, sp, #4
900292b6:	4620      	mov	r0, r4
900292b8:	f7ff ffe2 	bl	90029280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900292bc:	68a3      	ldr	r3, [r4, #8]
900292be:	9901      	ldr	r1, [sp, #4]
900292c0:	9a00      	ldr	r2, [sp, #0]
900292c2:	1ac9      	subs	r1, r1, r3
900292c4:	68e3      	ldr	r3, [r4, #12]
900292c6:	1ad2      	subs	r2, r2, r3
900292c8:	9101      	str	r1, [sp, #4]
900292ca:	2a00      	cmp	r2, #0
900292cc:	9200      	str	r2, [sp, #0]
900292ce:	da0b      	bge.n	900292e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
900292d0:	2301      	movs	r3, #1
900292d2:	2900      	cmp	r1, #0
900292d4:	da0e      	bge.n	900292f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
900292d6:	f043 0304 	orr.w	r3, r3, #4
900292da:	e013      	b.n	90029304 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
900292dc:	f7ff fefc 	bl	900290d8 <_ZN8touchgfx6Canvas5closeEv>
900292e0:	2800      	cmp	r0, #0
900292e2:	d1e6      	bne.n	900292b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900292e4:	b002      	add	sp, #8
900292e6:	bd10      	pop	{r4, pc}
900292e8:	6963      	ldr	r3, [r4, #20]
900292ea:	429a      	cmp	r2, r3
900292ec:	bfac      	ite	ge
900292ee:	2302      	movge	r3, #2
900292f0:	2300      	movlt	r3, #0
900292f2:	e7ee      	b.n	900292d2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900292f4:	6920      	ldr	r0, [r4, #16]
900292f6:	4281      	cmp	r1, r0
900292f8:	bfac      	ite	ge
900292fa:	2008      	movge	r0, #8
900292fc:	2000      	movlt	r0, #0
900292fe:	4318      	orrs	r0, r3
90029300:	b2c3      	uxtb	r3, r0
90029302:	b158      	cbz	r0, 9002931c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90029304:	2200      	movs	r2, #0
90029306:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
9002930a:	9901      	ldr	r1, [sp, #4]
9002930c:	9a00      	ldr	r2, [sp, #0]
9002930e:	66a1      	str	r1, [r4, #104]	; 0x68
90029310:	66e2      	str	r2, [r4, #108]	; 0x6c
90029312:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
90029316:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
9002931a:	e7e3      	b.n	900292e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002931c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90029320:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90029324:	4298      	cmp	r0, r3
90029326:	d803      	bhi.n	90029330 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90029328:	f104 0020 	add.w	r0, r4, #32
9002932c:	f7ed f8ca 	bl	900164c4 <_ZN8touchgfx7Outline6moveToEii>
90029330:	2301      	movs	r3, #1
90029332:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90029336:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9002933a:	2300      	movs	r3, #0
9002933c:	e7e5      	b.n	9002930a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002933e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002933e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90029340:	ab02      	add	r3, sp, #8
90029342:	4604      	mov	r4, r0
90029344:	9101      	str	r1, [sp, #4]
90029346:	a901      	add	r1, sp, #4
90029348:	f843 2d08 	str.w	r2, [r3, #-8]!
9002934c:	461a      	mov	r2, r3
9002934e:	f7ff ff97 	bl	90029280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90029352:	68a3      	ldr	r3, [r4, #8]
90029354:	9901      	ldr	r1, [sp, #4]
90029356:	9a00      	ldr	r2, [sp, #0]
90029358:	1ac9      	subs	r1, r1, r3
9002935a:	68e3      	ldr	r3, [r4, #12]
9002935c:	1ad2      	subs	r2, r2, r3
9002935e:	9101      	str	r1, [sp, #4]
90029360:	2a00      	cmp	r2, #0
90029362:	9200      	str	r2, [sp, #0]
90029364:	db1c      	blt.n	900293a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90029366:	6963      	ldr	r3, [r4, #20]
90029368:	429a      	cmp	r2, r3
9002936a:	bfac      	ite	ge
9002936c:	2002      	movge	r0, #2
9002936e:	2000      	movlt	r0, #0
90029370:	2900      	cmp	r1, #0
90029372:	db17      	blt.n	900293a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90029374:	6923      	ldr	r3, [r4, #16]
90029376:	4299      	cmp	r1, r3
90029378:	bfac      	ite	ge
9002937a:	2308      	movge	r3, #8
9002937c:	2300      	movlt	r3, #0
9002937e:	4303      	orrs	r3, r0
90029380:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90029384:	b2dd      	uxtb	r5, r3
90029386:	b978      	cbnz	r0, 900293a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90029388:	f104 0020 	add.w	r0, r4, #32
9002938c:	f7ff fd32 	bl	90028df4 <_ZN8touchgfx10Rasterizer6lineToEii>
90029390:	9b01      	ldr	r3, [sp, #4]
90029392:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90029396:	65e3      	str	r3, [r4, #92]	; 0x5c
90029398:	9b00      	ldr	r3, [sp, #0]
9002939a:	6623      	str	r3, [r4, #96]	; 0x60
9002939c:	b002      	add	sp, #8
9002939e:	bd70      	pop	{r4, r5, r6, pc}
900293a0:	2001      	movs	r0, #1
900293a2:	e7e5      	b.n	90029370 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
900293a4:	2304      	movs	r3, #4
900293a6:	e7ea      	b.n	9002937e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
900293a8:	b113      	cbz	r3, 900293b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
900293aa:	ea10 0305 	ands.w	r3, r0, r5
900293ae:	d11c      	bne.n	900293ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
900293b0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
900293b4:	f104 0620 	add.w	r6, r4, #32
900293b8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
900293bc:	b98b      	cbnz	r3, 900293e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
900293be:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
900293c2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
900293c6:	4298      	cmp	r0, r3
900293c8:	d802      	bhi.n	900293d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
900293ca:	4630      	mov	r0, r6
900293cc:	f7ed f87a 	bl	900164c4 <_ZN8touchgfx7Outline6moveToEii>
900293d0:	2301      	movs	r3, #1
900293d2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900293d6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900293da:	4630      	mov	r0, r6
900293dc:	e9dd 2100 	ldrd	r2, r1, [sp]
900293e0:	e7d4      	b.n	9002938c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
900293e2:	4630      	mov	r0, r6
900293e4:	f7ff fd06 	bl	90028df4 <_ZN8touchgfx10Rasterizer6lineToEii>
900293e8:	e7f7      	b.n	900293da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
900293ea:	461d      	mov	r5, r3
900293ec:	e7d0      	b.n	90029390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

900293f0 <_ZN8touchgfx6CanvasD1Ev>:
900293f0:	4b04      	ldr	r3, [pc, #16]	; (90029404 <_ZN8touchgfx6CanvasD1Ev+0x14>)
900293f2:	b510      	push	{r4, lr}
900293f4:	4604      	mov	r4, r0
900293f6:	f840 3b20 	str.w	r3, [r0], #32
900293fa:	f7ec fb6b 	bl	90015ad4 <_ZN8touchgfx7OutlineD1Ev>
900293fe:	4620      	mov	r0, r4
90029400:	bd10      	pop	{r4, pc}
90029402:	bf00      	nop
90029404:	9002dfd8 	.word	0x9002dfd8

90029408 <_ZN8touchgfx6CanvasD0Ev>:
90029408:	b510      	push	{r4, lr}
9002940a:	4604      	mov	r4, r0
9002940c:	f7ff fff0 	bl	900293f0 <_ZN8touchgfx6CanvasD1Ev>
90029410:	2170      	movs	r1, #112	; 0x70
90029412:	4620      	mov	r0, r4
90029414:	f000 f826 	bl	90029464 <_ZdlPvj>
90029418:	4620      	mov	r0, r4
9002941a:	bd10      	pop	{r4, pc}

9002941c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
9002941c:	790b      	ldrb	r3, [r1, #4]
9002941e:	2b00      	cmp	r3, #0
90029420:	bf0c      	ite	eq
90029422:	2301      	moveq	r3, #1
90029424:	2300      	movne	r3, #0
90029426:	b570      	push	{r4, r5, r6, lr}
90029428:	4604      	mov	r4, r0
9002942a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
9002942e:	460e      	mov	r6, r1
90029430:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90029434:	d109      	bne.n	9002944a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90029436:	b14d      	cbz	r5, 9002944c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90029438:	7933      	ldrb	r3, [r6, #4]
9002943a:	2b01      	cmp	r3, #1
9002943c:	d10c      	bne.n	90029458 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002943e:	6823      	ldr	r3, [r4, #0]
90029440:	4620      	mov	r0, r4
90029442:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90029444:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90029448:	4718      	bx	r3
9002944a:	b12d      	cbz	r5, 90029458 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
9002944c:	6823      	ldr	r3, [r4, #0]
9002944e:	4620      	mov	r0, r4
90029450:	695b      	ldr	r3, [r3, #20]
90029452:	4798      	blx	r3
90029454:	2d00      	cmp	r5, #0
90029456:	d1ef      	bne.n	90029438 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90029458:	bd70      	pop	{r4, r5, r6, pc}

9002945a <__aeabi_atexit>:
9002945a:	460b      	mov	r3, r1
9002945c:	4601      	mov	r1, r0
9002945e:	4618      	mov	r0, r3
90029460:	f000 b90e 	b.w	90029680 <__cxa_atexit>

90029464 <_ZdlPvj>:
90029464:	f000 b812 	b.w	9002948c <_ZdlPv>

90029468 <__cxa_guard_acquire>:
90029468:	6803      	ldr	r3, [r0, #0]
9002946a:	07db      	lsls	r3, r3, #31
9002946c:	d406      	bmi.n	9002947c <__cxa_guard_acquire+0x14>
9002946e:	7843      	ldrb	r3, [r0, #1]
90029470:	b103      	cbz	r3, 90029474 <__cxa_guard_acquire+0xc>
90029472:	deff      	udf	#255	; 0xff
90029474:	2301      	movs	r3, #1
90029476:	7043      	strb	r3, [r0, #1]
90029478:	4618      	mov	r0, r3
9002947a:	4770      	bx	lr
9002947c:	2000      	movs	r0, #0
9002947e:	4770      	bx	lr

90029480 <__cxa_guard_release>:
90029480:	2301      	movs	r3, #1
90029482:	6003      	str	r3, [r0, #0]
90029484:	4770      	bx	lr

90029486 <__cxa_pure_virtual>:
90029486:	b508      	push	{r3, lr}
90029488:	f000 f80e 	bl	900294a8 <_ZSt9terminatev>

9002948c <_ZdlPv>:
9002948c:	f000 b844 	b.w	90029518 <free>

90029490 <_ZN10__cxxabiv111__terminateEPFvvE>:
90029490:	b508      	push	{r3, lr}
90029492:	4780      	blx	r0
90029494:	f000 f80d 	bl	900294b2 <abort>

90029498 <_ZSt13get_terminatev>:
90029498:	4b02      	ldr	r3, [pc, #8]	; (900294a4 <_ZSt13get_terminatev+0xc>)
9002949a:	6818      	ldr	r0, [r3, #0]
9002949c:	f3bf 8f5b 	dmb	ish
900294a0:	4770      	bx	lr
900294a2:	bf00      	nop
900294a4:	24000100 	.word	0x24000100

900294a8 <_ZSt9terminatev>:
900294a8:	b508      	push	{r3, lr}
900294aa:	f7ff fff5 	bl	90029498 <_ZSt13get_terminatev>
900294ae:	f7ff ffef 	bl	90029490 <_ZN10__cxxabiv111__terminateEPFvvE>

900294b2 <abort>:
900294b2:	b508      	push	{r3, lr}
900294b4:	2006      	movs	r0, #6
900294b6:	f000 facd 	bl	90029a54 <raise>
900294ba:	2001      	movs	r0, #1
900294bc:	f7da f816 	bl	900034ec <_exit>

900294c0 <__assert_func>:
900294c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900294c2:	4614      	mov	r4, r2
900294c4:	461a      	mov	r2, r3
900294c6:	4b09      	ldr	r3, [pc, #36]	; (900294ec <__assert_func+0x2c>)
900294c8:	681b      	ldr	r3, [r3, #0]
900294ca:	4605      	mov	r5, r0
900294cc:	68d8      	ldr	r0, [r3, #12]
900294ce:	b14c      	cbz	r4, 900294e4 <__assert_func+0x24>
900294d0:	4b07      	ldr	r3, [pc, #28]	; (900294f0 <__assert_func+0x30>)
900294d2:	9100      	str	r1, [sp, #0]
900294d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900294d8:	4906      	ldr	r1, [pc, #24]	; (900294f4 <__assert_func+0x34>)
900294da:	462b      	mov	r3, r5
900294dc:	f000 f970 	bl	900297c0 <fiprintf>
900294e0:	f7ff ffe7 	bl	900294b2 <abort>
900294e4:	4b04      	ldr	r3, [pc, #16]	; (900294f8 <__assert_func+0x38>)
900294e6:	461c      	mov	r4, r3
900294e8:	e7f3      	b.n	900294d2 <__assert_func+0x12>
900294ea:	bf00      	nop
900294ec:	2400015c 	.word	0x2400015c
900294f0:	9002dfe4 	.word	0x9002dfe4
900294f4:	9002dff1 	.word	0x9002dff1
900294f8:	9002e01f 	.word	0x9002e01f

900294fc <atexit>:
900294fc:	2300      	movs	r3, #0
900294fe:	4601      	mov	r1, r0
90029500:	461a      	mov	r2, r3
90029502:	4618      	mov	r0, r3
90029504:	f000 bb52 	b.w	90029bac <__register_exitproc>

90029508 <malloc>:
90029508:	4b02      	ldr	r3, [pc, #8]	; (90029514 <malloc+0xc>)
9002950a:	4601      	mov	r1, r0
9002950c:	6818      	ldr	r0, [r3, #0]
9002950e:	f000 b82b 	b.w	90029568 <_malloc_r>
90029512:	bf00      	nop
90029514:	2400015c 	.word	0x2400015c

90029518 <free>:
90029518:	4b02      	ldr	r3, [pc, #8]	; (90029524 <free+0xc>)
9002951a:	4601      	mov	r1, r0
9002951c:	6818      	ldr	r0, [r3, #0]
9002951e:	f000 bba3 	b.w	90029c68 <_free_r>
90029522:	bf00      	nop
90029524:	2400015c 	.word	0x2400015c

90029528 <sbrk_aligned>:
90029528:	b570      	push	{r4, r5, r6, lr}
9002952a:	4e0e      	ldr	r6, [pc, #56]	; (90029564 <sbrk_aligned+0x3c>)
9002952c:	460c      	mov	r4, r1
9002952e:	6831      	ldr	r1, [r6, #0]
90029530:	4605      	mov	r5, r0
90029532:	b911      	cbnz	r1, 9002953a <sbrk_aligned+0x12>
90029534:	f000 fade 	bl	90029af4 <_sbrk_r>
90029538:	6030      	str	r0, [r6, #0]
9002953a:	4621      	mov	r1, r4
9002953c:	4628      	mov	r0, r5
9002953e:	f000 fad9 	bl	90029af4 <_sbrk_r>
90029542:	1c43      	adds	r3, r0, #1
90029544:	d00a      	beq.n	9002955c <sbrk_aligned+0x34>
90029546:	1cc4      	adds	r4, r0, #3
90029548:	f024 0403 	bic.w	r4, r4, #3
9002954c:	42a0      	cmp	r0, r4
9002954e:	d007      	beq.n	90029560 <sbrk_aligned+0x38>
90029550:	1a21      	subs	r1, r4, r0
90029552:	4628      	mov	r0, r5
90029554:	f000 face 	bl	90029af4 <_sbrk_r>
90029558:	3001      	adds	r0, #1
9002955a:	d101      	bne.n	90029560 <sbrk_aligned+0x38>
9002955c:	f04f 34ff 	mov.w	r4, #4294967295
90029560:	4620      	mov	r0, r4
90029562:	bd70      	pop	{r4, r5, r6, pc}
90029564:	2403a424 	.word	0x2403a424

90029568 <_malloc_r>:
90029568:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002956c:	1ccd      	adds	r5, r1, #3
9002956e:	f025 0503 	bic.w	r5, r5, #3
90029572:	3508      	adds	r5, #8
90029574:	2d0c      	cmp	r5, #12
90029576:	bf38      	it	cc
90029578:	250c      	movcc	r5, #12
9002957a:	2d00      	cmp	r5, #0
9002957c:	4607      	mov	r7, r0
9002957e:	db01      	blt.n	90029584 <_malloc_r+0x1c>
90029580:	42a9      	cmp	r1, r5
90029582:	d905      	bls.n	90029590 <_malloc_r+0x28>
90029584:	230c      	movs	r3, #12
90029586:	603b      	str	r3, [r7, #0]
90029588:	2600      	movs	r6, #0
9002958a:	4630      	mov	r0, r6
9002958c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029590:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90029664 <_malloc_r+0xfc>
90029594:	f000 f868 	bl	90029668 <__malloc_lock>
90029598:	f8d8 3000 	ldr.w	r3, [r8]
9002959c:	461c      	mov	r4, r3
9002959e:	bb5c      	cbnz	r4, 900295f8 <_malloc_r+0x90>
900295a0:	4629      	mov	r1, r5
900295a2:	4638      	mov	r0, r7
900295a4:	f7ff ffc0 	bl	90029528 <sbrk_aligned>
900295a8:	1c43      	adds	r3, r0, #1
900295aa:	4604      	mov	r4, r0
900295ac:	d155      	bne.n	9002965a <_malloc_r+0xf2>
900295ae:	f8d8 4000 	ldr.w	r4, [r8]
900295b2:	4626      	mov	r6, r4
900295b4:	2e00      	cmp	r6, #0
900295b6:	d145      	bne.n	90029644 <_malloc_r+0xdc>
900295b8:	2c00      	cmp	r4, #0
900295ba:	d048      	beq.n	9002964e <_malloc_r+0xe6>
900295bc:	6823      	ldr	r3, [r4, #0]
900295be:	4631      	mov	r1, r6
900295c0:	4638      	mov	r0, r7
900295c2:	eb04 0903 	add.w	r9, r4, r3
900295c6:	f000 fa95 	bl	90029af4 <_sbrk_r>
900295ca:	4581      	cmp	r9, r0
900295cc:	d13f      	bne.n	9002964e <_malloc_r+0xe6>
900295ce:	6821      	ldr	r1, [r4, #0]
900295d0:	1a6d      	subs	r5, r5, r1
900295d2:	4629      	mov	r1, r5
900295d4:	4638      	mov	r0, r7
900295d6:	f7ff ffa7 	bl	90029528 <sbrk_aligned>
900295da:	3001      	adds	r0, #1
900295dc:	d037      	beq.n	9002964e <_malloc_r+0xe6>
900295de:	6823      	ldr	r3, [r4, #0]
900295e0:	442b      	add	r3, r5
900295e2:	6023      	str	r3, [r4, #0]
900295e4:	f8d8 3000 	ldr.w	r3, [r8]
900295e8:	2b00      	cmp	r3, #0
900295ea:	d038      	beq.n	9002965e <_malloc_r+0xf6>
900295ec:	685a      	ldr	r2, [r3, #4]
900295ee:	42a2      	cmp	r2, r4
900295f0:	d12b      	bne.n	9002964a <_malloc_r+0xe2>
900295f2:	2200      	movs	r2, #0
900295f4:	605a      	str	r2, [r3, #4]
900295f6:	e00f      	b.n	90029618 <_malloc_r+0xb0>
900295f8:	6822      	ldr	r2, [r4, #0]
900295fa:	1b52      	subs	r2, r2, r5
900295fc:	d41f      	bmi.n	9002963e <_malloc_r+0xd6>
900295fe:	2a0b      	cmp	r2, #11
90029600:	d917      	bls.n	90029632 <_malloc_r+0xca>
90029602:	1961      	adds	r1, r4, r5
90029604:	42a3      	cmp	r3, r4
90029606:	6025      	str	r5, [r4, #0]
90029608:	bf18      	it	ne
9002960a:	6059      	strne	r1, [r3, #4]
9002960c:	6863      	ldr	r3, [r4, #4]
9002960e:	bf08      	it	eq
90029610:	f8c8 1000 	streq.w	r1, [r8]
90029614:	5162      	str	r2, [r4, r5]
90029616:	604b      	str	r3, [r1, #4]
90029618:	4638      	mov	r0, r7
9002961a:	f104 060b 	add.w	r6, r4, #11
9002961e:	f000 f829 	bl	90029674 <__malloc_unlock>
90029622:	f026 0607 	bic.w	r6, r6, #7
90029626:	1d23      	adds	r3, r4, #4
90029628:	1af2      	subs	r2, r6, r3
9002962a:	d0ae      	beq.n	9002958a <_malloc_r+0x22>
9002962c:	1b9b      	subs	r3, r3, r6
9002962e:	50a3      	str	r3, [r4, r2]
90029630:	e7ab      	b.n	9002958a <_malloc_r+0x22>
90029632:	42a3      	cmp	r3, r4
90029634:	6862      	ldr	r2, [r4, #4]
90029636:	d1dd      	bne.n	900295f4 <_malloc_r+0x8c>
90029638:	f8c8 2000 	str.w	r2, [r8]
9002963c:	e7ec      	b.n	90029618 <_malloc_r+0xb0>
9002963e:	4623      	mov	r3, r4
90029640:	6864      	ldr	r4, [r4, #4]
90029642:	e7ac      	b.n	9002959e <_malloc_r+0x36>
90029644:	4634      	mov	r4, r6
90029646:	6876      	ldr	r6, [r6, #4]
90029648:	e7b4      	b.n	900295b4 <_malloc_r+0x4c>
9002964a:	4613      	mov	r3, r2
9002964c:	e7cc      	b.n	900295e8 <_malloc_r+0x80>
9002964e:	230c      	movs	r3, #12
90029650:	603b      	str	r3, [r7, #0]
90029652:	4638      	mov	r0, r7
90029654:	f000 f80e 	bl	90029674 <__malloc_unlock>
90029658:	e797      	b.n	9002958a <_malloc_r+0x22>
9002965a:	6025      	str	r5, [r4, #0]
9002965c:	e7dc      	b.n	90029618 <_malloc_r+0xb0>
9002965e:	605b      	str	r3, [r3, #4]
90029660:	deff      	udf	#255	; 0xff
90029662:	bf00      	nop
90029664:	2403a420 	.word	0x2403a420

90029668 <__malloc_lock>:
90029668:	4801      	ldr	r0, [pc, #4]	; (90029670 <__malloc_lock+0x8>)
9002966a:	f000 ba8f 	b.w	90029b8c <__retarget_lock_acquire_recursive>
9002966e:	bf00      	nop
90029670:	2403a569 	.word	0x2403a569

90029674 <__malloc_unlock>:
90029674:	4801      	ldr	r0, [pc, #4]	; (9002967c <__malloc_unlock+0x8>)
90029676:	f000 ba8a 	b.w	90029b8e <__retarget_lock_release_recursive>
9002967a:	bf00      	nop
9002967c:	2403a569 	.word	0x2403a569

90029680 <__cxa_atexit>:
90029680:	b510      	push	{r4, lr}
90029682:	4c05      	ldr	r4, [pc, #20]	; (90029698 <__cxa_atexit+0x18>)
90029684:	4613      	mov	r3, r2
90029686:	b12c      	cbz	r4, 90029694 <__cxa_atexit+0x14>
90029688:	460a      	mov	r2, r1
9002968a:	4601      	mov	r1, r0
9002968c:	2002      	movs	r0, #2
9002968e:	f000 fa8d 	bl	90029bac <__register_exitproc>
90029692:	bd10      	pop	{r4, pc}
90029694:	4620      	mov	r0, r4
90029696:	e7fc      	b.n	90029692 <__cxa_atexit+0x12>
90029698:	90029bad 	.word	0x90029bad

9002969c <std>:
9002969c:	2300      	movs	r3, #0
9002969e:	b510      	push	{r4, lr}
900296a0:	4604      	mov	r4, r0
900296a2:	e9c0 3300 	strd	r3, r3, [r0]
900296a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
900296aa:	6083      	str	r3, [r0, #8]
900296ac:	8181      	strh	r1, [r0, #12]
900296ae:	6643      	str	r3, [r0, #100]	; 0x64
900296b0:	81c2      	strh	r2, [r0, #14]
900296b2:	6183      	str	r3, [r0, #24]
900296b4:	4619      	mov	r1, r3
900296b6:	2208      	movs	r2, #8
900296b8:	305c      	adds	r0, #92	; 0x5c
900296ba:	f000 f989 	bl	900299d0 <memset>
900296be:	4b05      	ldr	r3, [pc, #20]	; (900296d4 <std+0x38>)
900296c0:	6263      	str	r3, [r4, #36]	; 0x24
900296c2:	4b05      	ldr	r3, [pc, #20]	; (900296d8 <std+0x3c>)
900296c4:	62a3      	str	r3, [r4, #40]	; 0x28
900296c6:	4b05      	ldr	r3, [pc, #20]	; (900296dc <std+0x40>)
900296c8:	62e3      	str	r3, [r4, #44]	; 0x2c
900296ca:	4b05      	ldr	r3, [pc, #20]	; (900296e0 <std+0x44>)
900296cc:	6224      	str	r4, [r4, #32]
900296ce:	6323      	str	r3, [r4, #48]	; 0x30
900296d0:	bd10      	pop	{r4, pc}
900296d2:	bf00      	nop
900296d4:	90029821 	.word	0x90029821
900296d8:	90029843 	.word	0x90029843
900296dc:	9002987b 	.word	0x9002987b
900296e0:	9002989f 	.word	0x9002989f

900296e4 <stdio_exit_handler>:
900296e4:	4a02      	ldr	r2, [pc, #8]	; (900296f0 <stdio_exit_handler+0xc>)
900296e6:	4903      	ldr	r1, [pc, #12]	; (900296f4 <stdio_exit_handler+0x10>)
900296e8:	4803      	ldr	r0, [pc, #12]	; (900296f8 <stdio_exit_handler+0x14>)
900296ea:	f000 b87b 	b.w	900297e4 <_fwalk_sglue>
900296ee:	bf00      	nop
900296f0:	24000104 	.word	0x24000104
900296f4:	9002a3b5 	.word	0x9002a3b5
900296f8:	24000110 	.word	0x24000110

900296fc <cleanup_stdio>:
900296fc:	6841      	ldr	r1, [r0, #4]
900296fe:	4b0c      	ldr	r3, [pc, #48]	; (90029730 <cleanup_stdio+0x34>)
90029700:	4299      	cmp	r1, r3
90029702:	b510      	push	{r4, lr}
90029704:	4604      	mov	r4, r0
90029706:	d001      	beq.n	9002970c <cleanup_stdio+0x10>
90029708:	f000 fe54 	bl	9002a3b4 <_fflush_r>
9002970c:	68a1      	ldr	r1, [r4, #8]
9002970e:	4b09      	ldr	r3, [pc, #36]	; (90029734 <cleanup_stdio+0x38>)
90029710:	4299      	cmp	r1, r3
90029712:	d002      	beq.n	9002971a <cleanup_stdio+0x1e>
90029714:	4620      	mov	r0, r4
90029716:	f000 fe4d 	bl	9002a3b4 <_fflush_r>
9002971a:	68e1      	ldr	r1, [r4, #12]
9002971c:	4b06      	ldr	r3, [pc, #24]	; (90029738 <cleanup_stdio+0x3c>)
9002971e:	4299      	cmp	r1, r3
90029720:	d004      	beq.n	9002972c <cleanup_stdio+0x30>
90029722:	4620      	mov	r0, r4
90029724:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029728:	f000 be44 	b.w	9002a3b4 <_fflush_r>
9002972c:	bd10      	pop	{r4, pc}
9002972e:	bf00      	nop
90029730:	2403a428 	.word	0x2403a428
90029734:	2403a490 	.word	0x2403a490
90029738:	2403a4f8 	.word	0x2403a4f8

9002973c <global_stdio_init.part.0>:
9002973c:	b510      	push	{r4, lr}
9002973e:	4b0b      	ldr	r3, [pc, #44]	; (9002976c <global_stdio_init.part.0+0x30>)
90029740:	4c0b      	ldr	r4, [pc, #44]	; (90029770 <global_stdio_init.part.0+0x34>)
90029742:	4a0c      	ldr	r2, [pc, #48]	; (90029774 <global_stdio_init.part.0+0x38>)
90029744:	601a      	str	r2, [r3, #0]
90029746:	4620      	mov	r0, r4
90029748:	2200      	movs	r2, #0
9002974a:	2104      	movs	r1, #4
9002974c:	f7ff ffa6 	bl	9002969c <std>
90029750:	f104 0068 	add.w	r0, r4, #104	; 0x68
90029754:	2201      	movs	r2, #1
90029756:	2109      	movs	r1, #9
90029758:	f7ff ffa0 	bl	9002969c <std>
9002975c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90029760:	2202      	movs	r2, #2
90029762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029766:	2112      	movs	r1, #18
90029768:	f7ff bf98 	b.w	9002969c <std>
9002976c:	2403a560 	.word	0x2403a560
90029770:	2403a428 	.word	0x2403a428
90029774:	900296e5 	.word	0x900296e5

90029778 <__sfp_lock_acquire>:
90029778:	4801      	ldr	r0, [pc, #4]	; (90029780 <__sfp_lock_acquire+0x8>)
9002977a:	f000 ba07 	b.w	90029b8c <__retarget_lock_acquire_recursive>
9002977e:	bf00      	nop
90029780:	2403a56a 	.word	0x2403a56a

90029784 <__sfp_lock_release>:
90029784:	4801      	ldr	r0, [pc, #4]	; (9002978c <__sfp_lock_release+0x8>)
90029786:	f000 ba02 	b.w	90029b8e <__retarget_lock_release_recursive>
9002978a:	bf00      	nop
9002978c:	2403a56a 	.word	0x2403a56a

90029790 <__sinit>:
90029790:	b510      	push	{r4, lr}
90029792:	4604      	mov	r4, r0
90029794:	f7ff fff0 	bl	90029778 <__sfp_lock_acquire>
90029798:	6a23      	ldr	r3, [r4, #32]
9002979a:	b11b      	cbz	r3, 900297a4 <__sinit+0x14>
9002979c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900297a0:	f7ff bff0 	b.w	90029784 <__sfp_lock_release>
900297a4:	4b04      	ldr	r3, [pc, #16]	; (900297b8 <__sinit+0x28>)
900297a6:	6223      	str	r3, [r4, #32]
900297a8:	4b04      	ldr	r3, [pc, #16]	; (900297bc <__sinit+0x2c>)
900297aa:	681b      	ldr	r3, [r3, #0]
900297ac:	2b00      	cmp	r3, #0
900297ae:	d1f5      	bne.n	9002979c <__sinit+0xc>
900297b0:	f7ff ffc4 	bl	9002973c <global_stdio_init.part.0>
900297b4:	e7f2      	b.n	9002979c <__sinit+0xc>
900297b6:	bf00      	nop
900297b8:	900296fd 	.word	0x900296fd
900297bc:	2403a560 	.word	0x2403a560

900297c0 <fiprintf>:
900297c0:	b40e      	push	{r1, r2, r3}
900297c2:	b503      	push	{r0, r1, lr}
900297c4:	4601      	mov	r1, r0
900297c6:	ab03      	add	r3, sp, #12
900297c8:	4805      	ldr	r0, [pc, #20]	; (900297e0 <fiprintf+0x20>)
900297ca:	f853 2b04 	ldr.w	r2, [r3], #4
900297ce:	6800      	ldr	r0, [r0, #0]
900297d0:	9301      	str	r3, [sp, #4]
900297d2:	f000 fabf 	bl	90029d54 <_vfiprintf_r>
900297d6:	b002      	add	sp, #8
900297d8:	f85d eb04 	ldr.w	lr, [sp], #4
900297dc:	b003      	add	sp, #12
900297de:	4770      	bx	lr
900297e0:	2400015c 	.word	0x2400015c

900297e4 <_fwalk_sglue>:
900297e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900297e8:	4607      	mov	r7, r0
900297ea:	4688      	mov	r8, r1
900297ec:	4614      	mov	r4, r2
900297ee:	2600      	movs	r6, #0
900297f0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900297f4:	f1b9 0901 	subs.w	r9, r9, #1
900297f8:	d505      	bpl.n	90029806 <_fwalk_sglue+0x22>
900297fa:	6824      	ldr	r4, [r4, #0]
900297fc:	2c00      	cmp	r4, #0
900297fe:	d1f7      	bne.n	900297f0 <_fwalk_sglue+0xc>
90029800:	4630      	mov	r0, r6
90029802:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029806:	89ab      	ldrh	r3, [r5, #12]
90029808:	2b01      	cmp	r3, #1
9002980a:	d907      	bls.n	9002981c <_fwalk_sglue+0x38>
9002980c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90029810:	3301      	adds	r3, #1
90029812:	d003      	beq.n	9002981c <_fwalk_sglue+0x38>
90029814:	4629      	mov	r1, r5
90029816:	4638      	mov	r0, r7
90029818:	47c0      	blx	r8
9002981a:	4306      	orrs	r6, r0
9002981c:	3568      	adds	r5, #104	; 0x68
9002981e:	e7e9      	b.n	900297f4 <_fwalk_sglue+0x10>

90029820 <__sread>:
90029820:	b510      	push	{r4, lr}
90029822:	460c      	mov	r4, r1
90029824:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029828:	f000 f93e 	bl	90029aa8 <_read_r>
9002982c:	2800      	cmp	r0, #0
9002982e:	bfab      	itete	ge
90029830:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90029832:	89a3      	ldrhlt	r3, [r4, #12]
90029834:	181b      	addge	r3, r3, r0
90029836:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002983a:	bfac      	ite	ge
9002983c:	6563      	strge	r3, [r4, #84]	; 0x54
9002983e:	81a3      	strhlt	r3, [r4, #12]
90029840:	bd10      	pop	{r4, pc}

90029842 <__swrite>:
90029842:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029846:	461f      	mov	r7, r3
90029848:	898b      	ldrh	r3, [r1, #12]
9002984a:	05db      	lsls	r3, r3, #23
9002984c:	4605      	mov	r5, r0
9002984e:	460c      	mov	r4, r1
90029850:	4616      	mov	r6, r2
90029852:	d505      	bpl.n	90029860 <__swrite+0x1e>
90029854:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029858:	2302      	movs	r3, #2
9002985a:	2200      	movs	r2, #0
9002985c:	f000 f912 	bl	90029a84 <_lseek_r>
90029860:	89a3      	ldrh	r3, [r4, #12]
90029862:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029866:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002986a:	81a3      	strh	r3, [r4, #12]
9002986c:	4632      	mov	r2, r6
9002986e:	463b      	mov	r3, r7
90029870:	4628      	mov	r0, r5
90029872:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90029876:	f000 b94d 	b.w	90029b14 <_write_r>

9002987a <__sseek>:
9002987a:	b510      	push	{r4, lr}
9002987c:	460c      	mov	r4, r1
9002987e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029882:	f000 f8ff 	bl	90029a84 <_lseek_r>
90029886:	1c43      	adds	r3, r0, #1
90029888:	89a3      	ldrh	r3, [r4, #12]
9002988a:	bf15      	itete	ne
9002988c:	6560      	strne	r0, [r4, #84]	; 0x54
9002988e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90029892:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90029896:	81a3      	strheq	r3, [r4, #12]
90029898:	bf18      	it	ne
9002989a:	81a3      	strhne	r3, [r4, #12]
9002989c:	bd10      	pop	{r4, pc}

9002989e <__sclose>:
9002989e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900298a2:	f000 b8df 	b.w	90029a64 <_close_r>

900298a6 <__swbuf_r>:
900298a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900298a8:	460e      	mov	r6, r1
900298aa:	4614      	mov	r4, r2
900298ac:	4605      	mov	r5, r0
900298ae:	b118      	cbz	r0, 900298b8 <__swbuf_r+0x12>
900298b0:	6a03      	ldr	r3, [r0, #32]
900298b2:	b90b      	cbnz	r3, 900298b8 <__swbuf_r+0x12>
900298b4:	f7ff ff6c 	bl	90029790 <__sinit>
900298b8:	69a3      	ldr	r3, [r4, #24]
900298ba:	60a3      	str	r3, [r4, #8]
900298bc:	89a3      	ldrh	r3, [r4, #12]
900298be:	071a      	lsls	r2, r3, #28
900298c0:	d525      	bpl.n	9002990e <__swbuf_r+0x68>
900298c2:	6923      	ldr	r3, [r4, #16]
900298c4:	b31b      	cbz	r3, 9002990e <__swbuf_r+0x68>
900298c6:	6823      	ldr	r3, [r4, #0]
900298c8:	6922      	ldr	r2, [r4, #16]
900298ca:	1a98      	subs	r0, r3, r2
900298cc:	6963      	ldr	r3, [r4, #20]
900298ce:	b2f6      	uxtb	r6, r6
900298d0:	4283      	cmp	r3, r0
900298d2:	4637      	mov	r7, r6
900298d4:	dc04      	bgt.n	900298e0 <__swbuf_r+0x3a>
900298d6:	4621      	mov	r1, r4
900298d8:	4628      	mov	r0, r5
900298da:	f000 fd6b 	bl	9002a3b4 <_fflush_r>
900298de:	b9e0      	cbnz	r0, 9002991a <__swbuf_r+0x74>
900298e0:	68a3      	ldr	r3, [r4, #8]
900298e2:	3b01      	subs	r3, #1
900298e4:	60a3      	str	r3, [r4, #8]
900298e6:	6823      	ldr	r3, [r4, #0]
900298e8:	1c5a      	adds	r2, r3, #1
900298ea:	6022      	str	r2, [r4, #0]
900298ec:	701e      	strb	r6, [r3, #0]
900298ee:	6962      	ldr	r2, [r4, #20]
900298f0:	1c43      	adds	r3, r0, #1
900298f2:	429a      	cmp	r2, r3
900298f4:	d004      	beq.n	90029900 <__swbuf_r+0x5a>
900298f6:	89a3      	ldrh	r3, [r4, #12]
900298f8:	07db      	lsls	r3, r3, #31
900298fa:	d506      	bpl.n	9002990a <__swbuf_r+0x64>
900298fc:	2e0a      	cmp	r6, #10
900298fe:	d104      	bne.n	9002990a <__swbuf_r+0x64>
90029900:	4621      	mov	r1, r4
90029902:	4628      	mov	r0, r5
90029904:	f000 fd56 	bl	9002a3b4 <_fflush_r>
90029908:	b938      	cbnz	r0, 9002991a <__swbuf_r+0x74>
9002990a:	4638      	mov	r0, r7
9002990c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002990e:	4621      	mov	r1, r4
90029910:	4628      	mov	r0, r5
90029912:	f000 f805 	bl	90029920 <__swsetup_r>
90029916:	2800      	cmp	r0, #0
90029918:	d0d5      	beq.n	900298c6 <__swbuf_r+0x20>
9002991a:	f04f 37ff 	mov.w	r7, #4294967295
9002991e:	e7f4      	b.n	9002990a <__swbuf_r+0x64>

90029920 <__swsetup_r>:
90029920:	b538      	push	{r3, r4, r5, lr}
90029922:	4b2a      	ldr	r3, [pc, #168]	; (900299cc <__swsetup_r+0xac>)
90029924:	4605      	mov	r5, r0
90029926:	6818      	ldr	r0, [r3, #0]
90029928:	460c      	mov	r4, r1
9002992a:	b118      	cbz	r0, 90029934 <__swsetup_r+0x14>
9002992c:	6a03      	ldr	r3, [r0, #32]
9002992e:	b90b      	cbnz	r3, 90029934 <__swsetup_r+0x14>
90029930:	f7ff ff2e 	bl	90029790 <__sinit>
90029934:	89a3      	ldrh	r3, [r4, #12]
90029936:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002993a:	0718      	lsls	r0, r3, #28
9002993c:	d422      	bmi.n	90029984 <__swsetup_r+0x64>
9002993e:	06d9      	lsls	r1, r3, #27
90029940:	d407      	bmi.n	90029952 <__swsetup_r+0x32>
90029942:	2309      	movs	r3, #9
90029944:	602b      	str	r3, [r5, #0]
90029946:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002994a:	81a3      	strh	r3, [r4, #12]
9002994c:	f04f 30ff 	mov.w	r0, #4294967295
90029950:	e034      	b.n	900299bc <__swsetup_r+0x9c>
90029952:	0758      	lsls	r0, r3, #29
90029954:	d512      	bpl.n	9002997c <__swsetup_r+0x5c>
90029956:	6b61      	ldr	r1, [r4, #52]	; 0x34
90029958:	b141      	cbz	r1, 9002996c <__swsetup_r+0x4c>
9002995a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002995e:	4299      	cmp	r1, r3
90029960:	d002      	beq.n	90029968 <__swsetup_r+0x48>
90029962:	4628      	mov	r0, r5
90029964:	f000 f980 	bl	90029c68 <_free_r>
90029968:	2300      	movs	r3, #0
9002996a:	6363      	str	r3, [r4, #52]	; 0x34
9002996c:	89a3      	ldrh	r3, [r4, #12]
9002996e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90029972:	81a3      	strh	r3, [r4, #12]
90029974:	2300      	movs	r3, #0
90029976:	6063      	str	r3, [r4, #4]
90029978:	6923      	ldr	r3, [r4, #16]
9002997a:	6023      	str	r3, [r4, #0]
9002997c:	89a3      	ldrh	r3, [r4, #12]
9002997e:	f043 0308 	orr.w	r3, r3, #8
90029982:	81a3      	strh	r3, [r4, #12]
90029984:	6923      	ldr	r3, [r4, #16]
90029986:	b94b      	cbnz	r3, 9002999c <__swsetup_r+0x7c>
90029988:	89a3      	ldrh	r3, [r4, #12]
9002998a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002998e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90029992:	d003      	beq.n	9002999c <__swsetup_r+0x7c>
90029994:	4621      	mov	r1, r4
90029996:	4628      	mov	r0, r5
90029998:	f000 fd5a 	bl	9002a450 <__smakebuf_r>
9002999c:	89a0      	ldrh	r0, [r4, #12]
9002999e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900299a2:	f010 0301 	ands.w	r3, r0, #1
900299a6:	d00a      	beq.n	900299be <__swsetup_r+0x9e>
900299a8:	2300      	movs	r3, #0
900299aa:	60a3      	str	r3, [r4, #8]
900299ac:	6963      	ldr	r3, [r4, #20]
900299ae:	425b      	negs	r3, r3
900299b0:	61a3      	str	r3, [r4, #24]
900299b2:	6923      	ldr	r3, [r4, #16]
900299b4:	b943      	cbnz	r3, 900299c8 <__swsetup_r+0xa8>
900299b6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
900299ba:	d1c4      	bne.n	90029946 <__swsetup_r+0x26>
900299bc:	bd38      	pop	{r3, r4, r5, pc}
900299be:	0781      	lsls	r1, r0, #30
900299c0:	bf58      	it	pl
900299c2:	6963      	ldrpl	r3, [r4, #20]
900299c4:	60a3      	str	r3, [r4, #8]
900299c6:	e7f4      	b.n	900299b2 <__swsetup_r+0x92>
900299c8:	2000      	movs	r0, #0
900299ca:	e7f7      	b.n	900299bc <__swsetup_r+0x9c>
900299cc:	2400015c 	.word	0x2400015c

900299d0 <memset>:
900299d0:	4402      	add	r2, r0
900299d2:	4603      	mov	r3, r0
900299d4:	4293      	cmp	r3, r2
900299d6:	d100      	bne.n	900299da <memset+0xa>
900299d8:	4770      	bx	lr
900299da:	f803 1b01 	strb.w	r1, [r3], #1
900299de:	e7f9      	b.n	900299d4 <memset+0x4>

900299e0 <strncmp>:
900299e0:	b510      	push	{r4, lr}
900299e2:	b16a      	cbz	r2, 90029a00 <strncmp+0x20>
900299e4:	3901      	subs	r1, #1
900299e6:	1884      	adds	r4, r0, r2
900299e8:	f810 2b01 	ldrb.w	r2, [r0], #1
900299ec:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900299f0:	429a      	cmp	r2, r3
900299f2:	d103      	bne.n	900299fc <strncmp+0x1c>
900299f4:	42a0      	cmp	r0, r4
900299f6:	d001      	beq.n	900299fc <strncmp+0x1c>
900299f8:	2a00      	cmp	r2, #0
900299fa:	d1f5      	bne.n	900299e8 <strncmp+0x8>
900299fc:	1ad0      	subs	r0, r2, r3
900299fe:	bd10      	pop	{r4, pc}
90029a00:	4610      	mov	r0, r2
90029a02:	e7fc      	b.n	900299fe <strncmp+0x1e>

90029a04 <_raise_r>:
90029a04:	291f      	cmp	r1, #31
90029a06:	b538      	push	{r3, r4, r5, lr}
90029a08:	4604      	mov	r4, r0
90029a0a:	460d      	mov	r5, r1
90029a0c:	d904      	bls.n	90029a18 <_raise_r+0x14>
90029a0e:	2316      	movs	r3, #22
90029a10:	6003      	str	r3, [r0, #0]
90029a12:	f04f 30ff 	mov.w	r0, #4294967295
90029a16:	bd38      	pop	{r3, r4, r5, pc}
90029a18:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
90029a1a:	b112      	cbz	r2, 90029a22 <_raise_r+0x1e>
90029a1c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90029a20:	b94b      	cbnz	r3, 90029a36 <_raise_r+0x32>
90029a22:	4620      	mov	r0, r4
90029a24:	f000 f864 	bl	90029af0 <_getpid_r>
90029a28:	462a      	mov	r2, r5
90029a2a:	4601      	mov	r1, r0
90029a2c:	4620      	mov	r0, r4
90029a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029a32:	f000 b84b 	b.w	90029acc <_kill_r>
90029a36:	2b01      	cmp	r3, #1
90029a38:	d00a      	beq.n	90029a50 <_raise_r+0x4c>
90029a3a:	1c59      	adds	r1, r3, #1
90029a3c:	d103      	bne.n	90029a46 <_raise_r+0x42>
90029a3e:	2316      	movs	r3, #22
90029a40:	6003      	str	r3, [r0, #0]
90029a42:	2001      	movs	r0, #1
90029a44:	e7e7      	b.n	90029a16 <_raise_r+0x12>
90029a46:	2400      	movs	r4, #0
90029a48:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
90029a4c:	4628      	mov	r0, r5
90029a4e:	4798      	blx	r3
90029a50:	2000      	movs	r0, #0
90029a52:	e7e0      	b.n	90029a16 <_raise_r+0x12>

90029a54 <raise>:
90029a54:	4b02      	ldr	r3, [pc, #8]	; (90029a60 <raise+0xc>)
90029a56:	4601      	mov	r1, r0
90029a58:	6818      	ldr	r0, [r3, #0]
90029a5a:	f7ff bfd3 	b.w	90029a04 <_raise_r>
90029a5e:	bf00      	nop
90029a60:	2400015c 	.word	0x2400015c

90029a64 <_close_r>:
90029a64:	b538      	push	{r3, r4, r5, lr}
90029a66:	4d06      	ldr	r5, [pc, #24]	; (90029a80 <_close_r+0x1c>)
90029a68:	2300      	movs	r3, #0
90029a6a:	4604      	mov	r4, r0
90029a6c:	4608      	mov	r0, r1
90029a6e:	602b      	str	r3, [r5, #0]
90029a70:	f7d9 fd5e 	bl	90003530 <_close>
90029a74:	1c43      	adds	r3, r0, #1
90029a76:	d102      	bne.n	90029a7e <_close_r+0x1a>
90029a78:	682b      	ldr	r3, [r5, #0]
90029a7a:	b103      	cbz	r3, 90029a7e <_close_r+0x1a>
90029a7c:	6023      	str	r3, [r4, #0]
90029a7e:	bd38      	pop	{r3, r4, r5, pc}
90029a80:	2403a564 	.word	0x2403a564

90029a84 <_lseek_r>:
90029a84:	b538      	push	{r3, r4, r5, lr}
90029a86:	4d07      	ldr	r5, [pc, #28]	; (90029aa4 <_lseek_r+0x20>)
90029a88:	4604      	mov	r4, r0
90029a8a:	4608      	mov	r0, r1
90029a8c:	4611      	mov	r1, r2
90029a8e:	2200      	movs	r2, #0
90029a90:	602a      	str	r2, [r5, #0]
90029a92:	461a      	mov	r2, r3
90029a94:	f7d9 fd58 	bl	90003548 <_lseek>
90029a98:	1c43      	adds	r3, r0, #1
90029a9a:	d102      	bne.n	90029aa2 <_lseek_r+0x1e>
90029a9c:	682b      	ldr	r3, [r5, #0]
90029a9e:	b103      	cbz	r3, 90029aa2 <_lseek_r+0x1e>
90029aa0:	6023      	str	r3, [r4, #0]
90029aa2:	bd38      	pop	{r3, r4, r5, pc}
90029aa4:	2403a564 	.word	0x2403a564

90029aa8 <_read_r>:
90029aa8:	b538      	push	{r3, r4, r5, lr}
90029aaa:	4d07      	ldr	r5, [pc, #28]	; (90029ac8 <_read_r+0x20>)
90029aac:	4604      	mov	r4, r0
90029aae:	4608      	mov	r0, r1
90029ab0:	4611      	mov	r1, r2
90029ab2:	2200      	movs	r2, #0
90029ab4:	602a      	str	r2, [r5, #0]
90029ab6:	461a      	mov	r2, r3
90029ab8:	f7d9 fd1e 	bl	900034f8 <_read>
90029abc:	1c43      	adds	r3, r0, #1
90029abe:	d102      	bne.n	90029ac6 <_read_r+0x1e>
90029ac0:	682b      	ldr	r3, [r5, #0]
90029ac2:	b103      	cbz	r3, 90029ac6 <_read_r+0x1e>
90029ac4:	6023      	str	r3, [r4, #0]
90029ac6:	bd38      	pop	{r3, r4, r5, pc}
90029ac8:	2403a564 	.word	0x2403a564

90029acc <_kill_r>:
90029acc:	b538      	push	{r3, r4, r5, lr}
90029ace:	4d07      	ldr	r5, [pc, #28]	; (90029aec <_kill_r+0x20>)
90029ad0:	2300      	movs	r3, #0
90029ad2:	4604      	mov	r4, r0
90029ad4:	4608      	mov	r0, r1
90029ad6:	4611      	mov	r1, r2
90029ad8:	602b      	str	r3, [r5, #0]
90029ada:	f7d9 fcfd 	bl	900034d8 <_kill>
90029ade:	1c43      	adds	r3, r0, #1
90029ae0:	d102      	bne.n	90029ae8 <_kill_r+0x1c>
90029ae2:	682b      	ldr	r3, [r5, #0]
90029ae4:	b103      	cbz	r3, 90029ae8 <_kill_r+0x1c>
90029ae6:	6023      	str	r3, [r4, #0]
90029ae8:	bd38      	pop	{r3, r4, r5, pc}
90029aea:	bf00      	nop
90029aec:	2403a564 	.word	0x2403a564

90029af0 <_getpid_r>:
90029af0:	f7d9 bcf0 	b.w	900034d4 <_getpid>

90029af4 <_sbrk_r>:
90029af4:	b538      	push	{r3, r4, r5, lr}
90029af6:	4d06      	ldr	r5, [pc, #24]	; (90029b10 <_sbrk_r+0x1c>)
90029af8:	2300      	movs	r3, #0
90029afa:	4604      	mov	r4, r0
90029afc:	4608      	mov	r0, r1
90029afe:	602b      	str	r3, [r5, #0]
90029b00:	f000 fd04 	bl	9002a50c <_sbrk>
90029b04:	1c43      	adds	r3, r0, #1
90029b06:	d102      	bne.n	90029b0e <_sbrk_r+0x1a>
90029b08:	682b      	ldr	r3, [r5, #0]
90029b0a:	b103      	cbz	r3, 90029b0e <_sbrk_r+0x1a>
90029b0c:	6023      	str	r3, [r4, #0]
90029b0e:	bd38      	pop	{r3, r4, r5, pc}
90029b10:	2403a564 	.word	0x2403a564

90029b14 <_write_r>:
90029b14:	b538      	push	{r3, r4, r5, lr}
90029b16:	4d07      	ldr	r5, [pc, #28]	; (90029b34 <_write_r+0x20>)
90029b18:	4604      	mov	r4, r0
90029b1a:	4608      	mov	r0, r1
90029b1c:	4611      	mov	r1, r2
90029b1e:	2200      	movs	r2, #0
90029b20:	602a      	str	r2, [r5, #0]
90029b22:	461a      	mov	r2, r3
90029b24:	f7d9 fcf6 	bl	90003514 <_write>
90029b28:	1c43      	adds	r3, r0, #1
90029b2a:	d102      	bne.n	90029b32 <_write_r+0x1e>
90029b2c:	682b      	ldr	r3, [r5, #0]
90029b2e:	b103      	cbz	r3, 90029b32 <_write_r+0x1e>
90029b30:	6023      	str	r3, [r4, #0]
90029b32:	bd38      	pop	{r3, r4, r5, pc}
90029b34:	2403a564 	.word	0x2403a564

90029b38 <__errno>:
90029b38:	4b01      	ldr	r3, [pc, #4]	; (90029b40 <__errno+0x8>)
90029b3a:	6818      	ldr	r0, [r3, #0]
90029b3c:	4770      	bx	lr
90029b3e:	bf00      	nop
90029b40:	2400015c 	.word	0x2400015c

90029b44 <__libc_init_array>:
90029b44:	b570      	push	{r4, r5, r6, lr}
90029b46:	4d0d      	ldr	r5, [pc, #52]	; (90029b7c <__libc_init_array+0x38>)
90029b48:	4c0d      	ldr	r4, [pc, #52]	; (90029b80 <__libc_init_array+0x3c>)
90029b4a:	1b64      	subs	r4, r4, r5
90029b4c:	10a4      	asrs	r4, r4, #2
90029b4e:	2600      	movs	r6, #0
90029b50:	42a6      	cmp	r6, r4
90029b52:	d109      	bne.n	90029b68 <__libc_init_array+0x24>
90029b54:	4d0b      	ldr	r5, [pc, #44]	; (90029b84 <__libc_init_array+0x40>)
90029b56:	4c0c      	ldr	r4, [pc, #48]	; (90029b88 <__libc_init_array+0x44>)
90029b58:	f000 fce6 	bl	9002a528 <_init>
90029b5c:	1b64      	subs	r4, r4, r5
90029b5e:	10a4      	asrs	r4, r4, #2
90029b60:	2600      	movs	r6, #0
90029b62:	42a6      	cmp	r6, r4
90029b64:	d105      	bne.n	90029b72 <__libc_init_array+0x2e>
90029b66:	bd70      	pop	{r4, r5, r6, pc}
90029b68:	f855 3b04 	ldr.w	r3, [r5], #4
90029b6c:	4798      	blx	r3
90029b6e:	3601      	adds	r6, #1
90029b70:	e7ee      	b.n	90029b50 <__libc_init_array+0xc>
90029b72:	f855 3b04 	ldr.w	r3, [r5], #4
90029b76:	4798      	blx	r3
90029b78:	3601      	adds	r6, #1
90029b7a:	e7f2      	b.n	90029b62 <__libc_init_array+0x1e>
90029b7c:	9002e160 	.word	0x9002e160
90029b80:	9002e160 	.word	0x9002e160
90029b84:	9002e160 	.word	0x9002e160
90029b88:	9002e180 	.word	0x9002e180

90029b8c <__retarget_lock_acquire_recursive>:
90029b8c:	4770      	bx	lr

90029b8e <__retarget_lock_release_recursive>:
90029b8e:	4770      	bx	lr

90029b90 <memcpy>:
90029b90:	440a      	add	r2, r1
90029b92:	4291      	cmp	r1, r2
90029b94:	f100 33ff 	add.w	r3, r0, #4294967295
90029b98:	d100      	bne.n	90029b9c <memcpy+0xc>
90029b9a:	4770      	bx	lr
90029b9c:	b510      	push	{r4, lr}
90029b9e:	f811 4b01 	ldrb.w	r4, [r1], #1
90029ba2:	f803 4f01 	strb.w	r4, [r3, #1]!
90029ba6:	4291      	cmp	r1, r2
90029ba8:	d1f9      	bne.n	90029b9e <memcpy+0xe>
90029baa:	bd10      	pop	{r4, pc}

90029bac <__register_exitproc>:
90029bac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029bb0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90029c64 <__register_exitproc+0xb8>
90029bb4:	4606      	mov	r6, r0
90029bb6:	f8d8 0000 	ldr.w	r0, [r8]
90029bba:	461f      	mov	r7, r3
90029bbc:	460d      	mov	r5, r1
90029bbe:	4691      	mov	r9, r2
90029bc0:	f7ff ffe4 	bl	90029b8c <__retarget_lock_acquire_recursive>
90029bc4:	4b23      	ldr	r3, [pc, #140]	; (90029c54 <__register_exitproc+0xa8>)
90029bc6:	681c      	ldr	r4, [r3, #0]
90029bc8:	b934      	cbnz	r4, 90029bd8 <__register_exitproc+0x2c>
90029bca:	4c23      	ldr	r4, [pc, #140]	; (90029c58 <__register_exitproc+0xac>)
90029bcc:	601c      	str	r4, [r3, #0]
90029bce:	4b23      	ldr	r3, [pc, #140]	; (90029c5c <__register_exitproc+0xb0>)
90029bd0:	b113      	cbz	r3, 90029bd8 <__register_exitproc+0x2c>
90029bd2:	681b      	ldr	r3, [r3, #0]
90029bd4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90029bd8:	6863      	ldr	r3, [r4, #4]
90029bda:	2b1f      	cmp	r3, #31
90029bdc:	dd07      	ble.n	90029bee <__register_exitproc+0x42>
90029bde:	f8d8 0000 	ldr.w	r0, [r8]
90029be2:	f7ff ffd4 	bl	90029b8e <__retarget_lock_release_recursive>
90029be6:	f04f 30ff 	mov.w	r0, #4294967295
90029bea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029bee:	b32e      	cbz	r6, 90029c3c <__register_exitproc+0x90>
90029bf0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90029bf4:	b968      	cbnz	r0, 90029c12 <__register_exitproc+0x66>
90029bf6:	4b1a      	ldr	r3, [pc, #104]	; (90029c60 <__register_exitproc+0xb4>)
90029bf8:	2b00      	cmp	r3, #0
90029bfa:	d0f0      	beq.n	90029bde <__register_exitproc+0x32>
90029bfc:	f44f 7084 	mov.w	r0, #264	; 0x108
90029c00:	f7ff fc82 	bl	90029508 <malloc>
90029c04:	2800      	cmp	r0, #0
90029c06:	d0ea      	beq.n	90029bde <__register_exitproc+0x32>
90029c08:	2300      	movs	r3, #0
90029c0a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90029c0e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90029c12:	6863      	ldr	r3, [r4, #4]
90029c14:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90029c18:	2201      	movs	r2, #1
90029c1a:	409a      	lsls	r2, r3
90029c1c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90029c20:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90029c24:	4313      	orrs	r3, r2
90029c26:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90029c2a:	2e02      	cmp	r6, #2
90029c2c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90029c30:	bf02      	ittt	eq
90029c32:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90029c36:	4313      	orreq	r3, r2
90029c38:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90029c3c:	6863      	ldr	r3, [r4, #4]
90029c3e:	f8d8 0000 	ldr.w	r0, [r8]
90029c42:	1c5a      	adds	r2, r3, #1
90029c44:	3302      	adds	r3, #2
90029c46:	6062      	str	r2, [r4, #4]
90029c48:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90029c4c:	f7ff ff9f 	bl	90029b8e <__retarget_lock_release_recursive>
90029c50:	2000      	movs	r0, #0
90029c52:	e7ca      	b.n	90029bea <__register_exitproc+0x3e>
90029c54:	2403a5f8 	.word	0x2403a5f8
90029c58:	2403a56c 	.word	0x2403a56c
90029c5c:	9002e020 	.word	0x9002e020
90029c60:	90029509 	.word	0x90029509
90029c64:	24000160 	.word	0x24000160

90029c68 <_free_r>:
90029c68:	b537      	push	{r0, r1, r2, r4, r5, lr}
90029c6a:	2900      	cmp	r1, #0
90029c6c:	d044      	beq.n	90029cf8 <_free_r+0x90>
90029c6e:	f851 3c04 	ldr.w	r3, [r1, #-4]
90029c72:	9001      	str	r0, [sp, #4]
90029c74:	2b00      	cmp	r3, #0
90029c76:	f1a1 0404 	sub.w	r4, r1, #4
90029c7a:	bfb8      	it	lt
90029c7c:	18e4      	addlt	r4, r4, r3
90029c7e:	f7ff fcf3 	bl	90029668 <__malloc_lock>
90029c82:	4a1e      	ldr	r2, [pc, #120]	; (90029cfc <_free_r+0x94>)
90029c84:	9801      	ldr	r0, [sp, #4]
90029c86:	6813      	ldr	r3, [r2, #0]
90029c88:	b933      	cbnz	r3, 90029c98 <_free_r+0x30>
90029c8a:	6063      	str	r3, [r4, #4]
90029c8c:	6014      	str	r4, [r2, #0]
90029c8e:	b003      	add	sp, #12
90029c90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029c94:	f7ff bcee 	b.w	90029674 <__malloc_unlock>
90029c98:	42a3      	cmp	r3, r4
90029c9a:	d908      	bls.n	90029cae <_free_r+0x46>
90029c9c:	6825      	ldr	r5, [r4, #0]
90029c9e:	1961      	adds	r1, r4, r5
90029ca0:	428b      	cmp	r3, r1
90029ca2:	bf01      	itttt	eq
90029ca4:	6819      	ldreq	r1, [r3, #0]
90029ca6:	685b      	ldreq	r3, [r3, #4]
90029ca8:	1949      	addeq	r1, r1, r5
90029caa:	6021      	streq	r1, [r4, #0]
90029cac:	e7ed      	b.n	90029c8a <_free_r+0x22>
90029cae:	461a      	mov	r2, r3
90029cb0:	685b      	ldr	r3, [r3, #4]
90029cb2:	b10b      	cbz	r3, 90029cb8 <_free_r+0x50>
90029cb4:	42a3      	cmp	r3, r4
90029cb6:	d9fa      	bls.n	90029cae <_free_r+0x46>
90029cb8:	6811      	ldr	r1, [r2, #0]
90029cba:	1855      	adds	r5, r2, r1
90029cbc:	42a5      	cmp	r5, r4
90029cbe:	d10b      	bne.n	90029cd8 <_free_r+0x70>
90029cc0:	6824      	ldr	r4, [r4, #0]
90029cc2:	4421      	add	r1, r4
90029cc4:	1854      	adds	r4, r2, r1
90029cc6:	42a3      	cmp	r3, r4
90029cc8:	6011      	str	r1, [r2, #0]
90029cca:	d1e0      	bne.n	90029c8e <_free_r+0x26>
90029ccc:	681c      	ldr	r4, [r3, #0]
90029cce:	685b      	ldr	r3, [r3, #4]
90029cd0:	6053      	str	r3, [r2, #4]
90029cd2:	440c      	add	r4, r1
90029cd4:	6014      	str	r4, [r2, #0]
90029cd6:	e7da      	b.n	90029c8e <_free_r+0x26>
90029cd8:	d902      	bls.n	90029ce0 <_free_r+0x78>
90029cda:	230c      	movs	r3, #12
90029cdc:	6003      	str	r3, [r0, #0]
90029cde:	e7d6      	b.n	90029c8e <_free_r+0x26>
90029ce0:	6825      	ldr	r5, [r4, #0]
90029ce2:	1961      	adds	r1, r4, r5
90029ce4:	428b      	cmp	r3, r1
90029ce6:	bf04      	itt	eq
90029ce8:	6819      	ldreq	r1, [r3, #0]
90029cea:	685b      	ldreq	r3, [r3, #4]
90029cec:	6063      	str	r3, [r4, #4]
90029cee:	bf04      	itt	eq
90029cf0:	1949      	addeq	r1, r1, r5
90029cf2:	6021      	streq	r1, [r4, #0]
90029cf4:	6054      	str	r4, [r2, #4]
90029cf6:	e7ca      	b.n	90029c8e <_free_r+0x26>
90029cf8:	b003      	add	sp, #12
90029cfa:	bd30      	pop	{r4, r5, pc}
90029cfc:	2403a420 	.word	0x2403a420

90029d00 <__sfputc_r>:
90029d00:	6893      	ldr	r3, [r2, #8]
90029d02:	3b01      	subs	r3, #1
90029d04:	2b00      	cmp	r3, #0
90029d06:	b410      	push	{r4}
90029d08:	6093      	str	r3, [r2, #8]
90029d0a:	da08      	bge.n	90029d1e <__sfputc_r+0x1e>
90029d0c:	6994      	ldr	r4, [r2, #24]
90029d0e:	42a3      	cmp	r3, r4
90029d10:	db01      	blt.n	90029d16 <__sfputc_r+0x16>
90029d12:	290a      	cmp	r1, #10
90029d14:	d103      	bne.n	90029d1e <__sfputc_r+0x1e>
90029d16:	f85d 4b04 	ldr.w	r4, [sp], #4
90029d1a:	f7ff bdc4 	b.w	900298a6 <__swbuf_r>
90029d1e:	6813      	ldr	r3, [r2, #0]
90029d20:	1c58      	adds	r0, r3, #1
90029d22:	6010      	str	r0, [r2, #0]
90029d24:	7019      	strb	r1, [r3, #0]
90029d26:	4608      	mov	r0, r1
90029d28:	f85d 4b04 	ldr.w	r4, [sp], #4
90029d2c:	4770      	bx	lr

90029d2e <__sfputs_r>:
90029d2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029d30:	4606      	mov	r6, r0
90029d32:	460f      	mov	r7, r1
90029d34:	4614      	mov	r4, r2
90029d36:	18d5      	adds	r5, r2, r3
90029d38:	42ac      	cmp	r4, r5
90029d3a:	d101      	bne.n	90029d40 <__sfputs_r+0x12>
90029d3c:	2000      	movs	r0, #0
90029d3e:	e007      	b.n	90029d50 <__sfputs_r+0x22>
90029d40:	f814 1b01 	ldrb.w	r1, [r4], #1
90029d44:	463a      	mov	r2, r7
90029d46:	4630      	mov	r0, r6
90029d48:	f7ff ffda 	bl	90029d00 <__sfputc_r>
90029d4c:	1c43      	adds	r3, r0, #1
90029d4e:	d1f3      	bne.n	90029d38 <__sfputs_r+0xa>
90029d50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90029d54 <_vfiprintf_r>:
90029d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029d58:	460d      	mov	r5, r1
90029d5a:	b09d      	sub	sp, #116	; 0x74
90029d5c:	4614      	mov	r4, r2
90029d5e:	4698      	mov	r8, r3
90029d60:	4606      	mov	r6, r0
90029d62:	b118      	cbz	r0, 90029d6c <_vfiprintf_r+0x18>
90029d64:	6a03      	ldr	r3, [r0, #32]
90029d66:	b90b      	cbnz	r3, 90029d6c <_vfiprintf_r+0x18>
90029d68:	f7ff fd12 	bl	90029790 <__sinit>
90029d6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029d6e:	07d9      	lsls	r1, r3, #31
90029d70:	d405      	bmi.n	90029d7e <_vfiprintf_r+0x2a>
90029d72:	89ab      	ldrh	r3, [r5, #12]
90029d74:	059a      	lsls	r2, r3, #22
90029d76:	d402      	bmi.n	90029d7e <_vfiprintf_r+0x2a>
90029d78:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029d7a:	f7ff ff07 	bl	90029b8c <__retarget_lock_acquire_recursive>
90029d7e:	89ab      	ldrh	r3, [r5, #12]
90029d80:	071b      	lsls	r3, r3, #28
90029d82:	d501      	bpl.n	90029d88 <_vfiprintf_r+0x34>
90029d84:	692b      	ldr	r3, [r5, #16]
90029d86:	b99b      	cbnz	r3, 90029db0 <_vfiprintf_r+0x5c>
90029d88:	4629      	mov	r1, r5
90029d8a:	4630      	mov	r0, r6
90029d8c:	f7ff fdc8 	bl	90029920 <__swsetup_r>
90029d90:	b170      	cbz	r0, 90029db0 <_vfiprintf_r+0x5c>
90029d92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029d94:	07dc      	lsls	r4, r3, #31
90029d96:	d504      	bpl.n	90029da2 <_vfiprintf_r+0x4e>
90029d98:	f04f 30ff 	mov.w	r0, #4294967295
90029d9c:	b01d      	add	sp, #116	; 0x74
90029d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029da2:	89ab      	ldrh	r3, [r5, #12]
90029da4:	0598      	lsls	r0, r3, #22
90029da6:	d4f7      	bmi.n	90029d98 <_vfiprintf_r+0x44>
90029da8:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029daa:	f7ff fef0 	bl	90029b8e <__retarget_lock_release_recursive>
90029dae:	e7f3      	b.n	90029d98 <_vfiprintf_r+0x44>
90029db0:	2300      	movs	r3, #0
90029db2:	9309      	str	r3, [sp, #36]	; 0x24
90029db4:	2320      	movs	r3, #32
90029db6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90029dba:	f8cd 800c 	str.w	r8, [sp, #12]
90029dbe:	2330      	movs	r3, #48	; 0x30
90029dc0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90029f74 <_vfiprintf_r+0x220>
90029dc4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90029dc8:	f04f 0901 	mov.w	r9, #1
90029dcc:	4623      	mov	r3, r4
90029dce:	469a      	mov	sl, r3
90029dd0:	f813 2b01 	ldrb.w	r2, [r3], #1
90029dd4:	b10a      	cbz	r2, 90029dda <_vfiprintf_r+0x86>
90029dd6:	2a25      	cmp	r2, #37	; 0x25
90029dd8:	d1f9      	bne.n	90029dce <_vfiprintf_r+0x7a>
90029dda:	ebba 0b04 	subs.w	fp, sl, r4
90029dde:	d00b      	beq.n	90029df8 <_vfiprintf_r+0xa4>
90029de0:	465b      	mov	r3, fp
90029de2:	4622      	mov	r2, r4
90029de4:	4629      	mov	r1, r5
90029de6:	4630      	mov	r0, r6
90029de8:	f7ff ffa1 	bl	90029d2e <__sfputs_r>
90029dec:	3001      	adds	r0, #1
90029dee:	f000 80a9 	beq.w	90029f44 <_vfiprintf_r+0x1f0>
90029df2:	9a09      	ldr	r2, [sp, #36]	; 0x24
90029df4:	445a      	add	r2, fp
90029df6:	9209      	str	r2, [sp, #36]	; 0x24
90029df8:	f89a 3000 	ldrb.w	r3, [sl]
90029dfc:	2b00      	cmp	r3, #0
90029dfe:	f000 80a1 	beq.w	90029f44 <_vfiprintf_r+0x1f0>
90029e02:	2300      	movs	r3, #0
90029e04:	f04f 32ff 	mov.w	r2, #4294967295
90029e08:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029e0c:	f10a 0a01 	add.w	sl, sl, #1
90029e10:	9304      	str	r3, [sp, #16]
90029e12:	9307      	str	r3, [sp, #28]
90029e14:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90029e18:	931a      	str	r3, [sp, #104]	; 0x68
90029e1a:	4654      	mov	r4, sl
90029e1c:	2205      	movs	r2, #5
90029e1e:	f814 1b01 	ldrb.w	r1, [r4], #1
90029e22:	4854      	ldr	r0, [pc, #336]	; (90029f74 <_vfiprintf_r+0x220>)
90029e24:	f7d6 fa5c 	bl	900002e0 <memchr>
90029e28:	9a04      	ldr	r2, [sp, #16]
90029e2a:	b9d8      	cbnz	r0, 90029e64 <_vfiprintf_r+0x110>
90029e2c:	06d1      	lsls	r1, r2, #27
90029e2e:	bf44      	itt	mi
90029e30:	2320      	movmi	r3, #32
90029e32:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029e36:	0713      	lsls	r3, r2, #28
90029e38:	bf44      	itt	mi
90029e3a:	232b      	movmi	r3, #43	; 0x2b
90029e3c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90029e40:	f89a 3000 	ldrb.w	r3, [sl]
90029e44:	2b2a      	cmp	r3, #42	; 0x2a
90029e46:	d015      	beq.n	90029e74 <_vfiprintf_r+0x120>
90029e48:	9a07      	ldr	r2, [sp, #28]
90029e4a:	4654      	mov	r4, sl
90029e4c:	2000      	movs	r0, #0
90029e4e:	f04f 0c0a 	mov.w	ip, #10
90029e52:	4621      	mov	r1, r4
90029e54:	f811 3b01 	ldrb.w	r3, [r1], #1
90029e58:	3b30      	subs	r3, #48	; 0x30
90029e5a:	2b09      	cmp	r3, #9
90029e5c:	d94d      	bls.n	90029efa <_vfiprintf_r+0x1a6>
90029e5e:	b1b0      	cbz	r0, 90029e8e <_vfiprintf_r+0x13a>
90029e60:	9207      	str	r2, [sp, #28]
90029e62:	e014      	b.n	90029e8e <_vfiprintf_r+0x13a>
90029e64:	eba0 0308 	sub.w	r3, r0, r8
90029e68:	fa09 f303 	lsl.w	r3, r9, r3
90029e6c:	4313      	orrs	r3, r2
90029e6e:	9304      	str	r3, [sp, #16]
90029e70:	46a2      	mov	sl, r4
90029e72:	e7d2      	b.n	90029e1a <_vfiprintf_r+0xc6>
90029e74:	9b03      	ldr	r3, [sp, #12]
90029e76:	1d19      	adds	r1, r3, #4
90029e78:	681b      	ldr	r3, [r3, #0]
90029e7a:	9103      	str	r1, [sp, #12]
90029e7c:	2b00      	cmp	r3, #0
90029e7e:	bfbb      	ittet	lt
90029e80:	425b      	neglt	r3, r3
90029e82:	f042 0202 	orrlt.w	r2, r2, #2
90029e86:	9307      	strge	r3, [sp, #28]
90029e88:	9307      	strlt	r3, [sp, #28]
90029e8a:	bfb8      	it	lt
90029e8c:	9204      	strlt	r2, [sp, #16]
90029e8e:	7823      	ldrb	r3, [r4, #0]
90029e90:	2b2e      	cmp	r3, #46	; 0x2e
90029e92:	d10c      	bne.n	90029eae <_vfiprintf_r+0x15a>
90029e94:	7863      	ldrb	r3, [r4, #1]
90029e96:	2b2a      	cmp	r3, #42	; 0x2a
90029e98:	d134      	bne.n	90029f04 <_vfiprintf_r+0x1b0>
90029e9a:	9b03      	ldr	r3, [sp, #12]
90029e9c:	1d1a      	adds	r2, r3, #4
90029e9e:	681b      	ldr	r3, [r3, #0]
90029ea0:	9203      	str	r2, [sp, #12]
90029ea2:	2b00      	cmp	r3, #0
90029ea4:	bfb8      	it	lt
90029ea6:	f04f 33ff 	movlt.w	r3, #4294967295
90029eaa:	3402      	adds	r4, #2
90029eac:	9305      	str	r3, [sp, #20]
90029eae:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90029f84 <_vfiprintf_r+0x230>
90029eb2:	7821      	ldrb	r1, [r4, #0]
90029eb4:	2203      	movs	r2, #3
90029eb6:	4650      	mov	r0, sl
90029eb8:	f7d6 fa12 	bl	900002e0 <memchr>
90029ebc:	b138      	cbz	r0, 90029ece <_vfiprintf_r+0x17a>
90029ebe:	9b04      	ldr	r3, [sp, #16]
90029ec0:	eba0 000a 	sub.w	r0, r0, sl
90029ec4:	2240      	movs	r2, #64	; 0x40
90029ec6:	4082      	lsls	r2, r0
90029ec8:	4313      	orrs	r3, r2
90029eca:	3401      	adds	r4, #1
90029ecc:	9304      	str	r3, [sp, #16]
90029ece:	f814 1b01 	ldrb.w	r1, [r4], #1
90029ed2:	4829      	ldr	r0, [pc, #164]	; (90029f78 <_vfiprintf_r+0x224>)
90029ed4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90029ed8:	2206      	movs	r2, #6
90029eda:	f7d6 fa01 	bl	900002e0 <memchr>
90029ede:	2800      	cmp	r0, #0
90029ee0:	d03f      	beq.n	90029f62 <_vfiprintf_r+0x20e>
90029ee2:	4b26      	ldr	r3, [pc, #152]	; (90029f7c <_vfiprintf_r+0x228>)
90029ee4:	bb1b      	cbnz	r3, 90029f2e <_vfiprintf_r+0x1da>
90029ee6:	9b03      	ldr	r3, [sp, #12]
90029ee8:	3307      	adds	r3, #7
90029eea:	f023 0307 	bic.w	r3, r3, #7
90029eee:	3308      	adds	r3, #8
90029ef0:	9303      	str	r3, [sp, #12]
90029ef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90029ef4:	443b      	add	r3, r7
90029ef6:	9309      	str	r3, [sp, #36]	; 0x24
90029ef8:	e768      	b.n	90029dcc <_vfiprintf_r+0x78>
90029efa:	fb0c 3202 	mla	r2, ip, r2, r3
90029efe:	460c      	mov	r4, r1
90029f00:	2001      	movs	r0, #1
90029f02:	e7a6      	b.n	90029e52 <_vfiprintf_r+0xfe>
90029f04:	2300      	movs	r3, #0
90029f06:	3401      	adds	r4, #1
90029f08:	9305      	str	r3, [sp, #20]
90029f0a:	4619      	mov	r1, r3
90029f0c:	f04f 0c0a 	mov.w	ip, #10
90029f10:	4620      	mov	r0, r4
90029f12:	f810 2b01 	ldrb.w	r2, [r0], #1
90029f16:	3a30      	subs	r2, #48	; 0x30
90029f18:	2a09      	cmp	r2, #9
90029f1a:	d903      	bls.n	90029f24 <_vfiprintf_r+0x1d0>
90029f1c:	2b00      	cmp	r3, #0
90029f1e:	d0c6      	beq.n	90029eae <_vfiprintf_r+0x15a>
90029f20:	9105      	str	r1, [sp, #20]
90029f22:	e7c4      	b.n	90029eae <_vfiprintf_r+0x15a>
90029f24:	fb0c 2101 	mla	r1, ip, r1, r2
90029f28:	4604      	mov	r4, r0
90029f2a:	2301      	movs	r3, #1
90029f2c:	e7f0      	b.n	90029f10 <_vfiprintf_r+0x1bc>
90029f2e:	ab03      	add	r3, sp, #12
90029f30:	9300      	str	r3, [sp, #0]
90029f32:	462a      	mov	r2, r5
90029f34:	4b12      	ldr	r3, [pc, #72]	; (90029f80 <_vfiprintf_r+0x22c>)
90029f36:	a904      	add	r1, sp, #16
90029f38:	4630      	mov	r0, r6
90029f3a:	f3af 8000 	nop.w
90029f3e:	4607      	mov	r7, r0
90029f40:	1c78      	adds	r0, r7, #1
90029f42:	d1d6      	bne.n	90029ef2 <_vfiprintf_r+0x19e>
90029f44:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90029f46:	07d9      	lsls	r1, r3, #31
90029f48:	d405      	bmi.n	90029f56 <_vfiprintf_r+0x202>
90029f4a:	89ab      	ldrh	r3, [r5, #12]
90029f4c:	059a      	lsls	r2, r3, #22
90029f4e:	d402      	bmi.n	90029f56 <_vfiprintf_r+0x202>
90029f50:	6da8      	ldr	r0, [r5, #88]	; 0x58
90029f52:	f7ff fe1c 	bl	90029b8e <__retarget_lock_release_recursive>
90029f56:	89ab      	ldrh	r3, [r5, #12]
90029f58:	065b      	lsls	r3, r3, #25
90029f5a:	f53f af1d 	bmi.w	90029d98 <_vfiprintf_r+0x44>
90029f5e:	9809      	ldr	r0, [sp, #36]	; 0x24
90029f60:	e71c      	b.n	90029d9c <_vfiprintf_r+0x48>
90029f62:	ab03      	add	r3, sp, #12
90029f64:	9300      	str	r3, [sp, #0]
90029f66:	462a      	mov	r2, r5
90029f68:	4b05      	ldr	r3, [pc, #20]	; (90029f80 <_vfiprintf_r+0x22c>)
90029f6a:	a904      	add	r1, sp, #16
90029f6c:	4630      	mov	r0, r6
90029f6e:	f000 f879 	bl	9002a064 <_printf_i>
90029f72:	e7e4      	b.n	90029f3e <_vfiprintf_r+0x1ea>
90029f74:	9002e024 	.word	0x9002e024
90029f78:	9002e02e 	.word	0x9002e02e
90029f7c:	00000000 	.word	0x00000000
90029f80:	90029d2f 	.word	0x90029d2f
90029f84:	9002e02a 	.word	0x9002e02a

90029f88 <_printf_common>:
90029f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029f8c:	4616      	mov	r6, r2
90029f8e:	4699      	mov	r9, r3
90029f90:	688a      	ldr	r2, [r1, #8]
90029f92:	690b      	ldr	r3, [r1, #16]
90029f94:	f8dd 8020 	ldr.w	r8, [sp, #32]
90029f98:	4293      	cmp	r3, r2
90029f9a:	bfb8      	it	lt
90029f9c:	4613      	movlt	r3, r2
90029f9e:	6033      	str	r3, [r6, #0]
90029fa0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90029fa4:	4607      	mov	r7, r0
90029fa6:	460c      	mov	r4, r1
90029fa8:	b10a      	cbz	r2, 90029fae <_printf_common+0x26>
90029faa:	3301      	adds	r3, #1
90029fac:	6033      	str	r3, [r6, #0]
90029fae:	6823      	ldr	r3, [r4, #0]
90029fb0:	0699      	lsls	r1, r3, #26
90029fb2:	bf42      	ittt	mi
90029fb4:	6833      	ldrmi	r3, [r6, #0]
90029fb6:	3302      	addmi	r3, #2
90029fb8:	6033      	strmi	r3, [r6, #0]
90029fba:	6825      	ldr	r5, [r4, #0]
90029fbc:	f015 0506 	ands.w	r5, r5, #6
90029fc0:	d106      	bne.n	90029fd0 <_printf_common+0x48>
90029fc2:	f104 0a19 	add.w	sl, r4, #25
90029fc6:	68e3      	ldr	r3, [r4, #12]
90029fc8:	6832      	ldr	r2, [r6, #0]
90029fca:	1a9b      	subs	r3, r3, r2
90029fcc:	42ab      	cmp	r3, r5
90029fce:	dc26      	bgt.n	9002a01e <_printf_common+0x96>
90029fd0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90029fd4:	1e13      	subs	r3, r2, #0
90029fd6:	6822      	ldr	r2, [r4, #0]
90029fd8:	bf18      	it	ne
90029fda:	2301      	movne	r3, #1
90029fdc:	0692      	lsls	r2, r2, #26
90029fde:	d42b      	bmi.n	9002a038 <_printf_common+0xb0>
90029fe0:	f104 0243 	add.w	r2, r4, #67	; 0x43
90029fe4:	4649      	mov	r1, r9
90029fe6:	4638      	mov	r0, r7
90029fe8:	47c0      	blx	r8
90029fea:	3001      	adds	r0, #1
90029fec:	d01e      	beq.n	9002a02c <_printf_common+0xa4>
90029fee:	6823      	ldr	r3, [r4, #0]
90029ff0:	6922      	ldr	r2, [r4, #16]
90029ff2:	f003 0306 	and.w	r3, r3, #6
90029ff6:	2b04      	cmp	r3, #4
90029ff8:	bf02      	ittt	eq
90029ffa:	68e5      	ldreq	r5, [r4, #12]
90029ffc:	6833      	ldreq	r3, [r6, #0]
90029ffe:	1aed      	subeq	r5, r5, r3
9002a000:	68a3      	ldr	r3, [r4, #8]
9002a002:	bf0c      	ite	eq
9002a004:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002a008:	2500      	movne	r5, #0
9002a00a:	4293      	cmp	r3, r2
9002a00c:	bfc4      	itt	gt
9002a00e:	1a9b      	subgt	r3, r3, r2
9002a010:	18ed      	addgt	r5, r5, r3
9002a012:	2600      	movs	r6, #0
9002a014:	341a      	adds	r4, #26
9002a016:	42b5      	cmp	r5, r6
9002a018:	d11a      	bne.n	9002a050 <_printf_common+0xc8>
9002a01a:	2000      	movs	r0, #0
9002a01c:	e008      	b.n	9002a030 <_printf_common+0xa8>
9002a01e:	2301      	movs	r3, #1
9002a020:	4652      	mov	r2, sl
9002a022:	4649      	mov	r1, r9
9002a024:	4638      	mov	r0, r7
9002a026:	47c0      	blx	r8
9002a028:	3001      	adds	r0, #1
9002a02a:	d103      	bne.n	9002a034 <_printf_common+0xac>
9002a02c:	f04f 30ff 	mov.w	r0, #4294967295
9002a030:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a034:	3501      	adds	r5, #1
9002a036:	e7c6      	b.n	90029fc6 <_printf_common+0x3e>
9002a038:	18e1      	adds	r1, r4, r3
9002a03a:	1c5a      	adds	r2, r3, #1
9002a03c:	2030      	movs	r0, #48	; 0x30
9002a03e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002a042:	4422      	add	r2, r4
9002a044:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9002a048:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9002a04c:	3302      	adds	r3, #2
9002a04e:	e7c7      	b.n	90029fe0 <_printf_common+0x58>
9002a050:	2301      	movs	r3, #1
9002a052:	4622      	mov	r2, r4
9002a054:	4649      	mov	r1, r9
9002a056:	4638      	mov	r0, r7
9002a058:	47c0      	blx	r8
9002a05a:	3001      	adds	r0, #1
9002a05c:	d0e6      	beq.n	9002a02c <_printf_common+0xa4>
9002a05e:	3601      	adds	r6, #1
9002a060:	e7d9      	b.n	9002a016 <_printf_common+0x8e>
	...

9002a064 <_printf_i>:
9002a064:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002a068:	7e0f      	ldrb	r7, [r1, #24]
9002a06a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002a06c:	2f78      	cmp	r7, #120	; 0x78
9002a06e:	4691      	mov	r9, r2
9002a070:	4680      	mov	r8, r0
9002a072:	460c      	mov	r4, r1
9002a074:	469a      	mov	sl, r3
9002a076:	f101 0243 	add.w	r2, r1, #67	; 0x43
9002a07a:	d807      	bhi.n	9002a08c <_printf_i+0x28>
9002a07c:	2f62      	cmp	r7, #98	; 0x62
9002a07e:	d80a      	bhi.n	9002a096 <_printf_i+0x32>
9002a080:	2f00      	cmp	r7, #0
9002a082:	f000 80d4 	beq.w	9002a22e <_printf_i+0x1ca>
9002a086:	2f58      	cmp	r7, #88	; 0x58
9002a088:	f000 80c0 	beq.w	9002a20c <_printf_i+0x1a8>
9002a08c:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002a090:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9002a094:	e03a      	b.n	9002a10c <_printf_i+0xa8>
9002a096:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9002a09a:	2b15      	cmp	r3, #21
9002a09c:	d8f6      	bhi.n	9002a08c <_printf_i+0x28>
9002a09e:	a101      	add	r1, pc, #4	; (adr r1, 9002a0a4 <_printf_i+0x40>)
9002a0a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002a0a4:	9002a0fd 	.word	0x9002a0fd
9002a0a8:	9002a111 	.word	0x9002a111
9002a0ac:	9002a08d 	.word	0x9002a08d
9002a0b0:	9002a08d 	.word	0x9002a08d
9002a0b4:	9002a08d 	.word	0x9002a08d
9002a0b8:	9002a08d 	.word	0x9002a08d
9002a0bc:	9002a111 	.word	0x9002a111
9002a0c0:	9002a08d 	.word	0x9002a08d
9002a0c4:	9002a08d 	.word	0x9002a08d
9002a0c8:	9002a08d 	.word	0x9002a08d
9002a0cc:	9002a08d 	.word	0x9002a08d
9002a0d0:	9002a215 	.word	0x9002a215
9002a0d4:	9002a13d 	.word	0x9002a13d
9002a0d8:	9002a1cf 	.word	0x9002a1cf
9002a0dc:	9002a08d 	.word	0x9002a08d
9002a0e0:	9002a08d 	.word	0x9002a08d
9002a0e4:	9002a237 	.word	0x9002a237
9002a0e8:	9002a08d 	.word	0x9002a08d
9002a0ec:	9002a13d 	.word	0x9002a13d
9002a0f0:	9002a08d 	.word	0x9002a08d
9002a0f4:	9002a08d 	.word	0x9002a08d
9002a0f8:	9002a1d7 	.word	0x9002a1d7
9002a0fc:	682b      	ldr	r3, [r5, #0]
9002a0fe:	1d1a      	adds	r2, r3, #4
9002a100:	681b      	ldr	r3, [r3, #0]
9002a102:	602a      	str	r2, [r5, #0]
9002a104:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002a108:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002a10c:	2301      	movs	r3, #1
9002a10e:	e09f      	b.n	9002a250 <_printf_i+0x1ec>
9002a110:	6820      	ldr	r0, [r4, #0]
9002a112:	682b      	ldr	r3, [r5, #0]
9002a114:	0607      	lsls	r7, r0, #24
9002a116:	f103 0104 	add.w	r1, r3, #4
9002a11a:	6029      	str	r1, [r5, #0]
9002a11c:	d501      	bpl.n	9002a122 <_printf_i+0xbe>
9002a11e:	681e      	ldr	r6, [r3, #0]
9002a120:	e003      	b.n	9002a12a <_printf_i+0xc6>
9002a122:	0646      	lsls	r6, r0, #25
9002a124:	d5fb      	bpl.n	9002a11e <_printf_i+0xba>
9002a126:	f9b3 6000 	ldrsh.w	r6, [r3]
9002a12a:	2e00      	cmp	r6, #0
9002a12c:	da03      	bge.n	9002a136 <_printf_i+0xd2>
9002a12e:	232d      	movs	r3, #45	; 0x2d
9002a130:	4276      	negs	r6, r6
9002a132:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a136:	485a      	ldr	r0, [pc, #360]	; (9002a2a0 <_printf_i+0x23c>)
9002a138:	230a      	movs	r3, #10
9002a13a:	e012      	b.n	9002a162 <_printf_i+0xfe>
9002a13c:	682b      	ldr	r3, [r5, #0]
9002a13e:	6820      	ldr	r0, [r4, #0]
9002a140:	1d19      	adds	r1, r3, #4
9002a142:	6029      	str	r1, [r5, #0]
9002a144:	0605      	lsls	r5, r0, #24
9002a146:	d501      	bpl.n	9002a14c <_printf_i+0xe8>
9002a148:	681e      	ldr	r6, [r3, #0]
9002a14a:	e002      	b.n	9002a152 <_printf_i+0xee>
9002a14c:	0641      	lsls	r1, r0, #25
9002a14e:	d5fb      	bpl.n	9002a148 <_printf_i+0xe4>
9002a150:	881e      	ldrh	r6, [r3, #0]
9002a152:	4853      	ldr	r0, [pc, #332]	; (9002a2a0 <_printf_i+0x23c>)
9002a154:	2f6f      	cmp	r7, #111	; 0x6f
9002a156:	bf0c      	ite	eq
9002a158:	2308      	moveq	r3, #8
9002a15a:	230a      	movne	r3, #10
9002a15c:	2100      	movs	r1, #0
9002a15e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002a162:	6865      	ldr	r5, [r4, #4]
9002a164:	60a5      	str	r5, [r4, #8]
9002a166:	2d00      	cmp	r5, #0
9002a168:	bfa2      	ittt	ge
9002a16a:	6821      	ldrge	r1, [r4, #0]
9002a16c:	f021 0104 	bicge.w	r1, r1, #4
9002a170:	6021      	strge	r1, [r4, #0]
9002a172:	b90e      	cbnz	r6, 9002a178 <_printf_i+0x114>
9002a174:	2d00      	cmp	r5, #0
9002a176:	d04b      	beq.n	9002a210 <_printf_i+0x1ac>
9002a178:	4615      	mov	r5, r2
9002a17a:	fbb6 f1f3 	udiv	r1, r6, r3
9002a17e:	fb03 6711 	mls	r7, r3, r1, r6
9002a182:	5dc7      	ldrb	r7, [r0, r7]
9002a184:	f805 7d01 	strb.w	r7, [r5, #-1]!
9002a188:	4637      	mov	r7, r6
9002a18a:	42bb      	cmp	r3, r7
9002a18c:	460e      	mov	r6, r1
9002a18e:	d9f4      	bls.n	9002a17a <_printf_i+0x116>
9002a190:	2b08      	cmp	r3, #8
9002a192:	d10b      	bne.n	9002a1ac <_printf_i+0x148>
9002a194:	6823      	ldr	r3, [r4, #0]
9002a196:	07de      	lsls	r6, r3, #31
9002a198:	d508      	bpl.n	9002a1ac <_printf_i+0x148>
9002a19a:	6923      	ldr	r3, [r4, #16]
9002a19c:	6861      	ldr	r1, [r4, #4]
9002a19e:	4299      	cmp	r1, r3
9002a1a0:	bfde      	ittt	le
9002a1a2:	2330      	movle	r3, #48	; 0x30
9002a1a4:	f805 3c01 	strble.w	r3, [r5, #-1]
9002a1a8:	f105 35ff 	addle.w	r5, r5, #4294967295
9002a1ac:	1b52      	subs	r2, r2, r5
9002a1ae:	6122      	str	r2, [r4, #16]
9002a1b0:	f8cd a000 	str.w	sl, [sp]
9002a1b4:	464b      	mov	r3, r9
9002a1b6:	aa03      	add	r2, sp, #12
9002a1b8:	4621      	mov	r1, r4
9002a1ba:	4640      	mov	r0, r8
9002a1bc:	f7ff fee4 	bl	90029f88 <_printf_common>
9002a1c0:	3001      	adds	r0, #1
9002a1c2:	d14a      	bne.n	9002a25a <_printf_i+0x1f6>
9002a1c4:	f04f 30ff 	mov.w	r0, #4294967295
9002a1c8:	b004      	add	sp, #16
9002a1ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a1ce:	6823      	ldr	r3, [r4, #0]
9002a1d0:	f043 0320 	orr.w	r3, r3, #32
9002a1d4:	6023      	str	r3, [r4, #0]
9002a1d6:	4833      	ldr	r0, [pc, #204]	; (9002a2a4 <_printf_i+0x240>)
9002a1d8:	2778      	movs	r7, #120	; 0x78
9002a1da:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002a1de:	6823      	ldr	r3, [r4, #0]
9002a1e0:	6829      	ldr	r1, [r5, #0]
9002a1e2:	061f      	lsls	r7, r3, #24
9002a1e4:	f851 6b04 	ldr.w	r6, [r1], #4
9002a1e8:	d402      	bmi.n	9002a1f0 <_printf_i+0x18c>
9002a1ea:	065f      	lsls	r7, r3, #25
9002a1ec:	bf48      	it	mi
9002a1ee:	b2b6      	uxthmi	r6, r6
9002a1f0:	07df      	lsls	r7, r3, #31
9002a1f2:	bf48      	it	mi
9002a1f4:	f043 0320 	orrmi.w	r3, r3, #32
9002a1f8:	6029      	str	r1, [r5, #0]
9002a1fa:	bf48      	it	mi
9002a1fc:	6023      	strmi	r3, [r4, #0]
9002a1fe:	b91e      	cbnz	r6, 9002a208 <_printf_i+0x1a4>
9002a200:	6823      	ldr	r3, [r4, #0]
9002a202:	f023 0320 	bic.w	r3, r3, #32
9002a206:	6023      	str	r3, [r4, #0]
9002a208:	2310      	movs	r3, #16
9002a20a:	e7a7      	b.n	9002a15c <_printf_i+0xf8>
9002a20c:	4824      	ldr	r0, [pc, #144]	; (9002a2a0 <_printf_i+0x23c>)
9002a20e:	e7e4      	b.n	9002a1da <_printf_i+0x176>
9002a210:	4615      	mov	r5, r2
9002a212:	e7bd      	b.n	9002a190 <_printf_i+0x12c>
9002a214:	682b      	ldr	r3, [r5, #0]
9002a216:	6826      	ldr	r6, [r4, #0]
9002a218:	6961      	ldr	r1, [r4, #20]
9002a21a:	1d18      	adds	r0, r3, #4
9002a21c:	6028      	str	r0, [r5, #0]
9002a21e:	0635      	lsls	r5, r6, #24
9002a220:	681b      	ldr	r3, [r3, #0]
9002a222:	d501      	bpl.n	9002a228 <_printf_i+0x1c4>
9002a224:	6019      	str	r1, [r3, #0]
9002a226:	e002      	b.n	9002a22e <_printf_i+0x1ca>
9002a228:	0670      	lsls	r0, r6, #25
9002a22a:	d5fb      	bpl.n	9002a224 <_printf_i+0x1c0>
9002a22c:	8019      	strh	r1, [r3, #0]
9002a22e:	2300      	movs	r3, #0
9002a230:	6123      	str	r3, [r4, #16]
9002a232:	4615      	mov	r5, r2
9002a234:	e7bc      	b.n	9002a1b0 <_printf_i+0x14c>
9002a236:	682b      	ldr	r3, [r5, #0]
9002a238:	1d1a      	adds	r2, r3, #4
9002a23a:	602a      	str	r2, [r5, #0]
9002a23c:	681d      	ldr	r5, [r3, #0]
9002a23e:	6862      	ldr	r2, [r4, #4]
9002a240:	2100      	movs	r1, #0
9002a242:	4628      	mov	r0, r5
9002a244:	f7d6 f84c 	bl	900002e0 <memchr>
9002a248:	b108      	cbz	r0, 9002a24e <_printf_i+0x1ea>
9002a24a:	1b40      	subs	r0, r0, r5
9002a24c:	6060      	str	r0, [r4, #4]
9002a24e:	6863      	ldr	r3, [r4, #4]
9002a250:	6123      	str	r3, [r4, #16]
9002a252:	2300      	movs	r3, #0
9002a254:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002a258:	e7aa      	b.n	9002a1b0 <_printf_i+0x14c>
9002a25a:	6923      	ldr	r3, [r4, #16]
9002a25c:	462a      	mov	r2, r5
9002a25e:	4649      	mov	r1, r9
9002a260:	4640      	mov	r0, r8
9002a262:	47d0      	blx	sl
9002a264:	3001      	adds	r0, #1
9002a266:	d0ad      	beq.n	9002a1c4 <_printf_i+0x160>
9002a268:	6823      	ldr	r3, [r4, #0]
9002a26a:	079b      	lsls	r3, r3, #30
9002a26c:	d413      	bmi.n	9002a296 <_printf_i+0x232>
9002a26e:	68e0      	ldr	r0, [r4, #12]
9002a270:	9b03      	ldr	r3, [sp, #12]
9002a272:	4298      	cmp	r0, r3
9002a274:	bfb8      	it	lt
9002a276:	4618      	movlt	r0, r3
9002a278:	e7a6      	b.n	9002a1c8 <_printf_i+0x164>
9002a27a:	2301      	movs	r3, #1
9002a27c:	4632      	mov	r2, r6
9002a27e:	4649      	mov	r1, r9
9002a280:	4640      	mov	r0, r8
9002a282:	47d0      	blx	sl
9002a284:	3001      	adds	r0, #1
9002a286:	d09d      	beq.n	9002a1c4 <_printf_i+0x160>
9002a288:	3501      	adds	r5, #1
9002a28a:	68e3      	ldr	r3, [r4, #12]
9002a28c:	9903      	ldr	r1, [sp, #12]
9002a28e:	1a5b      	subs	r3, r3, r1
9002a290:	42ab      	cmp	r3, r5
9002a292:	dcf2      	bgt.n	9002a27a <_printf_i+0x216>
9002a294:	e7eb      	b.n	9002a26e <_printf_i+0x20a>
9002a296:	2500      	movs	r5, #0
9002a298:	f104 0619 	add.w	r6, r4, #25
9002a29c:	e7f5      	b.n	9002a28a <_printf_i+0x226>
9002a29e:	bf00      	nop
9002a2a0:	9002e035 	.word	0x9002e035
9002a2a4:	9002e046 	.word	0x9002e046

9002a2a8 <__sflush_r>:
9002a2a8:	898a      	ldrh	r2, [r1, #12]
9002a2aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a2ae:	4605      	mov	r5, r0
9002a2b0:	0710      	lsls	r0, r2, #28
9002a2b2:	460c      	mov	r4, r1
9002a2b4:	d458      	bmi.n	9002a368 <__sflush_r+0xc0>
9002a2b6:	684b      	ldr	r3, [r1, #4]
9002a2b8:	2b00      	cmp	r3, #0
9002a2ba:	dc05      	bgt.n	9002a2c8 <__sflush_r+0x20>
9002a2bc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002a2be:	2b00      	cmp	r3, #0
9002a2c0:	dc02      	bgt.n	9002a2c8 <__sflush_r+0x20>
9002a2c2:	2000      	movs	r0, #0
9002a2c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a2c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a2ca:	2e00      	cmp	r6, #0
9002a2cc:	d0f9      	beq.n	9002a2c2 <__sflush_r+0x1a>
9002a2ce:	2300      	movs	r3, #0
9002a2d0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002a2d4:	682f      	ldr	r7, [r5, #0]
9002a2d6:	6a21      	ldr	r1, [r4, #32]
9002a2d8:	602b      	str	r3, [r5, #0]
9002a2da:	d032      	beq.n	9002a342 <__sflush_r+0x9a>
9002a2dc:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002a2de:	89a3      	ldrh	r3, [r4, #12]
9002a2e0:	075a      	lsls	r2, r3, #29
9002a2e2:	d505      	bpl.n	9002a2f0 <__sflush_r+0x48>
9002a2e4:	6863      	ldr	r3, [r4, #4]
9002a2e6:	1ac0      	subs	r0, r0, r3
9002a2e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002a2ea:	b10b      	cbz	r3, 9002a2f0 <__sflush_r+0x48>
9002a2ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002a2ee:	1ac0      	subs	r0, r0, r3
9002a2f0:	2300      	movs	r3, #0
9002a2f2:	4602      	mov	r2, r0
9002a2f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002a2f6:	6a21      	ldr	r1, [r4, #32]
9002a2f8:	4628      	mov	r0, r5
9002a2fa:	47b0      	blx	r6
9002a2fc:	1c43      	adds	r3, r0, #1
9002a2fe:	89a3      	ldrh	r3, [r4, #12]
9002a300:	d106      	bne.n	9002a310 <__sflush_r+0x68>
9002a302:	6829      	ldr	r1, [r5, #0]
9002a304:	291d      	cmp	r1, #29
9002a306:	d82b      	bhi.n	9002a360 <__sflush_r+0xb8>
9002a308:	4a29      	ldr	r2, [pc, #164]	; (9002a3b0 <__sflush_r+0x108>)
9002a30a:	410a      	asrs	r2, r1
9002a30c:	07d6      	lsls	r6, r2, #31
9002a30e:	d427      	bmi.n	9002a360 <__sflush_r+0xb8>
9002a310:	2200      	movs	r2, #0
9002a312:	6062      	str	r2, [r4, #4]
9002a314:	04d9      	lsls	r1, r3, #19
9002a316:	6922      	ldr	r2, [r4, #16]
9002a318:	6022      	str	r2, [r4, #0]
9002a31a:	d504      	bpl.n	9002a326 <__sflush_r+0x7e>
9002a31c:	1c42      	adds	r2, r0, #1
9002a31e:	d101      	bne.n	9002a324 <__sflush_r+0x7c>
9002a320:	682b      	ldr	r3, [r5, #0]
9002a322:	b903      	cbnz	r3, 9002a326 <__sflush_r+0x7e>
9002a324:	6560      	str	r0, [r4, #84]	; 0x54
9002a326:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002a328:	602f      	str	r7, [r5, #0]
9002a32a:	2900      	cmp	r1, #0
9002a32c:	d0c9      	beq.n	9002a2c2 <__sflush_r+0x1a>
9002a32e:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002a332:	4299      	cmp	r1, r3
9002a334:	d002      	beq.n	9002a33c <__sflush_r+0x94>
9002a336:	4628      	mov	r0, r5
9002a338:	f7ff fc96 	bl	90029c68 <_free_r>
9002a33c:	2000      	movs	r0, #0
9002a33e:	6360      	str	r0, [r4, #52]	; 0x34
9002a340:	e7c0      	b.n	9002a2c4 <__sflush_r+0x1c>
9002a342:	2301      	movs	r3, #1
9002a344:	4628      	mov	r0, r5
9002a346:	47b0      	blx	r6
9002a348:	1c41      	adds	r1, r0, #1
9002a34a:	d1c8      	bne.n	9002a2de <__sflush_r+0x36>
9002a34c:	682b      	ldr	r3, [r5, #0]
9002a34e:	2b00      	cmp	r3, #0
9002a350:	d0c5      	beq.n	9002a2de <__sflush_r+0x36>
9002a352:	2b1d      	cmp	r3, #29
9002a354:	d001      	beq.n	9002a35a <__sflush_r+0xb2>
9002a356:	2b16      	cmp	r3, #22
9002a358:	d101      	bne.n	9002a35e <__sflush_r+0xb6>
9002a35a:	602f      	str	r7, [r5, #0]
9002a35c:	e7b1      	b.n	9002a2c2 <__sflush_r+0x1a>
9002a35e:	89a3      	ldrh	r3, [r4, #12]
9002a360:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a364:	81a3      	strh	r3, [r4, #12]
9002a366:	e7ad      	b.n	9002a2c4 <__sflush_r+0x1c>
9002a368:	690f      	ldr	r7, [r1, #16]
9002a36a:	2f00      	cmp	r7, #0
9002a36c:	d0a9      	beq.n	9002a2c2 <__sflush_r+0x1a>
9002a36e:	0793      	lsls	r3, r2, #30
9002a370:	680e      	ldr	r6, [r1, #0]
9002a372:	bf08      	it	eq
9002a374:	694b      	ldreq	r3, [r1, #20]
9002a376:	600f      	str	r7, [r1, #0]
9002a378:	bf18      	it	ne
9002a37a:	2300      	movne	r3, #0
9002a37c:	eba6 0807 	sub.w	r8, r6, r7
9002a380:	608b      	str	r3, [r1, #8]
9002a382:	f1b8 0f00 	cmp.w	r8, #0
9002a386:	dd9c      	ble.n	9002a2c2 <__sflush_r+0x1a>
9002a388:	6a21      	ldr	r1, [r4, #32]
9002a38a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002a38c:	4643      	mov	r3, r8
9002a38e:	463a      	mov	r2, r7
9002a390:	4628      	mov	r0, r5
9002a392:	47b0      	blx	r6
9002a394:	2800      	cmp	r0, #0
9002a396:	dc06      	bgt.n	9002a3a6 <__sflush_r+0xfe>
9002a398:	89a3      	ldrh	r3, [r4, #12]
9002a39a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002a39e:	81a3      	strh	r3, [r4, #12]
9002a3a0:	f04f 30ff 	mov.w	r0, #4294967295
9002a3a4:	e78e      	b.n	9002a2c4 <__sflush_r+0x1c>
9002a3a6:	4407      	add	r7, r0
9002a3a8:	eba8 0800 	sub.w	r8, r8, r0
9002a3ac:	e7e9      	b.n	9002a382 <__sflush_r+0xda>
9002a3ae:	bf00      	nop
9002a3b0:	dfbffffe 	.word	0xdfbffffe

9002a3b4 <_fflush_r>:
9002a3b4:	b538      	push	{r3, r4, r5, lr}
9002a3b6:	690b      	ldr	r3, [r1, #16]
9002a3b8:	4605      	mov	r5, r0
9002a3ba:	460c      	mov	r4, r1
9002a3bc:	b913      	cbnz	r3, 9002a3c4 <_fflush_r+0x10>
9002a3be:	2500      	movs	r5, #0
9002a3c0:	4628      	mov	r0, r5
9002a3c2:	bd38      	pop	{r3, r4, r5, pc}
9002a3c4:	b118      	cbz	r0, 9002a3ce <_fflush_r+0x1a>
9002a3c6:	6a03      	ldr	r3, [r0, #32]
9002a3c8:	b90b      	cbnz	r3, 9002a3ce <_fflush_r+0x1a>
9002a3ca:	f7ff f9e1 	bl	90029790 <__sinit>
9002a3ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a3d2:	2b00      	cmp	r3, #0
9002a3d4:	d0f3      	beq.n	9002a3be <_fflush_r+0xa>
9002a3d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002a3d8:	07d0      	lsls	r0, r2, #31
9002a3da:	d404      	bmi.n	9002a3e6 <_fflush_r+0x32>
9002a3dc:	0599      	lsls	r1, r3, #22
9002a3de:	d402      	bmi.n	9002a3e6 <_fflush_r+0x32>
9002a3e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a3e2:	f7ff fbd3 	bl	90029b8c <__retarget_lock_acquire_recursive>
9002a3e6:	4628      	mov	r0, r5
9002a3e8:	4621      	mov	r1, r4
9002a3ea:	f7ff ff5d 	bl	9002a2a8 <__sflush_r>
9002a3ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002a3f0:	07da      	lsls	r2, r3, #31
9002a3f2:	4605      	mov	r5, r0
9002a3f4:	d4e4      	bmi.n	9002a3c0 <_fflush_r+0xc>
9002a3f6:	89a3      	ldrh	r3, [r4, #12]
9002a3f8:	059b      	lsls	r3, r3, #22
9002a3fa:	d4e1      	bmi.n	9002a3c0 <_fflush_r+0xc>
9002a3fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002a3fe:	f7ff fbc6 	bl	90029b8e <__retarget_lock_release_recursive>
9002a402:	e7dd      	b.n	9002a3c0 <_fflush_r+0xc>

9002a404 <__swhatbuf_r>:
9002a404:	b570      	push	{r4, r5, r6, lr}
9002a406:	460c      	mov	r4, r1
9002a408:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a40c:	2900      	cmp	r1, #0
9002a40e:	b096      	sub	sp, #88	; 0x58
9002a410:	4615      	mov	r5, r2
9002a412:	461e      	mov	r6, r3
9002a414:	da0d      	bge.n	9002a432 <__swhatbuf_r+0x2e>
9002a416:	89a3      	ldrh	r3, [r4, #12]
9002a418:	f013 0f80 	tst.w	r3, #128	; 0x80
9002a41c:	f04f 0100 	mov.w	r1, #0
9002a420:	bf0c      	ite	eq
9002a422:	f44f 6380 	moveq.w	r3, #1024	; 0x400
9002a426:	2340      	movne	r3, #64	; 0x40
9002a428:	2000      	movs	r0, #0
9002a42a:	6031      	str	r1, [r6, #0]
9002a42c:	602b      	str	r3, [r5, #0]
9002a42e:	b016      	add	sp, #88	; 0x58
9002a430:	bd70      	pop	{r4, r5, r6, pc}
9002a432:	466a      	mov	r2, sp
9002a434:	f000 f848 	bl	9002a4c8 <_fstat_r>
9002a438:	2800      	cmp	r0, #0
9002a43a:	dbec      	blt.n	9002a416 <__swhatbuf_r+0x12>
9002a43c:	9901      	ldr	r1, [sp, #4]
9002a43e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
9002a442:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9002a446:	4259      	negs	r1, r3
9002a448:	4159      	adcs	r1, r3
9002a44a:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002a44e:	e7eb      	b.n	9002a428 <__swhatbuf_r+0x24>

9002a450 <__smakebuf_r>:
9002a450:	898b      	ldrh	r3, [r1, #12]
9002a452:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002a454:	079d      	lsls	r5, r3, #30
9002a456:	4606      	mov	r6, r0
9002a458:	460c      	mov	r4, r1
9002a45a:	d507      	bpl.n	9002a46c <__smakebuf_r+0x1c>
9002a45c:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002a460:	6023      	str	r3, [r4, #0]
9002a462:	6123      	str	r3, [r4, #16]
9002a464:	2301      	movs	r3, #1
9002a466:	6163      	str	r3, [r4, #20]
9002a468:	b002      	add	sp, #8
9002a46a:	bd70      	pop	{r4, r5, r6, pc}
9002a46c:	ab01      	add	r3, sp, #4
9002a46e:	466a      	mov	r2, sp
9002a470:	f7ff ffc8 	bl	9002a404 <__swhatbuf_r>
9002a474:	9900      	ldr	r1, [sp, #0]
9002a476:	4605      	mov	r5, r0
9002a478:	4630      	mov	r0, r6
9002a47a:	f7ff f875 	bl	90029568 <_malloc_r>
9002a47e:	b948      	cbnz	r0, 9002a494 <__smakebuf_r+0x44>
9002a480:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a484:	059a      	lsls	r2, r3, #22
9002a486:	d4ef      	bmi.n	9002a468 <__smakebuf_r+0x18>
9002a488:	f023 0303 	bic.w	r3, r3, #3
9002a48c:	f043 0302 	orr.w	r3, r3, #2
9002a490:	81a3      	strh	r3, [r4, #12]
9002a492:	e7e3      	b.n	9002a45c <__smakebuf_r+0xc>
9002a494:	89a3      	ldrh	r3, [r4, #12]
9002a496:	6020      	str	r0, [r4, #0]
9002a498:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002a49c:	81a3      	strh	r3, [r4, #12]
9002a49e:	9b00      	ldr	r3, [sp, #0]
9002a4a0:	6163      	str	r3, [r4, #20]
9002a4a2:	9b01      	ldr	r3, [sp, #4]
9002a4a4:	6120      	str	r0, [r4, #16]
9002a4a6:	b15b      	cbz	r3, 9002a4c0 <__smakebuf_r+0x70>
9002a4a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a4ac:	4630      	mov	r0, r6
9002a4ae:	f000 f81d 	bl	9002a4ec <_isatty_r>
9002a4b2:	b128      	cbz	r0, 9002a4c0 <__smakebuf_r+0x70>
9002a4b4:	89a3      	ldrh	r3, [r4, #12]
9002a4b6:	f023 0303 	bic.w	r3, r3, #3
9002a4ba:	f043 0301 	orr.w	r3, r3, #1
9002a4be:	81a3      	strh	r3, [r4, #12]
9002a4c0:	89a3      	ldrh	r3, [r4, #12]
9002a4c2:	431d      	orrs	r5, r3
9002a4c4:	81a5      	strh	r5, [r4, #12]
9002a4c6:	e7cf      	b.n	9002a468 <__smakebuf_r+0x18>

9002a4c8 <_fstat_r>:
9002a4c8:	b538      	push	{r3, r4, r5, lr}
9002a4ca:	4d07      	ldr	r5, [pc, #28]	; (9002a4e8 <_fstat_r+0x20>)
9002a4cc:	2300      	movs	r3, #0
9002a4ce:	4604      	mov	r4, r0
9002a4d0:	4608      	mov	r0, r1
9002a4d2:	4611      	mov	r1, r2
9002a4d4:	602b      	str	r3, [r5, #0]
9002a4d6:	f7d9 f82f 	bl	90003538 <_fstat>
9002a4da:	1c43      	adds	r3, r0, #1
9002a4dc:	d102      	bne.n	9002a4e4 <_fstat_r+0x1c>
9002a4de:	682b      	ldr	r3, [r5, #0]
9002a4e0:	b103      	cbz	r3, 9002a4e4 <_fstat_r+0x1c>
9002a4e2:	6023      	str	r3, [r4, #0]
9002a4e4:	bd38      	pop	{r3, r4, r5, pc}
9002a4e6:	bf00      	nop
9002a4e8:	2403a564 	.word	0x2403a564

9002a4ec <_isatty_r>:
9002a4ec:	b538      	push	{r3, r4, r5, lr}
9002a4ee:	4d06      	ldr	r5, [pc, #24]	; (9002a508 <_isatty_r+0x1c>)
9002a4f0:	2300      	movs	r3, #0
9002a4f2:	4604      	mov	r4, r0
9002a4f4:	4608      	mov	r0, r1
9002a4f6:	602b      	str	r3, [r5, #0]
9002a4f8:	f7d9 f824 	bl	90003544 <_isatty>
9002a4fc:	1c43      	adds	r3, r0, #1
9002a4fe:	d102      	bne.n	9002a506 <_isatty_r+0x1a>
9002a500:	682b      	ldr	r3, [r5, #0]
9002a502:	b103      	cbz	r3, 9002a506 <_isatty_r+0x1a>
9002a504:	6023      	str	r3, [r4, #0]
9002a506:	bd38      	pop	{r3, r4, r5, pc}
9002a508:	2403a564 	.word	0x2403a564

9002a50c <_sbrk>:
9002a50c:	4a04      	ldr	r2, [pc, #16]	; (9002a520 <_sbrk+0x14>)
9002a50e:	6811      	ldr	r1, [r2, #0]
9002a510:	4603      	mov	r3, r0
9002a512:	b909      	cbnz	r1, 9002a518 <_sbrk+0xc>
9002a514:	4903      	ldr	r1, [pc, #12]	; (9002a524 <_sbrk+0x18>)
9002a516:	6011      	str	r1, [r2, #0]
9002a518:	6810      	ldr	r0, [r2, #0]
9002a51a:	4403      	add	r3, r0
9002a51c:	6013      	str	r3, [r2, #0]
9002a51e:	4770      	bx	lr
9002a520:	2403a704 	.word	0x2403a704
9002a524:	2403a708 	.word	0x2403a708

9002a528 <_init>:
9002a528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a52a:	bf00      	nop
9002a52c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a52e:	bc08      	pop	{r3}
9002a530:	469e      	mov	lr, r3
9002a532:	4770      	bx	lr

9002a534 <_fini>:
9002a534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a536:	bf00      	nop
9002a538:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a53a:	bc08      	pop	{r3}
9002a53c:	469e      	mov	lr, r3
9002a53e:	4770      	bx	lr
